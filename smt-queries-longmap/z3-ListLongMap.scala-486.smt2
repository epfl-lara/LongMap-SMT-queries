; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!10518 () Bool)

(assert start!10518)

(declare-fun b!82709 () Bool)

(declare-fun b_free!2221 () Bool)

(declare-fun b_next!2221 () Bool)

(assert (=> b!82709 (= b_free!2221 (not b_next!2221))))

(declare-fun tp!8882 () Bool)

(declare-fun b_and!5029 () Bool)

(assert (=> b!82709 (= tp!8882 b_and!5029)))

(declare-fun b!82707 () Bool)

(declare-fun b_free!2223 () Bool)

(declare-fun b_next!2223 () Bool)

(assert (=> b!82707 (= b_free!2223 (not b_next!2223))))

(declare-fun tp!8880 () Bool)

(declare-fun b_and!5031 () Bool)

(assert (=> b!82707 (= tp!8880 b_and!5031)))

(declare-fun b!82697 () Bool)

(declare-fun e!53990 () Bool)

(declare-fun tp_is_empty!2527 () Bool)

(assert (=> b!82697 (= e!53990 tp_is_empty!2527)))

(declare-fun b!82698 () Bool)

(declare-fun e!53992 () Bool)

(assert (=> b!82698 (= e!53992 tp_is_empty!2527)))

(declare-fun b!82699 () Bool)

(declare-datatypes ((Unit!2426 0))(
  ( (Unit!2427) )
))
(declare-fun e!53997 () Unit!2426)

(declare-fun Unit!2428 () Unit!2426)

(assert (=> b!82699 (= e!53997 Unit!2428)))

(declare-fun lt!38736 () Unit!2426)

(declare-datatypes ((V!3017 0))(
  ( (V!3018 (val!1308 Int)) )
))
(declare-datatypes ((array!3991 0))(
  ( (array!3992 (arr!1900 (Array (_ BitVec 32) (_ BitVec 64))) (size!2144 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!920 0))(
  ( (ValueCellFull!920 (v!2621 V!3017)) (EmptyCell!920) )
))
(declare-datatypes ((array!3993 0))(
  ( (array!3994 (arr!1901 (Array (_ BitVec 32) ValueCell!920)) (size!2145 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!748 0))(
  ( (LongMapFixedSize!749 (defaultEntry!2316 Int) (mask!6333 (_ BitVec 32)) (extraKeys!2159 (_ BitVec 32)) (zeroValue!2210 V!3017) (minValue!2210 V!3017) (_size!423 (_ BitVec 32)) (_keys!3983 array!3991) (_values!2299 array!3993) (_vacant!423 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!542 0))(
  ( (Cell!543 (v!2622 LongMapFixedSize!748)) )
))
(declare-datatypes ((LongMap!542 0))(
  ( (LongMap!543 (underlying!282 Cell!542)) )
))
(declare-fun thiss!992 () LongMap!542)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun lemmaListMapContainsThenArrayContainsFrom!64 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) (_ BitVec 32) Int) Unit!2426)

(assert (=> b!82699 (= lt!38736 (lemmaListMapContainsThenArrayContainsFrom!64 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3991 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!82699 (arrayContainsKey!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!38727 () Unit!2426)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3991 (_ BitVec 32) (_ BitVec 32)) Unit!2426)

(assert (=> b!82699 (= lt!38727 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1522 0))(
  ( (Nil!1519) (Cons!1518 (h!2108 (_ BitVec 64)) (t!5213 List!1522)) )
))
(declare-fun arrayNoDuplicates!0 (array!3991 (_ BitVec 32) List!1522) Bool)

(assert (=> b!82699 (arrayNoDuplicates!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) from!355 Nil!1519)))

(declare-fun lt!38737 () Unit!2426)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3991 (_ BitVec 32) (_ BitVec 64) List!1522) Unit!2426)

(assert (=> b!82699 (= lt!38737 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519)))))

(assert (=> b!82699 false))

(declare-fun b!82700 () Bool)

(declare-fun res!42867 () Bool)

(declare-fun e!54003 () Bool)

(assert (=> b!82700 (=> (not res!42867) (not e!54003))))

(declare-fun newMap!16 () LongMapFixedSize!748)

(declare-fun valid!331 (LongMapFixedSize!748) Bool)

(assert (=> b!82700 (= res!42867 (valid!331 newMap!16))))

(declare-fun mapIsEmpty!3367 () Bool)

(declare-fun mapRes!3368 () Bool)

(assert (=> mapIsEmpty!3367 mapRes!3368))

(declare-fun b!82701 () Bool)

(declare-fun e!54001 () Bool)

(declare-fun e!53993 () Bool)

(assert (=> b!82701 (= e!54001 e!53993)))

(declare-fun mapNonEmpty!3367 () Bool)

(declare-fun tp!8879 () Bool)

(assert (=> mapNonEmpty!3367 (= mapRes!3368 (and tp!8879 e!53992))))

(declare-fun mapRest!3367 () (Array (_ BitVec 32) ValueCell!920))

(declare-fun mapKey!3367 () (_ BitVec 32))

(declare-fun mapValue!3368 () ValueCell!920)

(assert (=> mapNonEmpty!3367 (= (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (store mapRest!3367 mapKey!3367 mapValue!3368))))

(declare-fun mapNonEmpty!3368 () Bool)

(declare-fun mapRes!3367 () Bool)

(declare-fun tp!8881 () Bool)

(declare-fun e!53996 () Bool)

(assert (=> mapNonEmpty!3368 (= mapRes!3367 (and tp!8881 e!53996))))

(declare-fun mapValue!3367 () ValueCell!920)

(declare-fun mapKey!3368 () (_ BitVec 32))

(declare-fun mapRest!3368 () (Array (_ BitVec 32) ValueCell!920))

(assert (=> mapNonEmpty!3368 (= (arr!1901 (_values!2299 newMap!16)) (store mapRest!3368 mapKey!3368 mapValue!3367))))

(declare-fun b!82702 () Bool)

(declare-fun e!53986 () Bool)

(declare-fun e!53995 () Bool)

(assert (=> b!82702 (= e!53986 e!53995)))

(declare-fun res!42865 () Bool)

(assert (=> b!82702 (=> (not res!42865) (not e!53995))))

(assert (=> b!82702 (= res!42865 (and (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!38725 () V!3017)

(declare-fun get!1193 (ValueCell!920 V!3017) V!3017)

(declare-fun dynLambda!341 (Int (_ BitVec 64)) V!3017)

(assert (=> b!82702 (= lt!38725 (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82703 () Bool)

(declare-fun e!53991 () Bool)

(assert (=> b!82703 (= e!53991 tp_is_empty!2527)))

(declare-fun b!82704 () Bool)

(declare-fun Unit!2429 () Unit!2426)

(assert (=> b!82704 (= e!53997 Unit!2429)))

(declare-fun mapIsEmpty!3368 () Bool)

(assert (=> mapIsEmpty!3368 mapRes!3367))

(declare-fun b!82705 () Bool)

(assert (=> b!82705 (= e!54003 e!53986)))

(declare-fun res!42869 () Bool)

(assert (=> b!82705 (=> (not res!42869) (not e!53986))))

(declare-datatypes ((tuple2!2200 0))(
  ( (tuple2!2201 (_1!1111 (_ BitVec 64)) (_2!1111 V!3017)) )
))
(declare-datatypes ((List!1523 0))(
  ( (Nil!1520) (Cons!1519 (h!2109 tuple2!2200) (t!5214 List!1523)) )
))
(declare-datatypes ((ListLongMap!1447 0))(
  ( (ListLongMap!1448 (toList!739 List!1523)) )
))
(declare-fun lt!38740 () ListLongMap!1447)

(declare-fun lt!38733 () ListLongMap!1447)

(assert (=> b!82705 (= res!42869 (= lt!38740 lt!38733))))

(declare-fun map!1183 (LongMapFixedSize!748) ListLongMap!1447)

(assert (=> b!82705 (= lt!38733 (map!1183 newMap!16))))

(declare-fun getCurrentListMap!425 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) Int) ListLongMap!1447)

(assert (=> b!82705 (= lt!38740 (getCurrentListMap!425 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun b!82706 () Bool)

(declare-fun res!42862 () Bool)

(assert (=> b!82706 (=> (not res!42862) (not e!54003))))

(assert (=> b!82706 (= res!42862 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun e!54002 () Bool)

(declare-fun e!53994 () Bool)

(declare-fun array_inv!1193 (array!3991) Bool)

(declare-fun array_inv!1194 (array!3993) Bool)

(assert (=> b!82707 (= e!54002 (and tp!8880 tp_is_empty!2527 (array_inv!1193 (_keys!3983 newMap!16)) (array_inv!1194 (_values!2299 newMap!16)) e!53994))))

(declare-fun b!82708 () Bool)

(declare-fun e!53989 () Bool)

(assert (=> b!82708 (= e!53989 (and e!53990 mapRes!3368))))

(declare-fun condMapEmpty!3367 () Bool)

(declare-fun mapDefault!3368 () ValueCell!920)

(assert (=> b!82708 (= condMapEmpty!3367 (= (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3368)))))

(assert (=> b!82709 (= e!53993 (and tp!8882 tp_is_empty!2527 (array_inv!1193 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (array_inv!1194 (_values!2299 (v!2622 (underlying!282 thiss!992)))) e!53989))))

(declare-fun b!82710 () Bool)

(declare-fun e!53987 () Bool)

(declare-fun e!53998 () Bool)

(assert (=> b!82710 (= e!53987 (not e!53998))))

(declare-fun res!42864 () Bool)

(assert (=> b!82710 (=> res!42864 e!53998)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!82710 (= res!42864 (not (validMask!0 (mask!6333 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun lt!38729 () tuple2!2200)

(declare-fun lt!38730 () ListLongMap!1447)

(declare-fun lt!38728 () ListLongMap!1447)

(declare-fun lt!38742 () tuple2!2200)

(declare-fun +!107 (ListLongMap!1447 tuple2!2200) ListLongMap!1447)

(assert (=> b!82710 (= (+!107 lt!38730 lt!38742) (+!107 (+!107 lt!38728 lt!38742) lt!38729))))

(assert (=> b!82710 (= lt!38742 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun lt!38734 () Unit!2426)

(declare-fun addCommutativeForDiffKeys!26 (ListLongMap!1447 (_ BitVec 64) V!3017 (_ BitVec 64) V!3017) Unit!2426)

(assert (=> b!82710 (= lt!38734 (addCommutativeForDiffKeys!26 lt!38728 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun lt!38739 () ListLongMap!1447)

(assert (=> b!82710 (= lt!38739 lt!38730)))

(assert (=> b!82710 (= lt!38730 (+!107 lt!38728 lt!38729))))

(declare-fun lt!38731 () ListLongMap!1447)

(declare-fun lt!38738 () tuple2!2200)

(assert (=> b!82710 (= lt!38739 (+!107 lt!38731 lt!38738))))

(declare-fun lt!38741 () ListLongMap!1447)

(assert (=> b!82710 (= lt!38728 (+!107 lt!38741 lt!38738))))

(assert (=> b!82710 (= lt!38738 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))

(assert (=> b!82710 (= lt!38731 (+!107 lt!38741 lt!38729))))

(assert (=> b!82710 (= lt!38729 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))

(declare-fun lt!38735 () Unit!2426)

(assert (=> b!82710 (= lt!38735 (addCommutativeForDiffKeys!26 lt!38741 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!71 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) Int) ListLongMap!1447)

(assert (=> b!82710 (= lt!38741 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun b!82711 () Bool)

(assert (=> b!82711 (= e!53998 (or (not (= (size!2145 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6333 (v!2622 (underlying!282 thiss!992)))))) (not (= (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (size!2145 (_values!2299 (v!2622 (underlying!282 thiss!992)))))) (bvslt (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000000) (bvsge (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!82712 () Bool)

(assert (=> b!82712 (= e!53994 (and e!53991 mapRes!3367))))

(declare-fun condMapEmpty!3368 () Bool)

(declare-fun mapDefault!3367 () ValueCell!920)

(assert (=> b!82712 (= condMapEmpty!3368 (= (arr!1901 (_values!2299 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3367)))))

(declare-fun res!42863 () Bool)

(assert (=> start!10518 (=> (not res!42863) (not e!54003))))

(declare-fun valid!332 (LongMap!542) Bool)

(assert (=> start!10518 (= res!42863 (valid!332 thiss!992))))

(assert (=> start!10518 e!54003))

(declare-fun e!53988 () Bool)

(assert (=> start!10518 e!53988))

(assert (=> start!10518 true))

(assert (=> start!10518 e!54002))

(declare-fun b!82713 () Bool)

(assert (=> b!82713 (= e!53988 e!54001)))

(declare-fun b!82714 () Bool)

(declare-fun res!42866 () Bool)

(assert (=> b!82714 (=> (not res!42866) (not e!54003))))

(assert (=> b!82714 (= res!42866 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6333 newMap!16)) (_size!423 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun b!82715 () Bool)

(assert (=> b!82715 (= e!53995 e!53987)))

(declare-fun res!42868 () Bool)

(assert (=> b!82715 (=> (not res!42868) (not e!53987))))

(declare-datatypes ((tuple2!2202 0))(
  ( (tuple2!2203 (_1!1112 Bool) (_2!1112 LongMapFixedSize!748)) )
))
(declare-fun lt!38732 () tuple2!2202)

(assert (=> b!82715 (= res!42868 (and (_1!1112 lt!38732) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!38726 () Unit!2426)

(assert (=> b!82715 (= lt!38726 e!53997)))

(declare-fun c!13147 () Bool)

(declare-fun contains!749 (ListLongMap!1447 (_ BitVec 64)) Bool)

(assert (=> b!82715 (= c!13147 (contains!749 lt!38733 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun update!121 (LongMapFixedSize!748 (_ BitVec 64) V!3017) tuple2!2202)

(assert (=> b!82715 (= lt!38732 (update!121 newMap!16 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))

(declare-fun b!82716 () Bool)

(assert (=> b!82716 (= e!53996 tp_is_empty!2527)))

(assert (= (and start!10518 res!42863) b!82706))

(assert (= (and b!82706 res!42862) b!82700))

(assert (= (and b!82700 res!42867) b!82714))

(assert (= (and b!82714 res!42866) b!82705))

(assert (= (and b!82705 res!42869) b!82702))

(assert (= (and b!82702 res!42865) b!82715))

(assert (= (and b!82715 c!13147) b!82699))

(assert (= (and b!82715 (not c!13147)) b!82704))

(assert (= (and b!82715 res!42868) b!82710))

(assert (= (and b!82710 (not res!42864)) b!82711))

(assert (= (and b!82708 condMapEmpty!3367) mapIsEmpty!3367))

(assert (= (and b!82708 (not condMapEmpty!3367)) mapNonEmpty!3367))

(get-info :version)

(assert (= (and mapNonEmpty!3367 ((_ is ValueCellFull!920) mapValue!3368)) b!82698))

(assert (= (and b!82708 ((_ is ValueCellFull!920) mapDefault!3368)) b!82697))

(assert (= b!82709 b!82708))

(assert (= b!82701 b!82709))

(assert (= b!82713 b!82701))

(assert (= start!10518 b!82713))

(assert (= (and b!82712 condMapEmpty!3368) mapIsEmpty!3368))

(assert (= (and b!82712 (not condMapEmpty!3368)) mapNonEmpty!3368))

(assert (= (and mapNonEmpty!3368 ((_ is ValueCellFull!920) mapValue!3367)) b!82716))

(assert (= (and b!82712 ((_ is ValueCellFull!920) mapDefault!3367)) b!82703))

(assert (= b!82707 b!82712))

(assert (= start!10518 b!82707))

(declare-fun b_lambda!3683 () Bool)

(assert (=> (not b_lambda!3683) (not b!82702)))

(declare-fun t!5210 () Bool)

(declare-fun tb!1661 () Bool)

(assert (=> (and b!82709 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))) t!5210) tb!1661))

(declare-fun result!2875 () Bool)

(assert (=> tb!1661 (= result!2875 tp_is_empty!2527)))

(assert (=> b!82702 t!5210))

(declare-fun b_and!5033 () Bool)

(assert (= b_and!5029 (and (=> t!5210 result!2875) b_and!5033)))

(declare-fun tb!1663 () Bool)

(declare-fun t!5212 () Bool)

(assert (=> (and b!82707 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))) t!5212) tb!1663))

(declare-fun result!2879 () Bool)

(assert (= result!2879 result!2875))

(assert (=> b!82702 t!5212))

(declare-fun b_and!5035 () Bool)

(assert (= b_and!5031 (and (=> t!5212 result!2879) b_and!5035)))

(declare-fun m!85559 () Bool)

(assert (=> mapNonEmpty!3367 m!85559))

(declare-fun m!85561 () Bool)

(assert (=> b!82710 m!85561))

(declare-fun m!85563 () Bool)

(assert (=> b!82710 m!85563))

(declare-fun m!85565 () Bool)

(assert (=> b!82710 m!85565))

(declare-fun m!85567 () Bool)

(assert (=> b!82710 m!85567))

(assert (=> b!82710 m!85563))

(declare-fun m!85569 () Bool)

(assert (=> b!82710 m!85569))

(declare-fun m!85571 () Bool)

(assert (=> b!82710 m!85571))

(declare-fun m!85573 () Bool)

(assert (=> b!82710 m!85573))

(declare-fun m!85575 () Bool)

(assert (=> b!82710 m!85575))

(declare-fun m!85577 () Bool)

(assert (=> b!82710 m!85577))

(assert (=> b!82710 m!85563))

(declare-fun m!85579 () Bool)

(assert (=> b!82710 m!85579))

(declare-fun m!85581 () Bool)

(assert (=> b!82710 m!85581))

(assert (=> b!82710 m!85579))

(declare-fun m!85583 () Bool)

(assert (=> b!82710 m!85583))

(assert (=> b!82702 m!85563))

(declare-fun m!85585 () Bool)

(assert (=> b!82702 m!85585))

(declare-fun m!85587 () Bool)

(assert (=> b!82702 m!85587))

(assert (=> b!82702 m!85585))

(assert (=> b!82702 m!85587))

(declare-fun m!85589 () Bool)

(assert (=> b!82702 m!85589))

(declare-fun m!85591 () Bool)

(assert (=> b!82700 m!85591))

(declare-fun m!85593 () Bool)

(assert (=> b!82699 m!85593))

(declare-fun m!85595 () Bool)

(assert (=> b!82699 m!85595))

(assert (=> b!82699 m!85563))

(declare-fun m!85597 () Bool)

(assert (=> b!82699 m!85597))

(assert (=> b!82699 m!85563))

(assert (=> b!82699 m!85563))

(declare-fun m!85599 () Bool)

(assert (=> b!82699 m!85599))

(assert (=> b!82699 m!85563))

(declare-fun m!85601 () Bool)

(assert (=> b!82699 m!85601))

(declare-fun m!85603 () Bool)

(assert (=> b!82705 m!85603))

(declare-fun m!85605 () Bool)

(assert (=> b!82705 m!85605))

(declare-fun m!85607 () Bool)

(assert (=> start!10518 m!85607))

(declare-fun m!85609 () Bool)

(assert (=> b!82707 m!85609))

(declare-fun m!85611 () Bool)

(assert (=> b!82707 m!85611))

(declare-fun m!85613 () Bool)

(assert (=> mapNonEmpty!3368 m!85613))

(declare-fun m!85615 () Bool)

(assert (=> b!82709 m!85615))

(declare-fun m!85617 () Bool)

(assert (=> b!82709 m!85617))

(assert (=> b!82715 m!85563))

(assert (=> b!82715 m!85563))

(declare-fun m!85619 () Bool)

(assert (=> b!82715 m!85619))

(assert (=> b!82715 m!85563))

(declare-fun m!85621 () Bool)

(assert (=> b!82715 m!85621))

(check-sat (not mapNonEmpty!3368) (not b!82710) (not b!82699) (not b_next!2221) (not b!82705) (not start!10518) (not b!82702) (not b!82709) b_and!5035 (not b!82700) b_and!5033 tp_is_empty!2527 (not b_next!2223) (not b!82715) (not b_lambda!3683) (not b!82707) (not mapNonEmpty!3367))
(check-sat b_and!5033 b_and!5035 (not b_next!2221) (not b_next!2223))
(get-model)

(declare-fun b_lambda!3689 () Bool)

(assert (= b_lambda!3683 (or (and b!82709 b_free!2221) (and b!82707 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))))) b_lambda!3689)))

(check-sat (not mapNonEmpty!3368) (not b!82710) (not b!82699) (not b_next!2221) (not b!82705) (not start!10518) (not b!82702) b_and!5035 (not b!82700) b_and!5033 tp_is_empty!2527 (not b_next!2223) (not b!82715) (not b!82709) (not b_lambda!3689) (not b!82707) (not mapNonEmpty!3367))
(check-sat b_and!5033 b_and!5035 (not b_next!2221) (not b_next!2223))
(get-model)

(declare-fun d!20839 () Bool)

(assert (=> d!20839 (= (array_inv!1193 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvsge (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!82709 d!20839))

(declare-fun d!20841 () Bool)

(assert (=> d!20841 (= (array_inv!1194 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvsge (size!2145 (_values!2299 (v!2622 (underlying!282 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!82709 d!20841))

(declare-fun d!20843 () Bool)

(assert (=> d!20843 (= (array_inv!1193 (_keys!3983 newMap!16)) (bvsge (size!2144 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!82707 d!20843))

(declare-fun d!20845 () Bool)

(assert (=> d!20845 (= (array_inv!1194 (_values!2299 newMap!16)) (bvsge (size!2145 (_values!2299 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!82707 d!20845))

(declare-fun d!20847 () Bool)

(declare-fun c!13156 () Bool)

(assert (=> d!20847 (= c!13156 ((_ is ValueCellFull!920) (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun e!54114 () V!3017)

(assert (=> d!20847 (= (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!54114)))

(declare-fun b!82847 () Bool)

(declare-fun get!1194 (ValueCell!920 V!3017) V!3017)

(assert (=> b!82847 (= e!54114 (get!1194 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82848 () Bool)

(declare-fun get!1195 (ValueCell!920 V!3017) V!3017)

(assert (=> b!82848 (= e!54114 (get!1195 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20847 c!13156) b!82847))

(assert (= (and d!20847 (not c!13156)) b!82848))

(assert (=> b!82847 m!85585))

(assert (=> b!82847 m!85587))

(declare-fun m!85751 () Bool)

(assert (=> b!82847 m!85751))

(assert (=> b!82848 m!85585))

(assert (=> b!82848 m!85587))

(declare-fun m!85753 () Bool)

(assert (=> b!82848 m!85753))

(assert (=> b!82702 d!20847))

(declare-fun d!20849 () Bool)

(declare-fun res!42924 () Bool)

(declare-fun e!54117 () Bool)

(assert (=> d!20849 (=> (not res!42924) (not e!54117))))

(declare-fun simpleValid!57 (LongMapFixedSize!748) Bool)

(assert (=> d!20849 (= res!42924 (simpleValid!57 newMap!16))))

(assert (=> d!20849 (= (valid!331 newMap!16) e!54117)))

(declare-fun b!82855 () Bool)

(declare-fun res!42925 () Bool)

(assert (=> b!82855 (=> (not res!42925) (not e!54117))))

(declare-fun arrayCountValidKeys!0 (array!3991 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!82855 (= res!42925 (= (arrayCountValidKeys!0 (_keys!3983 newMap!16) #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) (_size!423 newMap!16)))))

(declare-fun b!82856 () Bool)

(declare-fun res!42926 () Bool)

(assert (=> b!82856 (=> (not res!42926) (not e!54117))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3991 (_ BitVec 32)) Bool)

(assert (=> b!82856 (= res!42926 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(declare-fun b!82857 () Bool)

(assert (=> b!82857 (= e!54117 (arrayNoDuplicates!0 (_keys!3983 newMap!16) #b00000000000000000000000000000000 Nil!1519))))

(assert (= (and d!20849 res!42924) b!82855))

(assert (= (and b!82855 res!42925) b!82856))

(assert (= (and b!82856 res!42926) b!82857))

(declare-fun m!85755 () Bool)

(assert (=> d!20849 m!85755))

(declare-fun m!85757 () Bool)

(assert (=> b!82855 m!85757))

(declare-fun m!85759 () Bool)

(assert (=> b!82856 m!85759))

(declare-fun m!85761 () Bool)

(assert (=> b!82857 m!85761))

(assert (=> b!82700 d!20849))

(declare-fun d!20851 () Bool)

(assert (=> d!20851 (not (arrayContainsKey!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!38853 () Unit!2426)

(declare-fun choose!68 (array!3991 (_ BitVec 32) (_ BitVec 64) List!1522) Unit!2426)

(assert (=> d!20851 (= lt!38853 (choose!68 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519)))))

(assert (=> d!20851 (bvslt (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!20851 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519)) lt!38853)))

(declare-fun bs!3505 () Bool)

(assert (= bs!3505 d!20851))

(assert (=> bs!3505 m!85563))

(assert (=> bs!3505 m!85599))

(assert (=> bs!3505 m!85563))

(declare-fun m!85763 () Bool)

(assert (=> bs!3505 m!85763))

(assert (=> b!82699 d!20851))

(declare-fun d!20853 () Bool)

(assert (=> d!20853 (arrayNoDuplicates!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) from!355 Nil!1519)))

(declare-fun lt!38856 () Unit!2426)

(declare-fun choose!39 (array!3991 (_ BitVec 32) (_ BitVec 32)) Unit!2426)

(assert (=> d!20853 (= lt!38856 (choose!39 (_keys!3983 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!20853 (bvslt (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!20853 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000000 from!355) lt!38856)))

(declare-fun bs!3506 () Bool)

(assert (= bs!3506 d!20853))

(assert (=> bs!3506 m!85595))

(declare-fun m!85765 () Bool)

(assert (=> bs!3506 m!85765))

(assert (=> b!82699 d!20853))

(declare-fun d!20855 () Bool)

(declare-fun res!42931 () Bool)

(declare-fun e!54122 () Bool)

(assert (=> d!20855 (=> res!42931 e!54122)))

(assert (=> d!20855 (= res!42931 (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> d!20855 (= (arrayContainsKey!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!54122)))

(declare-fun b!82862 () Bool)

(declare-fun e!54123 () Bool)

(assert (=> b!82862 (= e!54122 e!54123)))

(declare-fun res!42932 () Bool)

(assert (=> b!82862 (=> (not res!42932) (not e!54123))))

(assert (=> b!82862 (= res!42932 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!82863 () Bool)

(assert (=> b!82863 (= e!54123 (arrayContainsKey!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!20855 (not res!42931)) b!82862))

(assert (= (and b!82862 res!42932) b!82863))

(declare-fun m!85767 () Bool)

(assert (=> d!20855 m!85767))

(assert (=> b!82863 m!85563))

(declare-fun m!85769 () Bool)

(assert (=> b!82863 m!85769))

(assert (=> b!82699 d!20855))

(declare-fun d!20857 () Bool)

(declare-fun e!54126 () Bool)

(assert (=> d!20857 e!54126))

(declare-fun c!13159 () Bool)

(assert (=> d!20857 (= c!13159 (and (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!38859 () Unit!2426)

(declare-fun choose!490 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) (_ BitVec 32) Int) Unit!2426)

(assert (=> d!20857 (= lt!38859 (choose!490 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))))))

(assert (=> d!20857 (validMask!0 (mask!6333 (v!2622 (underlying!282 thiss!992))))))

(assert (=> d!20857 (= (lemmaListMapContainsThenArrayContainsFrom!64 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))) lt!38859)))

(declare-fun b!82868 () Bool)

(assert (=> b!82868 (= e!54126 (arrayContainsKey!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!82869 () Bool)

(assert (=> b!82869 (= e!54126 (ite (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!20857 c!13159) b!82868))

(assert (= (and d!20857 (not c!13159)) b!82869))

(assert (=> d!20857 m!85563))

(declare-fun m!85771 () Bool)

(assert (=> d!20857 m!85771))

(assert (=> d!20857 m!85577))

(assert (=> b!82868 m!85563))

(assert (=> b!82868 m!85599))

(assert (=> b!82699 d!20857))

(declare-fun bm!7707 () Bool)

(declare-fun c!13162 () Bool)

(declare-fun call!7710 () Bool)

(assert (=> bm!7707 (= call!7710 (arrayNoDuplicates!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519)))))

(declare-fun d!20859 () Bool)

(declare-fun res!42941 () Bool)

(declare-fun e!54136 () Bool)

(assert (=> d!20859 (=> res!42941 e!54136)))

(assert (=> d!20859 (= res!42941 (bvsge from!355 (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(assert (=> d!20859 (= (arrayNoDuplicates!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) from!355 Nil!1519) e!54136)))

(declare-fun b!82880 () Bool)

(declare-fun e!54137 () Bool)

(assert (=> b!82880 (= e!54137 call!7710)))

(declare-fun b!82881 () Bool)

(assert (=> b!82881 (= e!54137 call!7710)))

(declare-fun b!82882 () Bool)

(declare-fun e!54138 () Bool)

(declare-fun contains!750 (List!1522 (_ BitVec 64)) Bool)

(assert (=> b!82882 (= e!54138 (contains!750 Nil!1519 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun b!82883 () Bool)

(declare-fun e!54135 () Bool)

(assert (=> b!82883 (= e!54135 e!54137)))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!82883 (= c!13162 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun b!82884 () Bool)

(assert (=> b!82884 (= e!54136 e!54135)))

(declare-fun res!42940 () Bool)

(assert (=> b!82884 (=> (not res!42940) (not e!54135))))

(assert (=> b!82884 (= res!42940 (not e!54138))))

(declare-fun res!42939 () Bool)

(assert (=> b!82884 (=> (not res!42939) (not e!54138))))

(assert (=> b!82884 (= res!42939 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (= (and d!20859 (not res!42941)) b!82884))

(assert (= (and b!82884 res!42939) b!82882))

(assert (= (and b!82884 res!42940) b!82883))

(assert (= (and b!82883 c!13162) b!82880))

(assert (= (and b!82883 (not c!13162)) b!82881))

(assert (= (or b!82880 b!82881) bm!7707))

(assert (=> bm!7707 m!85563))

(declare-fun m!85773 () Bool)

(assert (=> bm!7707 m!85773))

(assert (=> b!82882 m!85563))

(assert (=> b!82882 m!85563))

(declare-fun m!85775 () Bool)

(assert (=> b!82882 m!85775))

(assert (=> b!82883 m!85563))

(assert (=> b!82883 m!85563))

(declare-fun m!85777 () Bool)

(assert (=> b!82883 m!85777))

(assert (=> b!82884 m!85563))

(assert (=> b!82884 m!85563))

(assert (=> b!82884 m!85777))

(assert (=> b!82699 d!20859))

(declare-fun d!20861 () Bool)

(assert (=> d!20861 (= (map!1183 newMap!16) (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun bs!3507 () Bool)

(assert (= bs!3507 d!20861))

(declare-fun m!85779 () Bool)

(assert (=> bs!3507 m!85779))

(assert (=> b!82705 d!20861))

(declare-fun b!82927 () Bool)

(declare-fun e!54176 () Bool)

(declare-fun call!7729 () Bool)

(assert (=> b!82927 (= e!54176 (not call!7729))))

(declare-fun b!82928 () Bool)

(declare-fun e!54170 () Bool)

(declare-fun e!54174 () Bool)

(assert (=> b!82928 (= e!54170 e!54174)))

(declare-fun c!13180 () Bool)

(assert (=> b!82928 (= c!13180 (not (= (bvand (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun lt!38907 () ListLongMap!1447)

(declare-fun b!82929 () Bool)

(declare-fun e!54165 () Bool)

(declare-fun apply!81 (ListLongMap!1447 (_ BitVec 64)) V!3017)

(assert (=> b!82929 (= e!54165 (= (apply!81 lt!38907 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!82929 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2145 (_values!2299 (v!2622 (underlying!282 thiss!992))))))))

(assert (=> b!82929 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!82930 () Bool)

(declare-fun e!54172 () ListLongMap!1447)

(declare-fun call!7731 () ListLongMap!1447)

(assert (=> b!82930 (= e!54172 call!7731)))

(declare-fun call!7727 () ListLongMap!1447)

(declare-fun call!7726 () ListLongMap!1447)

(declare-fun call!7725 () ListLongMap!1447)

(declare-fun c!13175 () Bool)

(declare-fun bm!7722 () Bool)

(declare-fun call!7730 () ListLongMap!1447)

(declare-fun c!13178 () Bool)

(assert (=> bm!7722 (= call!7730 (+!107 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726)) (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!82931 () Bool)

(declare-fun e!54167 () Bool)

(assert (=> b!82931 (= e!54167 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!82932 () Bool)

(declare-fun res!42967 () Bool)

(assert (=> b!82932 (=> (not res!42967) (not e!54170))))

(declare-fun e!54166 () Bool)

(assert (=> b!82932 (= res!42967 e!54166)))

(declare-fun res!42968 () Bool)

(assert (=> b!82932 (=> res!42968 e!54166)))

(assert (=> b!82932 (= res!42968 (not e!54167))))

(declare-fun res!42960 () Bool)

(assert (=> b!82932 (=> (not res!42960) (not e!54167))))

(assert (=> b!82932 (= res!42960 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!82933 () Bool)

(declare-fun call!7728 () Bool)

(assert (=> b!82933 (= e!54174 (not call!7728))))

(declare-fun b!82934 () Bool)

(declare-fun e!54175 () Bool)

(assert (=> b!82934 (= e!54176 e!54175)))

(declare-fun res!42961 () Bool)

(assert (=> b!82934 (= res!42961 call!7729)))

(assert (=> b!82934 (=> (not res!42961) (not e!54175))))

(declare-fun bm!7723 () Bool)

(assert (=> bm!7723 (= call!7728 (contains!749 lt!38907 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82935 () Bool)

(declare-fun res!42963 () Bool)

(assert (=> b!82935 (=> (not res!42963) (not e!54170))))

(assert (=> b!82935 (= res!42963 e!54176)))

(declare-fun c!13177 () Bool)

(assert (=> b!82935 (= c!13177 (not (= (bvand (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!20863 () Bool)

(assert (=> d!20863 e!54170))

(declare-fun res!42966 () Bool)

(assert (=> d!20863 (=> (not res!42966) (not e!54170))))

(assert (=> d!20863 (= res!42966 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun lt!38920 () ListLongMap!1447)

(assert (=> d!20863 (= lt!38907 lt!38920)))

(declare-fun lt!38917 () Unit!2426)

(declare-fun e!54171 () Unit!2426)

(assert (=> d!20863 (= lt!38917 e!54171)))

(declare-fun c!13176 () Bool)

(declare-fun e!54168 () Bool)

(assert (=> d!20863 (= c!13176 e!54168)))

(declare-fun res!42964 () Bool)

(assert (=> d!20863 (=> (not res!42964) (not e!54168))))

(assert (=> d!20863 (= res!42964 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun e!54177 () ListLongMap!1447)

(assert (=> d!20863 (= lt!38920 e!54177)))

(assert (=> d!20863 (= c!13175 (and (not (= (bvand (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20863 (validMask!0 (mask!6333 (v!2622 (underlying!282 thiss!992))))))

(assert (=> d!20863 (= (getCurrentListMap!425 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))) lt!38907)))

(declare-fun b!82936 () Bool)

(assert (=> b!82936 (= e!54175 (= (apply!81 lt!38907 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun b!82937 () Bool)

(declare-fun e!54173 () Bool)

(assert (=> b!82937 (= e!54174 e!54173)))

(declare-fun res!42962 () Bool)

(assert (=> b!82937 (= res!42962 call!7728)))

(assert (=> b!82937 (=> (not res!42962) (not e!54173))))

(declare-fun b!82938 () Bool)

(assert (=> b!82938 (= e!54168 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!82939 () Bool)

(assert (=> b!82939 (= e!54177 e!54172)))

(assert (=> b!82939 (= c!13178 (and (not (= (bvand (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7724 () Bool)

(assert (=> bm!7724 (= call!7727 call!7725)))

(declare-fun b!82940 () Bool)

(declare-fun lt!38919 () Unit!2426)

(assert (=> b!82940 (= e!54171 lt!38919)))

(declare-fun lt!38925 () ListLongMap!1447)

(assert (=> b!82940 (= lt!38925 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun lt!38922 () (_ BitVec 64))

(assert (=> b!82940 (= lt!38922 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38923 () (_ BitVec 64))

(assert (=> b!82940 (= lt!38923 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!38905 () Unit!2426)

(declare-fun addStillContains!57 (ListLongMap!1447 (_ BitVec 64) V!3017 (_ BitVec 64)) Unit!2426)

(assert (=> b!82940 (= lt!38905 (addStillContains!57 lt!38925 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38923))))

(assert (=> b!82940 (contains!749 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38923)))

(declare-fun lt!38924 () Unit!2426)

(assert (=> b!82940 (= lt!38924 lt!38905)))

(declare-fun lt!38914 () ListLongMap!1447)

(assert (=> b!82940 (= lt!38914 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun lt!38911 () (_ BitVec 64))

(assert (=> b!82940 (= lt!38911 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38918 () (_ BitVec 64))

(assert (=> b!82940 (= lt!38918 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!38909 () Unit!2426)

(declare-fun addApplyDifferent!57 (ListLongMap!1447 (_ BitVec 64) V!3017 (_ BitVec 64)) Unit!2426)

(assert (=> b!82940 (= lt!38909 (addApplyDifferent!57 lt!38914 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38918))))

(assert (=> b!82940 (= (apply!81 (+!107 lt!38914 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38918) (apply!81 lt!38914 lt!38918))))

(declare-fun lt!38904 () Unit!2426)

(assert (=> b!82940 (= lt!38904 lt!38909)))

(declare-fun lt!38908 () ListLongMap!1447)

(assert (=> b!82940 (= lt!38908 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun lt!38910 () (_ BitVec 64))

(assert (=> b!82940 (= lt!38910 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38913 () (_ BitVec 64))

(assert (=> b!82940 (= lt!38913 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!38915 () Unit!2426)

(assert (=> b!82940 (= lt!38915 (addApplyDifferent!57 lt!38908 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38913))))

(assert (=> b!82940 (= (apply!81 (+!107 lt!38908 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38913) (apply!81 lt!38908 lt!38913))))

(declare-fun lt!38916 () Unit!2426)

(assert (=> b!82940 (= lt!38916 lt!38915)))

(declare-fun lt!38912 () ListLongMap!1447)

(assert (=> b!82940 (= lt!38912 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun lt!38921 () (_ BitVec 64))

(assert (=> b!82940 (= lt!38921 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!38906 () (_ BitVec 64))

(assert (=> b!82940 (= lt!38906 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!82940 (= lt!38919 (addApplyDifferent!57 lt!38912 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38906))))

(assert (=> b!82940 (= (apply!81 (+!107 lt!38912 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38906) (apply!81 lt!38912 lt!38906))))

(declare-fun bm!7725 () Bool)

(assert (=> bm!7725 (= call!7726 call!7727)))

(declare-fun b!82941 () Bool)

(declare-fun Unit!2433 () Unit!2426)

(assert (=> b!82941 (= e!54171 Unit!2433)))

(declare-fun b!82942 () Bool)

(assert (=> b!82942 (= e!54166 e!54165)))

(declare-fun res!42965 () Bool)

(assert (=> b!82942 (=> (not res!42965) (not e!54165))))

(assert (=> b!82942 (= res!42965 (contains!749 lt!38907 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!82942 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!82943 () Bool)

(declare-fun e!54169 () ListLongMap!1447)

(assert (=> b!82943 (= e!54169 call!7731)))

(declare-fun b!82944 () Bool)

(assert (=> b!82944 (= e!54173 (= (apply!81 lt!38907 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun bm!7726 () Bool)

(assert (=> bm!7726 (= call!7731 call!7730)))

(declare-fun bm!7727 () Bool)

(assert (=> bm!7727 (= call!7729 (contains!749 lt!38907 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!82945 () Bool)

(assert (=> b!82945 (= e!54169 call!7726)))

(declare-fun b!82946 () Bool)

(declare-fun c!13179 () Bool)

(assert (=> b!82946 (= c!13179 (and (not (= (bvand (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!82946 (= e!54172 e!54169)))

(declare-fun b!82947 () Bool)

(assert (=> b!82947 (= e!54177 (+!107 call!7730 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun bm!7728 () Bool)

(assert (=> bm!7728 (= call!7725 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))))))

(assert (= (and d!20863 c!13175) b!82947))

(assert (= (and d!20863 (not c!13175)) b!82939))

(assert (= (and b!82939 c!13178) b!82930))

(assert (= (and b!82939 (not c!13178)) b!82946))

(assert (= (and b!82946 c!13179) b!82943))

(assert (= (and b!82946 (not c!13179)) b!82945))

(assert (= (or b!82943 b!82945) bm!7725))

(assert (= (or b!82930 bm!7725) bm!7724))

(assert (= (or b!82930 b!82943) bm!7726))

(assert (= (or b!82947 bm!7724) bm!7728))

(assert (= (or b!82947 bm!7726) bm!7722))

(assert (= (and d!20863 res!42964) b!82938))

(assert (= (and d!20863 c!13176) b!82940))

(assert (= (and d!20863 (not c!13176)) b!82941))

(assert (= (and d!20863 res!42966) b!82932))

(assert (= (and b!82932 res!42960) b!82931))

(assert (= (and b!82932 (not res!42968)) b!82942))

(assert (= (and b!82942 res!42965) b!82929))

(assert (= (and b!82932 res!42967) b!82935))

(assert (= (and b!82935 c!13177) b!82934))

(assert (= (and b!82935 (not c!13177)) b!82927))

(assert (= (and b!82934 res!42961) b!82936))

(assert (= (or b!82934 b!82927) bm!7727))

(assert (= (and b!82935 res!42963) b!82928))

(assert (= (and b!82928 c!13180) b!82937))

(assert (= (and b!82928 (not c!13180)) b!82933))

(assert (= (and b!82937 res!42962) b!82944))

(assert (= (or b!82937 b!82933) bm!7723))

(declare-fun b_lambda!3691 () Bool)

(assert (=> (not b_lambda!3691) (not b!82929)))

(assert (=> b!82929 t!5210))

(declare-fun b_and!5053 () Bool)

(assert (= b_and!5033 (and (=> t!5210 result!2875) b_and!5053)))

(assert (=> b!82929 t!5212))

(declare-fun b_and!5055 () Bool)

(assert (= b_and!5035 (and (=> t!5212 result!2879) b_and!5055)))

(declare-fun m!85781 () Bool)

(assert (=> b!82944 m!85781))

(declare-fun m!85783 () Bool)

(assert (=> bm!7723 m!85783))

(assert (=> b!82942 m!85767))

(assert (=> b!82942 m!85767))

(declare-fun m!85785 () Bool)

(assert (=> b!82942 m!85785))

(assert (=> bm!7728 m!85573))

(declare-fun m!85787 () Bool)

(assert (=> bm!7722 m!85787))

(declare-fun m!85789 () Bool)

(assert (=> bm!7727 m!85789))

(assert (=> b!82940 m!85767))

(assert (=> b!82940 m!85573))

(declare-fun m!85791 () Bool)

(assert (=> b!82940 m!85791))

(declare-fun m!85793 () Bool)

(assert (=> b!82940 m!85793))

(declare-fun m!85795 () Bool)

(assert (=> b!82940 m!85795))

(declare-fun m!85797 () Bool)

(assert (=> b!82940 m!85797))

(declare-fun m!85799 () Bool)

(assert (=> b!82940 m!85799))

(declare-fun m!85801 () Bool)

(assert (=> b!82940 m!85801))

(declare-fun m!85803 () Bool)

(assert (=> b!82940 m!85803))

(declare-fun m!85805 () Bool)

(assert (=> b!82940 m!85805))

(declare-fun m!85807 () Bool)

(assert (=> b!82940 m!85807))

(assert (=> b!82940 m!85797))

(assert (=> b!82940 m!85801))

(declare-fun m!85809 () Bool)

(assert (=> b!82940 m!85809))

(declare-fun m!85811 () Bool)

(assert (=> b!82940 m!85811))

(assert (=> b!82940 m!85811))

(declare-fun m!85813 () Bool)

(assert (=> b!82940 m!85813))

(declare-fun m!85815 () Bool)

(assert (=> b!82940 m!85815))

(assert (=> b!82940 m!85795))

(declare-fun m!85817 () Bool)

(assert (=> b!82940 m!85817))

(declare-fun m!85819 () Bool)

(assert (=> b!82940 m!85819))

(assert (=> b!82929 m!85767))

(assert (=> b!82929 m!85587))

(assert (=> b!82929 m!85767))

(declare-fun m!85821 () Bool)

(assert (=> b!82929 m!85821))

(declare-fun m!85823 () Bool)

(assert (=> b!82929 m!85823))

(assert (=> b!82929 m!85823))

(assert (=> b!82929 m!85587))

(declare-fun m!85825 () Bool)

(assert (=> b!82929 m!85825))

(assert (=> b!82931 m!85767))

(assert (=> b!82931 m!85767))

(declare-fun m!85827 () Bool)

(assert (=> b!82931 m!85827))

(declare-fun m!85829 () Bool)

(assert (=> b!82947 m!85829))

(declare-fun m!85831 () Bool)

(assert (=> b!82936 m!85831))

(assert (=> b!82938 m!85767))

(assert (=> b!82938 m!85767))

(assert (=> b!82938 m!85827))

(assert (=> d!20863 m!85577))

(assert (=> b!82705 d!20863))

(declare-fun d!20865 () Bool)

(declare-fun e!54183 () Bool)

(assert (=> d!20865 e!54183))

(declare-fun res!42971 () Bool)

(assert (=> d!20865 (=> res!42971 e!54183)))

(declare-fun lt!38935 () Bool)

(assert (=> d!20865 (= res!42971 (not lt!38935))))

(declare-fun lt!38937 () Bool)

(assert (=> d!20865 (= lt!38935 lt!38937)))

(declare-fun lt!38936 () Unit!2426)

(declare-fun e!54182 () Unit!2426)

(assert (=> d!20865 (= lt!38936 e!54182)))

(declare-fun c!13183 () Bool)

(assert (=> d!20865 (= c!13183 lt!38937)))

(declare-fun containsKey!141 (List!1523 (_ BitVec 64)) Bool)

(assert (=> d!20865 (= lt!38937 (containsKey!141 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> d!20865 (= (contains!749 lt!38733 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) lt!38935)))

(declare-fun b!82954 () Bool)

(declare-fun lt!38934 () Unit!2426)

(assert (=> b!82954 (= e!54182 lt!38934)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!90 (List!1523 (_ BitVec 64)) Unit!2426)

(assert (=> b!82954 (= lt!38934 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-datatypes ((Option!143 0))(
  ( (Some!142 (v!2628 V!3017)) (None!141) )
))
(declare-fun isDefined!91 (Option!143) Bool)

(declare-fun getValueByKey!137 (List!1523 (_ BitVec 64)) Option!143)

(assert (=> b!82954 (isDefined!91 (getValueByKey!137 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun b!82955 () Bool)

(declare-fun Unit!2434 () Unit!2426)

(assert (=> b!82955 (= e!54182 Unit!2434)))

(declare-fun b!82956 () Bool)

(assert (=> b!82956 (= e!54183 (isDefined!91 (getValueByKey!137 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(assert (= (and d!20865 c!13183) b!82954))

(assert (= (and d!20865 (not c!13183)) b!82955))

(assert (= (and d!20865 (not res!42971)) b!82956))

(assert (=> d!20865 m!85563))

(declare-fun m!85833 () Bool)

(assert (=> d!20865 m!85833))

(assert (=> b!82954 m!85563))

(declare-fun m!85835 () Bool)

(assert (=> b!82954 m!85835))

(assert (=> b!82954 m!85563))

(declare-fun m!85837 () Bool)

(assert (=> b!82954 m!85837))

(assert (=> b!82954 m!85837))

(declare-fun m!85839 () Bool)

(assert (=> b!82954 m!85839))

(assert (=> b!82956 m!85563))

(assert (=> b!82956 m!85837))

(assert (=> b!82956 m!85837))

(assert (=> b!82956 m!85839))

(assert (=> b!82715 d!20865))

(declare-fun b!83037 () Bool)

(declare-fun res!43006 () Bool)

(declare-fun e!54244 () Bool)

(assert (=> b!83037 (=> (not res!43006) (not e!54244))))

(declare-fun call!7782 () Bool)

(assert (=> b!83037 (= res!43006 call!7782)))

(declare-fun e!54242 () Bool)

(assert (=> b!83037 (= e!54242 e!54244)))

(declare-fun b!83038 () Bool)

(declare-fun lt!39007 () Unit!2426)

(declare-fun e!54245 () Unit!2426)

(assert (=> b!83038 (= lt!39007 e!54245)))

(declare-fun c!13211 () Bool)

(declare-fun call!7800 () Bool)

(assert (=> b!83038 (= c!13211 call!7800)))

(declare-fun e!54232 () tuple2!2202)

(assert (=> b!83038 (= e!54232 (tuple2!2203 false newMap!16))))

(declare-datatypes ((SeekEntryResult!245 0))(
  ( (MissingZero!245 (index!3116 (_ BitVec 32))) (Found!245 (index!3117 (_ BitVec 32))) (Intermediate!245 (undefined!1057 Bool) (index!3118 (_ BitVec 32)) (x!11853 (_ BitVec 32))) (Undefined!245) (MissingVacant!245 (index!3119 (_ BitVec 32))) )
))
(declare-fun lt!38996 () SeekEntryResult!245)

(declare-fun b!83039 () Bool)

(declare-fun e!54237 () Bool)

(assert (=> b!83039 (= e!54237 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38996)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun bm!7778 () Bool)

(declare-fun call!7781 () Bool)

(assert (=> bm!7778 (= call!7782 call!7781)))

(declare-fun bm!7779 () Bool)

(declare-fun call!7794 () ListLongMap!1447)

(assert (=> bm!7779 (= call!7794 (map!1183 newMap!16))))

(declare-fun b!83040 () Bool)

(declare-fun lt!39005 () tuple2!2202)

(declare-fun call!7795 () tuple2!2202)

(assert (=> b!83040 (= lt!39005 call!7795)))

(declare-fun e!54241 () tuple2!2202)

(assert (=> b!83040 (= e!54241 (tuple2!2203 (_1!1112 lt!39005) (_2!1112 lt!39005)))))

(declare-fun b!83041 () Bool)

(declare-fun lt!39008 () Unit!2426)

(declare-fun lt!39015 () Unit!2426)

(assert (=> b!83041 (= lt!39008 lt!39015)))

(declare-fun call!7802 () ListLongMap!1447)

(declare-fun call!7801 () ListLongMap!1447)

(assert (=> b!83041 (= call!7802 call!7801)))

(declare-fun lt!39013 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!30 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 V!3017 Int) Unit!2426)

(assert (=> b!83041 (= lt!39015 (lemmaChangeLongMinValueKeyThenAddPairToListMap!30 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) lt!39013 (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) lt!38725 (defaultEntry!2316 newMap!16)))))

(assert (=> b!83041 (= lt!39013 (bvor (extraKeys!2159 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!54246 () tuple2!2202)

(assert (=> b!83041 (= e!54246 (tuple2!2203 true (LongMapFixedSize!749 (defaultEntry!2316 newMap!16) (mask!6333 newMap!16) (bvor (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) (zeroValue!2210 newMap!16) lt!38725 (_size!423 newMap!16) (_keys!3983 newMap!16) (_values!2299 newMap!16) (_vacant!423 newMap!16))))))

(declare-fun b!83042 () Bool)

(declare-fun e!54230 () ListLongMap!1447)

(assert (=> b!83042 (= e!54230 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun bm!7780 () Bool)

(declare-fun call!7790 () Bool)

(declare-fun call!7787 () Bool)

(assert (=> bm!7780 (= call!7790 call!7787)))

(declare-fun b!83043 () Bool)

(declare-fun e!54243 () Bool)

(declare-fun e!54228 () Bool)

(assert (=> b!83043 (= e!54243 e!54228)))

(declare-fun call!7797 () ListLongMap!1447)

(declare-fun res!43001 () Bool)

(assert (=> b!83043 (= res!43001 (contains!749 call!7797 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> b!83043 (=> (not res!43001) (not e!54228))))

(declare-fun b!83044 () Bool)

(declare-fun lt!39001 () Unit!2426)

(declare-fun lt!39004 () Unit!2426)

(assert (=> b!83044 (= lt!39001 lt!39004)))

(declare-fun call!7786 () ListLongMap!1447)

(assert (=> b!83044 (= call!7802 call!7786)))

(declare-fun lt!38999 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!30 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 V!3017 Int) Unit!2426)

(assert (=> b!83044 (= lt!39004 (lemmaChangeZeroKeyThenAddPairToListMap!30 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) lt!38999 (zeroValue!2210 newMap!16) lt!38725 (minValue!2210 newMap!16) (defaultEntry!2316 newMap!16)))))

(assert (=> b!83044 (= lt!38999 (bvor (extraKeys!2159 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!83044 (= e!54246 (tuple2!2203 true (LongMapFixedSize!749 (defaultEntry!2316 newMap!16) (mask!6333 newMap!16) (bvor (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) lt!38725 (minValue!2210 newMap!16) (_size!423 newMap!16) (_keys!3983 newMap!16) (_values!2299 newMap!16) (_vacant!423 newMap!16))))))

(declare-fun bm!7781 () Bool)

(declare-fun call!7784 () ListLongMap!1447)

(assert (=> bm!7781 (= call!7801 call!7784)))

(declare-fun d!20867 () Bool)

(declare-fun e!54229 () Bool)

(assert (=> d!20867 e!54229))

(declare-fun res!43000 () Bool)

(assert (=> d!20867 (=> (not res!43000) (not e!54229))))

(declare-fun lt!39016 () tuple2!2202)

(assert (=> d!20867 (= res!43000 (valid!331 (_2!1112 lt!39016)))))

(declare-fun e!54234 () tuple2!2202)

(assert (=> d!20867 (= lt!39016 e!54234)))

(declare-fun c!13210 () Bool)

(assert (=> d!20867 (= c!13210 (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvneg (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(assert (=> d!20867 (valid!331 newMap!16)))

(assert (=> d!20867 (= (update!121 newMap!16 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725) lt!39016)))

(declare-fun bm!7777 () Bool)

(declare-fun call!7792 () ListLongMap!1447)

(assert (=> bm!7777 (= call!7802 call!7792)))

(declare-fun b!83045 () Bool)

(declare-fun res!43008 () Bool)

(declare-fun e!54238 () Bool)

(assert (=> b!83045 (=> (not res!43008) (not e!54238))))

(declare-fun call!7785 () Bool)

(assert (=> b!83045 (= res!43008 call!7785)))

(declare-fun e!54240 () Bool)

(assert (=> b!83045 (= e!54240 e!54238)))

(declare-fun b!83046 () Bool)

(declare-fun e!54235 () Bool)

(declare-fun e!54227 () Bool)

(assert (=> b!83046 (= e!54235 e!54227)))

(declare-fun res!43003 () Bool)

(assert (=> b!83046 (= res!43003 call!7785)))

(assert (=> b!83046 (=> (not res!43003) (not e!54227))))

(declare-fun b!83047 () Bool)

(declare-fun e!54226 () Unit!2426)

(declare-fun Unit!2435 () Unit!2426)

(assert (=> b!83047 (= e!54226 Unit!2435)))

(declare-fun lt!39002 () Unit!2426)

(declare-fun call!7791 () Unit!2426)

(assert (=> b!83047 (= lt!39002 call!7791)))

(declare-fun lt!39017 () SeekEntryResult!245)

(declare-fun call!7783 () SeekEntryResult!245)

(assert (=> b!83047 (= lt!39017 call!7783)))

(declare-fun c!13214 () Bool)

(assert (=> b!83047 (= c!13214 ((_ is MissingZero!245) lt!39017))))

(assert (=> b!83047 e!54240))

(declare-fun lt!39012 () Unit!2426)

(assert (=> b!83047 (= lt!39012 lt!39002)))

(assert (=> b!83047 false))

(declare-fun b!83048 () Bool)

(declare-fun res!43012 () Bool)

(assert (=> b!83048 (= res!43012 call!7781)))

(declare-fun e!54239 () Bool)

(assert (=> b!83048 (=> (not res!43012) (not e!54239))))

(declare-fun b!83049 () Bool)

(declare-fun lt!38995 () Unit!2426)

(assert (=> b!83049 (= e!54226 lt!38995)))

(declare-fun call!7803 () Unit!2426)

(assert (=> b!83049 (= lt!38995 call!7803)))

(assert (=> b!83049 (= lt!38996 call!7783)))

(declare-fun res!43011 () Bool)

(assert (=> b!83049 (= res!43011 ((_ is Found!245) lt!38996))))

(assert (=> b!83049 (=> (not res!43011) (not e!54237))))

(assert (=> b!83049 e!54237))

(declare-fun b!83050 () Bool)

(declare-fun res!43005 () Bool)

(assert (=> b!83050 (=> (not res!43005) (not e!54244))))

(declare-fun lt!38994 () SeekEntryResult!245)

(assert (=> b!83050 (= res!43005 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3116 lt!38994)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83051 () Bool)

(assert (=> b!83051 (= e!54243 (= call!7797 call!7794))))

(declare-fun b!83052 () Bool)

(declare-fun res!43007 () Bool)

(assert (=> b!83052 (= res!43007 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3119 lt!38994)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!54236 () Bool)

(assert (=> b!83052 (=> (not res!43007) (not e!54236))))

(declare-fun b!83053 () Bool)

(declare-fun lt!39014 () SeekEntryResult!245)

(assert (=> b!83053 (= e!54239 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!39014)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun b!83054 () Bool)

(declare-fun e!54231 () tuple2!2202)

(declare-fun lt!39018 () tuple2!2202)

(assert (=> b!83054 (= e!54231 (tuple2!2203 (_1!1112 lt!39018) (_2!1112 lt!39018)))))

(assert (=> b!83054 (= lt!39018 call!7795)))

(declare-fun b!83055 () Bool)

(declare-fun lt!39006 () Unit!2426)

(assert (=> b!83055 (= e!54245 lt!39006)))

(assert (=> b!83055 (= lt!39006 call!7791)))

(declare-fun call!7789 () SeekEntryResult!245)

(assert (=> b!83055 (= lt!38994 call!7789)))

(declare-fun c!13213 () Bool)

(assert (=> b!83055 (= c!13213 ((_ is MissingZero!245) lt!38994))))

(assert (=> b!83055 e!54242))

(declare-fun bm!7782 () Bool)

(assert (=> bm!7782 (= call!7785 call!7790)))

(declare-fun bm!7783 () Bool)

(declare-fun call!7798 () Bool)

(assert (=> bm!7783 (= call!7798 (arrayContainsKey!0 (_keys!3983 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!83056 () Bool)

(assert (=> b!83056 (= e!54235 ((_ is Undefined!245) lt!39017))))

(declare-fun b!83057 () Bool)

(declare-fun e!54233 () Bool)

(assert (=> b!83057 (= e!54233 e!54236)))

(declare-fun res!43013 () Bool)

(assert (=> b!83057 (= res!43013 call!7782)))

(assert (=> b!83057 (=> (not res!43013) (not e!54236))))

(declare-fun b!83058 () Bool)

(assert (=> b!83058 (= e!54233 ((_ is Undefined!245) lt!38994))))

(declare-fun b!83059 () Bool)

(declare-fun lt!39009 () Unit!2426)

(declare-fun lt!38992 () Unit!2426)

(assert (=> b!83059 (= lt!39009 lt!38992)))

(assert (=> b!83059 call!7800))

(declare-fun lt!39011 () array!3993)

(declare-fun lt!38998 () SeekEntryResult!245)

(declare-fun lemmaValidKeyInArrayIsInListMap!89 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) Int) Unit!2426)

(assert (=> b!83059 (= lt!38992 (lemmaValidKeyInArrayIsInListMap!89 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3117 lt!38998) (defaultEntry!2316 newMap!16)))))

(assert (=> b!83059 (= lt!39011 (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))))))

(declare-fun lt!39003 () Unit!2426)

(declare-fun lt!38993 () Unit!2426)

(assert (=> b!83059 (= lt!39003 lt!38993)))

(declare-fun call!7793 () ListLongMap!1447)

(assert (=> b!83059 (= call!7792 call!7793)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!30 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) (_ BitVec 64) V!3017 Int) Unit!2426)

(assert (=> b!83059 (= lt!38993 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!30 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3117 lt!38998) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39000 () Unit!2426)

(assert (=> b!83059 (= lt!39000 e!54226)))

(declare-fun c!13215 () Bool)

(assert (=> b!83059 (= c!13215 (contains!749 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> b!83059 (= e!54241 (tuple2!2203 true (LongMapFixedSize!749 (defaultEntry!2316 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (_size!423 newMap!16) (_keys!3983 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (_vacant!423 newMap!16))))))

(declare-fun b!83060 () Bool)

(declare-fun c!13222 () Bool)

(assert (=> b!83060 (= c!13222 ((_ is MissingVacant!245) lt!38994))))

(assert (=> b!83060 (= e!54242 e!54233)))

(declare-fun c!13219 () Bool)

(declare-fun bm!7784 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!7784 (= call!7787 (inRange!0 (ite c!13219 (ite c!13211 (index!3117 lt!39014) (ite c!13213 (index!3116 lt!38994) (index!3119 lt!38994))) (ite c!13215 (index!3117 lt!38996) (ite c!13214 (index!3116 lt!39017) (index!3119 lt!39017)))) (mask!6333 newMap!16)))))

(declare-fun c!13217 () Bool)

(declare-fun bm!7785 () Bool)

(assert (=> bm!7785 (= call!7784 (getCurrentListMap!425 (_keys!3983 newMap!16) (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011) (mask!6333 newMap!16) (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) (zeroValue!2210 newMap!16) (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun c!13218 () Bool)

(declare-fun bm!7786 () Bool)

(declare-fun updateHelperNewKey!30 (LongMapFixedSize!748 (_ BitVec 64) V!3017 (_ BitVec 32)) tuple2!2202)

(assert (=> bm!7786 (= call!7795 (updateHelperNewKey!30 newMap!16 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998))))))

(declare-fun b!83061 () Bool)

(assert (=> b!83061 (= c!13218 ((_ is MissingVacant!245) lt!38998))))

(assert (=> b!83061 (= e!54232 e!54231)))

(declare-fun bm!7787 () Bool)

(declare-fun call!7796 () Bool)

(assert (=> bm!7787 (= call!7796 call!7798)))

(declare-fun b!83062 () Bool)

(assert (=> b!83062 (= e!54230 (ite c!13217 call!7801 call!7786))))

(declare-fun b!83063 () Bool)

(declare-fun call!7788 () Bool)

(assert (=> b!83063 (= e!54238 (not call!7788))))

(declare-fun call!7780 () ListLongMap!1447)

(declare-fun bm!7788 () Bool)

(assert (=> bm!7788 (= call!7800 (contains!749 call!7780 (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))))))

(declare-fun bm!7789 () Bool)

(assert (=> bm!7789 (= call!7786 call!7793)))

(declare-fun bm!7790 () Bool)

(declare-fun call!7799 () SeekEntryResult!245)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3991 (_ BitVec 32)) SeekEntryResult!245)

(assert (=> bm!7790 (= call!7799 (seekEntryOrOpen!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(declare-fun b!83064 () Bool)

(assert (=> b!83064 (= e!54229 e!54243)))

(declare-fun c!13212 () Bool)

(assert (=> b!83064 (= c!13212 (_1!1112 lt!39016))))

(declare-fun b!83065 () Bool)

(assert (=> b!83065 (= e!54234 e!54232)))

(assert (=> b!83065 (= lt!38998 (seekEntryOrOpen!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(assert (=> b!83065 (= c!13219 ((_ is Undefined!245) lt!38998))))

(declare-fun b!83066 () Bool)

(assert (=> b!83066 (= e!54234 e!54246)))

(assert (=> b!83066 (= c!13217 (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83067 () Bool)

(assert (=> b!83067 (= e!54231 e!54241)))

(declare-fun c!13220 () Bool)

(assert (=> b!83067 (= c!13220 ((_ is MissingZero!245) lt!38998))))

(declare-fun bm!7791 () Bool)

(assert (=> bm!7791 (= call!7789 call!7799)))

(declare-fun bm!7792 () Bool)

(assert (=> bm!7792 (= call!7793 (getCurrentListMap!425 (_keys!3983 newMap!16) (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16)))) (mask!6333 newMap!16) (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun bm!7793 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!30 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) Int) Unit!2426)

(assert (=> bm!7793 (= call!7803 (lemmaInListMapThenSeekEntryOrOpenFindsIt!30 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)))))

(declare-fun b!83068 () Bool)

(assert (=> b!83068 (= e!54227 (not call!7788))))

(declare-fun b!83069 () Bool)

(declare-fun Unit!2436 () Unit!2426)

(assert (=> b!83069 (= e!54245 Unit!2436)))

(declare-fun lt!39010 () Unit!2426)

(assert (=> b!83069 (= lt!39010 call!7803)))

(assert (=> b!83069 (= lt!39014 call!7789)))

(declare-fun res!43002 () Bool)

(assert (=> b!83069 (= res!43002 ((_ is Found!245) lt!39014))))

(assert (=> b!83069 (=> (not res!43002) (not e!54239))))

(assert (=> b!83069 e!54239))

(declare-fun lt!38997 () Unit!2426)

(assert (=> b!83069 (= lt!38997 lt!39010)))

(assert (=> b!83069 false))

(declare-fun bm!7794 () Bool)

(assert (=> bm!7794 (= call!7781 call!7787)))

(declare-fun b!83070 () Bool)

(assert (=> b!83070 (= e!54244 (not call!7796))))

(declare-fun bm!7795 () Bool)

(assert (=> bm!7795 (= call!7792 (+!107 e!54230 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun c!13221 () Bool)

(assert (=> bm!7795 (= c!13221 c!13210)))

(declare-fun b!83071 () Bool)

(declare-fun res!43004 () Bool)

(assert (=> b!83071 (= res!43004 call!7790)))

(assert (=> b!83071 (=> (not res!43004) (not e!54237))))

(declare-fun b!83072 () Bool)

(declare-fun res!43009 () Bool)

(assert (=> b!83072 (= res!43009 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3119 lt!39017)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83072 (=> (not res!43009) (not e!54227))))

(declare-fun b!83073 () Bool)

(assert (=> b!83073 (= e!54236 (not call!7796))))

(declare-fun b!83074 () Bool)

(assert (=> b!83074 (= e!54228 (= call!7797 (+!107 call!7794 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun bm!7796 () Bool)

(assert (=> bm!7796 (= call!7783 call!7799)))

(declare-fun bm!7797 () Bool)

(assert (=> bm!7797 (= call!7797 (map!1183 (_2!1112 lt!39016)))))

(declare-fun bm!7798 () Bool)

(assert (=> bm!7798 (= call!7780 call!7784)))

(declare-fun bm!7799 () Bool)

(assert (=> bm!7799 (= call!7788 call!7798)))

(declare-fun bm!7800 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!30 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) Int) Unit!2426)

(assert (=> bm!7800 (= call!7791 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!30 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)))))

(declare-fun b!83075 () Bool)

(declare-fun c!13216 () Bool)

(assert (=> b!83075 (= c!13216 ((_ is MissingVacant!245) lt!39017))))

(assert (=> b!83075 (= e!54240 e!54235)))

(declare-fun b!83076 () Bool)

(declare-fun res!43010 () Bool)

(assert (=> b!83076 (=> (not res!43010) (not e!54238))))

(assert (=> b!83076 (= res!43010 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3116 lt!39017)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!20867 c!13210) b!83066))

(assert (= (and d!20867 (not c!13210)) b!83065))

(assert (= (and b!83066 c!13217) b!83044))

(assert (= (and b!83066 (not c!13217)) b!83041))

(assert (= (or b!83044 b!83041) bm!7781))

(assert (= (or b!83044 b!83041) bm!7789))

(assert (= (or b!83044 b!83041) bm!7777))

(assert (= (and b!83065 c!13219) b!83038))

(assert (= (and b!83065 (not c!13219)) b!83061))

(assert (= (and b!83038 c!13211) b!83069))

(assert (= (and b!83038 (not c!13211)) b!83055))

(assert (= (and b!83069 res!43002) b!83048))

(assert (= (and b!83048 res!43012) b!83053))

(assert (= (and b!83055 c!13213) b!83037))

(assert (= (and b!83055 (not c!13213)) b!83060))

(assert (= (and b!83037 res!43006) b!83050))

(assert (= (and b!83050 res!43005) b!83070))

(assert (= (and b!83060 c!13222) b!83057))

(assert (= (and b!83060 (not c!13222)) b!83058))

(assert (= (and b!83057 res!43013) b!83052))

(assert (= (and b!83052 res!43007) b!83073))

(assert (= (or b!83037 b!83057) bm!7778))

(assert (= (or b!83070 b!83073) bm!7787))

(assert (= (or b!83048 bm!7778) bm!7794))

(assert (= (or b!83069 b!83055) bm!7791))

(assert (= (and b!83061 c!13218) b!83054))

(assert (= (and b!83061 (not c!13218)) b!83067))

(assert (= (and b!83067 c!13220) b!83040))

(assert (= (and b!83067 (not c!13220)) b!83059))

(assert (= (and b!83059 c!13215) b!83049))

(assert (= (and b!83059 (not c!13215)) b!83047))

(assert (= (and b!83049 res!43011) b!83071))

(assert (= (and b!83071 res!43004) b!83039))

(assert (= (and b!83047 c!13214) b!83045))

(assert (= (and b!83047 (not c!13214)) b!83075))

(assert (= (and b!83045 res!43008) b!83076))

(assert (= (and b!83076 res!43010) b!83063))

(assert (= (and b!83075 c!13216) b!83046))

(assert (= (and b!83075 (not c!13216)) b!83056))

(assert (= (and b!83046 res!43003) b!83072))

(assert (= (and b!83072 res!43009) b!83068))

(assert (= (or b!83045 b!83046) bm!7782))

(assert (= (or b!83063 b!83068) bm!7799))

(assert (= (or b!83071 bm!7782) bm!7780))

(assert (= (or b!83049 b!83047) bm!7796))

(assert (= (or b!83054 b!83040) bm!7786))

(assert (= (or bm!7787 bm!7799) bm!7783))

(assert (= (or bm!7791 bm!7796) bm!7790))

(assert (= (or b!83038 b!83059) bm!7798))

(assert (= (or bm!7794 bm!7780) bm!7784))

(assert (= (or b!83055 b!83047) bm!7800))

(assert (= (or b!83069 b!83049) bm!7793))

(assert (= (or b!83038 b!83059) bm!7788))

(assert (= (or bm!7781 bm!7798) bm!7785))

(assert (= (or bm!7789 b!83059) bm!7792))

(assert (= (or bm!7777 b!83059) bm!7795))

(assert (= (and bm!7795 c!13221) b!83062))

(assert (= (and bm!7795 (not c!13221)) b!83042))

(assert (= (and d!20867 res!43000) b!83064))

(assert (= (and b!83064 c!13212) b!83043))

(assert (= (and b!83064 (not c!13212)) b!83051))

(assert (= (and b!83043 res!43001) b!83074))

(assert (= (or b!83043 b!83074 b!83051) bm!7797))

(assert (= (or b!83074 b!83051) bm!7779))

(assert (=> b!83043 m!85563))

(declare-fun m!85841 () Bool)

(assert (=> b!83043 m!85841))

(declare-fun m!85843 () Bool)

(assert (=> bm!7795 m!85843))

(declare-fun m!85845 () Bool)

(assert (=> b!83039 m!85845))

(declare-fun m!85847 () Bool)

(assert (=> b!83044 m!85847))

(assert (=> bm!7779 m!85603))

(declare-fun m!85849 () Bool)

(assert (=> b!83076 m!85849))

(declare-fun m!85851 () Bool)

(assert (=> b!83041 m!85851))

(declare-fun m!85853 () Bool)

(assert (=> b!83072 m!85853))

(declare-fun m!85855 () Bool)

(assert (=> b!83050 m!85855))

(assert (=> bm!7786 m!85563))

(declare-fun m!85857 () Bool)

(assert (=> bm!7786 m!85857))

(declare-fun m!85859 () Bool)

(assert (=> b!83053 m!85859))

(declare-fun m!85861 () Bool)

(assert (=> bm!7788 m!85861))

(declare-fun m!85863 () Bool)

(assert (=> bm!7788 m!85863))

(declare-fun m!85865 () Bool)

(assert (=> bm!7784 m!85865))

(declare-fun m!85867 () Bool)

(assert (=> b!83074 m!85867))

(declare-fun m!85869 () Bool)

(assert (=> d!20867 m!85869))

(assert (=> d!20867 m!85591))

(declare-fun m!85871 () Bool)

(assert (=> bm!7785 m!85871))

(declare-fun m!85873 () Bool)

(assert (=> b!83052 m!85873))

(assert (=> bm!7800 m!85563))

(declare-fun m!85875 () Bool)

(assert (=> bm!7800 m!85875))

(assert (=> bm!7793 m!85563))

(declare-fun m!85877 () Bool)

(assert (=> bm!7793 m!85877))

(assert (=> b!83065 m!85563))

(declare-fun m!85879 () Bool)

(assert (=> b!83065 m!85879))

(declare-fun m!85881 () Bool)

(assert (=> bm!7792 m!85881))

(declare-fun m!85883 () Bool)

(assert (=> bm!7792 m!85883))

(assert (=> bm!7783 m!85563))

(declare-fun m!85885 () Bool)

(assert (=> bm!7783 m!85885))

(declare-fun m!85887 () Bool)

(assert (=> bm!7797 m!85887))

(assert (=> b!83059 m!85881))

(assert (=> b!83059 m!85563))

(declare-fun m!85889 () Bool)

(assert (=> b!83059 m!85889))

(declare-fun m!85891 () Bool)

(assert (=> b!83059 m!85891))

(assert (=> b!83059 m!85779))

(assert (=> b!83059 m!85779))

(assert (=> b!83059 m!85563))

(declare-fun m!85893 () Bool)

(assert (=> b!83059 m!85893))

(assert (=> b!83042 m!85779))

(assert (=> bm!7790 m!85563))

(assert (=> bm!7790 m!85879))

(assert (=> b!82715 d!20867))

(declare-fun d!20869 () Bool)

(assert (=> d!20869 (= (valid!332 thiss!992) (valid!331 (v!2622 (underlying!282 thiss!992))))))

(declare-fun bs!3508 () Bool)

(assert (= bs!3508 d!20869))

(declare-fun m!85895 () Bool)

(assert (=> bs!3508 m!85895))

(assert (=> start!10518 d!20869))

(declare-fun d!20871 () Bool)

(declare-fun e!54249 () Bool)

(assert (=> d!20871 e!54249))

(declare-fun res!43018 () Bool)

(assert (=> d!20871 (=> (not res!43018) (not e!54249))))

(declare-fun lt!39028 () ListLongMap!1447)

(assert (=> d!20871 (= res!43018 (contains!749 lt!39028 (_1!1111 lt!38738)))))

(declare-fun lt!39027 () List!1523)

(assert (=> d!20871 (= lt!39028 (ListLongMap!1448 lt!39027))))

(declare-fun lt!39030 () Unit!2426)

(declare-fun lt!39029 () Unit!2426)

(assert (=> d!20871 (= lt!39030 lt!39029)))

(assert (=> d!20871 (= (getValueByKey!137 lt!39027 (_1!1111 lt!38738)) (Some!142 (_2!1111 lt!38738)))))

(declare-fun lemmaContainsTupThenGetReturnValue!57 (List!1523 (_ BitVec 64) V!3017) Unit!2426)

(assert (=> d!20871 (= lt!39029 (lemmaContainsTupThenGetReturnValue!57 lt!39027 (_1!1111 lt!38738) (_2!1111 lt!38738)))))

(declare-fun insertStrictlySorted!60 (List!1523 (_ BitVec 64) V!3017) List!1523)

(assert (=> d!20871 (= lt!39027 (insertStrictlySorted!60 (toList!739 lt!38731) (_1!1111 lt!38738) (_2!1111 lt!38738)))))

(assert (=> d!20871 (= (+!107 lt!38731 lt!38738) lt!39028)))

(declare-fun b!83081 () Bool)

(declare-fun res!43019 () Bool)

(assert (=> b!83081 (=> (not res!43019) (not e!54249))))

(assert (=> b!83081 (= res!43019 (= (getValueByKey!137 (toList!739 lt!39028) (_1!1111 lt!38738)) (Some!142 (_2!1111 lt!38738))))))

(declare-fun b!83082 () Bool)

(declare-fun contains!751 (List!1523 tuple2!2200) Bool)

(assert (=> b!83082 (= e!54249 (contains!751 (toList!739 lt!39028) lt!38738))))

(assert (= (and d!20871 res!43018) b!83081))

(assert (= (and b!83081 res!43019) b!83082))

(declare-fun m!85897 () Bool)

(assert (=> d!20871 m!85897))

(declare-fun m!85899 () Bool)

(assert (=> d!20871 m!85899))

(declare-fun m!85901 () Bool)

(assert (=> d!20871 m!85901))

(declare-fun m!85903 () Bool)

(assert (=> d!20871 m!85903))

(declare-fun m!85905 () Bool)

(assert (=> b!83081 m!85905))

(declare-fun m!85907 () Bool)

(assert (=> b!83082 m!85907))

(assert (=> b!82710 d!20871))

(declare-fun d!20873 () Bool)

(declare-fun e!54250 () Bool)

(assert (=> d!20873 e!54250))

(declare-fun res!43020 () Bool)

(assert (=> d!20873 (=> (not res!43020) (not e!54250))))

(declare-fun lt!39032 () ListLongMap!1447)

(assert (=> d!20873 (= res!43020 (contains!749 lt!39032 (_1!1111 lt!38742)))))

(declare-fun lt!39031 () List!1523)

(assert (=> d!20873 (= lt!39032 (ListLongMap!1448 lt!39031))))

(declare-fun lt!39034 () Unit!2426)

(declare-fun lt!39033 () Unit!2426)

(assert (=> d!20873 (= lt!39034 lt!39033)))

(assert (=> d!20873 (= (getValueByKey!137 lt!39031 (_1!1111 lt!38742)) (Some!142 (_2!1111 lt!38742)))))

(assert (=> d!20873 (= lt!39033 (lemmaContainsTupThenGetReturnValue!57 lt!39031 (_1!1111 lt!38742) (_2!1111 lt!38742)))))

(assert (=> d!20873 (= lt!39031 (insertStrictlySorted!60 (toList!739 lt!38730) (_1!1111 lt!38742) (_2!1111 lt!38742)))))

(assert (=> d!20873 (= (+!107 lt!38730 lt!38742) lt!39032)))

(declare-fun b!83083 () Bool)

(declare-fun res!43021 () Bool)

(assert (=> b!83083 (=> (not res!43021) (not e!54250))))

(assert (=> b!83083 (= res!43021 (= (getValueByKey!137 (toList!739 lt!39032) (_1!1111 lt!38742)) (Some!142 (_2!1111 lt!38742))))))

(declare-fun b!83084 () Bool)

(assert (=> b!83084 (= e!54250 (contains!751 (toList!739 lt!39032) lt!38742))))

(assert (= (and d!20873 res!43020) b!83083))

(assert (= (and b!83083 res!43021) b!83084))

(declare-fun m!85909 () Bool)

(assert (=> d!20873 m!85909))

(declare-fun m!85911 () Bool)

(assert (=> d!20873 m!85911))

(declare-fun m!85913 () Bool)

(assert (=> d!20873 m!85913))

(declare-fun m!85915 () Bool)

(assert (=> d!20873 m!85915))

(declare-fun m!85917 () Bool)

(assert (=> b!83083 m!85917))

(declare-fun m!85919 () Bool)

(assert (=> b!83084 m!85919))

(assert (=> b!82710 d!20873))

(declare-fun e!54269 () Bool)

(declare-fun b!83109 () Bool)

(declare-fun lt!39053 () ListLongMap!1447)

(assert (=> b!83109 (= e!54269 (= lt!39053 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun d!20875 () Bool)

(declare-fun e!54266 () Bool)

(assert (=> d!20875 e!54266))

(declare-fun res!43031 () Bool)

(assert (=> d!20875 (=> (not res!43031) (not e!54266))))

(assert (=> d!20875 (= res!43031 (not (contains!749 lt!39053 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!54268 () ListLongMap!1447)

(assert (=> d!20875 (= lt!39053 e!54268)))

(declare-fun c!13232 () Bool)

(assert (=> d!20875 (= c!13232 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(assert (=> d!20875 (validMask!0 (mask!6333 (v!2622 (underlying!282 thiss!992))))))

(assert (=> d!20875 (= (getCurrentListMapNoExtraKeys!71 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))) lt!39053)))

(declare-fun b!83110 () Bool)

(declare-fun e!54271 () Bool)

(assert (=> b!83110 (= e!54266 e!54271)))

(declare-fun c!13231 () Bool)

(declare-fun e!54267 () Bool)

(assert (=> b!83110 (= c!13231 e!54267)))

(declare-fun res!43032 () Bool)

(assert (=> b!83110 (=> (not res!43032) (not e!54267))))

(assert (=> b!83110 (= res!43032 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!83111 () Bool)

(declare-fun e!54265 () ListLongMap!1447)

(declare-fun call!7806 () ListLongMap!1447)

(assert (=> b!83111 (= e!54265 call!7806)))

(declare-fun b!83112 () Bool)

(declare-fun isEmpty!336 (ListLongMap!1447) Bool)

(assert (=> b!83112 (= e!54269 (isEmpty!336 lt!39053))))

(declare-fun b!83113 () Bool)

(assert (=> b!83113 (= e!54271 e!54269)))

(declare-fun c!13233 () Bool)

(assert (=> b!83113 (= c!13233 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!83114 () Bool)

(declare-fun res!43033 () Bool)

(assert (=> b!83114 (=> (not res!43033) (not e!54266))))

(assert (=> b!83114 (= res!43033 (not (contains!749 lt!39053 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!83115 () Bool)

(assert (=> b!83115 (= e!54268 (ListLongMap!1448 Nil!1520))))

(declare-fun b!83116 () Bool)

(assert (=> b!83116 (= e!54267 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83116 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!83117 () Bool)

(declare-fun lt!39050 () Unit!2426)

(declare-fun lt!39049 () Unit!2426)

(assert (=> b!83117 (= lt!39050 lt!39049)))

(declare-fun lt!39051 () (_ BitVec 64))

(declare-fun lt!39054 () (_ BitVec 64))

(declare-fun lt!39055 () ListLongMap!1447)

(declare-fun lt!39052 () V!3017)

(assert (=> b!83117 (not (contains!749 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052)) lt!39054))))

(declare-fun addStillNotContains!31 (ListLongMap!1447 (_ BitVec 64) V!3017 (_ BitVec 64)) Unit!2426)

(assert (=> b!83117 (= lt!39049 (addStillNotContains!31 lt!39055 lt!39051 lt!39052 lt!39054))))

(assert (=> b!83117 (= lt!39054 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!83117 (= lt!39052 (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!83117 (= lt!39051 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!83117 (= lt!39055 call!7806)))

(assert (=> b!83117 (= e!54265 (+!107 call!7806 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!7803 () Bool)

(assert (=> bm!7803 (= call!7806 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun b!83118 () Bool)

(assert (=> b!83118 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(assert (=> b!83118 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2145 (_values!2299 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun e!54270 () Bool)

(assert (=> b!83118 (= e!54270 (= (apply!81 lt!39053 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!83119 () Bool)

(assert (=> b!83119 (= e!54268 e!54265)))

(declare-fun c!13234 () Bool)

(assert (=> b!83119 (= c!13234 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!83120 () Bool)

(assert (=> b!83120 (= e!54271 e!54270)))

(assert (=> b!83120 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun res!43030 () Bool)

(assert (=> b!83120 (= res!43030 (contains!749 lt!39053 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83120 (=> (not res!43030) (not e!54270))))

(assert (= (and d!20875 c!13232) b!83115))

(assert (= (and d!20875 (not c!13232)) b!83119))

(assert (= (and b!83119 c!13234) b!83117))

(assert (= (and b!83119 (not c!13234)) b!83111))

(assert (= (or b!83117 b!83111) bm!7803))

(assert (= (and d!20875 res!43031) b!83114))

(assert (= (and b!83114 res!43033) b!83110))

(assert (= (and b!83110 res!43032) b!83116))

(assert (= (and b!83110 c!13231) b!83120))

(assert (= (and b!83110 (not c!13231)) b!83113))

(assert (= (and b!83120 res!43030) b!83118))

(assert (= (and b!83113 c!13233) b!83109))

(assert (= (and b!83113 (not c!13233)) b!83112))

(declare-fun b_lambda!3693 () Bool)

(assert (=> (not b_lambda!3693) (not b!83117)))

(assert (=> b!83117 t!5210))

(declare-fun b_and!5057 () Bool)

(assert (= b_and!5053 (and (=> t!5210 result!2875) b_and!5057)))

(assert (=> b!83117 t!5212))

(declare-fun b_and!5059 () Bool)

(assert (= b_and!5055 (and (=> t!5212 result!2879) b_and!5059)))

(declare-fun b_lambda!3695 () Bool)

(assert (=> (not b_lambda!3695) (not b!83118)))

(assert (=> b!83118 t!5210))

(declare-fun b_and!5061 () Bool)

(assert (= b_and!5057 (and (=> t!5210 result!2875) b_and!5061)))

(assert (=> b!83118 t!5212))

(declare-fun b_and!5063 () Bool)

(assert (= b_and!5059 (and (=> t!5212 result!2879) b_and!5063)))

(declare-fun m!85921 () Bool)

(assert (=> bm!7803 m!85921))

(declare-fun m!85923 () Bool)

(assert (=> b!83112 m!85923))

(assert (=> b!83116 m!85767))

(assert (=> b!83116 m!85767))

(assert (=> b!83116 m!85827))

(declare-fun m!85925 () Bool)

(assert (=> b!83117 m!85925))

(declare-fun m!85927 () Bool)

(assert (=> b!83117 m!85927))

(assert (=> b!83117 m!85823))

(assert (=> b!83117 m!85587))

(assert (=> b!83117 m!85825))

(declare-fun m!85929 () Bool)

(assert (=> b!83117 m!85929))

(declare-fun m!85931 () Bool)

(assert (=> b!83117 m!85931))

(assert (=> b!83117 m!85767))

(assert (=> b!83117 m!85587))

(assert (=> b!83117 m!85929))

(assert (=> b!83117 m!85823))

(declare-fun m!85933 () Bool)

(assert (=> d!20875 m!85933))

(assert (=> d!20875 m!85577))

(assert (=> b!83119 m!85767))

(assert (=> b!83119 m!85767))

(assert (=> b!83119 m!85827))

(assert (=> b!83109 m!85921))

(assert (=> b!83120 m!85767))

(assert (=> b!83120 m!85767))

(declare-fun m!85935 () Bool)

(assert (=> b!83120 m!85935))

(declare-fun m!85937 () Bool)

(assert (=> b!83114 m!85937))

(assert (=> b!83118 m!85823))

(assert (=> b!83118 m!85767))

(assert (=> b!83118 m!85587))

(assert (=> b!83118 m!85767))

(declare-fun m!85939 () Bool)

(assert (=> b!83118 m!85939))

(assert (=> b!83118 m!85823))

(assert (=> b!83118 m!85587))

(assert (=> b!83118 m!85825))

(assert (=> b!82710 d!20875))

(declare-fun d!20877 () Bool)

(declare-fun e!54272 () Bool)

(assert (=> d!20877 e!54272))

(declare-fun res!43034 () Bool)

(assert (=> d!20877 (=> (not res!43034) (not e!54272))))

(declare-fun lt!39057 () ListLongMap!1447)

(assert (=> d!20877 (= res!43034 (contains!749 lt!39057 (_1!1111 lt!38729)))))

(declare-fun lt!39056 () List!1523)

(assert (=> d!20877 (= lt!39057 (ListLongMap!1448 lt!39056))))

(declare-fun lt!39059 () Unit!2426)

(declare-fun lt!39058 () Unit!2426)

(assert (=> d!20877 (= lt!39059 lt!39058)))

(assert (=> d!20877 (= (getValueByKey!137 lt!39056 (_1!1111 lt!38729)) (Some!142 (_2!1111 lt!38729)))))

(assert (=> d!20877 (= lt!39058 (lemmaContainsTupThenGetReturnValue!57 lt!39056 (_1!1111 lt!38729) (_2!1111 lt!38729)))))

(assert (=> d!20877 (= lt!39056 (insertStrictlySorted!60 (toList!739 lt!38728) (_1!1111 lt!38729) (_2!1111 lt!38729)))))

(assert (=> d!20877 (= (+!107 lt!38728 lt!38729) lt!39057)))

(declare-fun b!83121 () Bool)

(declare-fun res!43035 () Bool)

(assert (=> b!83121 (=> (not res!43035) (not e!54272))))

(assert (=> b!83121 (= res!43035 (= (getValueByKey!137 (toList!739 lt!39057) (_1!1111 lt!38729)) (Some!142 (_2!1111 lt!38729))))))

(declare-fun b!83122 () Bool)

(assert (=> b!83122 (= e!54272 (contains!751 (toList!739 lt!39057) lt!38729))))

(assert (= (and d!20877 res!43034) b!83121))

(assert (= (and b!83121 res!43035) b!83122))

(declare-fun m!85941 () Bool)

(assert (=> d!20877 m!85941))

(declare-fun m!85943 () Bool)

(assert (=> d!20877 m!85943))

(declare-fun m!85945 () Bool)

(assert (=> d!20877 m!85945))

(declare-fun m!85947 () Bool)

(assert (=> d!20877 m!85947))

(declare-fun m!85949 () Bool)

(assert (=> b!83121 m!85949))

(declare-fun m!85951 () Bool)

(assert (=> b!83122 m!85951))

(assert (=> b!82710 d!20877))

(declare-fun d!20879 () Bool)

(declare-fun e!54273 () Bool)

(assert (=> d!20879 e!54273))

(declare-fun res!43036 () Bool)

(assert (=> d!20879 (=> (not res!43036) (not e!54273))))

(declare-fun lt!39061 () ListLongMap!1447)

(assert (=> d!20879 (= res!43036 (contains!749 lt!39061 (_1!1111 lt!38729)))))

(declare-fun lt!39060 () List!1523)

(assert (=> d!20879 (= lt!39061 (ListLongMap!1448 lt!39060))))

(declare-fun lt!39063 () Unit!2426)

(declare-fun lt!39062 () Unit!2426)

(assert (=> d!20879 (= lt!39063 lt!39062)))

(assert (=> d!20879 (= (getValueByKey!137 lt!39060 (_1!1111 lt!38729)) (Some!142 (_2!1111 lt!38729)))))

(assert (=> d!20879 (= lt!39062 (lemmaContainsTupThenGetReturnValue!57 lt!39060 (_1!1111 lt!38729) (_2!1111 lt!38729)))))

(assert (=> d!20879 (= lt!39060 (insertStrictlySorted!60 (toList!739 lt!38741) (_1!1111 lt!38729) (_2!1111 lt!38729)))))

(assert (=> d!20879 (= (+!107 lt!38741 lt!38729) lt!39061)))

(declare-fun b!83123 () Bool)

(declare-fun res!43037 () Bool)

(assert (=> b!83123 (=> (not res!43037) (not e!54273))))

(assert (=> b!83123 (= res!43037 (= (getValueByKey!137 (toList!739 lt!39061) (_1!1111 lt!38729)) (Some!142 (_2!1111 lt!38729))))))

(declare-fun b!83124 () Bool)

(assert (=> b!83124 (= e!54273 (contains!751 (toList!739 lt!39061) lt!38729))))

(assert (= (and d!20879 res!43036) b!83123))

(assert (= (and b!83123 res!43037) b!83124))

(declare-fun m!85953 () Bool)

(assert (=> d!20879 m!85953))

(declare-fun m!85955 () Bool)

(assert (=> d!20879 m!85955))

(declare-fun m!85957 () Bool)

(assert (=> d!20879 m!85957))

(declare-fun m!85959 () Bool)

(assert (=> d!20879 m!85959))

(declare-fun m!85961 () Bool)

(assert (=> b!83123 m!85961))

(declare-fun m!85963 () Bool)

(assert (=> b!83124 m!85963))

(assert (=> b!82710 d!20879))

(declare-fun d!20881 () Bool)

(assert (=> d!20881 (= (+!107 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (+!107 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(declare-fun lt!39066 () Unit!2426)

(declare-fun choose!491 (ListLongMap!1447 (_ BitVec 64) V!3017 (_ BitVec 64) V!3017) Unit!2426)

(assert (=> d!20881 (= lt!39066 (choose!491 lt!38741 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))

(assert (=> d!20881 (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20881 (= (addCommutativeForDiffKeys!26 lt!38741 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) lt!39066)))

(declare-fun bs!3509 () Bool)

(assert (= bs!3509 d!20881))

(declare-fun m!85965 () Bool)

(assert (=> bs!3509 m!85965))

(declare-fun m!85967 () Bool)

(assert (=> bs!3509 m!85967))

(declare-fun m!85969 () Bool)

(assert (=> bs!3509 m!85969))

(declare-fun m!85971 () Bool)

(assert (=> bs!3509 m!85971))

(assert (=> bs!3509 m!85969))

(assert (=> bs!3509 m!85965))

(assert (=> bs!3509 m!85563))

(declare-fun m!85973 () Bool)

(assert (=> bs!3509 m!85973))

(assert (=> b!82710 d!20881))

(declare-fun d!20883 () Bool)

(declare-fun e!54274 () Bool)

(assert (=> d!20883 e!54274))

(declare-fun res!43038 () Bool)

(assert (=> d!20883 (=> (not res!43038) (not e!54274))))

(declare-fun lt!39068 () ListLongMap!1447)

(assert (=> d!20883 (= res!43038 (contains!749 lt!39068 (_1!1111 lt!38729)))))

(declare-fun lt!39067 () List!1523)

(assert (=> d!20883 (= lt!39068 (ListLongMap!1448 lt!39067))))

(declare-fun lt!39070 () Unit!2426)

(declare-fun lt!39069 () Unit!2426)

(assert (=> d!20883 (= lt!39070 lt!39069)))

(assert (=> d!20883 (= (getValueByKey!137 lt!39067 (_1!1111 lt!38729)) (Some!142 (_2!1111 lt!38729)))))

(assert (=> d!20883 (= lt!39069 (lemmaContainsTupThenGetReturnValue!57 lt!39067 (_1!1111 lt!38729) (_2!1111 lt!38729)))))

(assert (=> d!20883 (= lt!39067 (insertStrictlySorted!60 (toList!739 (+!107 lt!38728 lt!38742)) (_1!1111 lt!38729) (_2!1111 lt!38729)))))

(assert (=> d!20883 (= (+!107 (+!107 lt!38728 lt!38742) lt!38729) lt!39068)))

(declare-fun b!83125 () Bool)

(declare-fun res!43039 () Bool)

(assert (=> b!83125 (=> (not res!43039) (not e!54274))))

(assert (=> b!83125 (= res!43039 (= (getValueByKey!137 (toList!739 lt!39068) (_1!1111 lt!38729)) (Some!142 (_2!1111 lt!38729))))))

(declare-fun b!83126 () Bool)

(assert (=> b!83126 (= e!54274 (contains!751 (toList!739 lt!39068) lt!38729))))

(assert (= (and d!20883 res!43038) b!83125))

(assert (= (and b!83125 res!43039) b!83126))

(declare-fun m!85975 () Bool)

(assert (=> d!20883 m!85975))

(declare-fun m!85977 () Bool)

(assert (=> d!20883 m!85977))

(declare-fun m!85979 () Bool)

(assert (=> d!20883 m!85979))

(declare-fun m!85981 () Bool)

(assert (=> d!20883 m!85981))

(declare-fun m!85983 () Bool)

(assert (=> b!83125 m!85983))

(declare-fun m!85985 () Bool)

(assert (=> b!83126 m!85985))

(assert (=> b!82710 d!20883))

(declare-fun d!20885 () Bool)

(declare-fun e!54275 () Bool)

(assert (=> d!20885 e!54275))

(declare-fun res!43040 () Bool)

(assert (=> d!20885 (=> (not res!43040) (not e!54275))))

(declare-fun lt!39072 () ListLongMap!1447)

(assert (=> d!20885 (= res!43040 (contains!749 lt!39072 (_1!1111 lt!38738)))))

(declare-fun lt!39071 () List!1523)

(assert (=> d!20885 (= lt!39072 (ListLongMap!1448 lt!39071))))

(declare-fun lt!39074 () Unit!2426)

(declare-fun lt!39073 () Unit!2426)

(assert (=> d!20885 (= lt!39074 lt!39073)))

(assert (=> d!20885 (= (getValueByKey!137 lt!39071 (_1!1111 lt!38738)) (Some!142 (_2!1111 lt!38738)))))

(assert (=> d!20885 (= lt!39073 (lemmaContainsTupThenGetReturnValue!57 lt!39071 (_1!1111 lt!38738) (_2!1111 lt!38738)))))

(assert (=> d!20885 (= lt!39071 (insertStrictlySorted!60 (toList!739 lt!38741) (_1!1111 lt!38738) (_2!1111 lt!38738)))))

(assert (=> d!20885 (= (+!107 lt!38741 lt!38738) lt!39072)))

(declare-fun b!83127 () Bool)

(declare-fun res!43041 () Bool)

(assert (=> b!83127 (=> (not res!43041) (not e!54275))))

(assert (=> b!83127 (= res!43041 (= (getValueByKey!137 (toList!739 lt!39072) (_1!1111 lt!38738)) (Some!142 (_2!1111 lt!38738))))))

(declare-fun b!83128 () Bool)

(assert (=> b!83128 (= e!54275 (contains!751 (toList!739 lt!39072) lt!38738))))

(assert (= (and d!20885 res!43040) b!83127))

(assert (= (and b!83127 res!43041) b!83128))

(declare-fun m!85987 () Bool)

(assert (=> d!20885 m!85987))

(declare-fun m!85989 () Bool)

(assert (=> d!20885 m!85989))

(declare-fun m!85991 () Bool)

(assert (=> d!20885 m!85991))

(declare-fun m!85993 () Bool)

(assert (=> d!20885 m!85993))

(declare-fun m!85995 () Bool)

(assert (=> b!83127 m!85995))

(declare-fun m!85997 () Bool)

(assert (=> b!83128 m!85997))

(assert (=> b!82710 d!20885))

(declare-fun d!20887 () Bool)

(assert (=> d!20887 (= (+!107 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (+!107 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(declare-fun lt!39075 () Unit!2426)

(assert (=> d!20887 (= lt!39075 (choose!491 lt!38728 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))

(assert (=> d!20887 (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20887 (= (addCommutativeForDiffKeys!26 lt!38728 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))) lt!39075)))

(declare-fun bs!3510 () Bool)

(assert (= bs!3510 d!20887))

(declare-fun m!85999 () Bool)

(assert (=> bs!3510 m!85999))

(declare-fun m!86001 () Bool)

(assert (=> bs!3510 m!86001))

(declare-fun m!86003 () Bool)

(assert (=> bs!3510 m!86003))

(declare-fun m!86005 () Bool)

(assert (=> bs!3510 m!86005))

(assert (=> bs!3510 m!86003))

(assert (=> bs!3510 m!85999))

(assert (=> bs!3510 m!85563))

(declare-fun m!86007 () Bool)

(assert (=> bs!3510 m!86007))

(assert (=> b!82710 d!20887))

(declare-fun d!20889 () Bool)

(declare-fun e!54276 () Bool)

(assert (=> d!20889 e!54276))

(declare-fun res!43042 () Bool)

(assert (=> d!20889 (=> (not res!43042) (not e!54276))))

(declare-fun lt!39077 () ListLongMap!1447)

(assert (=> d!20889 (= res!43042 (contains!749 lt!39077 (_1!1111 lt!38742)))))

(declare-fun lt!39076 () List!1523)

(assert (=> d!20889 (= lt!39077 (ListLongMap!1448 lt!39076))))

(declare-fun lt!39079 () Unit!2426)

(declare-fun lt!39078 () Unit!2426)

(assert (=> d!20889 (= lt!39079 lt!39078)))

(assert (=> d!20889 (= (getValueByKey!137 lt!39076 (_1!1111 lt!38742)) (Some!142 (_2!1111 lt!38742)))))

(assert (=> d!20889 (= lt!39078 (lemmaContainsTupThenGetReturnValue!57 lt!39076 (_1!1111 lt!38742) (_2!1111 lt!38742)))))

(assert (=> d!20889 (= lt!39076 (insertStrictlySorted!60 (toList!739 lt!38728) (_1!1111 lt!38742) (_2!1111 lt!38742)))))

(assert (=> d!20889 (= (+!107 lt!38728 lt!38742) lt!39077)))

(declare-fun b!83129 () Bool)

(declare-fun res!43043 () Bool)

(assert (=> b!83129 (=> (not res!43043) (not e!54276))))

(assert (=> b!83129 (= res!43043 (= (getValueByKey!137 (toList!739 lt!39077) (_1!1111 lt!38742)) (Some!142 (_2!1111 lt!38742))))))

(declare-fun b!83130 () Bool)

(assert (=> b!83130 (= e!54276 (contains!751 (toList!739 lt!39077) lt!38742))))

(assert (= (and d!20889 res!43042) b!83129))

(assert (= (and b!83129 res!43043) b!83130))

(declare-fun m!86009 () Bool)

(assert (=> d!20889 m!86009))

(declare-fun m!86011 () Bool)

(assert (=> d!20889 m!86011))

(declare-fun m!86013 () Bool)

(assert (=> d!20889 m!86013))

(declare-fun m!86015 () Bool)

(assert (=> d!20889 m!86015))

(declare-fun m!86017 () Bool)

(assert (=> b!83129 m!86017))

(declare-fun m!86019 () Bool)

(assert (=> b!83130 m!86019))

(assert (=> b!82710 d!20889))

(declare-fun d!20891 () Bool)

(assert (=> d!20891 (= (validMask!0 (mask!6333 (v!2622 (underlying!282 thiss!992)))) (and (or (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000001111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000011111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000001111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000011111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000001111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000011111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000001111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000011111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000111111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000001111111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000011111111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000111111111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000001111111111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000011111111111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000111111111111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000001111111111111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000011111111111111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000111111111111111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000001111111111111111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000011111111111111111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000111111111111111111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00001111111111111111111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00011111111111111111111111111111) (= (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!82710 d!20891))

(declare-fun mapNonEmpty!3383 () Bool)

(declare-fun mapRes!3383 () Bool)

(declare-fun tp!8909 () Bool)

(declare-fun e!54281 () Bool)

(assert (=> mapNonEmpty!3383 (= mapRes!3383 (and tp!8909 e!54281))))

(declare-fun mapValue!3383 () ValueCell!920)

(declare-fun mapKey!3383 () (_ BitVec 32))

(declare-fun mapRest!3383 () (Array (_ BitVec 32) ValueCell!920))

(assert (=> mapNonEmpty!3383 (= mapRest!3368 (store mapRest!3383 mapKey!3383 mapValue!3383))))

(declare-fun b!83137 () Bool)

(assert (=> b!83137 (= e!54281 tp_is_empty!2527)))

(declare-fun condMapEmpty!3383 () Bool)

(declare-fun mapDefault!3383 () ValueCell!920)

(assert (=> mapNonEmpty!3368 (= condMapEmpty!3383 (= mapRest!3368 ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3383)))))

(declare-fun e!54282 () Bool)

(assert (=> mapNonEmpty!3368 (= tp!8881 (and e!54282 mapRes!3383))))

(declare-fun mapIsEmpty!3383 () Bool)

(assert (=> mapIsEmpty!3383 mapRes!3383))

(declare-fun b!83138 () Bool)

(assert (=> b!83138 (= e!54282 tp_is_empty!2527)))

(assert (= (and mapNonEmpty!3368 condMapEmpty!3383) mapIsEmpty!3383))

(assert (= (and mapNonEmpty!3368 (not condMapEmpty!3383)) mapNonEmpty!3383))

(assert (= (and mapNonEmpty!3383 ((_ is ValueCellFull!920) mapValue!3383)) b!83137))

(assert (= (and mapNonEmpty!3368 ((_ is ValueCellFull!920) mapDefault!3383)) b!83138))

(declare-fun m!86021 () Bool)

(assert (=> mapNonEmpty!3383 m!86021))

(declare-fun mapNonEmpty!3384 () Bool)

(declare-fun mapRes!3384 () Bool)

(declare-fun tp!8910 () Bool)

(declare-fun e!54283 () Bool)

(assert (=> mapNonEmpty!3384 (= mapRes!3384 (and tp!8910 e!54283))))

(declare-fun mapRest!3384 () (Array (_ BitVec 32) ValueCell!920))

(declare-fun mapValue!3384 () ValueCell!920)

(declare-fun mapKey!3384 () (_ BitVec 32))

(assert (=> mapNonEmpty!3384 (= mapRest!3367 (store mapRest!3384 mapKey!3384 mapValue!3384))))

(declare-fun b!83139 () Bool)

(assert (=> b!83139 (= e!54283 tp_is_empty!2527)))

(declare-fun condMapEmpty!3384 () Bool)

(declare-fun mapDefault!3384 () ValueCell!920)

(assert (=> mapNonEmpty!3367 (= condMapEmpty!3384 (= mapRest!3367 ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3384)))))

(declare-fun e!54284 () Bool)

(assert (=> mapNonEmpty!3367 (= tp!8879 (and e!54284 mapRes!3384))))

(declare-fun mapIsEmpty!3384 () Bool)

(assert (=> mapIsEmpty!3384 mapRes!3384))

(declare-fun b!83140 () Bool)

(assert (=> b!83140 (= e!54284 tp_is_empty!2527)))

(assert (= (and mapNonEmpty!3367 condMapEmpty!3384) mapIsEmpty!3384))

(assert (= (and mapNonEmpty!3367 (not condMapEmpty!3384)) mapNonEmpty!3384))

(assert (= (and mapNonEmpty!3384 ((_ is ValueCellFull!920) mapValue!3384)) b!83139))

(assert (= (and mapNonEmpty!3367 ((_ is ValueCellFull!920) mapDefault!3384)) b!83140))

(declare-fun m!86023 () Bool)

(assert (=> mapNonEmpty!3384 m!86023))

(declare-fun b_lambda!3697 () Bool)

(assert (= b_lambda!3693 (or (and b!82709 b_free!2221) (and b!82707 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))))) b_lambda!3697)))

(declare-fun b_lambda!3699 () Bool)

(assert (= b_lambda!3695 (or (and b!82709 b_free!2221) (and b!82707 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))))) b_lambda!3699)))

(declare-fun b_lambda!3701 () Bool)

(assert (= b_lambda!3691 (or (and b!82709 b_free!2221) (and b!82707 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))))) b_lambda!3701)))

(check-sat (not d!20889) (not b!82944) (not b!83109) (not d!20875) (not b!82883) (not mapNonEmpty!3384) (not b!83118) (not bm!7727) (not b!82847) (not b_lambda!3701) (not d!20861) (not b!83114) (not d!20867) (not b!83083) (not b!83112) (not bm!7800) (not b!83127) (not b_next!2221) (not d!20851) (not b!83044) (not b!83065) (not bm!7786) (not b!82956) (not b!83042) (not d!20869) (not b!82954) (not d!20853) (not b!82940) (not b!82868) b_and!5061 (not b!82855) (not b!83074) (not bm!7723) (not b!83122) (not b!83059) (not bm!7790) (not b!83129) (not b!82938) (not b!82882) (not b!82947) (not b!83081) (not b_lambda!3689) (not d!20877) (not b!83084) (not bm!7792) (not b!83117) (not b!82884) (not b!82942) (not d!20857) (not b!82856) (not b!83116) (not b!83123) (not b!82863) (not bm!7785) (not bm!7793) (not bm!7788) (not d!20873) (not b!83082) (not b!82848) (not b!83119) (not bm!7784) (not b!83120) (not b!82929) (not b!83128) (not bm!7797) (not d!20883) tp_is_empty!2527 (not b!83124) (not d!20885) (not d!20849) (not bm!7779) (not mapNonEmpty!3383) b_and!5063 (not bm!7783) (not b_next!2223) (not d!20865) (not b!83130) (not bm!7728) (not b!82936) (not d!20871) (not bm!7795) (not b!83125) (not b!82857) (not b!83121) (not bm!7722) (not d!20887) (not b!83041) (not b!83126) (not bm!7803) (not d!20863) (not b!82931) (not d!20881) (not bm!7707) (not b!83043) (not b_lambda!3697) (not b_lambda!3699) (not d!20879))
(check-sat b_and!5061 b_and!5063 (not b_next!2221) (not b_next!2223))
(get-model)

(declare-fun d!20893 () Bool)

(assert (=> d!20893 (= (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!82931 d!20893))

(declare-fun d!20895 () Bool)

(declare-fun lt!39082 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!87 (List!1523) (InoxSet tuple2!2200))

(assert (=> d!20895 (= lt!39082 (select (content!87 (toList!739 lt!39057)) lt!38729))))

(declare-fun e!54289 () Bool)

(assert (=> d!20895 (= lt!39082 e!54289)))

(declare-fun res!43048 () Bool)

(assert (=> d!20895 (=> (not res!43048) (not e!54289))))

(assert (=> d!20895 (= res!43048 ((_ is Cons!1519) (toList!739 lt!39057)))))

(assert (=> d!20895 (= (contains!751 (toList!739 lt!39057) lt!38729) lt!39082)))

(declare-fun b!83145 () Bool)

(declare-fun e!54290 () Bool)

(assert (=> b!83145 (= e!54289 e!54290)))

(declare-fun res!43049 () Bool)

(assert (=> b!83145 (=> res!43049 e!54290)))

(assert (=> b!83145 (= res!43049 (= (h!2109 (toList!739 lt!39057)) lt!38729))))

(declare-fun b!83146 () Bool)

(assert (=> b!83146 (= e!54290 (contains!751 (t!5214 (toList!739 lt!39057)) lt!38729))))

(assert (= (and d!20895 res!43048) b!83145))

(assert (= (and b!83145 (not res!43049)) b!83146))

(declare-fun m!86025 () Bool)

(assert (=> d!20895 m!86025))

(declare-fun m!86027 () Bool)

(assert (=> d!20895 m!86027))

(declare-fun m!86029 () Bool)

(assert (=> b!83146 m!86029))

(assert (=> b!83122 d!20895))

(declare-fun b!83157 () Bool)

(declare-fun e!54296 () Option!143)

(assert (=> b!83157 (= e!54296 (getValueByKey!137 (t!5214 (toList!739 lt!39077)) (_1!1111 lt!38742)))))

(declare-fun d!20897 () Bool)

(declare-fun c!13239 () Bool)

(assert (=> d!20897 (= c!13239 (and ((_ is Cons!1519) (toList!739 lt!39077)) (= (_1!1111 (h!2109 (toList!739 lt!39077))) (_1!1111 lt!38742))))))

(declare-fun e!54295 () Option!143)

(assert (=> d!20897 (= (getValueByKey!137 (toList!739 lt!39077) (_1!1111 lt!38742)) e!54295)))

(declare-fun b!83155 () Bool)

(assert (=> b!83155 (= e!54295 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39077)))))))

(declare-fun b!83158 () Bool)

(assert (=> b!83158 (= e!54296 None!141)))

(declare-fun b!83156 () Bool)

(assert (=> b!83156 (= e!54295 e!54296)))

(declare-fun c!13240 () Bool)

(assert (=> b!83156 (= c!13240 (and ((_ is Cons!1519) (toList!739 lt!39077)) (not (= (_1!1111 (h!2109 (toList!739 lt!39077))) (_1!1111 lt!38742)))))))

(assert (= (and d!20897 c!13239) b!83155))

(assert (= (and d!20897 (not c!13239)) b!83156))

(assert (= (and b!83156 c!13240) b!83157))

(assert (= (and b!83156 (not c!13240)) b!83158))

(declare-fun m!86031 () Bool)

(assert (=> b!83157 m!86031))

(assert (=> b!83129 d!20897))

(declare-fun d!20899 () Bool)

(declare-fun e!54297 () Bool)

(assert (=> d!20899 e!54297))

(declare-fun res!43050 () Bool)

(assert (=> d!20899 (=> (not res!43050) (not e!54297))))

(declare-fun lt!39084 () ListLongMap!1447)

(assert (=> d!20899 (= res!43050 (contains!749 lt!39084 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39083 () List!1523)

(assert (=> d!20899 (= lt!39084 (ListLongMap!1448 lt!39083))))

(declare-fun lt!39086 () Unit!2426)

(declare-fun lt!39085 () Unit!2426)

(assert (=> d!20899 (= lt!39086 lt!39085)))

(assert (=> d!20899 (= (getValueByKey!137 lt!39083 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!20899 (= lt!39085 (lemmaContainsTupThenGetReturnValue!57 lt!39083 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!20899 (= lt!39083 (insertStrictlySorted!60 (toList!739 call!7730) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!20899 (= (+!107 call!7730 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39084)))

(declare-fun b!83159 () Bool)

(declare-fun res!43051 () Bool)

(assert (=> b!83159 (=> (not res!43051) (not e!54297))))

(assert (=> b!83159 (= res!43051 (= (getValueByKey!137 (toList!739 lt!39084) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!83160 () Bool)

(assert (=> b!83160 (= e!54297 (contains!751 (toList!739 lt!39084) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!20899 res!43050) b!83159))

(assert (= (and b!83159 res!43051) b!83160))

(declare-fun m!86033 () Bool)

(assert (=> d!20899 m!86033))

(declare-fun m!86035 () Bool)

(assert (=> d!20899 m!86035))

(declare-fun m!86037 () Bool)

(assert (=> d!20899 m!86037))

(declare-fun m!86039 () Bool)

(assert (=> d!20899 m!86039))

(declare-fun m!86041 () Bool)

(assert (=> b!83159 m!86041))

(declare-fun m!86043 () Bool)

(assert (=> b!83160 m!86043))

(assert (=> b!82947 d!20899))

(declare-fun bm!7804 () Bool)

(declare-fun call!7807 () Bool)

(declare-fun c!13241 () Bool)

(assert (=> bm!7804 (= call!7807 (arrayNoDuplicates!0 (_keys!3983 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13241 (Cons!1518 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) Nil!1519) Nil!1519)))))

(declare-fun d!20901 () Bool)

(declare-fun res!43054 () Bool)

(declare-fun e!54299 () Bool)

(assert (=> d!20901 (=> res!43054 e!54299)))

(assert (=> d!20901 (= res!43054 (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(assert (=> d!20901 (= (arrayNoDuplicates!0 (_keys!3983 newMap!16) #b00000000000000000000000000000000 Nil!1519) e!54299)))

(declare-fun b!83161 () Bool)

(declare-fun e!54300 () Bool)

(assert (=> b!83161 (= e!54300 call!7807)))

(declare-fun b!83162 () Bool)

(assert (=> b!83162 (= e!54300 call!7807)))

(declare-fun b!83163 () Bool)

(declare-fun e!54301 () Bool)

(assert (=> b!83163 (= e!54301 (contains!750 Nil!1519 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83164 () Bool)

(declare-fun e!54298 () Bool)

(assert (=> b!83164 (= e!54298 e!54300)))

(assert (=> b!83164 (= c!13241 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83165 () Bool)

(assert (=> b!83165 (= e!54299 e!54298)))

(declare-fun res!43053 () Bool)

(assert (=> b!83165 (=> (not res!43053) (not e!54298))))

(assert (=> b!83165 (= res!43053 (not e!54301))))

(declare-fun res!43052 () Bool)

(assert (=> b!83165 (=> (not res!43052) (not e!54301))))

(assert (=> b!83165 (= res!43052 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!20901 (not res!43054)) b!83165))

(assert (= (and b!83165 res!43052) b!83163))

(assert (= (and b!83165 res!43053) b!83164))

(assert (= (and b!83164 c!13241) b!83161))

(assert (= (and b!83164 (not c!13241)) b!83162))

(assert (= (or b!83161 b!83162) bm!7804))

(declare-fun m!86045 () Bool)

(assert (=> bm!7804 m!86045))

(declare-fun m!86047 () Bool)

(assert (=> bm!7804 m!86047))

(assert (=> b!83163 m!86045))

(assert (=> b!83163 m!86045))

(declare-fun m!86049 () Bool)

(assert (=> b!83163 m!86049))

(assert (=> b!83164 m!86045))

(assert (=> b!83164 m!86045))

(declare-fun m!86051 () Bool)

(assert (=> b!83164 m!86051))

(assert (=> b!83165 m!86045))

(assert (=> b!83165 m!86045))

(assert (=> b!83165 m!86051))

(assert (=> b!82857 d!20901))

(declare-fun d!20903 () Bool)

(declare-fun e!54303 () Bool)

(assert (=> d!20903 e!54303))

(declare-fun res!43055 () Bool)

(assert (=> d!20903 (=> res!43055 e!54303)))

(declare-fun lt!39088 () Bool)

(assert (=> d!20903 (= res!43055 (not lt!39088))))

(declare-fun lt!39090 () Bool)

(assert (=> d!20903 (= lt!39088 lt!39090)))

(declare-fun lt!39089 () Unit!2426)

(declare-fun e!54302 () Unit!2426)

(assert (=> d!20903 (= lt!39089 e!54302)))

(declare-fun c!13242 () Bool)

(assert (=> d!20903 (= c!13242 lt!39090)))

(assert (=> d!20903 (= lt!39090 (containsKey!141 (toList!739 call!7780) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))))))

(assert (=> d!20903 (= (contains!749 call!7780 (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))) lt!39088)))

(declare-fun b!83166 () Bool)

(declare-fun lt!39087 () Unit!2426)

(assert (=> b!83166 (= e!54302 lt!39087)))

(assert (=> b!83166 (= lt!39087 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 call!7780) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))))))

(assert (=> b!83166 (isDefined!91 (getValueByKey!137 (toList!739 call!7780) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))))))

(declare-fun b!83167 () Bool)

(declare-fun Unit!2437 () Unit!2426)

(assert (=> b!83167 (= e!54302 Unit!2437)))

(declare-fun b!83168 () Bool)

(assert (=> b!83168 (= e!54303 (isDefined!91 (getValueByKey!137 (toList!739 call!7780) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998))))))))

(assert (= (and d!20903 c!13242) b!83166))

(assert (= (and d!20903 (not c!13242)) b!83167))

(assert (= (and d!20903 (not res!43055)) b!83168))

(declare-fun m!86053 () Bool)

(assert (=> d!20903 m!86053))

(declare-fun m!86055 () Bool)

(assert (=> b!83166 m!86055))

(declare-fun m!86057 () Bool)

(assert (=> b!83166 m!86057))

(assert (=> b!83166 m!86057))

(declare-fun m!86059 () Bool)

(assert (=> b!83166 m!86059))

(assert (=> b!83168 m!86057))

(assert (=> b!83168 m!86057))

(assert (=> b!83168 m!86059))

(assert (=> bm!7788 d!20903))

(assert (=> b!83119 d!20893))

(declare-fun b!83177 () Bool)

(declare-fun e!54308 () (_ BitVec 32))

(assert (=> b!83177 (= e!54308 #b00000000000000000000000000000000)))

(declare-fun d!20905 () Bool)

(declare-fun lt!39093 () (_ BitVec 32))

(assert (=> d!20905 (and (bvsge lt!39093 #b00000000000000000000000000000000) (bvsle lt!39093 (bvsub (size!2144 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!20905 (= lt!39093 e!54308)))

(declare-fun c!13247 () Bool)

(assert (=> d!20905 (= c!13247 (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(assert (=> d!20905 (and (bvsle #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2144 (_keys!3983 newMap!16)) (size!2144 (_keys!3983 newMap!16))))))

(assert (=> d!20905 (= (arrayCountValidKeys!0 (_keys!3983 newMap!16) #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) lt!39093)))

(declare-fun b!83178 () Bool)

(declare-fun e!54309 () (_ BitVec 32))

(assert (=> b!83178 (= e!54308 e!54309)))

(declare-fun c!13248 () Bool)

(assert (=> b!83178 (= c!13248 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83179 () Bool)

(declare-fun call!7810 () (_ BitVec 32))

(assert (=> b!83179 (= e!54309 call!7810)))

(declare-fun bm!7807 () Bool)

(assert (=> bm!7807 (= call!7810 (arrayCountValidKeys!0 (_keys!3983 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83180 () Bool)

(assert (=> b!83180 (= e!54309 (bvadd #b00000000000000000000000000000001 call!7810))))

(assert (= (and d!20905 c!13247) b!83177))

(assert (= (and d!20905 (not c!13247)) b!83178))

(assert (= (and b!83178 c!13248) b!83180))

(assert (= (and b!83178 (not c!13248)) b!83179))

(assert (= (or b!83180 b!83179) bm!7807))

(assert (=> b!83178 m!86045))

(assert (=> b!83178 m!86045))

(assert (=> b!83178 m!86051))

(declare-fun m!86061 () Bool)

(assert (=> bm!7807 m!86061))

(assert (=> b!82855 d!20905))

(declare-fun d!20907 () Bool)

(declare-fun e!54321 () Bool)

(assert (=> d!20907 e!54321))

(declare-fun c!13253 () Bool)

(declare-fun lt!39099 () SeekEntryResult!245)

(assert (=> d!20907 (= c!13253 ((_ is MissingZero!245) lt!39099))))

(assert (=> d!20907 (= lt!39099 (seekEntryOrOpen!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(declare-fun lt!39098 () Unit!2426)

(declare-fun choose!492 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) Int) Unit!2426)

(assert (=> d!20907 (= lt!39098 (choose!492 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)))))

(assert (=> d!20907 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!20907 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!30 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)) lt!39098)))

(declare-fun b!83197 () Bool)

(declare-fun e!54319 () Bool)

(declare-fun call!7815 () Bool)

(assert (=> b!83197 (= e!54319 (not call!7815))))

(declare-fun b!83198 () Bool)

(assert (=> b!83198 (and (bvsge (index!3116 lt!39099) #b00000000000000000000000000000000) (bvslt (index!3116 lt!39099) (size!2144 (_keys!3983 newMap!16))))))

(declare-fun res!43066 () Bool)

(assert (=> b!83198 (= res!43066 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3116 lt!39099)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!54320 () Bool)

(assert (=> b!83198 (=> (not res!43066) (not e!54320))))

(declare-fun b!83199 () Bool)

(assert (=> b!83199 (= e!54321 e!54320)))

(declare-fun res!43067 () Bool)

(declare-fun call!7816 () Bool)

(assert (=> b!83199 (= res!43067 call!7816)))

(assert (=> b!83199 (=> (not res!43067) (not e!54320))))

(declare-fun b!83200 () Bool)

(declare-fun res!43064 () Bool)

(assert (=> b!83200 (=> (not res!43064) (not e!54319))))

(assert (=> b!83200 (= res!43064 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3119 lt!39099)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83200 (and (bvsge (index!3119 lt!39099) #b00000000000000000000000000000000) (bvslt (index!3119 lt!39099) (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83201 () Bool)

(declare-fun e!54318 () Bool)

(assert (=> b!83201 (= e!54318 ((_ is Undefined!245) lt!39099))))

(declare-fun bm!7812 () Bool)

(assert (=> bm!7812 (= call!7815 (arrayContainsKey!0 (_keys!3983 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!83202 () Bool)

(assert (=> b!83202 (= e!54321 e!54318)))

(declare-fun c!13254 () Bool)

(assert (=> b!83202 (= c!13254 ((_ is MissingVacant!245) lt!39099))))

(declare-fun bm!7813 () Bool)

(assert (=> bm!7813 (= call!7816 (inRange!0 (ite c!13253 (index!3116 lt!39099) (index!3119 lt!39099)) (mask!6333 newMap!16)))))

(declare-fun b!83203 () Bool)

(declare-fun res!43065 () Bool)

(assert (=> b!83203 (=> (not res!43065) (not e!54319))))

(assert (=> b!83203 (= res!43065 call!7816)))

(assert (=> b!83203 (= e!54318 e!54319)))

(declare-fun b!83204 () Bool)

(assert (=> b!83204 (= e!54320 (not call!7815))))

(assert (= (and d!20907 c!13253) b!83199))

(assert (= (and d!20907 (not c!13253)) b!83202))

(assert (= (and b!83199 res!43067) b!83198))

(assert (= (and b!83198 res!43066) b!83204))

(assert (= (and b!83202 c!13254) b!83203))

(assert (= (and b!83202 (not c!13254)) b!83201))

(assert (= (and b!83203 res!43065) b!83200))

(assert (= (and b!83200 res!43064) b!83197))

(assert (= (or b!83199 b!83203) bm!7813))

(assert (= (or b!83204 b!83197) bm!7812))

(declare-fun m!86063 () Bool)

(assert (=> b!83198 m!86063))

(assert (=> d!20907 m!85563))

(assert (=> d!20907 m!85879))

(assert (=> d!20907 m!85563))

(declare-fun m!86065 () Bool)

(assert (=> d!20907 m!86065))

(declare-fun m!86067 () Bool)

(assert (=> d!20907 m!86067))

(declare-fun m!86069 () Bool)

(assert (=> bm!7813 m!86069))

(declare-fun m!86071 () Bool)

(assert (=> b!83200 m!86071))

(assert (=> bm!7812 m!85563))

(assert (=> bm!7812 m!85885))

(assert (=> bm!7800 d!20907))

(declare-fun b!83217 () Bool)

(declare-fun e!54328 () SeekEntryResult!245)

(declare-fun lt!39106 () SeekEntryResult!245)

(assert (=> b!83217 (= e!54328 (MissingZero!245 (index!3118 lt!39106)))))

(declare-fun b!83218 () Bool)

(declare-fun c!13263 () Bool)

(declare-fun lt!39108 () (_ BitVec 64))

(assert (=> b!83218 (= c!13263 (= lt!39108 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!54329 () SeekEntryResult!245)

(assert (=> b!83218 (= e!54329 e!54328)))

(declare-fun b!83219 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3991 (_ BitVec 32)) SeekEntryResult!245)

(assert (=> b!83219 (= e!54328 (seekKeyOrZeroReturnVacant!0 (x!11853 lt!39106) (index!3118 lt!39106) (index!3118 lt!39106) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(declare-fun b!83220 () Bool)

(declare-fun e!54330 () SeekEntryResult!245)

(assert (=> b!83220 (= e!54330 e!54329)))

(assert (=> b!83220 (= lt!39108 (select (arr!1900 (_keys!3983 newMap!16)) (index!3118 lt!39106)))))

(declare-fun c!13262 () Bool)

(assert (=> b!83220 (= c!13262 (= lt!39108 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun d!20909 () Bool)

(declare-fun lt!39107 () SeekEntryResult!245)

(assert (=> d!20909 (and (or ((_ is Undefined!245) lt!39107) (not ((_ is Found!245) lt!39107)) (and (bvsge (index!3117 lt!39107) #b00000000000000000000000000000000) (bvslt (index!3117 lt!39107) (size!2144 (_keys!3983 newMap!16))))) (or ((_ is Undefined!245) lt!39107) ((_ is Found!245) lt!39107) (not ((_ is MissingZero!245) lt!39107)) (and (bvsge (index!3116 lt!39107) #b00000000000000000000000000000000) (bvslt (index!3116 lt!39107) (size!2144 (_keys!3983 newMap!16))))) (or ((_ is Undefined!245) lt!39107) ((_ is Found!245) lt!39107) ((_ is MissingZero!245) lt!39107) (not ((_ is MissingVacant!245) lt!39107)) (and (bvsge (index!3119 lt!39107) #b00000000000000000000000000000000) (bvslt (index!3119 lt!39107) (size!2144 (_keys!3983 newMap!16))))) (or ((_ is Undefined!245) lt!39107) (ite ((_ is Found!245) lt!39107) (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!39107)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (ite ((_ is MissingZero!245) lt!39107) (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3116 lt!39107)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!245) lt!39107) (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3119 lt!39107)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!20909 (= lt!39107 e!54330)))

(declare-fun c!13261 () Bool)

(assert (=> d!20909 (= c!13261 (and ((_ is Intermediate!245) lt!39106) (undefined!1057 lt!39106)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3991 (_ BitVec 32)) SeekEntryResult!245)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!20909 (= lt!39106 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (mask!6333 newMap!16)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(assert (=> d!20909 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!20909 (= (seekEntryOrOpen!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (mask!6333 newMap!16)) lt!39107)))

(declare-fun b!83221 () Bool)

(assert (=> b!83221 (= e!54330 Undefined!245)))

(declare-fun b!83222 () Bool)

(assert (=> b!83222 (= e!54329 (Found!245 (index!3118 lt!39106)))))

(assert (= (and d!20909 c!13261) b!83221))

(assert (= (and d!20909 (not c!13261)) b!83220))

(assert (= (and b!83220 c!13262) b!83222))

(assert (= (and b!83220 (not c!13262)) b!83218))

(assert (= (and b!83218 c!13263) b!83217))

(assert (= (and b!83218 (not c!13263)) b!83219))

(assert (=> b!83219 m!85563))

(declare-fun m!86073 () Bool)

(assert (=> b!83219 m!86073))

(declare-fun m!86075 () Bool)

(assert (=> b!83220 m!86075))

(assert (=> d!20909 m!86067))

(declare-fun m!86077 () Bool)

(assert (=> d!20909 m!86077))

(assert (=> d!20909 m!85563))

(declare-fun m!86079 () Bool)

(assert (=> d!20909 m!86079))

(assert (=> d!20909 m!85563))

(assert (=> d!20909 m!86077))

(declare-fun m!86081 () Bool)

(assert (=> d!20909 m!86081))

(declare-fun m!86083 () Bool)

(assert (=> d!20909 m!86083))

(declare-fun m!86085 () Bool)

(assert (=> d!20909 m!86085))

(assert (=> bm!7790 d!20909))

(declare-fun d!20911 () Bool)

(declare-fun lt!39109 () Bool)

(assert (=> d!20911 (= lt!39109 (select (content!87 (toList!739 lt!39061)) lt!38729))))

(declare-fun e!54331 () Bool)

(assert (=> d!20911 (= lt!39109 e!54331)))

(declare-fun res!43068 () Bool)

(assert (=> d!20911 (=> (not res!43068) (not e!54331))))

(assert (=> d!20911 (= res!43068 ((_ is Cons!1519) (toList!739 lt!39061)))))

(assert (=> d!20911 (= (contains!751 (toList!739 lt!39061) lt!38729) lt!39109)))

(declare-fun b!83223 () Bool)

(declare-fun e!54332 () Bool)

(assert (=> b!83223 (= e!54331 e!54332)))

(declare-fun res!43069 () Bool)

(assert (=> b!83223 (=> res!43069 e!54332)))

(assert (=> b!83223 (= res!43069 (= (h!2109 (toList!739 lt!39061)) lt!38729))))

(declare-fun b!83224 () Bool)

(assert (=> b!83224 (= e!54332 (contains!751 (t!5214 (toList!739 lt!39061)) lt!38729))))

(assert (= (and d!20911 res!43068) b!83223))

(assert (= (and b!83223 (not res!43069)) b!83224))

(declare-fun m!86087 () Bool)

(assert (=> d!20911 m!86087))

(declare-fun m!86089 () Bool)

(assert (=> d!20911 m!86089))

(declare-fun m!86091 () Bool)

(assert (=> b!83224 m!86091))

(assert (=> b!83124 d!20911))

(assert (=> b!83116 d!20893))

(declare-fun d!20913 () Bool)

(declare-fun lt!39110 () Bool)

(assert (=> d!20913 (= lt!39110 (select (content!87 (toList!739 lt!39032)) lt!38742))))

(declare-fun e!54333 () Bool)

(assert (=> d!20913 (= lt!39110 e!54333)))

(declare-fun res!43070 () Bool)

(assert (=> d!20913 (=> (not res!43070) (not e!54333))))

(assert (=> d!20913 (= res!43070 ((_ is Cons!1519) (toList!739 lt!39032)))))

(assert (=> d!20913 (= (contains!751 (toList!739 lt!39032) lt!38742) lt!39110)))

(declare-fun b!83225 () Bool)

(declare-fun e!54334 () Bool)

(assert (=> b!83225 (= e!54333 e!54334)))

(declare-fun res!43071 () Bool)

(assert (=> b!83225 (=> res!43071 e!54334)))

(assert (=> b!83225 (= res!43071 (= (h!2109 (toList!739 lt!39032)) lt!38742))))

(declare-fun b!83226 () Bool)

(assert (=> b!83226 (= e!54334 (contains!751 (t!5214 (toList!739 lt!39032)) lt!38742))))

(assert (= (and d!20913 res!43070) b!83225))

(assert (= (and b!83225 (not res!43071)) b!83226))

(declare-fun m!86093 () Bool)

(assert (=> d!20913 m!86093))

(declare-fun m!86095 () Bool)

(assert (=> d!20913 m!86095))

(declare-fun m!86097 () Bool)

(assert (=> b!83226 m!86097))

(assert (=> b!83084 d!20913))

(declare-fun b!83227 () Bool)

(declare-fun e!54346 () Bool)

(declare-fun call!7821 () Bool)

(assert (=> b!83227 (= e!54346 (not call!7821))))

(declare-fun b!83228 () Bool)

(declare-fun e!54340 () Bool)

(declare-fun e!54344 () Bool)

(assert (=> b!83228 (= e!54340 e!54344)))

(declare-fun c!13269 () Bool)

(assert (=> b!83228 (= c!13269 (not (= (bvand (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun e!54335 () Bool)

(declare-fun b!83229 () Bool)

(declare-fun lt!39114 () ListLongMap!1447)

(assert (=> b!83229 (= e!54335 (= (apply!81 lt!39114 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) (get!1193 (select (arr!1901 (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83229 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2145 (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011))))))

(assert (=> b!83229 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83230 () Bool)

(declare-fun e!54342 () ListLongMap!1447)

(declare-fun call!7823 () ListLongMap!1447)

(assert (=> b!83230 (= e!54342 call!7823)))

(declare-fun bm!7814 () Bool)

(declare-fun call!7818 () ListLongMap!1447)

(declare-fun call!7819 () ListLongMap!1447)

(declare-fun call!7822 () ListLongMap!1447)

(declare-fun call!7817 () ListLongMap!1447)

(declare-fun c!13267 () Bool)

(declare-fun c!13264 () Bool)

(assert (=> bm!7814 (= call!7822 (+!107 (ite c!13264 call!7817 (ite c!13267 call!7819 call!7818)) (ite (or c!13264 c!13267) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))))

(declare-fun b!83231 () Bool)

(declare-fun e!54337 () Bool)

(assert (=> b!83231 (= e!54337 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83232 () Bool)

(declare-fun res!43079 () Bool)

(assert (=> b!83232 (=> (not res!43079) (not e!54340))))

(declare-fun e!54336 () Bool)

(assert (=> b!83232 (= res!43079 e!54336)))

(declare-fun res!43080 () Bool)

(assert (=> b!83232 (=> res!43080 e!54336)))

(assert (=> b!83232 (= res!43080 (not e!54337))))

(declare-fun res!43072 () Bool)

(assert (=> b!83232 (=> (not res!43072) (not e!54337))))

(assert (=> b!83232 (= res!43072 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83233 () Bool)

(declare-fun call!7820 () Bool)

(assert (=> b!83233 (= e!54344 (not call!7820))))

(declare-fun b!83234 () Bool)

(declare-fun e!54345 () Bool)

(assert (=> b!83234 (= e!54346 e!54345)))

(declare-fun res!43073 () Bool)

(assert (=> b!83234 (= res!43073 call!7821)))

(assert (=> b!83234 (=> (not res!43073) (not e!54345))))

(declare-fun bm!7815 () Bool)

(assert (=> bm!7815 (= call!7820 (contains!749 lt!39114 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83235 () Bool)

(declare-fun res!43075 () Bool)

(assert (=> b!83235 (=> (not res!43075) (not e!54340))))

(assert (=> b!83235 (= res!43075 e!54346)))

(declare-fun c!13266 () Bool)

(assert (=> b!83235 (= c!13266 (not (= (bvand (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!20915 () Bool)

(assert (=> d!20915 e!54340))

(declare-fun res!43078 () Bool)

(assert (=> d!20915 (=> (not res!43078) (not e!54340))))

(assert (=> d!20915 (= res!43078 (or (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))))

(declare-fun lt!39127 () ListLongMap!1447)

(assert (=> d!20915 (= lt!39114 lt!39127)))

(declare-fun lt!39124 () Unit!2426)

(declare-fun e!54341 () Unit!2426)

(assert (=> d!20915 (= lt!39124 e!54341)))

(declare-fun c!13265 () Bool)

(declare-fun e!54338 () Bool)

(assert (=> d!20915 (= c!13265 e!54338)))

(declare-fun res!43076 () Bool)

(assert (=> d!20915 (=> (not res!43076) (not e!54338))))

(assert (=> d!20915 (= res!43076 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun e!54347 () ListLongMap!1447)

(assert (=> d!20915 (= lt!39127 e!54347)))

(assert (=> d!20915 (= c!13264 (and (not (= (bvand (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20915 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!20915 (= (getCurrentListMap!425 (_keys!3983 newMap!16) (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011) (mask!6333 newMap!16) (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) (zeroValue!2210 newMap!16) (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39114)))

(declare-fun b!83236 () Bool)

(assert (=> b!83236 (= e!54345 (= (apply!81 lt!39114 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 newMap!16)))))

(declare-fun b!83237 () Bool)

(declare-fun e!54343 () Bool)

(assert (=> b!83237 (= e!54344 e!54343)))

(declare-fun res!43074 () Bool)

(assert (=> b!83237 (= res!43074 call!7820)))

(assert (=> b!83237 (=> (not res!43074) (not e!54343))))

(declare-fun b!83238 () Bool)

(assert (=> b!83238 (= e!54338 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83239 () Bool)

(assert (=> b!83239 (= e!54347 e!54342)))

(assert (=> b!83239 (= c!13267 (and (not (= (bvand (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7816 () Bool)

(assert (=> bm!7816 (= call!7819 call!7817)))

(declare-fun b!83240 () Bool)

(declare-fun lt!39126 () Unit!2426)

(assert (=> b!83240 (= e!54341 lt!39126)))

(declare-fun lt!39132 () ListLongMap!1447)

(assert (=> b!83240 (= lt!39132 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011) (mask!6333 newMap!16) (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) (zeroValue!2210 newMap!16) (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39129 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39129 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39130 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39130 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39112 () Unit!2426)

(assert (=> b!83240 (= lt!39112 (addStillContains!57 lt!39132 lt!39129 (zeroValue!2210 newMap!16) lt!39130))))

(assert (=> b!83240 (contains!749 (+!107 lt!39132 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16))) lt!39130)))

(declare-fun lt!39131 () Unit!2426)

(assert (=> b!83240 (= lt!39131 lt!39112)))

(declare-fun lt!39121 () ListLongMap!1447)

(assert (=> b!83240 (= lt!39121 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011) (mask!6333 newMap!16) (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) (zeroValue!2210 newMap!16) (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39118 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39118 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39125 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39125 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39116 () Unit!2426)

(assert (=> b!83240 (= lt!39116 (addApplyDifferent!57 lt!39121 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) lt!39125))))

(assert (=> b!83240 (= (apply!81 (+!107 lt!39121 (tuple2!2201 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))) lt!39125) (apply!81 lt!39121 lt!39125))))

(declare-fun lt!39111 () Unit!2426)

(assert (=> b!83240 (= lt!39111 lt!39116)))

(declare-fun lt!39115 () ListLongMap!1447)

(assert (=> b!83240 (= lt!39115 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011) (mask!6333 newMap!16) (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) (zeroValue!2210 newMap!16) (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39117 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39117 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39120 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39120 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39122 () Unit!2426)

(assert (=> b!83240 (= lt!39122 (addApplyDifferent!57 lt!39115 lt!39117 (zeroValue!2210 newMap!16) lt!39120))))

(assert (=> b!83240 (= (apply!81 (+!107 lt!39115 (tuple2!2201 lt!39117 (zeroValue!2210 newMap!16))) lt!39120) (apply!81 lt!39115 lt!39120))))

(declare-fun lt!39123 () Unit!2426)

(assert (=> b!83240 (= lt!39123 lt!39122)))

(declare-fun lt!39119 () ListLongMap!1447)

(assert (=> b!83240 (= lt!39119 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011) (mask!6333 newMap!16) (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) (zeroValue!2210 newMap!16) (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39128 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39128 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39113 () (_ BitVec 64))

(assert (=> b!83240 (= lt!39113 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!83240 (= lt!39126 (addApplyDifferent!57 lt!39119 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) lt!39113))))

(assert (=> b!83240 (= (apply!81 (+!107 lt!39119 (tuple2!2201 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))) lt!39113) (apply!81 lt!39119 lt!39113))))

(declare-fun bm!7817 () Bool)

(assert (=> bm!7817 (= call!7818 call!7819)))

(declare-fun b!83241 () Bool)

(declare-fun Unit!2438 () Unit!2426)

(assert (=> b!83241 (= e!54341 Unit!2438)))

(declare-fun b!83242 () Bool)

(assert (=> b!83242 (= e!54336 e!54335)))

(declare-fun res!43077 () Bool)

(assert (=> b!83242 (=> (not res!43077) (not e!54335))))

(assert (=> b!83242 (= res!43077 (contains!749 lt!39114 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83242 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83243 () Bool)

(declare-fun e!54339 () ListLongMap!1447)

(assert (=> b!83243 (= e!54339 call!7823)))

(declare-fun b!83244 () Bool)

(assert (=> b!83244 (= e!54343 (= (apply!81 lt!39114 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))

(declare-fun bm!7818 () Bool)

(assert (=> bm!7818 (= call!7823 call!7822)))

(declare-fun bm!7819 () Bool)

(assert (=> bm!7819 (= call!7821 (contains!749 lt!39114 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83245 () Bool)

(assert (=> b!83245 (= e!54339 call!7818)))

(declare-fun c!13268 () Bool)

(declare-fun b!83246 () Bool)

(assert (=> b!83246 (= c!13268 (and (not (= (bvand (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!83246 (= e!54342 e!54339)))

(declare-fun b!83247 () Bool)

(assert (=> b!83247 (= e!54347 (+!107 call!7822 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))))))

(declare-fun bm!7820 () Bool)

(assert (=> bm!7820 (= call!7817 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011) (mask!6333 newMap!16) (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) (zeroValue!2210 newMap!16) (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (= (and d!20915 c!13264) b!83247))

(assert (= (and d!20915 (not c!13264)) b!83239))

(assert (= (and b!83239 c!13267) b!83230))

(assert (= (and b!83239 (not c!13267)) b!83246))

(assert (= (and b!83246 c!13268) b!83243))

(assert (= (and b!83246 (not c!13268)) b!83245))

(assert (= (or b!83243 b!83245) bm!7817))

(assert (= (or b!83230 bm!7817) bm!7816))

(assert (= (or b!83230 b!83243) bm!7818))

(assert (= (or b!83247 bm!7816) bm!7820))

(assert (= (or b!83247 bm!7818) bm!7814))

(assert (= (and d!20915 res!43076) b!83238))

(assert (= (and d!20915 c!13265) b!83240))

(assert (= (and d!20915 (not c!13265)) b!83241))

(assert (= (and d!20915 res!43078) b!83232))

(assert (= (and b!83232 res!43072) b!83231))

(assert (= (and b!83232 (not res!43080)) b!83242))

(assert (= (and b!83242 res!43077) b!83229))

(assert (= (and b!83232 res!43079) b!83235))

(assert (= (and b!83235 c!13266) b!83234))

(assert (= (and b!83235 (not c!13266)) b!83227))

(assert (= (and b!83234 res!43073) b!83236))

(assert (= (or b!83234 b!83227) bm!7819))

(assert (= (and b!83235 res!43075) b!83228))

(assert (= (and b!83228 c!13269) b!83237))

(assert (= (and b!83228 (not c!13269)) b!83233))

(assert (= (and b!83237 res!43074) b!83244))

(assert (= (or b!83237 b!83233) bm!7815))

(declare-fun b_lambda!3703 () Bool)

(assert (=> (not b_lambda!3703) (not b!83229)))

(declare-fun t!5225 () Bool)

(declare-fun tb!1673 () Bool)

(assert (=> (and b!82709 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16)) t!5225) tb!1673))

(declare-fun result!2895 () Bool)

(assert (=> tb!1673 (= result!2895 tp_is_empty!2527)))

(assert (=> b!83229 t!5225))

(declare-fun b_and!5065 () Bool)

(assert (= b_and!5061 (and (=> t!5225 result!2895) b_and!5065)))

(declare-fun t!5227 () Bool)

(declare-fun tb!1675 () Bool)

(assert (=> (and b!82707 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 newMap!16)) t!5227) tb!1675))

(declare-fun result!2897 () Bool)

(assert (= result!2897 result!2895))

(assert (=> b!83229 t!5227))

(declare-fun b_and!5067 () Bool)

(assert (= b_and!5063 (and (=> t!5227 result!2897) b_and!5067)))

(declare-fun m!86099 () Bool)

(assert (=> b!83244 m!86099))

(declare-fun m!86101 () Bool)

(assert (=> bm!7815 m!86101))

(assert (=> b!83242 m!86045))

(assert (=> b!83242 m!86045))

(declare-fun m!86103 () Bool)

(assert (=> b!83242 m!86103))

(declare-fun m!86105 () Bool)

(assert (=> bm!7820 m!86105))

(declare-fun m!86107 () Bool)

(assert (=> bm!7814 m!86107))

(declare-fun m!86109 () Bool)

(assert (=> bm!7819 m!86109))

(assert (=> b!83240 m!86045))

(assert (=> b!83240 m!86105))

(declare-fun m!86111 () Bool)

(assert (=> b!83240 m!86111))

(declare-fun m!86113 () Bool)

(assert (=> b!83240 m!86113))

(declare-fun m!86115 () Bool)

(assert (=> b!83240 m!86115))

(declare-fun m!86117 () Bool)

(assert (=> b!83240 m!86117))

(declare-fun m!86119 () Bool)

(assert (=> b!83240 m!86119))

(declare-fun m!86121 () Bool)

(assert (=> b!83240 m!86121))

(declare-fun m!86123 () Bool)

(assert (=> b!83240 m!86123))

(declare-fun m!86125 () Bool)

(assert (=> b!83240 m!86125))

(declare-fun m!86127 () Bool)

(assert (=> b!83240 m!86127))

(assert (=> b!83240 m!86117))

(assert (=> b!83240 m!86121))

(declare-fun m!86129 () Bool)

(assert (=> b!83240 m!86129))

(declare-fun m!86131 () Bool)

(assert (=> b!83240 m!86131))

(assert (=> b!83240 m!86131))

(declare-fun m!86133 () Bool)

(assert (=> b!83240 m!86133))

(declare-fun m!86135 () Bool)

(assert (=> b!83240 m!86135))

(assert (=> b!83240 m!86115))

(declare-fun m!86137 () Bool)

(assert (=> b!83240 m!86137))

(declare-fun m!86139 () Bool)

(assert (=> b!83240 m!86139))

(assert (=> b!83229 m!86045))

(declare-fun m!86141 () Bool)

(assert (=> b!83229 m!86141))

(assert (=> b!83229 m!86045))

(declare-fun m!86143 () Bool)

(assert (=> b!83229 m!86143))

(declare-fun m!86145 () Bool)

(assert (=> b!83229 m!86145))

(assert (=> b!83229 m!86145))

(assert (=> b!83229 m!86141))

(declare-fun m!86147 () Bool)

(assert (=> b!83229 m!86147))

(assert (=> b!83231 m!86045))

(assert (=> b!83231 m!86045))

(assert (=> b!83231 m!86051))

(declare-fun m!86149 () Bool)

(assert (=> b!83247 m!86149))

(declare-fun m!86151 () Bool)

(assert (=> b!83236 m!86151))

(assert (=> b!83238 m!86045))

(assert (=> b!83238 m!86045))

(assert (=> b!83238 m!86051))

(assert (=> d!20915 m!86067))

(assert (=> bm!7785 d!20915))

(declare-fun d!20917 () Bool)

(assert (=> d!20917 (= (+!107 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!38999 lt!38725 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39135 () Unit!2426)

(declare-fun choose!493 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 V!3017 Int) Unit!2426)

(assert (=> d!20917 (= lt!39135 (choose!493 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) lt!38999 (zeroValue!2210 newMap!16) lt!38725 (minValue!2210 newMap!16) (defaultEntry!2316 newMap!16)))))

(assert (=> d!20917 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!20917 (= (lemmaChangeZeroKeyThenAddPairToListMap!30 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) lt!38999 (zeroValue!2210 newMap!16) lt!38725 (minValue!2210 newMap!16) (defaultEntry!2316 newMap!16)) lt!39135)))

(declare-fun bs!3511 () Bool)

(assert (= bs!3511 d!20917))

(assert (=> bs!3511 m!86067))

(declare-fun m!86153 () Bool)

(assert (=> bs!3511 m!86153))

(assert (=> bs!3511 m!85779))

(declare-fun m!86155 () Bool)

(assert (=> bs!3511 m!86155))

(declare-fun m!86157 () Bool)

(assert (=> bs!3511 m!86157))

(assert (=> bs!3511 m!85779))

(assert (=> b!83044 d!20917))

(declare-fun d!20919 () Bool)

(assert (=> d!20919 (= (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (and (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!82883 d!20919))

(declare-fun d!20921 () Bool)

(declare-fun res!43085 () Bool)

(declare-fun e!54352 () Bool)

(assert (=> d!20921 (=> res!43085 e!54352)))

(assert (=> d!20921 (= res!43085 (and ((_ is Cons!1519) (toList!739 lt!38733)) (= (_1!1111 (h!2109 (toList!739 lt!38733))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(assert (=> d!20921 (= (containsKey!141 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) e!54352)))

(declare-fun b!83252 () Bool)

(declare-fun e!54353 () Bool)

(assert (=> b!83252 (= e!54352 e!54353)))

(declare-fun res!43086 () Bool)

(assert (=> b!83252 (=> (not res!43086) (not e!54353))))

(assert (=> b!83252 (= res!43086 (and (or (not ((_ is Cons!1519) (toList!739 lt!38733))) (bvsle (_1!1111 (h!2109 (toList!739 lt!38733))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))) ((_ is Cons!1519) (toList!739 lt!38733)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38733))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(declare-fun b!83253 () Bool)

(assert (=> b!83253 (= e!54353 (containsKey!141 (t!5214 (toList!739 lt!38733)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (= (and d!20921 (not res!43085)) b!83252))

(assert (= (and b!83252 res!43086) b!83253))

(assert (=> b!83253 m!85563))

(declare-fun m!86159 () Bool)

(assert (=> b!83253 m!86159))

(assert (=> d!20865 d!20921))

(declare-fun lt!39140 () ListLongMap!1447)

(declare-fun e!54358 () Bool)

(declare-fun b!83254 () Bool)

(assert (=> b!83254 (= e!54358 (= lt!39140 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun d!20923 () Bool)

(declare-fun e!54355 () Bool)

(assert (=> d!20923 e!54355))

(declare-fun res!43088 () Bool)

(assert (=> d!20923 (=> (not res!43088) (not e!54355))))

(assert (=> d!20923 (= res!43088 (not (contains!749 lt!39140 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!54357 () ListLongMap!1447)

(assert (=> d!20923 (= lt!39140 e!54357)))

(declare-fun c!13271 () Bool)

(assert (=> d!20923 (= c!13271 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(assert (=> d!20923 (validMask!0 (mask!6333 (v!2622 (underlying!282 thiss!992))))))

(assert (=> d!20923 (= (getCurrentListMapNoExtraKeys!71 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))) lt!39140)))

(declare-fun b!83255 () Bool)

(declare-fun e!54360 () Bool)

(assert (=> b!83255 (= e!54355 e!54360)))

(declare-fun c!13270 () Bool)

(declare-fun e!54356 () Bool)

(assert (=> b!83255 (= c!13270 e!54356)))

(declare-fun res!43089 () Bool)

(assert (=> b!83255 (=> (not res!43089) (not e!54356))))

(assert (=> b!83255 (= res!43089 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!83256 () Bool)

(declare-fun e!54354 () ListLongMap!1447)

(declare-fun call!7824 () ListLongMap!1447)

(assert (=> b!83256 (= e!54354 call!7824)))

(declare-fun b!83257 () Bool)

(assert (=> b!83257 (= e!54358 (isEmpty!336 lt!39140))))

(declare-fun b!83258 () Bool)

(assert (=> b!83258 (= e!54360 e!54358)))

(declare-fun c!13272 () Bool)

(assert (=> b!83258 (= c!13272 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!83259 () Bool)

(declare-fun res!43090 () Bool)

(assert (=> b!83259 (=> (not res!43090) (not e!54355))))

(assert (=> b!83259 (= res!43090 (not (contains!749 lt!39140 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!83260 () Bool)

(assert (=> b!83260 (= e!54357 (ListLongMap!1448 Nil!1520))))

(declare-fun b!83261 () Bool)

(assert (=> b!83261 (= e!54356 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!83261 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!83262 () Bool)

(declare-fun lt!39137 () Unit!2426)

(declare-fun lt!39136 () Unit!2426)

(assert (=> b!83262 (= lt!39137 lt!39136)))

(declare-fun lt!39139 () V!3017)

(declare-fun lt!39142 () ListLongMap!1447)

(declare-fun lt!39141 () (_ BitVec 64))

(declare-fun lt!39138 () (_ BitVec 64))

(assert (=> b!83262 (not (contains!749 (+!107 lt!39142 (tuple2!2201 lt!39138 lt!39139)) lt!39141))))

(assert (=> b!83262 (= lt!39136 (addStillNotContains!31 lt!39142 lt!39138 lt!39139 lt!39141))))

(assert (=> b!83262 (= lt!39141 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!83262 (= lt!39139 (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!83262 (= lt!39138 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!83262 (= lt!39142 call!7824)))

(assert (=> b!83262 (= e!54354 (+!107 call!7824 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!7821 () Bool)

(assert (=> bm!7821 (= call!7824 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun b!83263 () Bool)

(assert (=> b!83263 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(assert (=> b!83263 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2145 (_values!2299 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun e!54359 () Bool)

(assert (=> b!83263 (= e!54359 (= (apply!81 lt!39140 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!83264 () Bool)

(assert (=> b!83264 (= e!54357 e!54354)))

(declare-fun c!13273 () Bool)

(assert (=> b!83264 (= c!13273 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!83265 () Bool)

(assert (=> b!83265 (= e!54360 e!54359)))

(assert (=> b!83265 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun res!43087 () Bool)

(assert (=> b!83265 (= res!43087 (contains!749 lt!39140 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!83265 (=> (not res!43087) (not e!54359))))

(assert (= (and d!20923 c!13271) b!83260))

(assert (= (and d!20923 (not c!13271)) b!83264))

(assert (= (and b!83264 c!13273) b!83262))

(assert (= (and b!83264 (not c!13273)) b!83256))

(assert (= (or b!83262 b!83256) bm!7821))

(assert (= (and d!20923 res!43088) b!83259))

(assert (= (and b!83259 res!43090) b!83255))

(assert (= (and b!83255 res!43089) b!83261))

(assert (= (and b!83255 c!13270) b!83265))

(assert (= (and b!83255 (not c!13270)) b!83258))

(assert (= (and b!83265 res!43087) b!83263))

(assert (= (and b!83258 c!13272) b!83254))

(assert (= (and b!83258 (not c!13272)) b!83257))

(declare-fun b_lambda!3705 () Bool)

(assert (=> (not b_lambda!3705) (not b!83262)))

(assert (=> b!83262 t!5210))

(declare-fun b_and!5069 () Bool)

(assert (= b_and!5065 (and (=> t!5210 result!2875) b_and!5069)))

(assert (=> b!83262 t!5212))

(declare-fun b_and!5071 () Bool)

(assert (= b_and!5067 (and (=> t!5212 result!2879) b_and!5071)))

(declare-fun b_lambda!3707 () Bool)

(assert (=> (not b_lambda!3707) (not b!83263)))

(assert (=> b!83263 t!5210))

(declare-fun b_and!5073 () Bool)

(assert (= b_and!5069 (and (=> t!5210 result!2875) b_and!5073)))

(assert (=> b!83263 t!5212))

(declare-fun b_and!5075 () Bool)

(assert (= b_and!5071 (and (=> t!5212 result!2879) b_and!5075)))

(declare-fun m!86161 () Bool)

(assert (=> bm!7821 m!86161))

(declare-fun m!86163 () Bool)

(assert (=> b!83257 m!86163))

(declare-fun m!86165 () Bool)

(assert (=> b!83261 m!86165))

(assert (=> b!83261 m!86165))

(declare-fun m!86167 () Bool)

(assert (=> b!83261 m!86167))

(declare-fun m!86169 () Bool)

(assert (=> b!83262 m!86169))

(declare-fun m!86171 () Bool)

(assert (=> b!83262 m!86171))

(declare-fun m!86173 () Bool)

(assert (=> b!83262 m!86173))

(assert (=> b!83262 m!85587))

(declare-fun m!86175 () Bool)

(assert (=> b!83262 m!86175))

(declare-fun m!86177 () Bool)

(assert (=> b!83262 m!86177))

(declare-fun m!86179 () Bool)

(assert (=> b!83262 m!86179))

(assert (=> b!83262 m!86165))

(assert (=> b!83262 m!85587))

(assert (=> b!83262 m!86177))

(assert (=> b!83262 m!86173))

(declare-fun m!86181 () Bool)

(assert (=> d!20923 m!86181))

(assert (=> d!20923 m!85577))

(assert (=> b!83264 m!86165))

(assert (=> b!83264 m!86165))

(assert (=> b!83264 m!86167))

(assert (=> b!83254 m!86161))

(assert (=> b!83265 m!86165))

(assert (=> b!83265 m!86165))

(declare-fun m!86183 () Bool)

(assert (=> b!83265 m!86183))

(declare-fun m!86185 () Bool)

(assert (=> b!83259 m!86185))

(assert (=> b!83263 m!86173))

(assert (=> b!83263 m!86165))

(assert (=> b!83263 m!85587))

(assert (=> b!83263 m!86165))

(declare-fun m!86187 () Bool)

(assert (=> b!83263 m!86187))

(assert (=> b!83263 m!86173))

(assert (=> b!83263 m!85587))

(assert (=> b!83263 m!86175))

(assert (=> bm!7803 d!20923))

(assert (=> bm!7779 d!20861))

(declare-fun d!20925 () Bool)

(declare-fun e!54362 () Bool)

(assert (=> d!20925 e!54362))

(declare-fun res!43091 () Bool)

(assert (=> d!20925 (=> res!43091 e!54362)))

(declare-fun lt!39144 () Bool)

(assert (=> d!20925 (= res!43091 (not lt!39144))))

(declare-fun lt!39146 () Bool)

(assert (=> d!20925 (= lt!39144 lt!39146)))

(declare-fun lt!39145 () Unit!2426)

(declare-fun e!54361 () Unit!2426)

(assert (=> d!20925 (= lt!39145 e!54361)))

(declare-fun c!13274 () Bool)

(assert (=> d!20925 (= c!13274 lt!39146)))

(assert (=> d!20925 (= lt!39146 (containsKey!141 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38923))))

(assert (=> d!20925 (= (contains!749 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38923) lt!39144)))

(declare-fun b!83266 () Bool)

(declare-fun lt!39143 () Unit!2426)

(assert (=> b!83266 (= e!54361 lt!39143)))

(assert (=> b!83266 (= lt!39143 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38923))))

(assert (=> b!83266 (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38923))))

(declare-fun b!83267 () Bool)

(declare-fun Unit!2439 () Unit!2426)

(assert (=> b!83267 (= e!54361 Unit!2439)))

(declare-fun b!83268 () Bool)

(assert (=> b!83268 (= e!54362 (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38923)))))

(assert (= (and d!20925 c!13274) b!83266))

(assert (= (and d!20925 (not c!13274)) b!83267))

(assert (= (and d!20925 (not res!43091)) b!83268))

(declare-fun m!86189 () Bool)

(assert (=> d!20925 m!86189))

(declare-fun m!86191 () Bool)

(assert (=> b!83266 m!86191))

(declare-fun m!86193 () Bool)

(assert (=> b!83266 m!86193))

(assert (=> b!83266 m!86193))

(declare-fun m!86195 () Bool)

(assert (=> b!83266 m!86195))

(assert (=> b!83268 m!86193))

(assert (=> b!83268 m!86193))

(assert (=> b!83268 m!86195))

(assert (=> b!82940 d!20925))

(assert (=> b!82940 d!20875))

(declare-fun d!20927 () Bool)

(declare-fun get!1196 (Option!143) V!3017)

(assert (=> d!20927 (= (apply!81 (+!107 lt!38914 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38918) (get!1196 (getValueByKey!137 (toList!739 (+!107 lt!38914 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38918)))))

(declare-fun bs!3512 () Bool)

(assert (= bs!3512 d!20927))

(declare-fun m!86197 () Bool)

(assert (=> bs!3512 m!86197))

(assert (=> bs!3512 m!86197))

(declare-fun m!86199 () Bool)

(assert (=> bs!3512 m!86199))

(assert (=> b!82940 d!20927))

(declare-fun d!20929 () Bool)

(declare-fun e!54363 () Bool)

(assert (=> d!20929 e!54363))

(declare-fun res!43092 () Bool)

(assert (=> d!20929 (=> (not res!43092) (not e!54363))))

(declare-fun lt!39148 () ListLongMap!1447)

(assert (=> d!20929 (= res!43092 (contains!749 lt!39148 (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39147 () List!1523)

(assert (=> d!20929 (= lt!39148 (ListLongMap!1448 lt!39147))))

(declare-fun lt!39150 () Unit!2426)

(declare-fun lt!39149 () Unit!2426)

(assert (=> d!20929 (= lt!39150 lt!39149)))

(assert (=> d!20929 (= (getValueByKey!137 lt!39147 (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!20929 (= lt!39149 (lemmaContainsTupThenGetReturnValue!57 lt!39147 (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!20929 (= lt!39147 (insertStrictlySorted!60 (toList!739 lt!38914) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!20929 (= (+!107 lt!38914 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39148)))

(declare-fun b!83269 () Bool)

(declare-fun res!43093 () Bool)

(assert (=> b!83269 (=> (not res!43093) (not e!54363))))

(assert (=> b!83269 (= res!43093 (= (getValueByKey!137 (toList!739 lt!39148) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!83270 () Bool)

(assert (=> b!83270 (= e!54363 (contains!751 (toList!739 lt!39148) (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!20929 res!43092) b!83269))

(assert (= (and b!83269 res!43093) b!83270))

(declare-fun m!86201 () Bool)

(assert (=> d!20929 m!86201))

(declare-fun m!86203 () Bool)

(assert (=> d!20929 m!86203))

(declare-fun m!86205 () Bool)

(assert (=> d!20929 m!86205))

(declare-fun m!86207 () Bool)

(assert (=> d!20929 m!86207))

(declare-fun m!86209 () Bool)

(assert (=> b!83269 m!86209))

(declare-fun m!86211 () Bool)

(assert (=> b!83270 m!86211))

(assert (=> b!82940 d!20929))

(declare-fun d!20931 () Bool)

(assert (=> d!20931 (= (apply!81 lt!38908 lt!38913) (get!1196 (getValueByKey!137 (toList!739 lt!38908) lt!38913)))))

(declare-fun bs!3513 () Bool)

(assert (= bs!3513 d!20931))

(declare-fun m!86213 () Bool)

(assert (=> bs!3513 m!86213))

(assert (=> bs!3513 m!86213))

(declare-fun m!86215 () Bool)

(assert (=> bs!3513 m!86215))

(assert (=> b!82940 d!20931))

(declare-fun d!20933 () Bool)

(assert (=> d!20933 (= (apply!81 (+!107 lt!38908 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38913) (get!1196 (getValueByKey!137 (toList!739 (+!107 lt!38908 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38913)))))

(declare-fun bs!3514 () Bool)

(assert (= bs!3514 d!20933))

(declare-fun m!86217 () Bool)

(assert (=> bs!3514 m!86217))

(assert (=> bs!3514 m!86217))

(declare-fun m!86219 () Bool)

(assert (=> bs!3514 m!86219))

(assert (=> b!82940 d!20933))

(declare-fun d!20935 () Bool)

(assert (=> d!20935 (= (apply!81 (+!107 lt!38912 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38906) (apply!81 lt!38912 lt!38906))))

(declare-fun lt!39153 () Unit!2426)

(declare-fun choose!494 (ListLongMap!1447 (_ BitVec 64) V!3017 (_ BitVec 64)) Unit!2426)

(assert (=> d!20935 (= lt!39153 (choose!494 lt!38912 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38906))))

(declare-fun e!54366 () Bool)

(assert (=> d!20935 e!54366))

(declare-fun res!43096 () Bool)

(assert (=> d!20935 (=> (not res!43096) (not e!54366))))

(assert (=> d!20935 (= res!43096 (contains!749 lt!38912 lt!38906))))

(assert (=> d!20935 (= (addApplyDifferent!57 lt!38912 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38906) lt!39153)))

(declare-fun b!83274 () Bool)

(assert (=> b!83274 (= e!54366 (not (= lt!38906 lt!38921)))))

(assert (= (and d!20935 res!43096) b!83274))

(assert (=> d!20935 m!85793))

(declare-fun m!86221 () Bool)

(assert (=> d!20935 m!86221))

(assert (=> d!20935 m!85797))

(assert (=> d!20935 m!85797))

(assert (=> d!20935 m!85799))

(declare-fun m!86223 () Bool)

(assert (=> d!20935 m!86223))

(assert (=> b!82940 d!20935))

(declare-fun d!20937 () Bool)

(assert (=> d!20937 (contains!749 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38923)))

(declare-fun lt!39156 () Unit!2426)

(declare-fun choose!495 (ListLongMap!1447 (_ BitVec 64) V!3017 (_ BitVec 64)) Unit!2426)

(assert (=> d!20937 (= lt!39156 (choose!495 lt!38925 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38923))))

(assert (=> d!20937 (contains!749 lt!38925 lt!38923)))

(assert (=> d!20937 (= (addStillContains!57 lt!38925 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38923) lt!39156)))

(declare-fun bs!3515 () Bool)

(assert (= bs!3515 d!20937))

(assert (=> bs!3515 m!85801))

(assert (=> bs!3515 m!85801))

(assert (=> bs!3515 m!85809))

(declare-fun m!86225 () Bool)

(assert (=> bs!3515 m!86225))

(declare-fun m!86227 () Bool)

(assert (=> bs!3515 m!86227))

(assert (=> b!82940 d!20937))

(declare-fun d!20939 () Bool)

(assert (=> d!20939 (= (apply!81 (+!107 lt!38912 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38906) (get!1196 (getValueByKey!137 (toList!739 (+!107 lt!38912 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38906)))))

(declare-fun bs!3516 () Bool)

(assert (= bs!3516 d!20939))

(declare-fun m!86229 () Bool)

(assert (=> bs!3516 m!86229))

(assert (=> bs!3516 m!86229))

(declare-fun m!86231 () Bool)

(assert (=> bs!3516 m!86231))

(assert (=> b!82940 d!20939))

(declare-fun d!20941 () Bool)

(declare-fun e!54367 () Bool)

(assert (=> d!20941 e!54367))

(declare-fun res!43097 () Bool)

(assert (=> d!20941 (=> (not res!43097) (not e!54367))))

(declare-fun lt!39158 () ListLongMap!1447)

(assert (=> d!20941 (= res!43097 (contains!749 lt!39158 (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39157 () List!1523)

(assert (=> d!20941 (= lt!39158 (ListLongMap!1448 lt!39157))))

(declare-fun lt!39160 () Unit!2426)

(declare-fun lt!39159 () Unit!2426)

(assert (=> d!20941 (= lt!39160 lt!39159)))

(assert (=> d!20941 (= (getValueByKey!137 lt!39157 (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!20941 (= lt!39159 (lemmaContainsTupThenGetReturnValue!57 lt!39157 (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!20941 (= lt!39157 (insertStrictlySorted!60 (toList!739 lt!38908) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!20941 (= (+!107 lt!38908 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39158)))

(declare-fun b!83276 () Bool)

(declare-fun res!43098 () Bool)

(assert (=> b!83276 (=> (not res!43098) (not e!54367))))

(assert (=> b!83276 (= res!43098 (= (getValueByKey!137 (toList!739 lt!39158) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!83277 () Bool)

(assert (=> b!83277 (= e!54367 (contains!751 (toList!739 lt!39158) (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!20941 res!43097) b!83276))

(assert (= (and b!83276 res!43098) b!83277))

(declare-fun m!86233 () Bool)

(assert (=> d!20941 m!86233))

(declare-fun m!86235 () Bool)

(assert (=> d!20941 m!86235))

(declare-fun m!86237 () Bool)

(assert (=> d!20941 m!86237))

(declare-fun m!86239 () Bool)

(assert (=> d!20941 m!86239))

(declare-fun m!86241 () Bool)

(assert (=> b!83276 m!86241))

(declare-fun m!86243 () Bool)

(assert (=> b!83277 m!86243))

(assert (=> b!82940 d!20941))

(declare-fun d!20943 () Bool)

(assert (=> d!20943 (= (apply!81 (+!107 lt!38914 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38918) (apply!81 lt!38914 lt!38918))))

(declare-fun lt!39161 () Unit!2426)

(assert (=> d!20943 (= lt!39161 (choose!494 lt!38914 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38918))))

(declare-fun e!54368 () Bool)

(assert (=> d!20943 e!54368))

(declare-fun res!43099 () Bool)

(assert (=> d!20943 (=> (not res!43099) (not e!54368))))

(assert (=> d!20943 (= res!43099 (contains!749 lt!38914 lt!38918))))

(assert (=> d!20943 (= (addApplyDifferent!57 lt!38914 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38918) lt!39161)))

(declare-fun b!83278 () Bool)

(assert (=> b!83278 (= e!54368 (not (= lt!38918 lt!38911)))))

(assert (= (and d!20943 res!43099) b!83278))

(assert (=> d!20943 m!85807))

(declare-fun m!86245 () Bool)

(assert (=> d!20943 m!86245))

(assert (=> d!20943 m!85795))

(assert (=> d!20943 m!85795))

(assert (=> d!20943 m!85817))

(declare-fun m!86247 () Bool)

(assert (=> d!20943 m!86247))

(assert (=> b!82940 d!20943))

(declare-fun d!20945 () Bool)

(assert (=> d!20945 (= (apply!81 lt!38914 lt!38918) (get!1196 (getValueByKey!137 (toList!739 lt!38914) lt!38918)))))

(declare-fun bs!3517 () Bool)

(assert (= bs!3517 d!20945))

(declare-fun m!86249 () Bool)

(assert (=> bs!3517 m!86249))

(assert (=> bs!3517 m!86249))

(declare-fun m!86251 () Bool)

(assert (=> bs!3517 m!86251))

(assert (=> b!82940 d!20945))

(declare-fun d!20947 () Bool)

(assert (=> d!20947 (= (apply!81 (+!107 lt!38908 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38913) (apply!81 lt!38908 lt!38913))))

(declare-fun lt!39162 () Unit!2426)

(assert (=> d!20947 (= lt!39162 (choose!494 lt!38908 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38913))))

(declare-fun e!54369 () Bool)

(assert (=> d!20947 e!54369))

(declare-fun res!43100 () Bool)

(assert (=> d!20947 (=> (not res!43100) (not e!54369))))

(assert (=> d!20947 (= res!43100 (contains!749 lt!38908 lt!38913))))

(assert (=> d!20947 (= (addApplyDifferent!57 lt!38908 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38913) lt!39162)))

(declare-fun b!83279 () Bool)

(assert (=> b!83279 (= e!54369 (not (= lt!38913 lt!38910)))))

(assert (= (and d!20947 res!43100) b!83279))

(assert (=> d!20947 m!85791))

(declare-fun m!86253 () Bool)

(assert (=> d!20947 m!86253))

(assert (=> d!20947 m!85811))

(assert (=> d!20947 m!85811))

(assert (=> d!20947 m!85813))

(declare-fun m!86255 () Bool)

(assert (=> d!20947 m!86255))

(assert (=> b!82940 d!20947))

(declare-fun d!20949 () Bool)

(declare-fun e!54370 () Bool)

(assert (=> d!20949 e!54370))

(declare-fun res!43101 () Bool)

(assert (=> d!20949 (=> (not res!43101) (not e!54370))))

(declare-fun lt!39164 () ListLongMap!1447)

(assert (=> d!20949 (= res!43101 (contains!749 lt!39164 (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39163 () List!1523)

(assert (=> d!20949 (= lt!39164 (ListLongMap!1448 lt!39163))))

(declare-fun lt!39166 () Unit!2426)

(declare-fun lt!39165 () Unit!2426)

(assert (=> d!20949 (= lt!39166 lt!39165)))

(assert (=> d!20949 (= (getValueByKey!137 lt!39163 (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!20949 (= lt!39165 (lemmaContainsTupThenGetReturnValue!57 lt!39163 (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!20949 (= lt!39163 (insertStrictlySorted!60 (toList!739 lt!38925) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!20949 (= (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39164)))

(declare-fun b!83280 () Bool)

(declare-fun res!43102 () Bool)

(assert (=> b!83280 (=> (not res!43102) (not e!54370))))

(assert (=> b!83280 (= res!43102 (= (getValueByKey!137 (toList!739 lt!39164) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!83281 () Bool)

(assert (=> b!83281 (= e!54370 (contains!751 (toList!739 lt!39164) (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!20949 res!43101) b!83280))

(assert (= (and b!83280 res!43102) b!83281))

(declare-fun m!86257 () Bool)

(assert (=> d!20949 m!86257))

(declare-fun m!86259 () Bool)

(assert (=> d!20949 m!86259))

(declare-fun m!86261 () Bool)

(assert (=> d!20949 m!86261))

(declare-fun m!86263 () Bool)

(assert (=> d!20949 m!86263))

(declare-fun m!86265 () Bool)

(assert (=> b!83280 m!86265))

(declare-fun m!86267 () Bool)

(assert (=> b!83281 m!86267))

(assert (=> b!82940 d!20949))

(declare-fun d!20951 () Bool)

(assert (=> d!20951 (= (apply!81 lt!38912 lt!38906) (get!1196 (getValueByKey!137 (toList!739 lt!38912) lt!38906)))))

(declare-fun bs!3518 () Bool)

(assert (= bs!3518 d!20951))

(declare-fun m!86269 () Bool)

(assert (=> bs!3518 m!86269))

(assert (=> bs!3518 m!86269))

(declare-fun m!86271 () Bool)

(assert (=> bs!3518 m!86271))

(assert (=> b!82940 d!20951))

(declare-fun d!20953 () Bool)

(declare-fun e!54371 () Bool)

(assert (=> d!20953 e!54371))

(declare-fun res!43103 () Bool)

(assert (=> d!20953 (=> (not res!43103) (not e!54371))))

(declare-fun lt!39168 () ListLongMap!1447)

(assert (=> d!20953 (= res!43103 (contains!749 lt!39168 (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39167 () List!1523)

(assert (=> d!20953 (= lt!39168 (ListLongMap!1448 lt!39167))))

(declare-fun lt!39170 () Unit!2426)

(declare-fun lt!39169 () Unit!2426)

(assert (=> d!20953 (= lt!39170 lt!39169)))

(assert (=> d!20953 (= (getValueByKey!137 lt!39167 (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!20953 (= lt!39169 (lemmaContainsTupThenGetReturnValue!57 lt!39167 (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!20953 (= lt!39167 (insertStrictlySorted!60 (toList!739 lt!38912) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!20953 (= (+!107 lt!38912 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39168)))

(declare-fun b!83282 () Bool)

(declare-fun res!43104 () Bool)

(assert (=> b!83282 (=> (not res!43104) (not e!54371))))

(assert (=> b!83282 (= res!43104 (= (getValueByKey!137 (toList!739 lt!39168) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!83283 () Bool)

(assert (=> b!83283 (= e!54371 (contains!751 (toList!739 lt!39168) (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!20953 res!43103) b!83282))

(assert (= (and b!83282 res!43104) b!83283))

(declare-fun m!86273 () Bool)

(assert (=> d!20953 m!86273))

(declare-fun m!86275 () Bool)

(assert (=> d!20953 m!86275))

(declare-fun m!86277 () Bool)

(assert (=> d!20953 m!86277))

(declare-fun m!86279 () Bool)

(assert (=> d!20953 m!86279))

(declare-fun m!86281 () Bool)

(assert (=> b!83282 m!86281))

(declare-fun m!86283 () Bool)

(assert (=> b!83283 m!86283))

(assert (=> b!82940 d!20953))

(declare-fun d!20955 () Bool)

(declare-fun e!54374 () Bool)

(assert (=> d!20955 e!54374))

(declare-fun res!43110 () Bool)

(assert (=> d!20955 (=> (not res!43110) (not e!54374))))

(declare-fun lt!39176 () SeekEntryResult!245)

(assert (=> d!20955 (= res!43110 ((_ is Found!245) lt!39176))))

(assert (=> d!20955 (= lt!39176 (seekEntryOrOpen!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(declare-fun lt!39175 () Unit!2426)

(declare-fun choose!496 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) Int) Unit!2426)

(assert (=> d!20955 (= lt!39175 (choose!496 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)))))

(assert (=> d!20955 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!20955 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!30 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)) lt!39175)))

(declare-fun b!83288 () Bool)

(declare-fun res!43109 () Bool)

(assert (=> b!83288 (=> (not res!43109) (not e!54374))))

(assert (=> b!83288 (= res!43109 (inRange!0 (index!3117 lt!39176) (mask!6333 newMap!16)))))

(declare-fun b!83289 () Bool)

(assert (=> b!83289 (= e!54374 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!39176)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> b!83289 (and (bvsge (index!3117 lt!39176) #b00000000000000000000000000000000) (bvslt (index!3117 lt!39176) (size!2144 (_keys!3983 newMap!16))))))

(assert (= (and d!20955 res!43110) b!83288))

(assert (= (and b!83288 res!43109) b!83289))

(assert (=> d!20955 m!85563))

(assert (=> d!20955 m!85879))

(assert (=> d!20955 m!85563))

(declare-fun m!86285 () Bool)

(assert (=> d!20955 m!86285))

(assert (=> d!20955 m!86067))

(declare-fun m!86287 () Bool)

(assert (=> b!83288 m!86287))

(declare-fun m!86289 () Bool)

(assert (=> b!83289 m!86289))

(assert (=> bm!7793 d!20955))

(declare-fun bm!7822 () Bool)

(declare-fun c!13275 () Bool)

(declare-fun call!7825 () Bool)

(assert (=> bm!7822 (= call!7825 (arrayNoDuplicates!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13275 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519)) (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519))))))

(declare-fun d!20957 () Bool)

(declare-fun res!43113 () Bool)

(declare-fun e!54376 () Bool)

(assert (=> d!20957 (=> res!43113 e!54376)))

(assert (=> d!20957 (= res!43113 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(assert (=> d!20957 (= (arrayNoDuplicates!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519)) e!54376)))

(declare-fun b!83290 () Bool)

(declare-fun e!54377 () Bool)

(assert (=> b!83290 (= e!54377 call!7825)))

(declare-fun b!83291 () Bool)

(assert (=> b!83291 (= e!54377 call!7825)))

(declare-fun b!83292 () Bool)

(declare-fun e!54378 () Bool)

(assert (=> b!83292 (= e!54378 (contains!750 (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!83293 () Bool)

(declare-fun e!54375 () Bool)

(assert (=> b!83293 (= e!54375 e!54377)))

(assert (=> b!83293 (= c!13275 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!83294 () Bool)

(assert (=> b!83294 (= e!54376 e!54375)))

(declare-fun res!43112 () Bool)

(assert (=> b!83294 (=> (not res!43112) (not e!54375))))

(assert (=> b!83294 (= res!43112 (not e!54378))))

(declare-fun res!43111 () Bool)

(assert (=> b!83294 (=> (not res!43111) (not e!54378))))

(assert (=> b!83294 (= res!43111 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!20957 (not res!43113)) b!83294))

(assert (= (and b!83294 res!43111) b!83292))

(assert (= (and b!83294 res!43112) b!83293))

(assert (= (and b!83293 c!13275) b!83290))

(assert (= (and b!83293 (not c!13275)) b!83291))

(assert (= (or b!83290 b!83291) bm!7822))

(declare-fun m!86291 () Bool)

(assert (=> bm!7822 m!86291))

(declare-fun m!86293 () Bool)

(assert (=> bm!7822 m!86293))

(assert (=> b!83292 m!86291))

(assert (=> b!83292 m!86291))

(declare-fun m!86295 () Bool)

(assert (=> b!83292 m!86295))

(assert (=> b!83293 m!86291))

(assert (=> b!83293 m!86291))

(declare-fun m!86297 () Bool)

(assert (=> b!83293 m!86297))

(assert (=> b!83294 m!86291))

(assert (=> b!83294 m!86291))

(assert (=> b!83294 m!86297))

(assert (=> bm!7707 d!20957))

(declare-fun d!20959 () Bool)

(declare-fun e!54380 () Bool)

(assert (=> d!20959 e!54380))

(declare-fun res!43114 () Bool)

(assert (=> d!20959 (=> res!43114 e!54380)))

(declare-fun lt!39178 () Bool)

(assert (=> d!20959 (= res!43114 (not lt!39178))))

(declare-fun lt!39180 () Bool)

(assert (=> d!20959 (= lt!39178 lt!39180)))

(declare-fun lt!39179 () Unit!2426)

(declare-fun e!54379 () Unit!2426)

(assert (=> d!20959 (= lt!39179 e!54379)))

(declare-fun c!13276 () Bool)

(assert (=> d!20959 (= c!13276 lt!39180)))

(assert (=> d!20959 (= lt!39180 (containsKey!141 (toList!739 lt!39077) (_1!1111 lt!38742)))))

(assert (=> d!20959 (= (contains!749 lt!39077 (_1!1111 lt!38742)) lt!39178)))

(declare-fun b!83295 () Bool)

(declare-fun lt!39177 () Unit!2426)

(assert (=> b!83295 (= e!54379 lt!39177)))

(assert (=> b!83295 (= lt!39177 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39077) (_1!1111 lt!38742)))))

(assert (=> b!83295 (isDefined!91 (getValueByKey!137 (toList!739 lt!39077) (_1!1111 lt!38742)))))

(declare-fun b!83296 () Bool)

(declare-fun Unit!2440 () Unit!2426)

(assert (=> b!83296 (= e!54379 Unit!2440)))

(declare-fun b!83297 () Bool)

(assert (=> b!83297 (= e!54380 (isDefined!91 (getValueByKey!137 (toList!739 lt!39077) (_1!1111 lt!38742))))))

(assert (= (and d!20959 c!13276) b!83295))

(assert (= (and d!20959 (not c!13276)) b!83296))

(assert (= (and d!20959 (not res!43114)) b!83297))

(declare-fun m!86299 () Bool)

(assert (=> d!20959 m!86299))

(declare-fun m!86301 () Bool)

(assert (=> b!83295 m!86301))

(assert (=> b!83295 m!86017))

(assert (=> b!83295 m!86017))

(declare-fun m!86303 () Bool)

(assert (=> b!83295 m!86303))

(assert (=> b!83297 m!86017))

(assert (=> b!83297 m!86017))

(assert (=> b!83297 m!86303))

(assert (=> d!20889 d!20959))

(declare-fun b!83300 () Bool)

(declare-fun e!54382 () Option!143)

(assert (=> b!83300 (= e!54382 (getValueByKey!137 (t!5214 lt!39076) (_1!1111 lt!38742)))))

(declare-fun d!20961 () Bool)

(declare-fun c!13277 () Bool)

(assert (=> d!20961 (= c!13277 (and ((_ is Cons!1519) lt!39076) (= (_1!1111 (h!2109 lt!39076)) (_1!1111 lt!38742))))))

(declare-fun e!54381 () Option!143)

(assert (=> d!20961 (= (getValueByKey!137 lt!39076 (_1!1111 lt!38742)) e!54381)))

(declare-fun b!83298 () Bool)

(assert (=> b!83298 (= e!54381 (Some!142 (_2!1111 (h!2109 lt!39076))))))

(declare-fun b!83301 () Bool)

(assert (=> b!83301 (= e!54382 None!141)))

(declare-fun b!83299 () Bool)

(assert (=> b!83299 (= e!54381 e!54382)))

(declare-fun c!13278 () Bool)

(assert (=> b!83299 (= c!13278 (and ((_ is Cons!1519) lt!39076) (not (= (_1!1111 (h!2109 lt!39076)) (_1!1111 lt!38742)))))))

(assert (= (and d!20961 c!13277) b!83298))

(assert (= (and d!20961 (not c!13277)) b!83299))

(assert (= (and b!83299 c!13278) b!83300))

(assert (= (and b!83299 (not c!13278)) b!83301))

(declare-fun m!86305 () Bool)

(assert (=> b!83300 m!86305))

(assert (=> d!20889 d!20961))

(declare-fun d!20963 () Bool)

(assert (=> d!20963 (= (getValueByKey!137 lt!39076 (_1!1111 lt!38742)) (Some!142 (_2!1111 lt!38742)))))

(declare-fun lt!39183 () Unit!2426)

(declare-fun choose!497 (List!1523 (_ BitVec 64) V!3017) Unit!2426)

(assert (=> d!20963 (= lt!39183 (choose!497 lt!39076 (_1!1111 lt!38742) (_2!1111 lt!38742)))))

(declare-fun e!54385 () Bool)

(assert (=> d!20963 e!54385))

(declare-fun res!43119 () Bool)

(assert (=> d!20963 (=> (not res!43119) (not e!54385))))

(declare-fun isStrictlySorted!292 (List!1523) Bool)

(assert (=> d!20963 (= res!43119 (isStrictlySorted!292 lt!39076))))

(assert (=> d!20963 (= (lemmaContainsTupThenGetReturnValue!57 lt!39076 (_1!1111 lt!38742) (_2!1111 lt!38742)) lt!39183)))

(declare-fun b!83306 () Bool)

(declare-fun res!43120 () Bool)

(assert (=> b!83306 (=> (not res!43120) (not e!54385))))

(assert (=> b!83306 (= res!43120 (containsKey!141 lt!39076 (_1!1111 lt!38742)))))

(declare-fun b!83307 () Bool)

(assert (=> b!83307 (= e!54385 (contains!751 lt!39076 (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(assert (= (and d!20963 res!43119) b!83306))

(assert (= (and b!83306 res!43120) b!83307))

(assert (=> d!20963 m!86011))

(declare-fun m!86307 () Bool)

(assert (=> d!20963 m!86307))

(declare-fun m!86309 () Bool)

(assert (=> d!20963 m!86309))

(declare-fun m!86311 () Bool)

(assert (=> b!83306 m!86311))

(declare-fun m!86313 () Bool)

(assert (=> b!83307 m!86313))

(assert (=> d!20889 d!20963))

(declare-fun b!83328 () Bool)

(declare-fun e!54400 () List!1523)

(declare-fun call!7832 () List!1523)

(assert (=> b!83328 (= e!54400 call!7832)))

(declare-fun b!83329 () Bool)

(declare-fun e!54398 () Bool)

(declare-fun lt!39186 () List!1523)

(assert (=> b!83329 (= e!54398 (contains!751 lt!39186 (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(declare-fun b!83330 () Bool)

(declare-fun e!54397 () List!1523)

(declare-fun c!13287 () Bool)

(declare-fun c!13289 () Bool)

(assert (=> b!83330 (= e!54397 (ite c!13289 (t!5214 (toList!739 lt!38728)) (ite c!13287 (Cons!1519 (h!2109 (toList!739 lt!38728)) (t!5214 (toList!739 lt!38728))) Nil!1520)))))

(declare-fun d!20965 () Bool)

(assert (=> d!20965 e!54398))

(declare-fun res!43126 () Bool)

(assert (=> d!20965 (=> (not res!43126) (not e!54398))))

(assert (=> d!20965 (= res!43126 (isStrictlySorted!292 lt!39186))))

(declare-fun e!54399 () List!1523)

(assert (=> d!20965 (= lt!39186 e!54399)))

(declare-fun c!13288 () Bool)

(assert (=> d!20965 (= c!13288 (and ((_ is Cons!1519) (toList!739 lt!38728)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38728))) (_1!1111 lt!38742))))))

(assert (=> d!20965 (isStrictlySorted!292 (toList!739 lt!38728))))

(assert (=> d!20965 (= (insertStrictlySorted!60 (toList!739 lt!38728) (_1!1111 lt!38742) (_2!1111 lt!38742)) lt!39186)))

(declare-fun b!83331 () Bool)

(assert (=> b!83331 (= e!54397 (insertStrictlySorted!60 (t!5214 (toList!739 lt!38728)) (_1!1111 lt!38742) (_2!1111 lt!38742)))))

(declare-fun bm!7829 () Bool)

(declare-fun call!7834 () List!1523)

(assert (=> bm!7829 (= call!7832 call!7834)))

(declare-fun b!83332 () Bool)

(declare-fun e!54396 () List!1523)

(declare-fun call!7833 () List!1523)

(assert (=> b!83332 (= e!54396 call!7833)))

(declare-fun b!83333 () Bool)

(assert (=> b!83333 (= e!54399 e!54400)))

(assert (=> b!83333 (= c!13289 (and ((_ is Cons!1519) (toList!739 lt!38728)) (= (_1!1111 (h!2109 (toList!739 lt!38728))) (_1!1111 lt!38742))))))

(declare-fun b!83334 () Bool)

(declare-fun res!43125 () Bool)

(assert (=> b!83334 (=> (not res!43125) (not e!54398))))

(assert (=> b!83334 (= res!43125 (containsKey!141 lt!39186 (_1!1111 lt!38742)))))

(declare-fun bm!7830 () Bool)

(assert (=> bm!7830 (= call!7833 call!7832)))

(declare-fun b!83335 () Bool)

(assert (=> b!83335 (= e!54399 call!7834)))

(declare-fun b!83336 () Bool)

(assert (=> b!83336 (= e!54396 call!7833)))

(declare-fun b!83337 () Bool)

(assert (=> b!83337 (= c!13287 (and ((_ is Cons!1519) (toList!739 lt!38728)) (bvsgt (_1!1111 (h!2109 (toList!739 lt!38728))) (_1!1111 lt!38742))))))

(assert (=> b!83337 (= e!54400 e!54396)))

(declare-fun bm!7831 () Bool)

(declare-fun $colon$colon!70 (List!1523 tuple2!2200) List!1523)

(assert (=> bm!7831 (= call!7834 ($colon$colon!70 e!54397 (ite c!13288 (h!2109 (toList!739 lt!38728)) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742)))))))

(declare-fun c!13290 () Bool)

(assert (=> bm!7831 (= c!13290 c!13288)))

(assert (= (and d!20965 c!13288) b!83335))

(assert (= (and d!20965 (not c!13288)) b!83333))

(assert (= (and b!83333 c!13289) b!83328))

(assert (= (and b!83333 (not c!13289)) b!83337))

(assert (= (and b!83337 c!13287) b!83332))

(assert (= (and b!83337 (not c!13287)) b!83336))

(assert (= (or b!83332 b!83336) bm!7830))

(assert (= (or b!83328 bm!7830) bm!7829))

(assert (= (or b!83335 bm!7829) bm!7831))

(assert (= (and bm!7831 c!13290) b!83331))

(assert (= (and bm!7831 (not c!13290)) b!83330))

(assert (= (and d!20965 res!43126) b!83334))

(assert (= (and b!83334 res!43125) b!83329))

(declare-fun m!86315 () Bool)

(assert (=> bm!7831 m!86315))

(declare-fun m!86317 () Bool)

(assert (=> b!83331 m!86317))

(declare-fun m!86319 () Bool)

(assert (=> d!20965 m!86319))

(declare-fun m!86321 () Bool)

(assert (=> d!20965 m!86321))

(declare-fun m!86323 () Bool)

(assert (=> b!83334 m!86323))

(declare-fun m!86325 () Bool)

(assert (=> b!83329 m!86325))

(assert (=> d!20889 d!20965))

(assert (=> d!20863 d!20891))

(declare-fun d!20967 () Bool)

(declare-fun e!54402 () Bool)

(assert (=> d!20967 e!54402))

(declare-fun res!43127 () Bool)

(assert (=> d!20967 (=> res!43127 e!54402)))

(declare-fun lt!39188 () Bool)

(assert (=> d!20967 (= res!43127 (not lt!39188))))

(declare-fun lt!39190 () Bool)

(assert (=> d!20967 (= lt!39188 lt!39190)))

(declare-fun lt!39189 () Unit!2426)

(declare-fun e!54401 () Unit!2426)

(assert (=> d!20967 (= lt!39189 e!54401)))

(declare-fun c!13291 () Bool)

(assert (=> d!20967 (= c!13291 lt!39190)))

(assert (=> d!20967 (= lt!39190 (containsKey!141 (toList!739 lt!39053) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20967 (= (contains!749 lt!39053 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39188)))

(declare-fun b!83338 () Bool)

(declare-fun lt!39187 () Unit!2426)

(assert (=> b!83338 (= e!54401 lt!39187)))

(assert (=> b!83338 (= lt!39187 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39053) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83338 (isDefined!91 (getValueByKey!137 (toList!739 lt!39053) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83339 () Bool)

(declare-fun Unit!2441 () Unit!2426)

(assert (=> b!83339 (= e!54401 Unit!2441)))

(declare-fun b!83340 () Bool)

(assert (=> b!83340 (= e!54402 (isDefined!91 (getValueByKey!137 (toList!739 lt!39053) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20967 c!13291) b!83338))

(assert (= (and d!20967 (not c!13291)) b!83339))

(assert (= (and d!20967 (not res!43127)) b!83340))

(declare-fun m!86327 () Bool)

(assert (=> d!20967 m!86327))

(declare-fun m!86329 () Bool)

(assert (=> b!83338 m!86329))

(declare-fun m!86331 () Bool)

(assert (=> b!83338 m!86331))

(assert (=> b!83338 m!86331))

(declare-fun m!86333 () Bool)

(assert (=> b!83338 m!86333))

(assert (=> b!83340 m!86331))

(assert (=> b!83340 m!86331))

(assert (=> b!83340 m!86333))

(assert (=> b!83114 d!20967))

(declare-fun d!20969 () Bool)

(declare-fun lt!39191 () Bool)

(assert (=> d!20969 (= lt!39191 (select (content!87 (toList!739 lt!39028)) lt!38738))))

(declare-fun e!54403 () Bool)

(assert (=> d!20969 (= lt!39191 e!54403)))

(declare-fun res!43128 () Bool)

(assert (=> d!20969 (=> (not res!43128) (not e!54403))))

(assert (=> d!20969 (= res!43128 ((_ is Cons!1519) (toList!739 lt!39028)))))

(assert (=> d!20969 (= (contains!751 (toList!739 lt!39028) lt!38738) lt!39191)))

(declare-fun b!83341 () Bool)

(declare-fun e!54404 () Bool)

(assert (=> b!83341 (= e!54403 e!54404)))

(declare-fun res!43129 () Bool)

(assert (=> b!83341 (=> res!43129 e!54404)))

(assert (=> b!83341 (= res!43129 (= (h!2109 (toList!739 lt!39028)) lt!38738))))

(declare-fun b!83342 () Bool)

(assert (=> b!83342 (= e!54404 (contains!751 (t!5214 (toList!739 lt!39028)) lt!38738))))

(assert (= (and d!20969 res!43128) b!83341))

(assert (= (and b!83341 (not res!43129)) b!83342))

(declare-fun m!86335 () Bool)

(assert (=> d!20969 m!86335))

(declare-fun m!86337 () Bool)

(assert (=> d!20969 m!86337))

(declare-fun m!86339 () Bool)

(assert (=> b!83342 m!86339))

(assert (=> b!83082 d!20969))

(declare-fun d!20971 () Bool)

(assert (=> d!20971 (= (get!1194 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2621 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> b!82847 d!20971))

(declare-fun d!20973 () Bool)

(declare-fun isEmpty!337 (List!1523) Bool)

(assert (=> d!20973 (= (isEmpty!336 lt!39053) (isEmpty!337 (toList!739 lt!39053)))))

(declare-fun bs!3519 () Bool)

(assert (= bs!3519 d!20973))

(declare-fun m!86341 () Bool)

(assert (=> bs!3519 m!86341))

(assert (=> b!83112 d!20973))

(declare-fun d!20975 () Bool)

(assert (=> d!20975 (= (+!107 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!39013 (zeroValue!2210 newMap!16) lt!38725 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39194 () Unit!2426)

(declare-fun choose!498 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 V!3017 Int) Unit!2426)

(assert (=> d!20975 (= lt!39194 (choose!498 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) lt!39013 (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) lt!38725 (defaultEntry!2316 newMap!16)))))

(assert (=> d!20975 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!20975 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!30 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) lt!39013 (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) lt!38725 (defaultEntry!2316 newMap!16)) lt!39194)))

(declare-fun bs!3520 () Bool)

(assert (= bs!3520 d!20975))

(assert (=> bs!3520 m!85779))

(declare-fun m!86343 () Bool)

(assert (=> bs!3520 m!86343))

(declare-fun m!86345 () Bool)

(assert (=> bs!3520 m!86345))

(assert (=> bs!3520 m!85779))

(assert (=> bs!3520 m!86067))

(declare-fun m!86347 () Bool)

(assert (=> bs!3520 m!86347))

(assert (=> b!83041 d!20975))

(declare-fun b!83343 () Bool)

(declare-fun e!54416 () Bool)

(declare-fun call!7839 () Bool)

(assert (=> b!83343 (= e!54416 (not call!7839))))

(declare-fun b!83344 () Bool)

(declare-fun e!54410 () Bool)

(declare-fun e!54414 () Bool)

(assert (=> b!83344 (= e!54410 e!54414)))

(declare-fun c!13297 () Bool)

(assert (=> b!83344 (= c!13297 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!83345 () Bool)

(declare-fun e!54405 () Bool)

(declare-fun lt!39198 () ListLongMap!1447)

(assert (=> b!83345 (= e!54405 (= (apply!81 lt!39198 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) (get!1193 (select (arr!1901 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83345 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2145 (_values!2299 newMap!16))))))

(assert (=> b!83345 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83346 () Bool)

(declare-fun e!54412 () ListLongMap!1447)

(declare-fun call!7841 () ListLongMap!1447)

(assert (=> b!83346 (= e!54412 call!7841)))

(declare-fun bm!7832 () Bool)

(declare-fun c!13295 () Bool)

(declare-fun c!13292 () Bool)

(declare-fun call!7837 () ListLongMap!1447)

(declare-fun call!7835 () ListLongMap!1447)

(declare-fun call!7836 () ListLongMap!1447)

(declare-fun call!7840 () ListLongMap!1447)

(assert (=> bm!7832 (= call!7840 (+!107 (ite c!13292 call!7835 (ite c!13295 call!7837 call!7836)) (ite (or c!13292 c!13295) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun b!83347 () Bool)

(declare-fun e!54407 () Bool)

(assert (=> b!83347 (= e!54407 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83348 () Bool)

(declare-fun res!43137 () Bool)

(assert (=> b!83348 (=> (not res!43137) (not e!54410))))

(declare-fun e!54406 () Bool)

(assert (=> b!83348 (= res!43137 e!54406)))

(declare-fun res!43138 () Bool)

(assert (=> b!83348 (=> res!43138 e!54406)))

(assert (=> b!83348 (= res!43138 (not e!54407))))

(declare-fun res!43130 () Bool)

(assert (=> b!83348 (=> (not res!43130) (not e!54407))))

(assert (=> b!83348 (= res!43130 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83349 () Bool)

(declare-fun call!7838 () Bool)

(assert (=> b!83349 (= e!54414 (not call!7838))))

(declare-fun b!83350 () Bool)

(declare-fun e!54415 () Bool)

(assert (=> b!83350 (= e!54416 e!54415)))

(declare-fun res!43131 () Bool)

(assert (=> b!83350 (= res!43131 call!7839)))

(assert (=> b!83350 (=> (not res!43131) (not e!54415))))

(declare-fun bm!7833 () Bool)

(assert (=> bm!7833 (= call!7838 (contains!749 lt!39198 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83351 () Bool)

(declare-fun res!43133 () Bool)

(assert (=> b!83351 (=> (not res!43133) (not e!54410))))

(assert (=> b!83351 (= res!43133 e!54416)))

(declare-fun c!13294 () Bool)

(assert (=> b!83351 (= c!13294 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!20977 () Bool)

(assert (=> d!20977 e!54410))

(declare-fun res!43136 () Bool)

(assert (=> d!20977 (=> (not res!43136) (not e!54410))))

(assert (=> d!20977 (= res!43136 (or (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))))

(declare-fun lt!39211 () ListLongMap!1447)

(assert (=> d!20977 (= lt!39198 lt!39211)))

(declare-fun lt!39208 () Unit!2426)

(declare-fun e!54411 () Unit!2426)

(assert (=> d!20977 (= lt!39208 e!54411)))

(declare-fun c!13293 () Bool)

(declare-fun e!54408 () Bool)

(assert (=> d!20977 (= c!13293 e!54408)))

(declare-fun res!43134 () Bool)

(assert (=> d!20977 (=> (not res!43134) (not e!54408))))

(assert (=> d!20977 (= res!43134 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun e!54417 () ListLongMap!1447)

(assert (=> d!20977 (= lt!39211 e!54417)))

(assert (=> d!20977 (= c!13292 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20977 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!20977 (= (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39198)))

(declare-fun b!83352 () Bool)

(assert (=> b!83352 (= e!54415 (= (apply!81 lt!39198 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 newMap!16)))))

(declare-fun b!83353 () Bool)

(declare-fun e!54413 () Bool)

(assert (=> b!83353 (= e!54414 e!54413)))

(declare-fun res!43132 () Bool)

(assert (=> b!83353 (= res!43132 call!7838)))

(assert (=> b!83353 (=> (not res!43132) (not e!54413))))

(declare-fun b!83354 () Bool)

(assert (=> b!83354 (= e!54408 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83355 () Bool)

(assert (=> b!83355 (= e!54417 e!54412)))

(assert (=> b!83355 (= c!13295 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7834 () Bool)

(assert (=> bm!7834 (= call!7837 call!7835)))

(declare-fun b!83356 () Bool)

(declare-fun lt!39210 () Unit!2426)

(assert (=> b!83356 (= e!54411 lt!39210)))

(declare-fun lt!39216 () ListLongMap!1447)

(assert (=> b!83356 (= lt!39216 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39213 () (_ BitVec 64))

(assert (=> b!83356 (= lt!39213 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39214 () (_ BitVec 64))

(assert (=> b!83356 (= lt!39214 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39196 () Unit!2426)

(assert (=> b!83356 (= lt!39196 (addStillContains!57 lt!39216 lt!39213 (zeroValue!2210 newMap!16) lt!39214))))

(assert (=> b!83356 (contains!749 (+!107 lt!39216 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16))) lt!39214)))

(declare-fun lt!39215 () Unit!2426)

(assert (=> b!83356 (= lt!39215 lt!39196)))

(declare-fun lt!39205 () ListLongMap!1447)

(assert (=> b!83356 (= lt!39205 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39202 () (_ BitVec 64))

(assert (=> b!83356 (= lt!39202 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39209 () (_ BitVec 64))

(assert (=> b!83356 (= lt!39209 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39200 () Unit!2426)

(assert (=> b!83356 (= lt!39200 (addApplyDifferent!57 lt!39205 lt!39202 (minValue!2210 newMap!16) lt!39209))))

(assert (=> b!83356 (= (apply!81 (+!107 lt!39205 (tuple2!2201 lt!39202 (minValue!2210 newMap!16))) lt!39209) (apply!81 lt!39205 lt!39209))))

(declare-fun lt!39195 () Unit!2426)

(assert (=> b!83356 (= lt!39195 lt!39200)))

(declare-fun lt!39199 () ListLongMap!1447)

(assert (=> b!83356 (= lt!39199 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39201 () (_ BitVec 64))

(assert (=> b!83356 (= lt!39201 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39204 () (_ BitVec 64))

(assert (=> b!83356 (= lt!39204 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39206 () Unit!2426)

(assert (=> b!83356 (= lt!39206 (addApplyDifferent!57 lt!39199 lt!39201 (zeroValue!2210 newMap!16) lt!39204))))

(assert (=> b!83356 (= (apply!81 (+!107 lt!39199 (tuple2!2201 lt!39201 (zeroValue!2210 newMap!16))) lt!39204) (apply!81 lt!39199 lt!39204))))

(declare-fun lt!39207 () Unit!2426)

(assert (=> b!83356 (= lt!39207 lt!39206)))

(declare-fun lt!39203 () ListLongMap!1447)

(assert (=> b!83356 (= lt!39203 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39212 () (_ BitVec 64))

(assert (=> b!83356 (= lt!39212 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39197 () (_ BitVec 64))

(assert (=> b!83356 (= lt!39197 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!83356 (= lt!39210 (addApplyDifferent!57 lt!39203 lt!39212 (minValue!2210 newMap!16) lt!39197))))

(assert (=> b!83356 (= (apply!81 (+!107 lt!39203 (tuple2!2201 lt!39212 (minValue!2210 newMap!16))) lt!39197) (apply!81 lt!39203 lt!39197))))

(declare-fun bm!7835 () Bool)

(assert (=> bm!7835 (= call!7836 call!7837)))

(declare-fun b!83357 () Bool)

(declare-fun Unit!2442 () Unit!2426)

(assert (=> b!83357 (= e!54411 Unit!2442)))

(declare-fun b!83358 () Bool)

(assert (=> b!83358 (= e!54406 e!54405)))

(declare-fun res!43135 () Bool)

(assert (=> b!83358 (=> (not res!43135) (not e!54405))))

(assert (=> b!83358 (= res!43135 (contains!749 lt!39198 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83358 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83359 () Bool)

(declare-fun e!54409 () ListLongMap!1447)

(assert (=> b!83359 (= e!54409 call!7841)))

(declare-fun b!83360 () Bool)

(assert (=> b!83360 (= e!54413 (= (apply!81 lt!39198 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 newMap!16)))))

(declare-fun bm!7836 () Bool)

(assert (=> bm!7836 (= call!7841 call!7840)))

(declare-fun bm!7837 () Bool)

(assert (=> bm!7837 (= call!7839 (contains!749 lt!39198 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83361 () Bool)

(assert (=> b!83361 (= e!54409 call!7836)))

(declare-fun b!83362 () Bool)

(declare-fun c!13296 () Bool)

(assert (=> b!83362 (= c!13296 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!83362 (= e!54412 e!54409)))

(declare-fun b!83363 () Bool)

(assert (=> b!83363 (= e!54417 (+!107 call!7840 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(declare-fun bm!7838 () Bool)

(assert (=> bm!7838 (= call!7835 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (= (and d!20977 c!13292) b!83363))

(assert (= (and d!20977 (not c!13292)) b!83355))

(assert (= (and b!83355 c!13295) b!83346))

(assert (= (and b!83355 (not c!13295)) b!83362))

(assert (= (and b!83362 c!13296) b!83359))

(assert (= (and b!83362 (not c!13296)) b!83361))

(assert (= (or b!83359 b!83361) bm!7835))

(assert (= (or b!83346 bm!7835) bm!7834))

(assert (= (or b!83346 b!83359) bm!7836))

(assert (= (or b!83363 bm!7834) bm!7838))

(assert (= (or b!83363 bm!7836) bm!7832))

(assert (= (and d!20977 res!43134) b!83354))

(assert (= (and d!20977 c!13293) b!83356))

(assert (= (and d!20977 (not c!13293)) b!83357))

(assert (= (and d!20977 res!43136) b!83348))

(assert (= (and b!83348 res!43130) b!83347))

(assert (= (and b!83348 (not res!43138)) b!83358))

(assert (= (and b!83358 res!43135) b!83345))

(assert (= (and b!83348 res!43137) b!83351))

(assert (= (and b!83351 c!13294) b!83350))

(assert (= (and b!83351 (not c!13294)) b!83343))

(assert (= (and b!83350 res!43131) b!83352))

(assert (= (or b!83350 b!83343) bm!7837))

(assert (= (and b!83351 res!43133) b!83344))

(assert (= (and b!83344 c!13297) b!83353))

(assert (= (and b!83344 (not c!13297)) b!83349))

(assert (= (and b!83353 res!43132) b!83360))

(assert (= (or b!83353 b!83349) bm!7833))

(declare-fun b_lambda!3709 () Bool)

(assert (=> (not b_lambda!3709) (not b!83345)))

(assert (=> b!83345 t!5225))

(declare-fun b_and!5077 () Bool)

(assert (= b_and!5073 (and (=> t!5225 result!2895) b_and!5077)))

(assert (=> b!83345 t!5227))

(declare-fun b_and!5079 () Bool)

(assert (= b_and!5075 (and (=> t!5227 result!2897) b_and!5079)))

(declare-fun m!86349 () Bool)

(assert (=> b!83360 m!86349))

(declare-fun m!86351 () Bool)

(assert (=> bm!7833 m!86351))

(assert (=> b!83358 m!86045))

(assert (=> b!83358 m!86045))

(declare-fun m!86353 () Bool)

(assert (=> b!83358 m!86353))

(declare-fun m!86355 () Bool)

(assert (=> bm!7838 m!86355))

(declare-fun m!86357 () Bool)

(assert (=> bm!7832 m!86357))

(declare-fun m!86359 () Bool)

(assert (=> bm!7837 m!86359))

(assert (=> b!83356 m!86045))

(assert (=> b!83356 m!86355))

(declare-fun m!86361 () Bool)

(assert (=> b!83356 m!86361))

(declare-fun m!86363 () Bool)

(assert (=> b!83356 m!86363))

(declare-fun m!86365 () Bool)

(assert (=> b!83356 m!86365))

(declare-fun m!86367 () Bool)

(assert (=> b!83356 m!86367))

(declare-fun m!86369 () Bool)

(assert (=> b!83356 m!86369))

(declare-fun m!86371 () Bool)

(assert (=> b!83356 m!86371))

(declare-fun m!86373 () Bool)

(assert (=> b!83356 m!86373))

(declare-fun m!86375 () Bool)

(assert (=> b!83356 m!86375))

(declare-fun m!86377 () Bool)

(assert (=> b!83356 m!86377))

(assert (=> b!83356 m!86367))

(assert (=> b!83356 m!86371))

(declare-fun m!86379 () Bool)

(assert (=> b!83356 m!86379))

(declare-fun m!86381 () Bool)

(assert (=> b!83356 m!86381))

(assert (=> b!83356 m!86381))

(declare-fun m!86383 () Bool)

(assert (=> b!83356 m!86383))

(declare-fun m!86385 () Bool)

(assert (=> b!83356 m!86385))

(assert (=> b!83356 m!86365))

(declare-fun m!86387 () Bool)

(assert (=> b!83356 m!86387))

(declare-fun m!86389 () Bool)

(assert (=> b!83356 m!86389))

(assert (=> b!83345 m!86045))

(assert (=> b!83345 m!86141))

(assert (=> b!83345 m!86045))

(declare-fun m!86391 () Bool)

(assert (=> b!83345 m!86391))

(declare-fun m!86393 () Bool)

(assert (=> b!83345 m!86393))

(assert (=> b!83345 m!86393))

(assert (=> b!83345 m!86141))

(declare-fun m!86395 () Bool)

(assert (=> b!83345 m!86395))

(assert (=> b!83347 m!86045))

(assert (=> b!83347 m!86045))

(assert (=> b!83347 m!86051))

(declare-fun m!86397 () Bool)

(assert (=> b!83363 m!86397))

(declare-fun m!86399 () Bool)

(assert (=> b!83352 m!86399))

(assert (=> b!83354 m!86045))

(assert (=> b!83354 m!86045))

(assert (=> b!83354 m!86051))

(assert (=> d!20977 m!86067))

(assert (=> d!20861 d!20977))

(declare-fun b!83366 () Bool)

(declare-fun e!54419 () Option!143)

(assert (=> b!83366 (= e!54419 (getValueByKey!137 (t!5214 (toList!739 lt!39072)) (_1!1111 lt!38738)))))

(declare-fun d!20979 () Bool)

(declare-fun c!13298 () Bool)

(assert (=> d!20979 (= c!13298 (and ((_ is Cons!1519) (toList!739 lt!39072)) (= (_1!1111 (h!2109 (toList!739 lt!39072))) (_1!1111 lt!38738))))))

(declare-fun e!54418 () Option!143)

(assert (=> d!20979 (= (getValueByKey!137 (toList!739 lt!39072) (_1!1111 lt!38738)) e!54418)))

(declare-fun b!83364 () Bool)

(assert (=> b!83364 (= e!54418 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39072)))))))

(declare-fun b!83367 () Bool)

(assert (=> b!83367 (= e!54419 None!141)))

(declare-fun b!83365 () Bool)

(assert (=> b!83365 (= e!54418 e!54419)))

(declare-fun c!13299 () Bool)

(assert (=> b!83365 (= c!13299 (and ((_ is Cons!1519) (toList!739 lt!39072)) (not (= (_1!1111 (h!2109 (toList!739 lt!39072))) (_1!1111 lt!38738)))))))

(assert (= (and d!20979 c!13298) b!83364))

(assert (= (and d!20979 (not c!13298)) b!83365))

(assert (= (and b!83365 c!13299) b!83366))

(assert (= (and b!83365 (not c!13299)) b!83367))

(declare-fun m!86401 () Bool)

(assert (=> b!83366 m!86401))

(assert (=> b!83127 d!20979))

(assert (=> b!82868 d!20855))

(declare-fun b!83370 () Bool)

(declare-fun e!54421 () Option!143)

(assert (=> b!83370 (= e!54421 (getValueByKey!137 (t!5214 (toList!739 lt!39068)) (_1!1111 lt!38729)))))

(declare-fun d!20981 () Bool)

(declare-fun c!13300 () Bool)

(assert (=> d!20981 (= c!13300 (and ((_ is Cons!1519) (toList!739 lt!39068)) (= (_1!1111 (h!2109 (toList!739 lt!39068))) (_1!1111 lt!38729))))))

(declare-fun e!54420 () Option!143)

(assert (=> d!20981 (= (getValueByKey!137 (toList!739 lt!39068) (_1!1111 lt!38729)) e!54420)))

(declare-fun b!83368 () Bool)

(assert (=> b!83368 (= e!54420 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39068)))))))

(declare-fun b!83371 () Bool)

(assert (=> b!83371 (= e!54421 None!141)))

(declare-fun b!83369 () Bool)

(assert (=> b!83369 (= e!54420 e!54421)))

(declare-fun c!13301 () Bool)

(assert (=> b!83369 (= c!13301 (and ((_ is Cons!1519) (toList!739 lt!39068)) (not (= (_1!1111 (h!2109 (toList!739 lt!39068))) (_1!1111 lt!38729)))))))

(assert (= (and d!20981 c!13300) b!83368))

(assert (= (and d!20981 (not c!13300)) b!83369))

(assert (= (and b!83369 c!13301) b!83370))

(assert (= (and b!83369 (not c!13301)) b!83371))

(declare-fun m!86403 () Bool)

(assert (=> b!83370 m!86403))

(assert (=> b!83125 d!20981))

(declare-fun d!20983 () Bool)

(declare-fun e!54423 () Bool)

(assert (=> d!20983 e!54423))

(declare-fun res!43139 () Bool)

(assert (=> d!20983 (=> res!43139 e!54423)))

(declare-fun lt!39218 () Bool)

(assert (=> d!20983 (= res!43139 (not lt!39218))))

(declare-fun lt!39220 () Bool)

(assert (=> d!20983 (= lt!39218 lt!39220)))

(declare-fun lt!39219 () Unit!2426)

(declare-fun e!54422 () Unit!2426)

(assert (=> d!20983 (= lt!39219 e!54422)))

(declare-fun c!13302 () Bool)

(assert (=> d!20983 (= c!13302 lt!39220)))

(assert (=> d!20983 (= lt!39220 (containsKey!141 (toList!739 lt!39028) (_1!1111 lt!38738)))))

(assert (=> d!20983 (= (contains!749 lt!39028 (_1!1111 lt!38738)) lt!39218)))

(declare-fun b!83372 () Bool)

(declare-fun lt!39217 () Unit!2426)

(assert (=> b!83372 (= e!54422 lt!39217)))

(assert (=> b!83372 (= lt!39217 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39028) (_1!1111 lt!38738)))))

(assert (=> b!83372 (isDefined!91 (getValueByKey!137 (toList!739 lt!39028) (_1!1111 lt!38738)))))

(declare-fun b!83373 () Bool)

(declare-fun Unit!2443 () Unit!2426)

(assert (=> b!83373 (= e!54422 Unit!2443)))

(declare-fun b!83374 () Bool)

(assert (=> b!83374 (= e!54423 (isDefined!91 (getValueByKey!137 (toList!739 lt!39028) (_1!1111 lt!38738))))))

(assert (= (and d!20983 c!13302) b!83372))

(assert (= (and d!20983 (not c!13302)) b!83373))

(assert (= (and d!20983 (not res!43139)) b!83374))

(declare-fun m!86405 () Bool)

(assert (=> d!20983 m!86405))

(declare-fun m!86407 () Bool)

(assert (=> b!83372 m!86407))

(assert (=> b!83372 m!85905))

(assert (=> b!83372 m!85905))

(declare-fun m!86409 () Bool)

(assert (=> b!83372 m!86409))

(assert (=> b!83374 m!85905))

(assert (=> b!83374 m!85905))

(assert (=> b!83374 m!86409))

(assert (=> d!20871 d!20983))

(declare-fun b!83377 () Bool)

(declare-fun e!54425 () Option!143)

(assert (=> b!83377 (= e!54425 (getValueByKey!137 (t!5214 lt!39027) (_1!1111 lt!38738)))))

(declare-fun d!20985 () Bool)

(declare-fun c!13303 () Bool)

(assert (=> d!20985 (= c!13303 (and ((_ is Cons!1519) lt!39027) (= (_1!1111 (h!2109 lt!39027)) (_1!1111 lt!38738))))))

(declare-fun e!54424 () Option!143)

(assert (=> d!20985 (= (getValueByKey!137 lt!39027 (_1!1111 lt!38738)) e!54424)))

(declare-fun b!83375 () Bool)

(assert (=> b!83375 (= e!54424 (Some!142 (_2!1111 (h!2109 lt!39027))))))

(declare-fun b!83378 () Bool)

(assert (=> b!83378 (= e!54425 None!141)))

(declare-fun b!83376 () Bool)

(assert (=> b!83376 (= e!54424 e!54425)))

(declare-fun c!13304 () Bool)

(assert (=> b!83376 (= c!13304 (and ((_ is Cons!1519) lt!39027) (not (= (_1!1111 (h!2109 lt!39027)) (_1!1111 lt!38738)))))))

(assert (= (and d!20985 c!13303) b!83375))

(assert (= (and d!20985 (not c!13303)) b!83376))

(assert (= (and b!83376 c!13304) b!83377))

(assert (= (and b!83376 (not c!13304)) b!83378))

(declare-fun m!86411 () Bool)

(assert (=> b!83377 m!86411))

(assert (=> d!20871 d!20985))

(declare-fun d!20987 () Bool)

(assert (=> d!20987 (= (getValueByKey!137 lt!39027 (_1!1111 lt!38738)) (Some!142 (_2!1111 lt!38738)))))

(declare-fun lt!39221 () Unit!2426)

(assert (=> d!20987 (= lt!39221 (choose!497 lt!39027 (_1!1111 lt!38738) (_2!1111 lt!38738)))))

(declare-fun e!54426 () Bool)

(assert (=> d!20987 e!54426))

(declare-fun res!43140 () Bool)

(assert (=> d!20987 (=> (not res!43140) (not e!54426))))

(assert (=> d!20987 (= res!43140 (isStrictlySorted!292 lt!39027))))

(assert (=> d!20987 (= (lemmaContainsTupThenGetReturnValue!57 lt!39027 (_1!1111 lt!38738) (_2!1111 lt!38738)) lt!39221)))

(declare-fun b!83379 () Bool)

(declare-fun res!43141 () Bool)

(assert (=> b!83379 (=> (not res!43141) (not e!54426))))

(assert (=> b!83379 (= res!43141 (containsKey!141 lt!39027 (_1!1111 lt!38738)))))

(declare-fun b!83380 () Bool)

(assert (=> b!83380 (= e!54426 (contains!751 lt!39027 (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(assert (= (and d!20987 res!43140) b!83379))

(assert (= (and b!83379 res!43141) b!83380))

(assert (=> d!20987 m!85899))

(declare-fun m!86413 () Bool)

(assert (=> d!20987 m!86413))

(declare-fun m!86415 () Bool)

(assert (=> d!20987 m!86415))

(declare-fun m!86417 () Bool)

(assert (=> b!83379 m!86417))

(declare-fun m!86419 () Bool)

(assert (=> b!83380 m!86419))

(assert (=> d!20871 d!20987))

(declare-fun b!83381 () Bool)

(declare-fun e!54431 () List!1523)

(declare-fun call!7842 () List!1523)

(assert (=> b!83381 (= e!54431 call!7842)))

(declare-fun b!83382 () Bool)

(declare-fun e!54429 () Bool)

(declare-fun lt!39222 () List!1523)

(assert (=> b!83382 (= e!54429 (contains!751 lt!39222 (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(declare-fun c!13307 () Bool)

(declare-fun e!54428 () List!1523)

(declare-fun b!83383 () Bool)

(declare-fun c!13305 () Bool)

(assert (=> b!83383 (= e!54428 (ite c!13307 (t!5214 (toList!739 lt!38731)) (ite c!13305 (Cons!1519 (h!2109 (toList!739 lt!38731)) (t!5214 (toList!739 lt!38731))) Nil!1520)))))

(declare-fun d!20989 () Bool)

(assert (=> d!20989 e!54429))

(declare-fun res!43143 () Bool)

(assert (=> d!20989 (=> (not res!43143) (not e!54429))))

(assert (=> d!20989 (= res!43143 (isStrictlySorted!292 lt!39222))))

(declare-fun e!54430 () List!1523)

(assert (=> d!20989 (= lt!39222 e!54430)))

(declare-fun c!13306 () Bool)

(assert (=> d!20989 (= c!13306 (and ((_ is Cons!1519) (toList!739 lt!38731)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38731))) (_1!1111 lt!38738))))))

(assert (=> d!20989 (isStrictlySorted!292 (toList!739 lt!38731))))

(assert (=> d!20989 (= (insertStrictlySorted!60 (toList!739 lt!38731) (_1!1111 lt!38738) (_2!1111 lt!38738)) lt!39222)))

(declare-fun b!83384 () Bool)

(assert (=> b!83384 (= e!54428 (insertStrictlySorted!60 (t!5214 (toList!739 lt!38731)) (_1!1111 lt!38738) (_2!1111 lt!38738)))))

(declare-fun bm!7839 () Bool)

(declare-fun call!7844 () List!1523)

(assert (=> bm!7839 (= call!7842 call!7844)))

(declare-fun b!83385 () Bool)

(declare-fun e!54427 () List!1523)

(declare-fun call!7843 () List!1523)

(assert (=> b!83385 (= e!54427 call!7843)))

(declare-fun b!83386 () Bool)

(assert (=> b!83386 (= e!54430 e!54431)))

(assert (=> b!83386 (= c!13307 (and ((_ is Cons!1519) (toList!739 lt!38731)) (= (_1!1111 (h!2109 (toList!739 lt!38731))) (_1!1111 lt!38738))))))

(declare-fun b!83387 () Bool)

(declare-fun res!43142 () Bool)

(assert (=> b!83387 (=> (not res!43142) (not e!54429))))

(assert (=> b!83387 (= res!43142 (containsKey!141 lt!39222 (_1!1111 lt!38738)))))

(declare-fun bm!7840 () Bool)

(assert (=> bm!7840 (= call!7843 call!7842)))

(declare-fun b!83388 () Bool)

(assert (=> b!83388 (= e!54430 call!7844)))

(declare-fun b!83389 () Bool)

(assert (=> b!83389 (= e!54427 call!7843)))

(declare-fun b!83390 () Bool)

(assert (=> b!83390 (= c!13305 (and ((_ is Cons!1519) (toList!739 lt!38731)) (bvsgt (_1!1111 (h!2109 (toList!739 lt!38731))) (_1!1111 lt!38738))))))

(assert (=> b!83390 (= e!54431 e!54427)))

(declare-fun bm!7841 () Bool)

(assert (=> bm!7841 (= call!7844 ($colon$colon!70 e!54428 (ite c!13306 (h!2109 (toList!739 lt!38731)) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738)))))))

(declare-fun c!13308 () Bool)

(assert (=> bm!7841 (= c!13308 c!13306)))

(assert (= (and d!20989 c!13306) b!83388))

(assert (= (and d!20989 (not c!13306)) b!83386))

(assert (= (and b!83386 c!13307) b!83381))

(assert (= (and b!83386 (not c!13307)) b!83390))

(assert (= (and b!83390 c!13305) b!83385))

(assert (= (and b!83390 (not c!13305)) b!83389))

(assert (= (or b!83385 b!83389) bm!7840))

(assert (= (or b!83381 bm!7840) bm!7839))

(assert (= (or b!83388 bm!7839) bm!7841))

(assert (= (and bm!7841 c!13308) b!83384))

(assert (= (and bm!7841 (not c!13308)) b!83383))

(assert (= (and d!20989 res!43143) b!83387))

(assert (= (and b!83387 res!43142) b!83382))

(declare-fun m!86421 () Bool)

(assert (=> bm!7841 m!86421))

(declare-fun m!86423 () Bool)

(assert (=> b!83384 m!86423))

(declare-fun m!86425 () Bool)

(assert (=> d!20989 m!86425))

(declare-fun m!86427 () Bool)

(assert (=> d!20989 m!86427))

(declare-fun m!86429 () Bool)

(assert (=> b!83387 m!86429))

(declare-fun m!86431 () Bool)

(assert (=> b!83382 m!86431))

(assert (=> d!20871 d!20989))

(assert (=> bm!7728 d!20875))

(declare-fun b!83393 () Bool)

(declare-fun e!54433 () Option!143)

(assert (=> b!83393 (= e!54433 (getValueByKey!137 (t!5214 (toList!739 lt!39061)) (_1!1111 lt!38729)))))

(declare-fun d!20991 () Bool)

(declare-fun c!13309 () Bool)

(assert (=> d!20991 (= c!13309 (and ((_ is Cons!1519) (toList!739 lt!39061)) (= (_1!1111 (h!2109 (toList!739 lt!39061))) (_1!1111 lt!38729))))))

(declare-fun e!54432 () Option!143)

(assert (=> d!20991 (= (getValueByKey!137 (toList!739 lt!39061) (_1!1111 lt!38729)) e!54432)))

(declare-fun b!83391 () Bool)

(assert (=> b!83391 (= e!54432 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39061)))))))

(declare-fun b!83394 () Bool)

(assert (=> b!83394 (= e!54433 None!141)))

(declare-fun b!83392 () Bool)

(assert (=> b!83392 (= e!54432 e!54433)))

(declare-fun c!13310 () Bool)

(assert (=> b!83392 (= c!13310 (and ((_ is Cons!1519) (toList!739 lt!39061)) (not (= (_1!1111 (h!2109 (toList!739 lt!39061))) (_1!1111 lt!38729)))))))

(assert (= (and d!20991 c!13309) b!83391))

(assert (= (and d!20991 (not c!13309)) b!83392))

(assert (= (and b!83392 c!13310) b!83393))

(assert (= (and b!83392 (not c!13310)) b!83394))

(declare-fun m!86433 () Bool)

(assert (=> b!83393 m!86433))

(assert (=> b!83123 d!20991))

(declare-fun d!20993 () Bool)

(declare-fun lt!39223 () Bool)

(assert (=> d!20993 (= lt!39223 (select (content!87 (toList!739 lt!39077)) lt!38742))))

(declare-fun e!54434 () Bool)

(assert (=> d!20993 (= lt!39223 e!54434)))

(declare-fun res!43144 () Bool)

(assert (=> d!20993 (=> (not res!43144) (not e!54434))))

(assert (=> d!20993 (= res!43144 ((_ is Cons!1519) (toList!739 lt!39077)))))

(assert (=> d!20993 (= (contains!751 (toList!739 lt!39077) lt!38742) lt!39223)))

(declare-fun b!83395 () Bool)

(declare-fun e!54435 () Bool)

(assert (=> b!83395 (= e!54434 e!54435)))

(declare-fun res!43145 () Bool)

(assert (=> b!83395 (=> res!43145 e!54435)))

(assert (=> b!83395 (= res!43145 (= (h!2109 (toList!739 lt!39077)) lt!38742))))

(declare-fun b!83396 () Bool)

(assert (=> b!83396 (= e!54435 (contains!751 (t!5214 (toList!739 lt!39077)) lt!38742))))

(assert (= (and d!20993 res!43144) b!83395))

(assert (= (and b!83395 (not res!43145)) b!83396))

(declare-fun m!86435 () Bool)

(assert (=> d!20993 m!86435))

(declare-fun m!86437 () Bool)

(assert (=> d!20993 m!86437))

(declare-fun m!86439 () Bool)

(assert (=> b!83396 m!86439))

(assert (=> b!83130 d!20993))

(declare-fun b!83399 () Bool)

(declare-fun e!54437 () Option!143)

(assert (=> b!83399 (= e!54437 (getValueByKey!137 (t!5214 (toList!739 lt!39057)) (_1!1111 lt!38729)))))

(declare-fun d!20995 () Bool)

(declare-fun c!13311 () Bool)

(assert (=> d!20995 (= c!13311 (and ((_ is Cons!1519) (toList!739 lt!39057)) (= (_1!1111 (h!2109 (toList!739 lt!39057))) (_1!1111 lt!38729))))))

(declare-fun e!54436 () Option!143)

(assert (=> d!20995 (= (getValueByKey!137 (toList!739 lt!39057) (_1!1111 lt!38729)) e!54436)))

(declare-fun b!83397 () Bool)

(assert (=> b!83397 (= e!54436 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39057)))))))

(declare-fun b!83400 () Bool)

(assert (=> b!83400 (= e!54437 None!141)))

(declare-fun b!83398 () Bool)

(assert (=> b!83398 (= e!54436 e!54437)))

(declare-fun c!13312 () Bool)

(assert (=> b!83398 (= c!13312 (and ((_ is Cons!1519) (toList!739 lt!39057)) (not (= (_1!1111 (h!2109 (toList!739 lt!39057))) (_1!1111 lt!38729)))))))

(assert (= (and d!20995 c!13311) b!83397))

(assert (= (and d!20995 (not c!13311)) b!83398))

(assert (= (and b!83398 c!13312) b!83399))

(assert (= (and b!83398 (not c!13312)) b!83400))

(declare-fun m!86441 () Bool)

(assert (=> b!83399 m!86441))

(assert (=> b!83121 d!20995))

(declare-fun b!83409 () Bool)

(declare-fun e!54446 () Bool)

(declare-fun e!54444 () Bool)

(assert (=> b!83409 (= e!54446 e!54444)))

(declare-fun c!13315 () Bool)

(assert (=> b!83409 (= c!13315 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83410 () Bool)

(declare-fun e!54445 () Bool)

(declare-fun call!7847 () Bool)

(assert (=> b!83410 (= e!54445 call!7847)))

(declare-fun b!83411 () Bool)

(assert (=> b!83411 (= e!54444 e!54445)))

(declare-fun lt!39231 () (_ BitVec 64))

(assert (=> b!83411 (= lt!39231 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39232 () Unit!2426)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3991 (_ BitVec 64) (_ BitVec 32)) Unit!2426)

(assert (=> b!83411 (= lt!39232 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3983 newMap!16) lt!39231 #b00000000000000000000000000000000))))

(assert (=> b!83411 (arrayContainsKey!0 (_keys!3983 newMap!16) lt!39231 #b00000000000000000000000000000000)))

(declare-fun lt!39230 () Unit!2426)

(assert (=> b!83411 (= lt!39230 lt!39232)))

(declare-fun res!43150 () Bool)

(assert (=> b!83411 (= res!43150 (= (seekEntryOrOpen!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) (_keys!3983 newMap!16) (mask!6333 newMap!16)) (Found!245 #b00000000000000000000000000000000)))))

(assert (=> b!83411 (=> (not res!43150) (not e!54445))))

(declare-fun d!20997 () Bool)

(declare-fun res!43151 () Bool)

(assert (=> d!20997 (=> res!43151 e!54446)))

(assert (=> d!20997 (= res!43151 (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(assert (=> d!20997 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3983 newMap!16) (mask!6333 newMap!16)) e!54446)))

(declare-fun b!83412 () Bool)

(assert (=> b!83412 (= e!54444 call!7847)))

(declare-fun bm!7844 () Bool)

(assert (=> bm!7844 (= call!7847 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(assert (= (and d!20997 (not res!43151)) b!83409))

(assert (= (and b!83409 c!13315) b!83411))

(assert (= (and b!83409 (not c!13315)) b!83412))

(assert (= (and b!83411 res!43150) b!83410))

(assert (= (or b!83410 b!83412) bm!7844))

(assert (=> b!83409 m!86045))

(assert (=> b!83409 m!86045))

(assert (=> b!83409 m!86051))

(assert (=> b!83411 m!86045))

(declare-fun m!86443 () Bool)

(assert (=> b!83411 m!86443))

(declare-fun m!86445 () Bool)

(assert (=> b!83411 m!86445))

(assert (=> b!83411 m!86045))

(declare-fun m!86447 () Bool)

(assert (=> b!83411 m!86447))

(declare-fun m!86449 () Bool)

(assert (=> bm!7844 m!86449))

(assert (=> b!82856 d!20997))

(declare-fun d!20999 () Bool)

(assert (=> d!20999 (= (+!107 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (+!107 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(assert (=> d!20999 true))

(declare-fun _$28!138 () Unit!2426)

(assert (=> d!20999 (= (choose!491 lt!38728 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))) _$28!138)))

(declare-fun bs!3521 () Bool)

(assert (= bs!3521 d!20999))

(assert (=> bs!3521 m!85999))

(assert (=> bs!3521 m!85999))

(assert (=> bs!3521 m!86001))

(assert (=> bs!3521 m!86003))

(assert (=> bs!3521 m!86003))

(assert (=> bs!3521 m!86005))

(assert (=> d!20887 d!20999))

(declare-fun d!21001 () Bool)

(declare-fun e!54447 () Bool)

(assert (=> d!21001 e!54447))

(declare-fun res!43152 () Bool)

(assert (=> d!21001 (=> (not res!43152) (not e!54447))))

(declare-fun lt!39234 () ListLongMap!1447)

(assert (=> d!21001 (= res!43152 (contains!749 lt!39234 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun lt!39233 () List!1523)

(assert (=> d!21001 (= lt!39234 (ListLongMap!1448 lt!39233))))

(declare-fun lt!39236 () Unit!2426)

(declare-fun lt!39235 () Unit!2426)

(assert (=> d!21001 (= lt!39236 lt!39235)))

(assert (=> d!21001 (= (getValueByKey!137 lt!39233 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21001 (= lt!39235 (lemmaContainsTupThenGetReturnValue!57 lt!39233 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21001 (= lt!39233 (insertStrictlySorted!60 (toList!739 lt!38728) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21001 (= (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) lt!39234)))

(declare-fun b!83413 () Bool)

(declare-fun res!43153 () Bool)

(assert (=> b!83413 (=> (not res!43153) (not e!54447))))

(assert (=> b!83413 (= res!43153 (= (getValueByKey!137 (toList!739 lt!39234) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!83414 () Bool)

(assert (=> b!83414 (= e!54447 (contains!751 (toList!739 lt!39234) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(assert (= (and d!21001 res!43152) b!83413))

(assert (= (and b!83413 res!43153) b!83414))

(declare-fun m!86451 () Bool)

(assert (=> d!21001 m!86451))

(declare-fun m!86453 () Bool)

(assert (=> d!21001 m!86453))

(declare-fun m!86455 () Bool)

(assert (=> d!21001 m!86455))

(declare-fun m!86457 () Bool)

(assert (=> d!21001 m!86457))

(declare-fun m!86459 () Bool)

(assert (=> b!83413 m!86459))

(declare-fun m!86461 () Bool)

(assert (=> b!83414 m!86461))

(assert (=> d!20887 d!21001))

(declare-fun d!21003 () Bool)

(declare-fun e!54448 () Bool)

(assert (=> d!21003 e!54448))

(declare-fun res!43154 () Bool)

(assert (=> d!21003 (=> (not res!43154) (not e!54448))))

(declare-fun lt!39238 () ListLongMap!1447)

(assert (=> d!21003 (= res!43154 (contains!749 lt!39238 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39237 () List!1523)

(assert (=> d!21003 (= lt!39238 (ListLongMap!1448 lt!39237))))

(declare-fun lt!39240 () Unit!2426)

(declare-fun lt!39239 () Unit!2426)

(assert (=> d!21003 (= lt!39240 lt!39239)))

(assert (=> d!21003 (= (getValueByKey!137 lt!39237 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21003 (= lt!39239 (lemmaContainsTupThenGetReturnValue!57 lt!39237 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21003 (= lt!39237 (insertStrictlySorted!60 (toList!739 lt!38728) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21003 (= (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39238)))

(declare-fun b!83415 () Bool)

(declare-fun res!43155 () Bool)

(assert (=> b!83415 (=> (not res!43155) (not e!54448))))

(assert (=> b!83415 (= res!43155 (= (getValueByKey!137 (toList!739 lt!39238) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!83416 () Bool)

(assert (=> b!83416 (= e!54448 (contains!751 (toList!739 lt!39238) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!21003 res!43154) b!83415))

(assert (= (and b!83415 res!43155) b!83416))

(declare-fun m!86463 () Bool)

(assert (=> d!21003 m!86463))

(declare-fun m!86465 () Bool)

(assert (=> d!21003 m!86465))

(declare-fun m!86467 () Bool)

(assert (=> d!21003 m!86467))

(declare-fun m!86469 () Bool)

(assert (=> d!21003 m!86469))

(declare-fun m!86471 () Bool)

(assert (=> b!83415 m!86471))

(declare-fun m!86473 () Bool)

(assert (=> b!83416 m!86473))

(assert (=> d!20887 d!21003))

(declare-fun d!21005 () Bool)

(declare-fun e!54449 () Bool)

(assert (=> d!21005 e!54449))

(declare-fun res!43156 () Bool)

(assert (=> d!21005 (=> (not res!43156) (not e!54449))))

(declare-fun lt!39242 () ListLongMap!1447)

(assert (=> d!21005 (= res!43156 (contains!749 lt!39242 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun lt!39241 () List!1523)

(assert (=> d!21005 (= lt!39242 (ListLongMap!1448 lt!39241))))

(declare-fun lt!39244 () Unit!2426)

(declare-fun lt!39243 () Unit!2426)

(assert (=> d!21005 (= lt!39244 lt!39243)))

(assert (=> d!21005 (= (getValueByKey!137 lt!39241 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21005 (= lt!39243 (lemmaContainsTupThenGetReturnValue!57 lt!39241 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21005 (= lt!39241 (insertStrictlySorted!60 (toList!739 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21005 (= (+!107 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) lt!39242)))

(declare-fun b!83417 () Bool)

(declare-fun res!43157 () Bool)

(assert (=> b!83417 (=> (not res!43157) (not e!54449))))

(assert (=> b!83417 (= res!43157 (= (getValueByKey!137 (toList!739 lt!39242) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!83418 () Bool)

(assert (=> b!83418 (= e!54449 (contains!751 (toList!739 lt!39242) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(assert (= (and d!21005 res!43156) b!83417))

(assert (= (and b!83417 res!43157) b!83418))

(declare-fun m!86475 () Bool)

(assert (=> d!21005 m!86475))

(declare-fun m!86477 () Bool)

(assert (=> d!21005 m!86477))

(declare-fun m!86479 () Bool)

(assert (=> d!21005 m!86479))

(declare-fun m!86481 () Bool)

(assert (=> d!21005 m!86481))

(declare-fun m!86483 () Bool)

(assert (=> b!83417 m!86483))

(declare-fun m!86485 () Bool)

(assert (=> b!83418 m!86485))

(assert (=> d!20887 d!21005))

(declare-fun d!21007 () Bool)

(declare-fun e!54450 () Bool)

(assert (=> d!21007 e!54450))

(declare-fun res!43158 () Bool)

(assert (=> d!21007 (=> (not res!43158) (not e!54450))))

(declare-fun lt!39246 () ListLongMap!1447)

(assert (=> d!21007 (= res!43158 (contains!749 lt!39246 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39245 () List!1523)

(assert (=> d!21007 (= lt!39246 (ListLongMap!1448 lt!39245))))

(declare-fun lt!39248 () Unit!2426)

(declare-fun lt!39247 () Unit!2426)

(assert (=> d!21007 (= lt!39248 lt!39247)))

(assert (=> d!21007 (= (getValueByKey!137 lt!39245 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21007 (= lt!39247 (lemmaContainsTupThenGetReturnValue!57 lt!39245 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21007 (= lt!39245 (insertStrictlySorted!60 (toList!739 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21007 (= (+!107 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39246)))

(declare-fun b!83419 () Bool)

(declare-fun res!43159 () Bool)

(assert (=> b!83419 (=> (not res!43159) (not e!54450))))

(assert (=> b!83419 (= res!43159 (= (getValueByKey!137 (toList!739 lt!39246) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!83420 () Bool)

(assert (=> b!83420 (= e!54450 (contains!751 (toList!739 lt!39246) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!21007 res!43158) b!83419))

(assert (= (and b!83419 res!43159) b!83420))

(declare-fun m!86487 () Bool)

(assert (=> d!21007 m!86487))

(declare-fun m!86489 () Bool)

(assert (=> d!21007 m!86489))

(declare-fun m!86491 () Bool)

(assert (=> d!21007 m!86491))

(declare-fun m!86493 () Bool)

(assert (=> d!21007 m!86493))

(declare-fun m!86495 () Bool)

(assert (=> b!83419 m!86495))

(declare-fun m!86497 () Bool)

(assert (=> b!83420 m!86497))

(assert (=> d!20887 d!21007))

(declare-fun d!21009 () Bool)

(declare-fun e!54451 () Bool)

(assert (=> d!21009 e!54451))

(declare-fun res!43160 () Bool)

(assert (=> d!21009 (=> (not res!43160) (not e!54451))))

(declare-fun lt!39250 () ListLongMap!1447)

(assert (=> d!21009 (= res!43160 (contains!749 lt!39250 (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun lt!39249 () List!1523)

(assert (=> d!21009 (= lt!39250 (ListLongMap!1448 lt!39249))))

(declare-fun lt!39252 () Unit!2426)

(declare-fun lt!39251 () Unit!2426)

(assert (=> d!21009 (= lt!39252 lt!39251)))

(assert (=> d!21009 (= (getValueByKey!137 lt!39249 (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) (Some!142 (_2!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> d!21009 (= lt!39251 (lemmaContainsTupThenGetReturnValue!57 lt!39249 (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (_2!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> d!21009 (= lt!39249 (insertStrictlySorted!60 (toList!739 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726))) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (_2!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> d!21009 (= (+!107 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726)) (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39250)))

(declare-fun b!83421 () Bool)

(declare-fun res!43161 () Bool)

(assert (=> b!83421 (=> (not res!43161) (not e!54451))))

(assert (=> b!83421 (= res!43161 (= (getValueByKey!137 (toList!739 lt!39250) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) (Some!142 (_2!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(declare-fun b!83422 () Bool)

(assert (=> b!83422 (= e!54451 (contains!751 (toList!739 lt!39250) (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (= (and d!21009 res!43160) b!83421))

(assert (= (and b!83421 res!43161) b!83422))

(declare-fun m!86499 () Bool)

(assert (=> d!21009 m!86499))

(declare-fun m!86501 () Bool)

(assert (=> d!21009 m!86501))

(declare-fun m!86503 () Bool)

(assert (=> d!21009 m!86503))

(declare-fun m!86505 () Bool)

(assert (=> d!21009 m!86505))

(declare-fun m!86507 () Bool)

(assert (=> b!83421 m!86507))

(declare-fun m!86509 () Bool)

(assert (=> b!83422 m!86509))

(assert (=> bm!7722 d!21009))

(declare-fun d!21011 () Bool)

(declare-fun e!54453 () Bool)

(assert (=> d!21011 e!54453))

(declare-fun res!43162 () Bool)

(assert (=> d!21011 (=> res!43162 e!54453)))

(declare-fun lt!39254 () Bool)

(assert (=> d!21011 (= res!43162 (not lt!39254))))

(declare-fun lt!39256 () Bool)

(assert (=> d!21011 (= lt!39254 lt!39256)))

(declare-fun lt!39255 () Unit!2426)

(declare-fun e!54452 () Unit!2426)

(assert (=> d!21011 (= lt!39255 e!54452)))

(declare-fun c!13316 () Bool)

(assert (=> d!21011 (= c!13316 lt!39256)))

(assert (=> d!21011 (= lt!39256 (containsKey!141 (toList!739 lt!39053) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!21011 (= (contains!749 lt!39053 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!39254)))

(declare-fun b!83423 () Bool)

(declare-fun lt!39253 () Unit!2426)

(assert (=> b!83423 (= e!54452 lt!39253)))

(assert (=> b!83423 (= lt!39253 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39053) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83423 (isDefined!91 (getValueByKey!137 (toList!739 lt!39053) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!83424 () Bool)

(declare-fun Unit!2444 () Unit!2426)

(assert (=> b!83424 (= e!54452 Unit!2444)))

(declare-fun b!83425 () Bool)

(assert (=> b!83425 (= e!54453 (isDefined!91 (getValueByKey!137 (toList!739 lt!39053) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!21011 c!13316) b!83423))

(assert (= (and d!21011 (not c!13316)) b!83424))

(assert (= (and d!21011 (not res!43162)) b!83425))

(assert (=> d!21011 m!85767))

(declare-fun m!86511 () Bool)

(assert (=> d!21011 m!86511))

(assert (=> b!83423 m!85767))

(declare-fun m!86513 () Bool)

(assert (=> b!83423 m!86513))

(assert (=> b!83423 m!85767))

(declare-fun m!86515 () Bool)

(assert (=> b!83423 m!86515))

(assert (=> b!83423 m!86515))

(declare-fun m!86517 () Bool)

(assert (=> b!83423 m!86517))

(assert (=> b!83425 m!85767))

(assert (=> b!83425 m!86515))

(assert (=> b!83425 m!86515))

(assert (=> b!83425 m!86517))

(assert (=> b!83120 d!21011))

(declare-fun d!21013 () Bool)

(assert (=> d!21013 (= (map!1183 (_2!1112 lt!39016)) (getCurrentListMap!425 (_keys!3983 (_2!1112 lt!39016)) (_values!2299 (_2!1112 lt!39016)) (mask!6333 (_2!1112 lt!39016)) (extraKeys!2159 (_2!1112 lt!39016)) (zeroValue!2210 (_2!1112 lt!39016)) (minValue!2210 (_2!1112 lt!39016)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1112 lt!39016))))))

(declare-fun bs!3522 () Bool)

(assert (= bs!3522 d!21013))

(declare-fun m!86519 () Bool)

(assert (=> bs!3522 m!86519))

(assert (=> bm!7797 d!21013))

(declare-fun d!21015 () Bool)

(declare-fun e!54456 () Bool)

(assert (=> d!21015 e!54456))

(declare-fun c!13319 () Bool)

(assert (=> d!21015 (= c!13319 (and (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!21015 true))

(declare-fun _$29!105 () Unit!2426)

(assert (=> d!21015 (= (choose!490 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))) _$29!105)))

(declare-fun b!83430 () Bool)

(assert (=> b!83430 (= e!54456 (arrayContainsKey!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!83431 () Bool)

(assert (=> b!83431 (= e!54456 (ite (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!21015 c!13319) b!83430))

(assert (= (and d!21015 (not c!13319)) b!83431))

(assert (=> b!83430 m!85563))

(assert (=> b!83430 m!85599))

(assert (=> d!20857 d!21015))

(assert (=> d!20857 d!20891))

(assert (=> d!20853 d!20859))

(declare-fun d!21017 () Bool)

(assert (=> d!21017 (arrayNoDuplicates!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) from!355 Nil!1519)))

(assert (=> d!21017 true))

(declare-fun _$71!111 () Unit!2426)

(assert (=> d!21017 (= (choose!39 (_keys!3983 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!111)))

(declare-fun bs!3523 () Bool)

(assert (= bs!3523 d!21017))

(assert (=> bs!3523 m!85595))

(assert (=> d!20853 d!21017))

(declare-fun d!21019 () Bool)

(declare-fun res!43163 () Bool)

(declare-fun e!54457 () Bool)

(assert (=> d!21019 (=> (not res!43163) (not e!54457))))

(assert (=> d!21019 (= res!43163 (simpleValid!57 (_2!1112 lt!39016)))))

(assert (=> d!21019 (= (valid!331 (_2!1112 lt!39016)) e!54457)))

(declare-fun b!83432 () Bool)

(declare-fun res!43164 () Bool)

(assert (=> b!83432 (=> (not res!43164) (not e!54457))))

(assert (=> b!83432 (= res!43164 (= (arrayCountValidKeys!0 (_keys!3983 (_2!1112 lt!39016)) #b00000000000000000000000000000000 (size!2144 (_keys!3983 (_2!1112 lt!39016)))) (_size!423 (_2!1112 lt!39016))))))

(declare-fun b!83433 () Bool)

(declare-fun res!43165 () Bool)

(assert (=> b!83433 (=> (not res!43165) (not e!54457))))

(assert (=> b!83433 (= res!43165 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3983 (_2!1112 lt!39016)) (mask!6333 (_2!1112 lt!39016))))))

(declare-fun b!83434 () Bool)

(assert (=> b!83434 (= e!54457 (arrayNoDuplicates!0 (_keys!3983 (_2!1112 lt!39016)) #b00000000000000000000000000000000 Nil!1519))))

(assert (= (and d!21019 res!43163) b!83432))

(assert (= (and b!83432 res!43164) b!83433))

(assert (= (and b!83433 res!43165) b!83434))

(declare-fun m!86521 () Bool)

(assert (=> d!21019 m!86521))

(declare-fun m!86523 () Bool)

(assert (=> b!83432 m!86523))

(declare-fun m!86525 () Bool)

(assert (=> b!83433 m!86525))

(declare-fun m!86527 () Bool)

(assert (=> b!83434 m!86527))

(assert (=> d!20867 d!21019))

(assert (=> d!20867 d!20849))

(declare-fun d!21021 () Bool)

(assert (=> d!21021 (= (apply!81 lt!38907 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1196 (getValueByKey!137 (toList!739 lt!38907) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3524 () Bool)

(assert (= bs!3524 d!21021))

(declare-fun m!86529 () Bool)

(assert (=> bs!3524 m!86529))

(assert (=> bs!3524 m!86529))

(declare-fun m!86531 () Bool)

(assert (=> bs!3524 m!86531))

(assert (=> b!82944 d!21021))

(declare-fun d!21023 () Bool)

(declare-fun lt!39259 () Bool)

(declare-fun content!88 (List!1522) (InoxSet (_ BitVec 64)))

(assert (=> d!21023 (= lt!39259 (select (content!88 Nil!1519) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun e!54463 () Bool)

(assert (=> d!21023 (= lt!39259 e!54463)))

(declare-fun res!43170 () Bool)

(assert (=> d!21023 (=> (not res!43170) (not e!54463))))

(assert (=> d!21023 (= res!43170 ((_ is Cons!1518) Nil!1519))))

(assert (=> d!21023 (= (contains!750 Nil!1519 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) lt!39259)))

(declare-fun b!83439 () Bool)

(declare-fun e!54462 () Bool)

(assert (=> b!83439 (= e!54463 e!54462)))

(declare-fun res!43171 () Bool)

(assert (=> b!83439 (=> res!43171 e!54462)))

(assert (=> b!83439 (= res!43171 (= (h!2108 Nil!1519) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun b!83440 () Bool)

(assert (=> b!83440 (= e!54462 (contains!750 (t!5213 Nil!1519) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (= (and d!21023 res!43170) b!83439))

(assert (= (and b!83439 (not res!43171)) b!83440))

(declare-fun m!86533 () Bool)

(assert (=> d!21023 m!86533))

(assert (=> d!21023 m!85563))

(declare-fun m!86535 () Bool)

(assert (=> d!21023 m!86535))

(assert (=> b!83440 m!85563))

(declare-fun m!86537 () Bool)

(assert (=> b!83440 m!86537))

(assert (=> b!82882 d!21023))

(declare-fun d!21025 () Bool)

(declare-fun e!54464 () Bool)

(assert (=> d!21025 e!54464))

(declare-fun res!43172 () Bool)

(assert (=> d!21025 (=> (not res!43172) (not e!54464))))

(declare-fun lt!39261 () ListLongMap!1447)

(assert (=> d!21025 (= res!43172 (contains!749 lt!39261 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!39260 () List!1523)

(assert (=> d!21025 (= lt!39261 (ListLongMap!1448 lt!39260))))

(declare-fun lt!39263 () Unit!2426)

(declare-fun lt!39262 () Unit!2426)

(assert (=> d!21025 (= lt!39263 lt!39262)))

(assert (=> d!21025 (= (getValueByKey!137 lt!39260 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21025 (= lt!39262 (lemmaContainsTupThenGetReturnValue!57 lt!39260 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21025 (= lt!39260 (insertStrictlySorted!60 (toList!739 call!7806) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21025 (= (+!107 call!7806 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!39261)))

(declare-fun b!83441 () Bool)

(declare-fun res!43173 () Bool)

(assert (=> b!83441 (=> (not res!43173) (not e!54464))))

(assert (=> b!83441 (= res!43173 (= (getValueByKey!137 (toList!739 lt!39261) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!83442 () Bool)

(assert (=> b!83442 (= e!54464 (contains!751 (toList!739 lt!39261) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!21025 res!43172) b!83441))

(assert (= (and b!83441 res!43173) b!83442))

(declare-fun m!86539 () Bool)

(assert (=> d!21025 m!86539))

(declare-fun m!86541 () Bool)

(assert (=> d!21025 m!86541))

(declare-fun m!86543 () Bool)

(assert (=> d!21025 m!86543))

(declare-fun m!86545 () Bool)

(assert (=> d!21025 m!86545))

(declare-fun m!86547 () Bool)

(assert (=> b!83441 m!86547))

(declare-fun m!86549 () Bool)

(assert (=> b!83442 m!86549))

(assert (=> b!83117 d!21025))

(declare-fun d!21027 () Bool)

(declare-fun c!13320 () Bool)

(assert (=> d!21027 (= c!13320 ((_ is ValueCellFull!920) (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!54465 () V!3017)

(assert (=> d!21027 (= (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!54465)))

(declare-fun b!83443 () Bool)

(assert (=> b!83443 (= e!54465 (get!1194 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!83444 () Bool)

(assert (=> b!83444 (= e!54465 (get!1195 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21027 c!13320) b!83443))

(assert (= (and d!21027 (not c!13320)) b!83444))

(assert (=> b!83443 m!85823))

(assert (=> b!83443 m!85587))

(declare-fun m!86551 () Bool)

(assert (=> b!83443 m!86551))

(assert (=> b!83444 m!85823))

(assert (=> b!83444 m!85587))

(declare-fun m!86553 () Bool)

(assert (=> b!83444 m!86553))

(assert (=> b!83117 d!21027))

(declare-fun d!21029 () Bool)

(declare-fun e!54466 () Bool)

(assert (=> d!21029 e!54466))

(declare-fun res!43174 () Bool)

(assert (=> d!21029 (=> (not res!43174) (not e!54466))))

(declare-fun lt!39265 () ListLongMap!1447)

(assert (=> d!21029 (= res!43174 (contains!749 lt!39265 (_1!1111 (tuple2!2201 lt!39051 lt!39052))))))

(declare-fun lt!39264 () List!1523)

(assert (=> d!21029 (= lt!39265 (ListLongMap!1448 lt!39264))))

(declare-fun lt!39267 () Unit!2426)

(declare-fun lt!39266 () Unit!2426)

(assert (=> d!21029 (= lt!39267 lt!39266)))

(assert (=> d!21029 (= (getValueByKey!137 lt!39264 (_1!1111 (tuple2!2201 lt!39051 lt!39052))) (Some!142 (_2!1111 (tuple2!2201 lt!39051 lt!39052))))))

(assert (=> d!21029 (= lt!39266 (lemmaContainsTupThenGetReturnValue!57 lt!39264 (_1!1111 (tuple2!2201 lt!39051 lt!39052)) (_2!1111 (tuple2!2201 lt!39051 lt!39052))))))

(assert (=> d!21029 (= lt!39264 (insertStrictlySorted!60 (toList!739 lt!39055) (_1!1111 (tuple2!2201 lt!39051 lt!39052)) (_2!1111 (tuple2!2201 lt!39051 lt!39052))))))

(assert (=> d!21029 (= (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052)) lt!39265)))

(declare-fun b!83445 () Bool)

(declare-fun res!43175 () Bool)

(assert (=> b!83445 (=> (not res!43175) (not e!54466))))

(assert (=> b!83445 (= res!43175 (= (getValueByKey!137 (toList!739 lt!39265) (_1!1111 (tuple2!2201 lt!39051 lt!39052))) (Some!142 (_2!1111 (tuple2!2201 lt!39051 lt!39052)))))))

(declare-fun b!83446 () Bool)

(assert (=> b!83446 (= e!54466 (contains!751 (toList!739 lt!39265) (tuple2!2201 lt!39051 lt!39052)))))

(assert (= (and d!21029 res!43174) b!83445))

(assert (= (and b!83445 res!43175) b!83446))

(declare-fun m!86555 () Bool)

(assert (=> d!21029 m!86555))

(declare-fun m!86557 () Bool)

(assert (=> d!21029 m!86557))

(declare-fun m!86559 () Bool)

(assert (=> d!21029 m!86559))

(declare-fun m!86561 () Bool)

(assert (=> d!21029 m!86561))

(declare-fun m!86563 () Bool)

(assert (=> b!83445 m!86563))

(declare-fun m!86565 () Bool)

(assert (=> b!83446 m!86565))

(assert (=> b!83117 d!21029))

(declare-fun d!21031 () Bool)

(declare-fun e!54468 () Bool)

(assert (=> d!21031 e!54468))

(declare-fun res!43176 () Bool)

(assert (=> d!21031 (=> res!43176 e!54468)))

(declare-fun lt!39269 () Bool)

(assert (=> d!21031 (= res!43176 (not lt!39269))))

(declare-fun lt!39271 () Bool)

(assert (=> d!21031 (= lt!39269 lt!39271)))

(declare-fun lt!39270 () Unit!2426)

(declare-fun e!54467 () Unit!2426)

(assert (=> d!21031 (= lt!39270 e!54467)))

(declare-fun c!13321 () Bool)

(assert (=> d!21031 (= c!13321 lt!39271)))

(assert (=> d!21031 (= lt!39271 (containsKey!141 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))) lt!39054))))

(assert (=> d!21031 (= (contains!749 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052)) lt!39054) lt!39269)))

(declare-fun b!83447 () Bool)

(declare-fun lt!39268 () Unit!2426)

(assert (=> b!83447 (= e!54467 lt!39268)))

(assert (=> b!83447 (= lt!39268 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))) lt!39054))))

(assert (=> b!83447 (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))) lt!39054))))

(declare-fun b!83448 () Bool)

(declare-fun Unit!2445 () Unit!2426)

(assert (=> b!83448 (= e!54467 Unit!2445)))

(declare-fun b!83449 () Bool)

(assert (=> b!83449 (= e!54468 (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))) lt!39054)))))

(assert (= (and d!21031 c!13321) b!83447))

(assert (= (and d!21031 (not c!13321)) b!83448))

(assert (= (and d!21031 (not res!43176)) b!83449))

(declare-fun m!86567 () Bool)

(assert (=> d!21031 m!86567))

(declare-fun m!86569 () Bool)

(assert (=> b!83447 m!86569))

(declare-fun m!86571 () Bool)

(assert (=> b!83447 m!86571))

(assert (=> b!83447 m!86571))

(declare-fun m!86573 () Bool)

(assert (=> b!83447 m!86573))

(assert (=> b!83449 m!86571))

(assert (=> b!83449 m!86571))

(assert (=> b!83449 m!86573))

(assert (=> b!83117 d!21031))

(declare-fun d!21033 () Bool)

(assert (=> d!21033 (not (contains!749 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052)) lt!39054))))

(declare-fun lt!39274 () Unit!2426)

(declare-fun choose!499 (ListLongMap!1447 (_ BitVec 64) V!3017 (_ BitVec 64)) Unit!2426)

(assert (=> d!21033 (= lt!39274 (choose!499 lt!39055 lt!39051 lt!39052 lt!39054))))

(declare-fun e!54471 () Bool)

(assert (=> d!21033 e!54471))

(declare-fun res!43179 () Bool)

(assert (=> d!21033 (=> (not res!43179) (not e!54471))))

(assert (=> d!21033 (= res!43179 (not (contains!749 lt!39055 lt!39054)))))

(assert (=> d!21033 (= (addStillNotContains!31 lt!39055 lt!39051 lt!39052 lt!39054) lt!39274)))

(declare-fun b!83453 () Bool)

(assert (=> b!83453 (= e!54471 (not (= lt!39051 lt!39054)))))

(assert (= (and d!21033 res!43179) b!83453))

(assert (=> d!21033 m!85929))

(assert (=> d!21033 m!85929))

(assert (=> d!21033 m!85931))

(declare-fun m!86575 () Bool)

(assert (=> d!21033 m!86575))

(declare-fun m!86577 () Bool)

(assert (=> d!21033 m!86577))

(assert (=> b!83117 d!21033))

(declare-fun b!83456 () Bool)

(declare-fun e!54473 () Option!143)

(assert (=> b!83456 (= e!54473 (getValueByKey!137 (t!5214 (toList!739 lt!39032)) (_1!1111 lt!38742)))))

(declare-fun d!21035 () Bool)

(declare-fun c!13322 () Bool)

(assert (=> d!21035 (= c!13322 (and ((_ is Cons!1519) (toList!739 lt!39032)) (= (_1!1111 (h!2109 (toList!739 lt!39032))) (_1!1111 lt!38742))))))

(declare-fun e!54472 () Option!143)

(assert (=> d!21035 (= (getValueByKey!137 (toList!739 lt!39032) (_1!1111 lt!38742)) e!54472)))

(declare-fun b!83454 () Bool)

(assert (=> b!83454 (= e!54472 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39032)))))))

(declare-fun b!83457 () Bool)

(assert (=> b!83457 (= e!54473 None!141)))

(declare-fun b!83455 () Bool)

(assert (=> b!83455 (= e!54472 e!54473)))

(declare-fun c!13323 () Bool)

(assert (=> b!83455 (= c!13323 (and ((_ is Cons!1519) (toList!739 lt!39032)) (not (= (_1!1111 (h!2109 (toList!739 lt!39032))) (_1!1111 lt!38742)))))))

(assert (= (and d!21035 c!13322) b!83454))

(assert (= (and d!21035 (not c!13322)) b!83455))

(assert (= (and b!83455 c!13323) b!83456))

(assert (= (and b!83455 (not c!13323)) b!83457))

(declare-fun m!86579 () Bool)

(assert (=> b!83456 m!86579))

(assert (=> b!83083 d!21035))

(declare-fun d!21037 () Bool)

(declare-fun e!54474 () Bool)

(assert (=> d!21037 e!54474))

(declare-fun res!43180 () Bool)

(assert (=> d!21037 (=> (not res!43180) (not e!54474))))

(declare-fun lt!39276 () ListLongMap!1447)

(assert (=> d!21037 (= res!43180 (contains!749 lt!39276 (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun lt!39275 () List!1523)

(assert (=> d!21037 (= lt!39276 (ListLongMap!1448 lt!39275))))

(declare-fun lt!39278 () Unit!2426)

(declare-fun lt!39277 () Unit!2426)

(assert (=> d!21037 (= lt!39278 lt!39277)))

(assert (=> d!21037 (= (getValueByKey!137 lt!39275 (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (Some!142 (_2!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (=> d!21037 (= lt!39277 (lemmaContainsTupThenGetReturnValue!57 lt!39275 (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (_2!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (=> d!21037 (= lt!39275 (insertStrictlySorted!60 (toList!739 e!54230) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (_2!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (=> d!21037 (= (+!107 e!54230 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!39276)))

(declare-fun b!83458 () Bool)

(declare-fun res!43181 () Bool)

(assert (=> b!83458 (=> (not res!43181) (not e!54474))))

(assert (=> b!83458 (= res!43181 (= (getValueByKey!137 (toList!739 lt!39276) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (Some!142 (_2!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(declare-fun b!83459 () Bool)

(assert (=> b!83459 (= e!54474 (contains!751 (toList!739 lt!39276) (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (= (and d!21037 res!43180) b!83458))

(assert (= (and b!83458 res!43181) b!83459))

(declare-fun m!86581 () Bool)

(assert (=> d!21037 m!86581))

(declare-fun m!86583 () Bool)

(assert (=> d!21037 m!86583))

(declare-fun m!86585 () Bool)

(assert (=> d!21037 m!86585))

(declare-fun m!86587 () Bool)

(assert (=> d!21037 m!86587))

(declare-fun m!86589 () Bool)

(assert (=> b!83458 m!86589))

(declare-fun m!86591 () Bool)

(assert (=> b!83459 m!86591))

(assert (=> bm!7795 d!21037))

(declare-fun d!21039 () Bool)

(assert (=> d!21039 (= (inRange!0 (ite c!13219 (ite c!13211 (index!3117 lt!39014) (ite c!13213 (index!3116 lt!38994) (index!3119 lt!38994))) (ite c!13215 (index!3117 lt!38996) (ite c!13214 (index!3116 lt!39017) (index!3119 lt!39017)))) (mask!6333 newMap!16)) (and (bvsge (ite c!13219 (ite c!13211 (index!3117 lt!39014) (ite c!13213 (index!3116 lt!38994) (index!3119 lt!38994))) (ite c!13215 (index!3117 lt!38996) (ite c!13214 (index!3116 lt!39017) (index!3119 lt!39017)))) #b00000000000000000000000000000000) (bvslt (ite c!13219 (ite c!13211 (index!3117 lt!39014) (ite c!13213 (index!3116 lt!38994) (index!3119 lt!38994))) (ite c!13215 (index!3117 lt!38996) (ite c!13214 (index!3116 lt!39017) (index!3119 lt!39017)))) (bvadd (mask!6333 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7784 d!21039))

(declare-fun d!21041 () Bool)

(assert (=> d!21041 (= (+!107 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (+!107 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(assert (=> d!21041 true))

(declare-fun _$28!139 () Unit!2426)

(assert (=> d!21041 (= (choose!491 lt!38741 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) _$28!139)))

(declare-fun bs!3525 () Bool)

(assert (= bs!3525 d!21041))

(assert (=> bs!3525 m!85965))

(assert (=> bs!3525 m!85965))

(assert (=> bs!3525 m!85967))

(assert (=> bs!3525 m!85969))

(assert (=> bs!3525 m!85969))

(assert (=> bs!3525 m!85971))

(assert (=> d!20881 d!21041))

(declare-fun d!21043 () Bool)

(declare-fun e!54475 () Bool)

(assert (=> d!21043 e!54475))

(declare-fun res!43182 () Bool)

(assert (=> d!21043 (=> (not res!43182) (not e!54475))))

(declare-fun lt!39280 () ListLongMap!1447)

(assert (=> d!21043 (= res!43182 (contains!749 lt!39280 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun lt!39279 () List!1523)

(assert (=> d!21043 (= lt!39280 (ListLongMap!1448 lt!39279))))

(declare-fun lt!39282 () Unit!2426)

(declare-fun lt!39281 () Unit!2426)

(assert (=> d!21043 (= lt!39282 lt!39281)))

(assert (=> d!21043 (= (getValueByKey!137 lt!39279 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21043 (= lt!39281 (lemmaContainsTupThenGetReturnValue!57 lt!39279 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21043 (= lt!39279 (insertStrictlySorted!60 (toList!739 lt!38741) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21043 (= (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) lt!39280)))

(declare-fun b!83460 () Bool)

(declare-fun res!43183 () Bool)

(assert (=> b!83460 (=> (not res!43183) (not e!54475))))

(assert (=> b!83460 (= res!43183 (= (getValueByKey!137 (toList!739 lt!39280) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!83461 () Bool)

(assert (=> b!83461 (= e!54475 (contains!751 (toList!739 lt!39280) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(assert (= (and d!21043 res!43182) b!83460))

(assert (= (and b!83460 res!43183) b!83461))

(declare-fun m!86593 () Bool)

(assert (=> d!21043 m!86593))

(declare-fun m!86595 () Bool)

(assert (=> d!21043 m!86595))

(declare-fun m!86597 () Bool)

(assert (=> d!21043 m!86597))

(declare-fun m!86599 () Bool)

(assert (=> d!21043 m!86599))

(declare-fun m!86601 () Bool)

(assert (=> b!83460 m!86601))

(declare-fun m!86603 () Bool)

(assert (=> b!83461 m!86603))

(assert (=> d!20881 d!21043))

(declare-fun d!21045 () Bool)

(declare-fun e!54476 () Bool)

(assert (=> d!21045 e!54476))

(declare-fun res!43184 () Bool)

(assert (=> d!21045 (=> (not res!43184) (not e!54476))))

(declare-fun lt!39284 () ListLongMap!1447)

(assert (=> d!21045 (= res!43184 (contains!749 lt!39284 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39283 () List!1523)

(assert (=> d!21045 (= lt!39284 (ListLongMap!1448 lt!39283))))

(declare-fun lt!39286 () Unit!2426)

(declare-fun lt!39285 () Unit!2426)

(assert (=> d!21045 (= lt!39286 lt!39285)))

(assert (=> d!21045 (= (getValueByKey!137 lt!39283 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21045 (= lt!39285 (lemmaContainsTupThenGetReturnValue!57 lt!39283 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21045 (= lt!39283 (insertStrictlySorted!60 (toList!739 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21045 (= (+!107 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39284)))

(declare-fun b!83462 () Bool)

(declare-fun res!43185 () Bool)

(assert (=> b!83462 (=> (not res!43185) (not e!54476))))

(assert (=> b!83462 (= res!43185 (= (getValueByKey!137 (toList!739 lt!39284) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!83463 () Bool)

(assert (=> b!83463 (= e!54476 (contains!751 (toList!739 lt!39284) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!21045 res!43184) b!83462))

(assert (= (and b!83462 res!43185) b!83463))

(declare-fun m!86605 () Bool)

(assert (=> d!21045 m!86605))

(declare-fun m!86607 () Bool)

(assert (=> d!21045 m!86607))

(declare-fun m!86609 () Bool)

(assert (=> d!21045 m!86609))

(declare-fun m!86611 () Bool)

(assert (=> d!21045 m!86611))

(declare-fun m!86613 () Bool)

(assert (=> b!83462 m!86613))

(declare-fun m!86615 () Bool)

(assert (=> b!83463 m!86615))

(assert (=> d!20881 d!21045))

(declare-fun d!21047 () Bool)

(declare-fun e!54477 () Bool)

(assert (=> d!21047 e!54477))

(declare-fun res!43186 () Bool)

(assert (=> d!21047 (=> (not res!43186) (not e!54477))))

(declare-fun lt!39288 () ListLongMap!1447)

(assert (=> d!21047 (= res!43186 (contains!749 lt!39288 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun lt!39287 () List!1523)

(assert (=> d!21047 (= lt!39288 (ListLongMap!1448 lt!39287))))

(declare-fun lt!39290 () Unit!2426)

(declare-fun lt!39289 () Unit!2426)

(assert (=> d!21047 (= lt!39290 lt!39289)))

(assert (=> d!21047 (= (getValueByKey!137 lt!39287 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21047 (= lt!39289 (lemmaContainsTupThenGetReturnValue!57 lt!39287 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21047 (= lt!39287 (insertStrictlySorted!60 (toList!739 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21047 (= (+!107 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) lt!39288)))

(declare-fun b!83464 () Bool)

(declare-fun res!43187 () Bool)

(assert (=> b!83464 (=> (not res!43187) (not e!54477))))

(assert (=> b!83464 (= res!43187 (= (getValueByKey!137 (toList!739 lt!39288) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!83465 () Bool)

(assert (=> b!83465 (= e!54477 (contains!751 (toList!739 lt!39288) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(assert (= (and d!21047 res!43186) b!83464))

(assert (= (and b!83464 res!43187) b!83465))

(declare-fun m!86617 () Bool)

(assert (=> d!21047 m!86617))

(declare-fun m!86619 () Bool)

(assert (=> d!21047 m!86619))

(declare-fun m!86621 () Bool)

(assert (=> d!21047 m!86621))

(declare-fun m!86623 () Bool)

(assert (=> d!21047 m!86623))

(declare-fun m!86625 () Bool)

(assert (=> b!83464 m!86625))

(declare-fun m!86627 () Bool)

(assert (=> b!83465 m!86627))

(assert (=> d!20881 d!21047))

(declare-fun d!21049 () Bool)

(declare-fun e!54478 () Bool)

(assert (=> d!21049 e!54478))

(declare-fun res!43188 () Bool)

(assert (=> d!21049 (=> (not res!43188) (not e!54478))))

(declare-fun lt!39292 () ListLongMap!1447)

(assert (=> d!21049 (= res!43188 (contains!749 lt!39292 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39291 () List!1523)

(assert (=> d!21049 (= lt!39292 (ListLongMap!1448 lt!39291))))

(declare-fun lt!39294 () Unit!2426)

(declare-fun lt!39293 () Unit!2426)

(assert (=> d!21049 (= lt!39294 lt!39293)))

(assert (=> d!21049 (= (getValueByKey!137 lt!39291 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21049 (= lt!39293 (lemmaContainsTupThenGetReturnValue!57 lt!39291 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21049 (= lt!39291 (insertStrictlySorted!60 (toList!739 lt!38741) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21049 (= (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39292)))

(declare-fun b!83466 () Bool)

(declare-fun res!43189 () Bool)

(assert (=> b!83466 (=> (not res!43189) (not e!54478))))

(assert (=> b!83466 (= res!43189 (= (getValueByKey!137 (toList!739 lt!39292) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!83467 () Bool)

(assert (=> b!83467 (= e!54478 (contains!751 (toList!739 lt!39292) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!21049 res!43188) b!83466))

(assert (= (and b!83466 res!43189) b!83467))

(declare-fun m!86629 () Bool)

(assert (=> d!21049 m!86629))

(declare-fun m!86631 () Bool)

(assert (=> d!21049 m!86631))

(declare-fun m!86633 () Bool)

(assert (=> d!21049 m!86633))

(declare-fun m!86635 () Bool)

(assert (=> d!21049 m!86635))

(declare-fun m!86637 () Bool)

(assert (=> b!83466 m!86637))

(declare-fun m!86639 () Bool)

(assert (=> b!83467 m!86639))

(assert (=> d!20881 d!21049))

(declare-fun d!21051 () Bool)

(declare-fun e!54480 () Bool)

(assert (=> d!21051 e!54480))

(declare-fun res!43190 () Bool)

(assert (=> d!21051 (=> res!43190 e!54480)))

(declare-fun lt!39296 () Bool)

(assert (=> d!21051 (= res!43190 (not lt!39296))))

(declare-fun lt!39298 () Bool)

(assert (=> d!21051 (= lt!39296 lt!39298)))

(declare-fun lt!39297 () Unit!2426)

(declare-fun e!54479 () Unit!2426)

(assert (=> d!21051 (= lt!39297 e!54479)))

(declare-fun c!13324 () Bool)

(assert (=> d!21051 (= c!13324 lt!39298)))

(assert (=> d!21051 (= lt!39298 (containsKey!141 (toList!739 call!7797) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> d!21051 (= (contains!749 call!7797 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) lt!39296)))

(declare-fun b!83468 () Bool)

(declare-fun lt!39295 () Unit!2426)

(assert (=> b!83468 (= e!54479 lt!39295)))

(assert (=> b!83468 (= lt!39295 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 call!7797) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> b!83468 (isDefined!91 (getValueByKey!137 (toList!739 call!7797) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun b!83469 () Bool)

(declare-fun Unit!2446 () Unit!2426)

(assert (=> b!83469 (= e!54479 Unit!2446)))

(declare-fun b!83470 () Bool)

(assert (=> b!83470 (= e!54480 (isDefined!91 (getValueByKey!137 (toList!739 call!7797) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(assert (= (and d!21051 c!13324) b!83468))

(assert (= (and d!21051 (not c!13324)) b!83469))

(assert (= (and d!21051 (not res!43190)) b!83470))

(assert (=> d!21051 m!85563))

(declare-fun m!86641 () Bool)

(assert (=> d!21051 m!86641))

(assert (=> b!83468 m!85563))

(declare-fun m!86643 () Bool)

(assert (=> b!83468 m!86643))

(assert (=> b!83468 m!85563))

(declare-fun m!86645 () Bool)

(assert (=> b!83468 m!86645))

(assert (=> b!83468 m!86645))

(declare-fun m!86647 () Bool)

(assert (=> b!83468 m!86647))

(assert (=> b!83470 m!85563))

(assert (=> b!83470 m!86645))

(assert (=> b!83470 m!86645))

(assert (=> b!83470 m!86647))

(assert (=> b!83043 d!21051))

(declare-fun d!21053 () Bool)

(assert (=> d!21053 (= (apply!81 lt!38907 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1196 (getValueByKey!137 (toList!739 lt!38907) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3526 () Bool)

(assert (= bs!3526 d!21053))

(assert (=> bs!3526 m!85767))

(declare-fun m!86649 () Bool)

(assert (=> bs!3526 m!86649))

(assert (=> bs!3526 m!86649))

(declare-fun m!86651 () Bool)

(assert (=> bs!3526 m!86651))

(assert (=> b!82929 d!21053))

(assert (=> b!82929 d!21027))

(assert (=> b!82884 d!20919))

(declare-fun d!21055 () Bool)

(declare-fun e!54482 () Bool)

(assert (=> d!21055 e!54482))

(declare-fun res!43191 () Bool)

(assert (=> d!21055 (=> res!43191 e!54482)))

(declare-fun lt!39300 () Bool)

(assert (=> d!21055 (= res!43191 (not lt!39300))))

(declare-fun lt!39302 () Bool)

(assert (=> d!21055 (= lt!39300 lt!39302)))

(declare-fun lt!39301 () Unit!2426)

(declare-fun e!54481 () Unit!2426)

(assert (=> d!21055 (= lt!39301 e!54481)))

(declare-fun c!13325 () Bool)

(assert (=> d!21055 (= c!13325 lt!39302)))

(assert (=> d!21055 (= lt!39302 (containsKey!141 (toList!739 lt!39072) (_1!1111 lt!38738)))))

(assert (=> d!21055 (= (contains!749 lt!39072 (_1!1111 lt!38738)) lt!39300)))

(declare-fun b!83471 () Bool)

(declare-fun lt!39299 () Unit!2426)

(assert (=> b!83471 (= e!54481 lt!39299)))

(assert (=> b!83471 (= lt!39299 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39072) (_1!1111 lt!38738)))))

(assert (=> b!83471 (isDefined!91 (getValueByKey!137 (toList!739 lt!39072) (_1!1111 lt!38738)))))

(declare-fun b!83472 () Bool)

(declare-fun Unit!2447 () Unit!2426)

(assert (=> b!83472 (= e!54481 Unit!2447)))

(declare-fun b!83473 () Bool)

(assert (=> b!83473 (= e!54482 (isDefined!91 (getValueByKey!137 (toList!739 lt!39072) (_1!1111 lt!38738))))))

(assert (= (and d!21055 c!13325) b!83471))

(assert (= (and d!21055 (not c!13325)) b!83472))

(assert (= (and d!21055 (not res!43191)) b!83473))

(declare-fun m!86653 () Bool)

(assert (=> d!21055 m!86653))

(declare-fun m!86655 () Bool)

(assert (=> b!83471 m!86655))

(assert (=> b!83471 m!85995))

(assert (=> b!83471 m!85995))

(declare-fun m!86657 () Bool)

(assert (=> b!83471 m!86657))

(assert (=> b!83473 m!85995))

(assert (=> b!83473 m!85995))

(assert (=> b!83473 m!86657))

(assert (=> d!20885 d!21055))

(declare-fun b!83476 () Bool)

(declare-fun e!54484 () Option!143)

(assert (=> b!83476 (= e!54484 (getValueByKey!137 (t!5214 lt!39071) (_1!1111 lt!38738)))))

(declare-fun d!21057 () Bool)

(declare-fun c!13326 () Bool)

(assert (=> d!21057 (= c!13326 (and ((_ is Cons!1519) lt!39071) (= (_1!1111 (h!2109 lt!39071)) (_1!1111 lt!38738))))))

(declare-fun e!54483 () Option!143)

(assert (=> d!21057 (= (getValueByKey!137 lt!39071 (_1!1111 lt!38738)) e!54483)))

(declare-fun b!83474 () Bool)

(assert (=> b!83474 (= e!54483 (Some!142 (_2!1111 (h!2109 lt!39071))))))

(declare-fun b!83477 () Bool)

(assert (=> b!83477 (= e!54484 None!141)))

(declare-fun b!83475 () Bool)

(assert (=> b!83475 (= e!54483 e!54484)))

(declare-fun c!13327 () Bool)

(assert (=> b!83475 (= c!13327 (and ((_ is Cons!1519) lt!39071) (not (= (_1!1111 (h!2109 lt!39071)) (_1!1111 lt!38738)))))))

(assert (= (and d!21057 c!13326) b!83474))

(assert (= (and d!21057 (not c!13326)) b!83475))

(assert (= (and b!83475 c!13327) b!83476))

(assert (= (and b!83475 (not c!13327)) b!83477))

(declare-fun m!86659 () Bool)

(assert (=> b!83476 m!86659))

(assert (=> d!20885 d!21057))

(declare-fun d!21059 () Bool)

(assert (=> d!21059 (= (getValueByKey!137 lt!39071 (_1!1111 lt!38738)) (Some!142 (_2!1111 lt!38738)))))

(declare-fun lt!39303 () Unit!2426)

(assert (=> d!21059 (= lt!39303 (choose!497 lt!39071 (_1!1111 lt!38738) (_2!1111 lt!38738)))))

(declare-fun e!54485 () Bool)

(assert (=> d!21059 e!54485))

(declare-fun res!43192 () Bool)

(assert (=> d!21059 (=> (not res!43192) (not e!54485))))

(assert (=> d!21059 (= res!43192 (isStrictlySorted!292 lt!39071))))

(assert (=> d!21059 (= (lemmaContainsTupThenGetReturnValue!57 lt!39071 (_1!1111 lt!38738) (_2!1111 lt!38738)) lt!39303)))

(declare-fun b!83478 () Bool)

(declare-fun res!43193 () Bool)

(assert (=> b!83478 (=> (not res!43193) (not e!54485))))

(assert (=> b!83478 (= res!43193 (containsKey!141 lt!39071 (_1!1111 lt!38738)))))

(declare-fun b!83479 () Bool)

(assert (=> b!83479 (= e!54485 (contains!751 lt!39071 (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(assert (= (and d!21059 res!43192) b!83478))

(assert (= (and b!83478 res!43193) b!83479))

(assert (=> d!21059 m!85989))

(declare-fun m!86661 () Bool)

(assert (=> d!21059 m!86661))

(declare-fun m!86663 () Bool)

(assert (=> d!21059 m!86663))

(declare-fun m!86665 () Bool)

(assert (=> b!83478 m!86665))

(declare-fun m!86667 () Bool)

(assert (=> b!83479 m!86667))

(assert (=> d!20885 d!21059))

(declare-fun b!83480 () Bool)

(declare-fun e!54490 () List!1523)

(declare-fun call!7848 () List!1523)

(assert (=> b!83480 (= e!54490 call!7848)))

(declare-fun b!83481 () Bool)

(declare-fun e!54488 () Bool)

(declare-fun lt!39304 () List!1523)

(assert (=> b!83481 (= e!54488 (contains!751 lt!39304 (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(declare-fun c!13328 () Bool)

(declare-fun c!13330 () Bool)

(declare-fun e!54487 () List!1523)

(declare-fun b!83482 () Bool)

(assert (=> b!83482 (= e!54487 (ite c!13330 (t!5214 (toList!739 lt!38741)) (ite c!13328 (Cons!1519 (h!2109 (toList!739 lt!38741)) (t!5214 (toList!739 lt!38741))) Nil!1520)))))

(declare-fun d!21061 () Bool)

(assert (=> d!21061 e!54488))

(declare-fun res!43195 () Bool)

(assert (=> d!21061 (=> (not res!43195) (not e!54488))))

(assert (=> d!21061 (= res!43195 (isStrictlySorted!292 lt!39304))))

(declare-fun e!54489 () List!1523)

(assert (=> d!21061 (= lt!39304 e!54489)))

(declare-fun c!13329 () Bool)

(assert (=> d!21061 (= c!13329 (and ((_ is Cons!1519) (toList!739 lt!38741)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38741))) (_1!1111 lt!38738))))))

(assert (=> d!21061 (isStrictlySorted!292 (toList!739 lt!38741))))

(assert (=> d!21061 (= (insertStrictlySorted!60 (toList!739 lt!38741) (_1!1111 lt!38738) (_2!1111 lt!38738)) lt!39304)))

(declare-fun b!83483 () Bool)

(assert (=> b!83483 (= e!54487 (insertStrictlySorted!60 (t!5214 (toList!739 lt!38741)) (_1!1111 lt!38738) (_2!1111 lt!38738)))))

(declare-fun bm!7845 () Bool)

(declare-fun call!7850 () List!1523)

(assert (=> bm!7845 (= call!7848 call!7850)))

(declare-fun b!83484 () Bool)

(declare-fun e!54486 () List!1523)

(declare-fun call!7849 () List!1523)

(assert (=> b!83484 (= e!54486 call!7849)))

(declare-fun b!83485 () Bool)

(assert (=> b!83485 (= e!54489 e!54490)))

(assert (=> b!83485 (= c!13330 (and ((_ is Cons!1519) (toList!739 lt!38741)) (= (_1!1111 (h!2109 (toList!739 lt!38741))) (_1!1111 lt!38738))))))

(declare-fun b!83486 () Bool)

(declare-fun res!43194 () Bool)

(assert (=> b!83486 (=> (not res!43194) (not e!54488))))

(assert (=> b!83486 (= res!43194 (containsKey!141 lt!39304 (_1!1111 lt!38738)))))

(declare-fun bm!7846 () Bool)

(assert (=> bm!7846 (= call!7849 call!7848)))

(declare-fun b!83487 () Bool)

(assert (=> b!83487 (= e!54489 call!7850)))

(declare-fun b!83488 () Bool)

(assert (=> b!83488 (= e!54486 call!7849)))

(declare-fun b!83489 () Bool)

(assert (=> b!83489 (= c!13328 (and ((_ is Cons!1519) (toList!739 lt!38741)) (bvsgt (_1!1111 (h!2109 (toList!739 lt!38741))) (_1!1111 lt!38738))))))

(assert (=> b!83489 (= e!54490 e!54486)))

(declare-fun bm!7847 () Bool)

(assert (=> bm!7847 (= call!7850 ($colon$colon!70 e!54487 (ite c!13329 (h!2109 (toList!739 lt!38741)) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738)))))))

(declare-fun c!13331 () Bool)

(assert (=> bm!7847 (= c!13331 c!13329)))

(assert (= (and d!21061 c!13329) b!83487))

(assert (= (and d!21061 (not c!13329)) b!83485))

(assert (= (and b!83485 c!13330) b!83480))

(assert (= (and b!83485 (not c!13330)) b!83489))

(assert (= (and b!83489 c!13328) b!83484))

(assert (= (and b!83489 (not c!13328)) b!83488))

(assert (= (or b!83484 b!83488) bm!7846))

(assert (= (or b!83480 bm!7846) bm!7845))

(assert (= (or b!83487 bm!7845) bm!7847))

(assert (= (and bm!7847 c!13331) b!83483))

(assert (= (and bm!7847 (not c!13331)) b!83482))

(assert (= (and d!21061 res!43195) b!83486))

(assert (= (and b!83486 res!43194) b!83481))

(declare-fun m!86669 () Bool)

(assert (=> bm!7847 m!86669))

(declare-fun m!86671 () Bool)

(assert (=> b!83483 m!86671))

(declare-fun m!86673 () Bool)

(assert (=> d!21061 m!86673))

(declare-fun m!86675 () Bool)

(assert (=> d!21061 m!86675))

(declare-fun m!86677 () Bool)

(assert (=> b!83486 m!86677))

(declare-fun m!86679 () Bool)

(assert (=> b!83481 m!86679))

(assert (=> d!20885 d!21061))

(declare-fun d!21063 () Bool)

(assert (=> d!21063 (= (apply!81 lt!39053 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1196 (getValueByKey!137 (toList!739 lt!39053) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3527 () Bool)

(assert (= bs!3527 d!21063))

(assert (=> bs!3527 m!85767))

(assert (=> bs!3527 m!86515))

(assert (=> bs!3527 m!86515))

(declare-fun m!86681 () Bool)

(assert (=> bs!3527 m!86681))

(assert (=> b!83118 d!21063))

(assert (=> b!83118 d!21027))

(declare-fun d!21065 () Bool)

(declare-fun e!54491 () Bool)

(assert (=> d!21065 e!54491))

(declare-fun res!43196 () Bool)

(assert (=> d!21065 (=> (not res!43196) (not e!54491))))

(declare-fun lt!39306 () ListLongMap!1447)

(assert (=> d!21065 (= res!43196 (contains!749 lt!39306 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun lt!39305 () List!1523)

(assert (=> d!21065 (= lt!39306 (ListLongMap!1448 lt!39305))))

(declare-fun lt!39308 () Unit!2426)

(declare-fun lt!39307 () Unit!2426)

(assert (=> d!21065 (= lt!39308 lt!39307)))

(assert (=> d!21065 (= (getValueByKey!137 lt!39305 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21065 (= lt!39307 (lemmaContainsTupThenGetReturnValue!57 lt!39305 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21065 (= lt!39305 (insertStrictlySorted!60 (toList!739 call!7794) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21065 (= (+!107 call!7794 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) lt!39306)))

(declare-fun b!83490 () Bool)

(declare-fun res!43197 () Bool)

(assert (=> b!83490 (=> (not res!43197) (not e!54491))))

(assert (=> b!83490 (= res!43197 (= (getValueByKey!137 (toList!739 lt!39306) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!83491 () Bool)

(assert (=> b!83491 (= e!54491 (contains!751 (toList!739 lt!39306) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(assert (= (and d!21065 res!43196) b!83490))

(assert (= (and b!83490 res!43197) b!83491))

(declare-fun m!86683 () Bool)

(assert (=> d!21065 m!86683))

(declare-fun m!86685 () Bool)

(assert (=> d!21065 m!86685))

(declare-fun m!86687 () Bool)

(assert (=> d!21065 m!86687))

(declare-fun m!86689 () Bool)

(assert (=> d!21065 m!86689))

(declare-fun m!86691 () Bool)

(assert (=> b!83490 m!86691))

(declare-fun m!86693 () Bool)

(assert (=> b!83491 m!86693))

(assert (=> b!83074 d!21065))

(declare-fun b!83503 () Bool)

(declare-fun e!54494 () Bool)

(assert (=> b!83503 (= e!54494 (and (bvsge (extraKeys!2159 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2159 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!423 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!83502 () Bool)

(declare-fun res!43208 () Bool)

(assert (=> b!83502 (=> (not res!43208) (not e!54494))))

(declare-fun size!2150 (LongMapFixedSize!748) (_ BitVec 32))

(assert (=> b!83502 (= res!43208 (= (size!2150 newMap!16) (bvadd (_size!423 newMap!16) (bvsdiv (bvadd (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!83500 () Bool)

(declare-fun res!43209 () Bool)

(assert (=> b!83500 (=> (not res!43209) (not e!54494))))

(assert (=> b!83500 (= res!43209 (and (= (size!2145 (_values!2299 newMap!16)) (bvadd (mask!6333 newMap!16) #b00000000000000000000000000000001)) (= (size!2144 (_keys!3983 newMap!16)) (size!2145 (_values!2299 newMap!16))) (bvsge (_size!423 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!423 newMap!16) (bvadd (mask!6333 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!83501 () Bool)

(declare-fun res!43207 () Bool)

(assert (=> b!83501 (=> (not res!43207) (not e!54494))))

(assert (=> b!83501 (= res!43207 (bvsge (size!2150 newMap!16) (_size!423 newMap!16)))))

(declare-fun d!21067 () Bool)

(declare-fun res!43206 () Bool)

(assert (=> d!21067 (=> (not res!43206) (not e!54494))))

(assert (=> d!21067 (= res!43206 (validMask!0 (mask!6333 newMap!16)))))

(assert (=> d!21067 (= (simpleValid!57 newMap!16) e!54494)))

(assert (= (and d!21067 res!43206) b!83500))

(assert (= (and b!83500 res!43209) b!83501))

(assert (= (and b!83501 res!43207) b!83502))

(assert (= (and b!83502 res!43208) b!83503))

(declare-fun m!86695 () Bool)

(assert (=> b!83502 m!86695))

(assert (=> b!83501 m!86695))

(assert (=> d!21067 m!86067))

(assert (=> d!20849 d!21067))

(declare-fun d!21069 () Bool)

(declare-fun e!54496 () Bool)

(assert (=> d!21069 e!54496))

(declare-fun res!43210 () Bool)

(assert (=> d!21069 (=> res!43210 e!54496)))

(declare-fun lt!39310 () Bool)

(assert (=> d!21069 (= res!43210 (not lt!39310))))

(declare-fun lt!39312 () Bool)

(assert (=> d!21069 (= lt!39310 lt!39312)))

(declare-fun lt!39311 () Unit!2426)

(declare-fun e!54495 () Unit!2426)

(assert (=> d!21069 (= lt!39311 e!54495)))

(declare-fun c!13332 () Bool)

(assert (=> d!21069 (= c!13332 lt!39312)))

(assert (=> d!21069 (= lt!39312 (containsKey!141 (toList!739 lt!39068) (_1!1111 lt!38729)))))

(assert (=> d!21069 (= (contains!749 lt!39068 (_1!1111 lt!38729)) lt!39310)))

(declare-fun b!83504 () Bool)

(declare-fun lt!39309 () Unit!2426)

(assert (=> b!83504 (= e!54495 lt!39309)))

(assert (=> b!83504 (= lt!39309 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39068) (_1!1111 lt!38729)))))

(assert (=> b!83504 (isDefined!91 (getValueByKey!137 (toList!739 lt!39068) (_1!1111 lt!38729)))))

(declare-fun b!83505 () Bool)

(declare-fun Unit!2448 () Unit!2426)

(assert (=> b!83505 (= e!54495 Unit!2448)))

(declare-fun b!83506 () Bool)

(assert (=> b!83506 (= e!54496 (isDefined!91 (getValueByKey!137 (toList!739 lt!39068) (_1!1111 lt!38729))))))

(assert (= (and d!21069 c!13332) b!83504))

(assert (= (and d!21069 (not c!13332)) b!83505))

(assert (= (and d!21069 (not res!43210)) b!83506))

(declare-fun m!86697 () Bool)

(assert (=> d!21069 m!86697))

(declare-fun m!86699 () Bool)

(assert (=> b!83504 m!86699))

(assert (=> b!83504 m!85983))

(assert (=> b!83504 m!85983))

(declare-fun m!86701 () Bool)

(assert (=> b!83504 m!86701))

(assert (=> b!83506 m!85983))

(assert (=> b!83506 m!85983))

(assert (=> b!83506 m!86701))

(assert (=> d!20883 d!21069))

(declare-fun b!83509 () Bool)

(declare-fun e!54498 () Option!143)

(assert (=> b!83509 (= e!54498 (getValueByKey!137 (t!5214 lt!39067) (_1!1111 lt!38729)))))

(declare-fun d!21071 () Bool)

(declare-fun c!13333 () Bool)

(assert (=> d!21071 (= c!13333 (and ((_ is Cons!1519) lt!39067) (= (_1!1111 (h!2109 lt!39067)) (_1!1111 lt!38729))))))

(declare-fun e!54497 () Option!143)

(assert (=> d!21071 (= (getValueByKey!137 lt!39067 (_1!1111 lt!38729)) e!54497)))

(declare-fun b!83507 () Bool)

(assert (=> b!83507 (= e!54497 (Some!142 (_2!1111 (h!2109 lt!39067))))))

(declare-fun b!83510 () Bool)

(assert (=> b!83510 (= e!54498 None!141)))

(declare-fun b!83508 () Bool)

(assert (=> b!83508 (= e!54497 e!54498)))

(declare-fun c!13334 () Bool)

(assert (=> b!83508 (= c!13334 (and ((_ is Cons!1519) lt!39067) (not (= (_1!1111 (h!2109 lt!39067)) (_1!1111 lt!38729)))))))

(assert (= (and d!21071 c!13333) b!83507))

(assert (= (and d!21071 (not c!13333)) b!83508))

(assert (= (and b!83508 c!13334) b!83509))

(assert (= (and b!83508 (not c!13334)) b!83510))

(declare-fun m!86703 () Bool)

(assert (=> b!83509 m!86703))

(assert (=> d!20883 d!21071))

(declare-fun d!21073 () Bool)

(assert (=> d!21073 (= (getValueByKey!137 lt!39067 (_1!1111 lt!38729)) (Some!142 (_2!1111 lt!38729)))))

(declare-fun lt!39313 () Unit!2426)

(assert (=> d!21073 (= lt!39313 (choose!497 lt!39067 (_1!1111 lt!38729) (_2!1111 lt!38729)))))

(declare-fun e!54499 () Bool)

(assert (=> d!21073 e!54499))

(declare-fun res!43211 () Bool)

(assert (=> d!21073 (=> (not res!43211) (not e!54499))))

(assert (=> d!21073 (= res!43211 (isStrictlySorted!292 lt!39067))))

(assert (=> d!21073 (= (lemmaContainsTupThenGetReturnValue!57 lt!39067 (_1!1111 lt!38729) (_2!1111 lt!38729)) lt!39313)))

(declare-fun b!83511 () Bool)

(declare-fun res!43212 () Bool)

(assert (=> b!83511 (=> (not res!43212) (not e!54499))))

(assert (=> b!83511 (= res!43212 (containsKey!141 lt!39067 (_1!1111 lt!38729)))))

(declare-fun b!83512 () Bool)

(assert (=> b!83512 (= e!54499 (contains!751 lt!39067 (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(assert (= (and d!21073 res!43211) b!83511))

(assert (= (and b!83511 res!43212) b!83512))

(assert (=> d!21073 m!85977))

(declare-fun m!86705 () Bool)

(assert (=> d!21073 m!86705))

(declare-fun m!86707 () Bool)

(assert (=> d!21073 m!86707))

(declare-fun m!86709 () Bool)

(assert (=> b!83511 m!86709))

(declare-fun m!86711 () Bool)

(assert (=> b!83512 m!86711))

(assert (=> d!20883 d!21073))

(declare-fun b!83513 () Bool)

(declare-fun e!54504 () List!1523)

(declare-fun call!7851 () List!1523)

(assert (=> b!83513 (= e!54504 call!7851)))

(declare-fun b!83514 () Bool)

(declare-fun e!54502 () Bool)

(declare-fun lt!39314 () List!1523)

(assert (=> b!83514 (= e!54502 (contains!751 lt!39314 (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun b!83515 () Bool)

(declare-fun e!54501 () List!1523)

(declare-fun c!13337 () Bool)

(declare-fun c!13335 () Bool)

(assert (=> b!83515 (= e!54501 (ite c!13337 (t!5214 (toList!739 (+!107 lt!38728 lt!38742))) (ite c!13335 (Cons!1519 (h!2109 (toList!739 (+!107 lt!38728 lt!38742))) (t!5214 (toList!739 (+!107 lt!38728 lt!38742)))) Nil!1520)))))

(declare-fun d!21075 () Bool)

(assert (=> d!21075 e!54502))

(declare-fun res!43214 () Bool)

(assert (=> d!21075 (=> (not res!43214) (not e!54502))))

(assert (=> d!21075 (= res!43214 (isStrictlySorted!292 lt!39314))))

(declare-fun e!54503 () List!1523)

(assert (=> d!21075 (= lt!39314 e!54503)))

(declare-fun c!13336 () Bool)

(assert (=> d!21075 (= c!13336 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38728 lt!38742))) (bvslt (_1!1111 (h!2109 (toList!739 (+!107 lt!38728 lt!38742)))) (_1!1111 lt!38729))))))

(assert (=> d!21075 (isStrictlySorted!292 (toList!739 (+!107 lt!38728 lt!38742)))))

(assert (=> d!21075 (= (insertStrictlySorted!60 (toList!739 (+!107 lt!38728 lt!38742)) (_1!1111 lt!38729) (_2!1111 lt!38729)) lt!39314)))

(declare-fun b!83516 () Bool)

(assert (=> b!83516 (= e!54501 (insertStrictlySorted!60 (t!5214 (toList!739 (+!107 lt!38728 lt!38742))) (_1!1111 lt!38729) (_2!1111 lt!38729)))))

(declare-fun bm!7848 () Bool)

(declare-fun call!7853 () List!1523)

(assert (=> bm!7848 (= call!7851 call!7853)))

(declare-fun b!83517 () Bool)

(declare-fun e!54500 () List!1523)

(declare-fun call!7852 () List!1523)

(assert (=> b!83517 (= e!54500 call!7852)))

(declare-fun b!83518 () Bool)

(assert (=> b!83518 (= e!54503 e!54504)))

(assert (=> b!83518 (= c!13337 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38728 lt!38742))) (= (_1!1111 (h!2109 (toList!739 (+!107 lt!38728 lt!38742)))) (_1!1111 lt!38729))))))

(declare-fun b!83519 () Bool)

(declare-fun res!43213 () Bool)

(assert (=> b!83519 (=> (not res!43213) (not e!54502))))

(assert (=> b!83519 (= res!43213 (containsKey!141 lt!39314 (_1!1111 lt!38729)))))

(declare-fun bm!7849 () Bool)

(assert (=> bm!7849 (= call!7852 call!7851)))

(declare-fun b!83520 () Bool)

(assert (=> b!83520 (= e!54503 call!7853)))

(declare-fun b!83521 () Bool)

(assert (=> b!83521 (= e!54500 call!7852)))

(declare-fun b!83522 () Bool)

(assert (=> b!83522 (= c!13335 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38728 lt!38742))) (bvsgt (_1!1111 (h!2109 (toList!739 (+!107 lt!38728 lt!38742)))) (_1!1111 lt!38729))))))

(assert (=> b!83522 (= e!54504 e!54500)))

(declare-fun bm!7850 () Bool)

(assert (=> bm!7850 (= call!7853 ($colon$colon!70 e!54501 (ite c!13336 (h!2109 (toList!739 (+!107 lt!38728 lt!38742))) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729)))))))

(declare-fun c!13338 () Bool)

(assert (=> bm!7850 (= c!13338 c!13336)))

(assert (= (and d!21075 c!13336) b!83520))

(assert (= (and d!21075 (not c!13336)) b!83518))

(assert (= (and b!83518 c!13337) b!83513))

(assert (= (and b!83518 (not c!13337)) b!83522))

(assert (= (and b!83522 c!13335) b!83517))

(assert (= (and b!83522 (not c!13335)) b!83521))

(assert (= (or b!83517 b!83521) bm!7849))

(assert (= (or b!83513 bm!7849) bm!7848))

(assert (= (or b!83520 bm!7848) bm!7850))

(assert (= (and bm!7850 c!13338) b!83516))

(assert (= (and bm!7850 (not c!13338)) b!83515))

(assert (= (and d!21075 res!43214) b!83519))

(assert (= (and b!83519 res!43213) b!83514))

(declare-fun m!86713 () Bool)

(assert (=> bm!7850 m!86713))

(declare-fun m!86715 () Bool)

(assert (=> b!83516 m!86715))

(declare-fun m!86717 () Bool)

(assert (=> d!21075 m!86717))

(declare-fun m!86719 () Bool)

(assert (=> d!21075 m!86719))

(declare-fun m!86721 () Bool)

(assert (=> b!83519 m!86721))

(declare-fun m!86723 () Bool)

(assert (=> b!83514 m!86723))

(assert (=> d!20883 d!21075))

(declare-fun b!83557 () Bool)

(declare-fun e!54524 () Unit!2426)

(declare-fun lt!39378 () Unit!2426)

(assert (=> b!83557 (= e!54524 lt!39378)))

(assert (=> b!83557 (= lt!39378 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!30 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39386 () SeekEntryResult!245)

(declare-fun call!7864 () SeekEntryResult!245)

(assert (=> b!83557 (= lt!39386 call!7864)))

(declare-fun c!13347 () Bool)

(assert (=> b!83557 (= c!13347 ((_ is MissingZero!245) lt!39386))))

(declare-fun e!54526 () Bool)

(assert (=> b!83557 e!54526))

(declare-fun b!83558 () Bool)

(declare-fun res!43240 () Bool)

(declare-fun e!54525 () Bool)

(assert (=> b!83558 (=> (not res!43240) (not e!54525))))

(declare-fun lt!39395 () tuple2!2202)

(assert (=> b!83558 (= res!43240 (valid!331 (_2!1112 lt!39395)))))

(declare-fun b!83559 () Bool)

(declare-fun e!54527 () Bool)

(assert (=> b!83559 (= e!54527 ((_ is Undefined!245) lt!39386))))

(declare-fun b!83560 () Bool)

(declare-fun e!54521 () Bool)

(declare-fun call!7862 () Bool)

(assert (=> b!83560 (= e!54521 (not call!7862))))

(declare-fun b!83561 () Bool)

(declare-fun res!43235 () Bool)

(declare-fun call!7865 () Bool)

(assert (=> b!83561 (= res!43235 call!7865)))

(declare-fun e!54523 () Bool)

(assert (=> b!83561 (=> (not res!43235) (not e!54523))))

(declare-fun b!83562 () Bool)

(declare-fun res!43237 () Bool)

(declare-fun e!54522 () Bool)

(assert (=> b!83562 (=> (not res!43237) (not e!54522))))

(declare-fun call!7863 () Bool)

(assert (=> b!83562 (= res!43237 call!7863)))

(assert (=> b!83562 (= e!54526 e!54522)))

(declare-fun b!83563 () Bool)

(declare-fun res!43234 () Bool)

(assert (=> b!83563 (=> (not res!43234) (not e!54522))))

(assert (=> b!83563 (= res!43234 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3116 lt!39386)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83564 () Bool)

(declare-fun Unit!2449 () Unit!2426)

(assert (=> b!83564 (= e!54524 Unit!2449)))

(declare-fun lt!39389 () Unit!2426)

(assert (=> b!83564 (= lt!39389 (lemmaInListMapThenSeekEntryOrOpenFindsIt!30 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39380 () SeekEntryResult!245)

(assert (=> b!83564 (= lt!39380 call!7864)))

(declare-fun res!43236 () Bool)

(assert (=> b!83564 (= res!43236 ((_ is Found!245) lt!39380))))

(assert (=> b!83564 (=> (not res!43236) (not e!54523))))

(assert (=> b!83564 e!54523))

(declare-fun lt!39381 () Unit!2426)

(assert (=> b!83564 (= lt!39381 lt!39389)))

(assert (=> b!83564 false))

(declare-fun bm!7859 () Bool)

(declare-fun c!13349 () Bool)

(assert (=> bm!7859 (= call!7865 (inRange!0 (ite c!13349 (index!3117 lt!39380) (ite c!13347 (index!3116 lt!39386) (index!3119 lt!39386))) (mask!6333 newMap!16)))))

(declare-fun b!83565 () Bool)

(assert (=> b!83565 (= e!54525 (= (map!1183 (_2!1112 lt!39395)) (+!107 (map!1183 newMap!16) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun bm!7860 () Bool)

(assert (=> bm!7860 (= call!7863 call!7865)))

(declare-fun b!83566 () Bool)

(declare-fun e!54528 () Unit!2426)

(declare-fun Unit!2450 () Unit!2426)

(assert (=> b!83566 (= e!54528 Unit!2450)))

(declare-fun lt!39392 () Unit!2426)

(declare-fun lemmaArrayContainsKeyThenInListMap!18 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) (_ BitVec 32) Int) Unit!2426)

(assert (=> b!83566 (= lt!39392 (lemmaArrayContainsKeyThenInListMap!18 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (=> b!83566 (contains!749 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))

(declare-fun lt!39375 () Unit!2426)

(assert (=> b!83566 (= lt!39375 lt!39392)))

(assert (=> b!83566 false))

(declare-fun bm!7861 () Bool)

(assert (=> bm!7861 (= call!7864 (seekEntryOrOpen!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(declare-fun b!83567 () Bool)

(declare-fun c!13348 () Bool)

(assert (=> b!83567 (= c!13348 ((_ is MissingVacant!245) lt!39386))))

(assert (=> b!83567 (= e!54526 e!54527)))

(declare-fun b!83568 () Bool)

(assert (=> b!83568 (= e!54522 (not call!7862))))

(declare-fun b!83569 () Bool)

(assert (=> b!83569 (= e!54523 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!39380)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun b!83571 () Bool)

(declare-fun res!43241 () Bool)

(assert (=> b!83571 (= res!43241 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3119 lt!39386)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83571 (=> (not res!43241) (not e!54521))))

(declare-fun d!21077 () Bool)

(assert (=> d!21077 e!54525))

(declare-fun res!43238 () Bool)

(assert (=> d!21077 (=> (not res!43238) (not e!54525))))

(assert (=> d!21077 (= res!43238 (_1!1112 lt!39395))))

(assert (=> d!21077 (= lt!39395 (tuple2!2203 true (LongMapFixedSize!749 (defaultEntry!2316 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (bvadd (_size!423 newMap!16) #b00000000000000000000000000000001) (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (_vacant!423 newMap!16))))))

(declare-fun lt!39388 () Unit!2426)

(declare-fun lt!39390 () Unit!2426)

(assert (=> d!21077 (= lt!39388 lt!39390)))

(declare-fun lt!39400 () array!3991)

(declare-fun lt!39401 () array!3993)

(assert (=> d!21077 (contains!749 (getCurrentListMap!425 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998))))))

(assert (=> d!21077 (= lt!39390 (lemmaValidKeyInArrayIsInListMap!89 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (defaultEntry!2316 newMap!16)))))

(assert (=> d!21077 (= lt!39401 (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))))))

(assert (=> d!21077 (= lt!39400 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))))))

(declare-fun lt!39399 () Unit!2426)

(declare-fun lt!39397 () Unit!2426)

(assert (=> d!21077 (= lt!39399 lt!39397)))

(declare-fun lt!39396 () array!3991)

(assert (=> d!21077 (= (arrayCountValidKeys!0 lt!39396 (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (bvadd (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3991 (_ BitVec 32)) Unit!2426)

(assert (=> d!21077 (= lt!39397 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!39396 (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998))))))

(assert (=> d!21077 (= lt!39396 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))))))

(declare-fun lt!39394 () Unit!2426)

(declare-fun lt!39403 () Unit!2426)

(assert (=> d!21077 (= lt!39394 lt!39403)))

(declare-fun lt!39382 () array!3991)

(assert (=> d!21077 (arrayContainsKey!0 lt!39382 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!21077 (= lt!39403 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!39382 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998))))))

(assert (=> d!21077 (= lt!39382 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))))))

(declare-fun lt!39385 () Unit!2426)

(declare-fun lt!39398 () Unit!2426)

(assert (=> d!21077 (= lt!39385 lt!39398)))

(assert (=> d!21077 (= (+!107 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (getCurrentListMap!425 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!18 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) (_ BitVec 64) V!3017 Int) Unit!2426)

(assert (=> d!21077 (= lt!39398 (lemmaAddValidKeyToArrayThenAddPairToListMap!18 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39376 () Unit!2426)

(declare-fun lt!39384 () Unit!2426)

(assert (=> d!21077 (= lt!39376 lt!39384)))

(assert (=> d!21077 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (mask!6333 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3991 (_ BitVec 32) (_ BitVec 32)) Unit!2426)

(assert (=> d!21077 (= lt!39384 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (mask!6333 newMap!16)))))

(declare-fun lt!39402 () Unit!2426)

(declare-fun lt!39393 () Unit!2426)

(assert (=> d!21077 (= lt!39402 lt!39393)))

(assert (=> d!21077 (= (arrayCountValidKeys!0 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3983 newMap!16) #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3991 (_ BitVec 32) (_ BitVec 64)) Unit!2426)

(assert (=> d!21077 (= lt!39393 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3983 newMap!16) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun lt!39377 () Unit!2426)

(declare-fun lt!39391 () Unit!2426)

(assert (=> d!21077 (= lt!39377 lt!39391)))

(declare-fun lt!39387 () List!1522)

(declare-fun lt!39383 () (_ BitVec 32))

(assert (=> d!21077 (arrayNoDuplicates!0 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) lt!39383 lt!39387)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3991 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1522) Unit!2426)

(assert (=> d!21077 (= lt!39391 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3983 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) lt!39383 lt!39387))))

(assert (=> d!21077 (= lt!39387 Nil!1519)))

(assert (=> d!21077 (= lt!39383 #b00000000000000000000000000000000)))

(declare-fun lt!39379 () Unit!2426)

(assert (=> d!21077 (= lt!39379 e!54528)))

(declare-fun c!13350 () Bool)

(assert (=> d!21077 (= c!13350 (arrayContainsKey!0 (_keys!3983 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!39404 () Unit!2426)

(assert (=> d!21077 (= lt!39404 e!54524)))

(assert (=> d!21077 (= c!13349 (contains!749 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> d!21077 (valid!331 newMap!16)))

(assert (=> d!21077 (= (updateHelperNewKey!30 newMap!16 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998))) lt!39395)))

(declare-fun b!83570 () Bool)

(assert (=> b!83570 (= e!54527 e!54521)))

(declare-fun res!43233 () Bool)

(assert (=> b!83570 (= res!43233 call!7863)))

(assert (=> b!83570 (=> (not res!43233) (not e!54521))))

(declare-fun b!83572 () Bool)

(declare-fun res!43239 () Bool)

(assert (=> b!83572 (=> (not res!43239) (not e!54525))))

(assert (=> b!83572 (= res!43239 (contains!749 (map!1183 (_2!1112 lt!39395)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun b!83573 () Bool)

(declare-fun Unit!2451 () Unit!2426)

(assert (=> b!83573 (= e!54528 Unit!2451)))

(declare-fun bm!7862 () Bool)

(assert (=> bm!7862 (= call!7862 (arrayContainsKey!0 (_keys!3983 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!21077 c!13349) b!83564))

(assert (= (and d!21077 (not c!13349)) b!83557))

(assert (= (and b!83564 res!43236) b!83561))

(assert (= (and b!83561 res!43235) b!83569))

(assert (= (and b!83557 c!13347) b!83562))

(assert (= (and b!83557 (not c!13347)) b!83567))

(assert (= (and b!83562 res!43237) b!83563))

(assert (= (and b!83563 res!43234) b!83568))

(assert (= (and b!83567 c!13348) b!83570))

(assert (= (and b!83567 (not c!13348)) b!83559))

(assert (= (and b!83570 res!43233) b!83571))

(assert (= (and b!83571 res!43241) b!83560))

(assert (= (or b!83562 b!83570) bm!7860))

(assert (= (or b!83568 b!83560) bm!7862))

(assert (= (or b!83561 bm!7860) bm!7859))

(assert (= (or b!83564 b!83557) bm!7861))

(assert (= (and d!21077 c!13350) b!83566))

(assert (= (and d!21077 (not c!13350)) b!83573))

(assert (= (and d!21077 res!43238) b!83558))

(assert (= (and b!83558 res!43240) b!83572))

(assert (= (and b!83572 res!43239) b!83565))

(declare-fun m!86725 () Bool)

(assert (=> b!83558 m!86725))

(declare-fun m!86727 () Bool)

(assert (=> b!83563 m!86727))

(assert (=> b!83564 m!85563))

(assert (=> b!83564 m!85877))

(assert (=> b!83557 m!85563))

(assert (=> b!83557 m!85875))

(assert (=> bm!7862 m!85563))

(assert (=> bm!7862 m!85885))

(declare-fun m!86729 () Bool)

(assert (=> b!83569 m!86729))

(assert (=> bm!7861 m!85563))

(assert (=> bm!7861 m!85879))

(declare-fun m!86731 () Bool)

(assert (=> b!83565 m!86731))

(assert (=> b!83565 m!85603))

(assert (=> b!83565 m!85603))

(declare-fun m!86733 () Bool)

(assert (=> b!83565 m!86733))

(assert (=> b!83572 m!86731))

(assert (=> b!83572 m!86731))

(assert (=> b!83572 m!85563))

(declare-fun m!86735 () Bool)

(assert (=> b!83572 m!86735))

(declare-fun m!86737 () Bool)

(assert (=> b!83571 m!86737))

(assert (=> b!83566 m!85563))

(declare-fun m!86739 () Bool)

(assert (=> b!83566 m!86739))

(assert (=> b!83566 m!85779))

(assert (=> b!83566 m!85779))

(assert (=> b!83566 m!85563))

(assert (=> b!83566 m!85893))

(declare-fun m!86741 () Bool)

(assert (=> d!21077 m!86741))

(declare-fun m!86743 () Bool)

(assert (=> d!21077 m!86743))

(declare-fun m!86745 () Bool)

(assert (=> d!21077 m!86745))

(assert (=> d!21077 m!85563))

(declare-fun m!86747 () Bool)

(assert (=> d!21077 m!86747))

(assert (=> d!21077 m!85563))

(declare-fun m!86749 () Bool)

(assert (=> d!21077 m!86749))

(assert (=> d!21077 m!85563))

(declare-fun m!86751 () Bool)

(assert (=> d!21077 m!86751))

(declare-fun m!86753 () Bool)

(assert (=> d!21077 m!86753))

(assert (=> d!21077 m!85757))

(declare-fun m!86755 () Bool)

(assert (=> d!21077 m!86755))

(assert (=> d!21077 m!85563))

(declare-fun m!86757 () Bool)

(assert (=> d!21077 m!86757))

(assert (=> d!21077 m!85779))

(declare-fun m!86759 () Bool)

(assert (=> d!21077 m!86759))

(assert (=> d!21077 m!85563))

(declare-fun m!86761 () Bool)

(assert (=> d!21077 m!86761))

(declare-fun m!86763 () Bool)

(assert (=> d!21077 m!86763))

(assert (=> d!21077 m!85563))

(assert (=> d!21077 m!85885))

(declare-fun m!86765 () Bool)

(assert (=> d!21077 m!86765))

(declare-fun m!86767 () Bool)

(assert (=> d!21077 m!86767))

(declare-fun m!86769 () Bool)

(assert (=> d!21077 m!86769))

(declare-fun m!86771 () Bool)

(assert (=> d!21077 m!86771))

(declare-fun m!86773 () Bool)

(assert (=> d!21077 m!86773))

(assert (=> d!21077 m!85591))

(assert (=> d!21077 m!85779))

(assert (=> d!21077 m!85779))

(assert (=> d!21077 m!85563))

(assert (=> d!21077 m!85893))

(assert (=> d!21077 m!86745))

(assert (=> d!21077 m!86769))

(declare-fun m!86775 () Bool)

(assert (=> d!21077 m!86775))

(assert (=> d!21077 m!85563))

(declare-fun m!86777 () Bool)

(assert (=> d!21077 m!86777))

(declare-fun m!86779 () Bool)

(assert (=> bm!7859 m!86779))

(assert (=> bm!7786 d!21077))

(declare-fun d!21079 () Bool)

(declare-fun e!54530 () Bool)

(assert (=> d!21079 e!54530))

(declare-fun res!43242 () Bool)

(assert (=> d!21079 (=> res!43242 e!54530)))

(declare-fun lt!39406 () Bool)

(assert (=> d!21079 (= res!43242 (not lt!39406))))

(declare-fun lt!39408 () Bool)

(assert (=> d!21079 (= lt!39406 lt!39408)))

(declare-fun lt!39407 () Unit!2426)

(declare-fun e!54529 () Unit!2426)

(assert (=> d!21079 (= lt!39407 e!54529)))

(declare-fun c!13351 () Bool)

(assert (=> d!21079 (= c!13351 lt!39408)))

(assert (=> d!21079 (= lt!39408 (containsKey!141 (toList!739 lt!38907) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21079 (= (contains!749 lt!38907 #b0000000000000000000000000000000000000000000000000000000000000000) lt!39406)))

(declare-fun b!83574 () Bool)

(declare-fun lt!39405 () Unit!2426)

(assert (=> b!83574 (= e!54529 lt!39405)))

(assert (=> b!83574 (= lt!39405 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!38907) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83574 (isDefined!91 (getValueByKey!137 (toList!739 lt!38907) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83575 () Bool)

(declare-fun Unit!2452 () Unit!2426)

(assert (=> b!83575 (= e!54529 Unit!2452)))

(declare-fun b!83576 () Bool)

(assert (=> b!83576 (= e!54530 (isDefined!91 (getValueByKey!137 (toList!739 lt!38907) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21079 c!13351) b!83574))

(assert (= (and d!21079 (not c!13351)) b!83575))

(assert (= (and d!21079 (not res!43242)) b!83576))

(declare-fun m!86781 () Bool)

(assert (=> d!21079 m!86781))

(declare-fun m!86783 () Bool)

(assert (=> b!83574 m!86783))

(declare-fun m!86785 () Bool)

(assert (=> b!83574 m!86785))

(assert (=> b!83574 m!86785))

(declare-fun m!86787 () Bool)

(assert (=> b!83574 m!86787))

(assert (=> b!83576 m!86785))

(assert (=> b!83576 m!86785))

(assert (=> b!83576 m!86787))

(assert (=> bm!7727 d!21079))

(declare-fun d!21081 () Bool)

(declare-fun res!43243 () Bool)

(declare-fun e!54531 () Bool)

(assert (=> d!21081 (=> (not res!43243) (not e!54531))))

(assert (=> d!21081 (= res!43243 (simpleValid!57 (v!2622 (underlying!282 thiss!992))))))

(assert (=> d!21081 (= (valid!331 (v!2622 (underlying!282 thiss!992))) e!54531)))

(declare-fun b!83577 () Bool)

(declare-fun res!43244 () Bool)

(assert (=> b!83577 (=> (not res!43244) (not e!54531))))

(assert (=> b!83577 (= res!43244 (= (arrayCountValidKeys!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000000 (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))) (_size!423 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun b!83578 () Bool)

(declare-fun res!43245 () Bool)

(assert (=> b!83578 (=> (not res!43245) (not e!54531))))

(assert (=> b!83578 (= res!43245 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun b!83579 () Bool)

(assert (=> b!83579 (= e!54531 (arrayNoDuplicates!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000000 Nil!1519))))

(assert (= (and d!21081 res!43243) b!83577))

(assert (= (and b!83577 res!43244) b!83578))

(assert (= (and b!83578 res!43245) b!83579))

(declare-fun m!86789 () Bool)

(assert (=> d!21081 m!86789))

(declare-fun m!86791 () Bool)

(assert (=> b!83577 m!86791))

(declare-fun m!86793 () Bool)

(assert (=> b!83578 m!86793))

(declare-fun m!86795 () Bool)

(assert (=> b!83579 m!86795))

(assert (=> d!20869 d!21081))

(declare-fun d!21083 () Bool)

(declare-fun res!43246 () Bool)

(declare-fun e!54532 () Bool)

(assert (=> d!21083 (=> res!43246 e!54532)))

(assert (=> d!21083 (= res!43246 (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> d!21083 (= (arrayContainsKey!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!54532)))

(declare-fun b!83580 () Bool)

(declare-fun e!54533 () Bool)

(assert (=> b!83580 (= e!54532 e!54533)))

(declare-fun res!43247 () Bool)

(assert (=> b!83580 (=> (not res!43247) (not e!54533))))

(assert (=> b!83580 (= res!43247 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!83581 () Bool)

(assert (=> b!83581 (= e!54533 (arrayContainsKey!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!21083 (not res!43246)) b!83580))

(assert (= (and b!83580 res!43247) b!83581))

(assert (=> d!21083 m!86165))

(assert (=> b!83581 m!85563))

(declare-fun m!86797 () Bool)

(assert (=> b!83581 m!86797))

(assert (=> b!82863 d!21083))

(declare-fun d!21085 () Bool)

(assert (=> d!21085 (isDefined!91 (getValueByKey!137 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun lt!39411 () Unit!2426)

(declare-fun choose!500 (List!1523 (_ BitVec 64)) Unit!2426)

(assert (=> d!21085 (= lt!39411 (choose!500 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun e!54536 () Bool)

(assert (=> d!21085 e!54536))

(declare-fun res!43250 () Bool)

(assert (=> d!21085 (=> (not res!43250) (not e!54536))))

(assert (=> d!21085 (= res!43250 (isStrictlySorted!292 (toList!739 lt!38733)))))

(assert (=> d!21085 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) lt!39411)))

(declare-fun b!83584 () Bool)

(assert (=> b!83584 (= e!54536 (containsKey!141 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (= (and d!21085 res!43250) b!83584))

(assert (=> d!21085 m!85563))

(assert (=> d!21085 m!85837))

(assert (=> d!21085 m!85837))

(assert (=> d!21085 m!85839))

(assert (=> d!21085 m!85563))

(declare-fun m!86799 () Bool)

(assert (=> d!21085 m!86799))

(declare-fun m!86801 () Bool)

(assert (=> d!21085 m!86801))

(assert (=> b!83584 m!85563))

(assert (=> b!83584 m!85833))

(assert (=> b!82954 d!21085))

(declare-fun d!21087 () Bool)

(declare-fun isEmpty!338 (Option!143) Bool)

(assert (=> d!21087 (= (isDefined!91 (getValueByKey!137 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))) (not (isEmpty!338 (getValueByKey!137 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))))

(declare-fun bs!3528 () Bool)

(assert (= bs!3528 d!21087))

(assert (=> bs!3528 m!85837))

(declare-fun m!86803 () Bool)

(assert (=> bs!3528 m!86803))

(assert (=> b!82954 d!21087))

(declare-fun b!83587 () Bool)

(declare-fun e!54538 () Option!143)

(assert (=> b!83587 (= e!54538 (getValueByKey!137 (t!5214 (toList!739 lt!38733)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun c!13352 () Bool)

(declare-fun d!21089 () Bool)

(assert (=> d!21089 (= c!13352 (and ((_ is Cons!1519) (toList!739 lt!38733)) (= (_1!1111 (h!2109 (toList!739 lt!38733))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(declare-fun e!54537 () Option!143)

(assert (=> d!21089 (= (getValueByKey!137 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) e!54537)))

(declare-fun b!83585 () Bool)

(assert (=> b!83585 (= e!54537 (Some!142 (_2!1111 (h!2109 (toList!739 lt!38733)))))))

(declare-fun b!83588 () Bool)

(assert (=> b!83588 (= e!54538 None!141)))

(declare-fun b!83586 () Bool)

(assert (=> b!83586 (= e!54537 e!54538)))

(declare-fun c!13353 () Bool)

(assert (=> b!83586 (= c!13353 (and ((_ is Cons!1519) (toList!739 lt!38733)) (not (= (_1!1111 (h!2109 (toList!739 lt!38733))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))))

(assert (= (and d!21089 c!13352) b!83585))

(assert (= (and d!21089 (not c!13352)) b!83586))

(assert (= (and b!83586 c!13353) b!83587))

(assert (= (and b!83586 (not c!13353)) b!83588))

(assert (=> b!83587 m!85563))

(declare-fun m!86805 () Bool)

(assert (=> b!83587 m!86805))

(assert (=> b!82954 d!21089))

(assert (=> d!20851 d!20855))

(declare-fun d!21091 () Bool)

(assert (=> d!21091 (not (arrayContainsKey!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!21091 true))

(declare-fun _$68!70 () Unit!2426)

(assert (=> d!21091 (= (choose!68 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519)) _$68!70)))

(declare-fun bs!3529 () Bool)

(assert (= bs!3529 d!21091))

(assert (=> bs!3529 m!85563))

(assert (=> bs!3529 m!85599))

(assert (=> d!20851 d!21091))

(declare-fun d!21093 () Bool)

(declare-fun res!43251 () Bool)

(declare-fun e!54539 () Bool)

(assert (=> d!21093 (=> res!43251 e!54539)))

(assert (=> d!21093 (= res!43251 (= (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> d!21093 (= (arrayContainsKey!0 (_keys!3983 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b00000000000000000000000000000000) e!54539)))

(declare-fun b!83589 () Bool)

(declare-fun e!54540 () Bool)

(assert (=> b!83589 (= e!54539 e!54540)))

(declare-fun res!43252 () Bool)

(assert (=> b!83589 (=> (not res!43252) (not e!54540))))

(assert (=> b!83589 (= res!43252 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83590 () Bool)

(assert (=> b!83590 (= e!54540 (arrayContainsKey!0 (_keys!3983 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!21093 (not res!43251)) b!83589))

(assert (= (and b!83589 res!43252) b!83590))

(assert (=> d!21093 m!86045))

(assert (=> b!83590 m!85563))

(declare-fun m!86807 () Bool)

(assert (=> b!83590 m!86807))

(assert (=> bm!7783 d!21093))

(declare-fun b!83593 () Bool)

(declare-fun e!54542 () Option!143)

(assert (=> b!83593 (= e!54542 (getValueByKey!137 (t!5214 (toList!739 lt!39028)) (_1!1111 lt!38738)))))

(declare-fun d!21095 () Bool)

(declare-fun c!13354 () Bool)

(assert (=> d!21095 (= c!13354 (and ((_ is Cons!1519) (toList!739 lt!39028)) (= (_1!1111 (h!2109 (toList!739 lt!39028))) (_1!1111 lt!38738))))))

(declare-fun e!54541 () Option!143)

(assert (=> d!21095 (= (getValueByKey!137 (toList!739 lt!39028) (_1!1111 lt!38738)) e!54541)))

(declare-fun b!83591 () Bool)

(assert (=> b!83591 (= e!54541 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39028)))))))

(declare-fun b!83594 () Bool)

(assert (=> b!83594 (= e!54542 None!141)))

(declare-fun b!83592 () Bool)

(assert (=> b!83592 (= e!54541 e!54542)))

(declare-fun c!13355 () Bool)

(assert (=> b!83592 (= c!13355 (and ((_ is Cons!1519) (toList!739 lt!39028)) (not (= (_1!1111 (h!2109 (toList!739 lt!39028))) (_1!1111 lt!38738)))))))

(assert (= (and d!21095 c!13354) b!83591))

(assert (= (and d!21095 (not c!13354)) b!83592))

(assert (= (and b!83592 c!13355) b!83593))

(assert (= (and b!83592 (not c!13355)) b!83594))

(declare-fun m!86809 () Bool)

(assert (=> b!83593 m!86809))

(assert (=> b!83081 d!21095))

(declare-fun d!21097 () Bool)

(declare-fun e!54545 () Bool)

(assert (=> d!21097 e!54545))

(declare-fun res!43255 () Bool)

(assert (=> d!21097 (=> (not res!43255) (not e!54545))))

(assert (=> d!21097 (= res!43255 (and (bvsge (index!3117 lt!38998) #b00000000000000000000000000000000) (bvslt (index!3117 lt!38998) (size!2144 (_keys!3983 newMap!16)))))))

(declare-fun lt!39414 () Unit!2426)

(declare-fun choose!501 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) Int) Unit!2426)

(assert (=> d!21097 (= lt!39414 (choose!501 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3117 lt!38998) (defaultEntry!2316 newMap!16)))))

(assert (=> d!21097 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21097 (= (lemmaValidKeyInArrayIsInListMap!89 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3117 lt!38998) (defaultEntry!2316 newMap!16)) lt!39414)))

(declare-fun b!83597 () Bool)

(assert (=> b!83597 (= e!54545 (contains!749 (getCurrentListMap!425 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998))))))

(assert (= (and d!21097 res!43255) b!83597))

(declare-fun m!86811 () Bool)

(assert (=> d!21097 m!86811))

(assert (=> d!21097 m!86067))

(declare-fun m!86813 () Bool)

(assert (=> b!83597 m!86813))

(assert (=> b!83597 m!85861))

(assert (=> b!83597 m!86813))

(assert (=> b!83597 m!85861))

(declare-fun m!86815 () Bool)

(assert (=> b!83597 m!86815))

(assert (=> b!83059 d!21097))

(declare-fun d!21099 () Bool)

(declare-fun e!54548 () Bool)

(assert (=> d!21099 e!54548))

(declare-fun res!43258 () Bool)

(assert (=> d!21099 (=> (not res!43258) (not e!54548))))

(assert (=> d!21099 (= res!43258 (and (bvsge (index!3117 lt!38998) #b00000000000000000000000000000000) (bvslt (index!3117 lt!38998) (size!2145 (_values!2299 newMap!16)))))))

(declare-fun lt!39417 () Unit!2426)

(declare-fun choose!502 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) (_ BitVec 64) V!3017 Int) Unit!2426)

(assert (=> d!21099 (= lt!39417 (choose!502 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3117 lt!38998) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 (defaultEntry!2316 newMap!16)))))

(assert (=> d!21099 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21099 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!30 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3117 lt!38998) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 (defaultEntry!2316 newMap!16)) lt!39417)))

(declare-fun b!83600 () Bool)

(assert (=> b!83600 (= e!54548 (= (+!107 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (getCurrentListMap!425 (_keys!3983 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))))

(assert (= (and d!21099 res!43258) b!83600))

(assert (=> d!21099 m!85563))

(declare-fun m!86817 () Bool)

(assert (=> d!21099 m!86817))

(assert (=> d!21099 m!86067))

(assert (=> b!83600 m!85779))

(assert (=> b!83600 m!85779))

(assert (=> b!83600 m!86759))

(assert (=> b!83600 m!85881))

(declare-fun m!86819 () Bool)

(assert (=> b!83600 m!86819))

(assert (=> b!83059 d!21099))

(declare-fun d!21101 () Bool)

(declare-fun e!54550 () Bool)

(assert (=> d!21101 e!54550))

(declare-fun res!43259 () Bool)

(assert (=> d!21101 (=> res!43259 e!54550)))

(declare-fun lt!39419 () Bool)

(assert (=> d!21101 (= res!43259 (not lt!39419))))

(declare-fun lt!39421 () Bool)

(assert (=> d!21101 (= lt!39419 lt!39421)))

(declare-fun lt!39420 () Unit!2426)

(declare-fun e!54549 () Unit!2426)

(assert (=> d!21101 (= lt!39420 e!54549)))

(declare-fun c!13356 () Bool)

(assert (=> d!21101 (= c!13356 lt!39421)))

(assert (=> d!21101 (= lt!39421 (containsKey!141 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> d!21101 (= (contains!749 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) lt!39419)))

(declare-fun b!83601 () Bool)

(declare-fun lt!39418 () Unit!2426)

(assert (=> b!83601 (= e!54549 lt!39418)))

(assert (=> b!83601 (= lt!39418 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> b!83601 (isDefined!91 (getValueByKey!137 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun b!83602 () Bool)

(declare-fun Unit!2453 () Unit!2426)

(assert (=> b!83602 (= e!54549 Unit!2453)))

(declare-fun b!83603 () Bool)

(assert (=> b!83603 (= e!54550 (isDefined!91 (getValueByKey!137 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(assert (= (and d!21101 c!13356) b!83601))

(assert (= (and d!21101 (not c!13356)) b!83602))

(assert (= (and d!21101 (not res!43259)) b!83603))

(assert (=> d!21101 m!85563))

(declare-fun m!86821 () Bool)

(assert (=> d!21101 m!86821))

(assert (=> b!83601 m!85563))

(declare-fun m!86823 () Bool)

(assert (=> b!83601 m!86823))

(assert (=> b!83601 m!85563))

(declare-fun m!86825 () Bool)

(assert (=> b!83601 m!86825))

(assert (=> b!83601 m!86825))

(declare-fun m!86827 () Bool)

(assert (=> b!83601 m!86827))

(assert (=> b!83603 m!85563))

(assert (=> b!83603 m!86825))

(assert (=> b!83603 m!86825))

(assert (=> b!83603 m!86827))

(assert (=> b!83059 d!21101))

(assert (=> b!83059 d!20977))

(declare-fun d!21103 () Bool)

(assert (=> d!21103 (= (get!1195 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!82848 d!21103))

(assert (=> b!83042 d!20977))

(declare-fun d!21105 () Bool)

(declare-fun e!54552 () Bool)

(assert (=> d!21105 e!54552))

(declare-fun res!43260 () Bool)

(assert (=> d!21105 (=> res!43260 e!54552)))

(declare-fun lt!39423 () Bool)

(assert (=> d!21105 (= res!43260 (not lt!39423))))

(declare-fun lt!39425 () Bool)

(assert (=> d!21105 (= lt!39423 lt!39425)))

(declare-fun lt!39424 () Unit!2426)

(declare-fun e!54551 () Unit!2426)

(assert (=> d!21105 (= lt!39424 e!54551)))

(declare-fun c!13357 () Bool)

(assert (=> d!21105 (= c!13357 lt!39425)))

(assert (=> d!21105 (= lt!39425 (containsKey!141 (toList!739 lt!38907) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!21105 (= (contains!749 lt!38907 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!39423)))

(declare-fun b!83604 () Bool)

(declare-fun lt!39422 () Unit!2426)

(assert (=> b!83604 (= e!54551 lt!39422)))

(assert (=> b!83604 (= lt!39422 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!38907) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83604 (isDefined!91 (getValueByKey!137 (toList!739 lt!38907) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!83605 () Bool)

(declare-fun Unit!2454 () Unit!2426)

(assert (=> b!83605 (= e!54551 Unit!2454)))

(declare-fun b!83606 () Bool)

(assert (=> b!83606 (= e!54552 (isDefined!91 (getValueByKey!137 (toList!739 lt!38907) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!21105 c!13357) b!83604))

(assert (= (and d!21105 (not c!13357)) b!83605))

(assert (= (and d!21105 (not res!43260)) b!83606))

(assert (=> d!21105 m!85767))

(declare-fun m!86829 () Bool)

(assert (=> d!21105 m!86829))

(assert (=> b!83604 m!85767))

(declare-fun m!86831 () Bool)

(assert (=> b!83604 m!86831))

(assert (=> b!83604 m!85767))

(assert (=> b!83604 m!86649))

(assert (=> b!83604 m!86649))

(declare-fun m!86833 () Bool)

(assert (=> b!83604 m!86833))

(assert (=> b!83606 m!85767))

(assert (=> b!83606 m!86649))

(assert (=> b!83606 m!86649))

(assert (=> b!83606 m!86833))

(assert (=> b!82942 d!21105))

(declare-fun d!21107 () Bool)

(declare-fun e!54554 () Bool)

(assert (=> d!21107 e!54554))

(declare-fun res!43261 () Bool)

(assert (=> d!21107 (=> res!43261 e!54554)))

(declare-fun lt!39427 () Bool)

(assert (=> d!21107 (= res!43261 (not lt!39427))))

(declare-fun lt!39429 () Bool)

(assert (=> d!21107 (= lt!39427 lt!39429)))

(declare-fun lt!39428 () Unit!2426)

(declare-fun e!54553 () Unit!2426)

(assert (=> d!21107 (= lt!39428 e!54553)))

(declare-fun c!13358 () Bool)

(assert (=> d!21107 (= c!13358 lt!39429)))

(assert (=> d!21107 (= lt!39429 (containsKey!141 (toList!739 lt!39061) (_1!1111 lt!38729)))))

(assert (=> d!21107 (= (contains!749 lt!39061 (_1!1111 lt!38729)) lt!39427)))

(declare-fun b!83607 () Bool)

(declare-fun lt!39426 () Unit!2426)

(assert (=> b!83607 (= e!54553 lt!39426)))

(assert (=> b!83607 (= lt!39426 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39061) (_1!1111 lt!38729)))))

(assert (=> b!83607 (isDefined!91 (getValueByKey!137 (toList!739 lt!39061) (_1!1111 lt!38729)))))

(declare-fun b!83608 () Bool)

(declare-fun Unit!2455 () Unit!2426)

(assert (=> b!83608 (= e!54553 Unit!2455)))

(declare-fun b!83609 () Bool)

(assert (=> b!83609 (= e!54554 (isDefined!91 (getValueByKey!137 (toList!739 lt!39061) (_1!1111 lt!38729))))))

(assert (= (and d!21107 c!13358) b!83607))

(assert (= (and d!21107 (not c!13358)) b!83608))

(assert (= (and d!21107 (not res!43261)) b!83609))

(declare-fun m!86835 () Bool)

(assert (=> d!21107 m!86835))

(declare-fun m!86837 () Bool)

(assert (=> b!83607 m!86837))

(assert (=> b!83607 m!85961))

(assert (=> b!83607 m!85961))

(declare-fun m!86839 () Bool)

(assert (=> b!83607 m!86839))

(assert (=> b!83609 m!85961))

(assert (=> b!83609 m!85961))

(assert (=> b!83609 m!86839))

(assert (=> d!20879 d!21107))

(declare-fun b!83612 () Bool)

(declare-fun e!54556 () Option!143)

(assert (=> b!83612 (= e!54556 (getValueByKey!137 (t!5214 lt!39060) (_1!1111 lt!38729)))))

(declare-fun d!21109 () Bool)

(declare-fun c!13359 () Bool)

(assert (=> d!21109 (= c!13359 (and ((_ is Cons!1519) lt!39060) (= (_1!1111 (h!2109 lt!39060)) (_1!1111 lt!38729))))))

(declare-fun e!54555 () Option!143)

(assert (=> d!21109 (= (getValueByKey!137 lt!39060 (_1!1111 lt!38729)) e!54555)))

(declare-fun b!83610 () Bool)

(assert (=> b!83610 (= e!54555 (Some!142 (_2!1111 (h!2109 lt!39060))))))

(declare-fun b!83613 () Bool)

(assert (=> b!83613 (= e!54556 None!141)))

(declare-fun b!83611 () Bool)

(assert (=> b!83611 (= e!54555 e!54556)))

(declare-fun c!13360 () Bool)

(assert (=> b!83611 (= c!13360 (and ((_ is Cons!1519) lt!39060) (not (= (_1!1111 (h!2109 lt!39060)) (_1!1111 lt!38729)))))))

(assert (= (and d!21109 c!13359) b!83610))

(assert (= (and d!21109 (not c!13359)) b!83611))

(assert (= (and b!83611 c!13360) b!83612))

(assert (= (and b!83611 (not c!13360)) b!83613))

(declare-fun m!86841 () Bool)

(assert (=> b!83612 m!86841))

(assert (=> d!20879 d!21109))

(declare-fun d!21111 () Bool)

(assert (=> d!21111 (= (getValueByKey!137 lt!39060 (_1!1111 lt!38729)) (Some!142 (_2!1111 lt!38729)))))

(declare-fun lt!39430 () Unit!2426)

(assert (=> d!21111 (= lt!39430 (choose!497 lt!39060 (_1!1111 lt!38729) (_2!1111 lt!38729)))))

(declare-fun e!54557 () Bool)

(assert (=> d!21111 e!54557))

(declare-fun res!43262 () Bool)

(assert (=> d!21111 (=> (not res!43262) (not e!54557))))

(assert (=> d!21111 (= res!43262 (isStrictlySorted!292 lt!39060))))

(assert (=> d!21111 (= (lemmaContainsTupThenGetReturnValue!57 lt!39060 (_1!1111 lt!38729) (_2!1111 lt!38729)) lt!39430)))

(declare-fun b!83614 () Bool)

(declare-fun res!43263 () Bool)

(assert (=> b!83614 (=> (not res!43263) (not e!54557))))

(assert (=> b!83614 (= res!43263 (containsKey!141 lt!39060 (_1!1111 lt!38729)))))

(declare-fun b!83615 () Bool)

(assert (=> b!83615 (= e!54557 (contains!751 lt!39060 (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(assert (= (and d!21111 res!43262) b!83614))

(assert (= (and b!83614 res!43263) b!83615))

(assert (=> d!21111 m!85955))

(declare-fun m!86843 () Bool)

(assert (=> d!21111 m!86843))

(declare-fun m!86845 () Bool)

(assert (=> d!21111 m!86845))

(declare-fun m!86847 () Bool)

(assert (=> b!83614 m!86847))

(declare-fun m!86849 () Bool)

(assert (=> b!83615 m!86849))

(assert (=> d!20879 d!21111))

(declare-fun b!83616 () Bool)

(declare-fun e!54562 () List!1523)

(declare-fun call!7866 () List!1523)

(assert (=> b!83616 (= e!54562 call!7866)))

(declare-fun b!83617 () Bool)

(declare-fun e!54560 () Bool)

(declare-fun lt!39431 () List!1523)

(assert (=> b!83617 (= e!54560 (contains!751 lt!39431 (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun c!13363 () Bool)

(declare-fun c!13361 () Bool)

(declare-fun e!54559 () List!1523)

(declare-fun b!83618 () Bool)

(assert (=> b!83618 (= e!54559 (ite c!13363 (t!5214 (toList!739 lt!38741)) (ite c!13361 (Cons!1519 (h!2109 (toList!739 lt!38741)) (t!5214 (toList!739 lt!38741))) Nil!1520)))))

(declare-fun d!21113 () Bool)

(assert (=> d!21113 e!54560))

(declare-fun res!43265 () Bool)

(assert (=> d!21113 (=> (not res!43265) (not e!54560))))

(assert (=> d!21113 (= res!43265 (isStrictlySorted!292 lt!39431))))

(declare-fun e!54561 () List!1523)

(assert (=> d!21113 (= lt!39431 e!54561)))

(declare-fun c!13362 () Bool)

(assert (=> d!21113 (= c!13362 (and ((_ is Cons!1519) (toList!739 lt!38741)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38741))) (_1!1111 lt!38729))))))

(assert (=> d!21113 (isStrictlySorted!292 (toList!739 lt!38741))))

(assert (=> d!21113 (= (insertStrictlySorted!60 (toList!739 lt!38741) (_1!1111 lt!38729) (_2!1111 lt!38729)) lt!39431)))

(declare-fun b!83619 () Bool)

(assert (=> b!83619 (= e!54559 (insertStrictlySorted!60 (t!5214 (toList!739 lt!38741)) (_1!1111 lt!38729) (_2!1111 lt!38729)))))

(declare-fun bm!7863 () Bool)

(declare-fun call!7868 () List!1523)

(assert (=> bm!7863 (= call!7866 call!7868)))

(declare-fun b!83620 () Bool)

(declare-fun e!54558 () List!1523)

(declare-fun call!7867 () List!1523)

(assert (=> b!83620 (= e!54558 call!7867)))

(declare-fun b!83621 () Bool)

(assert (=> b!83621 (= e!54561 e!54562)))

(assert (=> b!83621 (= c!13363 (and ((_ is Cons!1519) (toList!739 lt!38741)) (= (_1!1111 (h!2109 (toList!739 lt!38741))) (_1!1111 lt!38729))))))

(declare-fun b!83622 () Bool)

(declare-fun res!43264 () Bool)

(assert (=> b!83622 (=> (not res!43264) (not e!54560))))

(assert (=> b!83622 (= res!43264 (containsKey!141 lt!39431 (_1!1111 lt!38729)))))

(declare-fun bm!7864 () Bool)

(assert (=> bm!7864 (= call!7867 call!7866)))

(declare-fun b!83623 () Bool)

(assert (=> b!83623 (= e!54561 call!7868)))

(declare-fun b!83624 () Bool)

(assert (=> b!83624 (= e!54558 call!7867)))

(declare-fun b!83625 () Bool)

(assert (=> b!83625 (= c!13361 (and ((_ is Cons!1519) (toList!739 lt!38741)) (bvsgt (_1!1111 (h!2109 (toList!739 lt!38741))) (_1!1111 lt!38729))))))

(assert (=> b!83625 (= e!54562 e!54558)))

(declare-fun bm!7865 () Bool)

(assert (=> bm!7865 (= call!7868 ($colon$colon!70 e!54559 (ite c!13362 (h!2109 (toList!739 lt!38741)) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729)))))))

(declare-fun c!13364 () Bool)

(assert (=> bm!7865 (= c!13364 c!13362)))

(assert (= (and d!21113 c!13362) b!83623))

(assert (= (and d!21113 (not c!13362)) b!83621))

(assert (= (and b!83621 c!13363) b!83616))

(assert (= (and b!83621 (not c!13363)) b!83625))

(assert (= (and b!83625 c!13361) b!83620))

(assert (= (and b!83625 (not c!13361)) b!83624))

(assert (= (or b!83620 b!83624) bm!7864))

(assert (= (or b!83616 bm!7864) bm!7863))

(assert (= (or b!83623 bm!7863) bm!7865))

(assert (= (and bm!7865 c!13364) b!83619))

(assert (= (and bm!7865 (not c!13364)) b!83618))

(assert (= (and d!21113 res!43265) b!83622))

(assert (= (and b!83622 res!43264) b!83617))

(declare-fun m!86851 () Bool)

(assert (=> bm!7865 m!86851))

(declare-fun m!86853 () Bool)

(assert (=> b!83619 m!86853))

(declare-fun m!86855 () Bool)

(assert (=> d!21113 m!86855))

(assert (=> d!21113 m!86675))

(declare-fun m!86857 () Bool)

(assert (=> b!83622 m!86857))

(declare-fun m!86859 () Bool)

(assert (=> b!83617 m!86859))

(assert (=> d!20879 d!21113))

(declare-fun d!21115 () Bool)

(declare-fun e!54564 () Bool)

(assert (=> d!21115 e!54564))

(declare-fun res!43266 () Bool)

(assert (=> d!21115 (=> res!43266 e!54564)))

(declare-fun lt!39433 () Bool)

(assert (=> d!21115 (= res!43266 (not lt!39433))))

(declare-fun lt!39435 () Bool)

(assert (=> d!21115 (= lt!39433 lt!39435)))

(declare-fun lt!39434 () Unit!2426)

(declare-fun e!54563 () Unit!2426)

(assert (=> d!21115 (= lt!39434 e!54563)))

(declare-fun c!13365 () Bool)

(assert (=> d!21115 (= c!13365 lt!39435)))

(assert (=> d!21115 (= lt!39435 (containsKey!141 (toList!739 lt!39057) (_1!1111 lt!38729)))))

(assert (=> d!21115 (= (contains!749 lt!39057 (_1!1111 lt!38729)) lt!39433)))

(declare-fun b!83626 () Bool)

(declare-fun lt!39432 () Unit!2426)

(assert (=> b!83626 (= e!54563 lt!39432)))

(assert (=> b!83626 (= lt!39432 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39057) (_1!1111 lt!38729)))))

(assert (=> b!83626 (isDefined!91 (getValueByKey!137 (toList!739 lt!39057) (_1!1111 lt!38729)))))

(declare-fun b!83627 () Bool)

(declare-fun Unit!2456 () Unit!2426)

(assert (=> b!83627 (= e!54563 Unit!2456)))

(declare-fun b!83628 () Bool)

(assert (=> b!83628 (= e!54564 (isDefined!91 (getValueByKey!137 (toList!739 lt!39057) (_1!1111 lt!38729))))))

(assert (= (and d!21115 c!13365) b!83626))

(assert (= (and d!21115 (not c!13365)) b!83627))

(assert (= (and d!21115 (not res!43266)) b!83628))

(declare-fun m!86861 () Bool)

(assert (=> d!21115 m!86861))

(declare-fun m!86863 () Bool)

(assert (=> b!83626 m!86863))

(assert (=> b!83626 m!85949))

(assert (=> b!83626 m!85949))

(declare-fun m!86865 () Bool)

(assert (=> b!83626 m!86865))

(assert (=> b!83628 m!85949))

(assert (=> b!83628 m!85949))

(assert (=> b!83628 m!86865))

(assert (=> d!20877 d!21115))

(declare-fun b!83631 () Bool)

(declare-fun e!54566 () Option!143)

(assert (=> b!83631 (= e!54566 (getValueByKey!137 (t!5214 lt!39056) (_1!1111 lt!38729)))))

(declare-fun d!21117 () Bool)

(declare-fun c!13366 () Bool)

(assert (=> d!21117 (= c!13366 (and ((_ is Cons!1519) lt!39056) (= (_1!1111 (h!2109 lt!39056)) (_1!1111 lt!38729))))))

(declare-fun e!54565 () Option!143)

(assert (=> d!21117 (= (getValueByKey!137 lt!39056 (_1!1111 lt!38729)) e!54565)))

(declare-fun b!83629 () Bool)

(assert (=> b!83629 (= e!54565 (Some!142 (_2!1111 (h!2109 lt!39056))))))

(declare-fun b!83632 () Bool)

(assert (=> b!83632 (= e!54566 None!141)))

(declare-fun b!83630 () Bool)

(assert (=> b!83630 (= e!54565 e!54566)))

(declare-fun c!13367 () Bool)

(assert (=> b!83630 (= c!13367 (and ((_ is Cons!1519) lt!39056) (not (= (_1!1111 (h!2109 lt!39056)) (_1!1111 lt!38729)))))))

(assert (= (and d!21117 c!13366) b!83629))

(assert (= (and d!21117 (not c!13366)) b!83630))

(assert (= (and b!83630 c!13367) b!83631))

(assert (= (and b!83630 (not c!13367)) b!83632))

(declare-fun m!86867 () Bool)

(assert (=> b!83631 m!86867))

(assert (=> d!20877 d!21117))

(declare-fun d!21119 () Bool)

(assert (=> d!21119 (= (getValueByKey!137 lt!39056 (_1!1111 lt!38729)) (Some!142 (_2!1111 lt!38729)))))

(declare-fun lt!39436 () Unit!2426)

(assert (=> d!21119 (= lt!39436 (choose!497 lt!39056 (_1!1111 lt!38729) (_2!1111 lt!38729)))))

(declare-fun e!54567 () Bool)

(assert (=> d!21119 e!54567))

(declare-fun res!43267 () Bool)

(assert (=> d!21119 (=> (not res!43267) (not e!54567))))

(assert (=> d!21119 (= res!43267 (isStrictlySorted!292 lt!39056))))

(assert (=> d!21119 (= (lemmaContainsTupThenGetReturnValue!57 lt!39056 (_1!1111 lt!38729) (_2!1111 lt!38729)) lt!39436)))

(declare-fun b!83633 () Bool)

(declare-fun res!43268 () Bool)

(assert (=> b!83633 (=> (not res!43268) (not e!54567))))

(assert (=> b!83633 (= res!43268 (containsKey!141 lt!39056 (_1!1111 lt!38729)))))

(declare-fun b!83634 () Bool)

(assert (=> b!83634 (= e!54567 (contains!751 lt!39056 (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(assert (= (and d!21119 res!43267) b!83633))

(assert (= (and b!83633 res!43268) b!83634))

(assert (=> d!21119 m!85943))

(declare-fun m!86869 () Bool)

(assert (=> d!21119 m!86869))

(declare-fun m!86871 () Bool)

(assert (=> d!21119 m!86871))

(declare-fun m!86873 () Bool)

(assert (=> b!83633 m!86873))

(declare-fun m!86875 () Bool)

(assert (=> b!83634 m!86875))

(assert (=> d!20877 d!21119))

(declare-fun b!83635 () Bool)

(declare-fun e!54572 () List!1523)

(declare-fun call!7869 () List!1523)

(assert (=> b!83635 (= e!54572 call!7869)))

(declare-fun b!83636 () Bool)

(declare-fun e!54570 () Bool)

(declare-fun lt!39437 () List!1523)

(assert (=> b!83636 (= e!54570 (contains!751 lt!39437 (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun b!83637 () Bool)

(declare-fun c!13368 () Bool)

(declare-fun c!13370 () Bool)

(declare-fun e!54569 () List!1523)

(assert (=> b!83637 (= e!54569 (ite c!13370 (t!5214 (toList!739 lt!38728)) (ite c!13368 (Cons!1519 (h!2109 (toList!739 lt!38728)) (t!5214 (toList!739 lt!38728))) Nil!1520)))))

(declare-fun d!21121 () Bool)

(assert (=> d!21121 e!54570))

(declare-fun res!43270 () Bool)

(assert (=> d!21121 (=> (not res!43270) (not e!54570))))

(assert (=> d!21121 (= res!43270 (isStrictlySorted!292 lt!39437))))

(declare-fun e!54571 () List!1523)

(assert (=> d!21121 (= lt!39437 e!54571)))

(declare-fun c!13369 () Bool)

(assert (=> d!21121 (= c!13369 (and ((_ is Cons!1519) (toList!739 lt!38728)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38728))) (_1!1111 lt!38729))))))

(assert (=> d!21121 (isStrictlySorted!292 (toList!739 lt!38728))))

(assert (=> d!21121 (= (insertStrictlySorted!60 (toList!739 lt!38728) (_1!1111 lt!38729) (_2!1111 lt!38729)) lt!39437)))

(declare-fun b!83638 () Bool)

(assert (=> b!83638 (= e!54569 (insertStrictlySorted!60 (t!5214 (toList!739 lt!38728)) (_1!1111 lt!38729) (_2!1111 lt!38729)))))

(declare-fun bm!7866 () Bool)

(declare-fun call!7871 () List!1523)

(assert (=> bm!7866 (= call!7869 call!7871)))

(declare-fun b!83639 () Bool)

(declare-fun e!54568 () List!1523)

(declare-fun call!7870 () List!1523)

(assert (=> b!83639 (= e!54568 call!7870)))

(declare-fun b!83640 () Bool)

(assert (=> b!83640 (= e!54571 e!54572)))

(assert (=> b!83640 (= c!13370 (and ((_ is Cons!1519) (toList!739 lt!38728)) (= (_1!1111 (h!2109 (toList!739 lt!38728))) (_1!1111 lt!38729))))))

(declare-fun b!83641 () Bool)

(declare-fun res!43269 () Bool)

(assert (=> b!83641 (=> (not res!43269) (not e!54570))))

(assert (=> b!83641 (= res!43269 (containsKey!141 lt!39437 (_1!1111 lt!38729)))))

(declare-fun bm!7867 () Bool)

(assert (=> bm!7867 (= call!7870 call!7869)))

(declare-fun b!83642 () Bool)

(assert (=> b!83642 (= e!54571 call!7871)))

(declare-fun b!83643 () Bool)

(assert (=> b!83643 (= e!54568 call!7870)))

(declare-fun b!83644 () Bool)

(assert (=> b!83644 (= c!13368 (and ((_ is Cons!1519) (toList!739 lt!38728)) (bvsgt (_1!1111 (h!2109 (toList!739 lt!38728))) (_1!1111 lt!38729))))))

(assert (=> b!83644 (= e!54572 e!54568)))

(declare-fun bm!7868 () Bool)

(assert (=> bm!7868 (= call!7871 ($colon$colon!70 e!54569 (ite c!13369 (h!2109 (toList!739 lt!38728)) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729)))))))

(declare-fun c!13371 () Bool)

(assert (=> bm!7868 (= c!13371 c!13369)))

(assert (= (and d!21121 c!13369) b!83642))

(assert (= (and d!21121 (not c!13369)) b!83640))

(assert (= (and b!83640 c!13370) b!83635))

(assert (= (and b!83640 (not c!13370)) b!83644))

(assert (= (and b!83644 c!13368) b!83639))

(assert (= (and b!83644 (not c!13368)) b!83643))

(assert (= (or b!83639 b!83643) bm!7867))

(assert (= (or b!83635 bm!7867) bm!7866))

(assert (= (or b!83642 bm!7866) bm!7868))

(assert (= (and bm!7868 c!13371) b!83638))

(assert (= (and bm!7868 (not c!13371)) b!83637))

(assert (= (and d!21121 res!43270) b!83641))

(assert (= (and b!83641 res!43269) b!83636))

(declare-fun m!86877 () Bool)

(assert (=> bm!7868 m!86877))

(declare-fun m!86879 () Bool)

(assert (=> b!83638 m!86879))

(declare-fun m!86881 () Bool)

(assert (=> d!21121 m!86881))

(assert (=> d!21121 m!86321))

(declare-fun m!86883 () Bool)

(assert (=> b!83641 m!86883))

(declare-fun m!86885 () Bool)

(assert (=> b!83636 m!86885))

(assert (=> d!20877 d!21121))

(assert (=> b!82956 d!21087))

(assert (=> b!82956 d!21089))

(declare-fun d!21123 () Bool)

(assert (=> d!21123 (= (apply!81 lt!38907 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1196 (getValueByKey!137 (toList!739 lt!38907) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3530 () Bool)

(assert (= bs!3530 d!21123))

(assert (=> bs!3530 m!86785))

(assert (=> bs!3530 m!86785))

(declare-fun m!86887 () Bool)

(assert (=> bs!3530 m!86887))

(assert (=> b!82936 d!21123))

(declare-fun d!21125 () Bool)

(declare-fun e!54574 () Bool)

(assert (=> d!21125 e!54574))

(declare-fun res!43271 () Bool)

(assert (=> d!21125 (=> res!43271 e!54574)))

(declare-fun lt!39439 () Bool)

(assert (=> d!21125 (= res!43271 (not lt!39439))))

(declare-fun lt!39441 () Bool)

(assert (=> d!21125 (= lt!39439 lt!39441)))

(declare-fun lt!39440 () Unit!2426)

(declare-fun e!54573 () Unit!2426)

(assert (=> d!21125 (= lt!39440 e!54573)))

(declare-fun c!13372 () Bool)

(assert (=> d!21125 (= c!13372 lt!39441)))

(assert (=> d!21125 (= lt!39441 (containsKey!141 (toList!739 lt!38907) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21125 (= (contains!749 lt!38907 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39439)))

(declare-fun b!83645 () Bool)

(declare-fun lt!39438 () Unit!2426)

(assert (=> b!83645 (= e!54573 lt!39438)))

(assert (=> b!83645 (= lt!39438 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!38907) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83645 (isDefined!91 (getValueByKey!137 (toList!739 lt!38907) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83646 () Bool)

(declare-fun Unit!2457 () Unit!2426)

(assert (=> b!83646 (= e!54573 Unit!2457)))

(declare-fun b!83647 () Bool)

(assert (=> b!83647 (= e!54574 (isDefined!91 (getValueByKey!137 (toList!739 lt!38907) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21125 c!13372) b!83645))

(assert (= (and d!21125 (not c!13372)) b!83646))

(assert (= (and d!21125 (not res!43271)) b!83647))

(declare-fun m!86889 () Bool)

(assert (=> d!21125 m!86889))

(declare-fun m!86891 () Bool)

(assert (=> b!83645 m!86891))

(assert (=> b!83645 m!86529))

(assert (=> b!83645 m!86529))

(declare-fun m!86893 () Bool)

(assert (=> b!83645 m!86893))

(assert (=> b!83647 m!86529))

(assert (=> b!83647 m!86529))

(assert (=> b!83647 m!86893))

(assert (=> bm!7723 d!21125))

(declare-fun d!21127 () Bool)

(declare-fun lt!39442 () Bool)

(assert (=> d!21127 (= lt!39442 (select (content!87 (toList!739 lt!39068)) lt!38729))))

(declare-fun e!54575 () Bool)

(assert (=> d!21127 (= lt!39442 e!54575)))

(declare-fun res!43272 () Bool)

(assert (=> d!21127 (=> (not res!43272) (not e!54575))))

(assert (=> d!21127 (= res!43272 ((_ is Cons!1519) (toList!739 lt!39068)))))

(assert (=> d!21127 (= (contains!751 (toList!739 lt!39068) lt!38729) lt!39442)))

(declare-fun b!83648 () Bool)

(declare-fun e!54576 () Bool)

(assert (=> b!83648 (= e!54575 e!54576)))

(declare-fun res!43273 () Bool)

(assert (=> b!83648 (=> res!43273 e!54576)))

(assert (=> b!83648 (= res!43273 (= (h!2109 (toList!739 lt!39068)) lt!38729))))

(declare-fun b!83649 () Bool)

(assert (=> b!83649 (= e!54576 (contains!751 (t!5214 (toList!739 lt!39068)) lt!38729))))

(assert (= (and d!21127 res!43272) b!83648))

(assert (= (and b!83648 (not res!43273)) b!83649))

(declare-fun m!86895 () Bool)

(assert (=> d!21127 m!86895))

(declare-fun m!86897 () Bool)

(assert (=> d!21127 m!86897))

(declare-fun m!86899 () Bool)

(assert (=> b!83649 m!86899))

(assert (=> b!83126 d!21127))

(assert (=> b!83065 d!20909))

(assert (=> b!82938 d!20893))

(declare-fun d!21129 () Bool)

(declare-fun e!54578 () Bool)

(assert (=> d!21129 e!54578))

(declare-fun res!43274 () Bool)

(assert (=> d!21129 (=> res!43274 e!54578)))

(declare-fun lt!39444 () Bool)

(assert (=> d!21129 (= res!43274 (not lt!39444))))

(declare-fun lt!39446 () Bool)

(assert (=> d!21129 (= lt!39444 lt!39446)))

(declare-fun lt!39445 () Unit!2426)

(declare-fun e!54577 () Unit!2426)

(assert (=> d!21129 (= lt!39445 e!54577)))

(declare-fun c!13373 () Bool)

(assert (=> d!21129 (= c!13373 lt!39446)))

(assert (=> d!21129 (= lt!39446 (containsKey!141 (toList!739 lt!39053) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21129 (= (contains!749 lt!39053 #b0000000000000000000000000000000000000000000000000000000000000000) lt!39444)))

(declare-fun b!83650 () Bool)

(declare-fun lt!39443 () Unit!2426)

(assert (=> b!83650 (= e!54577 lt!39443)))

(assert (=> b!83650 (= lt!39443 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39053) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83650 (isDefined!91 (getValueByKey!137 (toList!739 lt!39053) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83651 () Bool)

(declare-fun Unit!2458 () Unit!2426)

(assert (=> b!83651 (= e!54577 Unit!2458)))

(declare-fun b!83652 () Bool)

(assert (=> b!83652 (= e!54578 (isDefined!91 (getValueByKey!137 (toList!739 lt!39053) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21129 c!13373) b!83650))

(assert (= (and d!21129 (not c!13373)) b!83651))

(assert (= (and d!21129 (not res!43274)) b!83652))

(declare-fun m!86901 () Bool)

(assert (=> d!21129 m!86901))

(declare-fun m!86903 () Bool)

(assert (=> b!83650 m!86903))

(declare-fun m!86905 () Bool)

(assert (=> b!83650 m!86905))

(assert (=> b!83650 m!86905))

(declare-fun m!86907 () Bool)

(assert (=> b!83650 m!86907))

(assert (=> b!83652 m!86905))

(assert (=> b!83652 m!86905))

(assert (=> b!83652 m!86907))

(assert (=> d!20875 d!21129))

(assert (=> d!20875 d!20891))

(assert (=> b!83109 d!20923))

(declare-fun b!83653 () Bool)

(declare-fun e!54590 () Bool)

(declare-fun call!7876 () Bool)

(assert (=> b!83653 (= e!54590 (not call!7876))))

(declare-fun b!83654 () Bool)

(declare-fun e!54584 () Bool)

(declare-fun e!54588 () Bool)

(assert (=> b!83654 (= e!54584 e!54588)))

(declare-fun c!13379 () Bool)

(assert (=> b!83654 (= c!13379 (not (= (bvand (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun lt!39450 () ListLongMap!1447)

(declare-fun b!83655 () Bool)

(declare-fun e!54579 () Bool)

(assert (=> b!83655 (= e!54579 (= (apply!81 lt!39450 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) (get!1193 (select (arr!1901 (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83655 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2145 (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16)))))))))

(assert (=> b!83655 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83656 () Bool)

(declare-fun e!54586 () ListLongMap!1447)

(declare-fun call!7878 () ListLongMap!1447)

(assert (=> b!83656 (= e!54586 call!7878)))

(declare-fun call!7873 () ListLongMap!1447)

(declare-fun c!13374 () Bool)

(declare-fun call!7874 () ListLongMap!1447)

(declare-fun call!7877 () ListLongMap!1447)

(declare-fun bm!7869 () Bool)

(declare-fun c!13377 () Bool)

(declare-fun call!7872 () ListLongMap!1447)

(assert (=> bm!7869 (= call!7877 (+!107 (ite c!13374 call!7872 (ite c!13377 call!7874 call!7873)) (ite (or c!13374 c!13377) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun b!83657 () Bool)

(declare-fun e!54581 () Bool)

(assert (=> b!83657 (= e!54581 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83658 () Bool)

(declare-fun res!43282 () Bool)

(assert (=> b!83658 (=> (not res!43282) (not e!54584))))

(declare-fun e!54580 () Bool)

(assert (=> b!83658 (= res!43282 e!54580)))

(declare-fun res!43283 () Bool)

(assert (=> b!83658 (=> res!43283 e!54580)))

(assert (=> b!83658 (= res!43283 (not e!54581))))

(declare-fun res!43275 () Bool)

(assert (=> b!83658 (=> (not res!43275) (not e!54581))))

(assert (=> b!83658 (= res!43275 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83659 () Bool)

(declare-fun call!7875 () Bool)

(assert (=> b!83659 (= e!54588 (not call!7875))))

(declare-fun b!83660 () Bool)

(declare-fun e!54589 () Bool)

(assert (=> b!83660 (= e!54590 e!54589)))

(declare-fun res!43276 () Bool)

(assert (=> b!83660 (= res!43276 call!7876)))

(assert (=> b!83660 (=> (not res!43276) (not e!54589))))

(declare-fun bm!7870 () Bool)

(assert (=> bm!7870 (= call!7875 (contains!749 lt!39450 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83661 () Bool)

(declare-fun res!43278 () Bool)

(assert (=> b!83661 (=> (not res!43278) (not e!54584))))

(assert (=> b!83661 (= res!43278 e!54590)))

(declare-fun c!13376 () Bool)

(assert (=> b!83661 (= c!13376 (not (= (bvand (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!21131 () Bool)

(assert (=> d!21131 e!54584))

(declare-fun res!43281 () Bool)

(assert (=> d!21131 (=> (not res!43281) (not e!54584))))

(assert (=> d!21131 (= res!43281 (or (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))))

(declare-fun lt!39463 () ListLongMap!1447)

(assert (=> d!21131 (= lt!39450 lt!39463)))

(declare-fun lt!39460 () Unit!2426)

(declare-fun e!54585 () Unit!2426)

(assert (=> d!21131 (= lt!39460 e!54585)))

(declare-fun c!13375 () Bool)

(declare-fun e!54582 () Bool)

(assert (=> d!21131 (= c!13375 e!54582)))

(declare-fun res!43279 () Bool)

(assert (=> d!21131 (=> (not res!43279) (not e!54582))))

(assert (=> d!21131 (= res!43279 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun e!54591 () ListLongMap!1447)

(assert (=> d!21131 (= lt!39463 e!54591)))

(assert (=> d!21131 (= c!13374 (and (not (= (bvand (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21131 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21131 (= (getCurrentListMap!425 (_keys!3983 newMap!16) (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16)))) (mask!6333 newMap!16) (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39450)))

(declare-fun b!83662 () Bool)

(assert (=> b!83662 (= e!54589 (= (apply!81 lt!39450 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))))

(declare-fun b!83663 () Bool)

(declare-fun e!54587 () Bool)

(assert (=> b!83663 (= e!54588 e!54587)))

(declare-fun res!43277 () Bool)

(assert (=> b!83663 (= res!43277 call!7875)))

(assert (=> b!83663 (=> (not res!43277) (not e!54587))))

(declare-fun b!83664 () Bool)

(assert (=> b!83664 (= e!54582 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83665 () Bool)

(assert (=> b!83665 (= e!54591 e!54586)))

(assert (=> b!83665 (= c!13377 (and (not (= (bvand (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7871 () Bool)

(assert (=> bm!7871 (= call!7874 call!7872)))

(declare-fun b!83666 () Bool)

(declare-fun lt!39462 () Unit!2426)

(assert (=> b!83666 (= e!54585 lt!39462)))

(declare-fun lt!39468 () ListLongMap!1447)

(assert (=> b!83666 (= lt!39468 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16)))) (mask!6333 newMap!16) (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39465 () (_ BitVec 64))

(assert (=> b!83666 (= lt!39465 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39466 () (_ BitVec 64))

(assert (=> b!83666 (= lt!39466 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39448 () Unit!2426)

(assert (=> b!83666 (= lt!39448 (addStillContains!57 lt!39468 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) lt!39466))))

(assert (=> b!83666 (contains!749 (+!107 lt!39468 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))) lt!39466)))

(declare-fun lt!39467 () Unit!2426)

(assert (=> b!83666 (= lt!39467 lt!39448)))

(declare-fun lt!39457 () ListLongMap!1447)

(assert (=> b!83666 (= lt!39457 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16)))) (mask!6333 newMap!16) (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39454 () (_ BitVec 64))

(assert (=> b!83666 (= lt!39454 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39461 () (_ BitVec 64))

(assert (=> b!83666 (= lt!39461 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39452 () Unit!2426)

(assert (=> b!83666 (= lt!39452 (addApplyDifferent!57 lt!39457 lt!39454 (minValue!2210 newMap!16) lt!39461))))

(assert (=> b!83666 (= (apply!81 (+!107 lt!39457 (tuple2!2201 lt!39454 (minValue!2210 newMap!16))) lt!39461) (apply!81 lt!39457 lt!39461))))

(declare-fun lt!39447 () Unit!2426)

(assert (=> b!83666 (= lt!39447 lt!39452)))

(declare-fun lt!39451 () ListLongMap!1447)

(assert (=> b!83666 (= lt!39451 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16)))) (mask!6333 newMap!16) (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39453 () (_ BitVec 64))

(assert (=> b!83666 (= lt!39453 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39456 () (_ BitVec 64))

(assert (=> b!83666 (= lt!39456 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39458 () Unit!2426)

(assert (=> b!83666 (= lt!39458 (addApplyDifferent!57 lt!39451 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) lt!39456))))

(assert (=> b!83666 (= (apply!81 (+!107 lt!39451 (tuple2!2201 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))) lt!39456) (apply!81 lt!39451 lt!39456))))

(declare-fun lt!39459 () Unit!2426)

(assert (=> b!83666 (= lt!39459 lt!39458)))

(declare-fun lt!39455 () ListLongMap!1447)

(assert (=> b!83666 (= lt!39455 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16)))) (mask!6333 newMap!16) (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39464 () (_ BitVec 64))

(assert (=> b!83666 (= lt!39464 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39449 () (_ BitVec 64))

(assert (=> b!83666 (= lt!39449 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!83666 (= lt!39462 (addApplyDifferent!57 lt!39455 lt!39464 (minValue!2210 newMap!16) lt!39449))))

(assert (=> b!83666 (= (apply!81 (+!107 lt!39455 (tuple2!2201 lt!39464 (minValue!2210 newMap!16))) lt!39449) (apply!81 lt!39455 lt!39449))))

(declare-fun bm!7872 () Bool)

(assert (=> bm!7872 (= call!7873 call!7874)))

(declare-fun b!83667 () Bool)

(declare-fun Unit!2459 () Unit!2426)

(assert (=> b!83667 (= e!54585 Unit!2459)))

(declare-fun b!83668 () Bool)

(assert (=> b!83668 (= e!54580 e!54579)))

(declare-fun res!43280 () Bool)

(assert (=> b!83668 (=> (not res!43280) (not e!54579))))

(assert (=> b!83668 (= res!43280 (contains!749 lt!39450 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83668 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83669 () Bool)

(declare-fun e!54583 () ListLongMap!1447)

(assert (=> b!83669 (= e!54583 call!7878)))

(declare-fun b!83670 () Bool)

(assert (=> b!83670 (= e!54587 (= (apply!81 lt!39450 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 newMap!16)))))

(declare-fun bm!7873 () Bool)

(assert (=> bm!7873 (= call!7878 call!7877)))

(declare-fun bm!7874 () Bool)

(assert (=> bm!7874 (= call!7876 (contains!749 lt!39450 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83671 () Bool)

(assert (=> b!83671 (= e!54583 call!7873)))

(declare-fun b!83672 () Bool)

(declare-fun c!13378 () Bool)

(assert (=> b!83672 (= c!13378 (and (not (= (bvand (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!83672 (= e!54586 e!54583)))

(declare-fun b!83673 () Bool)

(assert (=> b!83673 (= e!54591 (+!107 call!7877 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(declare-fun bm!7875 () Bool)

(assert (=> bm!7875 (= call!7872 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16)))) (mask!6333 newMap!16) (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (= (and d!21131 c!13374) b!83673))

(assert (= (and d!21131 (not c!13374)) b!83665))

(assert (= (and b!83665 c!13377) b!83656))

(assert (= (and b!83665 (not c!13377)) b!83672))

(assert (= (and b!83672 c!13378) b!83669))

(assert (= (and b!83672 (not c!13378)) b!83671))

(assert (= (or b!83669 b!83671) bm!7872))

(assert (= (or b!83656 bm!7872) bm!7871))

(assert (= (or b!83656 b!83669) bm!7873))

(assert (= (or b!83673 bm!7871) bm!7875))

(assert (= (or b!83673 bm!7873) bm!7869))

(assert (= (and d!21131 res!43279) b!83664))

(assert (= (and d!21131 c!13375) b!83666))

(assert (= (and d!21131 (not c!13375)) b!83667))

(assert (= (and d!21131 res!43281) b!83658))

(assert (= (and b!83658 res!43275) b!83657))

(assert (= (and b!83658 (not res!43283)) b!83668))

(assert (= (and b!83668 res!43280) b!83655))

(assert (= (and b!83658 res!43282) b!83661))

(assert (= (and b!83661 c!13376) b!83660))

(assert (= (and b!83661 (not c!13376)) b!83653))

(assert (= (and b!83660 res!43276) b!83662))

(assert (= (or b!83660 b!83653) bm!7874))

(assert (= (and b!83661 res!43278) b!83654))

(assert (= (and b!83654 c!13379) b!83663))

(assert (= (and b!83654 (not c!13379)) b!83659))

(assert (= (and b!83663 res!43277) b!83670))

(assert (= (or b!83663 b!83659) bm!7870))

(declare-fun b_lambda!3711 () Bool)

(assert (=> (not b_lambda!3711) (not b!83655)))

(assert (=> b!83655 t!5225))

(declare-fun b_and!5081 () Bool)

(assert (= b_and!5077 (and (=> t!5225 result!2895) b_and!5081)))

(assert (=> b!83655 t!5227))

(declare-fun b_and!5083 () Bool)

(assert (= b_and!5079 (and (=> t!5227 result!2897) b_and!5083)))

(declare-fun m!86909 () Bool)

(assert (=> b!83670 m!86909))

(declare-fun m!86911 () Bool)

(assert (=> bm!7870 m!86911))

(assert (=> b!83668 m!86045))

(assert (=> b!83668 m!86045))

(declare-fun m!86913 () Bool)

(assert (=> b!83668 m!86913))

(declare-fun m!86915 () Bool)

(assert (=> bm!7875 m!86915))

(declare-fun m!86917 () Bool)

(assert (=> bm!7869 m!86917))

(declare-fun m!86919 () Bool)

(assert (=> bm!7874 m!86919))

(assert (=> b!83666 m!86045))

(assert (=> b!83666 m!86915))

(declare-fun m!86921 () Bool)

(assert (=> b!83666 m!86921))

(declare-fun m!86923 () Bool)

(assert (=> b!83666 m!86923))

(declare-fun m!86925 () Bool)

(assert (=> b!83666 m!86925))

(declare-fun m!86927 () Bool)

(assert (=> b!83666 m!86927))

(declare-fun m!86929 () Bool)

(assert (=> b!83666 m!86929))

(declare-fun m!86931 () Bool)

(assert (=> b!83666 m!86931))

(declare-fun m!86933 () Bool)

(assert (=> b!83666 m!86933))

(declare-fun m!86935 () Bool)

(assert (=> b!83666 m!86935))

(declare-fun m!86937 () Bool)

(assert (=> b!83666 m!86937))

(assert (=> b!83666 m!86927))

(assert (=> b!83666 m!86931))

(declare-fun m!86939 () Bool)

(assert (=> b!83666 m!86939))

(declare-fun m!86941 () Bool)

(assert (=> b!83666 m!86941))

(assert (=> b!83666 m!86941))

(declare-fun m!86943 () Bool)

(assert (=> b!83666 m!86943))

(declare-fun m!86945 () Bool)

(assert (=> b!83666 m!86945))

(assert (=> b!83666 m!86925))

(declare-fun m!86947 () Bool)

(assert (=> b!83666 m!86947))

(declare-fun m!86949 () Bool)

(assert (=> b!83666 m!86949))

(assert (=> b!83655 m!86045))

(assert (=> b!83655 m!86141))

(assert (=> b!83655 m!86045))

(declare-fun m!86951 () Bool)

(assert (=> b!83655 m!86951))

(declare-fun m!86953 () Bool)

(assert (=> b!83655 m!86953))

(assert (=> b!83655 m!86953))

(assert (=> b!83655 m!86141))

(declare-fun m!86955 () Bool)

(assert (=> b!83655 m!86955))

(assert (=> b!83657 m!86045))

(assert (=> b!83657 m!86045))

(assert (=> b!83657 m!86051))

(declare-fun m!86957 () Bool)

(assert (=> b!83673 m!86957))

(declare-fun m!86959 () Bool)

(assert (=> b!83662 m!86959))

(assert (=> b!83664 m!86045))

(assert (=> b!83664 m!86045))

(assert (=> b!83664 m!86051))

(assert (=> d!21131 m!86067))

(assert (=> bm!7792 d!21131))

(declare-fun d!21133 () Bool)

(declare-fun lt!39469 () Bool)

(assert (=> d!21133 (= lt!39469 (select (content!87 (toList!739 lt!39072)) lt!38738))))

(declare-fun e!54592 () Bool)

(assert (=> d!21133 (= lt!39469 e!54592)))

(declare-fun res!43284 () Bool)

(assert (=> d!21133 (=> (not res!43284) (not e!54592))))

(assert (=> d!21133 (= res!43284 ((_ is Cons!1519) (toList!739 lt!39072)))))

(assert (=> d!21133 (= (contains!751 (toList!739 lt!39072) lt!38738) lt!39469)))

(declare-fun b!83674 () Bool)

(declare-fun e!54593 () Bool)

(assert (=> b!83674 (= e!54592 e!54593)))

(declare-fun res!43285 () Bool)

(assert (=> b!83674 (=> res!43285 e!54593)))

(assert (=> b!83674 (= res!43285 (= (h!2109 (toList!739 lt!39072)) lt!38738))))

(declare-fun b!83675 () Bool)

(assert (=> b!83675 (= e!54593 (contains!751 (t!5214 (toList!739 lt!39072)) lt!38738))))

(assert (= (and d!21133 res!43284) b!83674))

(assert (= (and b!83674 (not res!43285)) b!83675))

(declare-fun m!86961 () Bool)

(assert (=> d!21133 m!86961))

(declare-fun m!86963 () Bool)

(assert (=> d!21133 m!86963))

(declare-fun m!86965 () Bool)

(assert (=> b!83675 m!86965))

(assert (=> b!83128 d!21133))

(declare-fun d!21135 () Bool)

(declare-fun e!54595 () Bool)

(assert (=> d!21135 e!54595))

(declare-fun res!43286 () Bool)

(assert (=> d!21135 (=> res!43286 e!54595)))

(declare-fun lt!39471 () Bool)

(assert (=> d!21135 (= res!43286 (not lt!39471))))

(declare-fun lt!39473 () Bool)

(assert (=> d!21135 (= lt!39471 lt!39473)))

(declare-fun lt!39472 () Unit!2426)

(declare-fun e!54594 () Unit!2426)

(assert (=> d!21135 (= lt!39472 e!54594)))

(declare-fun c!13380 () Bool)

(assert (=> d!21135 (= c!13380 lt!39473)))

(assert (=> d!21135 (= lt!39473 (containsKey!141 (toList!739 lt!39032) (_1!1111 lt!38742)))))

(assert (=> d!21135 (= (contains!749 lt!39032 (_1!1111 lt!38742)) lt!39471)))

(declare-fun b!83676 () Bool)

(declare-fun lt!39470 () Unit!2426)

(assert (=> b!83676 (= e!54594 lt!39470)))

(assert (=> b!83676 (= lt!39470 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39032) (_1!1111 lt!38742)))))

(assert (=> b!83676 (isDefined!91 (getValueByKey!137 (toList!739 lt!39032) (_1!1111 lt!38742)))))

(declare-fun b!83677 () Bool)

(declare-fun Unit!2460 () Unit!2426)

(assert (=> b!83677 (= e!54594 Unit!2460)))

(declare-fun b!83678 () Bool)

(assert (=> b!83678 (= e!54595 (isDefined!91 (getValueByKey!137 (toList!739 lt!39032) (_1!1111 lt!38742))))))

(assert (= (and d!21135 c!13380) b!83676))

(assert (= (and d!21135 (not c!13380)) b!83677))

(assert (= (and d!21135 (not res!43286)) b!83678))

(declare-fun m!86967 () Bool)

(assert (=> d!21135 m!86967))

(declare-fun m!86969 () Bool)

(assert (=> b!83676 m!86969))

(assert (=> b!83676 m!85917))

(assert (=> b!83676 m!85917))

(declare-fun m!86971 () Bool)

(assert (=> b!83676 m!86971))

(assert (=> b!83678 m!85917))

(assert (=> b!83678 m!85917))

(assert (=> b!83678 m!86971))

(assert (=> d!20873 d!21135))

(declare-fun b!83681 () Bool)

(declare-fun e!54597 () Option!143)

(assert (=> b!83681 (= e!54597 (getValueByKey!137 (t!5214 lt!39031) (_1!1111 lt!38742)))))

(declare-fun d!21137 () Bool)

(declare-fun c!13381 () Bool)

(assert (=> d!21137 (= c!13381 (and ((_ is Cons!1519) lt!39031) (= (_1!1111 (h!2109 lt!39031)) (_1!1111 lt!38742))))))

(declare-fun e!54596 () Option!143)

(assert (=> d!21137 (= (getValueByKey!137 lt!39031 (_1!1111 lt!38742)) e!54596)))

(declare-fun b!83679 () Bool)

(assert (=> b!83679 (= e!54596 (Some!142 (_2!1111 (h!2109 lt!39031))))))

(declare-fun b!83682 () Bool)

(assert (=> b!83682 (= e!54597 None!141)))

(declare-fun b!83680 () Bool)

(assert (=> b!83680 (= e!54596 e!54597)))

(declare-fun c!13382 () Bool)

(assert (=> b!83680 (= c!13382 (and ((_ is Cons!1519) lt!39031) (not (= (_1!1111 (h!2109 lt!39031)) (_1!1111 lt!38742)))))))

(assert (= (and d!21137 c!13381) b!83679))

(assert (= (and d!21137 (not c!13381)) b!83680))

(assert (= (and b!83680 c!13382) b!83681))

(assert (= (and b!83680 (not c!13382)) b!83682))

(declare-fun m!86973 () Bool)

(assert (=> b!83681 m!86973))

(assert (=> d!20873 d!21137))

(declare-fun d!21139 () Bool)

(assert (=> d!21139 (= (getValueByKey!137 lt!39031 (_1!1111 lt!38742)) (Some!142 (_2!1111 lt!38742)))))

(declare-fun lt!39474 () Unit!2426)

(assert (=> d!21139 (= lt!39474 (choose!497 lt!39031 (_1!1111 lt!38742) (_2!1111 lt!38742)))))

(declare-fun e!54598 () Bool)

(assert (=> d!21139 e!54598))

(declare-fun res!43287 () Bool)

(assert (=> d!21139 (=> (not res!43287) (not e!54598))))

(assert (=> d!21139 (= res!43287 (isStrictlySorted!292 lt!39031))))

(assert (=> d!21139 (= (lemmaContainsTupThenGetReturnValue!57 lt!39031 (_1!1111 lt!38742) (_2!1111 lt!38742)) lt!39474)))

(declare-fun b!83683 () Bool)

(declare-fun res!43288 () Bool)

(assert (=> b!83683 (=> (not res!43288) (not e!54598))))

(assert (=> b!83683 (= res!43288 (containsKey!141 lt!39031 (_1!1111 lt!38742)))))

(declare-fun b!83684 () Bool)

(assert (=> b!83684 (= e!54598 (contains!751 lt!39031 (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(assert (= (and d!21139 res!43287) b!83683))

(assert (= (and b!83683 res!43288) b!83684))

(assert (=> d!21139 m!85911))

(declare-fun m!86975 () Bool)

(assert (=> d!21139 m!86975))

(declare-fun m!86977 () Bool)

(assert (=> d!21139 m!86977))

(declare-fun m!86979 () Bool)

(assert (=> b!83683 m!86979))

(declare-fun m!86981 () Bool)

(assert (=> b!83684 m!86981))

(assert (=> d!20873 d!21139))

(declare-fun b!83685 () Bool)

(declare-fun e!54603 () List!1523)

(declare-fun call!7879 () List!1523)

(assert (=> b!83685 (= e!54603 call!7879)))

(declare-fun b!83686 () Bool)

(declare-fun e!54601 () Bool)

(declare-fun lt!39475 () List!1523)

(assert (=> b!83686 (= e!54601 (contains!751 lt!39475 (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(declare-fun c!13383 () Bool)

(declare-fun c!13385 () Bool)

(declare-fun b!83687 () Bool)

(declare-fun e!54600 () List!1523)

(assert (=> b!83687 (= e!54600 (ite c!13385 (t!5214 (toList!739 lt!38730)) (ite c!13383 (Cons!1519 (h!2109 (toList!739 lt!38730)) (t!5214 (toList!739 lt!38730))) Nil!1520)))))

(declare-fun d!21141 () Bool)

(assert (=> d!21141 e!54601))

(declare-fun res!43290 () Bool)

(assert (=> d!21141 (=> (not res!43290) (not e!54601))))

(assert (=> d!21141 (= res!43290 (isStrictlySorted!292 lt!39475))))

(declare-fun e!54602 () List!1523)

(assert (=> d!21141 (= lt!39475 e!54602)))

(declare-fun c!13384 () Bool)

(assert (=> d!21141 (= c!13384 (and ((_ is Cons!1519) (toList!739 lt!38730)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38730))) (_1!1111 lt!38742))))))

(assert (=> d!21141 (isStrictlySorted!292 (toList!739 lt!38730))))

(assert (=> d!21141 (= (insertStrictlySorted!60 (toList!739 lt!38730) (_1!1111 lt!38742) (_2!1111 lt!38742)) lt!39475)))

(declare-fun b!83688 () Bool)

(assert (=> b!83688 (= e!54600 (insertStrictlySorted!60 (t!5214 (toList!739 lt!38730)) (_1!1111 lt!38742) (_2!1111 lt!38742)))))

(declare-fun bm!7876 () Bool)

(declare-fun call!7881 () List!1523)

(assert (=> bm!7876 (= call!7879 call!7881)))

(declare-fun b!83689 () Bool)

(declare-fun e!54599 () List!1523)

(declare-fun call!7880 () List!1523)

(assert (=> b!83689 (= e!54599 call!7880)))

(declare-fun b!83690 () Bool)

(assert (=> b!83690 (= e!54602 e!54603)))

(assert (=> b!83690 (= c!13385 (and ((_ is Cons!1519) (toList!739 lt!38730)) (= (_1!1111 (h!2109 (toList!739 lt!38730))) (_1!1111 lt!38742))))))

(declare-fun b!83691 () Bool)

(declare-fun res!43289 () Bool)

(assert (=> b!83691 (=> (not res!43289) (not e!54601))))

(assert (=> b!83691 (= res!43289 (containsKey!141 lt!39475 (_1!1111 lt!38742)))))

(declare-fun bm!7877 () Bool)

(assert (=> bm!7877 (= call!7880 call!7879)))

(declare-fun b!83692 () Bool)

(assert (=> b!83692 (= e!54602 call!7881)))

(declare-fun b!83693 () Bool)

(assert (=> b!83693 (= e!54599 call!7880)))

(declare-fun b!83694 () Bool)

(assert (=> b!83694 (= c!13383 (and ((_ is Cons!1519) (toList!739 lt!38730)) (bvsgt (_1!1111 (h!2109 (toList!739 lt!38730))) (_1!1111 lt!38742))))))

(assert (=> b!83694 (= e!54603 e!54599)))

(declare-fun bm!7878 () Bool)

(assert (=> bm!7878 (= call!7881 ($colon$colon!70 e!54600 (ite c!13384 (h!2109 (toList!739 lt!38730)) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742)))))))

(declare-fun c!13386 () Bool)

(assert (=> bm!7878 (= c!13386 c!13384)))

(assert (= (and d!21141 c!13384) b!83692))

(assert (= (and d!21141 (not c!13384)) b!83690))

(assert (= (and b!83690 c!13385) b!83685))

(assert (= (and b!83690 (not c!13385)) b!83694))

(assert (= (and b!83694 c!13383) b!83689))

(assert (= (and b!83694 (not c!13383)) b!83693))

(assert (= (or b!83689 b!83693) bm!7877))

(assert (= (or b!83685 bm!7877) bm!7876))

(assert (= (or b!83692 bm!7876) bm!7878))

(assert (= (and bm!7878 c!13386) b!83688))

(assert (= (and bm!7878 (not c!13386)) b!83687))

(assert (= (and d!21141 res!43290) b!83691))

(assert (= (and b!83691 res!43289) b!83686))

(declare-fun m!86983 () Bool)

(assert (=> bm!7878 m!86983))

(declare-fun m!86985 () Bool)

(assert (=> b!83688 m!86985))

(declare-fun m!86987 () Bool)

(assert (=> d!21141 m!86987))

(declare-fun m!86989 () Bool)

(assert (=> d!21141 m!86989))

(declare-fun m!86991 () Bool)

(assert (=> b!83691 m!86991))

(declare-fun m!86993 () Bool)

(assert (=> b!83686 m!86993))

(assert (=> d!20873 d!21141))

(declare-fun mapNonEmpty!3385 () Bool)

(declare-fun mapRes!3385 () Bool)

(declare-fun tp!8911 () Bool)

(declare-fun e!54604 () Bool)

(assert (=> mapNonEmpty!3385 (= mapRes!3385 (and tp!8911 e!54604))))

(declare-fun mapRest!3385 () (Array (_ BitVec 32) ValueCell!920))

(declare-fun mapKey!3385 () (_ BitVec 32))

(declare-fun mapValue!3385 () ValueCell!920)

(assert (=> mapNonEmpty!3385 (= mapRest!3384 (store mapRest!3385 mapKey!3385 mapValue!3385))))

(declare-fun b!83695 () Bool)

(assert (=> b!83695 (= e!54604 tp_is_empty!2527)))

(declare-fun condMapEmpty!3385 () Bool)

(declare-fun mapDefault!3385 () ValueCell!920)

(assert (=> mapNonEmpty!3384 (= condMapEmpty!3385 (= mapRest!3384 ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3385)))))

(declare-fun e!54605 () Bool)

(assert (=> mapNonEmpty!3384 (= tp!8910 (and e!54605 mapRes!3385))))

(declare-fun mapIsEmpty!3385 () Bool)

(assert (=> mapIsEmpty!3385 mapRes!3385))

(declare-fun b!83696 () Bool)

(assert (=> b!83696 (= e!54605 tp_is_empty!2527)))

(assert (= (and mapNonEmpty!3384 condMapEmpty!3385) mapIsEmpty!3385))

(assert (= (and mapNonEmpty!3384 (not condMapEmpty!3385)) mapNonEmpty!3385))

(assert (= (and mapNonEmpty!3385 ((_ is ValueCellFull!920) mapValue!3385)) b!83695))

(assert (= (and mapNonEmpty!3384 ((_ is ValueCellFull!920) mapDefault!3385)) b!83696))

(declare-fun m!86995 () Bool)

(assert (=> mapNonEmpty!3385 m!86995))

(declare-fun mapNonEmpty!3386 () Bool)

(declare-fun mapRes!3386 () Bool)

(declare-fun tp!8912 () Bool)

(declare-fun e!54606 () Bool)

(assert (=> mapNonEmpty!3386 (= mapRes!3386 (and tp!8912 e!54606))))

(declare-fun mapKey!3386 () (_ BitVec 32))

(declare-fun mapRest!3386 () (Array (_ BitVec 32) ValueCell!920))

(declare-fun mapValue!3386 () ValueCell!920)

(assert (=> mapNonEmpty!3386 (= mapRest!3383 (store mapRest!3386 mapKey!3386 mapValue!3386))))

(declare-fun b!83697 () Bool)

(assert (=> b!83697 (= e!54606 tp_is_empty!2527)))

(declare-fun condMapEmpty!3386 () Bool)

(declare-fun mapDefault!3386 () ValueCell!920)

(assert (=> mapNonEmpty!3383 (= condMapEmpty!3386 (= mapRest!3383 ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3386)))))

(declare-fun e!54607 () Bool)

(assert (=> mapNonEmpty!3383 (= tp!8909 (and e!54607 mapRes!3386))))

(declare-fun mapIsEmpty!3386 () Bool)

(assert (=> mapIsEmpty!3386 mapRes!3386))

(declare-fun b!83698 () Bool)

(assert (=> b!83698 (= e!54607 tp_is_empty!2527)))

(assert (= (and mapNonEmpty!3383 condMapEmpty!3386) mapIsEmpty!3386))

(assert (= (and mapNonEmpty!3383 (not condMapEmpty!3386)) mapNonEmpty!3386))

(assert (= (and mapNonEmpty!3386 ((_ is ValueCellFull!920) mapValue!3386)) b!83697))

(assert (= (and mapNonEmpty!3383 ((_ is ValueCellFull!920) mapDefault!3386)) b!83698))

(declare-fun m!86997 () Bool)

(assert (=> mapNonEmpty!3386 m!86997))

(declare-fun b_lambda!3713 () Bool)

(assert (= b_lambda!3703 (or (and b!82709 b_free!2221 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82707 b_free!2223) b_lambda!3713)))

(declare-fun b_lambda!3715 () Bool)

(assert (= b_lambda!3709 (or (and b!82709 b_free!2221 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82707 b_free!2223) b_lambda!3715)))

(declare-fun b_lambda!3717 () Bool)

(assert (= b_lambda!3707 (or (and b!82709 b_free!2221) (and b!82707 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))))) b_lambda!3717)))

(declare-fun b_lambda!3719 () Bool)

(assert (= b_lambda!3705 (or (and b!82709 b_free!2221) (and b!82707 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))))) b_lambda!3719)))

(declare-fun b_lambda!3721 () Bool)

(assert (= b_lambda!3711 (or (and b!82709 b_free!2221 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82707 b_free!2223) b_lambda!3721)))

(check-sat (not d!21041) (not d!20953) (not bm!7861) (not b!83476) (not b!83387) (not d!21105) (not d!21073) (not d!21021) (not d!21047) (not d!21043) (not b!83675) (not b!83633) (not d!20925) (not b!83447) (not b!83581) (not b!83422) (not b!83597) (not b!83264) (not b!83468) (not d!21131) (not b!83163) (not b_lambda!3701) (not b!83238) (not d!20931) (not b!83157) (not d!20911) (not b!83384) (not b!83673) (not d!21085) (not b!83614) (not b!83615) (not b_lambda!3713) (not d!21111) (not b!83511) (not b!83226) (not b!83641) (not b!83432) (not d!20959) (not b!83683) (not b!83471) (not d!20977) (not b!83662) (not b!83686) (not b_next!2221) (not b!83254) (not b!83650) (not d!21053) (not b!83458) (not b!83681) (not b!83479) (not b!83622) (not d!20899) (not d!20947) (not b!83236) (not b!83331) (not b!83224) (not b!83609) (not b!83413) (not b!83345) (not b!83470) (not d!20917) (not d!20907) (not d!21081) (not b!83363) (not b!83481) (not b!83456) (not bm!7821) (not b!83593) (not d!21087) (not b!83160) (not bm!7822) (not d!21077) (not b!83399) (not bm!7865) (not bm!7875) (not bm!7859) (not d!21061) (not b!83626) (not b!83329) (not b!83462) (not d!20999) (not b!83587) (not d!21067) (not bm!7807) (not b!83342) (not d!21049) (not d!20909) (not d!20913) (not b!83670) (not d!21075) (not b!83354) (not b!83166) (not b!83519) (not d!20955) (not d!21129) (not d!21139) (not b!83165) (not d!21037) (not bm!7838) (not d!21011) (not b!83565) (not d!21055) (not d!20929) (not b!83631) (not b!83433) (not b!83268) (not b!83440) (not b!83168) (not bm!7815) (not b!83578) (not b!83502) (not d!21029) (not d!21023) (not b!83678) (not d!20987) (not b!83396) (not b!83465) (not d!21079) (not b_lambda!3719) (not b!83557) (not b!83647) b_and!5081 (not b!83443) (not d!21007) (not b!83280) (not d!20935) (not b_lambda!3717) (not d!20963) (not b!83564) (not b!83418) (not b_lambda!3689) (not bm!7819) (not bm!7841) (not d!20939) (not bm!7814) (not b!83490) (not b!83445) (not d!21001) (not d!21017) (not b!83657) (not d!21125) (not b!83420) (not b!83504) (not b!83619) (not bm!7847) (not b!83636) (not d!20989) (not b!83603) (not d!21033) (not b!83393) (not d!20933) (not bm!7874) (not d!21121) (not b!83358) (not b!83419) (not b!83277) (not b!83347) (not d!20937) (not b!83478) (not b!83676) (not b!83634) (not d!20973) (not b_lambda!3721) (not b!83282) (not b!83514) (not bm!7804) (not d!20969) (not b!83577) (not d!20949) (not b!83409) (not b!83356) (not b!83372) (not b!83244) (not b!83269) (not b!83449) (not b!83295) (not b!83159) (not b!83463) (not b!83240) (not d!20941) (not bm!7820) (not bm!7869) (not b!83219) (not b!83425) (not d!21025) b_and!5083 (not b!83512) (not b!83340) (not b!83460) (not b!83164) (not b!83338) (not d!20975) (not d!20923) (not d!21003) (not b!83417) (not d!21133) (not b!83307) (not d!21123) (not d!21091) (not b!83146) (not b!83617) (not d!20967) (not d!21119) (not d!20915) (not b!83459) (not b!83584) (not mapNonEmpty!3386) (not bm!7833) (not d!20903) (not b!83281) (not b!83442) (not d!21065) (not b!83297) (not bm!7813) (not b!83261) (not bm!7850) (not b!83638) (not d!21097) (not b!83266) (not d!21135) (not bm!7831) (not b!83461) (not b!83292) (not b!83501) (not bm!7878) (not b!83416) (not b!83628) (not b!83590) tp_is_empty!2527 (not d!21115) (not b!83231) (not b!83259) (not b!83466) (not bm!7862) (not b!83491) (not b!83262) (not b!83382) (not bm!7844) (not b!83579) (not b!83604) (not b!83664) (not d!21141) (not b!83229) (not b!83446) (not b!83601) (not b!83263) (not b!83374) (not b!83666) (not d!20927) (not b!83380) (not d!21019) (not b!83645) (not b!83464) (not b!83473) (not b!83483) (not d!21051) (not b_next!2223) (not d!21069) (not bm!7868) (not b!83649) (not d!20965) (not b!83612) (not b!83414) (not b!83606) (not d!21059) (not b!83444) (not mapNonEmpty!3385) (not b!83652) (not b_lambda!3715) (not b!83411) (not d!21045) (not bm!7812) (not b!83415) (not b!83441) (not b!83574) (not d!20945) (not d!21101) (not d!21107) (not d!20943) (not d!20993) (not b!83600) (not b!83253) (not d!21013) (not bm!7837) (not b!83379) (not b!83270) (not b!83283) (not b!83691) (not b!83572) (not b!83242) (not d!21009) (not b!83668) (not b!83467) (not d!20983) (not b!83434) (not b!83509) (not b!83257) (not d!20951) (not b!83352) (not d!21127) (not b!83247) (not b!83334) (not b!83486) (not b!83421) (not b!83506) (not b!83178) (not b!83288) (not d!21099) (not b!83576) (not b!83265) (not b!83423) (not b!83370) (not bm!7870) (not b!83294) (not b!83558) (not b!83377) (not b!83293) (not d!20895) (not b!83516) (not d!21005) (not b!83430) (not b_lambda!3699) (not b!83276) (not b!83306) (not d!21113) (not b!83655) (not b!83360) (not b!83688) (not b_lambda!3697) (not b!83300) (not d!21063) (not bm!7832) (not b!83566) (not b!83684) (not d!21031) (not b!83366) (not b!83607))
(check-sat b_and!5081 b_and!5083 (not b_next!2221) (not b_next!2223))
(get-model)

(declare-fun d!21143 () Bool)

(declare-fun e!54609 () Bool)

(assert (=> d!21143 e!54609))

(declare-fun res!43291 () Bool)

(assert (=> d!21143 (=> res!43291 e!54609)))

(declare-fun lt!39477 () Bool)

(assert (=> d!21143 (= res!43291 (not lt!39477))))

(declare-fun lt!39479 () Bool)

(assert (=> d!21143 (= lt!39477 lt!39479)))

(declare-fun lt!39478 () Unit!2426)

(declare-fun e!54608 () Unit!2426)

(assert (=> d!21143 (= lt!39478 e!54608)))

(declare-fun c!13387 () Bool)

(assert (=> d!21143 (= c!13387 lt!39479)))

(assert (=> d!21143 (= lt!39479 (containsKey!141 (toList!739 lt!39114) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21143 (= (contains!749 lt!39114 #b0000000000000000000000000000000000000000000000000000000000000000) lt!39477)))

(declare-fun b!83699 () Bool)

(declare-fun lt!39476 () Unit!2426)

(assert (=> b!83699 (= e!54608 lt!39476)))

(assert (=> b!83699 (= lt!39476 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39114) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83699 (isDefined!91 (getValueByKey!137 (toList!739 lt!39114) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83700 () Bool)

(declare-fun Unit!2461 () Unit!2426)

(assert (=> b!83700 (= e!54608 Unit!2461)))

(declare-fun b!83701 () Bool)

(assert (=> b!83701 (= e!54609 (isDefined!91 (getValueByKey!137 (toList!739 lt!39114) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21143 c!13387) b!83699))

(assert (= (and d!21143 (not c!13387)) b!83700))

(assert (= (and d!21143 (not res!43291)) b!83701))

(declare-fun m!86999 () Bool)

(assert (=> d!21143 m!86999))

(declare-fun m!87001 () Bool)

(assert (=> b!83699 m!87001))

(declare-fun m!87003 () Bool)

(assert (=> b!83699 m!87003))

(assert (=> b!83699 m!87003))

(declare-fun m!87005 () Bool)

(assert (=> b!83699 m!87005))

(assert (=> b!83701 m!87003))

(assert (=> b!83701 m!87003))

(assert (=> b!83701 m!87005))

(assert (=> bm!7819 d!21143))

(declare-fun d!21145 () Bool)

(declare-fun res!43296 () Bool)

(declare-fun e!54614 () Bool)

(assert (=> d!21145 (=> res!43296 e!54614)))

(assert (=> d!21145 (= res!43296 (or ((_ is Nil!1520) lt!39186) ((_ is Nil!1520) (t!5214 lt!39186))))))

(assert (=> d!21145 (= (isStrictlySorted!292 lt!39186) e!54614)))

(declare-fun b!83706 () Bool)

(declare-fun e!54615 () Bool)

(assert (=> b!83706 (= e!54614 e!54615)))

(declare-fun res!43297 () Bool)

(assert (=> b!83706 (=> (not res!43297) (not e!54615))))

(assert (=> b!83706 (= res!43297 (bvslt (_1!1111 (h!2109 lt!39186)) (_1!1111 (h!2109 (t!5214 lt!39186)))))))

(declare-fun b!83707 () Bool)

(assert (=> b!83707 (= e!54615 (isStrictlySorted!292 (t!5214 lt!39186)))))

(assert (= (and d!21145 (not res!43296)) b!83706))

(assert (= (and b!83706 res!43297) b!83707))

(declare-fun m!87007 () Bool)

(assert (=> b!83707 m!87007))

(assert (=> d!20965 d!21145))

(declare-fun d!21147 () Bool)

(declare-fun res!43298 () Bool)

(declare-fun e!54616 () Bool)

(assert (=> d!21147 (=> res!43298 e!54616)))

(assert (=> d!21147 (= res!43298 (or ((_ is Nil!1520) (toList!739 lt!38728)) ((_ is Nil!1520) (t!5214 (toList!739 lt!38728)))))))

(assert (=> d!21147 (= (isStrictlySorted!292 (toList!739 lt!38728)) e!54616)))

(declare-fun b!83708 () Bool)

(declare-fun e!54617 () Bool)

(assert (=> b!83708 (= e!54616 e!54617)))

(declare-fun res!43299 () Bool)

(assert (=> b!83708 (=> (not res!43299) (not e!54617))))

(assert (=> b!83708 (= res!43299 (bvslt (_1!1111 (h!2109 (toList!739 lt!38728))) (_1!1111 (h!2109 (t!5214 (toList!739 lt!38728))))))))

(declare-fun b!83709 () Bool)

(assert (=> b!83709 (= e!54617 (isStrictlySorted!292 (t!5214 (toList!739 lt!38728))))))

(assert (= (and d!21147 (not res!43298)) b!83708))

(assert (= (and b!83708 res!43299) b!83709))

(declare-fun m!87009 () Bool)

(assert (=> b!83709 m!87009))

(assert (=> d!20965 d!21147))

(assert (=> b!83584 d!20921))

(declare-fun b!83712 () Bool)

(declare-fun e!54619 () Option!143)

(assert (=> b!83712 (= e!54619 (getValueByKey!137 (t!5214 (t!5214 lt!39060)) (_1!1111 lt!38729)))))

(declare-fun d!21149 () Bool)

(declare-fun c!13388 () Bool)

(assert (=> d!21149 (= c!13388 (and ((_ is Cons!1519) (t!5214 lt!39060)) (= (_1!1111 (h!2109 (t!5214 lt!39060))) (_1!1111 lt!38729))))))

(declare-fun e!54618 () Option!143)

(assert (=> d!21149 (= (getValueByKey!137 (t!5214 lt!39060) (_1!1111 lt!38729)) e!54618)))

(declare-fun b!83710 () Bool)

(assert (=> b!83710 (= e!54618 (Some!142 (_2!1111 (h!2109 (t!5214 lt!39060)))))))

(declare-fun b!83713 () Bool)

(assert (=> b!83713 (= e!54619 None!141)))

(declare-fun b!83711 () Bool)

(assert (=> b!83711 (= e!54618 e!54619)))

(declare-fun c!13389 () Bool)

(assert (=> b!83711 (= c!13389 (and ((_ is Cons!1519) (t!5214 lt!39060)) (not (= (_1!1111 (h!2109 (t!5214 lt!39060))) (_1!1111 lt!38729)))))))

(assert (= (and d!21149 c!13388) b!83710))

(assert (= (and d!21149 (not c!13388)) b!83711))

(assert (= (and b!83711 c!13389) b!83712))

(assert (= (and b!83711 (not c!13389)) b!83713))

(declare-fun m!87011 () Bool)

(assert (=> b!83712 m!87011))

(assert (=> b!83612 d!21149))

(declare-fun d!21151 () Bool)

(assert (=> d!21151 (= (apply!81 lt!39450 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1196 (getValueByKey!137 (toList!739 lt!39450) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3531 () Bool)

(assert (= bs!3531 d!21151))

(declare-fun m!87013 () Bool)

(assert (=> bs!3531 m!87013))

(assert (=> bs!3531 m!87013))

(declare-fun m!87015 () Bool)

(assert (=> bs!3531 m!87015))

(assert (=> b!83662 d!21151))

(declare-fun d!21153 () Bool)

(declare-fun lt!39480 () Bool)

(assert (=> d!21153 (= lt!39480 (select (content!87 (toList!739 lt!39292)) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun e!54620 () Bool)

(assert (=> d!21153 (= lt!39480 e!54620)))

(declare-fun res!43300 () Bool)

(assert (=> d!21153 (=> (not res!43300) (not e!54620))))

(assert (=> d!21153 (= res!43300 ((_ is Cons!1519) (toList!739 lt!39292)))))

(assert (=> d!21153 (= (contains!751 (toList!739 lt!39292) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39480)))

(declare-fun b!83714 () Bool)

(declare-fun e!54621 () Bool)

(assert (=> b!83714 (= e!54620 e!54621)))

(declare-fun res!43301 () Bool)

(assert (=> b!83714 (=> res!43301 e!54621)))

(assert (=> b!83714 (= res!43301 (= (h!2109 (toList!739 lt!39292)) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!83715 () Bool)

(assert (=> b!83715 (= e!54621 (contains!751 (t!5214 (toList!739 lt!39292)) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!21153 res!43300) b!83714))

(assert (= (and b!83714 (not res!43301)) b!83715))

(declare-fun m!87017 () Bool)

(assert (=> d!21153 m!87017))

(declare-fun m!87019 () Bool)

(assert (=> d!21153 m!87019))

(declare-fun m!87021 () Bool)

(assert (=> b!83715 m!87021))

(assert (=> b!83467 d!21153))

(declare-fun d!21155 () Bool)

(declare-fun res!43302 () Bool)

(declare-fun e!54622 () Bool)

(assert (=> d!21155 (=> res!43302 e!54622)))

(assert (=> d!21155 (= res!43302 (and ((_ is Cons!1519) (toList!739 lt!39072)) (= (_1!1111 (h!2109 (toList!739 lt!39072))) (_1!1111 lt!38738))))))

(assert (=> d!21155 (= (containsKey!141 (toList!739 lt!39072) (_1!1111 lt!38738)) e!54622)))

(declare-fun b!83716 () Bool)

(declare-fun e!54623 () Bool)

(assert (=> b!83716 (= e!54622 e!54623)))

(declare-fun res!43303 () Bool)

(assert (=> b!83716 (=> (not res!43303) (not e!54623))))

(assert (=> b!83716 (= res!43303 (and (or (not ((_ is Cons!1519) (toList!739 lt!39072))) (bvsle (_1!1111 (h!2109 (toList!739 lt!39072))) (_1!1111 lt!38738))) ((_ is Cons!1519) (toList!739 lt!39072)) (bvslt (_1!1111 (h!2109 (toList!739 lt!39072))) (_1!1111 lt!38738))))))

(declare-fun b!83717 () Bool)

(assert (=> b!83717 (= e!54623 (containsKey!141 (t!5214 (toList!739 lt!39072)) (_1!1111 lt!38738)))))

(assert (= (and d!21155 (not res!43302)) b!83716))

(assert (= (and b!83716 res!43303) b!83717))

(declare-fun m!87023 () Bool)

(assert (=> b!83717 m!87023))

(assert (=> d!21055 d!21155))

(declare-fun d!21157 () Bool)

(declare-fun e!54624 () Bool)

(assert (=> d!21157 e!54624))

(declare-fun res!43304 () Bool)

(assert (=> d!21157 (=> (not res!43304) (not e!54624))))

(declare-fun lt!39482 () ListLongMap!1447)

(assert (=> d!21157 (= res!43304 (contains!749 lt!39482 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun lt!39481 () List!1523)

(assert (=> d!21157 (= lt!39482 (ListLongMap!1448 lt!39481))))

(declare-fun lt!39484 () Unit!2426)

(declare-fun lt!39483 () Unit!2426)

(assert (=> d!21157 (= lt!39484 lt!39483)))

(assert (=> d!21157 (= (getValueByKey!137 lt!39481 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (=> d!21157 (= lt!39483 (lemmaContainsTupThenGetReturnValue!57 lt!39481 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (=> d!21157 (= lt!39481 (insertStrictlySorted!60 (toList!739 call!7840) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (=> d!21157 (= (+!107 call!7840 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))) lt!39482)))

(declare-fun b!83718 () Bool)

(declare-fun res!43305 () Bool)

(assert (=> b!83718 (=> (not res!43305) (not e!54624))))

(assert (=> b!83718 (= res!43305 (= (getValueByKey!137 (toList!739 lt!39482) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(declare-fun b!83719 () Bool)

(assert (=> b!83719 (= e!54624 (contains!751 (toList!739 lt!39482) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(assert (= (and d!21157 res!43304) b!83718))

(assert (= (and b!83718 res!43305) b!83719))

(declare-fun m!87025 () Bool)

(assert (=> d!21157 m!87025))

(declare-fun m!87027 () Bool)

(assert (=> d!21157 m!87027))

(declare-fun m!87029 () Bool)

(assert (=> d!21157 m!87029))

(declare-fun m!87031 () Bool)

(assert (=> d!21157 m!87031))

(declare-fun m!87033 () Bool)

(assert (=> b!83718 m!87033))

(declare-fun m!87035 () Bool)

(assert (=> b!83719 m!87035))

(assert (=> b!83363 d!21157))

(declare-fun d!21159 () Bool)

(assert (=> d!21159 (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))) lt!39054))))

(declare-fun lt!39485 () Unit!2426)

(assert (=> d!21159 (= lt!39485 (choose!500 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))) lt!39054))))

(declare-fun e!54625 () Bool)

(assert (=> d!21159 e!54625))

(declare-fun res!43306 () Bool)

(assert (=> d!21159 (=> (not res!43306) (not e!54625))))

(assert (=> d!21159 (= res!43306 (isStrictlySorted!292 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052)))))))

(assert (=> d!21159 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))) lt!39054) lt!39485)))

(declare-fun b!83720 () Bool)

(assert (=> b!83720 (= e!54625 (containsKey!141 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))) lt!39054))))

(assert (= (and d!21159 res!43306) b!83720))

(assert (=> d!21159 m!86571))

(assert (=> d!21159 m!86571))

(assert (=> d!21159 m!86573))

(declare-fun m!87037 () Bool)

(assert (=> d!21159 m!87037))

(declare-fun m!87039 () Bool)

(assert (=> d!21159 m!87039))

(assert (=> b!83720 m!86567))

(assert (=> b!83447 d!21159))

(declare-fun d!21161 () Bool)

(assert (=> d!21161 (= (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))) lt!39054)) (not (isEmpty!338 (getValueByKey!137 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))) lt!39054))))))

(declare-fun bs!3532 () Bool)

(assert (= bs!3532 d!21161))

(assert (=> bs!3532 m!86571))

(declare-fun m!87041 () Bool)

(assert (=> bs!3532 m!87041))

(assert (=> b!83447 d!21161))

(declare-fun b!83723 () Bool)

(declare-fun e!54627 () Option!143)

(assert (=> b!83723 (= e!54627 (getValueByKey!137 (t!5214 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052)))) lt!39054))))

(declare-fun d!21163 () Bool)

(declare-fun c!13390 () Bool)

(assert (=> d!21163 (= c!13390 (and ((_ is Cons!1519) (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052)))) (= (_1!1111 (h!2109 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))))) lt!39054)))))

(declare-fun e!54626 () Option!143)

(assert (=> d!21163 (= (getValueByKey!137 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))) lt!39054) e!54626)))

(declare-fun b!83721 () Bool)

(assert (=> b!83721 (= e!54626 (Some!142 (_2!1111 (h!2109 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052)))))))))

(declare-fun b!83724 () Bool)

(assert (=> b!83724 (= e!54627 None!141)))

(declare-fun b!83722 () Bool)

(assert (=> b!83722 (= e!54626 e!54627)))

(declare-fun c!13391 () Bool)

(assert (=> b!83722 (= c!13391 (and ((_ is Cons!1519) (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052)))) (not (= (_1!1111 (h!2109 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))))) lt!39054))))))

(assert (= (and d!21163 c!13390) b!83721))

(assert (= (and d!21163 (not c!13390)) b!83722))

(assert (= (and b!83722 c!13391) b!83723))

(assert (= (and b!83722 (not c!13391)) b!83724))

(declare-fun m!87043 () Bool)

(assert (=> b!83723 m!87043))

(assert (=> b!83447 d!21163))

(declare-fun d!21165 () Bool)

(assert (=> d!21165 (= (inRange!0 (ite c!13349 (index!3117 lt!39380) (ite c!13347 (index!3116 lt!39386) (index!3119 lt!39386))) (mask!6333 newMap!16)) (and (bvsge (ite c!13349 (index!3117 lt!39380) (ite c!13347 (index!3116 lt!39386) (index!3119 lt!39386))) #b00000000000000000000000000000000) (bvslt (ite c!13349 (index!3117 lt!39380) (ite c!13347 (index!3116 lt!39386) (index!3119 lt!39386))) (bvadd (mask!6333 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7859 d!21165))

(declare-fun d!21167 () Bool)

(declare-fun e!54629 () Bool)

(assert (=> d!21167 e!54629))

(declare-fun res!43307 () Bool)

(assert (=> d!21167 (=> res!43307 e!54629)))

(declare-fun lt!39487 () Bool)

(assert (=> d!21167 (= res!43307 (not lt!39487))))

(declare-fun lt!39489 () Bool)

(assert (=> d!21167 (= lt!39487 lt!39489)))

(declare-fun lt!39488 () Unit!2426)

(declare-fun e!54628 () Unit!2426)

(assert (=> d!21167 (= lt!39488 e!54628)))

(declare-fun c!13392 () Bool)

(assert (=> d!21167 (= c!13392 lt!39489)))

(assert (=> d!21167 (= lt!39489 (containsKey!141 (toList!739 lt!39250) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> d!21167 (= (contains!749 lt!39250 (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) lt!39487)))

(declare-fun b!83725 () Bool)

(declare-fun lt!39486 () Unit!2426)

(assert (=> b!83725 (= e!54628 lt!39486)))

(assert (=> b!83725 (= lt!39486 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39250) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> b!83725 (isDefined!91 (getValueByKey!137 (toList!739 lt!39250) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!83726 () Bool)

(declare-fun Unit!2462 () Unit!2426)

(assert (=> b!83726 (= e!54628 Unit!2462)))

(declare-fun b!83727 () Bool)

(assert (=> b!83727 (= e!54629 (isDefined!91 (getValueByKey!137 (toList!739 lt!39250) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21167 c!13392) b!83725))

(assert (= (and d!21167 (not c!13392)) b!83726))

(assert (= (and d!21167 (not res!43307)) b!83727))

(declare-fun m!87045 () Bool)

(assert (=> d!21167 m!87045))

(declare-fun m!87047 () Bool)

(assert (=> b!83725 m!87047))

(assert (=> b!83725 m!86507))

(assert (=> b!83725 m!86507))

(declare-fun m!87049 () Bool)

(assert (=> b!83725 m!87049))

(assert (=> b!83727 m!86507))

(assert (=> b!83727 m!86507))

(assert (=> b!83727 m!87049))

(assert (=> d!21009 d!21167))

(declare-fun e!54631 () Option!143)

(declare-fun b!83730 () Bool)

(assert (=> b!83730 (= e!54631 (getValueByKey!137 (t!5214 lt!39249) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun c!13393 () Bool)

(declare-fun d!21169 () Bool)

(assert (=> d!21169 (= c!13393 (and ((_ is Cons!1519) lt!39249) (= (_1!1111 (h!2109 lt!39249)) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(declare-fun e!54630 () Option!143)

(assert (=> d!21169 (= (getValueByKey!137 lt!39249 (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) e!54630)))

(declare-fun b!83728 () Bool)

(assert (=> b!83728 (= e!54630 (Some!142 (_2!1111 (h!2109 lt!39249))))))

(declare-fun b!83731 () Bool)

(assert (=> b!83731 (= e!54631 None!141)))

(declare-fun b!83729 () Bool)

(assert (=> b!83729 (= e!54630 e!54631)))

(declare-fun c!13394 () Bool)

(assert (=> b!83729 (= c!13394 (and ((_ is Cons!1519) lt!39249) (not (= (_1!1111 (h!2109 lt!39249)) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))))

(assert (= (and d!21169 c!13393) b!83728))

(assert (= (and d!21169 (not c!13393)) b!83729))

(assert (= (and b!83729 c!13394) b!83730))

(assert (= (and b!83729 (not c!13394)) b!83731))

(declare-fun m!87051 () Bool)

(assert (=> b!83730 m!87051))

(assert (=> d!21009 d!21169))

(declare-fun d!21171 () Bool)

(assert (=> d!21171 (= (getValueByKey!137 lt!39249 (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) (Some!142 (_2!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun lt!39490 () Unit!2426)

(assert (=> d!21171 (= lt!39490 (choose!497 lt!39249 (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (_2!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!54632 () Bool)

(assert (=> d!21171 e!54632))

(declare-fun res!43308 () Bool)

(assert (=> d!21171 (=> (not res!43308) (not e!54632))))

(assert (=> d!21171 (= res!43308 (isStrictlySorted!292 lt!39249))))

(assert (=> d!21171 (= (lemmaContainsTupThenGetReturnValue!57 lt!39249 (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (_2!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) lt!39490)))

(declare-fun b!83732 () Bool)

(declare-fun res!43309 () Bool)

(assert (=> b!83732 (=> (not res!43309) (not e!54632))))

(assert (=> b!83732 (= res!43309 (containsKey!141 lt!39249 (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!83733 () Bool)

(assert (=> b!83733 (= e!54632 (contains!751 lt!39249 (tuple2!2201 (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (_2!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21171 res!43308) b!83732))

(assert (= (and b!83732 res!43309) b!83733))

(assert (=> d!21171 m!86501))

(declare-fun m!87053 () Bool)

(assert (=> d!21171 m!87053))

(declare-fun m!87055 () Bool)

(assert (=> d!21171 m!87055))

(declare-fun m!87057 () Bool)

(assert (=> b!83732 m!87057))

(declare-fun m!87059 () Bool)

(assert (=> b!83733 m!87059))

(assert (=> d!21009 d!21171))

(declare-fun b!83734 () Bool)

(declare-fun e!54637 () List!1523)

(declare-fun call!7882 () List!1523)

(assert (=> b!83734 (= e!54637 call!7882)))

(declare-fun lt!39491 () List!1523)

(declare-fun e!54635 () Bool)

(declare-fun b!83735 () Bool)

(assert (=> b!83735 (= e!54635 (contains!751 lt!39491 (tuple2!2201 (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (_2!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(declare-fun c!13395 () Bool)

(declare-fun c!13397 () Bool)

(declare-fun e!54634 () List!1523)

(declare-fun b!83736 () Bool)

(assert (=> b!83736 (= e!54634 (ite c!13397 (t!5214 (toList!739 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726)))) (ite c!13395 (Cons!1519 (h!2109 (toList!739 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726)))) (t!5214 (toList!739 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726))))) Nil!1520)))))

(declare-fun d!21173 () Bool)

(assert (=> d!21173 e!54635))

(declare-fun res!43311 () Bool)

(assert (=> d!21173 (=> (not res!43311) (not e!54635))))

(assert (=> d!21173 (= res!43311 (isStrictlySorted!292 lt!39491))))

(declare-fun e!54636 () List!1523)

(assert (=> d!21173 (= lt!39491 e!54636)))

(declare-fun c!13396 () Bool)

(assert (=> d!21173 (= c!13396 (and ((_ is Cons!1519) (toList!739 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726)))) (bvslt (_1!1111 (h!2109 (toList!739 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726))))) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (=> d!21173 (isStrictlySorted!292 (toList!739 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726))))))

(assert (=> d!21173 (= (insertStrictlySorted!60 (toList!739 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726))) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (_2!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) lt!39491)))

(declare-fun b!83737 () Bool)

(assert (=> b!83737 (= e!54634 (insertStrictlySorted!60 (t!5214 (toList!739 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726)))) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (_2!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun bm!7879 () Bool)

(declare-fun call!7884 () List!1523)

(assert (=> bm!7879 (= call!7882 call!7884)))

(declare-fun b!83738 () Bool)

(declare-fun e!54633 () List!1523)

(declare-fun call!7883 () List!1523)

(assert (=> b!83738 (= e!54633 call!7883)))

(declare-fun b!83739 () Bool)

(assert (=> b!83739 (= e!54636 e!54637)))

(assert (=> b!83739 (= c!13397 (and ((_ is Cons!1519) (toList!739 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726)))) (= (_1!1111 (h!2109 (toList!739 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726))))) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(declare-fun b!83740 () Bool)

(declare-fun res!43310 () Bool)

(assert (=> b!83740 (=> (not res!43310) (not e!54635))))

(assert (=> b!83740 (= res!43310 (containsKey!141 lt!39491 (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun bm!7880 () Bool)

(assert (=> bm!7880 (= call!7883 call!7882)))

(declare-fun b!83741 () Bool)

(assert (=> b!83741 (= e!54636 call!7884)))

(declare-fun b!83742 () Bool)

(assert (=> b!83742 (= e!54633 call!7883)))

(declare-fun b!83743 () Bool)

(assert (=> b!83743 (= c!13395 (and ((_ is Cons!1519) (toList!739 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726)))) (bvsgt (_1!1111 (h!2109 (toList!739 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726))))) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (=> b!83743 (= e!54637 e!54633)))

(declare-fun bm!7881 () Bool)

(assert (=> bm!7881 (= call!7884 ($colon$colon!70 e!54634 (ite c!13396 (h!2109 (toList!739 (ite c!13175 call!7725 (ite c!13178 call!7727 call!7726)))) (tuple2!2201 (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (_2!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))))

(declare-fun c!13398 () Bool)

(assert (=> bm!7881 (= c!13398 c!13396)))

(assert (= (and d!21173 c!13396) b!83741))

(assert (= (and d!21173 (not c!13396)) b!83739))

(assert (= (and b!83739 c!13397) b!83734))

(assert (= (and b!83739 (not c!13397)) b!83743))

(assert (= (and b!83743 c!13395) b!83738))

(assert (= (and b!83743 (not c!13395)) b!83742))

(assert (= (or b!83738 b!83742) bm!7880))

(assert (= (or b!83734 bm!7880) bm!7879))

(assert (= (or b!83741 bm!7879) bm!7881))

(assert (= (and bm!7881 c!13398) b!83737))

(assert (= (and bm!7881 (not c!13398)) b!83736))

(assert (= (and d!21173 res!43311) b!83740))

(assert (= (and b!83740 res!43310) b!83735))

(declare-fun m!87061 () Bool)

(assert (=> bm!7881 m!87061))

(declare-fun m!87063 () Bool)

(assert (=> b!83737 m!87063))

(declare-fun m!87065 () Bool)

(assert (=> d!21173 m!87065))

(declare-fun m!87067 () Bool)

(assert (=> d!21173 m!87067))

(declare-fun m!87069 () Bool)

(assert (=> b!83740 m!87069))

(declare-fun m!87071 () Bool)

(assert (=> b!83735 m!87071))

(assert (=> d!21009 d!21173))

(declare-fun e!54639 () Option!143)

(declare-fun b!83746 () Bool)

(assert (=> b!83746 (= e!54639 (getValueByKey!137 (t!5214 (toList!739 lt!39234)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun d!21175 () Bool)

(declare-fun c!13399 () Bool)

(assert (=> d!21175 (= c!13399 (and ((_ is Cons!1519) (toList!739 lt!39234)) (= (_1!1111 (h!2109 (toList!739 lt!39234))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun e!54638 () Option!143)

(assert (=> d!21175 (= (getValueByKey!137 (toList!739 lt!39234) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) e!54638)))

(declare-fun b!83744 () Bool)

(assert (=> b!83744 (= e!54638 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39234)))))))

(declare-fun b!83747 () Bool)

(assert (=> b!83747 (= e!54639 None!141)))

(declare-fun b!83745 () Bool)

(assert (=> b!83745 (= e!54638 e!54639)))

(declare-fun c!13400 () Bool)

(assert (=> b!83745 (= c!13400 (and ((_ is Cons!1519) (toList!739 lt!39234)) (not (= (_1!1111 (h!2109 (toList!739 lt!39234))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(assert (= (and d!21175 c!13399) b!83744))

(assert (= (and d!21175 (not c!13399)) b!83745))

(assert (= (and b!83745 c!13400) b!83746))

(assert (= (and b!83745 (not c!13400)) b!83747))

(declare-fun m!87073 () Bool)

(assert (=> b!83746 m!87073))

(assert (=> b!83413 d!21175))

(declare-fun d!21177 () Bool)

(declare-fun e!54641 () Bool)

(assert (=> d!21177 e!54641))

(declare-fun res!43312 () Bool)

(assert (=> d!21177 (=> res!43312 e!54641)))

(declare-fun lt!39493 () Bool)

(assert (=> d!21177 (= res!43312 (not lt!39493))))

(declare-fun lt!39495 () Bool)

(assert (=> d!21177 (= lt!39493 lt!39495)))

(declare-fun lt!39494 () Unit!2426)

(declare-fun e!54640 () Unit!2426)

(assert (=> d!21177 (= lt!39494 e!54640)))

(declare-fun c!13401 () Bool)

(assert (=> d!21177 (= c!13401 lt!39495)))

(assert (=> d!21177 (= lt!39495 (containsKey!141 (toList!739 lt!39168) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21177 (= (contains!749 lt!39168 (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39493)))

(declare-fun b!83748 () Bool)

(declare-fun lt!39492 () Unit!2426)

(assert (=> b!83748 (= e!54640 lt!39492)))

(assert (=> b!83748 (= lt!39492 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39168) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> b!83748 (isDefined!91 (getValueByKey!137 (toList!739 lt!39168) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!83749 () Bool)

(declare-fun Unit!2463 () Unit!2426)

(assert (=> b!83749 (= e!54640 Unit!2463)))

(declare-fun b!83750 () Bool)

(assert (=> b!83750 (= e!54641 (isDefined!91 (getValueByKey!137 (toList!739 lt!39168) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21177 c!13401) b!83748))

(assert (= (and d!21177 (not c!13401)) b!83749))

(assert (= (and d!21177 (not res!43312)) b!83750))

(declare-fun m!87075 () Bool)

(assert (=> d!21177 m!87075))

(declare-fun m!87077 () Bool)

(assert (=> b!83748 m!87077))

(assert (=> b!83748 m!86281))

(assert (=> b!83748 m!86281))

(declare-fun m!87079 () Bool)

(assert (=> b!83748 m!87079))

(assert (=> b!83750 m!86281))

(assert (=> b!83750 m!86281))

(assert (=> b!83750 m!87079))

(assert (=> d!20953 d!21177))

(declare-fun b!83753 () Bool)

(declare-fun e!54643 () Option!143)

(assert (=> b!83753 (= e!54643 (getValueByKey!137 (t!5214 lt!39167) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun c!13402 () Bool)

(declare-fun d!21179 () Bool)

(assert (=> d!21179 (= c!13402 (and ((_ is Cons!1519) lt!39167) (= (_1!1111 (h!2109 lt!39167)) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!54642 () Option!143)

(assert (=> d!21179 (= (getValueByKey!137 lt!39167 (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!54642)))

(declare-fun b!83751 () Bool)

(assert (=> b!83751 (= e!54642 (Some!142 (_2!1111 (h!2109 lt!39167))))))

(declare-fun b!83754 () Bool)

(assert (=> b!83754 (= e!54643 None!141)))

(declare-fun b!83752 () Bool)

(assert (=> b!83752 (= e!54642 e!54643)))

(declare-fun c!13403 () Bool)

(assert (=> b!83752 (= c!13403 (and ((_ is Cons!1519) lt!39167) (not (= (_1!1111 (h!2109 lt!39167)) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21179 c!13402) b!83751))

(assert (= (and d!21179 (not c!13402)) b!83752))

(assert (= (and b!83752 c!13403) b!83753))

(assert (= (and b!83752 (not c!13403)) b!83754))

(declare-fun m!87081 () Bool)

(assert (=> b!83753 m!87081))

(assert (=> d!20953 d!21179))

(declare-fun d!21181 () Bool)

(assert (=> d!21181 (= (getValueByKey!137 lt!39167 (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39496 () Unit!2426)

(assert (=> d!21181 (= lt!39496 (choose!497 lt!39167 (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun e!54644 () Bool)

(assert (=> d!21181 e!54644))

(declare-fun res!43313 () Bool)

(assert (=> d!21181 (=> (not res!43313) (not e!54644))))

(assert (=> d!21181 (= res!43313 (isStrictlySorted!292 lt!39167))))

(assert (=> d!21181 (= (lemmaContainsTupThenGetReturnValue!57 lt!39167 (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39496)))

(declare-fun b!83755 () Bool)

(declare-fun res!43314 () Bool)

(assert (=> b!83755 (=> (not res!43314) (not e!54644))))

(assert (=> b!83755 (= res!43314 (containsKey!141 lt!39167 (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!83756 () Bool)

(assert (=> b!83756 (= e!54644 (contains!751 lt!39167 (tuple2!2201 (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21181 res!43313) b!83755))

(assert (= (and b!83755 res!43314) b!83756))

(assert (=> d!21181 m!86275))

(declare-fun m!87083 () Bool)

(assert (=> d!21181 m!87083))

(declare-fun m!87085 () Bool)

(assert (=> d!21181 m!87085))

(declare-fun m!87087 () Bool)

(assert (=> b!83755 m!87087))

(declare-fun m!87089 () Bool)

(assert (=> b!83756 m!87089))

(assert (=> d!20953 d!21181))

(declare-fun b!83757 () Bool)

(declare-fun e!54649 () List!1523)

(declare-fun call!7885 () List!1523)

(assert (=> b!83757 (= e!54649 call!7885)))

(declare-fun lt!39497 () List!1523)

(declare-fun b!83758 () Bool)

(declare-fun e!54647 () Bool)

(assert (=> b!83758 (= e!54647 (contains!751 lt!39497 (tuple2!2201 (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun c!13404 () Bool)

(declare-fun c!13406 () Bool)

(declare-fun b!83759 () Bool)

(declare-fun e!54646 () List!1523)

(assert (=> b!83759 (= e!54646 (ite c!13406 (t!5214 (toList!739 lt!38912)) (ite c!13404 (Cons!1519 (h!2109 (toList!739 lt!38912)) (t!5214 (toList!739 lt!38912))) Nil!1520)))))

(declare-fun d!21183 () Bool)

(assert (=> d!21183 e!54647))

(declare-fun res!43316 () Bool)

(assert (=> d!21183 (=> (not res!43316) (not e!54647))))

(assert (=> d!21183 (= res!43316 (isStrictlySorted!292 lt!39497))))

(declare-fun e!54648 () List!1523)

(assert (=> d!21183 (= lt!39497 e!54648)))

(declare-fun c!13405 () Bool)

(assert (=> d!21183 (= c!13405 (and ((_ is Cons!1519) (toList!739 lt!38912)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38912))) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> d!21183 (isStrictlySorted!292 (toList!739 lt!38912))))

(assert (=> d!21183 (= (insertStrictlySorted!60 (toList!739 lt!38912) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39497)))

(declare-fun b!83760 () Bool)

(assert (=> b!83760 (= e!54646 (insertStrictlySorted!60 (t!5214 (toList!739 lt!38912)) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7882 () Bool)

(declare-fun call!7887 () List!1523)

(assert (=> bm!7882 (= call!7885 call!7887)))

(declare-fun b!83761 () Bool)

(declare-fun e!54645 () List!1523)

(declare-fun call!7886 () List!1523)

(assert (=> b!83761 (= e!54645 call!7886)))

(declare-fun b!83762 () Bool)

(assert (=> b!83762 (= e!54648 e!54649)))

(assert (=> b!83762 (= c!13406 (and ((_ is Cons!1519) (toList!739 lt!38912)) (= (_1!1111 (h!2109 (toList!739 lt!38912))) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!83763 () Bool)

(declare-fun res!43315 () Bool)

(assert (=> b!83763 (=> (not res!43315) (not e!54647))))

(assert (=> b!83763 (= res!43315 (containsKey!141 lt!39497 (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7883 () Bool)

(assert (=> bm!7883 (= call!7886 call!7885)))

(declare-fun b!83764 () Bool)

(assert (=> b!83764 (= e!54648 call!7887)))

(declare-fun b!83765 () Bool)

(assert (=> b!83765 (= e!54645 call!7886)))

(declare-fun b!83766 () Bool)

(assert (=> b!83766 (= c!13404 (and ((_ is Cons!1519) (toList!739 lt!38912)) (bvsgt (_1!1111 (h!2109 (toList!739 lt!38912))) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> b!83766 (= e!54649 e!54645)))

(declare-fun bm!7884 () Bool)

(assert (=> bm!7884 (= call!7887 ($colon$colon!70 e!54646 (ite c!13405 (h!2109 (toList!739 lt!38912)) (tuple2!2201 (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(declare-fun c!13407 () Bool)

(assert (=> bm!7884 (= c!13407 c!13405)))

(assert (= (and d!21183 c!13405) b!83764))

(assert (= (and d!21183 (not c!13405)) b!83762))

(assert (= (and b!83762 c!13406) b!83757))

(assert (= (and b!83762 (not c!13406)) b!83766))

(assert (= (and b!83766 c!13404) b!83761))

(assert (= (and b!83766 (not c!13404)) b!83765))

(assert (= (or b!83761 b!83765) bm!7883))

(assert (= (or b!83757 bm!7883) bm!7882))

(assert (= (or b!83764 bm!7882) bm!7884))

(assert (= (and bm!7884 c!13407) b!83760))

(assert (= (and bm!7884 (not c!13407)) b!83759))

(assert (= (and d!21183 res!43316) b!83763))

(assert (= (and b!83763 res!43315) b!83758))

(declare-fun m!87091 () Bool)

(assert (=> bm!7884 m!87091))

(declare-fun m!87093 () Bool)

(assert (=> b!83760 m!87093))

(declare-fun m!87095 () Bool)

(assert (=> d!21183 m!87095))

(declare-fun m!87097 () Bool)

(assert (=> d!21183 m!87097))

(declare-fun m!87099 () Bool)

(assert (=> b!83763 m!87099))

(declare-fun m!87101 () Bool)

(assert (=> b!83758 m!87101))

(assert (=> d!20953 d!21183))

(declare-fun d!21185 () Bool)

(declare-fun res!43317 () Bool)

(declare-fun e!54650 () Bool)

(assert (=> d!21185 (=> res!43317 e!54650)))

(assert (=> d!21185 (= res!43317 (and ((_ is Cons!1519) lt!39186) (= (_1!1111 (h!2109 lt!39186)) (_1!1111 lt!38742))))))

(assert (=> d!21185 (= (containsKey!141 lt!39186 (_1!1111 lt!38742)) e!54650)))

(declare-fun b!83767 () Bool)

(declare-fun e!54651 () Bool)

(assert (=> b!83767 (= e!54650 e!54651)))

(declare-fun res!43318 () Bool)

(assert (=> b!83767 (=> (not res!43318) (not e!54651))))

(assert (=> b!83767 (= res!43318 (and (or (not ((_ is Cons!1519) lt!39186)) (bvsle (_1!1111 (h!2109 lt!39186)) (_1!1111 lt!38742))) ((_ is Cons!1519) lt!39186) (bvslt (_1!1111 (h!2109 lt!39186)) (_1!1111 lt!38742))))))

(declare-fun b!83768 () Bool)

(assert (=> b!83768 (= e!54651 (containsKey!141 (t!5214 lt!39186) (_1!1111 lt!38742)))))

(assert (= (and d!21185 (not res!43317)) b!83767))

(assert (= (and b!83767 res!43318) b!83768))

(declare-fun m!87103 () Bool)

(assert (=> b!83768 m!87103))

(assert (=> b!83334 d!21185))

(declare-fun d!21187 () Bool)

(assert (=> d!21187 (= (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83261 d!21187))

(declare-fun c!13408 () Bool)

(declare-fun call!7888 () Bool)

(declare-fun bm!7885 () Bool)

(assert (=> bm!7885 (= call!7888 (arrayNoDuplicates!0 (_keys!3983 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13408 (Cons!1518 (select (arr!1900 (_keys!3983 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!13241 (Cons!1518 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) Nil!1519) Nil!1519)) (ite c!13241 (Cons!1518 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) Nil!1519) Nil!1519))))))

(declare-fun d!21189 () Bool)

(declare-fun res!43321 () Bool)

(declare-fun e!54653 () Bool)

(assert (=> d!21189 (=> res!43321 e!54653)))

(assert (=> d!21189 (= res!43321 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2144 (_keys!3983 newMap!16))))))

(assert (=> d!21189 (= (arrayNoDuplicates!0 (_keys!3983 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13241 (Cons!1518 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) Nil!1519) Nil!1519)) e!54653)))

(declare-fun b!83769 () Bool)

(declare-fun e!54654 () Bool)

(assert (=> b!83769 (= e!54654 call!7888)))

(declare-fun b!83770 () Bool)

(assert (=> b!83770 (= e!54654 call!7888)))

(declare-fun b!83771 () Bool)

(declare-fun e!54655 () Bool)

(assert (=> b!83771 (= e!54655 (contains!750 (ite c!13241 (Cons!1518 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) Nil!1519) Nil!1519) (select (arr!1900 (_keys!3983 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!83772 () Bool)

(declare-fun e!54652 () Bool)

(assert (=> b!83772 (= e!54652 e!54654)))

(assert (=> b!83772 (= c!13408 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!83773 () Bool)

(assert (=> b!83773 (= e!54653 e!54652)))

(declare-fun res!43320 () Bool)

(assert (=> b!83773 (=> (not res!43320) (not e!54652))))

(assert (=> b!83773 (= res!43320 (not e!54655))))

(declare-fun res!43319 () Bool)

(assert (=> b!83773 (=> (not res!43319) (not e!54655))))

(assert (=> b!83773 (= res!43319 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!21189 (not res!43321)) b!83773))

(assert (= (and b!83773 res!43319) b!83771))

(assert (= (and b!83773 res!43320) b!83772))

(assert (= (and b!83772 c!13408) b!83769))

(assert (= (and b!83772 (not c!13408)) b!83770))

(assert (= (or b!83769 b!83770) bm!7885))

(declare-fun m!87105 () Bool)

(assert (=> bm!7885 m!87105))

(declare-fun m!87107 () Bool)

(assert (=> bm!7885 m!87107))

(assert (=> b!83771 m!87105))

(assert (=> b!83771 m!87105))

(declare-fun m!87109 () Bool)

(assert (=> b!83771 m!87109))

(assert (=> b!83772 m!87105))

(assert (=> b!83772 m!87105))

(declare-fun m!87111 () Bool)

(assert (=> b!83772 m!87111))

(assert (=> b!83773 m!87105))

(assert (=> b!83773 m!87105))

(assert (=> b!83773 m!87111))

(assert (=> bm!7804 d!21189))

(declare-fun d!21191 () Bool)

(assert (=> d!21191 (= (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83293 d!21191))

(declare-fun d!21193 () Bool)

(assert (=> d!21193 (= (isDefined!91 (getValueByKey!137 (toList!739 lt!39053) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!338 (getValueByKey!137 (toList!739 lt!39053) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3533 () Bool)

(assert (= bs!3533 d!21193))

(assert (=> bs!3533 m!86515))

(declare-fun m!87113 () Bool)

(assert (=> bs!3533 m!87113))

(assert (=> b!83425 d!21193))

(declare-fun b!83776 () Bool)

(declare-fun e!54657 () Option!143)

(assert (=> b!83776 (= e!54657 (getValueByKey!137 (t!5214 (toList!739 lt!39053)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!13409 () Bool)

(declare-fun d!21195 () Bool)

(assert (=> d!21195 (= c!13409 (and ((_ is Cons!1519) (toList!739 lt!39053)) (= (_1!1111 (h!2109 (toList!739 lt!39053))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!54656 () Option!143)

(assert (=> d!21195 (= (getValueByKey!137 (toList!739 lt!39053) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!54656)))

(declare-fun b!83774 () Bool)

(assert (=> b!83774 (= e!54656 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39053)))))))

(declare-fun b!83777 () Bool)

(assert (=> b!83777 (= e!54657 None!141)))

(declare-fun b!83775 () Bool)

(assert (=> b!83775 (= e!54656 e!54657)))

(declare-fun c!13410 () Bool)

(assert (=> b!83775 (= c!13410 (and ((_ is Cons!1519) (toList!739 lt!39053)) (not (= (_1!1111 (h!2109 (toList!739 lt!39053))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!21195 c!13409) b!83774))

(assert (= (and d!21195 (not c!13409)) b!83775))

(assert (= (and b!83775 c!13410) b!83776))

(assert (= (and b!83775 (not c!13410)) b!83777))

(assert (=> b!83776 m!85767))

(declare-fun m!87115 () Bool)

(assert (=> b!83776 m!87115))

(assert (=> b!83425 d!21195))

(declare-fun d!21197 () Bool)

(assert (=> d!21197 (isDefined!91 (getValueByKey!137 (toList!739 lt!39072) (_1!1111 lt!38738)))))

(declare-fun lt!39498 () Unit!2426)

(assert (=> d!21197 (= lt!39498 (choose!500 (toList!739 lt!39072) (_1!1111 lt!38738)))))

(declare-fun e!54658 () Bool)

(assert (=> d!21197 e!54658))

(declare-fun res!43322 () Bool)

(assert (=> d!21197 (=> (not res!43322) (not e!54658))))

(assert (=> d!21197 (= res!43322 (isStrictlySorted!292 (toList!739 lt!39072)))))

(assert (=> d!21197 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39072) (_1!1111 lt!38738)) lt!39498)))

(declare-fun b!83778 () Bool)

(assert (=> b!83778 (= e!54658 (containsKey!141 (toList!739 lt!39072) (_1!1111 lt!38738)))))

(assert (= (and d!21197 res!43322) b!83778))

(assert (=> d!21197 m!85995))

(assert (=> d!21197 m!85995))

(assert (=> d!21197 m!86657))

(declare-fun m!87117 () Bool)

(assert (=> d!21197 m!87117))

(declare-fun m!87119 () Bool)

(assert (=> d!21197 m!87119))

(assert (=> b!83778 m!86653))

(assert (=> b!83471 d!21197))

(declare-fun d!21199 () Bool)

(assert (=> d!21199 (= (isDefined!91 (getValueByKey!137 (toList!739 lt!39072) (_1!1111 lt!38738))) (not (isEmpty!338 (getValueByKey!137 (toList!739 lt!39072) (_1!1111 lt!38738)))))))

(declare-fun bs!3534 () Bool)

(assert (= bs!3534 d!21199))

(assert (=> bs!3534 m!85995))

(declare-fun m!87121 () Bool)

(assert (=> bs!3534 m!87121))

(assert (=> b!83471 d!21199))

(assert (=> b!83471 d!20979))

(declare-fun d!21201 () Bool)

(declare-fun e!54660 () Bool)

(assert (=> d!21201 e!54660))

(declare-fun res!43323 () Bool)

(assert (=> d!21201 (=> res!43323 e!54660)))

(declare-fun lt!39500 () Bool)

(assert (=> d!21201 (= res!43323 (not lt!39500))))

(declare-fun lt!39502 () Bool)

(assert (=> d!21201 (= lt!39500 lt!39502)))

(declare-fun lt!39501 () Unit!2426)

(declare-fun e!54659 () Unit!2426)

(assert (=> d!21201 (= lt!39501 e!54659)))

(declare-fun c!13411 () Bool)

(assert (=> d!21201 (= c!13411 lt!39502)))

(assert (=> d!21201 (= lt!39502 (containsKey!141 (toList!739 lt!39234) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21201 (= (contains!749 lt!39234 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!39500)))

(declare-fun b!83779 () Bool)

(declare-fun lt!39499 () Unit!2426)

(assert (=> b!83779 (= e!54659 lt!39499)))

(assert (=> b!83779 (= lt!39499 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39234) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> b!83779 (isDefined!91 (getValueByKey!137 (toList!739 lt!39234) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun b!83780 () Bool)

(declare-fun Unit!2464 () Unit!2426)

(assert (=> b!83780 (= e!54659 Unit!2464)))

(declare-fun b!83781 () Bool)

(assert (=> b!83781 (= e!54660 (isDefined!91 (getValueByKey!137 (toList!739 lt!39234) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (= (and d!21201 c!13411) b!83779))

(assert (= (and d!21201 (not c!13411)) b!83780))

(assert (= (and d!21201 (not res!43323)) b!83781))

(declare-fun m!87123 () Bool)

(assert (=> d!21201 m!87123))

(declare-fun m!87125 () Bool)

(assert (=> b!83779 m!87125))

(assert (=> b!83779 m!86459))

(assert (=> b!83779 m!86459))

(declare-fun m!87127 () Bool)

(assert (=> b!83779 m!87127))

(assert (=> b!83781 m!86459))

(assert (=> b!83781 m!86459))

(assert (=> b!83781 m!87127))

(assert (=> d!21001 d!21201))

(declare-fun b!83784 () Bool)

(declare-fun e!54662 () Option!143)

(assert (=> b!83784 (= e!54662 (getValueByKey!137 (t!5214 lt!39233) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun c!13412 () Bool)

(declare-fun d!21203 () Bool)

(assert (=> d!21203 (= c!13412 (and ((_ is Cons!1519) lt!39233) (= (_1!1111 (h!2109 lt!39233)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun e!54661 () Option!143)

(assert (=> d!21203 (= (getValueByKey!137 lt!39233 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) e!54661)))

(declare-fun b!83782 () Bool)

(assert (=> b!83782 (= e!54661 (Some!142 (_2!1111 (h!2109 lt!39233))))))

(declare-fun b!83785 () Bool)

(assert (=> b!83785 (= e!54662 None!141)))

(declare-fun b!83783 () Bool)

(assert (=> b!83783 (= e!54661 e!54662)))

(declare-fun c!13413 () Bool)

(assert (=> b!83783 (= c!13413 (and ((_ is Cons!1519) lt!39233) (not (= (_1!1111 (h!2109 lt!39233)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(assert (= (and d!21203 c!13412) b!83782))

(assert (= (and d!21203 (not c!13412)) b!83783))

(assert (= (and b!83783 c!13413) b!83784))

(assert (= (and b!83783 (not c!13413)) b!83785))

(declare-fun m!87129 () Bool)

(assert (=> b!83784 m!87129))

(assert (=> d!21001 d!21203))

(declare-fun d!21205 () Bool)

(assert (=> d!21205 (= (getValueByKey!137 lt!39233 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun lt!39503 () Unit!2426)

(assert (=> d!21205 (= lt!39503 (choose!497 lt!39233 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun e!54663 () Bool)

(assert (=> d!21205 e!54663))

(declare-fun res!43324 () Bool)

(assert (=> d!21205 (=> (not res!43324) (not e!54663))))

(assert (=> d!21205 (= res!43324 (isStrictlySorted!292 lt!39233))))

(assert (=> d!21205 (= (lemmaContainsTupThenGetReturnValue!57 lt!39233 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!39503)))

(declare-fun b!83786 () Bool)

(declare-fun res!43325 () Bool)

(assert (=> b!83786 (=> (not res!43325) (not e!54663))))

(assert (=> b!83786 (= res!43325 (containsKey!141 lt!39233 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun b!83787 () Bool)

(assert (=> b!83787 (= e!54663 (contains!751 lt!39233 (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (= (and d!21205 res!43324) b!83786))

(assert (= (and b!83786 res!43325) b!83787))

(assert (=> d!21205 m!86453))

(declare-fun m!87131 () Bool)

(assert (=> d!21205 m!87131))

(declare-fun m!87133 () Bool)

(assert (=> d!21205 m!87133))

(declare-fun m!87135 () Bool)

(assert (=> b!83786 m!87135))

(declare-fun m!87137 () Bool)

(assert (=> b!83787 m!87137))

(assert (=> d!21001 d!21205))

(declare-fun b!83788 () Bool)

(declare-fun e!54668 () List!1523)

(declare-fun call!7889 () List!1523)

(assert (=> b!83788 (= e!54668 call!7889)))

(declare-fun lt!39504 () List!1523)

(declare-fun e!54666 () Bool)

(declare-fun b!83789 () Bool)

(assert (=> b!83789 (= e!54666 (contains!751 lt!39504 (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!83790 () Bool)

(declare-fun e!54665 () List!1523)

(declare-fun c!13414 () Bool)

(declare-fun c!13416 () Bool)

(assert (=> b!83790 (= e!54665 (ite c!13416 (t!5214 (toList!739 lt!38728)) (ite c!13414 (Cons!1519 (h!2109 (toList!739 lt!38728)) (t!5214 (toList!739 lt!38728))) Nil!1520)))))

(declare-fun d!21207 () Bool)

(assert (=> d!21207 e!54666))

(declare-fun res!43327 () Bool)

(assert (=> d!21207 (=> (not res!43327) (not e!54666))))

(assert (=> d!21207 (= res!43327 (isStrictlySorted!292 lt!39504))))

(declare-fun e!54667 () List!1523)

(assert (=> d!21207 (= lt!39504 e!54667)))

(declare-fun c!13415 () Bool)

(assert (=> d!21207 (= c!13415 (and ((_ is Cons!1519) (toList!739 lt!38728)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38728))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (=> d!21207 (isStrictlySorted!292 (toList!739 lt!38728))))

(assert (=> d!21207 (= (insertStrictlySorted!60 (toList!739 lt!38728) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!39504)))

(declare-fun b!83791 () Bool)

(assert (=> b!83791 (= e!54665 (insertStrictlySorted!60 (t!5214 (toList!739 lt!38728)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun bm!7886 () Bool)

(declare-fun call!7891 () List!1523)

(assert (=> bm!7886 (= call!7889 call!7891)))

(declare-fun b!83792 () Bool)

(declare-fun e!54664 () List!1523)

(declare-fun call!7890 () List!1523)

(assert (=> b!83792 (= e!54664 call!7890)))

(declare-fun b!83793 () Bool)

(assert (=> b!83793 (= e!54667 e!54668)))

(assert (=> b!83793 (= c!13416 (and ((_ is Cons!1519) (toList!739 lt!38728)) (= (_1!1111 (h!2109 (toList!739 lt!38728))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!83794 () Bool)

(declare-fun res!43326 () Bool)

(assert (=> b!83794 (=> (not res!43326) (not e!54666))))

(assert (=> b!83794 (= res!43326 (containsKey!141 lt!39504 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun bm!7887 () Bool)

(assert (=> bm!7887 (= call!7890 call!7889)))

(declare-fun b!83795 () Bool)

(assert (=> b!83795 (= e!54667 call!7891)))

(declare-fun b!83796 () Bool)

(assert (=> b!83796 (= e!54664 call!7890)))

(declare-fun b!83797 () Bool)

(assert (=> b!83797 (= c!13414 (and ((_ is Cons!1519) (toList!739 lt!38728)) (bvsgt (_1!1111 (h!2109 (toList!739 lt!38728))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (=> b!83797 (= e!54668 e!54664)))

(declare-fun bm!7888 () Bool)

(assert (=> bm!7888 (= call!7891 ($colon$colon!70 e!54665 (ite c!13415 (h!2109 (toList!739 lt!38728)) (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(declare-fun c!13417 () Bool)

(assert (=> bm!7888 (= c!13417 c!13415)))

(assert (= (and d!21207 c!13415) b!83795))

(assert (= (and d!21207 (not c!13415)) b!83793))

(assert (= (and b!83793 c!13416) b!83788))

(assert (= (and b!83793 (not c!13416)) b!83797))

(assert (= (and b!83797 c!13414) b!83792))

(assert (= (and b!83797 (not c!13414)) b!83796))

(assert (= (or b!83792 b!83796) bm!7887))

(assert (= (or b!83788 bm!7887) bm!7886))

(assert (= (or b!83795 bm!7886) bm!7888))

(assert (= (and bm!7888 c!13417) b!83791))

(assert (= (and bm!7888 (not c!13417)) b!83790))

(assert (= (and d!21207 res!43327) b!83794))

(assert (= (and b!83794 res!43326) b!83789))

(declare-fun m!87139 () Bool)

(assert (=> bm!7888 m!87139))

(declare-fun m!87141 () Bool)

(assert (=> b!83791 m!87141))

(declare-fun m!87143 () Bool)

(assert (=> d!21207 m!87143))

(assert (=> d!21207 m!86321))

(declare-fun m!87145 () Bool)

(assert (=> b!83794 m!87145))

(declare-fun m!87147 () Bool)

(assert (=> b!83789 m!87147))

(assert (=> d!21001 d!21207))

(declare-fun d!21209 () Bool)

(assert (=> d!21209 (= (get!1196 (getValueByKey!137 (toList!739 (+!107 lt!38908 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38913)) (v!2628 (getValueByKey!137 (toList!739 (+!107 lt!38908 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38913)))))

(assert (=> d!20933 d!21209))

(declare-fun b!83800 () Bool)

(declare-fun e!54670 () Option!143)

(assert (=> b!83800 (= e!54670 (getValueByKey!137 (t!5214 (toList!739 (+!107 lt!38908 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) lt!38913))))

(declare-fun d!21211 () Bool)

(declare-fun c!13418 () Bool)

(assert (=> d!21211 (= c!13418 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38908 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) (= (_1!1111 (h!2109 (toList!739 (+!107 lt!38908 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))) lt!38913)))))

(declare-fun e!54669 () Option!143)

(assert (=> d!21211 (= (getValueByKey!137 (toList!739 (+!107 lt!38908 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38913) e!54669)))

(declare-fun b!83798 () Bool)

(assert (=> b!83798 (= e!54669 (Some!142 (_2!1111 (h!2109 (toList!739 (+!107 lt!38908 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))))

(declare-fun b!83801 () Bool)

(assert (=> b!83801 (= e!54670 None!141)))

(declare-fun b!83799 () Bool)

(assert (=> b!83799 (= e!54669 e!54670)))

(declare-fun c!13419 () Bool)

(assert (=> b!83799 (= c!13419 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38908 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) (not (= (_1!1111 (h!2109 (toList!739 (+!107 lt!38908 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))) lt!38913))))))

(assert (= (and d!21211 c!13418) b!83798))

(assert (= (and d!21211 (not c!13418)) b!83799))

(assert (= (and b!83799 c!13419) b!83800))

(assert (= (and b!83799 (not c!13419)) b!83801))

(declare-fun m!87149 () Bool)

(assert (=> b!83800 m!87149))

(assert (=> d!20933 d!21211))

(declare-fun d!21213 () Bool)

(assert (=> d!21213 (isDefined!91 (getValueByKey!137 (toList!739 lt!39068) (_1!1111 lt!38729)))))

(declare-fun lt!39505 () Unit!2426)

(assert (=> d!21213 (= lt!39505 (choose!500 (toList!739 lt!39068) (_1!1111 lt!38729)))))

(declare-fun e!54671 () Bool)

(assert (=> d!21213 e!54671))

(declare-fun res!43328 () Bool)

(assert (=> d!21213 (=> (not res!43328) (not e!54671))))

(assert (=> d!21213 (= res!43328 (isStrictlySorted!292 (toList!739 lt!39068)))))

(assert (=> d!21213 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39068) (_1!1111 lt!38729)) lt!39505)))

(declare-fun b!83802 () Bool)

(assert (=> b!83802 (= e!54671 (containsKey!141 (toList!739 lt!39068) (_1!1111 lt!38729)))))

(assert (= (and d!21213 res!43328) b!83802))

(assert (=> d!21213 m!85983))

(assert (=> d!21213 m!85983))

(assert (=> d!21213 m!86701))

(declare-fun m!87151 () Bool)

(assert (=> d!21213 m!87151))

(declare-fun m!87153 () Bool)

(assert (=> d!21213 m!87153))

(assert (=> b!83802 m!86697))

(assert (=> b!83504 d!21213))

(declare-fun d!21215 () Bool)

(assert (=> d!21215 (= (isDefined!91 (getValueByKey!137 (toList!739 lt!39068) (_1!1111 lt!38729))) (not (isEmpty!338 (getValueByKey!137 (toList!739 lt!39068) (_1!1111 lt!38729)))))))

(declare-fun bs!3535 () Bool)

(assert (= bs!3535 d!21215))

(assert (=> bs!3535 m!85983))

(declare-fun m!87155 () Bool)

(assert (=> bs!3535 m!87155))

(assert (=> b!83504 d!21215))

(assert (=> b!83504 d!20981))

(declare-fun d!21217 () Bool)

(declare-fun c!13422 () Bool)

(assert (=> d!21217 (= c!13422 ((_ is Nil!1520) (toList!739 lt!39072)))))

(declare-fun e!54674 () (InoxSet tuple2!2200))

(assert (=> d!21217 (= (content!87 (toList!739 lt!39072)) e!54674)))

(declare-fun b!83807 () Bool)

(assert (=> b!83807 (= e!54674 ((as const (Array tuple2!2200 Bool)) false))))

(declare-fun b!83808 () Bool)

(assert (=> b!83808 (= e!54674 ((_ map or) (store ((as const (Array tuple2!2200 Bool)) false) (h!2109 (toList!739 lt!39072)) true) (content!87 (t!5214 (toList!739 lt!39072)))))))

(assert (= (and d!21217 c!13422) b!83807))

(assert (= (and d!21217 (not c!13422)) b!83808))

(declare-fun m!87157 () Bool)

(assert (=> b!83808 m!87157))

(declare-fun m!87159 () Bool)

(assert (=> b!83808 m!87159))

(assert (=> d!21133 d!21217))

(declare-fun d!21219 () Bool)

(assert (=> d!21219 (= ($colon$colon!70 e!54428 (ite c!13306 (h!2109 (toList!739 lt!38731)) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738)))) (Cons!1519 (ite c!13306 (h!2109 (toList!739 lt!38731)) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))) e!54428))))

(assert (=> bm!7841 d!21219))

(declare-fun b!83809 () Bool)

(declare-fun e!54675 () (_ BitVec 32))

(assert (=> b!83809 (= e!54675 #b00000000000000000000000000000000)))

(declare-fun d!21221 () Bool)

(declare-fun lt!39506 () (_ BitVec 32))

(assert (=> d!21221 (and (bvsge lt!39506 #b00000000000000000000000000000000) (bvsle lt!39506 (bvsub (size!2144 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000)))))

(assert (=> d!21221 (= lt!39506 e!54675)))

(declare-fun c!13423 () Bool)

(assert (=> d!21221 (= c!13423 (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 (_2!1112 lt!39016)))))))

(assert (=> d!21221 (and (bvsle #b00000000000000000000000000000000 (size!2144 (_keys!3983 (_2!1112 lt!39016)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2144 (_keys!3983 (_2!1112 lt!39016))) (size!2144 (_keys!3983 (_2!1112 lt!39016)))))))

(assert (=> d!21221 (= (arrayCountValidKeys!0 (_keys!3983 (_2!1112 lt!39016)) #b00000000000000000000000000000000 (size!2144 (_keys!3983 (_2!1112 lt!39016)))) lt!39506)))

(declare-fun b!83810 () Bool)

(declare-fun e!54676 () (_ BitVec 32))

(assert (=> b!83810 (= e!54675 e!54676)))

(declare-fun c!13424 () Bool)

(assert (=> b!83810 (= c!13424 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000)))))

(declare-fun b!83811 () Bool)

(declare-fun call!7892 () (_ BitVec 32))

(assert (=> b!83811 (= e!54676 call!7892)))

(declare-fun bm!7889 () Bool)

(assert (=> bm!7889 (= call!7892 (arrayCountValidKeys!0 (_keys!3983 (_2!1112 lt!39016)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (_2!1112 lt!39016)))))))

(declare-fun b!83812 () Bool)

(assert (=> b!83812 (= e!54676 (bvadd #b00000000000000000000000000000001 call!7892))))

(assert (= (and d!21221 c!13423) b!83809))

(assert (= (and d!21221 (not c!13423)) b!83810))

(assert (= (and b!83810 c!13424) b!83812))

(assert (= (and b!83810 (not c!13424)) b!83811))

(assert (= (or b!83812 b!83811) bm!7889))

(declare-fun m!87161 () Bool)

(assert (=> b!83810 m!87161))

(assert (=> b!83810 m!87161))

(declare-fun m!87163 () Bool)

(assert (=> b!83810 m!87163))

(declare-fun m!87165 () Bool)

(assert (=> bm!7889 m!87165))

(assert (=> b!83432 d!21221))

(declare-fun b!83813 () Bool)

(declare-fun e!54681 () Bool)

(declare-fun lt!39511 () ListLongMap!1447)

(assert (=> b!83813 (= e!54681 (= lt!39511 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2316 newMap!16))))))

(declare-fun d!21223 () Bool)

(declare-fun e!54678 () Bool)

(assert (=> d!21223 e!54678))

(declare-fun res!43330 () Bool)

(assert (=> d!21223 (=> (not res!43330) (not e!54678))))

(assert (=> d!21223 (= res!43330 (not (contains!749 lt!39511 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!54680 () ListLongMap!1447)

(assert (=> d!21223 (= lt!39511 e!54680)))

(declare-fun c!13426 () Bool)

(assert (=> d!21223 (= c!13426 (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(assert (=> d!21223 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21223 (= (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39511)))

(declare-fun b!83814 () Bool)

(declare-fun e!54683 () Bool)

(assert (=> b!83814 (= e!54678 e!54683)))

(declare-fun c!13425 () Bool)

(declare-fun e!54679 () Bool)

(assert (=> b!83814 (= c!13425 e!54679)))

(declare-fun res!43331 () Bool)

(assert (=> b!83814 (=> (not res!43331) (not e!54679))))

(assert (=> b!83814 (= res!43331 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83815 () Bool)

(declare-fun e!54677 () ListLongMap!1447)

(declare-fun call!7893 () ListLongMap!1447)

(assert (=> b!83815 (= e!54677 call!7893)))

(declare-fun b!83816 () Bool)

(assert (=> b!83816 (= e!54681 (isEmpty!336 lt!39511))))

(declare-fun b!83817 () Bool)

(assert (=> b!83817 (= e!54683 e!54681)))

(declare-fun c!13427 () Bool)

(assert (=> b!83817 (= c!13427 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83818 () Bool)

(declare-fun res!43332 () Bool)

(assert (=> b!83818 (=> (not res!43332) (not e!54678))))

(assert (=> b!83818 (= res!43332 (not (contains!749 lt!39511 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!83819 () Bool)

(assert (=> b!83819 (= e!54680 (ListLongMap!1448 Nil!1520))))

(declare-fun b!83820 () Bool)

(assert (=> b!83820 (= e!54679 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83820 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!83821 () Bool)

(declare-fun lt!39508 () Unit!2426)

(declare-fun lt!39507 () Unit!2426)

(assert (=> b!83821 (= lt!39508 lt!39507)))

(declare-fun lt!39513 () ListLongMap!1447)

(declare-fun lt!39510 () V!3017)

(declare-fun lt!39512 () (_ BitVec 64))

(declare-fun lt!39509 () (_ BitVec 64))

(assert (=> b!83821 (not (contains!749 (+!107 lt!39513 (tuple2!2201 lt!39509 lt!39510)) lt!39512))))

(assert (=> b!83821 (= lt!39507 (addStillNotContains!31 lt!39513 lt!39509 lt!39510 lt!39512))))

(assert (=> b!83821 (= lt!39512 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!83821 (= lt!39510 (get!1193 (select (arr!1901 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!83821 (= lt!39509 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!83821 (= lt!39513 call!7893)))

(assert (=> b!83821 (= e!54677 (+!107 call!7893 (tuple2!2201 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) (get!1193 (select (arr!1901 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!7890 () Bool)

(assert (=> bm!7890 (= call!7893 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2316 newMap!16)))))

(declare-fun b!83822 () Bool)

(assert (=> b!83822 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(assert (=> b!83822 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2145 (_values!2299 newMap!16))))))

(declare-fun e!54682 () Bool)

(assert (=> b!83822 (= e!54682 (= (apply!81 lt!39511 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) (get!1193 (select (arr!1901 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!83823 () Bool)

(assert (=> b!83823 (= e!54680 e!54677)))

(declare-fun c!13428 () Bool)

(assert (=> b!83823 (= c!13428 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83824 () Bool)

(assert (=> b!83824 (= e!54683 e!54682)))

(assert (=> b!83824 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun res!43329 () Bool)

(assert (=> b!83824 (= res!43329 (contains!749 lt!39511 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83824 (=> (not res!43329) (not e!54682))))

(assert (= (and d!21223 c!13426) b!83819))

(assert (= (and d!21223 (not c!13426)) b!83823))

(assert (= (and b!83823 c!13428) b!83821))

(assert (= (and b!83823 (not c!13428)) b!83815))

(assert (= (or b!83821 b!83815) bm!7890))

(assert (= (and d!21223 res!43330) b!83818))

(assert (= (and b!83818 res!43332) b!83814))

(assert (= (and b!83814 res!43331) b!83820))

(assert (= (and b!83814 c!13425) b!83824))

(assert (= (and b!83814 (not c!13425)) b!83817))

(assert (= (and b!83824 res!43329) b!83822))

(assert (= (and b!83817 c!13427) b!83813))

(assert (= (and b!83817 (not c!13427)) b!83816))

(declare-fun b_lambda!3723 () Bool)

(assert (=> (not b_lambda!3723) (not b!83821)))

(assert (=> b!83821 t!5225))

(declare-fun b_and!5085 () Bool)

(assert (= b_and!5081 (and (=> t!5225 result!2895) b_and!5085)))

(assert (=> b!83821 t!5227))

(declare-fun b_and!5087 () Bool)

(assert (= b_and!5083 (and (=> t!5227 result!2897) b_and!5087)))

(declare-fun b_lambda!3725 () Bool)

(assert (=> (not b_lambda!3725) (not b!83822)))

(assert (=> b!83822 t!5225))

(declare-fun b_and!5089 () Bool)

(assert (= b_and!5085 (and (=> t!5225 result!2895) b_and!5089)))

(assert (=> b!83822 t!5227))

(declare-fun b_and!5091 () Bool)

(assert (= b_and!5087 (and (=> t!5227 result!2897) b_and!5091)))

(declare-fun m!87167 () Bool)

(assert (=> bm!7890 m!87167))

(declare-fun m!87169 () Bool)

(assert (=> b!83816 m!87169))

(assert (=> b!83820 m!86045))

(assert (=> b!83820 m!86045))

(assert (=> b!83820 m!86051))

(declare-fun m!87171 () Bool)

(assert (=> b!83821 m!87171))

(declare-fun m!87173 () Bool)

(assert (=> b!83821 m!87173))

(assert (=> b!83821 m!86393))

(assert (=> b!83821 m!86141))

(assert (=> b!83821 m!86395))

(declare-fun m!87175 () Bool)

(assert (=> b!83821 m!87175))

(declare-fun m!87177 () Bool)

(assert (=> b!83821 m!87177))

(assert (=> b!83821 m!86045))

(assert (=> b!83821 m!86141))

(assert (=> b!83821 m!87175))

(assert (=> b!83821 m!86393))

(declare-fun m!87179 () Bool)

(assert (=> d!21223 m!87179))

(assert (=> d!21223 m!86067))

(assert (=> b!83823 m!86045))

(assert (=> b!83823 m!86045))

(assert (=> b!83823 m!86051))

(assert (=> b!83813 m!87167))

(assert (=> b!83824 m!86045))

(assert (=> b!83824 m!86045))

(declare-fun m!87181 () Bool)

(assert (=> b!83824 m!87181))

(declare-fun m!87183 () Bool)

(assert (=> b!83818 m!87183))

(assert (=> b!83822 m!86393))

(assert (=> b!83822 m!86045))

(assert (=> b!83822 m!86141))

(assert (=> b!83822 m!86045))

(declare-fun m!87185 () Bool)

(assert (=> b!83822 m!87185))

(assert (=> b!83822 m!86393))

(assert (=> b!83822 m!86141))

(assert (=> b!83822 m!86395))

(assert (=> bm!7838 d!21223))

(declare-fun d!21225 () Bool)

(declare-fun lt!39514 () Bool)

(assert (=> d!21225 (= lt!39514 (select (content!87 (toList!739 lt!39168)) (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun e!54684 () Bool)

(assert (=> d!21225 (= lt!39514 e!54684)))

(declare-fun res!43333 () Bool)

(assert (=> d!21225 (=> (not res!43333) (not e!54684))))

(assert (=> d!21225 (= res!43333 ((_ is Cons!1519) (toList!739 lt!39168)))))

(assert (=> d!21225 (= (contains!751 (toList!739 lt!39168) (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39514)))

(declare-fun b!83825 () Bool)

(declare-fun e!54685 () Bool)

(assert (=> b!83825 (= e!54684 e!54685)))

(declare-fun res!43334 () Bool)

(assert (=> b!83825 (=> res!43334 e!54685)))

(assert (=> b!83825 (= res!43334 (= (h!2109 (toList!739 lt!39168)) (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!83826 () Bool)

(assert (=> b!83826 (= e!54685 (contains!751 (t!5214 (toList!739 lt!39168)) (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!21225 res!43333) b!83825))

(assert (= (and b!83825 (not res!43334)) b!83826))

(declare-fun m!87187 () Bool)

(assert (=> d!21225 m!87187))

(declare-fun m!87189 () Bool)

(assert (=> d!21225 m!87189))

(declare-fun m!87191 () Bool)

(assert (=> b!83826 m!87191))

(assert (=> b!83283 d!21225))

(declare-fun lt!39515 () Bool)

(declare-fun d!21227 () Bool)

(assert (=> d!21227 (= lt!39515 (select (content!87 (toList!739 lt!39250)) (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun e!54686 () Bool)

(assert (=> d!21227 (= lt!39515 e!54686)))

(declare-fun res!43335 () Bool)

(assert (=> d!21227 (=> (not res!43335) (not e!54686))))

(assert (=> d!21227 (= res!43335 ((_ is Cons!1519) (toList!739 lt!39250)))))

(assert (=> d!21227 (= (contains!751 (toList!739 lt!39250) (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39515)))

(declare-fun b!83827 () Bool)

(declare-fun e!54687 () Bool)

(assert (=> b!83827 (= e!54686 e!54687)))

(declare-fun res!43336 () Bool)

(assert (=> b!83827 (=> res!43336 e!54687)))

(assert (=> b!83827 (= res!43336 (= (h!2109 (toList!739 lt!39250)) (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!83828 () Bool)

(assert (=> b!83828 (= e!54687 (contains!751 (t!5214 (toList!739 lt!39250)) (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (= (and d!21227 res!43335) b!83827))

(assert (= (and b!83827 (not res!43336)) b!83828))

(declare-fun m!87193 () Bool)

(assert (=> d!21227 m!87193))

(declare-fun m!87195 () Bool)

(assert (=> d!21227 m!87195))

(declare-fun m!87197 () Bool)

(assert (=> b!83828 m!87197))

(assert (=> b!83422 d!21227))

(assert (=> d!21091 d!20855))

(assert (=> d!21085 d!21087))

(assert (=> d!21085 d!21089))

(declare-fun d!21229 () Bool)

(assert (=> d!21229 (isDefined!91 (getValueByKey!137 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> d!21229 true))

(declare-fun _$12!332 () Unit!2426)

(assert (=> d!21229 (= (choose!500 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) _$12!332)))

(declare-fun bs!3536 () Bool)

(assert (= bs!3536 d!21229))

(assert (=> bs!3536 m!85563))

(assert (=> bs!3536 m!85837))

(assert (=> bs!3536 m!85837))

(assert (=> bs!3536 m!85839))

(assert (=> d!21085 d!21229))

(declare-fun d!21231 () Bool)

(declare-fun res!43337 () Bool)

(declare-fun e!54688 () Bool)

(assert (=> d!21231 (=> res!43337 e!54688)))

(assert (=> d!21231 (= res!43337 (or ((_ is Nil!1520) (toList!739 lt!38733)) ((_ is Nil!1520) (t!5214 (toList!739 lt!38733)))))))

(assert (=> d!21231 (= (isStrictlySorted!292 (toList!739 lt!38733)) e!54688)))

(declare-fun b!83829 () Bool)

(declare-fun e!54689 () Bool)

(assert (=> b!83829 (= e!54688 e!54689)))

(declare-fun res!43338 () Bool)

(assert (=> b!83829 (=> (not res!43338) (not e!54689))))

(assert (=> b!83829 (= res!43338 (bvslt (_1!1111 (h!2109 (toList!739 lt!38733))) (_1!1111 (h!2109 (t!5214 (toList!739 lt!38733))))))))

(declare-fun b!83830 () Bool)

(assert (=> b!83830 (= e!54689 (isStrictlySorted!292 (t!5214 (toList!739 lt!38733))))))

(assert (= (and d!21231 (not res!43337)) b!83829))

(assert (= (and b!83829 res!43338) b!83830))

(declare-fun m!87199 () Bool)

(assert (=> b!83830 m!87199))

(assert (=> d!21085 d!21231))

(declare-fun b!83833 () Bool)

(declare-fun e!54691 () Option!143)

(assert (=> b!83833 (= e!54691 (getValueByKey!137 (t!5214 (toList!739 lt!39084)) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21233 () Bool)

(declare-fun c!13429 () Bool)

(assert (=> d!21233 (= c!13429 (and ((_ is Cons!1519) (toList!739 lt!39084)) (= (_1!1111 (h!2109 (toList!739 lt!39084))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!54690 () Option!143)

(assert (=> d!21233 (= (getValueByKey!137 (toList!739 lt!39084) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!54690)))

(declare-fun b!83831 () Bool)

(assert (=> b!83831 (= e!54690 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39084)))))))

(declare-fun b!83834 () Bool)

(assert (=> b!83834 (= e!54691 None!141)))

(declare-fun b!83832 () Bool)

(assert (=> b!83832 (= e!54690 e!54691)))

(declare-fun c!13430 () Bool)

(assert (=> b!83832 (= c!13430 (and ((_ is Cons!1519) (toList!739 lt!39084)) (not (= (_1!1111 (h!2109 (toList!739 lt!39084))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21233 c!13429) b!83831))

(assert (= (and d!21233 (not c!13429)) b!83832))

(assert (= (and b!83832 c!13430) b!83833))

(assert (= (and b!83832 (not c!13430)) b!83834))

(declare-fun m!87201 () Bool)

(assert (=> b!83833 m!87201))

(assert (=> b!83159 d!21233))

(declare-fun b!83837 () Bool)

(declare-fun e!54693 () Option!143)

(assert (=> b!83837 (= e!54693 (getValueByKey!137 (t!5214 (t!5214 (toList!739 lt!39072))) (_1!1111 lt!38738)))))

(declare-fun d!21235 () Bool)

(declare-fun c!13431 () Bool)

(assert (=> d!21235 (= c!13431 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!39072))) (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!39072)))) (_1!1111 lt!38738))))))

(declare-fun e!54692 () Option!143)

(assert (=> d!21235 (= (getValueByKey!137 (t!5214 (toList!739 lt!39072)) (_1!1111 lt!38738)) e!54692)))

(declare-fun b!83835 () Bool)

(assert (=> b!83835 (= e!54692 (Some!142 (_2!1111 (h!2109 (t!5214 (toList!739 lt!39072))))))))

(declare-fun b!83838 () Bool)

(assert (=> b!83838 (= e!54693 None!141)))

(declare-fun b!83836 () Bool)

(assert (=> b!83836 (= e!54692 e!54693)))

(declare-fun c!13432 () Bool)

(assert (=> b!83836 (= c!13432 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!39072))) (not (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!39072)))) (_1!1111 lt!38738)))))))

(assert (= (and d!21235 c!13431) b!83835))

(assert (= (and d!21235 (not c!13431)) b!83836))

(assert (= (and b!83836 c!13432) b!83837))

(assert (= (and b!83836 (not c!13432)) b!83838))

(declare-fun m!87203 () Bool)

(assert (=> b!83837 m!87203))

(assert (=> b!83366 d!21235))

(declare-fun b!83841 () Bool)

(declare-fun e!54695 () Option!143)

(assert (=> b!83841 (= e!54695 (getValueByKey!137 (t!5214 (t!5214 lt!39071)) (_1!1111 lt!38738)))))

(declare-fun d!21237 () Bool)

(declare-fun c!13433 () Bool)

(assert (=> d!21237 (= c!13433 (and ((_ is Cons!1519) (t!5214 lt!39071)) (= (_1!1111 (h!2109 (t!5214 lt!39071))) (_1!1111 lt!38738))))))

(declare-fun e!54694 () Option!143)

(assert (=> d!21237 (= (getValueByKey!137 (t!5214 lt!39071) (_1!1111 lt!38738)) e!54694)))

(declare-fun b!83839 () Bool)

(assert (=> b!83839 (= e!54694 (Some!142 (_2!1111 (h!2109 (t!5214 lt!39071)))))))

(declare-fun b!83842 () Bool)

(assert (=> b!83842 (= e!54695 None!141)))

(declare-fun b!83840 () Bool)

(assert (=> b!83840 (= e!54694 e!54695)))

(declare-fun c!13434 () Bool)

(assert (=> b!83840 (= c!13434 (and ((_ is Cons!1519) (t!5214 lt!39071)) (not (= (_1!1111 (h!2109 (t!5214 lt!39071))) (_1!1111 lt!38738)))))))

(assert (= (and d!21237 c!13433) b!83839))

(assert (= (and d!21237 (not c!13433)) b!83840))

(assert (= (and b!83840 c!13434) b!83841))

(assert (= (and b!83840 (not c!13434)) b!83842))

(declare-fun m!87205 () Bool)

(assert (=> b!83841 m!87205))

(assert (=> b!83476 d!21237))

(assert (=> d!20963 d!20961))

(declare-fun d!21239 () Bool)

(assert (=> d!21239 (= (getValueByKey!137 lt!39076 (_1!1111 lt!38742)) (Some!142 (_2!1111 lt!38742)))))

(assert (=> d!21239 true))

(declare-fun _$22!409 () Unit!2426)

(assert (=> d!21239 (= (choose!497 lt!39076 (_1!1111 lt!38742) (_2!1111 lt!38742)) _$22!409)))

(declare-fun bs!3537 () Bool)

(assert (= bs!3537 d!21239))

(assert (=> bs!3537 m!86011))

(assert (=> d!20963 d!21239))

(declare-fun d!21241 () Bool)

(declare-fun res!43339 () Bool)

(declare-fun e!54696 () Bool)

(assert (=> d!21241 (=> res!43339 e!54696)))

(assert (=> d!21241 (= res!43339 (or ((_ is Nil!1520) lt!39076) ((_ is Nil!1520) (t!5214 lt!39076))))))

(assert (=> d!21241 (= (isStrictlySorted!292 lt!39076) e!54696)))

(declare-fun b!83843 () Bool)

(declare-fun e!54697 () Bool)

(assert (=> b!83843 (= e!54696 e!54697)))

(declare-fun res!43340 () Bool)

(assert (=> b!83843 (=> (not res!43340) (not e!54697))))

(assert (=> b!83843 (= res!43340 (bvslt (_1!1111 (h!2109 lt!39076)) (_1!1111 (h!2109 (t!5214 lt!39076)))))))

(declare-fun b!83844 () Bool)

(assert (=> b!83844 (= e!54697 (isStrictlySorted!292 (t!5214 lt!39076)))))

(assert (= (and d!21241 (not res!43339)) b!83843))

(assert (= (and b!83843 res!43340) b!83844))

(declare-fun m!87207 () Bool)

(assert (=> b!83844 m!87207))

(assert (=> d!20963 d!21241))

(declare-fun d!21243 () Bool)

(assert (=> d!21243 (arrayContainsKey!0 (_keys!3983 newMap!16) lt!39231 #b00000000000000000000000000000000)))

(declare-fun lt!39518 () Unit!2426)

(declare-fun choose!13 (array!3991 (_ BitVec 64) (_ BitVec 32)) Unit!2426)

(assert (=> d!21243 (= lt!39518 (choose!13 (_keys!3983 newMap!16) lt!39231 #b00000000000000000000000000000000))))

(assert (=> d!21243 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!21243 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3983 newMap!16) lt!39231 #b00000000000000000000000000000000) lt!39518)))

(declare-fun bs!3538 () Bool)

(assert (= bs!3538 d!21243))

(assert (=> bs!3538 m!86445))

(declare-fun m!87209 () Bool)

(assert (=> bs!3538 m!87209))

(assert (=> b!83411 d!21243))

(declare-fun d!21245 () Bool)

(declare-fun res!43341 () Bool)

(declare-fun e!54698 () Bool)

(assert (=> d!21245 (=> res!43341 e!54698)))

(assert (=> d!21245 (= res!43341 (= (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) lt!39231))))

(assert (=> d!21245 (= (arrayContainsKey!0 (_keys!3983 newMap!16) lt!39231 #b00000000000000000000000000000000) e!54698)))

(declare-fun b!83845 () Bool)

(declare-fun e!54699 () Bool)

(assert (=> b!83845 (= e!54698 e!54699)))

(declare-fun res!43342 () Bool)

(assert (=> b!83845 (=> (not res!43342) (not e!54699))))

(assert (=> b!83845 (= res!43342 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83846 () Bool)

(assert (=> b!83846 (= e!54699 (arrayContainsKey!0 (_keys!3983 newMap!16) lt!39231 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!21245 (not res!43341)) b!83845))

(assert (= (and b!83845 res!43342) b!83846))

(assert (=> d!21245 m!86045))

(declare-fun m!87211 () Bool)

(assert (=> b!83846 m!87211))

(assert (=> b!83411 d!21245))

(declare-fun b!83847 () Bool)

(declare-fun e!54700 () SeekEntryResult!245)

(declare-fun lt!39519 () SeekEntryResult!245)

(assert (=> b!83847 (= e!54700 (MissingZero!245 (index!3118 lt!39519)))))

(declare-fun b!83848 () Bool)

(declare-fun c!13437 () Bool)

(declare-fun lt!39521 () (_ BitVec 64))

(assert (=> b!83848 (= c!13437 (= lt!39521 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!54701 () SeekEntryResult!245)

(assert (=> b!83848 (= e!54701 e!54700)))

(declare-fun b!83849 () Bool)

(assert (=> b!83849 (= e!54700 (seekKeyOrZeroReturnVacant!0 (x!11853 lt!39519) (index!3118 lt!39519) (index!3118 lt!39519) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(declare-fun b!83850 () Bool)

(declare-fun e!54702 () SeekEntryResult!245)

(assert (=> b!83850 (= e!54702 e!54701)))

(assert (=> b!83850 (= lt!39521 (select (arr!1900 (_keys!3983 newMap!16)) (index!3118 lt!39519)))))

(declare-fun c!13436 () Bool)

(assert (=> b!83850 (= c!13436 (= lt!39521 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!21247 () Bool)

(declare-fun lt!39520 () SeekEntryResult!245)

(assert (=> d!21247 (and (or ((_ is Undefined!245) lt!39520) (not ((_ is Found!245) lt!39520)) (and (bvsge (index!3117 lt!39520) #b00000000000000000000000000000000) (bvslt (index!3117 lt!39520) (size!2144 (_keys!3983 newMap!16))))) (or ((_ is Undefined!245) lt!39520) ((_ is Found!245) lt!39520) (not ((_ is MissingZero!245) lt!39520)) (and (bvsge (index!3116 lt!39520) #b00000000000000000000000000000000) (bvslt (index!3116 lt!39520) (size!2144 (_keys!3983 newMap!16))))) (or ((_ is Undefined!245) lt!39520) ((_ is Found!245) lt!39520) ((_ is MissingZero!245) lt!39520) (not ((_ is MissingVacant!245) lt!39520)) (and (bvsge (index!3119 lt!39520) #b00000000000000000000000000000000) (bvslt (index!3119 lt!39520) (size!2144 (_keys!3983 newMap!16))))) (or ((_ is Undefined!245) lt!39520) (ite ((_ is Found!245) lt!39520) (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!39520)) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!245) lt!39520) (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3116 lt!39520)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!245) lt!39520) (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3119 lt!39520)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21247 (= lt!39520 e!54702)))

(declare-fun c!13435 () Bool)

(assert (=> d!21247 (= c!13435 (and ((_ is Intermediate!245) lt!39519) (undefined!1057 lt!39519)))))

(assert (=> d!21247 (= lt!39519 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) (mask!6333 newMap!16)) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(assert (=> d!21247 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21247 (= (seekEntryOrOpen!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) (_keys!3983 newMap!16) (mask!6333 newMap!16)) lt!39520)))

(declare-fun b!83851 () Bool)

(assert (=> b!83851 (= e!54702 Undefined!245)))

(declare-fun b!83852 () Bool)

(assert (=> b!83852 (= e!54701 (Found!245 (index!3118 lt!39519)))))

(assert (= (and d!21247 c!13435) b!83851))

(assert (= (and d!21247 (not c!13435)) b!83850))

(assert (= (and b!83850 c!13436) b!83852))

(assert (= (and b!83850 (not c!13436)) b!83848))

(assert (= (and b!83848 c!13437) b!83847))

(assert (= (and b!83848 (not c!13437)) b!83849))

(assert (=> b!83849 m!86045))

(declare-fun m!87213 () Bool)

(assert (=> b!83849 m!87213))

(declare-fun m!87215 () Bool)

(assert (=> b!83850 m!87215))

(assert (=> d!21247 m!86067))

(declare-fun m!87217 () Bool)

(assert (=> d!21247 m!87217))

(assert (=> d!21247 m!86045))

(declare-fun m!87219 () Bool)

(assert (=> d!21247 m!87219))

(assert (=> d!21247 m!86045))

(assert (=> d!21247 m!87217))

(declare-fun m!87221 () Bool)

(assert (=> d!21247 m!87221))

(declare-fun m!87223 () Bool)

(assert (=> d!21247 m!87223))

(declare-fun m!87225 () Bool)

(assert (=> d!21247 m!87225))

(assert (=> b!83411 d!21247))

(declare-fun b!83855 () Bool)

(declare-fun e!54704 () Option!143)

(assert (=> b!83855 (= e!54704 (getValueByKey!137 (t!5214 (t!5214 lt!39067)) (_1!1111 lt!38729)))))

(declare-fun d!21249 () Bool)

(declare-fun c!13438 () Bool)

(assert (=> d!21249 (= c!13438 (and ((_ is Cons!1519) (t!5214 lt!39067)) (= (_1!1111 (h!2109 (t!5214 lt!39067))) (_1!1111 lt!38729))))))

(declare-fun e!54703 () Option!143)

(assert (=> d!21249 (= (getValueByKey!137 (t!5214 lt!39067) (_1!1111 lt!38729)) e!54703)))

(declare-fun b!83853 () Bool)

(assert (=> b!83853 (= e!54703 (Some!142 (_2!1111 (h!2109 (t!5214 lt!39067)))))))

(declare-fun b!83856 () Bool)

(assert (=> b!83856 (= e!54704 None!141)))

(declare-fun b!83854 () Bool)

(assert (=> b!83854 (= e!54703 e!54704)))

(declare-fun c!13439 () Bool)

(assert (=> b!83854 (= c!13439 (and ((_ is Cons!1519) (t!5214 lt!39067)) (not (= (_1!1111 (h!2109 (t!5214 lt!39067))) (_1!1111 lt!38729)))))))

(assert (= (and d!21249 c!13438) b!83853))

(assert (= (and d!21249 (not c!13438)) b!83854))

(assert (= (and b!83854 c!13439) b!83855))

(assert (= (and b!83854 (not c!13439)) b!83856))

(declare-fun m!87227 () Bool)

(assert (=> b!83855 m!87227))

(assert (=> b!83509 d!21249))

(assert (=> b!83557 d!20907))

(declare-fun d!21251 () Bool)

(declare-fun lt!39522 () Bool)

(assert (=> d!21251 (= lt!39522 (select (content!87 lt!39437) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun e!54705 () Bool)

(assert (=> d!21251 (= lt!39522 e!54705)))

(declare-fun res!43343 () Bool)

(assert (=> d!21251 (=> (not res!43343) (not e!54705))))

(assert (=> d!21251 (= res!43343 ((_ is Cons!1519) lt!39437))))

(assert (=> d!21251 (= (contains!751 lt!39437 (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))) lt!39522)))

(declare-fun b!83857 () Bool)

(declare-fun e!54706 () Bool)

(assert (=> b!83857 (= e!54705 e!54706)))

(declare-fun res!43344 () Bool)

(assert (=> b!83857 (=> res!43344 e!54706)))

(assert (=> b!83857 (= res!43344 (= (h!2109 lt!39437) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun b!83858 () Bool)

(assert (=> b!83858 (= e!54706 (contains!751 (t!5214 lt!39437) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(assert (= (and d!21251 res!43343) b!83857))

(assert (= (and b!83857 (not res!43344)) b!83858))

(declare-fun m!87229 () Bool)

(assert (=> d!21251 m!87229))

(declare-fun m!87231 () Bool)

(assert (=> d!21251 m!87231))

(declare-fun m!87233 () Bool)

(assert (=> b!83858 m!87233))

(assert (=> b!83636 d!21251))

(declare-fun d!21253 () Bool)

(declare-fun lt!39523 () Bool)

(assert (=> d!21253 (= lt!39523 (select (content!87 (t!5214 (toList!739 lt!39072))) lt!38738))))

(declare-fun e!54707 () Bool)

(assert (=> d!21253 (= lt!39523 e!54707)))

(declare-fun res!43345 () Bool)

(assert (=> d!21253 (=> (not res!43345) (not e!54707))))

(assert (=> d!21253 (= res!43345 ((_ is Cons!1519) (t!5214 (toList!739 lt!39072))))))

(assert (=> d!21253 (= (contains!751 (t!5214 (toList!739 lt!39072)) lt!38738) lt!39523)))

(declare-fun b!83859 () Bool)

(declare-fun e!54708 () Bool)

(assert (=> b!83859 (= e!54707 e!54708)))

(declare-fun res!43346 () Bool)

(assert (=> b!83859 (=> res!43346 e!54708)))

(assert (=> b!83859 (= res!43346 (= (h!2109 (t!5214 (toList!739 lt!39072))) lt!38738))))

(declare-fun b!83860 () Bool)

(assert (=> b!83860 (= e!54708 (contains!751 (t!5214 (t!5214 (toList!739 lt!39072))) lt!38738))))

(assert (= (and d!21253 res!43345) b!83859))

(assert (= (and b!83859 (not res!43346)) b!83860))

(assert (=> d!21253 m!87159))

(declare-fun m!87235 () Bool)

(assert (=> d!21253 m!87235))

(declare-fun m!87237 () Bool)

(assert (=> b!83860 m!87237))

(assert (=> b!83675 d!21253))

(declare-fun d!21255 () Bool)

(declare-fun lt!39524 () Bool)

(assert (=> d!21255 (= lt!39524 (select (content!87 (toList!739 lt!39238)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun e!54709 () Bool)

(assert (=> d!21255 (= lt!39524 e!54709)))

(declare-fun res!43347 () Bool)

(assert (=> d!21255 (=> (not res!43347) (not e!54709))))

(assert (=> d!21255 (= res!43347 ((_ is Cons!1519) (toList!739 lt!39238)))))

(assert (=> d!21255 (= (contains!751 (toList!739 lt!39238) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39524)))

(declare-fun b!83861 () Bool)

(declare-fun e!54710 () Bool)

(assert (=> b!83861 (= e!54709 e!54710)))

(declare-fun res!43348 () Bool)

(assert (=> b!83861 (=> res!43348 e!54710)))

(assert (=> b!83861 (= res!43348 (= (h!2109 (toList!739 lt!39238)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!83862 () Bool)

(assert (=> b!83862 (= e!54710 (contains!751 (t!5214 (toList!739 lt!39238)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!21255 res!43347) b!83861))

(assert (= (and b!83861 (not res!43348)) b!83862))

(declare-fun m!87239 () Bool)

(assert (=> d!21255 m!87239))

(declare-fun m!87241 () Bool)

(assert (=> d!21255 m!87241))

(declare-fun m!87243 () Bool)

(assert (=> b!83862 m!87243))

(assert (=> b!83416 d!21255))

(declare-fun b!83866 () Bool)

(declare-fun e!54711 () Bool)

(assert (=> b!83866 (= e!54711 (and (bvsge (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!423 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!83865 () Bool)

(declare-fun res!43351 () Bool)

(assert (=> b!83865 (=> (not res!43351) (not e!54711))))

(assert (=> b!83865 (= res!43351 (= (size!2150 (v!2622 (underlying!282 thiss!992))) (bvadd (_size!423 (v!2622 (underlying!282 thiss!992))) (bvsdiv (bvadd (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!83863 () Bool)

(declare-fun res!43352 () Bool)

(assert (=> b!83863 (=> (not res!43352) (not e!54711))))

(assert (=> b!83863 (= res!43352 (and (= (size!2145 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000001)) (= (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (size!2145 (_values!2299 (v!2622 (underlying!282 thiss!992))))) (bvsge (_size!423 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!423 (v!2622 (underlying!282 thiss!992))) (bvadd (mask!6333 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!83864 () Bool)

(declare-fun res!43350 () Bool)

(assert (=> b!83864 (=> (not res!43350) (not e!54711))))

(assert (=> b!83864 (= res!43350 (bvsge (size!2150 (v!2622 (underlying!282 thiss!992))) (_size!423 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun d!21257 () Bool)

(declare-fun res!43349 () Bool)

(assert (=> d!21257 (=> (not res!43349) (not e!54711))))

(assert (=> d!21257 (= res!43349 (validMask!0 (mask!6333 (v!2622 (underlying!282 thiss!992)))))))

(assert (=> d!21257 (= (simpleValid!57 (v!2622 (underlying!282 thiss!992))) e!54711)))

(assert (= (and d!21257 res!43349) b!83863))

(assert (= (and b!83863 res!43352) b!83864))

(assert (= (and b!83864 res!43350) b!83865))

(assert (= (and b!83865 res!43351) b!83866))

(declare-fun m!87245 () Bool)

(assert (=> b!83865 m!87245))

(assert (=> b!83864 m!87245))

(assert (=> d!21257 m!85577))

(assert (=> d!21081 d!21257))

(declare-fun b!83869 () Bool)

(declare-fun e!54713 () Option!143)

(assert (=> b!83869 (= e!54713 (getValueByKey!137 (t!5214 (toList!739 lt!39292)) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21259 () Bool)

(declare-fun c!13440 () Bool)

(assert (=> d!21259 (= c!13440 (and ((_ is Cons!1519) (toList!739 lt!39292)) (= (_1!1111 (h!2109 (toList!739 lt!39292))) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!54712 () Option!143)

(assert (=> d!21259 (= (getValueByKey!137 (toList!739 lt!39292) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!54712)))

(declare-fun b!83867 () Bool)

(assert (=> b!83867 (= e!54712 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39292)))))))

(declare-fun b!83870 () Bool)

(assert (=> b!83870 (= e!54713 None!141)))

(declare-fun b!83868 () Bool)

(assert (=> b!83868 (= e!54712 e!54713)))

(declare-fun c!13441 () Bool)

(assert (=> b!83868 (= c!13441 (and ((_ is Cons!1519) (toList!739 lt!39292)) (not (= (_1!1111 (h!2109 (toList!739 lt!39292))) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21259 c!13440) b!83867))

(assert (= (and d!21259 (not c!13440)) b!83868))

(assert (= (and b!83868 c!13441) b!83869))

(assert (= (and b!83868 (not c!13441)) b!83870))

(declare-fun m!87247 () Bool)

(assert (=> b!83869 m!87247))

(assert (=> b!83466 d!21259))

(declare-fun d!21261 () Bool)

(assert (=> d!21261 (= (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83231 d!21261))

(declare-fun d!21263 () Bool)

(declare-fun res!43353 () Bool)

(declare-fun e!54714 () Bool)

(assert (=> d!21263 (=> res!43353 e!54714)))

(assert (=> d!21263 (= res!43353 (or ((_ is Nil!1520) lt!39437) ((_ is Nil!1520) (t!5214 lt!39437))))))

(assert (=> d!21263 (= (isStrictlySorted!292 lt!39437) e!54714)))

(declare-fun b!83871 () Bool)

(declare-fun e!54715 () Bool)

(assert (=> b!83871 (= e!54714 e!54715)))

(declare-fun res!43354 () Bool)

(assert (=> b!83871 (=> (not res!43354) (not e!54715))))

(assert (=> b!83871 (= res!43354 (bvslt (_1!1111 (h!2109 lt!39437)) (_1!1111 (h!2109 (t!5214 lt!39437)))))))

(declare-fun b!83872 () Bool)

(assert (=> b!83872 (= e!54715 (isStrictlySorted!292 (t!5214 lt!39437)))))

(assert (= (and d!21263 (not res!43353)) b!83871))

(assert (= (and b!83871 res!43354) b!83872))

(declare-fun m!87249 () Bool)

(assert (=> b!83872 m!87249))

(assert (=> d!21121 d!21263))

(assert (=> d!21121 d!21147))

(declare-fun d!21265 () Bool)

(declare-fun e!54717 () Bool)

(assert (=> d!21265 e!54717))

(declare-fun res!43355 () Bool)

(assert (=> d!21265 (=> res!43355 e!54717)))

(declare-fun lt!39526 () Bool)

(assert (=> d!21265 (= res!43355 (not lt!39526))))

(declare-fun lt!39528 () Bool)

(assert (=> d!21265 (= lt!39526 lt!39528)))

(declare-fun lt!39527 () Unit!2426)

(declare-fun e!54716 () Unit!2426)

(assert (=> d!21265 (= lt!39527 e!54716)))

(declare-fun c!13442 () Bool)

(assert (=> d!21265 (= c!13442 lt!39528)))

(assert (=> d!21265 (= lt!39528 (containsKey!141 (toList!739 lt!39292) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21265 (= (contains!749 lt!39292 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39526)))

(declare-fun b!83873 () Bool)

(declare-fun lt!39525 () Unit!2426)

(assert (=> b!83873 (= e!54716 lt!39525)))

(assert (=> b!83873 (= lt!39525 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39292) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> b!83873 (isDefined!91 (getValueByKey!137 (toList!739 lt!39292) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!83874 () Bool)

(declare-fun Unit!2465 () Unit!2426)

(assert (=> b!83874 (= e!54716 Unit!2465)))

(declare-fun b!83875 () Bool)

(assert (=> b!83875 (= e!54717 (isDefined!91 (getValueByKey!137 (toList!739 lt!39292) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21265 c!13442) b!83873))

(assert (= (and d!21265 (not c!13442)) b!83874))

(assert (= (and d!21265 (not res!43355)) b!83875))

(declare-fun m!87251 () Bool)

(assert (=> d!21265 m!87251))

(declare-fun m!87253 () Bool)

(assert (=> b!83873 m!87253))

(assert (=> b!83873 m!86637))

(assert (=> b!83873 m!86637))

(declare-fun m!87255 () Bool)

(assert (=> b!83873 m!87255))

(assert (=> b!83875 m!86637))

(assert (=> b!83875 m!86637))

(assert (=> b!83875 m!87255))

(assert (=> d!21049 d!21265))

(declare-fun b!83878 () Bool)

(declare-fun e!54719 () Option!143)

(assert (=> b!83878 (= e!54719 (getValueByKey!137 (t!5214 lt!39291) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21267 () Bool)

(declare-fun c!13443 () Bool)

(assert (=> d!21267 (= c!13443 (and ((_ is Cons!1519) lt!39291) (= (_1!1111 (h!2109 lt!39291)) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!54718 () Option!143)

(assert (=> d!21267 (= (getValueByKey!137 lt!39291 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!54718)))

(declare-fun b!83876 () Bool)

(assert (=> b!83876 (= e!54718 (Some!142 (_2!1111 (h!2109 lt!39291))))))

(declare-fun b!83879 () Bool)

(assert (=> b!83879 (= e!54719 None!141)))

(declare-fun b!83877 () Bool)

(assert (=> b!83877 (= e!54718 e!54719)))

(declare-fun c!13444 () Bool)

(assert (=> b!83877 (= c!13444 (and ((_ is Cons!1519) lt!39291) (not (= (_1!1111 (h!2109 lt!39291)) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21267 c!13443) b!83876))

(assert (= (and d!21267 (not c!13443)) b!83877))

(assert (= (and b!83877 c!13444) b!83878))

(assert (= (and b!83877 (not c!13444)) b!83879))

(declare-fun m!87257 () Bool)

(assert (=> b!83878 m!87257))

(assert (=> d!21049 d!21267))

(declare-fun d!21269 () Bool)

(assert (=> d!21269 (= (getValueByKey!137 lt!39291 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39529 () Unit!2426)

(assert (=> d!21269 (= lt!39529 (choose!497 lt!39291 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun e!54720 () Bool)

(assert (=> d!21269 e!54720))

(declare-fun res!43356 () Bool)

(assert (=> d!21269 (=> (not res!43356) (not e!54720))))

(assert (=> d!21269 (= res!43356 (isStrictlySorted!292 lt!39291))))

(assert (=> d!21269 (= (lemmaContainsTupThenGetReturnValue!57 lt!39291 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39529)))

(declare-fun b!83880 () Bool)

(declare-fun res!43357 () Bool)

(assert (=> b!83880 (=> (not res!43357) (not e!54720))))

(assert (=> b!83880 (= res!43357 (containsKey!141 lt!39291 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!83881 () Bool)

(assert (=> b!83881 (= e!54720 (contains!751 lt!39291 (tuple2!2201 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21269 res!43356) b!83880))

(assert (= (and b!83880 res!43357) b!83881))

(assert (=> d!21269 m!86631))

(declare-fun m!87259 () Bool)

(assert (=> d!21269 m!87259))

(declare-fun m!87261 () Bool)

(assert (=> d!21269 m!87261))

(declare-fun m!87263 () Bool)

(assert (=> b!83880 m!87263))

(declare-fun m!87265 () Bool)

(assert (=> b!83881 m!87265))

(assert (=> d!21049 d!21269))

(declare-fun b!83882 () Bool)

(declare-fun e!54725 () List!1523)

(declare-fun call!7894 () List!1523)

(assert (=> b!83882 (= e!54725 call!7894)))

(declare-fun b!83883 () Bool)

(declare-fun e!54723 () Bool)

(declare-fun lt!39530 () List!1523)

(assert (=> b!83883 (= e!54723 (contains!751 lt!39530 (tuple2!2201 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!83884 () Bool)

(declare-fun c!13447 () Bool)

(declare-fun c!13445 () Bool)

(declare-fun e!54722 () List!1523)

(assert (=> b!83884 (= e!54722 (ite c!13447 (t!5214 (toList!739 lt!38741)) (ite c!13445 (Cons!1519 (h!2109 (toList!739 lt!38741)) (t!5214 (toList!739 lt!38741))) Nil!1520)))))

(declare-fun d!21271 () Bool)

(assert (=> d!21271 e!54723))

(declare-fun res!43359 () Bool)

(assert (=> d!21271 (=> (not res!43359) (not e!54723))))

(assert (=> d!21271 (= res!43359 (isStrictlySorted!292 lt!39530))))

(declare-fun e!54724 () List!1523)

(assert (=> d!21271 (= lt!39530 e!54724)))

(declare-fun c!13446 () Bool)

(assert (=> d!21271 (= c!13446 (and ((_ is Cons!1519) (toList!739 lt!38741)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38741))) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> d!21271 (isStrictlySorted!292 (toList!739 lt!38741))))

(assert (=> d!21271 (= (insertStrictlySorted!60 (toList!739 lt!38741) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39530)))

(declare-fun b!83885 () Bool)

(assert (=> b!83885 (= e!54722 (insertStrictlySorted!60 (t!5214 (toList!739 lt!38741)) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7891 () Bool)

(declare-fun call!7896 () List!1523)

(assert (=> bm!7891 (= call!7894 call!7896)))

(declare-fun b!83886 () Bool)

(declare-fun e!54721 () List!1523)

(declare-fun call!7895 () List!1523)

(assert (=> b!83886 (= e!54721 call!7895)))

(declare-fun b!83887 () Bool)

(assert (=> b!83887 (= e!54724 e!54725)))

(assert (=> b!83887 (= c!13447 (and ((_ is Cons!1519) (toList!739 lt!38741)) (= (_1!1111 (h!2109 (toList!739 lt!38741))) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!83888 () Bool)

(declare-fun res!43358 () Bool)

(assert (=> b!83888 (=> (not res!43358) (not e!54723))))

(assert (=> b!83888 (= res!43358 (containsKey!141 lt!39530 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7892 () Bool)

(assert (=> bm!7892 (= call!7895 call!7894)))

(declare-fun b!83889 () Bool)

(assert (=> b!83889 (= e!54724 call!7896)))

(declare-fun b!83890 () Bool)

(assert (=> b!83890 (= e!54721 call!7895)))

(declare-fun b!83891 () Bool)

(assert (=> b!83891 (= c!13445 (and ((_ is Cons!1519) (toList!739 lt!38741)) (bvsgt (_1!1111 (h!2109 (toList!739 lt!38741))) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> b!83891 (= e!54725 e!54721)))

(declare-fun bm!7893 () Bool)

(assert (=> bm!7893 (= call!7896 ($colon$colon!70 e!54722 (ite c!13446 (h!2109 (toList!739 lt!38741)) (tuple2!2201 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(declare-fun c!13448 () Bool)

(assert (=> bm!7893 (= c!13448 c!13446)))

(assert (= (and d!21271 c!13446) b!83889))

(assert (= (and d!21271 (not c!13446)) b!83887))

(assert (= (and b!83887 c!13447) b!83882))

(assert (= (and b!83887 (not c!13447)) b!83891))

(assert (= (and b!83891 c!13445) b!83886))

(assert (= (and b!83891 (not c!13445)) b!83890))

(assert (= (or b!83886 b!83890) bm!7892))

(assert (= (or b!83882 bm!7892) bm!7891))

(assert (= (or b!83889 bm!7891) bm!7893))

(assert (= (and bm!7893 c!13448) b!83885))

(assert (= (and bm!7893 (not c!13448)) b!83884))

(assert (= (and d!21271 res!43359) b!83888))

(assert (= (and b!83888 res!43358) b!83883))

(declare-fun m!87267 () Bool)

(assert (=> bm!7893 m!87267))

(declare-fun m!87269 () Bool)

(assert (=> b!83885 m!87269))

(declare-fun m!87271 () Bool)

(assert (=> d!21271 m!87271))

(assert (=> d!21271 m!86675))

(declare-fun m!87273 () Bool)

(assert (=> b!83888 m!87273))

(declare-fun m!87275 () Bool)

(assert (=> b!83883 m!87275))

(assert (=> d!21049 d!21271))

(assert (=> b!83564 d!20955))

(declare-fun d!21273 () Bool)

(assert (=> d!21273 (= ($colon$colon!70 e!54501 (ite c!13336 (h!2109 (toList!739 (+!107 lt!38728 lt!38742))) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729)))) (Cons!1519 (ite c!13336 (h!2109 (toList!739 (+!107 lt!38728 lt!38742))) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))) e!54501))))

(assert (=> bm!7850 d!21273))

(declare-fun d!21275 () Bool)

(assert (=> d!21275 (isDefined!91 (getValueByKey!137 (toList!739 lt!39032) (_1!1111 lt!38742)))))

(declare-fun lt!39531 () Unit!2426)

(assert (=> d!21275 (= lt!39531 (choose!500 (toList!739 lt!39032) (_1!1111 lt!38742)))))

(declare-fun e!54726 () Bool)

(assert (=> d!21275 e!54726))

(declare-fun res!43360 () Bool)

(assert (=> d!21275 (=> (not res!43360) (not e!54726))))

(assert (=> d!21275 (= res!43360 (isStrictlySorted!292 (toList!739 lt!39032)))))

(assert (=> d!21275 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39032) (_1!1111 lt!38742)) lt!39531)))

(declare-fun b!83892 () Bool)

(assert (=> b!83892 (= e!54726 (containsKey!141 (toList!739 lt!39032) (_1!1111 lt!38742)))))

(assert (= (and d!21275 res!43360) b!83892))

(assert (=> d!21275 m!85917))

(assert (=> d!21275 m!85917))

(assert (=> d!21275 m!86971))

(declare-fun m!87277 () Bool)

(assert (=> d!21275 m!87277))

(declare-fun m!87279 () Bool)

(assert (=> d!21275 m!87279))

(assert (=> b!83892 m!86967))

(assert (=> b!83676 d!21275))

(declare-fun d!21277 () Bool)

(assert (=> d!21277 (= (isDefined!91 (getValueByKey!137 (toList!739 lt!39032) (_1!1111 lt!38742))) (not (isEmpty!338 (getValueByKey!137 (toList!739 lt!39032) (_1!1111 lt!38742)))))))

(declare-fun bs!3539 () Bool)

(assert (= bs!3539 d!21277))

(assert (=> bs!3539 m!85917))

(declare-fun m!87281 () Bool)

(assert (=> bs!3539 m!87281))

(assert (=> b!83676 d!21277))

(assert (=> b!83676 d!21035))

(declare-fun d!21279 () Bool)

(declare-fun res!43361 () Bool)

(declare-fun e!54727 () Bool)

(assert (=> d!21279 (=> res!43361 e!54727)))

(assert (=> d!21279 (= res!43361 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38733))) (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!38733)))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(assert (=> d!21279 (= (containsKey!141 (t!5214 (toList!739 lt!38733)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) e!54727)))

(declare-fun b!83893 () Bool)

(declare-fun e!54728 () Bool)

(assert (=> b!83893 (= e!54727 e!54728)))

(declare-fun res!43362 () Bool)

(assert (=> b!83893 (=> (not res!43362) (not e!54728))))

(assert (=> b!83893 (= res!43362 (and (or (not ((_ is Cons!1519) (t!5214 (toList!739 lt!38733)))) (bvsle (_1!1111 (h!2109 (t!5214 (toList!739 lt!38733)))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))) ((_ is Cons!1519) (t!5214 (toList!739 lt!38733))) (bvslt (_1!1111 (h!2109 (t!5214 (toList!739 lt!38733)))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(declare-fun b!83894 () Bool)

(assert (=> b!83894 (= e!54728 (containsKey!141 (t!5214 (t!5214 (toList!739 lt!38733))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (= (and d!21279 (not res!43361)) b!83893))

(assert (= (and b!83893 res!43362) b!83894))

(assert (=> b!83894 m!85563))

(declare-fun m!87283 () Bool)

(assert (=> b!83894 m!87283))

(assert (=> b!83253 d!21279))

(declare-fun b!83895 () Bool)

(declare-fun e!54733 () Bool)

(declare-fun lt!39536 () ListLongMap!1447)

(assert (=> b!83895 (= e!54733 (= lt!39536 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16)))) (mask!6333 newMap!16) (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) (minValue!2210 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2316 newMap!16))))))

(declare-fun d!21281 () Bool)

(declare-fun e!54730 () Bool)

(assert (=> d!21281 e!54730))

(declare-fun res!43364 () Bool)

(assert (=> d!21281 (=> (not res!43364) (not e!54730))))

(assert (=> d!21281 (= res!43364 (not (contains!749 lt!39536 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!54732 () ListLongMap!1447)

(assert (=> d!21281 (= lt!39536 e!54732)))

(declare-fun c!13450 () Bool)

(assert (=> d!21281 (= c!13450 (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(assert (=> d!21281 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21281 (= (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16)))) (mask!6333 newMap!16) (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39536)))

(declare-fun b!83896 () Bool)

(declare-fun e!54735 () Bool)

(assert (=> b!83896 (= e!54730 e!54735)))

(declare-fun c!13449 () Bool)

(declare-fun e!54731 () Bool)

(assert (=> b!83896 (= c!13449 e!54731)))

(declare-fun res!43365 () Bool)

(assert (=> b!83896 (=> (not res!43365) (not e!54731))))

(assert (=> b!83896 (= res!43365 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83897 () Bool)

(declare-fun e!54729 () ListLongMap!1447)

(declare-fun call!7897 () ListLongMap!1447)

(assert (=> b!83897 (= e!54729 call!7897)))

(declare-fun b!83898 () Bool)

(assert (=> b!83898 (= e!54733 (isEmpty!336 lt!39536))))

(declare-fun b!83899 () Bool)

(assert (=> b!83899 (= e!54735 e!54733)))

(declare-fun c!13451 () Bool)

(assert (=> b!83899 (= c!13451 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!83900 () Bool)

(declare-fun res!43366 () Bool)

(assert (=> b!83900 (=> (not res!43366) (not e!54730))))

(assert (=> b!83900 (= res!43366 (not (contains!749 lt!39536 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!83901 () Bool)

(assert (=> b!83901 (= e!54732 (ListLongMap!1448 Nil!1520))))

(declare-fun b!83902 () Bool)

(assert (=> b!83902 (= e!54731 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83902 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!83903 () Bool)

(declare-fun lt!39533 () Unit!2426)

(declare-fun lt!39532 () Unit!2426)

(assert (=> b!83903 (= lt!39533 lt!39532)))

(declare-fun lt!39537 () (_ BitVec 64))

(declare-fun lt!39538 () ListLongMap!1447)

(declare-fun lt!39534 () (_ BitVec 64))

(declare-fun lt!39535 () V!3017)

(assert (=> b!83903 (not (contains!749 (+!107 lt!39538 (tuple2!2201 lt!39534 lt!39535)) lt!39537))))

(assert (=> b!83903 (= lt!39532 (addStillNotContains!31 lt!39538 lt!39534 lt!39535 lt!39537))))

(assert (=> b!83903 (= lt!39537 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!83903 (= lt!39535 (get!1193 (select (arr!1901 (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!83903 (= lt!39534 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!83903 (= lt!39538 call!7897)))

(assert (=> b!83903 (= e!54729 (+!107 call!7897 (tuple2!2201 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) (get!1193 (select (arr!1901 (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!7894 () Bool)

(assert (=> bm!7894 (= call!7897 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16)))) (mask!6333 newMap!16) (ite (and c!13210 c!13217) lt!38999 (extraKeys!2159 newMap!16)) (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) (minValue!2210 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2316 newMap!16)))))

(declare-fun b!83904 () Bool)

(assert (=> b!83904 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(assert (=> b!83904 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2145 (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16)))))))))

(declare-fun e!54734 () Bool)

(assert (=> b!83904 (= e!54734 (= (apply!81 lt!39536 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) (get!1193 (select (arr!1901 (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!83905 () Bool)

(assert (=> b!83905 (= e!54732 e!54729)))

(declare-fun c!13452 () Bool)

(assert (=> b!83905 (= c!13452 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83906 () Bool)

(assert (=> b!83906 (= e!54735 e!54734)))

(assert (=> b!83906 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun res!43363 () Bool)

(assert (=> b!83906 (= res!43363 (contains!749 lt!39536 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83906 (=> (not res!43363) (not e!54734))))

(assert (= (and d!21281 c!13450) b!83901))

(assert (= (and d!21281 (not c!13450)) b!83905))

(assert (= (and b!83905 c!13452) b!83903))

(assert (= (and b!83905 (not c!13452)) b!83897))

(assert (= (or b!83903 b!83897) bm!7894))

(assert (= (and d!21281 res!43364) b!83900))

(assert (= (and b!83900 res!43366) b!83896))

(assert (= (and b!83896 res!43365) b!83902))

(assert (= (and b!83896 c!13449) b!83906))

(assert (= (and b!83896 (not c!13449)) b!83899))

(assert (= (and b!83906 res!43363) b!83904))

(assert (= (and b!83899 c!13451) b!83895))

(assert (= (and b!83899 (not c!13451)) b!83898))

(declare-fun b_lambda!3727 () Bool)

(assert (=> (not b_lambda!3727) (not b!83903)))

(assert (=> b!83903 t!5225))

(declare-fun b_and!5093 () Bool)

(assert (= b_and!5089 (and (=> t!5225 result!2895) b_and!5093)))

(assert (=> b!83903 t!5227))

(declare-fun b_and!5095 () Bool)

(assert (= b_and!5091 (and (=> t!5227 result!2897) b_and!5095)))

(declare-fun b_lambda!3729 () Bool)

(assert (=> (not b_lambda!3729) (not b!83904)))

(assert (=> b!83904 t!5225))

(declare-fun b_and!5097 () Bool)

(assert (= b_and!5093 (and (=> t!5225 result!2895) b_and!5097)))

(assert (=> b!83904 t!5227))

(declare-fun b_and!5099 () Bool)

(assert (= b_and!5095 (and (=> t!5227 result!2897) b_and!5099)))

(declare-fun m!87285 () Bool)

(assert (=> bm!7894 m!87285))

(declare-fun m!87287 () Bool)

(assert (=> b!83898 m!87287))

(assert (=> b!83902 m!86045))

(assert (=> b!83902 m!86045))

(assert (=> b!83902 m!86051))

(declare-fun m!87289 () Bool)

(assert (=> b!83903 m!87289))

(declare-fun m!87291 () Bool)

(assert (=> b!83903 m!87291))

(assert (=> b!83903 m!86953))

(assert (=> b!83903 m!86141))

(assert (=> b!83903 m!86955))

(declare-fun m!87293 () Bool)

(assert (=> b!83903 m!87293))

(declare-fun m!87295 () Bool)

(assert (=> b!83903 m!87295))

(assert (=> b!83903 m!86045))

(assert (=> b!83903 m!86141))

(assert (=> b!83903 m!87293))

(assert (=> b!83903 m!86953))

(declare-fun m!87297 () Bool)

(assert (=> d!21281 m!87297))

(assert (=> d!21281 m!86067))

(assert (=> b!83905 m!86045))

(assert (=> b!83905 m!86045))

(assert (=> b!83905 m!86051))

(assert (=> b!83895 m!87285))

(assert (=> b!83906 m!86045))

(assert (=> b!83906 m!86045))

(declare-fun m!87299 () Bool)

(assert (=> b!83906 m!87299))

(declare-fun m!87301 () Bool)

(assert (=> b!83900 m!87301))

(assert (=> b!83904 m!86953))

(assert (=> b!83904 m!86045))

(assert (=> b!83904 m!86141))

(assert (=> b!83904 m!86045))

(declare-fun m!87303 () Bool)

(assert (=> b!83904 m!87303))

(assert (=> b!83904 m!86953))

(assert (=> b!83904 m!86141))

(assert (=> b!83904 m!86955))

(assert (=> bm!7875 d!21281))

(declare-fun d!21283 () Bool)

(declare-fun e!54737 () Bool)

(assert (=> d!21283 e!54737))

(declare-fun res!43367 () Bool)

(assert (=> d!21283 (=> res!43367 e!54737)))

(declare-fun lt!39540 () Bool)

(assert (=> d!21283 (= res!43367 (not lt!39540))))

(declare-fun lt!39542 () Bool)

(assert (=> d!21283 (= lt!39540 lt!39542)))

(declare-fun lt!39541 () Unit!2426)

(declare-fun e!54736 () Unit!2426)

(assert (=> d!21283 (= lt!39541 e!54736)))

(declare-fun c!13453 () Bool)

(assert (=> d!21283 (= c!13453 lt!39542)))

(assert (=> d!21283 (= lt!39542 (containsKey!141 (toList!739 lt!38912) lt!38906))))

(assert (=> d!21283 (= (contains!749 lt!38912 lt!38906) lt!39540)))

(declare-fun b!83907 () Bool)

(declare-fun lt!39539 () Unit!2426)

(assert (=> b!83907 (= e!54736 lt!39539)))

(assert (=> b!83907 (= lt!39539 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!38912) lt!38906))))

(assert (=> b!83907 (isDefined!91 (getValueByKey!137 (toList!739 lt!38912) lt!38906))))

(declare-fun b!83908 () Bool)

(declare-fun Unit!2466 () Unit!2426)

(assert (=> b!83908 (= e!54736 Unit!2466)))

(declare-fun b!83909 () Bool)

(assert (=> b!83909 (= e!54737 (isDefined!91 (getValueByKey!137 (toList!739 lt!38912) lt!38906)))))

(assert (= (and d!21283 c!13453) b!83907))

(assert (= (and d!21283 (not c!13453)) b!83908))

(assert (= (and d!21283 (not res!43367)) b!83909))

(declare-fun m!87305 () Bool)

(assert (=> d!21283 m!87305))

(declare-fun m!87307 () Bool)

(assert (=> b!83907 m!87307))

(assert (=> b!83907 m!86269))

(assert (=> b!83907 m!86269))

(declare-fun m!87309 () Bool)

(assert (=> b!83907 m!87309))

(assert (=> b!83909 m!86269))

(assert (=> b!83909 m!86269))

(assert (=> b!83909 m!87309))

(assert (=> d!20935 d!21283))

(assert (=> d!20935 d!20951))

(assert (=> d!20935 d!20953))

(declare-fun d!21285 () Bool)

(assert (=> d!21285 (= (apply!81 (+!107 lt!38912 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38906) (apply!81 lt!38912 lt!38906))))

(assert (=> d!21285 true))

(declare-fun _$34!831 () Unit!2426)

(assert (=> d!21285 (= (choose!494 lt!38912 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38906) _$34!831)))

(declare-fun bs!3540 () Bool)

(assert (= bs!3540 d!21285))

(assert (=> bs!3540 m!85797))

(assert (=> bs!3540 m!85797))

(assert (=> bs!3540 m!85799))

(assert (=> bs!3540 m!85793))

(assert (=> d!20935 d!21285))

(assert (=> d!20935 d!20939))

(declare-fun d!21287 () Bool)

(declare-fun res!43368 () Bool)

(declare-fun e!54738 () Bool)

(assert (=> d!21287 (=> res!43368 e!54738)))

(assert (=> d!21287 (= res!43368 (and ((_ is Cons!1519) (toList!739 lt!39061)) (= (_1!1111 (h!2109 (toList!739 lt!39061))) (_1!1111 lt!38729))))))

(assert (=> d!21287 (= (containsKey!141 (toList!739 lt!39061) (_1!1111 lt!38729)) e!54738)))

(declare-fun b!83911 () Bool)

(declare-fun e!54739 () Bool)

(assert (=> b!83911 (= e!54738 e!54739)))

(declare-fun res!43369 () Bool)

(assert (=> b!83911 (=> (not res!43369) (not e!54739))))

(assert (=> b!83911 (= res!43369 (and (or (not ((_ is Cons!1519) (toList!739 lt!39061))) (bvsle (_1!1111 (h!2109 (toList!739 lt!39061))) (_1!1111 lt!38729))) ((_ is Cons!1519) (toList!739 lt!39061)) (bvslt (_1!1111 (h!2109 (toList!739 lt!39061))) (_1!1111 lt!38729))))))

(declare-fun b!83912 () Bool)

(assert (=> b!83912 (= e!54739 (containsKey!141 (t!5214 (toList!739 lt!39061)) (_1!1111 lt!38729)))))

(assert (= (and d!21287 (not res!43368)) b!83911))

(assert (= (and b!83911 res!43369) b!83912))

(declare-fun m!87311 () Bool)

(assert (=> b!83912 m!87311))

(assert (=> d!21107 d!21287))

(declare-fun d!21289 () Bool)

(assert (=> d!21289 (= (inRange!0 (ite c!13253 (index!3116 lt!39099) (index!3119 lt!39099)) (mask!6333 newMap!16)) (and (bvsge (ite c!13253 (index!3116 lt!39099) (index!3119 lt!39099)) #b00000000000000000000000000000000) (bvslt (ite c!13253 (index!3116 lt!39099) (index!3119 lt!39099)) (bvadd (mask!6333 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7813 d!21289))

(declare-fun d!21291 () Bool)

(declare-fun e!54741 () Bool)

(assert (=> d!21291 e!54741))

(declare-fun res!43370 () Bool)

(assert (=> d!21291 (=> res!43370 e!54741)))

(declare-fun lt!39544 () Bool)

(assert (=> d!21291 (= res!43370 (not lt!39544))))

(declare-fun lt!39546 () Bool)

(assert (=> d!21291 (= lt!39544 lt!39546)))

(declare-fun lt!39545 () Unit!2426)

(declare-fun e!54740 () Unit!2426)

(assert (=> d!21291 (= lt!39545 e!54740)))

(declare-fun c!13454 () Bool)

(assert (=> d!21291 (= c!13454 lt!39546)))

(assert (=> d!21291 (= lt!39546 (containsKey!141 (toList!739 lt!39450) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!21291 (= (contains!749 lt!39450 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) lt!39544)))

(declare-fun b!83913 () Bool)

(declare-fun lt!39543 () Unit!2426)

(assert (=> b!83913 (= e!54740 lt!39543)))

(assert (=> b!83913 (= lt!39543 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39450) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83913 (isDefined!91 (getValueByKey!137 (toList!739 lt!39450) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83914 () Bool)

(declare-fun Unit!2467 () Unit!2426)

(assert (=> b!83914 (= e!54740 Unit!2467)))

(declare-fun b!83915 () Bool)

(assert (=> b!83915 (= e!54741 (isDefined!91 (getValueByKey!137 (toList!739 lt!39450) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!21291 c!13454) b!83913))

(assert (= (and d!21291 (not c!13454)) b!83914))

(assert (= (and d!21291 (not res!43370)) b!83915))

(assert (=> d!21291 m!86045))

(declare-fun m!87313 () Bool)

(assert (=> d!21291 m!87313))

(assert (=> b!83913 m!86045))

(declare-fun m!87315 () Bool)

(assert (=> b!83913 m!87315))

(assert (=> b!83913 m!86045))

(declare-fun m!87317 () Bool)

(assert (=> b!83913 m!87317))

(assert (=> b!83913 m!87317))

(declare-fun m!87319 () Bool)

(assert (=> b!83913 m!87319))

(assert (=> b!83915 m!86045))

(assert (=> b!83915 m!87317))

(assert (=> b!83915 m!87317))

(assert (=> b!83915 m!87319))

(assert (=> b!83668 d!21291))

(declare-fun d!21293 () Bool)

(assert (=> d!21293 (= (isDefined!91 (getValueByKey!137 (toList!739 lt!38907) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!338 (getValueByKey!137 (toList!739 lt!38907) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3541 () Bool)

(assert (= bs!3541 d!21293))

(assert (=> bs!3541 m!86649))

(declare-fun m!87321 () Bool)

(assert (=> bs!3541 m!87321))

(assert (=> b!83606 d!21293))

(declare-fun b!83918 () Bool)

(declare-fun e!54743 () Option!143)

(assert (=> b!83918 (= e!54743 (getValueByKey!137 (t!5214 (toList!739 lt!38907)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!13455 () Bool)

(declare-fun d!21295 () Bool)

(assert (=> d!21295 (= c!13455 (and ((_ is Cons!1519) (toList!739 lt!38907)) (= (_1!1111 (h!2109 (toList!739 lt!38907))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!54742 () Option!143)

(assert (=> d!21295 (= (getValueByKey!137 (toList!739 lt!38907) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!54742)))

(declare-fun b!83916 () Bool)

(assert (=> b!83916 (= e!54742 (Some!142 (_2!1111 (h!2109 (toList!739 lt!38907)))))))

(declare-fun b!83919 () Bool)

(assert (=> b!83919 (= e!54743 None!141)))

(declare-fun b!83917 () Bool)

(assert (=> b!83917 (= e!54742 e!54743)))

(declare-fun c!13456 () Bool)

(assert (=> b!83917 (= c!13456 (and ((_ is Cons!1519) (toList!739 lt!38907)) (not (= (_1!1111 (h!2109 (toList!739 lt!38907))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!21295 c!13455) b!83916))

(assert (= (and d!21295 (not c!13455)) b!83917))

(assert (= (and b!83917 c!13456) b!83918))

(assert (= (and b!83917 (not c!13456)) b!83919))

(assert (=> b!83918 m!85767))

(declare-fun m!87323 () Bool)

(assert (=> b!83918 m!87323))

(assert (=> b!83606 d!21295))

(declare-fun d!21297 () Bool)

(assert (=> d!21297 (isDefined!91 (getValueByKey!137 (toList!739 call!7780) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))))))

(declare-fun lt!39547 () Unit!2426)

(assert (=> d!21297 (= lt!39547 (choose!500 (toList!739 call!7780) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))))))

(declare-fun e!54744 () Bool)

(assert (=> d!21297 e!54744))

(declare-fun res!43371 () Bool)

(assert (=> d!21297 (=> (not res!43371) (not e!54744))))

(assert (=> d!21297 (= res!43371 (isStrictlySorted!292 (toList!739 call!7780)))))

(assert (=> d!21297 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 call!7780) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))) lt!39547)))

(declare-fun b!83920 () Bool)

(assert (=> b!83920 (= e!54744 (containsKey!141 (toList!739 call!7780) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))))))

(assert (= (and d!21297 res!43371) b!83920))

(assert (=> d!21297 m!86057))

(assert (=> d!21297 m!86057))

(assert (=> d!21297 m!86059))

(declare-fun m!87325 () Bool)

(assert (=> d!21297 m!87325))

(declare-fun m!87327 () Bool)

(assert (=> d!21297 m!87327))

(assert (=> b!83920 m!86053))

(assert (=> b!83166 d!21297))

(declare-fun d!21299 () Bool)

(assert (=> d!21299 (= (isDefined!91 (getValueByKey!137 (toList!739 call!7780) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998))))) (not (isEmpty!338 (getValueByKey!137 (toList!739 call!7780) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))))))))

(declare-fun bs!3542 () Bool)

(assert (= bs!3542 d!21299))

(assert (=> bs!3542 m!86057))

(declare-fun m!87329 () Bool)

(assert (=> bs!3542 m!87329))

(assert (=> b!83166 d!21299))

(declare-fun b!83923 () Bool)

(declare-fun e!54746 () Option!143)

(assert (=> b!83923 (= e!54746 (getValueByKey!137 (t!5214 (toList!739 call!7780)) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))))))

(declare-fun d!21301 () Bool)

(declare-fun c!13457 () Bool)

(assert (=> d!21301 (= c!13457 (and ((_ is Cons!1519) (toList!739 call!7780)) (= (_1!1111 (h!2109 (toList!739 call!7780))) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998))))))))

(declare-fun e!54745 () Option!143)

(assert (=> d!21301 (= (getValueByKey!137 (toList!739 call!7780) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))) e!54745)))

(declare-fun b!83921 () Bool)

(assert (=> b!83921 (= e!54745 (Some!142 (_2!1111 (h!2109 (toList!739 call!7780)))))))

(declare-fun b!83924 () Bool)

(assert (=> b!83924 (= e!54746 None!141)))

(declare-fun b!83922 () Bool)

(assert (=> b!83922 (= e!54745 e!54746)))

(declare-fun c!13458 () Bool)

(assert (=> b!83922 (= c!13458 (and ((_ is Cons!1519) (toList!739 call!7780)) (not (= (_1!1111 (h!2109 (toList!739 call!7780))) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))))))))

(assert (= (and d!21301 c!13457) b!83921))

(assert (= (and d!21301 (not c!13457)) b!83922))

(assert (= (and b!83922 c!13458) b!83923))

(assert (= (and b!83922 (not c!13458)) b!83924))

(declare-fun m!87331 () Bool)

(assert (=> b!83923 m!87331))

(assert (=> b!83166 d!21301))

(declare-fun b!83927 () Bool)

(declare-fun e!54748 () Option!143)

(assert (=> b!83927 (= e!54748 (getValueByKey!137 (t!5214 (t!5214 lt!39031)) (_1!1111 lt!38742)))))

(declare-fun d!21303 () Bool)

(declare-fun c!13459 () Bool)

(assert (=> d!21303 (= c!13459 (and ((_ is Cons!1519) (t!5214 lt!39031)) (= (_1!1111 (h!2109 (t!5214 lt!39031))) (_1!1111 lt!38742))))))

(declare-fun e!54747 () Option!143)

(assert (=> d!21303 (= (getValueByKey!137 (t!5214 lt!39031) (_1!1111 lt!38742)) e!54747)))

(declare-fun b!83925 () Bool)

(assert (=> b!83925 (= e!54747 (Some!142 (_2!1111 (h!2109 (t!5214 lt!39031)))))))

(declare-fun b!83928 () Bool)

(assert (=> b!83928 (= e!54748 None!141)))

(declare-fun b!83926 () Bool)

(assert (=> b!83926 (= e!54747 e!54748)))

(declare-fun c!13460 () Bool)

(assert (=> b!83926 (= c!13460 (and ((_ is Cons!1519) (t!5214 lt!39031)) (not (= (_1!1111 (h!2109 (t!5214 lt!39031))) (_1!1111 lt!38742)))))))

(assert (= (and d!21303 c!13459) b!83925))

(assert (= (and d!21303 (not c!13459)) b!83926))

(assert (= (and b!83926 c!13460) b!83927))

(assert (= (and b!83926 (not c!13460)) b!83928))

(declare-fun m!87333 () Bool)

(assert (=> b!83927 m!87333))

(assert (=> b!83681 d!21303))

(declare-fun d!21305 () Bool)

(assert (=> d!21305 (= (validMask!0 (mask!6333 newMap!16)) (and (or (= (mask!6333 newMap!16) #b00000000000000000000000000000111) (= (mask!6333 newMap!16) #b00000000000000000000000000001111) (= (mask!6333 newMap!16) #b00000000000000000000000000011111) (= (mask!6333 newMap!16) #b00000000000000000000000000111111) (= (mask!6333 newMap!16) #b00000000000000000000000001111111) (= (mask!6333 newMap!16) #b00000000000000000000000011111111) (= (mask!6333 newMap!16) #b00000000000000000000000111111111) (= (mask!6333 newMap!16) #b00000000000000000000001111111111) (= (mask!6333 newMap!16) #b00000000000000000000011111111111) (= (mask!6333 newMap!16) #b00000000000000000000111111111111) (= (mask!6333 newMap!16) #b00000000000000000001111111111111) (= (mask!6333 newMap!16) #b00000000000000000011111111111111) (= (mask!6333 newMap!16) #b00000000000000000111111111111111) (= (mask!6333 newMap!16) #b00000000000000001111111111111111) (= (mask!6333 newMap!16) #b00000000000000011111111111111111) (= (mask!6333 newMap!16) #b00000000000000111111111111111111) (= (mask!6333 newMap!16) #b00000000000001111111111111111111) (= (mask!6333 newMap!16) #b00000000000011111111111111111111) (= (mask!6333 newMap!16) #b00000000000111111111111111111111) (= (mask!6333 newMap!16) #b00000000001111111111111111111111) (= (mask!6333 newMap!16) #b00000000011111111111111111111111) (= (mask!6333 newMap!16) #b00000000111111111111111111111111) (= (mask!6333 newMap!16) #b00000001111111111111111111111111) (= (mask!6333 newMap!16) #b00000011111111111111111111111111) (= (mask!6333 newMap!16) #b00000111111111111111111111111111) (= (mask!6333 newMap!16) #b00001111111111111111111111111111) (= (mask!6333 newMap!16) #b00011111111111111111111111111111) (= (mask!6333 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6333 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!21067 d!21305))

(declare-fun d!21307 () Bool)

(assert (=> d!21307 (= ($colon$colon!70 e!54487 (ite c!13329 (h!2109 (toList!739 lt!38741)) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738)))) (Cons!1519 (ite c!13329 (h!2109 (toList!739 lt!38741)) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))) e!54487))))

(assert (=> bm!7847 d!21307))

(declare-fun d!21309 () Bool)

(assert (=> d!21309 (= (apply!81 lt!39450 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) (get!1196 (getValueByKey!137 (toList!739 lt!39450) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3543 () Bool)

(assert (= bs!3543 d!21309))

(assert (=> bs!3543 m!86045))

(assert (=> bs!3543 m!87317))

(assert (=> bs!3543 m!87317))

(declare-fun m!87335 () Bool)

(assert (=> bs!3543 m!87335))

(assert (=> b!83655 d!21309))

(declare-fun d!21311 () Bool)

(declare-fun c!13461 () Bool)

(assert (=> d!21311 (= c!13461 ((_ is ValueCellFull!920) (select (arr!1901 (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!54749 () V!3017)

(assert (=> d!21311 (= (get!1193 (select (arr!1901 (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!54749)))

(declare-fun b!83929 () Bool)

(assert (=> b!83929 (= e!54749 (get!1194 (select (arr!1901 (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!83930 () Bool)

(assert (=> b!83930 (= e!54749 (get!1195 (select (arr!1901 (ite c!13210 (_values!2299 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21311 c!13461) b!83929))

(assert (= (and d!21311 (not c!13461)) b!83930))

(assert (=> b!83929 m!86953))

(assert (=> b!83929 m!86141))

(declare-fun m!87337 () Bool)

(assert (=> b!83929 m!87337))

(assert (=> b!83930 m!86953))

(assert (=> b!83930 m!86141))

(declare-fun m!87339 () Bool)

(assert (=> b!83930 m!87339))

(assert (=> b!83655 d!21311))

(declare-fun b!83931 () Bool)

(declare-fun e!54754 () List!1523)

(declare-fun call!7898 () List!1523)

(assert (=> b!83931 (= e!54754 call!7898)))

(declare-fun b!83932 () Bool)

(declare-fun e!54752 () Bool)

(declare-fun lt!39548 () List!1523)

(assert (=> b!83932 (= e!54752 (contains!751 lt!39548 (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(declare-fun c!13462 () Bool)

(declare-fun e!54751 () List!1523)

(declare-fun b!83933 () Bool)

(declare-fun c!13464 () Bool)

(assert (=> b!83933 (= e!54751 (ite c!13464 (t!5214 (t!5214 (toList!739 lt!38731))) (ite c!13462 (Cons!1519 (h!2109 (t!5214 (toList!739 lt!38731))) (t!5214 (t!5214 (toList!739 lt!38731)))) Nil!1520)))))

(declare-fun d!21313 () Bool)

(assert (=> d!21313 e!54752))

(declare-fun res!43373 () Bool)

(assert (=> d!21313 (=> (not res!43373) (not e!54752))))

(assert (=> d!21313 (= res!43373 (isStrictlySorted!292 lt!39548))))

(declare-fun e!54753 () List!1523)

(assert (=> d!21313 (= lt!39548 e!54753)))

(declare-fun c!13463 () Bool)

(assert (=> d!21313 (= c!13463 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38731))) (bvslt (_1!1111 (h!2109 (t!5214 (toList!739 lt!38731)))) (_1!1111 lt!38738))))))

(assert (=> d!21313 (isStrictlySorted!292 (t!5214 (toList!739 lt!38731)))))

(assert (=> d!21313 (= (insertStrictlySorted!60 (t!5214 (toList!739 lt!38731)) (_1!1111 lt!38738) (_2!1111 lt!38738)) lt!39548)))

(declare-fun b!83934 () Bool)

(assert (=> b!83934 (= e!54751 (insertStrictlySorted!60 (t!5214 (t!5214 (toList!739 lt!38731))) (_1!1111 lt!38738) (_2!1111 lt!38738)))))

(declare-fun bm!7895 () Bool)

(declare-fun call!7900 () List!1523)

(assert (=> bm!7895 (= call!7898 call!7900)))

(declare-fun b!83935 () Bool)

(declare-fun e!54750 () List!1523)

(declare-fun call!7899 () List!1523)

(assert (=> b!83935 (= e!54750 call!7899)))

(declare-fun b!83936 () Bool)

(assert (=> b!83936 (= e!54753 e!54754)))

(assert (=> b!83936 (= c!13464 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38731))) (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!38731)))) (_1!1111 lt!38738))))))

(declare-fun b!83937 () Bool)

(declare-fun res!43372 () Bool)

(assert (=> b!83937 (=> (not res!43372) (not e!54752))))

(assert (=> b!83937 (= res!43372 (containsKey!141 lt!39548 (_1!1111 lt!38738)))))

(declare-fun bm!7896 () Bool)

(assert (=> bm!7896 (= call!7899 call!7898)))

(declare-fun b!83938 () Bool)

(assert (=> b!83938 (= e!54753 call!7900)))

(declare-fun b!83939 () Bool)

(assert (=> b!83939 (= e!54750 call!7899)))

(declare-fun b!83940 () Bool)

(assert (=> b!83940 (= c!13462 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38731))) (bvsgt (_1!1111 (h!2109 (t!5214 (toList!739 lt!38731)))) (_1!1111 lt!38738))))))

(assert (=> b!83940 (= e!54754 e!54750)))

(declare-fun bm!7897 () Bool)

(assert (=> bm!7897 (= call!7900 ($colon$colon!70 e!54751 (ite c!13463 (h!2109 (t!5214 (toList!739 lt!38731))) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738)))))))

(declare-fun c!13465 () Bool)

(assert (=> bm!7897 (= c!13465 c!13463)))

(assert (= (and d!21313 c!13463) b!83938))

(assert (= (and d!21313 (not c!13463)) b!83936))

(assert (= (and b!83936 c!13464) b!83931))

(assert (= (and b!83936 (not c!13464)) b!83940))

(assert (= (and b!83940 c!13462) b!83935))

(assert (= (and b!83940 (not c!13462)) b!83939))

(assert (= (or b!83935 b!83939) bm!7896))

(assert (= (or b!83931 bm!7896) bm!7895))

(assert (= (or b!83938 bm!7895) bm!7897))

(assert (= (and bm!7897 c!13465) b!83934))

(assert (= (and bm!7897 (not c!13465)) b!83933))

(assert (= (and d!21313 res!43373) b!83937))

(assert (= (and b!83937 res!43372) b!83932))

(declare-fun m!87341 () Bool)

(assert (=> bm!7897 m!87341))

(declare-fun m!87343 () Bool)

(assert (=> b!83934 m!87343))

(declare-fun m!87345 () Bool)

(assert (=> d!21313 m!87345))

(declare-fun m!87347 () Bool)

(assert (=> d!21313 m!87347))

(declare-fun m!87349 () Bool)

(assert (=> b!83937 m!87349))

(declare-fun m!87351 () Bool)

(assert (=> b!83932 m!87351))

(assert (=> b!83384 d!21313))

(declare-fun d!21315 () Bool)

(declare-fun res!43374 () Bool)

(declare-fun e!54755 () Bool)

(assert (=> d!21315 (=> res!43374 e!54755)))

(assert (=> d!21315 (= res!43374 (and ((_ is Cons!1519) (toList!739 lt!39068)) (= (_1!1111 (h!2109 (toList!739 lt!39068))) (_1!1111 lt!38729))))))

(assert (=> d!21315 (= (containsKey!141 (toList!739 lt!39068) (_1!1111 lt!38729)) e!54755)))

(declare-fun b!83941 () Bool)

(declare-fun e!54756 () Bool)

(assert (=> b!83941 (= e!54755 e!54756)))

(declare-fun res!43375 () Bool)

(assert (=> b!83941 (=> (not res!43375) (not e!54756))))

(assert (=> b!83941 (= res!43375 (and (or (not ((_ is Cons!1519) (toList!739 lt!39068))) (bvsle (_1!1111 (h!2109 (toList!739 lt!39068))) (_1!1111 lt!38729))) ((_ is Cons!1519) (toList!739 lt!39068)) (bvslt (_1!1111 (h!2109 (toList!739 lt!39068))) (_1!1111 lt!38729))))))

(declare-fun b!83942 () Bool)

(assert (=> b!83942 (= e!54756 (containsKey!141 (t!5214 (toList!739 lt!39068)) (_1!1111 lt!38729)))))

(assert (= (and d!21315 (not res!43374)) b!83941))

(assert (= (and b!83941 res!43375) b!83942))

(declare-fun m!87353 () Bool)

(assert (=> b!83942 m!87353))

(assert (=> d!21069 d!21315))

(declare-fun b!83945 () Bool)

(declare-fun e!54758 () Option!143)

(assert (=> b!83945 (= e!54758 (getValueByKey!137 (t!5214 (toList!739 lt!39250)) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun c!13466 () Bool)

(declare-fun d!21317 () Bool)

(assert (=> d!21317 (= c!13466 (and ((_ is Cons!1519) (toList!739 lt!39250)) (= (_1!1111 (h!2109 (toList!739 lt!39250))) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(declare-fun e!54757 () Option!143)

(assert (=> d!21317 (= (getValueByKey!137 (toList!739 lt!39250) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) e!54757)))

(declare-fun b!83943 () Bool)

(assert (=> b!83943 (= e!54757 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39250)))))))

(declare-fun b!83946 () Bool)

(assert (=> b!83946 (= e!54758 None!141)))

(declare-fun b!83944 () Bool)

(assert (=> b!83944 (= e!54757 e!54758)))

(declare-fun c!13467 () Bool)

(assert (=> b!83944 (= c!13467 (and ((_ is Cons!1519) (toList!739 lt!39250)) (not (= (_1!1111 (h!2109 (toList!739 lt!39250))) (_1!1111 (ite (or c!13175 c!13178) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))))

(assert (= (and d!21317 c!13466) b!83943))

(assert (= (and d!21317 (not c!13466)) b!83944))

(assert (= (and b!83944 c!13467) b!83945))

(assert (= (and b!83944 (not c!13467)) b!83946))

(declare-fun m!87355 () Bool)

(assert (=> b!83945 m!87355))

(assert (=> b!83421 d!21317))

(declare-fun d!21319 () Bool)

(assert (=> d!21319 (= (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38923)) (not (isEmpty!338 (getValueByKey!137 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38923))))))

(declare-fun bs!3544 () Bool)

(assert (= bs!3544 d!21319))

(assert (=> bs!3544 m!86193))

(declare-fun m!87357 () Bool)

(assert (=> bs!3544 m!87357))

(assert (=> b!83268 d!21319))

(declare-fun b!83949 () Bool)

(declare-fun e!54760 () Option!143)

(assert (=> b!83949 (= e!54760 (getValueByKey!137 (t!5214 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) lt!38923))))

(declare-fun c!13468 () Bool)

(declare-fun d!21321 () Bool)

(assert (=> d!21321 (= c!13468 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) (= (_1!1111 (h!2109 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))) lt!38923)))))

(declare-fun e!54759 () Option!143)

(assert (=> d!21321 (= (getValueByKey!137 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38923) e!54759)))

(declare-fun b!83947 () Bool)

(assert (=> b!83947 (= e!54759 (Some!142 (_2!1111 (h!2109 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))))

(declare-fun b!83950 () Bool)

(assert (=> b!83950 (= e!54760 None!141)))

(declare-fun b!83948 () Bool)

(assert (=> b!83948 (= e!54759 e!54760)))

(declare-fun c!13469 () Bool)

(assert (=> b!83948 (= c!13469 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) (not (= (_1!1111 (h!2109 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))) lt!38923))))))

(assert (= (and d!21321 c!13468) b!83947))

(assert (= (and d!21321 (not c!13468)) b!83948))

(assert (= (and b!83948 c!13469) b!83949))

(assert (= (and b!83948 (not c!13469)) b!83950))

(declare-fun m!87359 () Bool)

(assert (=> b!83949 m!87359))

(assert (=> b!83268 d!21321))

(declare-fun d!21323 () Bool)

(declare-fun lt!39549 () Bool)

(assert (=> d!21323 (= lt!39549 (select (content!87 (t!5214 (toList!739 lt!39077))) lt!38742))))

(declare-fun e!54761 () Bool)

(assert (=> d!21323 (= lt!39549 e!54761)))

(declare-fun res!43376 () Bool)

(assert (=> d!21323 (=> (not res!43376) (not e!54761))))

(assert (=> d!21323 (= res!43376 ((_ is Cons!1519) (t!5214 (toList!739 lt!39077))))))

(assert (=> d!21323 (= (contains!751 (t!5214 (toList!739 lt!39077)) lt!38742) lt!39549)))

(declare-fun b!83951 () Bool)

(declare-fun e!54762 () Bool)

(assert (=> b!83951 (= e!54761 e!54762)))

(declare-fun res!43377 () Bool)

(assert (=> b!83951 (=> res!43377 e!54762)))

(assert (=> b!83951 (= res!43377 (= (h!2109 (t!5214 (toList!739 lt!39077))) lt!38742))))

(declare-fun b!83952 () Bool)

(assert (=> b!83952 (= e!54762 (contains!751 (t!5214 (t!5214 (toList!739 lt!39077))) lt!38742))))

(assert (= (and d!21323 res!43376) b!83951))

(assert (= (and b!83951 (not res!43377)) b!83952))

(declare-fun m!87361 () Bool)

(assert (=> d!21323 m!87361))

(declare-fun m!87363 () Bool)

(assert (=> d!21323 m!87363))

(declare-fun m!87365 () Bool)

(assert (=> b!83952 m!87365))

(assert (=> b!83396 d!21323))

(assert (=> d!20977 d!21305))

(declare-fun d!21325 () Bool)

(declare-fun res!43378 () Bool)

(declare-fun e!54763 () Bool)

(assert (=> d!21325 (=> res!43378 e!54763)))

(assert (=> d!21325 (= res!43378 (and ((_ is Cons!1519) (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052)))) (= (_1!1111 (h!2109 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))))) lt!39054)))))

(assert (=> d!21325 (= (containsKey!141 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))) lt!39054) e!54763)))

(declare-fun b!83953 () Bool)

(declare-fun e!54764 () Bool)

(assert (=> b!83953 (= e!54763 e!54764)))

(declare-fun res!43379 () Bool)

(assert (=> b!83953 (=> (not res!43379) (not e!54764))))

(assert (=> b!83953 (= res!43379 (and (or (not ((_ is Cons!1519) (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))))) (bvsle (_1!1111 (h!2109 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))))) lt!39054)) ((_ is Cons!1519) (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052)))) (bvslt (_1!1111 (h!2109 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052))))) lt!39054)))))

(declare-fun b!83954 () Bool)

(assert (=> b!83954 (= e!54764 (containsKey!141 (t!5214 (toList!739 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052)))) lt!39054))))

(assert (= (and d!21325 (not res!43378)) b!83953))

(assert (= (and b!83953 res!43379) b!83954))

(declare-fun m!87367 () Bool)

(assert (=> b!83954 m!87367))

(assert (=> d!21031 d!21325))

(declare-fun e!54766 () Option!143)

(declare-fun b!83957 () Bool)

(assert (=> b!83957 (= e!54766 (getValueByKey!137 (t!5214 (toList!739 lt!39168)) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21327 () Bool)

(declare-fun c!13470 () Bool)

(assert (=> d!21327 (= c!13470 (and ((_ is Cons!1519) (toList!739 lt!39168)) (= (_1!1111 (h!2109 (toList!739 lt!39168))) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!54765 () Option!143)

(assert (=> d!21327 (= (getValueByKey!137 (toList!739 lt!39168) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!54765)))

(declare-fun b!83955 () Bool)

(assert (=> b!83955 (= e!54765 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39168)))))))

(declare-fun b!83958 () Bool)

(assert (=> b!83958 (= e!54766 None!141)))

(declare-fun b!83956 () Bool)

(assert (=> b!83956 (= e!54765 e!54766)))

(declare-fun c!13471 () Bool)

(assert (=> b!83956 (= c!13471 (and ((_ is Cons!1519) (toList!739 lt!39168)) (not (= (_1!1111 (h!2109 (toList!739 lt!39168))) (_1!1111 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21327 c!13470) b!83955))

(assert (= (and d!21327 (not c!13470)) b!83956))

(assert (= (and b!83956 c!13471) b!83957))

(assert (= (and b!83956 (not c!13471)) b!83958))

(declare-fun m!87369 () Bool)

(assert (=> b!83957 m!87369))

(assert (=> b!83282 d!21327))

(declare-fun d!21329 () Bool)

(declare-fun e!54768 () Bool)

(assert (=> d!21329 e!54768))

(declare-fun res!43380 () Bool)

(assert (=> d!21329 (=> res!43380 e!54768)))

(declare-fun lt!39551 () Bool)

(assert (=> d!21329 (= res!43380 (not lt!39551))))

(declare-fun lt!39553 () Bool)

(assert (=> d!21329 (= lt!39551 lt!39553)))

(declare-fun lt!39552 () Unit!2426)

(declare-fun e!54767 () Unit!2426)

(assert (=> d!21329 (= lt!39552 e!54767)))

(declare-fun c!13472 () Bool)

(assert (=> d!21329 (= c!13472 lt!39553)))

(assert (=> d!21329 (= lt!39553 (containsKey!141 (toList!739 lt!39198) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21329 (= (contains!749 lt!39198 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39551)))

(declare-fun b!83959 () Bool)

(declare-fun lt!39550 () Unit!2426)

(assert (=> b!83959 (= e!54767 lt!39550)))

(assert (=> b!83959 (= lt!39550 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39198) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83959 (isDefined!91 (getValueByKey!137 (toList!739 lt!39198) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83960 () Bool)

(declare-fun Unit!2468 () Unit!2426)

(assert (=> b!83960 (= e!54767 Unit!2468)))

(declare-fun b!83961 () Bool)

(assert (=> b!83961 (= e!54768 (isDefined!91 (getValueByKey!137 (toList!739 lt!39198) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21329 c!13472) b!83959))

(assert (= (and d!21329 (not c!13472)) b!83960))

(assert (= (and d!21329 (not res!43380)) b!83961))

(declare-fun m!87371 () Bool)

(assert (=> d!21329 m!87371))

(declare-fun m!87373 () Bool)

(assert (=> b!83959 m!87373))

(declare-fun m!87375 () Bool)

(assert (=> b!83959 m!87375))

(assert (=> b!83959 m!87375))

(declare-fun m!87377 () Bool)

(assert (=> b!83959 m!87377))

(assert (=> b!83961 m!87375))

(assert (=> b!83961 m!87375))

(assert (=> b!83961 m!87377))

(assert (=> bm!7833 d!21329))

(declare-fun d!21331 () Bool)

(assert (=> d!21331 (isDefined!91 (getValueByKey!137 (toList!739 lt!39061) (_1!1111 lt!38729)))))

(declare-fun lt!39554 () Unit!2426)

(assert (=> d!21331 (= lt!39554 (choose!500 (toList!739 lt!39061) (_1!1111 lt!38729)))))

(declare-fun e!54769 () Bool)

(assert (=> d!21331 e!54769))

(declare-fun res!43381 () Bool)

(assert (=> d!21331 (=> (not res!43381) (not e!54769))))

(assert (=> d!21331 (= res!43381 (isStrictlySorted!292 (toList!739 lt!39061)))))

(assert (=> d!21331 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39061) (_1!1111 lt!38729)) lt!39554)))

(declare-fun b!83962 () Bool)

(assert (=> b!83962 (= e!54769 (containsKey!141 (toList!739 lt!39061) (_1!1111 lt!38729)))))

(assert (= (and d!21331 res!43381) b!83962))

(assert (=> d!21331 m!85961))

(assert (=> d!21331 m!85961))

(assert (=> d!21331 m!86839))

(declare-fun m!87379 () Bool)

(assert (=> d!21331 m!87379))

(declare-fun m!87381 () Bool)

(assert (=> d!21331 m!87381))

(assert (=> b!83962 m!86835))

(assert (=> b!83607 d!21331))

(declare-fun d!21333 () Bool)

(assert (=> d!21333 (= (isDefined!91 (getValueByKey!137 (toList!739 lt!39061) (_1!1111 lt!38729))) (not (isEmpty!338 (getValueByKey!137 (toList!739 lt!39061) (_1!1111 lt!38729)))))))

(declare-fun bs!3545 () Bool)

(assert (= bs!3545 d!21333))

(assert (=> bs!3545 m!85961))

(declare-fun m!87383 () Bool)

(assert (=> bs!3545 m!87383))

(assert (=> b!83607 d!21333))

(assert (=> b!83607 d!20991))

(declare-fun d!21335 () Bool)

(assert (=> d!21335 (= (isDefined!91 (getValueByKey!137 (toList!739 call!7797) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))) (not (isEmpty!338 (getValueByKey!137 (toList!739 call!7797) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))))

(declare-fun bs!3546 () Bool)

(assert (= bs!3546 d!21335))

(assert (=> bs!3546 m!86645))

(declare-fun m!87385 () Bool)

(assert (=> bs!3546 m!87385))

(assert (=> b!83470 d!21335))

(declare-fun b!83965 () Bool)

(declare-fun e!54771 () Option!143)

(assert (=> b!83965 (= e!54771 (getValueByKey!137 (t!5214 (toList!739 call!7797)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun d!21337 () Bool)

(declare-fun c!13473 () Bool)

(assert (=> d!21337 (= c!13473 (and ((_ is Cons!1519) (toList!739 call!7797)) (= (_1!1111 (h!2109 (toList!739 call!7797))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(declare-fun e!54770 () Option!143)

(assert (=> d!21337 (= (getValueByKey!137 (toList!739 call!7797) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) e!54770)))

(declare-fun b!83963 () Bool)

(assert (=> b!83963 (= e!54770 (Some!142 (_2!1111 (h!2109 (toList!739 call!7797)))))))

(declare-fun b!83966 () Bool)

(assert (=> b!83966 (= e!54771 None!141)))

(declare-fun b!83964 () Bool)

(assert (=> b!83964 (= e!54770 e!54771)))

(declare-fun c!13474 () Bool)

(assert (=> b!83964 (= c!13474 (and ((_ is Cons!1519) (toList!739 call!7797)) (not (= (_1!1111 (h!2109 (toList!739 call!7797))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))))

(assert (= (and d!21337 c!13473) b!83963))

(assert (= (and d!21337 (not c!13473)) b!83964))

(assert (= (and b!83964 c!13474) b!83965))

(assert (= (and b!83964 (not c!13474)) b!83966))

(assert (=> b!83965 m!85563))

(declare-fun m!87387 () Bool)

(assert (=> b!83965 m!87387))

(assert (=> b!83470 d!21337))

(declare-fun lt!39555 () Bool)

(declare-fun d!21339 () Bool)

(assert (=> d!21339 (= lt!39555 (select (content!88 (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!54773 () Bool)

(assert (=> d!21339 (= lt!39555 e!54773)))

(declare-fun res!43382 () Bool)

(assert (=> d!21339 (=> (not res!43382) (not e!54773))))

(assert (=> d!21339 (= res!43382 ((_ is Cons!1518) (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519)))))

(assert (=> d!21339 (= (contains!750 (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!39555)))

(declare-fun b!83967 () Bool)

(declare-fun e!54772 () Bool)

(assert (=> b!83967 (= e!54773 e!54772)))

(declare-fun res!43383 () Bool)

(assert (=> b!83967 (=> res!43383 e!54772)))

(assert (=> b!83967 (= res!43383 (= (h!2108 (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!83968 () Bool)

(assert (=> b!83968 (= e!54772 (contains!750 (t!5213 (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!21339 res!43382) b!83967))

(assert (= (and b!83967 (not res!43383)) b!83968))

(declare-fun m!87389 () Bool)

(assert (=> d!21339 m!87389))

(assert (=> d!21339 m!86291))

(declare-fun m!87391 () Bool)

(assert (=> d!21339 m!87391))

(assert (=> b!83968 m!86291))

(declare-fun m!87393 () Bool)

(assert (=> b!83968 m!87393))

(assert (=> b!83292 d!21339))

(assert (=> d!21119 d!21117))

(declare-fun d!21341 () Bool)

(assert (=> d!21341 (= (getValueByKey!137 lt!39056 (_1!1111 lt!38729)) (Some!142 (_2!1111 lt!38729)))))

(assert (=> d!21341 true))

(declare-fun _$22!410 () Unit!2426)

(assert (=> d!21341 (= (choose!497 lt!39056 (_1!1111 lt!38729) (_2!1111 lt!38729)) _$22!410)))

(declare-fun bs!3547 () Bool)

(assert (= bs!3547 d!21341))

(assert (=> bs!3547 m!85943))

(assert (=> d!21119 d!21341))

(declare-fun d!21343 () Bool)

(declare-fun res!43384 () Bool)

(declare-fun e!54774 () Bool)

(assert (=> d!21343 (=> res!43384 e!54774)))

(assert (=> d!21343 (= res!43384 (or ((_ is Nil!1520) lt!39056) ((_ is Nil!1520) (t!5214 lt!39056))))))

(assert (=> d!21343 (= (isStrictlySorted!292 lt!39056) e!54774)))

(declare-fun b!83969 () Bool)

(declare-fun e!54775 () Bool)

(assert (=> b!83969 (= e!54774 e!54775)))

(declare-fun res!43385 () Bool)

(assert (=> b!83969 (=> (not res!43385) (not e!54775))))

(assert (=> b!83969 (= res!43385 (bvslt (_1!1111 (h!2109 lt!39056)) (_1!1111 (h!2109 (t!5214 lt!39056)))))))

(declare-fun b!83970 () Bool)

(assert (=> b!83970 (= e!54775 (isStrictlySorted!292 (t!5214 lt!39056)))))

(assert (= (and d!21343 (not res!43384)) b!83969))

(assert (= (and b!83969 res!43385) b!83970))

(declare-fun m!87395 () Bool)

(assert (=> b!83970 m!87395))

(assert (=> d!21119 d!21343))

(declare-fun d!21345 () Bool)

(declare-fun lt!39556 () Bool)

(assert (=> d!21345 (= lt!39556 (select (content!87 (toList!739 lt!39306)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(declare-fun e!54776 () Bool)

(assert (=> d!21345 (= lt!39556 e!54776)))

(declare-fun res!43386 () Bool)

(assert (=> d!21345 (=> (not res!43386) (not e!54776))))

(assert (=> d!21345 (= res!43386 ((_ is Cons!1519) (toList!739 lt!39306)))))

(assert (=> d!21345 (= (contains!751 (toList!739 lt!39306) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) lt!39556)))

(declare-fun b!83971 () Bool)

(declare-fun e!54777 () Bool)

(assert (=> b!83971 (= e!54776 e!54777)))

(declare-fun res!43387 () Bool)

(assert (=> b!83971 (=> res!43387 e!54777)))

(assert (=> b!83971 (= res!43387 (= (h!2109 (toList!739 lt!39306)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(declare-fun b!83972 () Bool)

(assert (=> b!83972 (= e!54777 (contains!751 (t!5214 (toList!739 lt!39306)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(assert (= (and d!21345 res!43386) b!83971))

(assert (= (and b!83971 (not res!43387)) b!83972))

(declare-fun m!87397 () Bool)

(assert (=> d!21345 m!87397))

(declare-fun m!87399 () Bool)

(assert (=> d!21345 m!87399))

(declare-fun m!87401 () Bool)

(assert (=> b!83972 m!87401))

(assert (=> b!83491 d!21345))

(declare-fun d!21347 () Bool)

(declare-fun res!43388 () Bool)

(declare-fun e!54778 () Bool)

(assert (=> d!21347 (=> res!43388 e!54778)))

(assert (=> d!21347 (= res!43388 (and ((_ is Cons!1519) (toList!739 lt!39057)) (= (_1!1111 (h!2109 (toList!739 lt!39057))) (_1!1111 lt!38729))))))

(assert (=> d!21347 (= (containsKey!141 (toList!739 lt!39057) (_1!1111 lt!38729)) e!54778)))

(declare-fun b!83973 () Bool)

(declare-fun e!54779 () Bool)

(assert (=> b!83973 (= e!54778 e!54779)))

(declare-fun res!43389 () Bool)

(assert (=> b!83973 (=> (not res!43389) (not e!54779))))

(assert (=> b!83973 (= res!43389 (and (or (not ((_ is Cons!1519) (toList!739 lt!39057))) (bvsle (_1!1111 (h!2109 (toList!739 lt!39057))) (_1!1111 lt!38729))) ((_ is Cons!1519) (toList!739 lt!39057)) (bvslt (_1!1111 (h!2109 (toList!739 lt!39057))) (_1!1111 lt!38729))))))

(declare-fun b!83974 () Bool)

(assert (=> b!83974 (= e!54779 (containsKey!141 (t!5214 (toList!739 lt!39057)) (_1!1111 lt!38729)))))

(assert (= (and d!21347 (not res!43388)) b!83973))

(assert (= (and b!83973 res!43389) b!83974))

(declare-fun m!87403 () Bool)

(assert (=> b!83974 m!87403))

(assert (=> d!21115 d!21347))

(declare-fun e!54781 () Option!143)

(declare-fun b!83977 () Bool)

(assert (=> b!83977 (= e!54781 (getValueByKey!137 (t!5214 (toList!739 lt!39261)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!21349 () Bool)

(declare-fun c!13475 () Bool)

(assert (=> d!21349 (= c!13475 (and ((_ is Cons!1519) (toList!739 lt!39261)) (= (_1!1111 (h!2109 (toList!739 lt!39261))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!54780 () Option!143)

(assert (=> d!21349 (= (getValueByKey!137 (toList!739 lt!39261) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!54780)))

(declare-fun b!83975 () Bool)

(assert (=> b!83975 (= e!54780 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39261)))))))

(declare-fun b!83978 () Bool)

(assert (=> b!83978 (= e!54781 None!141)))

(declare-fun b!83976 () Bool)

(assert (=> b!83976 (= e!54780 e!54781)))

(declare-fun c!13476 () Bool)

(assert (=> b!83976 (= c!13476 (and ((_ is Cons!1519) (toList!739 lt!39261)) (not (= (_1!1111 (h!2109 (toList!739 lt!39261))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!21349 c!13475) b!83975))

(assert (= (and d!21349 (not c!13475)) b!83976))

(assert (= (and b!83976 c!13476) b!83977))

(assert (= (and b!83976 (not c!13476)) b!83978))

(declare-fun m!87405 () Bool)

(assert (=> b!83977 m!87405))

(assert (=> b!83441 d!21349))

(declare-fun d!21351 () Bool)

(declare-fun e!54783 () Bool)

(assert (=> d!21351 e!54783))

(declare-fun res!43390 () Bool)

(assert (=> d!21351 (=> res!43390 e!54783)))

(declare-fun lt!39558 () Bool)

(assert (=> d!21351 (= res!43390 (not lt!39558))))

(declare-fun lt!39560 () Bool)

(assert (=> d!21351 (= lt!39558 lt!39560)))

(declare-fun lt!39559 () Unit!2426)

(declare-fun e!54782 () Unit!2426)

(assert (=> d!21351 (= lt!39559 e!54782)))

(declare-fun c!13477 () Bool)

(assert (=> d!21351 (= c!13477 lt!39560)))

(assert (=> d!21351 (= lt!39560 (containsKey!141 (toList!739 lt!38908) lt!38913))))

(assert (=> d!21351 (= (contains!749 lt!38908 lt!38913) lt!39558)))

(declare-fun b!83979 () Bool)

(declare-fun lt!39557 () Unit!2426)

(assert (=> b!83979 (= e!54782 lt!39557)))

(assert (=> b!83979 (= lt!39557 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!38908) lt!38913))))

(assert (=> b!83979 (isDefined!91 (getValueByKey!137 (toList!739 lt!38908) lt!38913))))

(declare-fun b!83980 () Bool)

(declare-fun Unit!2469 () Unit!2426)

(assert (=> b!83980 (= e!54782 Unit!2469)))

(declare-fun b!83981 () Bool)

(assert (=> b!83981 (= e!54783 (isDefined!91 (getValueByKey!137 (toList!739 lt!38908) lt!38913)))))

(assert (= (and d!21351 c!13477) b!83979))

(assert (= (and d!21351 (not c!13477)) b!83980))

(assert (= (and d!21351 (not res!43390)) b!83981))

(declare-fun m!87407 () Bool)

(assert (=> d!21351 m!87407))

(declare-fun m!87409 () Bool)

(assert (=> b!83979 m!87409))

(assert (=> b!83979 m!86213))

(assert (=> b!83979 m!86213))

(declare-fun m!87411 () Bool)

(assert (=> b!83979 m!87411))

(assert (=> b!83981 m!86213))

(assert (=> b!83981 m!86213))

(assert (=> b!83981 m!87411))

(assert (=> d!20947 d!21351))

(assert (=> d!20947 d!20931))

(assert (=> d!20947 d!20933))

(declare-fun d!21353 () Bool)

(assert (=> d!21353 (= (apply!81 (+!107 lt!38908 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38913) (apply!81 lt!38908 lt!38913))))

(assert (=> d!21353 true))

(declare-fun _$34!832 () Unit!2426)

(assert (=> d!21353 (= (choose!494 lt!38908 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38913) _$34!832)))

(declare-fun bs!3548 () Bool)

(assert (= bs!3548 d!21353))

(assert (=> bs!3548 m!85811))

(assert (=> bs!3548 m!85811))

(assert (=> bs!3548 m!85813))

(assert (=> bs!3548 m!85791))

(assert (=> d!20947 d!21353))

(assert (=> d!20947 d!20941))

(declare-fun d!21355 () Bool)

(declare-fun lt!39561 () Bool)

(assert (=> d!21355 (= lt!39561 (select (content!87 lt!39031) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(declare-fun e!54784 () Bool)

(assert (=> d!21355 (= lt!39561 e!54784)))

(declare-fun res!43391 () Bool)

(assert (=> d!21355 (=> (not res!43391) (not e!54784))))

(assert (=> d!21355 (= res!43391 ((_ is Cons!1519) lt!39031))))

(assert (=> d!21355 (= (contains!751 lt!39031 (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))) lt!39561)))

(declare-fun b!83982 () Bool)

(declare-fun e!54785 () Bool)

(assert (=> b!83982 (= e!54784 e!54785)))

(declare-fun res!43392 () Bool)

(assert (=> b!83982 (=> res!43392 e!54785)))

(assert (=> b!83982 (= res!43392 (= (h!2109 lt!39031) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(declare-fun b!83983 () Bool)

(assert (=> b!83983 (= e!54785 (contains!751 (t!5214 lt!39031) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(assert (= (and d!21355 res!43391) b!83982))

(assert (= (and b!83982 (not res!43392)) b!83983))

(declare-fun m!87413 () Bool)

(assert (=> d!21355 m!87413))

(declare-fun m!87415 () Bool)

(assert (=> d!21355 m!87415))

(declare-fun m!87417 () Bool)

(assert (=> b!83983 m!87417))

(assert (=> b!83684 d!21355))

(declare-fun d!21357 () Bool)

(declare-fun lt!39562 () Bool)

(assert (=> d!21357 (= lt!39562 (select (content!87 (toList!739 lt!39288)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(declare-fun e!54786 () Bool)

(assert (=> d!21357 (= lt!39562 e!54786)))

(declare-fun res!43393 () Bool)

(assert (=> d!21357 (=> (not res!43393) (not e!54786))))

(assert (=> d!21357 (= res!43393 ((_ is Cons!1519) (toList!739 lt!39288)))))

(assert (=> d!21357 (= (contains!751 (toList!739 lt!39288) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) lt!39562)))

(declare-fun b!83984 () Bool)

(declare-fun e!54787 () Bool)

(assert (=> b!83984 (= e!54786 e!54787)))

(declare-fun res!43394 () Bool)

(assert (=> b!83984 (=> res!43394 e!54787)))

(assert (=> b!83984 (= res!43394 (= (h!2109 (toList!739 lt!39288)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(declare-fun b!83985 () Bool)

(assert (=> b!83985 (= e!54787 (contains!751 (t!5214 (toList!739 lt!39288)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(assert (= (and d!21357 res!43393) b!83984))

(assert (= (and b!83984 (not res!43394)) b!83985))

(declare-fun m!87419 () Bool)

(assert (=> d!21357 m!87419))

(declare-fun m!87421 () Bool)

(assert (=> d!21357 m!87421))

(declare-fun m!87423 () Bool)

(assert (=> b!83985 m!87423))

(assert (=> b!83465 d!21357))

(declare-fun b!83988 () Bool)

(declare-fun e!54789 () Option!143)

(assert (=> b!83988 (= e!54789 (getValueByKey!137 (t!5214 (toList!739 lt!39246)) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21359 () Bool)

(declare-fun c!13478 () Bool)

(assert (=> d!21359 (= c!13478 (and ((_ is Cons!1519) (toList!739 lt!39246)) (= (_1!1111 (h!2109 (toList!739 lt!39246))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!54788 () Option!143)

(assert (=> d!21359 (= (getValueByKey!137 (toList!739 lt!39246) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!54788)))

(declare-fun b!83986 () Bool)

(assert (=> b!83986 (= e!54788 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39246)))))))

(declare-fun b!83989 () Bool)

(assert (=> b!83989 (= e!54789 None!141)))

(declare-fun b!83987 () Bool)

(assert (=> b!83987 (= e!54788 e!54789)))

(declare-fun c!13479 () Bool)

(assert (=> b!83987 (= c!13479 (and ((_ is Cons!1519) (toList!739 lt!39246)) (not (= (_1!1111 (h!2109 (toList!739 lt!39246))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21359 c!13478) b!83986))

(assert (= (and d!21359 (not c!13478)) b!83987))

(assert (= (and b!83987 c!13479) b!83988))

(assert (= (and b!83987 (not c!13479)) b!83989))

(declare-fun m!87425 () Bool)

(assert (=> b!83988 m!87425))

(assert (=> b!83419 d!21359))

(declare-fun b!83990 () Bool)

(declare-fun e!54794 () Bool)

(declare-fun lt!39567 () ListLongMap!1447)

(assert (=> b!83990 (= e!54794 (= lt!39567 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun d!21361 () Bool)

(declare-fun e!54791 () Bool)

(assert (=> d!21361 e!54791))

(declare-fun res!43396 () Bool)

(assert (=> d!21361 (=> (not res!43396) (not e!54791))))

(assert (=> d!21361 (= res!43396 (not (contains!749 lt!39567 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!54793 () ListLongMap!1447)

(assert (=> d!21361 (= lt!39567 e!54793)))

(declare-fun c!13481 () Bool)

(assert (=> d!21361 (= c!13481 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(assert (=> d!21361 (validMask!0 (mask!6333 (v!2622 (underlying!282 thiss!992))))))

(assert (=> d!21361 (= (getCurrentListMapNoExtraKeys!71 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))) lt!39567)))

(declare-fun b!83991 () Bool)

(declare-fun e!54796 () Bool)

(assert (=> b!83991 (= e!54791 e!54796)))

(declare-fun c!13480 () Bool)

(declare-fun e!54792 () Bool)

(assert (=> b!83991 (= c!13480 e!54792)))

(declare-fun res!43397 () Bool)

(assert (=> b!83991 (=> (not res!43397) (not e!54792))))

(assert (=> b!83991 (= res!43397 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!83992 () Bool)

(declare-fun e!54790 () ListLongMap!1447)

(declare-fun call!7901 () ListLongMap!1447)

(assert (=> b!83992 (= e!54790 call!7901)))

(declare-fun b!83993 () Bool)

(assert (=> b!83993 (= e!54794 (isEmpty!336 lt!39567))))

(declare-fun b!83994 () Bool)

(assert (=> b!83994 (= e!54796 e!54794)))

(declare-fun c!13482 () Bool)

(assert (=> b!83994 (= c!13482 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!83995 () Bool)

(declare-fun res!43398 () Bool)

(assert (=> b!83995 (=> (not res!43398) (not e!54791))))

(assert (=> b!83995 (= res!43398 (not (contains!749 lt!39567 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!83996 () Bool)

(assert (=> b!83996 (= e!54793 (ListLongMap!1448 Nil!1520))))

(declare-fun b!83997 () Bool)

(assert (=> b!83997 (= e!54792 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!83997 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!83998 () Bool)

(declare-fun lt!39564 () Unit!2426)

(declare-fun lt!39563 () Unit!2426)

(assert (=> b!83998 (= lt!39564 lt!39563)))

(declare-fun lt!39568 () (_ BitVec 64))

(declare-fun lt!39566 () V!3017)

(declare-fun lt!39565 () (_ BitVec 64))

(declare-fun lt!39569 () ListLongMap!1447)

(assert (=> b!83998 (not (contains!749 (+!107 lt!39569 (tuple2!2201 lt!39565 lt!39566)) lt!39568))))

(assert (=> b!83998 (= lt!39563 (addStillNotContains!31 lt!39569 lt!39565 lt!39566 lt!39568))))

(assert (=> b!83998 (= lt!39568 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!83998 (= lt!39566 (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!83998 (= lt!39565 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!83998 (= lt!39569 call!7901)))

(assert (=> b!83998 (= e!54790 (+!107 call!7901 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!7898 () Bool)

(assert (=> bm!7898 (= call!7901 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (_values!2299 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992))) (extraKeys!2159 (v!2622 (underlying!282 thiss!992))) (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) (minValue!2210 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992)))))))

(declare-fun b!83999 () Bool)

(assert (=> b!83999 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(assert (=> b!83999 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2145 (_values!2299 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun e!54795 () Bool)

(assert (=> b!83999 (= e!54795 (= (apply!81 lt!39567 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!84000 () Bool)

(assert (=> b!84000 (= e!54793 e!54790)))

(declare-fun c!13483 () Bool)

(assert (=> b!84000 (= c!13483 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!84001 () Bool)

(assert (=> b!84001 (= e!54796 e!54795)))

(assert (=> b!84001 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun res!43395 () Bool)

(assert (=> b!84001 (= res!43395 (contains!749 lt!39567 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!84001 (=> (not res!43395) (not e!54795))))

(assert (= (and d!21361 c!13481) b!83996))

(assert (= (and d!21361 (not c!13481)) b!84000))

(assert (= (and b!84000 c!13483) b!83998))

(assert (= (and b!84000 (not c!13483)) b!83992))

(assert (= (or b!83998 b!83992) bm!7898))

(assert (= (and d!21361 res!43396) b!83995))

(assert (= (and b!83995 res!43398) b!83991))

(assert (= (and b!83991 res!43397) b!83997))

(assert (= (and b!83991 c!13480) b!84001))

(assert (= (and b!83991 (not c!13480)) b!83994))

(assert (= (and b!84001 res!43395) b!83999))

(assert (= (and b!83994 c!13482) b!83990))

(assert (= (and b!83994 (not c!13482)) b!83993))

(declare-fun b_lambda!3731 () Bool)

(assert (=> (not b_lambda!3731) (not b!83998)))

(assert (=> b!83998 t!5210))

(declare-fun b_and!5101 () Bool)

(assert (= b_and!5097 (and (=> t!5210 result!2875) b_and!5101)))

(assert (=> b!83998 t!5212))

(declare-fun b_and!5103 () Bool)

(assert (= b_and!5099 (and (=> t!5212 result!2879) b_and!5103)))

(declare-fun b_lambda!3733 () Bool)

(assert (=> (not b_lambda!3733) (not b!83999)))

(assert (=> b!83999 t!5210))

(declare-fun b_and!5105 () Bool)

(assert (= b_and!5101 (and (=> t!5210 result!2875) b_and!5105)))

(assert (=> b!83999 t!5212))

(declare-fun b_and!5107 () Bool)

(assert (= b_and!5103 (and (=> t!5212 result!2879) b_and!5107)))

(declare-fun m!87427 () Bool)

(assert (=> bm!7898 m!87427))

(declare-fun m!87429 () Bool)

(assert (=> b!83993 m!87429))

(declare-fun m!87431 () Bool)

(assert (=> b!83997 m!87431))

(assert (=> b!83997 m!87431))

(declare-fun m!87433 () Bool)

(assert (=> b!83997 m!87433))

(declare-fun m!87435 () Bool)

(assert (=> b!83998 m!87435))

(declare-fun m!87437 () Bool)

(assert (=> b!83998 m!87437))

(declare-fun m!87439 () Bool)

(assert (=> b!83998 m!87439))

(assert (=> b!83998 m!85587))

(declare-fun m!87441 () Bool)

(assert (=> b!83998 m!87441))

(declare-fun m!87443 () Bool)

(assert (=> b!83998 m!87443))

(declare-fun m!87445 () Bool)

(assert (=> b!83998 m!87445))

(assert (=> b!83998 m!87431))

(assert (=> b!83998 m!85587))

(assert (=> b!83998 m!87443))

(assert (=> b!83998 m!87439))

(declare-fun m!87447 () Bool)

(assert (=> d!21361 m!87447))

(assert (=> d!21361 m!85577))

(assert (=> b!84000 m!87431))

(assert (=> b!84000 m!87431))

(assert (=> b!84000 m!87433))

(assert (=> b!83990 m!87427))

(assert (=> b!84001 m!87431))

(assert (=> b!84001 m!87431))

(declare-fun m!87449 () Bool)

(assert (=> b!84001 m!87449))

(declare-fun m!87451 () Bool)

(assert (=> b!83995 m!87451))

(assert (=> b!83999 m!87439))

(assert (=> b!83999 m!87431))

(assert (=> b!83999 m!85587))

(assert (=> b!83999 m!87431))

(declare-fun m!87453 () Bool)

(assert (=> b!83999 m!87453))

(assert (=> b!83999 m!87439))

(assert (=> b!83999 m!85587))

(assert (=> b!83999 m!87441))

(assert (=> b!83254 d!21361))

(declare-fun d!21363 () Bool)

(declare-fun res!43399 () Bool)

(declare-fun e!54797 () Bool)

(assert (=> d!21363 (=> res!43399 e!54797)))

(assert (=> d!21363 (= res!43399 (= (select (arr!1900 (_keys!3983 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> d!21363 (= (arrayContainsKey!0 (_keys!3983 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!54797)))

(declare-fun b!84002 () Bool)

(declare-fun e!54798 () Bool)

(assert (=> b!84002 (= e!54797 e!54798)))

(declare-fun res!43400 () Bool)

(assert (=> b!84002 (=> (not res!43400) (not e!54798))))

(assert (=> b!84002 (= res!43400 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84003 () Bool)

(assert (=> b!84003 (= e!54798 (arrayContainsKey!0 (_keys!3983 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!21363 (not res!43399)) b!84002))

(assert (= (and b!84002 res!43400) b!84003))

(assert (=> d!21363 m!87105))

(assert (=> b!84003 m!85563))

(declare-fun m!87455 () Bool)

(assert (=> b!84003 m!87455))

(assert (=> b!83590 d!21363))

(assert (=> d!20975 d!20977))

(declare-fun b!84004 () Bool)

(declare-fun e!54810 () Bool)

(declare-fun call!7906 () Bool)

(assert (=> b!84004 (= e!54810 (not call!7906))))

(declare-fun b!84005 () Bool)

(declare-fun e!54804 () Bool)

(declare-fun e!54808 () Bool)

(assert (=> b!84005 (= e!54804 e!54808)))

(declare-fun c!13489 () Bool)

(assert (=> b!84005 (= c!13489 (not (= (bvand lt!39013 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!84006 () Bool)

(declare-fun e!54799 () Bool)

(declare-fun lt!39573 () ListLongMap!1447)

(assert (=> b!84006 (= e!54799 (= (apply!81 lt!39573 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) (get!1193 (select (arr!1901 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!84006 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2145 (_values!2299 newMap!16))))))

(assert (=> b!84006 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84007 () Bool)

(declare-fun e!54806 () ListLongMap!1447)

(declare-fun call!7908 () ListLongMap!1447)

(assert (=> b!84007 (= e!54806 call!7908)))

(declare-fun call!7904 () ListLongMap!1447)

(declare-fun c!13484 () Bool)

(declare-fun c!13487 () Bool)

(declare-fun call!7907 () ListLongMap!1447)

(declare-fun call!7902 () ListLongMap!1447)

(declare-fun call!7903 () ListLongMap!1447)

(declare-fun bm!7899 () Bool)

(assert (=> bm!7899 (= call!7907 (+!107 (ite c!13484 call!7902 (ite c!13487 call!7904 call!7903)) (ite (or c!13484 c!13487) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725))))))

(declare-fun b!84008 () Bool)

(declare-fun e!54801 () Bool)

(assert (=> b!84008 (= e!54801 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84009 () Bool)

(declare-fun res!43408 () Bool)

(assert (=> b!84009 (=> (not res!43408) (not e!54804))))

(declare-fun e!54800 () Bool)

(assert (=> b!84009 (= res!43408 e!54800)))

(declare-fun res!43409 () Bool)

(assert (=> b!84009 (=> res!43409 e!54800)))

(assert (=> b!84009 (= res!43409 (not e!54801))))

(declare-fun res!43401 () Bool)

(assert (=> b!84009 (=> (not res!43401) (not e!54801))))

(assert (=> b!84009 (= res!43401 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84010 () Bool)

(declare-fun call!7905 () Bool)

(assert (=> b!84010 (= e!54808 (not call!7905))))

(declare-fun b!84011 () Bool)

(declare-fun e!54809 () Bool)

(assert (=> b!84011 (= e!54810 e!54809)))

(declare-fun res!43402 () Bool)

(assert (=> b!84011 (= res!43402 call!7906)))

(assert (=> b!84011 (=> (not res!43402) (not e!54809))))

(declare-fun bm!7900 () Bool)

(assert (=> bm!7900 (= call!7905 (contains!749 lt!39573 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84012 () Bool)

(declare-fun res!43404 () Bool)

(assert (=> b!84012 (=> (not res!43404) (not e!54804))))

(assert (=> b!84012 (= res!43404 e!54810)))

(declare-fun c!13486 () Bool)

(assert (=> b!84012 (= c!13486 (not (= (bvand lt!39013 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!21365 () Bool)

(assert (=> d!21365 e!54804))

(declare-fun res!43407 () Bool)

(assert (=> d!21365 (=> (not res!43407) (not e!54804))))

(assert (=> d!21365 (= res!43407 (or (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))))

(declare-fun lt!39586 () ListLongMap!1447)

(assert (=> d!21365 (= lt!39573 lt!39586)))

(declare-fun lt!39583 () Unit!2426)

(declare-fun e!54805 () Unit!2426)

(assert (=> d!21365 (= lt!39583 e!54805)))

(declare-fun c!13485 () Bool)

(declare-fun e!54802 () Bool)

(assert (=> d!21365 (= c!13485 e!54802)))

(declare-fun res!43405 () Bool)

(assert (=> d!21365 (=> (not res!43405) (not e!54802))))

(assert (=> d!21365 (= res!43405 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun e!54811 () ListLongMap!1447)

(assert (=> d!21365 (= lt!39586 e!54811)))

(assert (=> d!21365 (= c!13484 (and (not (= (bvand lt!39013 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!39013 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21365 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21365 (= (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!39013 (zeroValue!2210 newMap!16) lt!38725 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39573)))

(declare-fun b!84013 () Bool)

(assert (=> b!84013 (= e!54809 (= (apply!81 lt!39573 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 newMap!16)))))

(declare-fun b!84014 () Bool)

(declare-fun e!54807 () Bool)

(assert (=> b!84014 (= e!54808 e!54807)))

(declare-fun res!43403 () Bool)

(assert (=> b!84014 (= res!43403 call!7905)))

(assert (=> b!84014 (=> (not res!43403) (not e!54807))))

(declare-fun b!84015 () Bool)

(assert (=> b!84015 (= e!54802 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84016 () Bool)

(assert (=> b!84016 (= e!54811 e!54806)))

(assert (=> b!84016 (= c!13487 (and (not (= (bvand lt!39013 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!39013 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7901 () Bool)

(assert (=> bm!7901 (= call!7904 call!7902)))

(declare-fun b!84017 () Bool)

(declare-fun lt!39585 () Unit!2426)

(assert (=> b!84017 (= e!54805 lt!39585)))

(declare-fun lt!39591 () ListLongMap!1447)

(assert (=> b!84017 (= lt!39591 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!39013 (zeroValue!2210 newMap!16) lt!38725 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39588 () (_ BitVec 64))

(assert (=> b!84017 (= lt!39588 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39589 () (_ BitVec 64))

(assert (=> b!84017 (= lt!39589 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39571 () Unit!2426)

(assert (=> b!84017 (= lt!39571 (addStillContains!57 lt!39591 lt!39588 (zeroValue!2210 newMap!16) lt!39589))))

(assert (=> b!84017 (contains!749 (+!107 lt!39591 (tuple2!2201 lt!39588 (zeroValue!2210 newMap!16))) lt!39589)))

(declare-fun lt!39590 () Unit!2426)

(assert (=> b!84017 (= lt!39590 lt!39571)))

(declare-fun lt!39580 () ListLongMap!1447)

(assert (=> b!84017 (= lt!39580 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!39013 (zeroValue!2210 newMap!16) lt!38725 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39577 () (_ BitVec 64))

(assert (=> b!84017 (= lt!39577 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39584 () (_ BitVec 64))

(assert (=> b!84017 (= lt!39584 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39575 () Unit!2426)

(assert (=> b!84017 (= lt!39575 (addApplyDifferent!57 lt!39580 lt!39577 lt!38725 lt!39584))))

(assert (=> b!84017 (= (apply!81 (+!107 lt!39580 (tuple2!2201 lt!39577 lt!38725)) lt!39584) (apply!81 lt!39580 lt!39584))))

(declare-fun lt!39570 () Unit!2426)

(assert (=> b!84017 (= lt!39570 lt!39575)))

(declare-fun lt!39574 () ListLongMap!1447)

(assert (=> b!84017 (= lt!39574 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!39013 (zeroValue!2210 newMap!16) lt!38725 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39576 () (_ BitVec 64))

(assert (=> b!84017 (= lt!39576 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39579 () (_ BitVec 64))

(assert (=> b!84017 (= lt!39579 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39581 () Unit!2426)

(assert (=> b!84017 (= lt!39581 (addApplyDifferent!57 lt!39574 lt!39576 (zeroValue!2210 newMap!16) lt!39579))))

(assert (=> b!84017 (= (apply!81 (+!107 lt!39574 (tuple2!2201 lt!39576 (zeroValue!2210 newMap!16))) lt!39579) (apply!81 lt!39574 lt!39579))))

(declare-fun lt!39582 () Unit!2426)

(assert (=> b!84017 (= lt!39582 lt!39581)))

(declare-fun lt!39578 () ListLongMap!1447)

(assert (=> b!84017 (= lt!39578 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!39013 (zeroValue!2210 newMap!16) lt!38725 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39587 () (_ BitVec 64))

(assert (=> b!84017 (= lt!39587 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39572 () (_ BitVec 64))

(assert (=> b!84017 (= lt!39572 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!84017 (= lt!39585 (addApplyDifferent!57 lt!39578 lt!39587 lt!38725 lt!39572))))

(assert (=> b!84017 (= (apply!81 (+!107 lt!39578 (tuple2!2201 lt!39587 lt!38725)) lt!39572) (apply!81 lt!39578 lt!39572))))

(declare-fun bm!7902 () Bool)

(assert (=> bm!7902 (= call!7903 call!7904)))

(declare-fun b!84018 () Bool)

(declare-fun Unit!2470 () Unit!2426)

(assert (=> b!84018 (= e!54805 Unit!2470)))

(declare-fun b!84019 () Bool)

(assert (=> b!84019 (= e!54800 e!54799)))

(declare-fun res!43406 () Bool)

(assert (=> b!84019 (=> (not res!43406) (not e!54799))))

(assert (=> b!84019 (= res!43406 (contains!749 lt!39573 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84019 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84020 () Bool)

(declare-fun e!54803 () ListLongMap!1447)

(assert (=> b!84020 (= e!54803 call!7908)))

(declare-fun b!84021 () Bool)

(assert (=> b!84021 (= e!54807 (= (apply!81 lt!39573 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38725))))

(declare-fun bm!7903 () Bool)

(assert (=> bm!7903 (= call!7908 call!7907)))

(declare-fun bm!7904 () Bool)

(assert (=> bm!7904 (= call!7906 (contains!749 lt!39573 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84022 () Bool)

(assert (=> b!84022 (= e!54803 call!7903)))

(declare-fun b!84023 () Bool)

(declare-fun c!13488 () Bool)

(assert (=> b!84023 (= c!13488 (and (not (= (bvand lt!39013 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!39013 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!84023 (= e!54806 e!54803)))

(declare-fun b!84024 () Bool)

(assert (=> b!84024 (= e!54811 (+!107 call!7907 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)))))

(declare-fun bm!7905 () Bool)

(assert (=> bm!7905 (= call!7902 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!39013 (zeroValue!2210 newMap!16) lt!38725 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (= (and d!21365 c!13484) b!84024))

(assert (= (and d!21365 (not c!13484)) b!84016))

(assert (= (and b!84016 c!13487) b!84007))

(assert (= (and b!84016 (not c!13487)) b!84023))

(assert (= (and b!84023 c!13488) b!84020))

(assert (= (and b!84023 (not c!13488)) b!84022))

(assert (= (or b!84020 b!84022) bm!7902))

(assert (= (or b!84007 bm!7902) bm!7901))

(assert (= (or b!84007 b!84020) bm!7903))

(assert (= (or b!84024 bm!7901) bm!7905))

(assert (= (or b!84024 bm!7903) bm!7899))

(assert (= (and d!21365 res!43405) b!84015))

(assert (= (and d!21365 c!13485) b!84017))

(assert (= (and d!21365 (not c!13485)) b!84018))

(assert (= (and d!21365 res!43407) b!84009))

(assert (= (and b!84009 res!43401) b!84008))

(assert (= (and b!84009 (not res!43409)) b!84019))

(assert (= (and b!84019 res!43406) b!84006))

(assert (= (and b!84009 res!43408) b!84012))

(assert (= (and b!84012 c!13486) b!84011))

(assert (= (and b!84012 (not c!13486)) b!84004))

(assert (= (and b!84011 res!43402) b!84013))

(assert (= (or b!84011 b!84004) bm!7904))

(assert (= (and b!84012 res!43404) b!84005))

(assert (= (and b!84005 c!13489) b!84014))

(assert (= (and b!84005 (not c!13489)) b!84010))

(assert (= (and b!84014 res!43403) b!84021))

(assert (= (or b!84014 b!84010) bm!7900))

(declare-fun b_lambda!3735 () Bool)

(assert (=> (not b_lambda!3735) (not b!84006)))

(assert (=> b!84006 t!5225))

(declare-fun b_and!5109 () Bool)

(assert (= b_and!5105 (and (=> t!5225 result!2895) b_and!5109)))

(assert (=> b!84006 t!5227))

(declare-fun b_and!5111 () Bool)

(assert (= b_and!5107 (and (=> t!5227 result!2897) b_and!5111)))

(declare-fun m!87457 () Bool)

(assert (=> b!84021 m!87457))

(declare-fun m!87459 () Bool)

(assert (=> bm!7900 m!87459))

(assert (=> b!84019 m!86045))

(assert (=> b!84019 m!86045))

(declare-fun m!87461 () Bool)

(assert (=> b!84019 m!87461))

(declare-fun m!87463 () Bool)

(assert (=> bm!7905 m!87463))

(declare-fun m!87465 () Bool)

(assert (=> bm!7899 m!87465))

(declare-fun m!87467 () Bool)

(assert (=> bm!7904 m!87467))

(assert (=> b!84017 m!86045))

(assert (=> b!84017 m!87463))

(declare-fun m!87469 () Bool)

(assert (=> b!84017 m!87469))

(declare-fun m!87471 () Bool)

(assert (=> b!84017 m!87471))

(declare-fun m!87473 () Bool)

(assert (=> b!84017 m!87473))

(declare-fun m!87475 () Bool)

(assert (=> b!84017 m!87475))

(declare-fun m!87477 () Bool)

(assert (=> b!84017 m!87477))

(declare-fun m!87479 () Bool)

(assert (=> b!84017 m!87479))

(declare-fun m!87481 () Bool)

(assert (=> b!84017 m!87481))

(declare-fun m!87483 () Bool)

(assert (=> b!84017 m!87483))

(declare-fun m!87485 () Bool)

(assert (=> b!84017 m!87485))

(assert (=> b!84017 m!87475))

(assert (=> b!84017 m!87479))

(declare-fun m!87487 () Bool)

(assert (=> b!84017 m!87487))

(declare-fun m!87489 () Bool)

(assert (=> b!84017 m!87489))

(assert (=> b!84017 m!87489))

(declare-fun m!87491 () Bool)

(assert (=> b!84017 m!87491))

(declare-fun m!87493 () Bool)

(assert (=> b!84017 m!87493))

(assert (=> b!84017 m!87473))

(declare-fun m!87495 () Bool)

(assert (=> b!84017 m!87495))

(declare-fun m!87497 () Bool)

(assert (=> b!84017 m!87497))

(assert (=> b!84006 m!86045))

(assert (=> b!84006 m!86141))

(assert (=> b!84006 m!86045))

(declare-fun m!87499 () Bool)

(assert (=> b!84006 m!87499))

(assert (=> b!84006 m!86393))

(assert (=> b!84006 m!86393))

(assert (=> b!84006 m!86141))

(assert (=> b!84006 m!86395))

(assert (=> b!84008 m!86045))

(assert (=> b!84008 m!86045))

(assert (=> b!84008 m!86051))

(declare-fun m!87501 () Bool)

(assert (=> b!84024 m!87501))

(declare-fun m!87503 () Bool)

(assert (=> b!84013 m!87503))

(assert (=> b!84015 m!86045))

(assert (=> b!84015 m!86045))

(assert (=> b!84015 m!86051))

(assert (=> d!21365 m!86067))

(assert (=> d!20975 d!21365))

(assert (=> d!20975 d!21305))

(declare-fun d!21367 () Bool)

(assert (=> d!21367 (= (+!107 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!39013 (zeroValue!2210 newMap!16) lt!38725 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (=> d!21367 true))

(declare-fun _$8!73 () Unit!2426)

(assert (=> d!21367 (= (choose!498 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) lt!39013 (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) lt!38725 (defaultEntry!2316 newMap!16)) _$8!73)))

(declare-fun bs!3549 () Bool)

(assert (= bs!3549 d!21367))

(assert (=> bs!3549 m!85779))

(assert (=> bs!3549 m!85779))

(assert (=> bs!3549 m!86343))

(assert (=> bs!3549 m!86347))

(assert (=> d!20975 d!21367))

(declare-fun d!21369 () Bool)

(declare-fun e!54812 () Bool)

(assert (=> d!21369 e!54812))

(declare-fun res!43410 () Bool)

(assert (=> d!21369 (=> (not res!43410) (not e!54812))))

(declare-fun lt!39593 () ListLongMap!1447)

(assert (=> d!21369 (= res!43410 (contains!749 lt!39593 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725))))))

(declare-fun lt!39592 () List!1523)

(assert (=> d!21369 (= lt!39593 (ListLongMap!1448 lt!39592))))

(declare-fun lt!39595 () Unit!2426)

(declare-fun lt!39594 () Unit!2426)

(assert (=> d!21369 (= lt!39595 lt!39594)))

(assert (=> d!21369 (= (getValueByKey!137 lt!39592 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725))))))

(assert (=> d!21369 (= lt!39594 (lemmaContainsTupThenGetReturnValue!57 lt!39592 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725))))))

(assert (=> d!21369 (= lt!39592 (insertStrictlySorted!60 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725))))))

(assert (=> d!21369 (= (+!107 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) lt!39593)))

(declare-fun b!84025 () Bool)

(declare-fun res!43411 () Bool)

(assert (=> b!84025 (=> (not res!43411) (not e!54812))))

(assert (=> b!84025 (= res!43411 (= (getValueByKey!137 (toList!739 lt!39593) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)))))))

(declare-fun b!84026 () Bool)

(assert (=> b!84026 (= e!54812 (contains!751 (toList!739 lt!39593) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)))))

(assert (= (and d!21369 res!43410) b!84025))

(assert (= (and b!84025 res!43411) b!84026))

(declare-fun m!87505 () Bool)

(assert (=> d!21369 m!87505))

(declare-fun m!87507 () Bool)

(assert (=> d!21369 m!87507))

(declare-fun m!87509 () Bool)

(assert (=> d!21369 m!87509))

(declare-fun m!87511 () Bool)

(assert (=> d!21369 m!87511))

(declare-fun m!87513 () Bool)

(assert (=> b!84025 m!87513))

(declare-fun m!87515 () Bool)

(assert (=> b!84026 m!87515))

(assert (=> d!20975 d!21369))

(declare-fun d!21371 () Bool)

(declare-fun res!43412 () Bool)

(declare-fun e!54813 () Bool)

(assert (=> d!21371 (=> res!43412 e!54813)))

(assert (=> d!21371 (= res!43412 (and ((_ is Cons!1519) lt!39431) (= (_1!1111 (h!2109 lt!39431)) (_1!1111 lt!38729))))))

(assert (=> d!21371 (= (containsKey!141 lt!39431 (_1!1111 lt!38729)) e!54813)))

(declare-fun b!84027 () Bool)

(declare-fun e!54814 () Bool)

(assert (=> b!84027 (= e!54813 e!54814)))

(declare-fun res!43413 () Bool)

(assert (=> b!84027 (=> (not res!43413) (not e!54814))))

(assert (=> b!84027 (= res!43413 (and (or (not ((_ is Cons!1519) lt!39431)) (bvsle (_1!1111 (h!2109 lt!39431)) (_1!1111 lt!38729))) ((_ is Cons!1519) lt!39431) (bvslt (_1!1111 (h!2109 lt!39431)) (_1!1111 lt!38729))))))

(declare-fun b!84028 () Bool)

(assert (=> b!84028 (= e!54814 (containsKey!141 (t!5214 lt!39431) (_1!1111 lt!38729)))))

(assert (= (and d!21371 (not res!43412)) b!84027))

(assert (= (and b!84027 res!43413) b!84028))

(declare-fun m!87517 () Bool)

(assert (=> b!84028 m!87517))

(assert (=> b!83622 d!21371))

(declare-fun d!21373 () Bool)

(assert (=> d!21373 (isDefined!91 (getValueByKey!137 (toList!739 lt!38907) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!39596 () Unit!2426)

(assert (=> d!21373 (= lt!39596 (choose!500 (toList!739 lt!38907) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!54815 () Bool)

(assert (=> d!21373 e!54815))

(declare-fun res!43414 () Bool)

(assert (=> d!21373 (=> (not res!43414) (not e!54815))))

(assert (=> d!21373 (= res!43414 (isStrictlySorted!292 (toList!739 lt!38907)))))

(assert (=> d!21373 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!38907) #b1000000000000000000000000000000000000000000000000000000000000000) lt!39596)))

(declare-fun b!84029 () Bool)

(assert (=> b!84029 (= e!54815 (containsKey!141 (toList!739 lt!38907) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21373 res!43414) b!84029))

(assert (=> d!21373 m!86529))

(assert (=> d!21373 m!86529))

(assert (=> d!21373 m!86893))

(declare-fun m!87519 () Bool)

(assert (=> d!21373 m!87519))

(declare-fun m!87521 () Bool)

(assert (=> d!21373 m!87521))

(assert (=> b!84029 m!86889))

(assert (=> b!83645 d!21373))

(declare-fun d!21375 () Bool)

(assert (=> d!21375 (= (isDefined!91 (getValueByKey!137 (toList!739 lt!38907) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!338 (getValueByKey!137 (toList!739 lt!38907) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3550 () Bool)

(assert (= bs!3550 d!21375))

(assert (=> bs!3550 m!86529))

(declare-fun m!87523 () Bool)

(assert (=> bs!3550 m!87523))

(assert (=> b!83645 d!21375))

(declare-fun b!84032 () Bool)

(declare-fun e!54817 () Option!143)

(assert (=> b!84032 (= e!54817 (getValueByKey!137 (t!5214 (toList!739 lt!38907)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!21377 () Bool)

(declare-fun c!13490 () Bool)

(assert (=> d!21377 (= c!13490 (and ((_ is Cons!1519) (toList!739 lt!38907)) (= (_1!1111 (h!2109 (toList!739 lt!38907))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!54816 () Option!143)

(assert (=> d!21377 (= (getValueByKey!137 (toList!739 lt!38907) #b1000000000000000000000000000000000000000000000000000000000000000) e!54816)))

(declare-fun b!84030 () Bool)

(assert (=> b!84030 (= e!54816 (Some!142 (_2!1111 (h!2109 (toList!739 lt!38907)))))))

(declare-fun b!84033 () Bool)

(assert (=> b!84033 (= e!54817 None!141)))

(declare-fun b!84031 () Bool)

(assert (=> b!84031 (= e!54816 e!54817)))

(declare-fun c!13491 () Bool)

(assert (=> b!84031 (= c!13491 (and ((_ is Cons!1519) (toList!739 lt!38907)) (not (= (_1!1111 (h!2109 (toList!739 lt!38907))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!21377 c!13490) b!84030))

(assert (= (and d!21377 (not c!13490)) b!84031))

(assert (= (and b!84031 c!13491) b!84032))

(assert (= (and b!84031 (not c!13491)) b!84033))

(declare-fun m!87525 () Bool)

(assert (=> b!84032 m!87525))

(assert (=> b!83645 d!21377))

(assert (=> b!83506 d!21215))

(assert (=> b!83506 d!20981))

(declare-fun d!21379 () Bool)

(declare-fun e!54819 () Bool)

(assert (=> d!21379 e!54819))

(declare-fun res!43415 () Bool)

(assert (=> d!21379 (=> res!43415 e!54819)))

(declare-fun lt!39598 () Bool)

(assert (=> d!21379 (= res!43415 (not lt!39598))))

(declare-fun lt!39600 () Bool)

(assert (=> d!21379 (= lt!39598 lt!39600)))

(declare-fun lt!39599 () Unit!2426)

(declare-fun e!54818 () Unit!2426)

(assert (=> d!21379 (= lt!39599 e!54818)))

(declare-fun c!13492 () Bool)

(assert (=> d!21379 (= c!13492 lt!39600)))

(assert (=> d!21379 (= lt!39600 (containsKey!141 (toList!739 lt!39246) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21379 (= (contains!749 lt!39246 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39598)))

(declare-fun b!84034 () Bool)

(declare-fun lt!39597 () Unit!2426)

(assert (=> b!84034 (= e!54818 lt!39597)))

(assert (=> b!84034 (= lt!39597 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39246) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> b!84034 (isDefined!91 (getValueByKey!137 (toList!739 lt!39246) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!84035 () Bool)

(declare-fun Unit!2471 () Unit!2426)

(assert (=> b!84035 (= e!54818 Unit!2471)))

(declare-fun b!84036 () Bool)

(assert (=> b!84036 (= e!54819 (isDefined!91 (getValueByKey!137 (toList!739 lt!39246) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21379 c!13492) b!84034))

(assert (= (and d!21379 (not c!13492)) b!84035))

(assert (= (and d!21379 (not res!43415)) b!84036))

(declare-fun m!87527 () Bool)

(assert (=> d!21379 m!87527))

(declare-fun m!87529 () Bool)

(assert (=> b!84034 m!87529))

(assert (=> b!84034 m!86495))

(assert (=> b!84034 m!86495))

(declare-fun m!87531 () Bool)

(assert (=> b!84034 m!87531))

(assert (=> b!84036 m!86495))

(assert (=> b!84036 m!86495))

(assert (=> b!84036 m!87531))

(assert (=> d!21007 d!21379))

(declare-fun b!84039 () Bool)

(declare-fun e!54821 () Option!143)

(assert (=> b!84039 (= e!54821 (getValueByKey!137 (t!5214 lt!39245) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21381 () Bool)

(declare-fun c!13493 () Bool)

(assert (=> d!21381 (= c!13493 (and ((_ is Cons!1519) lt!39245) (= (_1!1111 (h!2109 lt!39245)) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!54820 () Option!143)

(assert (=> d!21381 (= (getValueByKey!137 lt!39245 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!54820)))

(declare-fun b!84037 () Bool)

(assert (=> b!84037 (= e!54820 (Some!142 (_2!1111 (h!2109 lt!39245))))))

(declare-fun b!84040 () Bool)

(assert (=> b!84040 (= e!54821 None!141)))

(declare-fun b!84038 () Bool)

(assert (=> b!84038 (= e!54820 e!54821)))

(declare-fun c!13494 () Bool)

(assert (=> b!84038 (= c!13494 (and ((_ is Cons!1519) lt!39245) (not (= (_1!1111 (h!2109 lt!39245)) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21381 c!13493) b!84037))

(assert (= (and d!21381 (not c!13493)) b!84038))

(assert (= (and b!84038 c!13494) b!84039))

(assert (= (and b!84038 (not c!13494)) b!84040))

(declare-fun m!87533 () Bool)

(assert (=> b!84039 m!87533))

(assert (=> d!21007 d!21381))

(declare-fun d!21383 () Bool)

(assert (=> d!21383 (= (getValueByKey!137 lt!39245 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39601 () Unit!2426)

(assert (=> d!21383 (= lt!39601 (choose!497 lt!39245 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun e!54822 () Bool)

(assert (=> d!21383 e!54822))

(declare-fun res!43416 () Bool)

(assert (=> d!21383 (=> (not res!43416) (not e!54822))))

(assert (=> d!21383 (= res!43416 (isStrictlySorted!292 lt!39245))))

(assert (=> d!21383 (= (lemmaContainsTupThenGetReturnValue!57 lt!39245 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39601)))

(declare-fun b!84041 () Bool)

(declare-fun res!43417 () Bool)

(assert (=> b!84041 (=> (not res!43417) (not e!54822))))

(assert (=> b!84041 (= res!43417 (containsKey!141 lt!39245 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!84042 () Bool)

(assert (=> b!84042 (= e!54822 (contains!751 lt!39245 (tuple2!2201 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21383 res!43416) b!84041))

(assert (= (and b!84041 res!43417) b!84042))

(assert (=> d!21383 m!86489))

(declare-fun m!87535 () Bool)

(assert (=> d!21383 m!87535))

(declare-fun m!87537 () Bool)

(assert (=> d!21383 m!87537))

(declare-fun m!87539 () Bool)

(assert (=> b!84041 m!87539))

(declare-fun m!87541 () Bool)

(assert (=> b!84042 m!87541))

(assert (=> d!21007 d!21383))

(declare-fun b!84043 () Bool)

(declare-fun e!54827 () List!1523)

(declare-fun call!7909 () List!1523)

(assert (=> b!84043 (= e!54827 call!7909)))

(declare-fun b!84044 () Bool)

(declare-fun e!54825 () Bool)

(declare-fun lt!39602 () List!1523)

(assert (=> b!84044 (= e!54825 (contains!751 lt!39602 (tuple2!2201 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!84045 () Bool)

(declare-fun e!54824 () List!1523)

(declare-fun c!13495 () Bool)

(declare-fun c!13497 () Bool)

(assert (=> b!84045 (= e!54824 (ite c!13497 (t!5214 (toList!739 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (ite c!13495 (Cons!1519 (h!2109 (toList!739 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (t!5214 (toList!739 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))) Nil!1520)))))

(declare-fun d!21385 () Bool)

(assert (=> d!21385 e!54825))

(declare-fun res!43419 () Bool)

(assert (=> d!21385 (=> (not res!43419) (not e!54825))))

(assert (=> d!21385 (= res!43419 (isStrictlySorted!292 lt!39602))))

(declare-fun e!54826 () List!1523)

(assert (=> d!21385 (= lt!39602 e!54826)))

(declare-fun c!13496 () Bool)

(assert (=> d!21385 (= c!13496 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (bvslt (_1!1111 (h!2109 (toList!739 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> d!21385 (isStrictlySorted!292 (toList!739 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21385 (= (insertStrictlySorted!60 (toList!739 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39602)))

(declare-fun b!84046 () Bool)

(assert (=> b!84046 (= e!54824 (insertStrictlySorted!60 (t!5214 (toList!739 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7906 () Bool)

(declare-fun call!7911 () List!1523)

(assert (=> bm!7906 (= call!7909 call!7911)))

(declare-fun b!84047 () Bool)

(declare-fun e!54823 () List!1523)

(declare-fun call!7910 () List!1523)

(assert (=> b!84047 (= e!54823 call!7910)))

(declare-fun b!84048 () Bool)

(assert (=> b!84048 (= e!54826 e!54827)))

(assert (=> b!84048 (= c!13497 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (= (_1!1111 (h!2109 (toList!739 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!84049 () Bool)

(declare-fun res!43418 () Bool)

(assert (=> b!84049 (=> (not res!43418) (not e!54825))))

(assert (=> b!84049 (= res!43418 (containsKey!141 lt!39602 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7907 () Bool)

(assert (=> bm!7907 (= call!7910 call!7909)))

(declare-fun b!84050 () Bool)

(assert (=> b!84050 (= e!54826 call!7911)))

(declare-fun b!84051 () Bool)

(assert (=> b!84051 (= e!54823 call!7910)))

(declare-fun b!84052 () Bool)

(assert (=> b!84052 (= c!13495 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (bvsgt (_1!1111 (h!2109 (toList!739 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> b!84052 (= e!54827 e!54823)))

(declare-fun bm!7908 () Bool)

(assert (=> bm!7908 (= call!7911 ($colon$colon!70 e!54824 (ite c!13496 (h!2109 (toList!739 (+!107 lt!38728 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (tuple2!2201 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(declare-fun c!13498 () Bool)

(assert (=> bm!7908 (= c!13498 c!13496)))

(assert (= (and d!21385 c!13496) b!84050))

(assert (= (and d!21385 (not c!13496)) b!84048))

(assert (= (and b!84048 c!13497) b!84043))

(assert (= (and b!84048 (not c!13497)) b!84052))

(assert (= (and b!84052 c!13495) b!84047))

(assert (= (and b!84052 (not c!13495)) b!84051))

(assert (= (or b!84047 b!84051) bm!7907))

(assert (= (or b!84043 bm!7907) bm!7906))

(assert (= (or b!84050 bm!7906) bm!7908))

(assert (= (and bm!7908 c!13498) b!84046))

(assert (= (and bm!7908 (not c!13498)) b!84045))

(assert (= (and d!21385 res!43419) b!84049))

(assert (= (and b!84049 res!43418) b!84044))

(declare-fun m!87543 () Bool)

(assert (=> bm!7908 m!87543))

(declare-fun m!87545 () Bool)

(assert (=> b!84046 m!87545))

(declare-fun m!87547 () Bool)

(assert (=> d!21385 m!87547))

(declare-fun m!87549 () Bool)

(assert (=> d!21385 m!87549))

(declare-fun m!87551 () Bool)

(assert (=> b!84049 m!87551))

(declare-fun m!87553 () Bool)

(assert (=> b!84044 m!87553))

(assert (=> d!21007 d!21385))

(declare-fun d!21387 () Bool)

(declare-fun res!43420 () Bool)

(declare-fun e!54828 () Bool)

(assert (=> d!21387 (=> res!43420 e!54828)))

(assert (=> d!21387 (= res!43420 (and ((_ is Cons!1519) (toList!739 lt!39053)) (= (_1!1111 (h!2109 (toList!739 lt!39053))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21387 (= (containsKey!141 (toList!739 lt!39053) #b1000000000000000000000000000000000000000000000000000000000000000) e!54828)))

(declare-fun b!84053 () Bool)

(declare-fun e!54829 () Bool)

(assert (=> b!84053 (= e!54828 e!54829)))

(declare-fun res!43421 () Bool)

(assert (=> b!84053 (=> (not res!43421) (not e!54829))))

(assert (=> b!84053 (= res!43421 (and (or (not ((_ is Cons!1519) (toList!739 lt!39053))) (bvsle (_1!1111 (h!2109 (toList!739 lt!39053))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1519) (toList!739 lt!39053)) (bvslt (_1!1111 (h!2109 (toList!739 lt!39053))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84054 () Bool)

(assert (=> b!84054 (= e!54829 (containsKey!141 (t!5214 (toList!739 lt!39053)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21387 (not res!43420)) b!84053))

(assert (= (and b!84053 res!43421) b!84054))

(declare-fun m!87555 () Bool)

(assert (=> b!84054 m!87555))

(assert (=> d!20967 d!21387))

(assert (=> b!83449 d!21161))

(assert (=> b!83449 d!21163))

(declare-fun d!21389 () Bool)

(assert (=> d!21389 (= (isEmpty!337 (toList!739 lt!39053)) ((_ is Nil!1520) (toList!739 lt!39053)))))

(assert (=> d!20973 d!21389))

(assert (=> b!83657 d!21261))

(declare-fun d!21391 () Bool)

(declare-fun res!43422 () Bool)

(declare-fun e!54830 () Bool)

(assert (=> d!21391 (=> res!43422 e!54830)))

(assert (=> d!21391 (= res!43422 (and ((_ is Cons!1519) lt!39071) (= (_1!1111 (h!2109 lt!39071)) (_1!1111 lt!38738))))))

(assert (=> d!21391 (= (containsKey!141 lt!39071 (_1!1111 lt!38738)) e!54830)))

(declare-fun b!84055 () Bool)

(declare-fun e!54831 () Bool)

(assert (=> b!84055 (= e!54830 e!54831)))

(declare-fun res!43423 () Bool)

(assert (=> b!84055 (=> (not res!43423) (not e!54831))))

(assert (=> b!84055 (= res!43423 (and (or (not ((_ is Cons!1519) lt!39071)) (bvsle (_1!1111 (h!2109 lt!39071)) (_1!1111 lt!38738))) ((_ is Cons!1519) lt!39071) (bvslt (_1!1111 (h!2109 lt!39071)) (_1!1111 lt!38738))))))

(declare-fun b!84056 () Bool)

(assert (=> b!84056 (= e!54831 (containsKey!141 (t!5214 lt!39071) (_1!1111 lt!38738)))))

(assert (= (and d!21391 (not res!43422)) b!84055))

(assert (= (and b!84055 res!43423) b!84056))

(declare-fun m!87557 () Bool)

(assert (=> b!84056 m!87557))

(assert (=> b!83478 d!21391))

(declare-fun d!21393 () Bool)

(declare-fun res!43424 () Bool)

(declare-fun e!54832 () Bool)

(assert (=> d!21393 (=> res!43424 e!54832)))

(assert (=> d!21393 (= res!43424 (and ((_ is Cons!1519) lt!39067) (= (_1!1111 (h!2109 lt!39067)) (_1!1111 lt!38729))))))

(assert (=> d!21393 (= (containsKey!141 lt!39067 (_1!1111 lt!38729)) e!54832)))

(declare-fun b!84057 () Bool)

(declare-fun e!54833 () Bool)

(assert (=> b!84057 (= e!54832 e!54833)))

(declare-fun res!43425 () Bool)

(assert (=> b!84057 (=> (not res!43425) (not e!54833))))

(assert (=> b!84057 (= res!43425 (and (or (not ((_ is Cons!1519) lt!39067)) (bvsle (_1!1111 (h!2109 lt!39067)) (_1!1111 lt!38729))) ((_ is Cons!1519) lt!39067) (bvslt (_1!1111 (h!2109 lt!39067)) (_1!1111 lt!38729))))))

(declare-fun b!84058 () Bool)

(assert (=> b!84058 (= e!54833 (containsKey!141 (t!5214 lt!39067) (_1!1111 lt!38729)))))

(assert (= (and d!21393 (not res!43424)) b!84057))

(assert (= (and b!84057 res!43425) b!84058))

(declare-fun m!87559 () Bool)

(assert (=> b!84058 m!87559))

(assert (=> b!83511 d!21393))

(declare-fun b!84059 () Bool)

(declare-fun e!54845 () Bool)

(declare-fun call!7916 () Bool)

(assert (=> b!84059 (= e!54845 (not call!7916))))

(declare-fun b!84060 () Bool)

(declare-fun e!54839 () Bool)

(declare-fun e!54843 () Bool)

(assert (=> b!84060 (= e!54839 e!54843)))

(declare-fun c!13504 () Bool)

(assert (=> b!84060 (= c!13504 (not (= (bvand (extraKeys!2159 (_2!1112 lt!39016)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!84061 () Bool)

(declare-fun e!54834 () Bool)

(declare-fun lt!39606 () ListLongMap!1447)

(assert (=> b!84061 (= e!54834 (= (apply!81 lt!39606 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000)) (get!1193 (select (arr!1901 (_values!2299 (_2!1112 lt!39016))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 (_2!1112 lt!39016)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!84061 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2145 (_values!2299 (_2!1112 lt!39016)))))))

(assert (=> b!84061 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 (_2!1112 lt!39016)))))))

(declare-fun b!84062 () Bool)

(declare-fun e!54841 () ListLongMap!1447)

(declare-fun call!7918 () ListLongMap!1447)

(assert (=> b!84062 (= e!54841 call!7918)))

(declare-fun call!7917 () ListLongMap!1447)

(declare-fun call!7912 () ListLongMap!1447)

(declare-fun bm!7909 () Bool)

(declare-fun call!7913 () ListLongMap!1447)

(declare-fun c!13499 () Bool)

(declare-fun call!7914 () ListLongMap!1447)

(declare-fun c!13502 () Bool)

(assert (=> bm!7909 (= call!7917 (+!107 (ite c!13499 call!7912 (ite c!13502 call!7914 call!7913)) (ite (or c!13499 c!13502) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (_2!1112 lt!39016))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (_2!1112 lt!39016))))))))

(declare-fun b!84063 () Bool)

(declare-fun e!54836 () Bool)

(assert (=> b!84063 (= e!54836 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000)))))

(declare-fun b!84064 () Bool)

(declare-fun res!43433 () Bool)

(assert (=> b!84064 (=> (not res!43433) (not e!54839))))

(declare-fun e!54835 () Bool)

(assert (=> b!84064 (= res!43433 e!54835)))

(declare-fun res!43434 () Bool)

(assert (=> b!84064 (=> res!43434 e!54835)))

(assert (=> b!84064 (= res!43434 (not e!54836))))

(declare-fun res!43426 () Bool)

(assert (=> b!84064 (=> (not res!43426) (not e!54836))))

(assert (=> b!84064 (= res!43426 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 (_2!1112 lt!39016)))))))

(declare-fun b!84065 () Bool)

(declare-fun call!7915 () Bool)

(assert (=> b!84065 (= e!54843 (not call!7915))))

(declare-fun b!84066 () Bool)

(declare-fun e!54844 () Bool)

(assert (=> b!84066 (= e!54845 e!54844)))

(declare-fun res!43427 () Bool)

(assert (=> b!84066 (= res!43427 call!7916)))

(assert (=> b!84066 (=> (not res!43427) (not e!54844))))

(declare-fun bm!7910 () Bool)

(assert (=> bm!7910 (= call!7915 (contains!749 lt!39606 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84067 () Bool)

(declare-fun res!43429 () Bool)

(assert (=> b!84067 (=> (not res!43429) (not e!54839))))

(assert (=> b!84067 (= res!43429 e!54845)))

(declare-fun c!13501 () Bool)

(assert (=> b!84067 (= c!13501 (not (= (bvand (extraKeys!2159 (_2!1112 lt!39016)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!21395 () Bool)

(assert (=> d!21395 e!54839))

(declare-fun res!43432 () Bool)

(assert (=> d!21395 (=> (not res!43432) (not e!54839))))

(assert (=> d!21395 (= res!43432 (or (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 (_2!1112 lt!39016)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 (_2!1112 lt!39016)))))))))

(declare-fun lt!39619 () ListLongMap!1447)

(assert (=> d!21395 (= lt!39606 lt!39619)))

(declare-fun lt!39616 () Unit!2426)

(declare-fun e!54840 () Unit!2426)

(assert (=> d!21395 (= lt!39616 e!54840)))

(declare-fun c!13500 () Bool)

(declare-fun e!54837 () Bool)

(assert (=> d!21395 (= c!13500 e!54837)))

(declare-fun res!43430 () Bool)

(assert (=> d!21395 (=> (not res!43430) (not e!54837))))

(assert (=> d!21395 (= res!43430 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 (_2!1112 lt!39016)))))))

(declare-fun e!54846 () ListLongMap!1447)

(assert (=> d!21395 (= lt!39619 e!54846)))

(assert (=> d!21395 (= c!13499 (and (not (= (bvand (extraKeys!2159 (_2!1112 lt!39016)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 (_2!1112 lt!39016)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21395 (validMask!0 (mask!6333 (_2!1112 lt!39016)))))

(assert (=> d!21395 (= (getCurrentListMap!425 (_keys!3983 (_2!1112 lt!39016)) (_values!2299 (_2!1112 lt!39016)) (mask!6333 (_2!1112 lt!39016)) (extraKeys!2159 (_2!1112 lt!39016)) (zeroValue!2210 (_2!1112 lt!39016)) (minValue!2210 (_2!1112 lt!39016)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1112 lt!39016))) lt!39606)))

(declare-fun b!84068 () Bool)

(assert (=> b!84068 (= e!54844 (= (apply!81 lt!39606 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 (_2!1112 lt!39016))))))

(declare-fun b!84069 () Bool)

(declare-fun e!54842 () Bool)

(assert (=> b!84069 (= e!54843 e!54842)))

(declare-fun res!43428 () Bool)

(assert (=> b!84069 (= res!43428 call!7915)))

(assert (=> b!84069 (=> (not res!43428) (not e!54842))))

(declare-fun b!84070 () Bool)

(assert (=> b!84070 (= e!54837 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000)))))

(declare-fun b!84071 () Bool)

(assert (=> b!84071 (= e!54846 e!54841)))

(assert (=> b!84071 (= c!13502 (and (not (= (bvand (extraKeys!2159 (_2!1112 lt!39016)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 (_2!1112 lt!39016)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7911 () Bool)

(assert (=> bm!7911 (= call!7914 call!7912)))

(declare-fun b!84072 () Bool)

(declare-fun lt!39618 () Unit!2426)

(assert (=> b!84072 (= e!54840 lt!39618)))

(declare-fun lt!39624 () ListLongMap!1447)

(assert (=> b!84072 (= lt!39624 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (_2!1112 lt!39016)) (_values!2299 (_2!1112 lt!39016)) (mask!6333 (_2!1112 lt!39016)) (extraKeys!2159 (_2!1112 lt!39016)) (zeroValue!2210 (_2!1112 lt!39016)) (minValue!2210 (_2!1112 lt!39016)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1112 lt!39016))))))

(declare-fun lt!39621 () (_ BitVec 64))

(assert (=> b!84072 (= lt!39621 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39622 () (_ BitVec 64))

(assert (=> b!84072 (= lt!39622 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000))))

(declare-fun lt!39604 () Unit!2426)

(assert (=> b!84072 (= lt!39604 (addStillContains!57 lt!39624 lt!39621 (zeroValue!2210 (_2!1112 lt!39016)) lt!39622))))

(assert (=> b!84072 (contains!749 (+!107 lt!39624 (tuple2!2201 lt!39621 (zeroValue!2210 (_2!1112 lt!39016)))) lt!39622)))

(declare-fun lt!39623 () Unit!2426)

(assert (=> b!84072 (= lt!39623 lt!39604)))

(declare-fun lt!39613 () ListLongMap!1447)

(assert (=> b!84072 (= lt!39613 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (_2!1112 lt!39016)) (_values!2299 (_2!1112 lt!39016)) (mask!6333 (_2!1112 lt!39016)) (extraKeys!2159 (_2!1112 lt!39016)) (zeroValue!2210 (_2!1112 lt!39016)) (minValue!2210 (_2!1112 lt!39016)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1112 lt!39016))))))

(declare-fun lt!39610 () (_ BitVec 64))

(assert (=> b!84072 (= lt!39610 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39617 () (_ BitVec 64))

(assert (=> b!84072 (= lt!39617 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000))))

(declare-fun lt!39608 () Unit!2426)

(assert (=> b!84072 (= lt!39608 (addApplyDifferent!57 lt!39613 lt!39610 (minValue!2210 (_2!1112 lt!39016)) lt!39617))))

(assert (=> b!84072 (= (apply!81 (+!107 lt!39613 (tuple2!2201 lt!39610 (minValue!2210 (_2!1112 lt!39016)))) lt!39617) (apply!81 lt!39613 lt!39617))))

(declare-fun lt!39603 () Unit!2426)

(assert (=> b!84072 (= lt!39603 lt!39608)))

(declare-fun lt!39607 () ListLongMap!1447)

(assert (=> b!84072 (= lt!39607 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (_2!1112 lt!39016)) (_values!2299 (_2!1112 lt!39016)) (mask!6333 (_2!1112 lt!39016)) (extraKeys!2159 (_2!1112 lt!39016)) (zeroValue!2210 (_2!1112 lt!39016)) (minValue!2210 (_2!1112 lt!39016)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1112 lt!39016))))))

(declare-fun lt!39609 () (_ BitVec 64))

(assert (=> b!84072 (= lt!39609 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39612 () (_ BitVec 64))

(assert (=> b!84072 (= lt!39612 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000))))

(declare-fun lt!39614 () Unit!2426)

(assert (=> b!84072 (= lt!39614 (addApplyDifferent!57 lt!39607 lt!39609 (zeroValue!2210 (_2!1112 lt!39016)) lt!39612))))

(assert (=> b!84072 (= (apply!81 (+!107 lt!39607 (tuple2!2201 lt!39609 (zeroValue!2210 (_2!1112 lt!39016)))) lt!39612) (apply!81 lt!39607 lt!39612))))

(declare-fun lt!39615 () Unit!2426)

(assert (=> b!84072 (= lt!39615 lt!39614)))

(declare-fun lt!39611 () ListLongMap!1447)

(assert (=> b!84072 (= lt!39611 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (_2!1112 lt!39016)) (_values!2299 (_2!1112 lt!39016)) (mask!6333 (_2!1112 lt!39016)) (extraKeys!2159 (_2!1112 lt!39016)) (zeroValue!2210 (_2!1112 lt!39016)) (minValue!2210 (_2!1112 lt!39016)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1112 lt!39016))))))

(declare-fun lt!39620 () (_ BitVec 64))

(assert (=> b!84072 (= lt!39620 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39605 () (_ BitVec 64))

(assert (=> b!84072 (= lt!39605 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000))))

(assert (=> b!84072 (= lt!39618 (addApplyDifferent!57 lt!39611 lt!39620 (minValue!2210 (_2!1112 lt!39016)) lt!39605))))

(assert (=> b!84072 (= (apply!81 (+!107 lt!39611 (tuple2!2201 lt!39620 (minValue!2210 (_2!1112 lt!39016)))) lt!39605) (apply!81 lt!39611 lt!39605))))

(declare-fun bm!7912 () Bool)

(assert (=> bm!7912 (= call!7913 call!7914)))

(declare-fun b!84073 () Bool)

(declare-fun Unit!2472 () Unit!2426)

(assert (=> b!84073 (= e!54840 Unit!2472)))

(declare-fun b!84074 () Bool)

(assert (=> b!84074 (= e!54835 e!54834)))

(declare-fun res!43431 () Bool)

(assert (=> b!84074 (=> (not res!43431) (not e!54834))))

(assert (=> b!84074 (= res!43431 (contains!749 lt!39606 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000)))))

(assert (=> b!84074 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 (_2!1112 lt!39016)))))))

(declare-fun b!84075 () Bool)

(declare-fun e!54838 () ListLongMap!1447)

(assert (=> b!84075 (= e!54838 call!7918)))

(declare-fun b!84076 () Bool)

(assert (=> b!84076 (= e!54842 (= (apply!81 lt!39606 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 (_2!1112 lt!39016))))))

(declare-fun bm!7913 () Bool)

(assert (=> bm!7913 (= call!7918 call!7917)))

(declare-fun bm!7914 () Bool)

(assert (=> bm!7914 (= call!7916 (contains!749 lt!39606 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84077 () Bool)

(assert (=> b!84077 (= e!54838 call!7913)))

(declare-fun b!84078 () Bool)

(declare-fun c!13503 () Bool)

(assert (=> b!84078 (= c!13503 (and (not (= (bvand (extraKeys!2159 (_2!1112 lt!39016)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 (_2!1112 lt!39016)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!84078 (= e!54841 e!54838)))

(declare-fun b!84079 () Bool)

(assert (=> b!84079 (= e!54846 (+!107 call!7917 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (_2!1112 lt!39016)))))))

(declare-fun bm!7915 () Bool)

(assert (=> bm!7915 (= call!7912 (getCurrentListMapNoExtraKeys!71 (_keys!3983 (_2!1112 lt!39016)) (_values!2299 (_2!1112 lt!39016)) (mask!6333 (_2!1112 lt!39016)) (extraKeys!2159 (_2!1112 lt!39016)) (zeroValue!2210 (_2!1112 lt!39016)) (minValue!2210 (_2!1112 lt!39016)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1112 lt!39016))))))

(assert (= (and d!21395 c!13499) b!84079))

(assert (= (and d!21395 (not c!13499)) b!84071))

(assert (= (and b!84071 c!13502) b!84062))

(assert (= (and b!84071 (not c!13502)) b!84078))

(assert (= (and b!84078 c!13503) b!84075))

(assert (= (and b!84078 (not c!13503)) b!84077))

(assert (= (or b!84075 b!84077) bm!7912))

(assert (= (or b!84062 bm!7912) bm!7911))

(assert (= (or b!84062 b!84075) bm!7913))

(assert (= (or b!84079 bm!7911) bm!7915))

(assert (= (or b!84079 bm!7913) bm!7909))

(assert (= (and d!21395 res!43430) b!84070))

(assert (= (and d!21395 c!13500) b!84072))

(assert (= (and d!21395 (not c!13500)) b!84073))

(assert (= (and d!21395 res!43432) b!84064))

(assert (= (and b!84064 res!43426) b!84063))

(assert (= (and b!84064 (not res!43434)) b!84074))

(assert (= (and b!84074 res!43431) b!84061))

(assert (= (and b!84064 res!43433) b!84067))

(assert (= (and b!84067 c!13501) b!84066))

(assert (= (and b!84067 (not c!13501)) b!84059))

(assert (= (and b!84066 res!43427) b!84068))

(assert (= (or b!84066 b!84059) bm!7914))

(assert (= (and b!84067 res!43429) b!84060))

(assert (= (and b!84060 c!13504) b!84069))

(assert (= (and b!84060 (not c!13504)) b!84065))

(assert (= (and b!84069 res!43428) b!84076))

(assert (= (or b!84069 b!84065) bm!7910))

(declare-fun b_lambda!3737 () Bool)

(assert (=> (not b_lambda!3737) (not b!84061)))

(declare-fun tb!1677 () Bool)

(declare-fun t!5230 () Bool)

(assert (=> (and b!82709 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 (_2!1112 lt!39016))) t!5230) tb!1677))

(declare-fun result!2899 () Bool)

(assert (=> tb!1677 (= result!2899 tp_is_empty!2527)))

(assert (=> b!84061 t!5230))

(declare-fun b_and!5113 () Bool)

(assert (= b_and!5109 (and (=> t!5230 result!2899) b_and!5113)))

(declare-fun tb!1679 () Bool)

(declare-fun t!5232 () Bool)

(assert (=> (and b!82707 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (_2!1112 lt!39016))) t!5232) tb!1679))

(declare-fun result!2901 () Bool)

(assert (= result!2901 result!2899))

(assert (=> b!84061 t!5232))

(declare-fun b_and!5115 () Bool)

(assert (= b_and!5111 (and (=> t!5232 result!2901) b_and!5115)))

(declare-fun m!87561 () Bool)

(assert (=> b!84076 m!87561))

(declare-fun m!87563 () Bool)

(assert (=> bm!7910 m!87563))

(assert (=> b!84074 m!87161))

(assert (=> b!84074 m!87161))

(declare-fun m!87565 () Bool)

(assert (=> b!84074 m!87565))

(declare-fun m!87567 () Bool)

(assert (=> bm!7915 m!87567))

(declare-fun m!87569 () Bool)

(assert (=> bm!7909 m!87569))

(declare-fun m!87571 () Bool)

(assert (=> bm!7914 m!87571))

(assert (=> b!84072 m!87161))

(assert (=> b!84072 m!87567))

(declare-fun m!87573 () Bool)

(assert (=> b!84072 m!87573))

(declare-fun m!87575 () Bool)

(assert (=> b!84072 m!87575))

(declare-fun m!87577 () Bool)

(assert (=> b!84072 m!87577))

(declare-fun m!87579 () Bool)

(assert (=> b!84072 m!87579))

(declare-fun m!87581 () Bool)

(assert (=> b!84072 m!87581))

(declare-fun m!87583 () Bool)

(assert (=> b!84072 m!87583))

(declare-fun m!87585 () Bool)

(assert (=> b!84072 m!87585))

(declare-fun m!87587 () Bool)

(assert (=> b!84072 m!87587))

(declare-fun m!87589 () Bool)

(assert (=> b!84072 m!87589))

(assert (=> b!84072 m!87579))

(assert (=> b!84072 m!87583))

(declare-fun m!87591 () Bool)

(assert (=> b!84072 m!87591))

(declare-fun m!87593 () Bool)

(assert (=> b!84072 m!87593))

(assert (=> b!84072 m!87593))

(declare-fun m!87595 () Bool)

(assert (=> b!84072 m!87595))

(declare-fun m!87597 () Bool)

(assert (=> b!84072 m!87597))

(assert (=> b!84072 m!87577))

(declare-fun m!87599 () Bool)

(assert (=> b!84072 m!87599))

(declare-fun m!87601 () Bool)

(assert (=> b!84072 m!87601))

(assert (=> b!84061 m!87161))

(declare-fun m!87603 () Bool)

(assert (=> b!84061 m!87603))

(assert (=> b!84061 m!87161))

(declare-fun m!87605 () Bool)

(assert (=> b!84061 m!87605))

(declare-fun m!87607 () Bool)

(assert (=> b!84061 m!87607))

(assert (=> b!84061 m!87607))

(assert (=> b!84061 m!87603))

(declare-fun m!87609 () Bool)

(assert (=> b!84061 m!87609))

(assert (=> b!84063 m!87161))

(assert (=> b!84063 m!87161))

(assert (=> b!84063 m!87163))

(declare-fun m!87611 () Bool)

(assert (=> b!84079 m!87611))

(declare-fun m!87613 () Bool)

(assert (=> b!84068 m!87613))

(assert (=> b!84070 m!87161))

(assert (=> b!84070 m!87161))

(assert (=> b!84070 m!87163))

(declare-fun m!87615 () Bool)

(assert (=> d!21395 m!87615))

(assert (=> d!21013 d!21395))

(declare-fun d!21397 () Bool)

(declare-fun res!43435 () Bool)

(declare-fun e!54847 () Bool)

(assert (=> d!21397 (=> res!43435 e!54847)))

(assert (=> d!21397 (= res!43435 (and ((_ is Cons!1519) (toList!739 lt!39053)) (= (_1!1111 (h!2109 (toList!739 lt!39053))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21397 (= (containsKey!141 (toList!739 lt!39053) #b0000000000000000000000000000000000000000000000000000000000000000) e!54847)))

(declare-fun b!84080 () Bool)

(declare-fun e!54848 () Bool)

(assert (=> b!84080 (= e!54847 e!54848)))

(declare-fun res!43436 () Bool)

(assert (=> b!84080 (=> (not res!43436) (not e!54848))))

(assert (=> b!84080 (= res!43436 (and (or (not ((_ is Cons!1519) (toList!739 lt!39053))) (bvsle (_1!1111 (h!2109 (toList!739 lt!39053))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1519) (toList!739 lt!39053)) (bvslt (_1!1111 (h!2109 (toList!739 lt!39053))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84081 () Bool)

(assert (=> b!84081 (= e!54848 (containsKey!141 (t!5214 (toList!739 lt!39053)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21397 (not res!43435)) b!84080))

(assert (= (and b!84080 res!43436) b!84081))

(declare-fun m!87617 () Bool)

(assert (=> b!84081 m!87617))

(assert (=> d!21129 d!21397))

(declare-fun d!21399 () Bool)

(assert (=> d!21399 (= (size!2150 newMap!16) (bvadd (_size!423 newMap!16) (bvsdiv (bvadd (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!83501 d!21399))

(declare-fun b!84082 () Bool)

(declare-fun e!54851 () Bool)

(declare-fun e!54849 () Bool)

(assert (=> b!84082 (= e!54851 e!54849)))

(declare-fun c!13505 () Bool)

(assert (=> b!84082 (= c!13505 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!84083 () Bool)

(declare-fun e!54850 () Bool)

(declare-fun call!7919 () Bool)

(assert (=> b!84083 (= e!54850 call!7919)))

(declare-fun b!84084 () Bool)

(assert (=> b!84084 (= e!54849 e!54850)))

(declare-fun lt!39626 () (_ BitVec 64))

(assert (=> b!84084 (= lt!39626 (select (arr!1900 (_keys!3983 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!39627 () Unit!2426)

(assert (=> b!84084 (= lt!39627 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3983 newMap!16) lt!39626 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!84084 (arrayContainsKey!0 (_keys!3983 newMap!16) lt!39626 #b00000000000000000000000000000000)))

(declare-fun lt!39625 () Unit!2426)

(assert (=> b!84084 (= lt!39625 lt!39627)))

(declare-fun res!43437 () Bool)

(assert (=> b!84084 (= res!43437 (= (seekEntryOrOpen!0 (select (arr!1900 (_keys!3983 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3983 newMap!16) (mask!6333 newMap!16)) (Found!245 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!84084 (=> (not res!43437) (not e!54850))))

(declare-fun d!21401 () Bool)

(declare-fun res!43438 () Bool)

(assert (=> d!21401 (=> res!43438 e!54851)))

(assert (=> d!21401 (= res!43438 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2144 (_keys!3983 newMap!16))))))

(assert (=> d!21401 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3983 newMap!16) (mask!6333 newMap!16)) e!54851)))

(declare-fun b!84085 () Bool)

(assert (=> b!84085 (= e!54849 call!7919)))

(declare-fun bm!7916 () Bool)

(assert (=> bm!7916 (= call!7919 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(assert (= (and d!21401 (not res!43438)) b!84082))

(assert (= (and b!84082 c!13505) b!84084))

(assert (= (and b!84082 (not c!13505)) b!84085))

(assert (= (and b!84084 res!43437) b!84083))

(assert (= (or b!84083 b!84085) bm!7916))

(assert (=> b!84082 m!87105))

(assert (=> b!84082 m!87105))

(assert (=> b!84082 m!87111))

(assert (=> b!84084 m!87105))

(declare-fun m!87619 () Bool)

(assert (=> b!84084 m!87619))

(declare-fun m!87621 () Bool)

(assert (=> b!84084 m!87621))

(assert (=> b!84084 m!87105))

(declare-fun m!87623 () Bool)

(assert (=> b!84084 m!87623))

(declare-fun m!87625 () Bool)

(assert (=> bm!7916 m!87625))

(assert (=> bm!7844 d!21401))

(declare-fun d!21403 () Bool)

(declare-fun res!43439 () Bool)

(declare-fun e!54852 () Bool)

(assert (=> d!21403 (=> res!43439 e!54852)))

(assert (=> d!21403 (= res!43439 (and ((_ is Cons!1519) lt!39314) (= (_1!1111 (h!2109 lt!39314)) (_1!1111 lt!38729))))))

(assert (=> d!21403 (= (containsKey!141 lt!39314 (_1!1111 lt!38729)) e!54852)))

(declare-fun b!84086 () Bool)

(declare-fun e!54853 () Bool)

(assert (=> b!84086 (= e!54852 e!54853)))

(declare-fun res!43440 () Bool)

(assert (=> b!84086 (=> (not res!43440) (not e!54853))))

(assert (=> b!84086 (= res!43440 (and (or (not ((_ is Cons!1519) lt!39314)) (bvsle (_1!1111 (h!2109 lt!39314)) (_1!1111 lt!38729))) ((_ is Cons!1519) lt!39314) (bvslt (_1!1111 (h!2109 lt!39314)) (_1!1111 lt!38729))))))

(declare-fun b!84087 () Bool)

(assert (=> b!84087 (= e!54853 (containsKey!141 (t!5214 lt!39314) (_1!1111 lt!38729)))))

(assert (= (and d!21403 (not res!43439)) b!84086))

(assert (= (and b!84086 res!43440) b!84087))

(declare-fun m!87627 () Bool)

(assert (=> b!84087 m!87627))

(assert (=> b!83519 d!21403))

(declare-fun d!21405 () Bool)

(declare-fun lt!39628 () Bool)

(assert (=> d!21405 (= lt!39628 (select (content!87 (t!5214 (toList!739 lt!39068))) lt!38729))))

(declare-fun e!54854 () Bool)

(assert (=> d!21405 (= lt!39628 e!54854)))

(declare-fun res!43441 () Bool)

(assert (=> d!21405 (=> (not res!43441) (not e!54854))))

(assert (=> d!21405 (= res!43441 ((_ is Cons!1519) (t!5214 (toList!739 lt!39068))))))

(assert (=> d!21405 (= (contains!751 (t!5214 (toList!739 lt!39068)) lt!38729) lt!39628)))

(declare-fun b!84088 () Bool)

(declare-fun e!54855 () Bool)

(assert (=> b!84088 (= e!54854 e!54855)))

(declare-fun res!43442 () Bool)

(assert (=> b!84088 (=> res!43442 e!54855)))

(assert (=> b!84088 (= res!43442 (= (h!2109 (t!5214 (toList!739 lt!39068))) lt!38729))))

(declare-fun b!84089 () Bool)

(assert (=> b!84089 (= e!54855 (contains!751 (t!5214 (t!5214 (toList!739 lt!39068))) lt!38729))))

(assert (= (and d!21405 res!43441) b!84088))

(assert (= (and b!84088 (not res!43442)) b!84089))

(declare-fun m!87629 () Bool)

(assert (=> d!21405 m!87629))

(declare-fun m!87631 () Bool)

(assert (=> d!21405 m!87631))

(declare-fun m!87633 () Bool)

(assert (=> b!84089 m!87633))

(assert (=> b!83649 d!21405))

(declare-fun d!21407 () Bool)

(declare-fun lt!39629 () Bool)

(assert (=> d!21407 (= lt!39629 (select (content!87 lt!39186) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(declare-fun e!54856 () Bool)

(assert (=> d!21407 (= lt!39629 e!54856)))

(declare-fun res!43443 () Bool)

(assert (=> d!21407 (=> (not res!43443) (not e!54856))))

(assert (=> d!21407 (= res!43443 ((_ is Cons!1519) lt!39186))))

(assert (=> d!21407 (= (contains!751 lt!39186 (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))) lt!39629)))

(declare-fun b!84090 () Bool)

(declare-fun e!54857 () Bool)

(assert (=> b!84090 (= e!54856 e!54857)))

(declare-fun res!43444 () Bool)

(assert (=> b!84090 (=> res!43444 e!54857)))

(assert (=> b!84090 (= res!43444 (= (h!2109 lt!39186) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(declare-fun b!84091 () Bool)

(assert (=> b!84091 (= e!54857 (contains!751 (t!5214 lt!39186) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(assert (= (and d!21407 res!43443) b!84090))

(assert (= (and b!84090 (not res!43444)) b!84091))

(declare-fun m!87635 () Bool)

(assert (=> d!21407 m!87635))

(declare-fun m!87637 () Bool)

(assert (=> d!21407 m!87637))

(declare-fun m!87639 () Bool)

(assert (=> b!84091 m!87639))

(assert (=> b!83329 d!21407))

(assert (=> bm!7821 d!21361))

(declare-fun d!21409 () Bool)

(declare-fun e!54859 () Bool)

(assert (=> d!21409 e!54859))

(declare-fun res!43445 () Bool)

(assert (=> d!21409 (=> res!43445 e!54859)))

(declare-fun lt!39631 () Bool)

(assert (=> d!21409 (= res!43445 (not lt!39631))))

(declare-fun lt!39633 () Bool)

(assert (=> d!21409 (= lt!39631 lt!39633)))

(declare-fun lt!39632 () Unit!2426)

(declare-fun e!54858 () Unit!2426)

(assert (=> d!21409 (= lt!39632 e!54858)))

(declare-fun c!13506 () Bool)

(assert (=> d!21409 (= c!13506 lt!39633)))

(assert (=> d!21409 (= lt!39633 (containsKey!141 (toList!739 lt!39261) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21409 (= (contains!749 lt!39261 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!39631)))

(declare-fun b!84092 () Bool)

(declare-fun lt!39630 () Unit!2426)

(assert (=> b!84092 (= e!54858 lt!39630)))

(assert (=> b!84092 (= lt!39630 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39261) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!84092 (isDefined!91 (getValueByKey!137 (toList!739 lt!39261) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!84093 () Bool)

(declare-fun Unit!2473 () Unit!2426)

(assert (=> b!84093 (= e!54858 Unit!2473)))

(declare-fun b!84094 () Bool)

(assert (=> b!84094 (= e!54859 (isDefined!91 (getValueByKey!137 (toList!739 lt!39261) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!21409 c!13506) b!84092))

(assert (= (and d!21409 (not c!13506)) b!84093))

(assert (= (and d!21409 (not res!43445)) b!84094))

(declare-fun m!87641 () Bool)

(assert (=> d!21409 m!87641))

(declare-fun m!87643 () Bool)

(assert (=> b!84092 m!87643))

(assert (=> b!84092 m!86547))

(assert (=> b!84092 m!86547))

(declare-fun m!87645 () Bool)

(assert (=> b!84092 m!87645))

(assert (=> b!84094 m!86547))

(assert (=> b!84094 m!86547))

(assert (=> b!84094 m!87645))

(assert (=> d!21025 d!21409))

(declare-fun e!54861 () Option!143)

(declare-fun b!84097 () Bool)

(assert (=> b!84097 (= e!54861 (getValueByKey!137 (t!5214 lt!39260) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!13507 () Bool)

(declare-fun d!21411 () Bool)

(assert (=> d!21411 (= c!13507 (and ((_ is Cons!1519) lt!39260) (= (_1!1111 (h!2109 lt!39260)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!54860 () Option!143)

(assert (=> d!21411 (= (getValueByKey!137 lt!39260 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!54860)))

(declare-fun b!84095 () Bool)

(assert (=> b!84095 (= e!54860 (Some!142 (_2!1111 (h!2109 lt!39260))))))

(declare-fun b!84098 () Bool)

(assert (=> b!84098 (= e!54861 None!141)))

(declare-fun b!84096 () Bool)

(assert (=> b!84096 (= e!54860 e!54861)))

(declare-fun c!13508 () Bool)

(assert (=> b!84096 (= c!13508 (and ((_ is Cons!1519) lt!39260) (not (= (_1!1111 (h!2109 lt!39260)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!21411 c!13507) b!84095))

(assert (= (and d!21411 (not c!13507)) b!84096))

(assert (= (and b!84096 c!13508) b!84097))

(assert (= (and b!84096 (not c!13508)) b!84098))

(declare-fun m!87647 () Bool)

(assert (=> b!84097 m!87647))

(assert (=> d!21025 d!21411))

(declare-fun d!21413 () Bool)

(assert (=> d!21413 (= (getValueByKey!137 lt!39260 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!39634 () Unit!2426)

(assert (=> d!21413 (= lt!39634 (choose!497 lt!39260 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!54862 () Bool)

(assert (=> d!21413 e!54862))

(declare-fun res!43446 () Bool)

(assert (=> d!21413 (=> (not res!43446) (not e!54862))))

(assert (=> d!21413 (= res!43446 (isStrictlySorted!292 lt!39260))))

(assert (=> d!21413 (= (lemmaContainsTupThenGetReturnValue!57 lt!39260 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!39634)))

(declare-fun b!84099 () Bool)

(declare-fun res!43447 () Bool)

(assert (=> b!84099 (=> (not res!43447) (not e!54862))))

(assert (=> b!84099 (= res!43447 (containsKey!141 lt!39260 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!84100 () Bool)

(assert (=> b!84100 (= e!54862 (contains!751 lt!39260 (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!21413 res!43446) b!84099))

(assert (= (and b!84099 res!43447) b!84100))

(assert (=> d!21413 m!86541))

(declare-fun m!87649 () Bool)

(assert (=> d!21413 m!87649))

(declare-fun m!87651 () Bool)

(assert (=> d!21413 m!87651))

(declare-fun m!87653 () Bool)

(assert (=> b!84099 m!87653))

(declare-fun m!87655 () Bool)

(assert (=> b!84100 m!87655))

(assert (=> d!21025 d!21413))

(declare-fun b!84101 () Bool)

(declare-fun e!54867 () List!1523)

(declare-fun call!7920 () List!1523)

(assert (=> b!84101 (= e!54867 call!7920)))

(declare-fun lt!39635 () List!1523)

(declare-fun e!54865 () Bool)

(declare-fun b!84102 () Bool)

(assert (=> b!84102 (= e!54865 (contains!751 lt!39635 (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!84103 () Bool)

(declare-fun e!54864 () List!1523)

(declare-fun c!13509 () Bool)

(declare-fun c!13511 () Bool)

(assert (=> b!84103 (= e!54864 (ite c!13511 (t!5214 (toList!739 call!7806)) (ite c!13509 (Cons!1519 (h!2109 (toList!739 call!7806)) (t!5214 (toList!739 call!7806))) Nil!1520)))))

(declare-fun d!21415 () Bool)

(assert (=> d!21415 e!54865))

(declare-fun res!43449 () Bool)

(assert (=> d!21415 (=> (not res!43449) (not e!54865))))

(assert (=> d!21415 (= res!43449 (isStrictlySorted!292 lt!39635))))

(declare-fun e!54866 () List!1523)

(assert (=> d!21415 (= lt!39635 e!54866)))

(declare-fun c!13510 () Bool)

(assert (=> d!21415 (= c!13510 (and ((_ is Cons!1519) (toList!739 call!7806)) (bvslt (_1!1111 (h!2109 (toList!739 call!7806))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!21415 (isStrictlySorted!292 (toList!739 call!7806))))

(assert (=> d!21415 (= (insertStrictlySorted!60 (toList!739 call!7806) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!39635)))

(declare-fun b!84104 () Bool)

(assert (=> b!84104 (= e!54864 (insertStrictlySorted!60 (t!5214 (toList!739 call!7806)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!7917 () Bool)

(declare-fun call!7922 () List!1523)

(assert (=> bm!7917 (= call!7920 call!7922)))

(declare-fun b!84105 () Bool)

(declare-fun e!54863 () List!1523)

(declare-fun call!7921 () List!1523)

(assert (=> b!84105 (= e!54863 call!7921)))

(declare-fun b!84106 () Bool)

(assert (=> b!84106 (= e!54866 e!54867)))

(assert (=> b!84106 (= c!13511 (and ((_ is Cons!1519) (toList!739 call!7806)) (= (_1!1111 (h!2109 (toList!739 call!7806))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!84107 () Bool)

(declare-fun res!43448 () Bool)

(assert (=> b!84107 (=> (not res!43448) (not e!54865))))

(assert (=> b!84107 (= res!43448 (containsKey!141 lt!39635 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!7918 () Bool)

(assert (=> bm!7918 (= call!7921 call!7920)))

(declare-fun b!84108 () Bool)

(assert (=> b!84108 (= e!54866 call!7922)))

(declare-fun b!84109 () Bool)

(assert (=> b!84109 (= e!54863 call!7921)))

(declare-fun b!84110 () Bool)

(assert (=> b!84110 (= c!13509 (and ((_ is Cons!1519) (toList!739 call!7806)) (bvsgt (_1!1111 (h!2109 (toList!739 call!7806))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!84110 (= e!54867 e!54863)))

(declare-fun bm!7919 () Bool)

(assert (=> bm!7919 (= call!7922 ($colon$colon!70 e!54864 (ite c!13510 (h!2109 (toList!739 call!7806)) (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!13512 () Bool)

(assert (=> bm!7919 (= c!13512 c!13510)))

(assert (= (and d!21415 c!13510) b!84108))

(assert (= (and d!21415 (not c!13510)) b!84106))

(assert (= (and b!84106 c!13511) b!84101))

(assert (= (and b!84106 (not c!13511)) b!84110))

(assert (= (and b!84110 c!13509) b!84105))

(assert (= (and b!84110 (not c!13509)) b!84109))

(assert (= (or b!84105 b!84109) bm!7918))

(assert (= (or b!84101 bm!7918) bm!7917))

(assert (= (or b!84108 bm!7917) bm!7919))

(assert (= (and bm!7919 c!13512) b!84104))

(assert (= (and bm!7919 (not c!13512)) b!84103))

(assert (= (and d!21415 res!43449) b!84107))

(assert (= (and b!84107 res!43448) b!84102))

(declare-fun m!87657 () Bool)

(assert (=> bm!7919 m!87657))

(declare-fun m!87659 () Bool)

(assert (=> b!84104 m!87659))

(declare-fun m!87661 () Bool)

(assert (=> d!21415 m!87661))

(declare-fun m!87663 () Bool)

(assert (=> d!21415 m!87663))

(declare-fun m!87665 () Bool)

(assert (=> b!84107 m!87665))

(declare-fun m!87667 () Bool)

(assert (=> b!84102 m!87667))

(assert (=> d!21025 d!21415))

(declare-fun d!21417 () Bool)

(declare-fun lt!39636 () Bool)

(assert (=> d!21417 (= lt!39636 (select (content!87 lt!39060) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun e!54868 () Bool)

(assert (=> d!21417 (= lt!39636 e!54868)))

(declare-fun res!43450 () Bool)

(assert (=> d!21417 (=> (not res!43450) (not e!54868))))

(assert (=> d!21417 (= res!43450 ((_ is Cons!1519) lt!39060))))

(assert (=> d!21417 (= (contains!751 lt!39060 (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))) lt!39636)))

(declare-fun b!84111 () Bool)

(declare-fun e!54869 () Bool)

(assert (=> b!84111 (= e!54868 e!54869)))

(declare-fun res!43451 () Bool)

(assert (=> b!84111 (=> res!43451 e!54869)))

(assert (=> b!84111 (= res!43451 (= (h!2109 lt!39060) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun b!84112 () Bool)

(assert (=> b!84112 (= e!54869 (contains!751 (t!5214 lt!39060) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(assert (= (and d!21417 res!43450) b!84111))

(assert (= (and b!84111 (not res!43451)) b!84112))

(declare-fun m!87669 () Bool)

(assert (=> d!21417 m!87669))

(declare-fun m!87671 () Bool)

(assert (=> d!21417 m!87671))

(declare-fun m!87673 () Bool)

(assert (=> b!84112 m!87673))

(assert (=> b!83615 d!21417))

(assert (=> d!20917 d!20977))

(declare-fun b!84113 () Bool)

(declare-fun e!54881 () Bool)

(declare-fun call!7927 () Bool)

(assert (=> b!84113 (= e!54881 (not call!7927))))

(declare-fun b!84114 () Bool)

(declare-fun e!54875 () Bool)

(declare-fun e!54879 () Bool)

(assert (=> b!84114 (= e!54875 e!54879)))

(declare-fun c!13518 () Bool)

(assert (=> b!84114 (= c!13518 (not (= (bvand lt!38999 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!84115 () Bool)

(declare-fun e!54870 () Bool)

(declare-fun lt!39640 () ListLongMap!1447)

(assert (=> b!84115 (= e!54870 (= (apply!81 lt!39640 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) (get!1193 (select (arr!1901 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!84115 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2145 (_values!2299 newMap!16))))))

(assert (=> b!84115 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84116 () Bool)

(declare-fun e!54877 () ListLongMap!1447)

(declare-fun call!7929 () ListLongMap!1447)

(assert (=> b!84116 (= e!54877 call!7929)))

(declare-fun call!7928 () ListLongMap!1447)

(declare-fun call!7924 () ListLongMap!1447)

(declare-fun c!13513 () Bool)

(declare-fun c!13516 () Bool)

(declare-fun call!7923 () ListLongMap!1447)

(declare-fun call!7925 () ListLongMap!1447)

(declare-fun bm!7920 () Bool)

(assert (=> bm!7920 (= call!7928 (+!107 (ite c!13513 call!7923 (ite c!13516 call!7925 call!7924)) (ite (or c!13513 c!13516) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun b!84117 () Bool)

(declare-fun e!54872 () Bool)

(assert (=> b!84117 (= e!54872 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84118 () Bool)

(declare-fun res!43459 () Bool)

(assert (=> b!84118 (=> (not res!43459) (not e!54875))))

(declare-fun e!54871 () Bool)

(assert (=> b!84118 (= res!43459 e!54871)))

(declare-fun res!43460 () Bool)

(assert (=> b!84118 (=> res!43460 e!54871)))

(assert (=> b!84118 (= res!43460 (not e!54872))))

(declare-fun res!43452 () Bool)

(assert (=> b!84118 (=> (not res!43452) (not e!54872))))

(assert (=> b!84118 (= res!43452 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84119 () Bool)

(declare-fun call!7926 () Bool)

(assert (=> b!84119 (= e!54879 (not call!7926))))

(declare-fun b!84120 () Bool)

(declare-fun e!54880 () Bool)

(assert (=> b!84120 (= e!54881 e!54880)))

(declare-fun res!43453 () Bool)

(assert (=> b!84120 (= res!43453 call!7927)))

(assert (=> b!84120 (=> (not res!43453) (not e!54880))))

(declare-fun bm!7921 () Bool)

(assert (=> bm!7921 (= call!7926 (contains!749 lt!39640 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84121 () Bool)

(declare-fun res!43455 () Bool)

(assert (=> b!84121 (=> (not res!43455) (not e!54875))))

(assert (=> b!84121 (= res!43455 e!54881)))

(declare-fun c!13515 () Bool)

(assert (=> b!84121 (= c!13515 (not (= (bvand lt!38999 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!21419 () Bool)

(assert (=> d!21419 e!54875))

(declare-fun res!43458 () Bool)

(assert (=> d!21419 (=> (not res!43458) (not e!54875))))

(assert (=> d!21419 (= res!43458 (or (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))))

(declare-fun lt!39653 () ListLongMap!1447)

(assert (=> d!21419 (= lt!39640 lt!39653)))

(declare-fun lt!39650 () Unit!2426)

(declare-fun e!54876 () Unit!2426)

(assert (=> d!21419 (= lt!39650 e!54876)))

(declare-fun c!13514 () Bool)

(declare-fun e!54873 () Bool)

(assert (=> d!21419 (= c!13514 e!54873)))

(declare-fun res!43456 () Bool)

(assert (=> d!21419 (=> (not res!43456) (not e!54873))))

(assert (=> d!21419 (= res!43456 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun e!54882 () ListLongMap!1447)

(assert (=> d!21419 (= lt!39653 e!54882)))

(assert (=> d!21419 (= c!13513 (and (not (= (bvand lt!38999 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!38999 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21419 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21419 (= (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!38999 lt!38725 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39640)))

(declare-fun b!84122 () Bool)

(assert (=> b!84122 (= e!54880 (= (apply!81 lt!39640 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38725))))

(declare-fun b!84123 () Bool)

(declare-fun e!54878 () Bool)

(assert (=> b!84123 (= e!54879 e!54878)))

(declare-fun res!43454 () Bool)

(assert (=> b!84123 (= res!43454 call!7926)))

(assert (=> b!84123 (=> (not res!43454) (not e!54878))))

(declare-fun b!84124 () Bool)

(assert (=> b!84124 (= e!54873 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84125 () Bool)

(assert (=> b!84125 (= e!54882 e!54877)))

(assert (=> b!84125 (= c!13516 (and (not (= (bvand lt!38999 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!38999 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7922 () Bool)

(assert (=> bm!7922 (= call!7925 call!7923)))

(declare-fun b!84126 () Bool)

(declare-fun lt!39652 () Unit!2426)

(assert (=> b!84126 (= e!54876 lt!39652)))

(declare-fun lt!39658 () ListLongMap!1447)

(assert (=> b!84126 (= lt!39658 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!38999 lt!38725 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39655 () (_ BitVec 64))

(assert (=> b!84126 (= lt!39655 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39656 () (_ BitVec 64))

(assert (=> b!84126 (= lt!39656 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39638 () Unit!2426)

(assert (=> b!84126 (= lt!39638 (addStillContains!57 lt!39658 lt!39655 lt!38725 lt!39656))))

(assert (=> b!84126 (contains!749 (+!107 lt!39658 (tuple2!2201 lt!39655 lt!38725)) lt!39656)))

(declare-fun lt!39657 () Unit!2426)

(assert (=> b!84126 (= lt!39657 lt!39638)))

(declare-fun lt!39647 () ListLongMap!1447)

(assert (=> b!84126 (= lt!39647 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!38999 lt!38725 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39644 () (_ BitVec 64))

(assert (=> b!84126 (= lt!39644 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39651 () (_ BitVec 64))

(assert (=> b!84126 (= lt!39651 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39642 () Unit!2426)

(assert (=> b!84126 (= lt!39642 (addApplyDifferent!57 lt!39647 lt!39644 (minValue!2210 newMap!16) lt!39651))))

(assert (=> b!84126 (= (apply!81 (+!107 lt!39647 (tuple2!2201 lt!39644 (minValue!2210 newMap!16))) lt!39651) (apply!81 lt!39647 lt!39651))))

(declare-fun lt!39637 () Unit!2426)

(assert (=> b!84126 (= lt!39637 lt!39642)))

(declare-fun lt!39641 () ListLongMap!1447)

(assert (=> b!84126 (= lt!39641 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!38999 lt!38725 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39643 () (_ BitVec 64))

(assert (=> b!84126 (= lt!39643 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39646 () (_ BitVec 64))

(assert (=> b!84126 (= lt!39646 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39648 () Unit!2426)

(assert (=> b!84126 (= lt!39648 (addApplyDifferent!57 lt!39641 lt!39643 lt!38725 lt!39646))))

(assert (=> b!84126 (= (apply!81 (+!107 lt!39641 (tuple2!2201 lt!39643 lt!38725)) lt!39646) (apply!81 lt!39641 lt!39646))))

(declare-fun lt!39649 () Unit!2426)

(assert (=> b!84126 (= lt!39649 lt!39648)))

(declare-fun lt!39645 () ListLongMap!1447)

(assert (=> b!84126 (= lt!39645 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!38999 lt!38725 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39654 () (_ BitVec 64))

(assert (=> b!84126 (= lt!39654 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39639 () (_ BitVec 64))

(assert (=> b!84126 (= lt!39639 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!84126 (= lt!39652 (addApplyDifferent!57 lt!39645 lt!39654 (minValue!2210 newMap!16) lt!39639))))

(assert (=> b!84126 (= (apply!81 (+!107 lt!39645 (tuple2!2201 lt!39654 (minValue!2210 newMap!16))) lt!39639) (apply!81 lt!39645 lt!39639))))

(declare-fun bm!7923 () Bool)

(assert (=> bm!7923 (= call!7924 call!7925)))

(declare-fun b!84127 () Bool)

(declare-fun Unit!2474 () Unit!2426)

(assert (=> b!84127 (= e!54876 Unit!2474)))

(declare-fun b!84128 () Bool)

(assert (=> b!84128 (= e!54871 e!54870)))

(declare-fun res!43457 () Bool)

(assert (=> b!84128 (=> (not res!43457) (not e!54870))))

(assert (=> b!84128 (= res!43457 (contains!749 lt!39640 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84128 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84129 () Bool)

(declare-fun e!54874 () ListLongMap!1447)

(assert (=> b!84129 (= e!54874 call!7929)))

(declare-fun b!84130 () Bool)

(assert (=> b!84130 (= e!54878 (= (apply!81 lt!39640 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 newMap!16)))))

(declare-fun bm!7924 () Bool)

(assert (=> bm!7924 (= call!7929 call!7928)))

(declare-fun bm!7925 () Bool)

(assert (=> bm!7925 (= call!7927 (contains!749 lt!39640 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84131 () Bool)

(assert (=> b!84131 (= e!54874 call!7924)))

(declare-fun b!84132 () Bool)

(declare-fun c!13517 () Bool)

(assert (=> b!84132 (= c!13517 (and (not (= (bvand lt!38999 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!38999 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!84132 (= e!54877 e!54874)))

(declare-fun b!84133 () Bool)

(assert (=> b!84133 (= e!54882 (+!107 call!7928 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(declare-fun bm!7926 () Bool)

(assert (=> bm!7926 (= call!7923 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!38999 lt!38725 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (= (and d!21419 c!13513) b!84133))

(assert (= (and d!21419 (not c!13513)) b!84125))

(assert (= (and b!84125 c!13516) b!84116))

(assert (= (and b!84125 (not c!13516)) b!84132))

(assert (= (and b!84132 c!13517) b!84129))

(assert (= (and b!84132 (not c!13517)) b!84131))

(assert (= (or b!84129 b!84131) bm!7923))

(assert (= (or b!84116 bm!7923) bm!7922))

(assert (= (or b!84116 b!84129) bm!7924))

(assert (= (or b!84133 bm!7922) bm!7926))

(assert (= (or b!84133 bm!7924) bm!7920))

(assert (= (and d!21419 res!43456) b!84124))

(assert (= (and d!21419 c!13514) b!84126))

(assert (= (and d!21419 (not c!13514)) b!84127))

(assert (= (and d!21419 res!43458) b!84118))

(assert (= (and b!84118 res!43452) b!84117))

(assert (= (and b!84118 (not res!43460)) b!84128))

(assert (= (and b!84128 res!43457) b!84115))

(assert (= (and b!84118 res!43459) b!84121))

(assert (= (and b!84121 c!13515) b!84120))

(assert (= (and b!84121 (not c!13515)) b!84113))

(assert (= (and b!84120 res!43453) b!84122))

(assert (= (or b!84120 b!84113) bm!7925))

(assert (= (and b!84121 res!43455) b!84114))

(assert (= (and b!84114 c!13518) b!84123))

(assert (= (and b!84114 (not c!13518)) b!84119))

(assert (= (and b!84123 res!43454) b!84130))

(assert (= (or b!84123 b!84119) bm!7921))

(declare-fun b_lambda!3739 () Bool)

(assert (=> (not b_lambda!3739) (not b!84115)))

(assert (=> b!84115 t!5225))

(declare-fun b_and!5117 () Bool)

(assert (= b_and!5113 (and (=> t!5225 result!2895) b_and!5117)))

(assert (=> b!84115 t!5227))

(declare-fun b_and!5119 () Bool)

(assert (= b_and!5115 (and (=> t!5227 result!2897) b_and!5119)))

(declare-fun m!87675 () Bool)

(assert (=> b!84130 m!87675))

(declare-fun m!87677 () Bool)

(assert (=> bm!7921 m!87677))

(assert (=> b!84128 m!86045))

(assert (=> b!84128 m!86045))

(declare-fun m!87679 () Bool)

(assert (=> b!84128 m!87679))

(declare-fun m!87681 () Bool)

(assert (=> bm!7926 m!87681))

(declare-fun m!87683 () Bool)

(assert (=> bm!7920 m!87683))

(declare-fun m!87685 () Bool)

(assert (=> bm!7925 m!87685))

(assert (=> b!84126 m!86045))

(assert (=> b!84126 m!87681))

(declare-fun m!87687 () Bool)

(assert (=> b!84126 m!87687))

(declare-fun m!87689 () Bool)

(assert (=> b!84126 m!87689))

(declare-fun m!87691 () Bool)

(assert (=> b!84126 m!87691))

(declare-fun m!87693 () Bool)

(assert (=> b!84126 m!87693))

(declare-fun m!87695 () Bool)

(assert (=> b!84126 m!87695))

(declare-fun m!87697 () Bool)

(assert (=> b!84126 m!87697))

(declare-fun m!87699 () Bool)

(assert (=> b!84126 m!87699))

(declare-fun m!87701 () Bool)

(assert (=> b!84126 m!87701))

(declare-fun m!87703 () Bool)

(assert (=> b!84126 m!87703))

(assert (=> b!84126 m!87693))

(assert (=> b!84126 m!87697))

(declare-fun m!87705 () Bool)

(assert (=> b!84126 m!87705))

(declare-fun m!87707 () Bool)

(assert (=> b!84126 m!87707))

(assert (=> b!84126 m!87707))

(declare-fun m!87709 () Bool)

(assert (=> b!84126 m!87709))

(declare-fun m!87711 () Bool)

(assert (=> b!84126 m!87711))

(assert (=> b!84126 m!87691))

(declare-fun m!87713 () Bool)

(assert (=> b!84126 m!87713))

(declare-fun m!87715 () Bool)

(assert (=> b!84126 m!87715))

(assert (=> b!84115 m!86045))

(assert (=> b!84115 m!86141))

(assert (=> b!84115 m!86045))

(declare-fun m!87717 () Bool)

(assert (=> b!84115 m!87717))

(assert (=> b!84115 m!86393))

(assert (=> b!84115 m!86393))

(assert (=> b!84115 m!86141))

(assert (=> b!84115 m!86395))

(assert (=> b!84117 m!86045))

(assert (=> b!84117 m!86045))

(assert (=> b!84117 m!86051))

(declare-fun m!87719 () Bool)

(assert (=> b!84133 m!87719))

(declare-fun m!87721 () Bool)

(assert (=> b!84122 m!87721))

(assert (=> b!84124 m!86045))

(assert (=> b!84124 m!86045))

(assert (=> b!84124 m!86051))

(assert (=> d!21419 m!86067))

(assert (=> d!20917 d!21419))

(declare-fun d!21421 () Bool)

(declare-fun e!54883 () Bool)

(assert (=> d!21421 e!54883))

(declare-fun res!43461 () Bool)

(assert (=> d!21421 (=> (not res!43461) (not e!54883))))

(declare-fun lt!39660 () ListLongMap!1447)

(assert (=> d!21421 (= res!43461 (contains!749 lt!39660 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725))))))

(declare-fun lt!39659 () List!1523)

(assert (=> d!21421 (= lt!39660 (ListLongMap!1448 lt!39659))))

(declare-fun lt!39662 () Unit!2426)

(declare-fun lt!39661 () Unit!2426)

(assert (=> d!21421 (= lt!39662 lt!39661)))

(assert (=> d!21421 (= (getValueByKey!137 lt!39659 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725))) (Some!142 (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725))))))

(assert (=> d!21421 (= lt!39661 (lemmaContainsTupThenGetReturnValue!57 lt!39659 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725))))))

(assert (=> d!21421 (= lt!39659 (insertStrictlySorted!60 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725))))))

(assert (=> d!21421 (= (+!107 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725)) lt!39660)))

(declare-fun b!84134 () Bool)

(declare-fun res!43462 () Bool)

(assert (=> b!84134 (=> (not res!43462) (not e!54883))))

(assert (=> b!84134 (= res!43462 (= (getValueByKey!137 (toList!739 lt!39660) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725))) (Some!142 (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725)))))))

(declare-fun b!84135 () Bool)

(assert (=> b!84135 (= e!54883 (contains!751 (toList!739 lt!39660) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725)))))

(assert (= (and d!21421 res!43461) b!84134))

(assert (= (and b!84134 res!43462) b!84135))

(declare-fun m!87723 () Bool)

(assert (=> d!21421 m!87723))

(declare-fun m!87725 () Bool)

(assert (=> d!21421 m!87725))

(declare-fun m!87727 () Bool)

(assert (=> d!21421 m!87727))

(declare-fun m!87729 () Bool)

(assert (=> d!21421 m!87729))

(declare-fun m!87731 () Bool)

(assert (=> b!84134 m!87731))

(declare-fun m!87733 () Bool)

(assert (=> b!84135 m!87733))

(assert (=> d!20917 d!21421))

(assert (=> d!20917 d!21305))

(declare-fun d!21423 () Bool)

(assert (=> d!21423 (= (+!107 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) lt!38999 lt!38725 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (=> d!21423 true))

(declare-fun _$7!71 () Unit!2426)

(assert (=> d!21423 (= (choose!493 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) lt!38999 (zeroValue!2210 newMap!16) lt!38725 (minValue!2210 newMap!16) (defaultEntry!2316 newMap!16)) _$7!71)))

(declare-fun bs!3551 () Bool)

(assert (= bs!3551 d!21423))

(assert (=> bs!3551 m!85779))

(assert (=> bs!3551 m!85779))

(assert (=> bs!3551 m!86155))

(assert (=> bs!3551 m!86153))

(assert (=> d!20917 d!21423))

(declare-fun d!21425 () Bool)

(declare-fun lt!39663 () Bool)

(assert (=> d!21425 (= lt!39663 (select (content!87 (toList!739 lt!39265)) (tuple2!2201 lt!39051 lt!39052)))))

(declare-fun e!54884 () Bool)

(assert (=> d!21425 (= lt!39663 e!54884)))

(declare-fun res!43463 () Bool)

(assert (=> d!21425 (=> (not res!43463) (not e!54884))))

(assert (=> d!21425 (= res!43463 ((_ is Cons!1519) (toList!739 lt!39265)))))

(assert (=> d!21425 (= (contains!751 (toList!739 lt!39265) (tuple2!2201 lt!39051 lt!39052)) lt!39663)))

(declare-fun b!84136 () Bool)

(declare-fun e!54885 () Bool)

(assert (=> b!84136 (= e!54884 e!54885)))

(declare-fun res!43464 () Bool)

(assert (=> b!84136 (=> res!43464 e!54885)))

(assert (=> b!84136 (= res!43464 (= (h!2109 (toList!739 lt!39265)) (tuple2!2201 lt!39051 lt!39052)))))

(declare-fun b!84137 () Bool)

(assert (=> b!84137 (= e!54885 (contains!751 (t!5214 (toList!739 lt!39265)) (tuple2!2201 lt!39051 lt!39052)))))

(assert (= (and d!21425 res!43463) b!84136))

(assert (= (and b!84136 (not res!43464)) b!84137))

(declare-fun m!87735 () Bool)

(assert (=> d!21425 m!87735))

(declare-fun m!87737 () Bool)

(assert (=> d!21425 m!87737))

(declare-fun m!87739 () Bool)

(assert (=> b!84137 m!87739))

(assert (=> b!83446 d!21425))

(assert (=> b!83473 d!21199))

(assert (=> b!83473 d!20979))

(declare-fun b!84140 () Bool)

(declare-fun e!54887 () Option!143)

(assert (=> b!84140 (= e!54887 (getValueByKey!137 (t!5214 (t!5214 lt!39056)) (_1!1111 lt!38729)))))

(declare-fun d!21427 () Bool)

(declare-fun c!13519 () Bool)

(assert (=> d!21427 (= c!13519 (and ((_ is Cons!1519) (t!5214 lt!39056)) (= (_1!1111 (h!2109 (t!5214 lt!39056))) (_1!1111 lt!38729))))))

(declare-fun e!54886 () Option!143)

(assert (=> d!21427 (= (getValueByKey!137 (t!5214 lt!39056) (_1!1111 lt!38729)) e!54886)))

(declare-fun b!84138 () Bool)

(assert (=> b!84138 (= e!54886 (Some!142 (_2!1111 (h!2109 (t!5214 lt!39056)))))))

(declare-fun b!84141 () Bool)

(assert (=> b!84141 (= e!54887 None!141)))

(declare-fun b!84139 () Bool)

(assert (=> b!84139 (= e!54886 e!54887)))

(declare-fun c!13520 () Bool)

(assert (=> b!84139 (= c!13520 (and ((_ is Cons!1519) (t!5214 lt!39056)) (not (= (_1!1111 (h!2109 (t!5214 lt!39056))) (_1!1111 lt!38729)))))))

(assert (= (and d!21427 c!13519) b!84138))

(assert (= (and d!21427 (not c!13519)) b!84139))

(assert (= (and b!84139 c!13520) b!84140))

(assert (= (and b!84139 (not c!13520)) b!84141))

(declare-fun m!87741 () Bool)

(assert (=> b!84140 m!87741))

(assert (=> b!83631 d!21427))

(assert (=> d!20915 d!21305))

(declare-fun d!21429 () Bool)

(declare-fun lt!39664 () Bool)

(assert (=> d!21429 (= lt!39664 (select (content!87 (toList!739 lt!39246)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun e!54888 () Bool)

(assert (=> d!21429 (= lt!39664 e!54888)))

(declare-fun res!43465 () Bool)

(assert (=> d!21429 (=> (not res!43465) (not e!54888))))

(assert (=> d!21429 (= res!43465 ((_ is Cons!1519) (toList!739 lt!39246)))))

(assert (=> d!21429 (= (contains!751 (toList!739 lt!39246) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39664)))

(declare-fun b!84142 () Bool)

(declare-fun e!54889 () Bool)

(assert (=> b!84142 (= e!54888 e!54889)))

(declare-fun res!43466 () Bool)

(assert (=> b!84142 (=> res!43466 e!54889)))

(assert (=> b!84142 (= res!43466 (= (h!2109 (toList!739 lt!39246)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!84143 () Bool)

(assert (=> b!84143 (= e!54889 (contains!751 (t!5214 (toList!739 lt!39246)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!21429 res!43465) b!84142))

(assert (= (and b!84142 (not res!43466)) b!84143))

(declare-fun m!87743 () Bool)

(assert (=> d!21429 m!87743))

(declare-fun m!87745 () Bool)

(assert (=> d!21429 m!87745))

(declare-fun m!87747 () Bool)

(assert (=> b!84143 m!87747))

(assert (=> b!83420 d!21429))

(declare-fun d!21431 () Bool)

(assert (=> d!21431 (isDefined!91 (getValueByKey!137 (toList!739 lt!39053) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!39665 () Unit!2426)

(assert (=> d!21431 (= lt!39665 (choose!500 (toList!739 lt!39053) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!54890 () Bool)

(assert (=> d!21431 e!54890))

(declare-fun res!43467 () Bool)

(assert (=> d!21431 (=> (not res!43467) (not e!54890))))

(assert (=> d!21431 (= res!43467 (isStrictlySorted!292 (toList!739 lt!39053)))))

(assert (=> d!21431 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39053) #b1000000000000000000000000000000000000000000000000000000000000000) lt!39665)))

(declare-fun b!84144 () Bool)

(assert (=> b!84144 (= e!54890 (containsKey!141 (toList!739 lt!39053) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21431 res!43467) b!84144))

(assert (=> d!21431 m!86331))

(assert (=> d!21431 m!86331))

(assert (=> d!21431 m!86333))

(declare-fun m!87749 () Bool)

(assert (=> d!21431 m!87749))

(declare-fun m!87751 () Bool)

(assert (=> d!21431 m!87751))

(assert (=> b!84144 m!86327))

(assert (=> b!83338 d!21431))

(declare-fun d!21433 () Bool)

(assert (=> d!21433 (= (isDefined!91 (getValueByKey!137 (toList!739 lt!39053) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!338 (getValueByKey!137 (toList!739 lt!39053) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3552 () Bool)

(assert (= bs!3552 d!21433))

(assert (=> bs!3552 m!86331))

(declare-fun m!87753 () Bool)

(assert (=> bs!3552 m!87753))

(assert (=> b!83338 d!21433))

(declare-fun b!84147 () Bool)

(declare-fun e!54892 () Option!143)

(assert (=> b!84147 (= e!54892 (getValueByKey!137 (t!5214 (toList!739 lt!39053)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!21435 () Bool)

(declare-fun c!13521 () Bool)

(assert (=> d!21435 (= c!13521 (and ((_ is Cons!1519) (toList!739 lt!39053)) (= (_1!1111 (h!2109 (toList!739 lt!39053))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!54891 () Option!143)

(assert (=> d!21435 (= (getValueByKey!137 (toList!739 lt!39053) #b1000000000000000000000000000000000000000000000000000000000000000) e!54891)))

(declare-fun b!84145 () Bool)

(assert (=> b!84145 (= e!54891 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39053)))))))

(declare-fun b!84148 () Bool)

(assert (=> b!84148 (= e!54892 None!141)))

(declare-fun b!84146 () Bool)

(assert (=> b!84146 (= e!54891 e!54892)))

(declare-fun c!13522 () Bool)

(assert (=> b!84146 (= c!13522 (and ((_ is Cons!1519) (toList!739 lt!39053)) (not (= (_1!1111 (h!2109 (toList!739 lt!39053))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!21435 c!13521) b!84145))

(assert (= (and d!21435 (not c!13521)) b!84146))

(assert (= (and b!84146 c!13522) b!84147))

(assert (= (and b!84146 (not c!13522)) b!84148))

(declare-fun m!87755 () Bool)

(assert (=> b!84147 m!87755))

(assert (=> b!83338 d!21435))

(declare-fun d!21437 () Bool)

(assert (not d!21437))

(assert (=> b!83440 d!21437))

(declare-fun d!21439 () Bool)

(assert (=> d!21439 (isDefined!91 (getValueByKey!137 (toList!739 lt!39053) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!39666 () Unit!2426)

(assert (=> d!21439 (= lt!39666 (choose!500 (toList!739 lt!39053) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!54893 () Bool)

(assert (=> d!21439 e!54893))

(declare-fun res!43468 () Bool)

(assert (=> d!21439 (=> (not res!43468) (not e!54893))))

(assert (=> d!21439 (= res!43468 (isStrictlySorted!292 (toList!739 lt!39053)))))

(assert (=> d!21439 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39053) #b0000000000000000000000000000000000000000000000000000000000000000) lt!39666)))

(declare-fun b!84149 () Bool)

(assert (=> b!84149 (= e!54893 (containsKey!141 (toList!739 lt!39053) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21439 res!43468) b!84149))

(assert (=> d!21439 m!86905))

(assert (=> d!21439 m!86905))

(assert (=> d!21439 m!86907))

(declare-fun m!87757 () Bool)

(assert (=> d!21439 m!87757))

(assert (=> d!21439 m!87751))

(assert (=> b!84149 m!86901))

(assert (=> b!83650 d!21439))

(declare-fun d!21441 () Bool)

(assert (=> d!21441 (= (isDefined!91 (getValueByKey!137 (toList!739 lt!39053) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!338 (getValueByKey!137 (toList!739 lt!39053) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3553 () Bool)

(assert (= bs!3553 d!21441))

(assert (=> bs!3553 m!86905))

(declare-fun m!87759 () Bool)

(assert (=> bs!3553 m!87759))

(assert (=> b!83650 d!21441))

(declare-fun b!84152 () Bool)

(declare-fun e!54895 () Option!143)

(assert (=> b!84152 (= e!54895 (getValueByKey!137 (t!5214 (toList!739 lt!39053)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!21443 () Bool)

(declare-fun c!13523 () Bool)

(assert (=> d!21443 (= c!13523 (and ((_ is Cons!1519) (toList!739 lt!39053)) (= (_1!1111 (h!2109 (toList!739 lt!39053))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!54894 () Option!143)

(assert (=> d!21443 (= (getValueByKey!137 (toList!739 lt!39053) #b0000000000000000000000000000000000000000000000000000000000000000) e!54894)))

(declare-fun b!84150 () Bool)

(assert (=> b!84150 (= e!54894 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39053)))))))

(declare-fun b!84153 () Bool)

(assert (=> b!84153 (= e!54895 None!141)))

(declare-fun b!84151 () Bool)

(assert (=> b!84151 (= e!54894 e!54895)))

(declare-fun c!13524 () Bool)

(assert (=> b!84151 (= c!13524 (and ((_ is Cons!1519) (toList!739 lt!39053)) (not (= (_1!1111 (h!2109 (toList!739 lt!39053))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!21443 c!13523) b!84150))

(assert (= (and d!21443 (not c!13523)) b!84151))

(assert (= (and b!84151 c!13524) b!84152))

(assert (= (and b!84151 (not c!13524)) b!84153))

(declare-fun m!87761 () Bool)

(assert (=> b!84152 m!87761))

(assert (=> b!83650 d!21443))

(declare-fun d!21445 () Bool)

(assert (=> d!21445 (= (inRange!0 (index!3117 lt!39176) (mask!6333 newMap!16)) (and (bvsge (index!3117 lt!39176) #b00000000000000000000000000000000) (bvslt (index!3117 lt!39176) (bvadd (mask!6333 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!83288 d!21445))

(declare-fun d!21447 () Bool)

(declare-fun e!54897 () Bool)

(assert (=> d!21447 e!54897))

(declare-fun res!43469 () Bool)

(assert (=> d!21447 (=> res!43469 e!54897)))

(declare-fun lt!39668 () Bool)

(assert (=> d!21447 (= res!43469 (not lt!39668))))

(declare-fun lt!39670 () Bool)

(assert (=> d!21447 (= lt!39668 lt!39670)))

(declare-fun lt!39669 () Unit!2426)

(declare-fun e!54896 () Unit!2426)

(assert (=> d!21447 (= lt!39669 e!54896)))

(declare-fun c!13525 () Bool)

(assert (=> d!21447 (= c!13525 lt!39670)))

(assert (=> d!21447 (= lt!39670 (containsKey!141 (toList!739 lt!39114) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21447 (= (contains!749 lt!39114 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39668)))

(declare-fun b!84154 () Bool)

(declare-fun lt!39667 () Unit!2426)

(assert (=> b!84154 (= e!54896 lt!39667)))

(assert (=> b!84154 (= lt!39667 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39114) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84154 (isDefined!91 (getValueByKey!137 (toList!739 lt!39114) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84155 () Bool)

(declare-fun Unit!2475 () Unit!2426)

(assert (=> b!84155 (= e!54896 Unit!2475)))

(declare-fun b!84156 () Bool)

(assert (=> b!84156 (= e!54897 (isDefined!91 (getValueByKey!137 (toList!739 lt!39114) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21447 c!13525) b!84154))

(assert (= (and d!21447 (not c!13525)) b!84155))

(assert (= (and d!21447 (not res!43469)) b!84156))

(declare-fun m!87763 () Bool)

(assert (=> d!21447 m!87763))

(declare-fun m!87765 () Bool)

(assert (=> b!84154 m!87765))

(declare-fun m!87767 () Bool)

(assert (=> b!84154 m!87767))

(assert (=> b!84154 m!87767))

(declare-fun m!87769 () Bool)

(assert (=> b!84154 m!87769))

(assert (=> b!84156 m!87767))

(assert (=> b!84156 m!87767))

(assert (=> b!84156 m!87769))

(assert (=> bm!7815 d!21447))

(declare-fun bm!7927 () Bool)

(declare-fun call!7930 () Bool)

(declare-fun c!13526 () Bool)

(assert (=> bm!7927 (= call!7930 (arrayNoDuplicates!0 (_keys!3983 (_2!1112 lt!39016)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13526 (Cons!1518 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000) Nil!1519) Nil!1519)))))

(declare-fun d!21449 () Bool)

(declare-fun res!43472 () Bool)

(declare-fun e!54899 () Bool)

(assert (=> d!21449 (=> res!43472 e!54899)))

(assert (=> d!21449 (= res!43472 (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 (_2!1112 lt!39016)))))))

(assert (=> d!21449 (= (arrayNoDuplicates!0 (_keys!3983 (_2!1112 lt!39016)) #b00000000000000000000000000000000 Nil!1519) e!54899)))

(declare-fun b!84157 () Bool)

(declare-fun e!54900 () Bool)

(assert (=> b!84157 (= e!54900 call!7930)))

(declare-fun b!84158 () Bool)

(assert (=> b!84158 (= e!54900 call!7930)))

(declare-fun b!84159 () Bool)

(declare-fun e!54901 () Bool)

(assert (=> b!84159 (= e!54901 (contains!750 Nil!1519 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000)))))

(declare-fun b!84160 () Bool)

(declare-fun e!54898 () Bool)

(assert (=> b!84160 (= e!54898 e!54900)))

(assert (=> b!84160 (= c!13526 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000)))))

(declare-fun b!84161 () Bool)

(assert (=> b!84161 (= e!54899 e!54898)))

(declare-fun res!43471 () Bool)

(assert (=> b!84161 (=> (not res!43471) (not e!54898))))

(assert (=> b!84161 (= res!43471 (not e!54901))))

(declare-fun res!43470 () Bool)

(assert (=> b!84161 (=> (not res!43470) (not e!54901))))

(assert (=> b!84161 (= res!43470 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000)))))

(assert (= (and d!21449 (not res!43472)) b!84161))

(assert (= (and b!84161 res!43470) b!84159))

(assert (= (and b!84161 res!43471) b!84160))

(assert (= (and b!84160 c!13526) b!84157))

(assert (= (and b!84160 (not c!13526)) b!84158))

(assert (= (or b!84157 b!84158) bm!7927))

(assert (=> bm!7927 m!87161))

(declare-fun m!87771 () Bool)

(assert (=> bm!7927 m!87771))

(assert (=> b!84159 m!87161))

(assert (=> b!84159 m!87161))

(declare-fun m!87773 () Bool)

(assert (=> b!84159 m!87773))

(assert (=> b!84160 m!87161))

(assert (=> b!84160 m!87161))

(assert (=> b!84160 m!87163))

(assert (=> b!84161 m!87161))

(assert (=> b!84161 m!87161))

(assert (=> b!84161 m!87163))

(assert (=> b!83434 d!21449))

(declare-fun d!21451 () Bool)

(assert (=> d!21451 (isDefined!91 (getValueByKey!137 (toList!739 lt!39057) (_1!1111 lt!38729)))))

(declare-fun lt!39671 () Unit!2426)

(assert (=> d!21451 (= lt!39671 (choose!500 (toList!739 lt!39057) (_1!1111 lt!38729)))))

(declare-fun e!54902 () Bool)

(assert (=> d!21451 e!54902))

(declare-fun res!43473 () Bool)

(assert (=> d!21451 (=> (not res!43473) (not e!54902))))

(assert (=> d!21451 (= res!43473 (isStrictlySorted!292 (toList!739 lt!39057)))))

(assert (=> d!21451 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39057) (_1!1111 lt!38729)) lt!39671)))

(declare-fun b!84162 () Bool)

(assert (=> b!84162 (= e!54902 (containsKey!141 (toList!739 lt!39057) (_1!1111 lt!38729)))))

(assert (= (and d!21451 res!43473) b!84162))

(assert (=> d!21451 m!85949))

(assert (=> d!21451 m!85949))

(assert (=> d!21451 m!86865))

(declare-fun m!87775 () Bool)

(assert (=> d!21451 m!87775))

(declare-fun m!87777 () Bool)

(assert (=> d!21451 m!87777))

(assert (=> b!84162 m!86861))

(assert (=> b!83626 d!21451))

(declare-fun d!21453 () Bool)

(assert (=> d!21453 (= (isDefined!91 (getValueByKey!137 (toList!739 lt!39057) (_1!1111 lt!38729))) (not (isEmpty!338 (getValueByKey!137 (toList!739 lt!39057) (_1!1111 lt!38729)))))))

(declare-fun bs!3554 () Bool)

(assert (= bs!3554 d!21453))

(assert (=> bs!3554 m!85949))

(declare-fun m!87779 () Bool)

(assert (=> bs!3554 m!87779))

(assert (=> b!83626 d!21453))

(assert (=> b!83626 d!20995))

(declare-fun d!21455 () Bool)

(declare-fun res!43474 () Bool)

(declare-fun e!54903 () Bool)

(assert (=> d!21455 (=> res!43474 e!54903)))

(assert (=> d!21455 (= res!43474 (and ((_ is Cons!1519) lt!39304) (= (_1!1111 (h!2109 lt!39304)) (_1!1111 lt!38738))))))

(assert (=> d!21455 (= (containsKey!141 lt!39304 (_1!1111 lt!38738)) e!54903)))

(declare-fun b!84163 () Bool)

(declare-fun e!54904 () Bool)

(assert (=> b!84163 (= e!54903 e!54904)))

(declare-fun res!43475 () Bool)

(assert (=> b!84163 (=> (not res!43475) (not e!54904))))

(assert (=> b!84163 (= res!43475 (and (or (not ((_ is Cons!1519) lt!39304)) (bvsle (_1!1111 (h!2109 lt!39304)) (_1!1111 lt!38738))) ((_ is Cons!1519) lt!39304) (bvslt (_1!1111 (h!2109 lt!39304)) (_1!1111 lt!38738))))))

(declare-fun b!84164 () Bool)

(assert (=> b!84164 (= e!54904 (containsKey!141 (t!5214 lt!39304) (_1!1111 lt!38738)))))

(assert (= (and d!21455 (not res!43474)) b!84163))

(assert (= (and b!84163 res!43475) b!84164))

(declare-fun m!87781 () Bool)

(assert (=> b!84164 m!87781))

(assert (=> b!83486 d!21455))

(declare-fun d!21457 () Bool)

(declare-fun lt!39672 () Bool)

(assert (=> d!21457 (= lt!39672 (select (content!87 (toList!739 lt!39234)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(declare-fun e!54905 () Bool)

(assert (=> d!21457 (= lt!39672 e!54905)))

(declare-fun res!43476 () Bool)

(assert (=> d!21457 (=> (not res!43476) (not e!54905))))

(assert (=> d!21457 (= res!43476 ((_ is Cons!1519) (toList!739 lt!39234)))))

(assert (=> d!21457 (= (contains!751 (toList!739 lt!39234) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) lt!39672)))

(declare-fun b!84165 () Bool)

(declare-fun e!54906 () Bool)

(assert (=> b!84165 (= e!54905 e!54906)))

(declare-fun res!43477 () Bool)

(assert (=> b!84165 (=> res!43477 e!54906)))

(assert (=> b!84165 (= res!43477 (= (h!2109 (toList!739 lt!39234)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(declare-fun b!84166 () Bool)

(assert (=> b!84166 (= e!54906 (contains!751 (t!5214 (toList!739 lt!39234)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(assert (= (and d!21457 res!43476) b!84165))

(assert (= (and b!84165 (not res!43477)) b!84166))

(declare-fun m!87783 () Bool)

(assert (=> d!21457 m!87783))

(declare-fun m!87785 () Bool)

(assert (=> d!21457 m!87785))

(declare-fun m!87787 () Bool)

(assert (=> b!84166 m!87787))

(assert (=> b!83414 d!21457))

(declare-fun d!21459 () Bool)

(declare-fun e!54908 () Bool)

(assert (=> d!21459 e!54908))

(declare-fun res!43478 () Bool)

(assert (=> d!21459 (=> res!43478 e!54908)))

(declare-fun lt!39674 () Bool)

(assert (=> d!21459 (= res!43478 (not lt!39674))))

(declare-fun lt!39676 () Bool)

(assert (=> d!21459 (= lt!39674 lt!39676)))

(declare-fun lt!39675 () Unit!2426)

(declare-fun e!54907 () Unit!2426)

(assert (=> d!21459 (= lt!39675 e!54907)))

(declare-fun c!13527 () Bool)

(assert (=> d!21459 (= c!13527 lt!39676)))

(assert (=> d!21459 (= lt!39676 (containsKey!141 (toList!739 lt!39084) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21459 (= (contains!749 lt!39084 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39674)))

(declare-fun b!84167 () Bool)

(declare-fun lt!39673 () Unit!2426)

(assert (=> b!84167 (= e!54907 lt!39673)))

(assert (=> b!84167 (= lt!39673 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39084) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> b!84167 (isDefined!91 (getValueByKey!137 (toList!739 lt!39084) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!84168 () Bool)

(declare-fun Unit!2476 () Unit!2426)

(assert (=> b!84168 (= e!54907 Unit!2476)))

(declare-fun b!84169 () Bool)

(assert (=> b!84169 (= e!54908 (isDefined!91 (getValueByKey!137 (toList!739 lt!39084) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21459 c!13527) b!84167))

(assert (= (and d!21459 (not c!13527)) b!84168))

(assert (= (and d!21459 (not res!43478)) b!84169))

(declare-fun m!87789 () Bool)

(assert (=> d!21459 m!87789))

(declare-fun m!87791 () Bool)

(assert (=> b!84167 m!87791))

(assert (=> b!84167 m!86041))

(assert (=> b!84167 m!86041))

(declare-fun m!87793 () Bool)

(assert (=> b!84167 m!87793))

(assert (=> b!84169 m!86041))

(assert (=> b!84169 m!86041))

(assert (=> b!84169 m!87793))

(assert (=> d!20899 d!21459))

(declare-fun b!84172 () Bool)

(declare-fun e!54910 () Option!143)

(assert (=> b!84172 (= e!54910 (getValueByKey!137 (t!5214 lt!39083) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21461 () Bool)

(declare-fun c!13528 () Bool)

(assert (=> d!21461 (= c!13528 (and ((_ is Cons!1519) lt!39083) (= (_1!1111 (h!2109 lt!39083)) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!54909 () Option!143)

(assert (=> d!21461 (= (getValueByKey!137 lt!39083 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!54909)))

(declare-fun b!84170 () Bool)

(assert (=> b!84170 (= e!54909 (Some!142 (_2!1111 (h!2109 lt!39083))))))

(declare-fun b!84173 () Bool)

(assert (=> b!84173 (= e!54910 None!141)))

(declare-fun b!84171 () Bool)

(assert (=> b!84171 (= e!54909 e!54910)))

(declare-fun c!13529 () Bool)

(assert (=> b!84171 (= c!13529 (and ((_ is Cons!1519) lt!39083) (not (= (_1!1111 (h!2109 lt!39083)) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21461 c!13528) b!84170))

(assert (= (and d!21461 (not c!13528)) b!84171))

(assert (= (and b!84171 c!13529) b!84172))

(assert (= (and b!84171 (not c!13529)) b!84173))

(declare-fun m!87795 () Bool)

(assert (=> b!84172 m!87795))

(assert (=> d!20899 d!21461))

(declare-fun d!21463 () Bool)

(assert (=> d!21463 (= (getValueByKey!137 lt!39083 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39677 () Unit!2426)

(assert (=> d!21463 (= lt!39677 (choose!497 lt!39083 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun e!54911 () Bool)

(assert (=> d!21463 e!54911))

(declare-fun res!43479 () Bool)

(assert (=> d!21463 (=> (not res!43479) (not e!54911))))

(assert (=> d!21463 (= res!43479 (isStrictlySorted!292 lt!39083))))

(assert (=> d!21463 (= (lemmaContainsTupThenGetReturnValue!57 lt!39083 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39677)))

(declare-fun b!84174 () Bool)

(declare-fun res!43480 () Bool)

(assert (=> b!84174 (=> (not res!43480) (not e!54911))))

(assert (=> b!84174 (= res!43480 (containsKey!141 lt!39083 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!84175 () Bool)

(assert (=> b!84175 (= e!54911 (contains!751 lt!39083 (tuple2!2201 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21463 res!43479) b!84174))

(assert (= (and b!84174 res!43480) b!84175))

(assert (=> d!21463 m!86035))

(declare-fun m!87797 () Bool)

(assert (=> d!21463 m!87797))

(declare-fun m!87799 () Bool)

(assert (=> d!21463 m!87799))

(declare-fun m!87801 () Bool)

(assert (=> b!84174 m!87801))

(declare-fun m!87803 () Bool)

(assert (=> b!84175 m!87803))

(assert (=> d!20899 d!21463))

(declare-fun b!84176 () Bool)

(declare-fun e!54916 () List!1523)

(declare-fun call!7931 () List!1523)

(assert (=> b!84176 (= e!54916 call!7931)))

(declare-fun b!84177 () Bool)

(declare-fun e!54914 () Bool)

(declare-fun lt!39678 () List!1523)

(assert (=> b!84177 (= e!54914 (contains!751 lt!39678 (tuple2!2201 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun c!13530 () Bool)

(declare-fun b!84178 () Bool)

(declare-fun e!54913 () List!1523)

(declare-fun c!13532 () Bool)

(assert (=> b!84178 (= e!54913 (ite c!13532 (t!5214 (toList!739 call!7730)) (ite c!13530 (Cons!1519 (h!2109 (toList!739 call!7730)) (t!5214 (toList!739 call!7730))) Nil!1520)))))

(declare-fun d!21465 () Bool)

(assert (=> d!21465 e!54914))

(declare-fun res!43482 () Bool)

(assert (=> d!21465 (=> (not res!43482) (not e!54914))))

(assert (=> d!21465 (= res!43482 (isStrictlySorted!292 lt!39678))))

(declare-fun e!54915 () List!1523)

(assert (=> d!21465 (= lt!39678 e!54915)))

(declare-fun c!13531 () Bool)

(assert (=> d!21465 (= c!13531 (and ((_ is Cons!1519) (toList!739 call!7730)) (bvslt (_1!1111 (h!2109 (toList!739 call!7730))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> d!21465 (isStrictlySorted!292 (toList!739 call!7730))))

(assert (=> d!21465 (= (insertStrictlySorted!60 (toList!739 call!7730) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39678)))

(declare-fun b!84179 () Bool)

(assert (=> b!84179 (= e!54913 (insertStrictlySorted!60 (t!5214 (toList!739 call!7730)) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7928 () Bool)

(declare-fun call!7933 () List!1523)

(assert (=> bm!7928 (= call!7931 call!7933)))

(declare-fun b!84180 () Bool)

(declare-fun e!54912 () List!1523)

(declare-fun call!7932 () List!1523)

(assert (=> b!84180 (= e!54912 call!7932)))

(declare-fun b!84181 () Bool)

(assert (=> b!84181 (= e!54915 e!54916)))

(assert (=> b!84181 (= c!13532 (and ((_ is Cons!1519) (toList!739 call!7730)) (= (_1!1111 (h!2109 (toList!739 call!7730))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!84182 () Bool)

(declare-fun res!43481 () Bool)

(assert (=> b!84182 (=> (not res!43481) (not e!54914))))

(assert (=> b!84182 (= res!43481 (containsKey!141 lt!39678 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7929 () Bool)

(assert (=> bm!7929 (= call!7932 call!7931)))

(declare-fun b!84183 () Bool)

(assert (=> b!84183 (= e!54915 call!7933)))

(declare-fun b!84184 () Bool)

(assert (=> b!84184 (= e!54912 call!7932)))

(declare-fun b!84185 () Bool)

(assert (=> b!84185 (= c!13530 (and ((_ is Cons!1519) (toList!739 call!7730)) (bvsgt (_1!1111 (h!2109 (toList!739 call!7730))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> b!84185 (= e!54916 e!54912)))

(declare-fun bm!7930 () Bool)

(assert (=> bm!7930 (= call!7933 ($colon$colon!70 e!54913 (ite c!13531 (h!2109 (toList!739 call!7730)) (tuple2!2201 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(declare-fun c!13533 () Bool)

(assert (=> bm!7930 (= c!13533 c!13531)))

(assert (= (and d!21465 c!13531) b!84183))

(assert (= (and d!21465 (not c!13531)) b!84181))

(assert (= (and b!84181 c!13532) b!84176))

(assert (= (and b!84181 (not c!13532)) b!84185))

(assert (= (and b!84185 c!13530) b!84180))

(assert (= (and b!84185 (not c!13530)) b!84184))

(assert (= (or b!84180 b!84184) bm!7929))

(assert (= (or b!84176 bm!7929) bm!7928))

(assert (= (or b!84183 bm!7928) bm!7930))

(assert (= (and bm!7930 c!13533) b!84179))

(assert (= (and bm!7930 (not c!13533)) b!84178))

(assert (= (and d!21465 res!43482) b!84182))

(assert (= (and b!84182 res!43481) b!84177))

(declare-fun m!87805 () Bool)

(assert (=> bm!7930 m!87805))

(declare-fun m!87807 () Bool)

(assert (=> b!84179 m!87807))

(declare-fun m!87809 () Bool)

(assert (=> d!21465 m!87809))

(declare-fun m!87811 () Bool)

(assert (=> d!21465 m!87811))

(declare-fun m!87813 () Bool)

(assert (=> b!84182 m!87813))

(declare-fun m!87815 () Bool)

(assert (=> b!84177 m!87815))

(assert (=> d!20899 d!21465))

(declare-fun b!84188 () Bool)

(declare-fun e!54918 () Option!143)

(assert (=> b!84188 (= e!54918 (getValueByKey!137 (t!5214 (toList!739 lt!39288)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun d!21467 () Bool)

(declare-fun c!13534 () Bool)

(assert (=> d!21467 (= c!13534 (and ((_ is Cons!1519) (toList!739 lt!39288)) (= (_1!1111 (h!2109 (toList!739 lt!39288))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun e!54917 () Option!143)

(assert (=> d!21467 (= (getValueByKey!137 (toList!739 lt!39288) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) e!54917)))

(declare-fun b!84186 () Bool)

(assert (=> b!84186 (= e!54917 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39288)))))))

(declare-fun b!84189 () Bool)

(assert (=> b!84189 (= e!54918 None!141)))

(declare-fun b!84187 () Bool)

(assert (=> b!84187 (= e!54917 e!54918)))

(declare-fun c!13535 () Bool)

(assert (=> b!84187 (= c!13535 (and ((_ is Cons!1519) (toList!739 lt!39288)) (not (= (_1!1111 (h!2109 (toList!739 lt!39288))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(assert (= (and d!21467 c!13534) b!84186))

(assert (= (and d!21467 (not c!13534)) b!84187))

(assert (= (and b!84187 c!13535) b!84188))

(assert (= (and b!84187 (not c!13535)) b!84189))

(declare-fun m!87817 () Bool)

(assert (=> b!84188 m!87817))

(assert (=> b!83464 d!21467))

(declare-fun d!21469 () Bool)

(assert (=> d!21469 (= (apply!81 lt!39198 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) (get!1196 (getValueByKey!137 (toList!739 lt!39198) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3555 () Bool)

(assert (= bs!3555 d!21469))

(assert (=> bs!3555 m!86045))

(declare-fun m!87819 () Bool)

(assert (=> bs!3555 m!87819))

(assert (=> bs!3555 m!87819))

(declare-fun m!87821 () Bool)

(assert (=> bs!3555 m!87821))

(assert (=> b!83345 d!21469))

(declare-fun d!21471 () Bool)

(declare-fun c!13536 () Bool)

(assert (=> d!21471 (= c!13536 ((_ is ValueCellFull!920) (select (arr!1901 (_values!2299 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!54919 () V!3017)

(assert (=> d!21471 (= (get!1193 (select (arr!1901 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!54919)))

(declare-fun b!84190 () Bool)

(assert (=> b!84190 (= e!54919 (get!1194 (select (arr!1901 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84191 () Bool)

(assert (=> b!84191 (= e!54919 (get!1195 (select (arr!1901 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21471 c!13536) b!84190))

(assert (= (and d!21471 (not c!13536)) b!84191))

(assert (=> b!84190 m!86393))

(assert (=> b!84190 m!86141))

(declare-fun m!87823 () Bool)

(assert (=> b!84190 m!87823))

(assert (=> b!84191 m!86393))

(assert (=> b!84191 m!86141))

(declare-fun m!87825 () Bool)

(assert (=> b!84191 m!87825))

(assert (=> b!83345 d!21471))

(declare-fun d!21473 () Bool)

(declare-fun res!43483 () Bool)

(declare-fun e!54920 () Bool)

(assert (=> d!21473 (=> res!43483 e!54920)))

(assert (=> d!21473 (= res!43483 (and ((_ is Cons!1519) lt!39031) (= (_1!1111 (h!2109 lt!39031)) (_1!1111 lt!38742))))))

(assert (=> d!21473 (= (containsKey!141 lt!39031 (_1!1111 lt!38742)) e!54920)))

(declare-fun b!84192 () Bool)

(declare-fun e!54921 () Bool)

(assert (=> b!84192 (= e!54920 e!54921)))

(declare-fun res!43484 () Bool)

(assert (=> b!84192 (=> (not res!43484) (not e!54921))))

(assert (=> b!84192 (= res!43484 (and (or (not ((_ is Cons!1519) lt!39031)) (bvsle (_1!1111 (h!2109 lt!39031)) (_1!1111 lt!38742))) ((_ is Cons!1519) lt!39031) (bvslt (_1!1111 (h!2109 lt!39031)) (_1!1111 lt!38742))))))

(declare-fun b!84193 () Bool)

(assert (=> b!84193 (= e!54921 (containsKey!141 (t!5214 lt!39031) (_1!1111 lt!38742)))))

(assert (= (and d!21473 (not res!43483)) b!84192))

(assert (= (and b!84192 res!43484) b!84193))

(declare-fun m!87827 () Bool)

(assert (=> b!84193 m!87827))

(assert (=> b!83683 d!21473))

(declare-fun b!84194 () Bool)

(declare-fun e!54926 () List!1523)

(declare-fun call!7934 () List!1523)

(assert (=> b!84194 (= e!54926 call!7934)))

(declare-fun b!84195 () Bool)

(declare-fun e!54924 () Bool)

(declare-fun lt!39679 () List!1523)

(assert (=> b!84195 (= e!54924 (contains!751 lt!39679 (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun c!13539 () Bool)

(declare-fun e!54923 () List!1523)

(declare-fun c!13537 () Bool)

(declare-fun b!84196 () Bool)

(assert (=> b!84196 (= e!54923 (ite c!13539 (t!5214 (t!5214 (toList!739 lt!38728))) (ite c!13537 (Cons!1519 (h!2109 (t!5214 (toList!739 lt!38728))) (t!5214 (t!5214 (toList!739 lt!38728)))) Nil!1520)))))

(declare-fun d!21475 () Bool)

(assert (=> d!21475 e!54924))

(declare-fun res!43486 () Bool)

(assert (=> d!21475 (=> (not res!43486) (not e!54924))))

(assert (=> d!21475 (= res!43486 (isStrictlySorted!292 lt!39679))))

(declare-fun e!54925 () List!1523)

(assert (=> d!21475 (= lt!39679 e!54925)))

(declare-fun c!13538 () Bool)

(assert (=> d!21475 (= c!13538 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38728))) (bvslt (_1!1111 (h!2109 (t!5214 (toList!739 lt!38728)))) (_1!1111 lt!38729))))))

(assert (=> d!21475 (isStrictlySorted!292 (t!5214 (toList!739 lt!38728)))))

(assert (=> d!21475 (= (insertStrictlySorted!60 (t!5214 (toList!739 lt!38728)) (_1!1111 lt!38729) (_2!1111 lt!38729)) lt!39679)))

(declare-fun b!84197 () Bool)

(assert (=> b!84197 (= e!54923 (insertStrictlySorted!60 (t!5214 (t!5214 (toList!739 lt!38728))) (_1!1111 lt!38729) (_2!1111 lt!38729)))))

(declare-fun bm!7931 () Bool)

(declare-fun call!7936 () List!1523)

(assert (=> bm!7931 (= call!7934 call!7936)))

(declare-fun b!84198 () Bool)

(declare-fun e!54922 () List!1523)

(declare-fun call!7935 () List!1523)

(assert (=> b!84198 (= e!54922 call!7935)))

(declare-fun b!84199 () Bool)

(assert (=> b!84199 (= e!54925 e!54926)))

(assert (=> b!84199 (= c!13539 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38728))) (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!38728)))) (_1!1111 lt!38729))))))

(declare-fun b!84200 () Bool)

(declare-fun res!43485 () Bool)

(assert (=> b!84200 (=> (not res!43485) (not e!54924))))

(assert (=> b!84200 (= res!43485 (containsKey!141 lt!39679 (_1!1111 lt!38729)))))

(declare-fun bm!7932 () Bool)

(assert (=> bm!7932 (= call!7935 call!7934)))

(declare-fun b!84201 () Bool)

(assert (=> b!84201 (= e!54925 call!7936)))

(declare-fun b!84202 () Bool)

(assert (=> b!84202 (= e!54922 call!7935)))

(declare-fun b!84203 () Bool)

(assert (=> b!84203 (= c!13537 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38728))) (bvsgt (_1!1111 (h!2109 (t!5214 (toList!739 lt!38728)))) (_1!1111 lt!38729))))))

(assert (=> b!84203 (= e!54926 e!54922)))

(declare-fun bm!7933 () Bool)

(assert (=> bm!7933 (= call!7936 ($colon$colon!70 e!54923 (ite c!13538 (h!2109 (t!5214 (toList!739 lt!38728))) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729)))))))

(declare-fun c!13540 () Bool)

(assert (=> bm!7933 (= c!13540 c!13538)))

(assert (= (and d!21475 c!13538) b!84201))

(assert (= (and d!21475 (not c!13538)) b!84199))

(assert (= (and b!84199 c!13539) b!84194))

(assert (= (and b!84199 (not c!13539)) b!84203))

(assert (= (and b!84203 c!13537) b!84198))

(assert (= (and b!84203 (not c!13537)) b!84202))

(assert (= (or b!84198 b!84202) bm!7932))

(assert (= (or b!84194 bm!7932) bm!7931))

(assert (= (or b!84201 bm!7931) bm!7933))

(assert (= (and bm!7933 c!13540) b!84197))

(assert (= (and bm!7933 (not c!13540)) b!84196))

(assert (= (and d!21475 res!43486) b!84200))

(assert (= (and b!84200 res!43485) b!84195))

(declare-fun m!87829 () Bool)

(assert (=> bm!7933 m!87829))

(declare-fun m!87831 () Bool)

(assert (=> b!84197 m!87831))

(declare-fun m!87833 () Bool)

(assert (=> d!21475 m!87833))

(assert (=> d!21475 m!87009))

(declare-fun m!87835 () Bool)

(assert (=> b!84200 m!87835))

(declare-fun m!87837 () Bool)

(assert (=> b!84195 m!87837))

(assert (=> b!83638 d!21475))

(declare-fun d!21477 () Bool)

(declare-fun res!43487 () Bool)

(declare-fun e!54927 () Bool)

(assert (=> d!21477 (=> res!43487 e!54927)))

(assert (=> d!21477 (= res!43487 (and ((_ is Cons!1519) (toList!739 lt!39028)) (= (_1!1111 (h!2109 (toList!739 lt!39028))) (_1!1111 lt!38738))))))

(assert (=> d!21477 (= (containsKey!141 (toList!739 lt!39028) (_1!1111 lt!38738)) e!54927)))

(declare-fun b!84204 () Bool)

(declare-fun e!54928 () Bool)

(assert (=> b!84204 (= e!54927 e!54928)))

(declare-fun res!43488 () Bool)

(assert (=> b!84204 (=> (not res!43488) (not e!54928))))

(assert (=> b!84204 (= res!43488 (and (or (not ((_ is Cons!1519) (toList!739 lt!39028))) (bvsle (_1!1111 (h!2109 (toList!739 lt!39028))) (_1!1111 lt!38738))) ((_ is Cons!1519) (toList!739 lt!39028)) (bvslt (_1!1111 (h!2109 (toList!739 lt!39028))) (_1!1111 lt!38738))))))

(declare-fun b!84205 () Bool)

(assert (=> b!84205 (= e!54928 (containsKey!141 (t!5214 (toList!739 lt!39028)) (_1!1111 lt!38738)))))

(assert (= (and d!21477 (not res!43487)) b!84204))

(assert (= (and b!84204 res!43488) b!84205))

(declare-fun m!87839 () Bool)

(assert (=> b!84205 m!87839))

(assert (=> d!20983 d!21477))

(declare-fun b!84208 () Bool)

(declare-fun e!54930 () Option!143)

(assert (=> b!84208 (= e!54930 (getValueByKey!137 (t!5214 (t!5214 (toList!739 lt!39032))) (_1!1111 lt!38742)))))

(declare-fun d!21479 () Bool)

(declare-fun c!13541 () Bool)

(assert (=> d!21479 (= c!13541 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!39032))) (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!39032)))) (_1!1111 lt!38742))))))

(declare-fun e!54929 () Option!143)

(assert (=> d!21479 (= (getValueByKey!137 (t!5214 (toList!739 lt!39032)) (_1!1111 lt!38742)) e!54929)))

(declare-fun b!84206 () Bool)

(assert (=> b!84206 (= e!54929 (Some!142 (_2!1111 (h!2109 (t!5214 (toList!739 lt!39032))))))))

(declare-fun b!84209 () Bool)

(assert (=> b!84209 (= e!54930 None!141)))

(declare-fun b!84207 () Bool)

(assert (=> b!84207 (= e!54929 e!54930)))

(declare-fun c!13542 () Bool)

(assert (=> b!84207 (= c!13542 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!39032))) (not (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!39032)))) (_1!1111 lt!38742)))))))

(assert (= (and d!21479 c!13541) b!84206))

(assert (= (and d!21479 (not c!13541)) b!84207))

(assert (= (and b!84207 c!13542) b!84208))

(assert (= (and b!84207 (not c!13542)) b!84209))

(declare-fun m!87841 () Bool)

(assert (=> b!84208 m!87841))

(assert (=> b!83456 d!21479))

(assert (=> b!83168 d!21299))

(assert (=> b!83168 d!21301))

(declare-fun d!21481 () Bool)

(declare-fun e!54931 () Bool)

(assert (=> d!21481 e!54931))

(declare-fun res!43489 () Bool)

(assert (=> d!21481 (=> (not res!43489) (not e!54931))))

(declare-fun lt!39681 () ListLongMap!1447)

(assert (=> d!21481 (= res!43489 (contains!749 lt!39681 (_1!1111 (ite (or c!13374 c!13377) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(declare-fun lt!39680 () List!1523)

(assert (=> d!21481 (= lt!39681 (ListLongMap!1448 lt!39680))))

(declare-fun lt!39683 () Unit!2426)

(declare-fun lt!39682 () Unit!2426)

(assert (=> d!21481 (= lt!39683 lt!39682)))

(assert (=> d!21481 (= (getValueByKey!137 lt!39680 (_1!1111 (ite (or c!13374 c!13377) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))) (Some!142 (_2!1111 (ite (or c!13374 c!13377) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(assert (=> d!21481 (= lt!39682 (lemmaContainsTupThenGetReturnValue!57 lt!39680 (_1!1111 (ite (or c!13374 c!13377) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (_2!1111 (ite (or c!13374 c!13377) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(assert (=> d!21481 (= lt!39680 (insertStrictlySorted!60 (toList!739 (ite c!13374 call!7872 (ite c!13377 call!7874 call!7873))) (_1!1111 (ite (or c!13374 c!13377) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (_2!1111 (ite (or c!13374 c!13377) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(assert (=> d!21481 (= (+!107 (ite c!13374 call!7872 (ite c!13377 call!7874 call!7873)) (ite (or c!13374 c!13377) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) lt!39681)))

(declare-fun b!84210 () Bool)

(declare-fun res!43490 () Bool)

(assert (=> b!84210 (=> (not res!43490) (not e!54931))))

(assert (=> b!84210 (= res!43490 (= (getValueByKey!137 (toList!739 lt!39681) (_1!1111 (ite (or c!13374 c!13377) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))) (Some!142 (_2!1111 (ite (or c!13374 c!13377) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))))

(declare-fun b!84211 () Bool)

(assert (=> b!84211 (= e!54931 (contains!751 (toList!739 lt!39681) (ite (or c!13374 c!13377) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (= (and d!21481 res!43489) b!84210))

(assert (= (and b!84210 res!43490) b!84211))

(declare-fun m!87843 () Bool)

(assert (=> d!21481 m!87843))

(declare-fun m!87845 () Bool)

(assert (=> d!21481 m!87845))

(declare-fun m!87847 () Bool)

(assert (=> d!21481 m!87847))

(declare-fun m!87849 () Bool)

(assert (=> d!21481 m!87849))

(declare-fun m!87851 () Bool)

(assert (=> b!84210 m!87851))

(declare-fun m!87853 () Bool)

(assert (=> b!84211 m!87853))

(assert (=> bm!7869 d!21481))

(declare-fun d!21483 () Bool)

(assert (=> d!21483 (= (get!1196 (getValueByKey!137 (toList!739 lt!38907) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2628 (getValueByKey!137 (toList!739 lt!38907) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!21053 d!21483))

(assert (=> d!21053 d!21295))

(declare-fun d!21485 () Bool)

(assert (=> d!21485 (= (map!1183 (_2!1112 lt!39395)) (getCurrentListMap!425 (_keys!3983 (_2!1112 lt!39395)) (_values!2299 (_2!1112 lt!39395)) (mask!6333 (_2!1112 lt!39395)) (extraKeys!2159 (_2!1112 lt!39395)) (zeroValue!2210 (_2!1112 lt!39395)) (minValue!2210 (_2!1112 lt!39395)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1112 lt!39395))))))

(declare-fun bs!3556 () Bool)

(assert (= bs!3556 d!21485))

(declare-fun m!87855 () Bool)

(assert (=> bs!3556 m!87855))

(assert (=> b!83565 d!21485))

(declare-fun d!21487 () Bool)

(declare-fun e!54932 () Bool)

(assert (=> d!21487 e!54932))

(declare-fun res!43491 () Bool)

(assert (=> d!21487 (=> (not res!43491) (not e!54932))))

(declare-fun lt!39685 () ListLongMap!1447)

(assert (=> d!21487 (= res!43491 (contains!749 lt!39685 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun lt!39684 () List!1523)

(assert (=> d!21487 (= lt!39685 (ListLongMap!1448 lt!39684))))

(declare-fun lt!39687 () Unit!2426)

(declare-fun lt!39686 () Unit!2426)

(assert (=> d!21487 (= lt!39687 lt!39686)))

(assert (=> d!21487 (= (getValueByKey!137 lt!39684 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21487 (= lt!39686 (lemmaContainsTupThenGetReturnValue!57 lt!39684 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21487 (= lt!39684 (insertStrictlySorted!60 (toList!739 (map!1183 newMap!16)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21487 (= (+!107 (map!1183 newMap!16) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) lt!39685)))

(declare-fun b!84212 () Bool)

(declare-fun res!43492 () Bool)

(assert (=> b!84212 (=> (not res!43492) (not e!54932))))

(assert (=> b!84212 (= res!43492 (= (getValueByKey!137 (toList!739 lt!39685) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!84213 () Bool)

(assert (=> b!84213 (= e!54932 (contains!751 (toList!739 lt!39685) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(assert (= (and d!21487 res!43491) b!84212))

(assert (= (and b!84212 res!43492) b!84213))

(declare-fun m!87857 () Bool)

(assert (=> d!21487 m!87857))

(declare-fun m!87859 () Bool)

(assert (=> d!21487 m!87859))

(declare-fun m!87861 () Bool)

(assert (=> d!21487 m!87861))

(declare-fun m!87863 () Bool)

(assert (=> d!21487 m!87863))

(declare-fun m!87865 () Bool)

(assert (=> b!84212 m!87865))

(declare-fun m!87867 () Bool)

(assert (=> b!84213 m!87867))

(assert (=> b!83565 d!21487))

(assert (=> b!83565 d!20861))

(declare-fun d!21489 () Bool)

(declare-fun c!13543 () Bool)

(assert (=> d!21489 (= c!13543 ((_ is Nil!1520) (toList!739 lt!39077)))))

(declare-fun e!54933 () (InoxSet tuple2!2200))

(assert (=> d!21489 (= (content!87 (toList!739 lt!39077)) e!54933)))

(declare-fun b!84214 () Bool)

(assert (=> b!84214 (= e!54933 ((as const (Array tuple2!2200 Bool)) false))))

(declare-fun b!84215 () Bool)

(assert (=> b!84215 (= e!54933 ((_ map or) (store ((as const (Array tuple2!2200 Bool)) false) (h!2109 (toList!739 lt!39077)) true) (content!87 (t!5214 (toList!739 lt!39077)))))))

(assert (= (and d!21489 c!13543) b!84214))

(assert (= (and d!21489 (not c!13543)) b!84215))

(declare-fun m!87869 () Bool)

(assert (=> b!84215 m!87869))

(assert (=> b!84215 m!87361))

(assert (=> d!20993 d!21489))

(declare-fun d!21491 () Bool)

(declare-fun e!54935 () Bool)

(assert (=> d!21491 e!54935))

(declare-fun res!43493 () Bool)

(assert (=> d!21491 (=> res!43493 e!54935)))

(declare-fun lt!39689 () Bool)

(assert (=> d!21491 (= res!43493 (not lt!39689))))

(declare-fun lt!39691 () Bool)

(assert (=> d!21491 (= lt!39689 lt!39691)))

(declare-fun lt!39690 () Unit!2426)

(declare-fun e!54934 () Unit!2426)

(assert (=> d!21491 (= lt!39690 e!54934)))

(declare-fun c!13544 () Bool)

(assert (=> d!21491 (= c!13544 lt!39691)))

(assert (=> d!21491 (= lt!39691 (containsKey!141 (toList!739 lt!39198) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!21491 (= (contains!749 lt!39198 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) lt!39689)))

(declare-fun b!84216 () Bool)

(declare-fun lt!39688 () Unit!2426)

(assert (=> b!84216 (= e!54934 lt!39688)))

(assert (=> b!84216 (= lt!39688 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39198) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84216 (isDefined!91 (getValueByKey!137 (toList!739 lt!39198) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84217 () Bool)

(declare-fun Unit!2477 () Unit!2426)

(assert (=> b!84217 (= e!54934 Unit!2477)))

(declare-fun b!84218 () Bool)

(assert (=> b!84218 (= e!54935 (isDefined!91 (getValueByKey!137 (toList!739 lt!39198) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!21491 c!13544) b!84216))

(assert (= (and d!21491 (not c!13544)) b!84217))

(assert (= (and d!21491 (not res!43493)) b!84218))

(assert (=> d!21491 m!86045))

(declare-fun m!87871 () Bool)

(assert (=> d!21491 m!87871))

(assert (=> b!84216 m!86045))

(declare-fun m!87873 () Bool)

(assert (=> b!84216 m!87873))

(assert (=> b!84216 m!86045))

(assert (=> b!84216 m!87819))

(assert (=> b!84216 m!87819))

(declare-fun m!87875 () Bool)

(assert (=> b!84216 m!87875))

(assert (=> b!84218 m!86045))

(assert (=> b!84218 m!87819))

(assert (=> b!84218 m!87819))

(assert (=> b!84218 m!87875))

(assert (=> b!83358 d!21491))

(assert (=> b!83678 d!21277))

(assert (=> b!83678 d!21035))

(declare-fun d!21493 () Bool)

(assert (=> d!21493 (contains!749 (getCurrentListMap!425 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))))

(assert (=> d!21493 true))

(declare-fun _$16!105 () Unit!2426)

(assert (=> d!21493 (= (choose!501 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3117 lt!38998) (defaultEntry!2316 newMap!16)) _$16!105)))

(declare-fun bs!3557 () Bool)

(assert (= bs!3557 d!21493))

(assert (=> bs!3557 m!86813))

(assert (=> bs!3557 m!85861))

(assert (=> bs!3557 m!86813))

(assert (=> bs!3557 m!85861))

(assert (=> bs!3557 m!86815))

(assert (=> d!21097 d!21493))

(assert (=> d!21097 d!21305))

(declare-fun e!54937 () Option!143)

(declare-fun b!84221 () Bool)

(assert (=> b!84221 (= e!54937 (getValueByKey!137 (t!5214 (toList!739 lt!39306)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun c!13545 () Bool)

(declare-fun d!21495 () Bool)

(assert (=> d!21495 (= c!13545 (and ((_ is Cons!1519) (toList!739 lt!39306)) (= (_1!1111 (h!2109 (toList!739 lt!39306))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun e!54936 () Option!143)

(assert (=> d!21495 (= (getValueByKey!137 (toList!739 lt!39306) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) e!54936)))

(declare-fun b!84219 () Bool)

(assert (=> b!84219 (= e!54936 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39306)))))))

(declare-fun b!84222 () Bool)

(assert (=> b!84222 (= e!54937 None!141)))

(declare-fun b!84220 () Bool)

(assert (=> b!84220 (= e!54936 e!54937)))

(declare-fun c!13546 () Bool)

(assert (=> b!84220 (= c!13546 (and ((_ is Cons!1519) (toList!739 lt!39306)) (not (= (_1!1111 (h!2109 (toList!739 lt!39306))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(assert (= (and d!21495 c!13545) b!84219))

(assert (= (and d!21495 (not c!13545)) b!84220))

(assert (= (and b!84220 c!13546) b!84221))

(assert (= (and b!84220 (not c!13546)) b!84222))

(declare-fun m!87877 () Bool)

(assert (=> b!84221 m!87877))

(assert (=> b!83490 d!21495))

(assert (=> b!83294 d!21191))

(assert (=> d!21017 d!20859))

(declare-fun d!21497 () Bool)

(declare-fun res!43494 () Bool)

(declare-fun e!54938 () Bool)

(assert (=> d!21497 (=> (not res!43494) (not e!54938))))

(assert (=> d!21497 (= res!43494 (simpleValid!57 (_2!1112 lt!39395)))))

(assert (=> d!21497 (= (valid!331 (_2!1112 lt!39395)) e!54938)))

(declare-fun b!84223 () Bool)

(declare-fun res!43495 () Bool)

(assert (=> b!84223 (=> (not res!43495) (not e!54938))))

(assert (=> b!84223 (= res!43495 (= (arrayCountValidKeys!0 (_keys!3983 (_2!1112 lt!39395)) #b00000000000000000000000000000000 (size!2144 (_keys!3983 (_2!1112 lt!39395)))) (_size!423 (_2!1112 lt!39395))))))

(declare-fun b!84224 () Bool)

(declare-fun res!43496 () Bool)

(assert (=> b!84224 (=> (not res!43496) (not e!54938))))

(assert (=> b!84224 (= res!43496 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3983 (_2!1112 lt!39395)) (mask!6333 (_2!1112 lt!39395))))))

(declare-fun b!84225 () Bool)

(assert (=> b!84225 (= e!54938 (arrayNoDuplicates!0 (_keys!3983 (_2!1112 lt!39395)) #b00000000000000000000000000000000 Nil!1519))))

(assert (= (and d!21497 res!43494) b!84223))

(assert (= (and b!84223 res!43495) b!84224))

(assert (= (and b!84224 res!43496) b!84225))

(declare-fun m!87879 () Bool)

(assert (=> d!21497 m!87879))

(declare-fun m!87881 () Bool)

(assert (=> b!84223 m!87881))

(declare-fun m!87883 () Bool)

(assert (=> b!84224 m!87883))

(declare-fun m!87885 () Bool)

(assert (=> b!84225 m!87885))

(assert (=> b!83558 d!21497))

(declare-fun d!21499 () Bool)

(assert (=> d!21499 (= (apply!81 lt!39198 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1196 (getValueByKey!137 (toList!739 lt!39198) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3558 () Bool)

(assert (= bs!3558 d!21499))

(declare-fun m!87887 () Bool)

(assert (=> bs!3558 m!87887))

(assert (=> bs!3558 m!87887))

(declare-fun m!87889 () Bool)

(assert (=> bs!3558 m!87889))

(assert (=> b!83352 d!21499))

(declare-fun d!21501 () Bool)

(assert (=> d!21501 (= ($colon$colon!70 e!54569 (ite c!13369 (h!2109 (toList!739 lt!38728)) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729)))) (Cons!1519 (ite c!13369 (h!2109 (toList!739 lt!38728)) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))) e!54569))))

(assert (=> bm!7868 d!21501))

(declare-fun d!21503 () Bool)

(assert (=> d!21503 (= (get!1196 (getValueByKey!137 (toList!739 lt!38912) lt!38906)) (v!2628 (getValueByKey!137 (toList!739 lt!38912) lt!38906)))))

(assert (=> d!20951 d!21503))

(declare-fun b!84228 () Bool)

(declare-fun e!54940 () Option!143)

(assert (=> b!84228 (= e!54940 (getValueByKey!137 (t!5214 (toList!739 lt!38912)) lt!38906))))

(declare-fun d!21505 () Bool)

(declare-fun c!13547 () Bool)

(assert (=> d!21505 (= c!13547 (and ((_ is Cons!1519) (toList!739 lt!38912)) (= (_1!1111 (h!2109 (toList!739 lt!38912))) lt!38906)))))

(declare-fun e!54939 () Option!143)

(assert (=> d!21505 (= (getValueByKey!137 (toList!739 lt!38912) lt!38906) e!54939)))

(declare-fun b!84226 () Bool)

(assert (=> b!84226 (= e!54939 (Some!142 (_2!1111 (h!2109 (toList!739 lt!38912)))))))

(declare-fun b!84229 () Bool)

(assert (=> b!84229 (= e!54940 None!141)))

(declare-fun b!84227 () Bool)

(assert (=> b!84227 (= e!54939 e!54940)))

(declare-fun c!13548 () Bool)

(assert (=> b!84227 (= c!13548 (and ((_ is Cons!1519) (toList!739 lt!38912)) (not (= (_1!1111 (h!2109 (toList!739 lt!38912))) lt!38906))))))

(assert (= (and d!21505 c!13547) b!84226))

(assert (= (and d!21505 (not c!13547)) b!84227))

(assert (= (and b!84227 c!13548) b!84228))

(assert (= (and b!84227 (not c!13548)) b!84229))

(declare-fun m!87891 () Bool)

(assert (=> b!84228 m!87891))

(assert (=> d!20951 d!21505))

(declare-fun d!21507 () Bool)

(declare-fun c!13549 () Bool)

(assert (=> d!21507 (= c!13549 ((_ is ValueCellFull!920) (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!54941 () V!3017)

(assert (=> d!21507 (= (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!54941)))

(declare-fun b!84230 () Bool)

(assert (=> b!84230 (= e!54941 (get!1194 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84231 () Bool)

(assert (=> b!84231 (= e!54941 (get!1195 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21507 c!13549) b!84230))

(assert (= (and d!21507 (not c!13549)) b!84231))

(assert (=> b!84230 m!86173))

(assert (=> b!84230 m!85587))

(declare-fun m!87893 () Bool)

(assert (=> b!84230 m!87893))

(assert (=> b!84231 m!86173))

(assert (=> b!84231 m!85587))

(declare-fun m!87895 () Bool)

(assert (=> b!84231 m!87895))

(assert (=> b!83262 d!21507))

(declare-fun d!21509 () Bool)

(declare-fun e!54943 () Bool)

(assert (=> d!21509 e!54943))

(declare-fun res!43497 () Bool)

(assert (=> d!21509 (=> res!43497 e!54943)))

(declare-fun lt!39693 () Bool)

(assert (=> d!21509 (= res!43497 (not lt!39693))))

(declare-fun lt!39695 () Bool)

(assert (=> d!21509 (= lt!39693 lt!39695)))

(declare-fun lt!39694 () Unit!2426)

(declare-fun e!54942 () Unit!2426)

(assert (=> d!21509 (= lt!39694 e!54942)))

(declare-fun c!13550 () Bool)

(assert (=> d!21509 (= c!13550 lt!39695)))

(assert (=> d!21509 (= lt!39695 (containsKey!141 (toList!739 (+!107 lt!39142 (tuple2!2201 lt!39138 lt!39139))) lt!39141))))

(assert (=> d!21509 (= (contains!749 (+!107 lt!39142 (tuple2!2201 lt!39138 lt!39139)) lt!39141) lt!39693)))

(declare-fun b!84232 () Bool)

(declare-fun lt!39692 () Unit!2426)

(assert (=> b!84232 (= e!54942 lt!39692)))

(assert (=> b!84232 (= lt!39692 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 (+!107 lt!39142 (tuple2!2201 lt!39138 lt!39139))) lt!39141))))

(assert (=> b!84232 (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!39142 (tuple2!2201 lt!39138 lt!39139))) lt!39141))))

(declare-fun b!84233 () Bool)

(declare-fun Unit!2478 () Unit!2426)

(assert (=> b!84233 (= e!54942 Unit!2478)))

(declare-fun b!84234 () Bool)

(assert (=> b!84234 (= e!54943 (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!39142 (tuple2!2201 lt!39138 lt!39139))) lt!39141)))))

(assert (= (and d!21509 c!13550) b!84232))

(assert (= (and d!21509 (not c!13550)) b!84233))

(assert (= (and d!21509 (not res!43497)) b!84234))

(declare-fun m!87897 () Bool)

(assert (=> d!21509 m!87897))

(declare-fun m!87899 () Bool)

(assert (=> b!84232 m!87899))

(declare-fun m!87901 () Bool)

(assert (=> b!84232 m!87901))

(assert (=> b!84232 m!87901))

(declare-fun m!87903 () Bool)

(assert (=> b!84232 m!87903))

(assert (=> b!84234 m!87901))

(assert (=> b!84234 m!87901))

(assert (=> b!84234 m!87903))

(assert (=> b!83262 d!21509))

(declare-fun d!21511 () Bool)

(declare-fun e!54944 () Bool)

(assert (=> d!21511 e!54944))

(declare-fun res!43498 () Bool)

(assert (=> d!21511 (=> (not res!43498) (not e!54944))))

(declare-fun lt!39697 () ListLongMap!1447)

(assert (=> d!21511 (= res!43498 (contains!749 lt!39697 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!39696 () List!1523)

(assert (=> d!21511 (= lt!39697 (ListLongMap!1448 lt!39696))))

(declare-fun lt!39699 () Unit!2426)

(declare-fun lt!39698 () Unit!2426)

(assert (=> d!21511 (= lt!39699 lt!39698)))

(assert (=> d!21511 (= (getValueByKey!137 lt!39696 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21511 (= lt!39698 (lemmaContainsTupThenGetReturnValue!57 lt!39696 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21511 (= lt!39696 (insertStrictlySorted!60 (toList!739 call!7824) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21511 (= (+!107 call!7824 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!39697)))

(declare-fun b!84235 () Bool)

(declare-fun res!43499 () Bool)

(assert (=> b!84235 (=> (not res!43499) (not e!54944))))

(assert (=> b!84235 (= res!43499 (= (getValueByKey!137 (toList!739 lt!39697) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!84236 () Bool)

(assert (=> b!84236 (= e!54944 (contains!751 (toList!739 lt!39697) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!21511 res!43498) b!84235))

(assert (= (and b!84235 res!43499) b!84236))

(declare-fun m!87905 () Bool)

(assert (=> d!21511 m!87905))

(declare-fun m!87907 () Bool)

(assert (=> d!21511 m!87907))

(declare-fun m!87909 () Bool)

(assert (=> d!21511 m!87909))

(declare-fun m!87911 () Bool)

(assert (=> d!21511 m!87911))

(declare-fun m!87913 () Bool)

(assert (=> b!84235 m!87913))

(declare-fun m!87915 () Bool)

(assert (=> b!84236 m!87915))

(assert (=> b!83262 d!21511))

(declare-fun d!21513 () Bool)

(assert (=> d!21513 (not (contains!749 (+!107 lt!39142 (tuple2!2201 lt!39138 lt!39139)) lt!39141))))

(declare-fun lt!39700 () Unit!2426)

(assert (=> d!21513 (= lt!39700 (choose!499 lt!39142 lt!39138 lt!39139 lt!39141))))

(declare-fun e!54945 () Bool)

(assert (=> d!21513 e!54945))

(declare-fun res!43500 () Bool)

(assert (=> d!21513 (=> (not res!43500) (not e!54945))))

(assert (=> d!21513 (= res!43500 (not (contains!749 lt!39142 lt!39141)))))

(assert (=> d!21513 (= (addStillNotContains!31 lt!39142 lt!39138 lt!39139 lt!39141) lt!39700)))

(declare-fun b!84237 () Bool)

(assert (=> b!84237 (= e!54945 (not (= lt!39138 lt!39141)))))

(assert (= (and d!21513 res!43500) b!84237))

(assert (=> d!21513 m!86177))

(assert (=> d!21513 m!86177))

(assert (=> d!21513 m!86179))

(declare-fun m!87917 () Bool)

(assert (=> d!21513 m!87917))

(declare-fun m!87919 () Bool)

(assert (=> d!21513 m!87919))

(assert (=> b!83262 d!21513))

(declare-fun d!21515 () Bool)

(declare-fun e!54946 () Bool)

(assert (=> d!21515 e!54946))

(declare-fun res!43501 () Bool)

(assert (=> d!21515 (=> (not res!43501) (not e!54946))))

(declare-fun lt!39702 () ListLongMap!1447)

(assert (=> d!21515 (= res!43501 (contains!749 lt!39702 (_1!1111 (tuple2!2201 lt!39138 lt!39139))))))

(declare-fun lt!39701 () List!1523)

(assert (=> d!21515 (= lt!39702 (ListLongMap!1448 lt!39701))))

(declare-fun lt!39704 () Unit!2426)

(declare-fun lt!39703 () Unit!2426)

(assert (=> d!21515 (= lt!39704 lt!39703)))

(assert (=> d!21515 (= (getValueByKey!137 lt!39701 (_1!1111 (tuple2!2201 lt!39138 lt!39139))) (Some!142 (_2!1111 (tuple2!2201 lt!39138 lt!39139))))))

(assert (=> d!21515 (= lt!39703 (lemmaContainsTupThenGetReturnValue!57 lt!39701 (_1!1111 (tuple2!2201 lt!39138 lt!39139)) (_2!1111 (tuple2!2201 lt!39138 lt!39139))))))

(assert (=> d!21515 (= lt!39701 (insertStrictlySorted!60 (toList!739 lt!39142) (_1!1111 (tuple2!2201 lt!39138 lt!39139)) (_2!1111 (tuple2!2201 lt!39138 lt!39139))))))

(assert (=> d!21515 (= (+!107 lt!39142 (tuple2!2201 lt!39138 lt!39139)) lt!39702)))

(declare-fun b!84238 () Bool)

(declare-fun res!43502 () Bool)

(assert (=> b!84238 (=> (not res!43502) (not e!54946))))

(assert (=> b!84238 (= res!43502 (= (getValueByKey!137 (toList!739 lt!39702) (_1!1111 (tuple2!2201 lt!39138 lt!39139))) (Some!142 (_2!1111 (tuple2!2201 lt!39138 lt!39139)))))))

(declare-fun b!84239 () Bool)

(assert (=> b!84239 (= e!54946 (contains!751 (toList!739 lt!39702) (tuple2!2201 lt!39138 lt!39139)))))

(assert (= (and d!21515 res!43501) b!84238))

(assert (= (and b!84238 res!43502) b!84239))

(declare-fun m!87921 () Bool)

(assert (=> d!21515 m!87921))

(declare-fun m!87923 () Bool)

(assert (=> d!21515 m!87923))

(declare-fun m!87925 () Bool)

(assert (=> d!21515 m!87925))

(declare-fun m!87927 () Bool)

(assert (=> d!21515 m!87927))

(declare-fun m!87929 () Bool)

(assert (=> b!84238 m!87929))

(declare-fun m!87931 () Bool)

(assert (=> b!84239 m!87931))

(assert (=> b!83262 d!21515))

(declare-fun d!21517 () Bool)

(assert (=> d!21517 (isDefined!91 (getValueByKey!137 (toList!739 lt!39028) (_1!1111 lt!38738)))))

(declare-fun lt!39705 () Unit!2426)

(assert (=> d!21517 (= lt!39705 (choose!500 (toList!739 lt!39028) (_1!1111 lt!38738)))))

(declare-fun e!54947 () Bool)

(assert (=> d!21517 e!54947))

(declare-fun res!43503 () Bool)

(assert (=> d!21517 (=> (not res!43503) (not e!54947))))

(assert (=> d!21517 (= res!43503 (isStrictlySorted!292 (toList!739 lt!39028)))))

(assert (=> d!21517 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39028) (_1!1111 lt!38738)) lt!39705)))

(declare-fun b!84240 () Bool)

(assert (=> b!84240 (= e!54947 (containsKey!141 (toList!739 lt!39028) (_1!1111 lt!38738)))))

(assert (= (and d!21517 res!43503) b!84240))

(assert (=> d!21517 m!85905))

(assert (=> d!21517 m!85905))

(assert (=> d!21517 m!86409))

(declare-fun m!87933 () Bool)

(assert (=> d!21517 m!87933))

(declare-fun m!87935 () Bool)

(assert (=> d!21517 m!87935))

(assert (=> b!84240 m!86405))

(assert (=> b!83372 d!21517))

(declare-fun d!21519 () Bool)

(assert (=> d!21519 (= (isDefined!91 (getValueByKey!137 (toList!739 lt!39028) (_1!1111 lt!38738))) (not (isEmpty!338 (getValueByKey!137 (toList!739 lt!39028) (_1!1111 lt!38738)))))))

(declare-fun bs!3559 () Bool)

(assert (= bs!3559 d!21519))

(assert (=> bs!3559 m!85905))

(declare-fun m!87937 () Bool)

(assert (=> bs!3559 m!87937))

(assert (=> b!83372 d!21519))

(assert (=> b!83372 d!21095))

(declare-fun d!21521 () Bool)

(declare-fun e!54949 () Bool)

(assert (=> d!21521 e!54949))

(declare-fun res!43504 () Bool)

(assert (=> d!21521 (=> res!43504 e!54949)))

(declare-fun lt!39707 () Bool)

(assert (=> d!21521 (= res!43504 (not lt!39707))))

(declare-fun lt!39709 () Bool)

(assert (=> d!21521 (= lt!39707 lt!39709)))

(declare-fun lt!39708 () Unit!2426)

(declare-fun e!54948 () Unit!2426)

(assert (=> d!21521 (= lt!39708 e!54948)))

(declare-fun c!13551 () Bool)

(assert (=> d!21521 (= c!13551 lt!39709)))

(assert (=> d!21521 (= lt!39709 (containsKey!141 (toList!739 lt!39306) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21521 (= (contains!749 lt!39306 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!39707)))

(declare-fun b!84241 () Bool)

(declare-fun lt!39706 () Unit!2426)

(assert (=> b!84241 (= e!54948 lt!39706)))

(assert (=> b!84241 (= lt!39706 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39306) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> b!84241 (isDefined!91 (getValueByKey!137 (toList!739 lt!39306) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun b!84242 () Bool)

(declare-fun Unit!2479 () Unit!2426)

(assert (=> b!84242 (= e!54948 Unit!2479)))

(declare-fun b!84243 () Bool)

(assert (=> b!84243 (= e!54949 (isDefined!91 (getValueByKey!137 (toList!739 lt!39306) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (= (and d!21521 c!13551) b!84241))

(assert (= (and d!21521 (not c!13551)) b!84242))

(assert (= (and d!21521 (not res!43504)) b!84243))

(declare-fun m!87939 () Bool)

(assert (=> d!21521 m!87939))

(declare-fun m!87941 () Bool)

(assert (=> b!84241 m!87941))

(assert (=> b!84241 m!86691))

(assert (=> b!84241 m!86691))

(declare-fun m!87943 () Bool)

(assert (=> b!84241 m!87943))

(assert (=> b!84243 m!86691))

(assert (=> b!84243 m!86691))

(assert (=> b!84243 m!87943))

(assert (=> d!21065 d!21521))

(declare-fun b!84246 () Bool)

(declare-fun e!54951 () Option!143)

(assert (=> b!84246 (= e!54951 (getValueByKey!137 (t!5214 lt!39305) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun c!13552 () Bool)

(declare-fun d!21523 () Bool)

(assert (=> d!21523 (= c!13552 (and ((_ is Cons!1519) lt!39305) (= (_1!1111 (h!2109 lt!39305)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun e!54950 () Option!143)

(assert (=> d!21523 (= (getValueByKey!137 lt!39305 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) e!54950)))

(declare-fun b!84244 () Bool)

(assert (=> b!84244 (= e!54950 (Some!142 (_2!1111 (h!2109 lt!39305))))))

(declare-fun b!84247 () Bool)

(assert (=> b!84247 (= e!54951 None!141)))

(declare-fun b!84245 () Bool)

(assert (=> b!84245 (= e!54950 e!54951)))

(declare-fun c!13553 () Bool)

(assert (=> b!84245 (= c!13553 (and ((_ is Cons!1519) lt!39305) (not (= (_1!1111 (h!2109 lt!39305)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(assert (= (and d!21523 c!13552) b!84244))

(assert (= (and d!21523 (not c!13552)) b!84245))

(assert (= (and b!84245 c!13553) b!84246))

(assert (= (and b!84245 (not c!13553)) b!84247))

(declare-fun m!87945 () Bool)

(assert (=> b!84246 m!87945))

(assert (=> d!21065 d!21523))

(declare-fun d!21525 () Bool)

(assert (=> d!21525 (= (getValueByKey!137 lt!39305 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun lt!39710 () Unit!2426)

(assert (=> d!21525 (= lt!39710 (choose!497 lt!39305 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun e!54952 () Bool)

(assert (=> d!21525 e!54952))

(declare-fun res!43505 () Bool)

(assert (=> d!21525 (=> (not res!43505) (not e!54952))))

(assert (=> d!21525 (= res!43505 (isStrictlySorted!292 lt!39305))))

(assert (=> d!21525 (= (lemmaContainsTupThenGetReturnValue!57 lt!39305 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!39710)))

(declare-fun b!84248 () Bool)

(declare-fun res!43506 () Bool)

(assert (=> b!84248 (=> (not res!43506) (not e!54952))))

(assert (=> b!84248 (= res!43506 (containsKey!141 lt!39305 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun b!84249 () Bool)

(assert (=> b!84249 (= e!54952 (contains!751 lt!39305 (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (= (and d!21525 res!43505) b!84248))

(assert (= (and b!84248 res!43506) b!84249))

(assert (=> d!21525 m!86685))

(declare-fun m!87947 () Bool)

(assert (=> d!21525 m!87947))

(declare-fun m!87949 () Bool)

(assert (=> d!21525 m!87949))

(declare-fun m!87951 () Bool)

(assert (=> b!84248 m!87951))

(declare-fun m!87953 () Bool)

(assert (=> b!84249 m!87953))

(assert (=> d!21065 d!21525))

(declare-fun b!84250 () Bool)

(declare-fun e!54957 () List!1523)

(declare-fun call!7937 () List!1523)

(assert (=> b!84250 (= e!54957 call!7937)))

(declare-fun e!54955 () Bool)

(declare-fun b!84251 () Bool)

(declare-fun lt!39711 () List!1523)

(assert (=> b!84251 (= e!54955 (contains!751 lt!39711 (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!84252 () Bool)

(declare-fun c!13554 () Bool)

(declare-fun e!54954 () List!1523)

(declare-fun c!13556 () Bool)

(assert (=> b!84252 (= e!54954 (ite c!13556 (t!5214 (toList!739 call!7794)) (ite c!13554 (Cons!1519 (h!2109 (toList!739 call!7794)) (t!5214 (toList!739 call!7794))) Nil!1520)))))

(declare-fun d!21527 () Bool)

(assert (=> d!21527 e!54955))

(declare-fun res!43508 () Bool)

(assert (=> d!21527 (=> (not res!43508) (not e!54955))))

(assert (=> d!21527 (= res!43508 (isStrictlySorted!292 lt!39711))))

(declare-fun e!54956 () List!1523)

(assert (=> d!21527 (= lt!39711 e!54956)))

(declare-fun c!13555 () Bool)

(assert (=> d!21527 (= c!13555 (and ((_ is Cons!1519) (toList!739 call!7794)) (bvslt (_1!1111 (h!2109 (toList!739 call!7794))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (=> d!21527 (isStrictlySorted!292 (toList!739 call!7794))))

(assert (=> d!21527 (= (insertStrictlySorted!60 (toList!739 call!7794) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!39711)))

(declare-fun b!84253 () Bool)

(assert (=> b!84253 (= e!54954 (insertStrictlySorted!60 (t!5214 (toList!739 call!7794)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun bm!7934 () Bool)

(declare-fun call!7939 () List!1523)

(assert (=> bm!7934 (= call!7937 call!7939)))

(declare-fun b!84254 () Bool)

(declare-fun e!54953 () List!1523)

(declare-fun call!7938 () List!1523)

(assert (=> b!84254 (= e!54953 call!7938)))

(declare-fun b!84255 () Bool)

(assert (=> b!84255 (= e!54956 e!54957)))

(assert (=> b!84255 (= c!13556 (and ((_ is Cons!1519) (toList!739 call!7794)) (= (_1!1111 (h!2109 (toList!739 call!7794))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!84256 () Bool)

(declare-fun res!43507 () Bool)

(assert (=> b!84256 (=> (not res!43507) (not e!54955))))

(assert (=> b!84256 (= res!43507 (containsKey!141 lt!39711 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun bm!7935 () Bool)

(assert (=> bm!7935 (= call!7938 call!7937)))

(declare-fun b!84257 () Bool)

(assert (=> b!84257 (= e!54956 call!7939)))

(declare-fun b!84258 () Bool)

(assert (=> b!84258 (= e!54953 call!7938)))

(declare-fun b!84259 () Bool)

(assert (=> b!84259 (= c!13554 (and ((_ is Cons!1519) (toList!739 call!7794)) (bvsgt (_1!1111 (h!2109 (toList!739 call!7794))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (=> b!84259 (= e!54957 e!54953)))

(declare-fun bm!7936 () Bool)

(assert (=> bm!7936 (= call!7939 ($colon$colon!70 e!54954 (ite c!13555 (h!2109 (toList!739 call!7794)) (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(declare-fun c!13557 () Bool)

(assert (=> bm!7936 (= c!13557 c!13555)))

(assert (= (and d!21527 c!13555) b!84257))

(assert (= (and d!21527 (not c!13555)) b!84255))

(assert (= (and b!84255 c!13556) b!84250))

(assert (= (and b!84255 (not c!13556)) b!84259))

(assert (= (and b!84259 c!13554) b!84254))

(assert (= (and b!84259 (not c!13554)) b!84258))

(assert (= (or b!84254 b!84258) bm!7935))

(assert (= (or b!84250 bm!7935) bm!7934))

(assert (= (or b!84257 bm!7934) bm!7936))

(assert (= (and bm!7936 c!13557) b!84253))

(assert (= (and bm!7936 (not c!13557)) b!84252))

(assert (= (and d!21527 res!43508) b!84256))

(assert (= (and b!84256 res!43507) b!84251))

(declare-fun m!87955 () Bool)

(assert (=> bm!7936 m!87955))

(declare-fun m!87957 () Bool)

(assert (=> b!84253 m!87957))

(declare-fun m!87959 () Bool)

(assert (=> d!21527 m!87959))

(declare-fun m!87961 () Bool)

(assert (=> d!21527 m!87961))

(declare-fun m!87963 () Bool)

(assert (=> b!84256 m!87963))

(declare-fun m!87965 () Bool)

(assert (=> b!84251 m!87965))

(assert (=> d!21065 d!21527))

(declare-fun d!21529 () Bool)

(declare-fun res!43509 () Bool)

(declare-fun e!54958 () Bool)

(assert (=> d!21529 (=> res!43509 e!54958)))

(assert (=> d!21529 (= res!43509 (and ((_ is Cons!1519) lt!39060) (= (_1!1111 (h!2109 lt!39060)) (_1!1111 lt!38729))))))

(assert (=> d!21529 (= (containsKey!141 lt!39060 (_1!1111 lt!38729)) e!54958)))

(declare-fun b!84260 () Bool)

(declare-fun e!54959 () Bool)

(assert (=> b!84260 (= e!54958 e!54959)))

(declare-fun res!43510 () Bool)

(assert (=> b!84260 (=> (not res!43510) (not e!54959))))

(assert (=> b!84260 (= res!43510 (and (or (not ((_ is Cons!1519) lt!39060)) (bvsle (_1!1111 (h!2109 lt!39060)) (_1!1111 lt!38729))) ((_ is Cons!1519) lt!39060) (bvslt (_1!1111 (h!2109 lt!39060)) (_1!1111 lt!38729))))))

(declare-fun b!84261 () Bool)

(assert (=> b!84261 (= e!54959 (containsKey!141 (t!5214 lt!39060) (_1!1111 lt!38729)))))

(assert (= (and d!21529 (not res!43509)) b!84260))

(assert (= (and b!84260 res!43510) b!84261))

(declare-fun m!87967 () Bool)

(assert (=> b!84261 m!87967))

(assert (=> b!83614 d!21529))

(declare-fun d!21531 () Bool)

(assert (=> d!21531 (= (apply!81 lt!39450 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1196 (getValueByKey!137 (toList!739 lt!39450) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3560 () Bool)

(assert (= bs!3560 d!21531))

(declare-fun m!87969 () Bool)

(assert (=> bs!3560 m!87969))

(assert (=> bs!3560 m!87969))

(declare-fun m!87971 () Bool)

(assert (=> bs!3560 m!87971))

(assert (=> b!83670 d!21531))

(declare-fun b!84264 () Bool)

(declare-fun e!54961 () Option!143)

(assert (=> b!84264 (= e!54961 (getValueByKey!137 (t!5214 (toList!739 lt!39265)) (_1!1111 (tuple2!2201 lt!39051 lt!39052))))))

(declare-fun d!21533 () Bool)

(declare-fun c!13558 () Bool)

(assert (=> d!21533 (= c!13558 (and ((_ is Cons!1519) (toList!739 lt!39265)) (= (_1!1111 (h!2109 (toList!739 lt!39265))) (_1!1111 (tuple2!2201 lt!39051 lt!39052)))))))

(declare-fun e!54960 () Option!143)

(assert (=> d!21533 (= (getValueByKey!137 (toList!739 lt!39265) (_1!1111 (tuple2!2201 lt!39051 lt!39052))) e!54960)))

(declare-fun b!84262 () Bool)

(assert (=> b!84262 (= e!54960 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39265)))))))

(declare-fun b!84265 () Bool)

(assert (=> b!84265 (= e!54961 None!141)))

(declare-fun b!84263 () Bool)

(assert (=> b!84263 (= e!54960 e!54961)))

(declare-fun c!13559 () Bool)

(assert (=> b!84263 (= c!13559 (and ((_ is Cons!1519) (toList!739 lt!39265)) (not (= (_1!1111 (h!2109 (toList!739 lt!39265))) (_1!1111 (tuple2!2201 lt!39051 lt!39052))))))))

(assert (= (and d!21533 c!13558) b!84262))

(assert (= (and d!21533 (not c!13558)) b!84263))

(assert (= (and b!84263 c!13559) b!84264))

(assert (= (and b!84263 (not c!13559)) b!84265))

(declare-fun m!87973 () Bool)

(assert (=> b!84264 m!87973))

(assert (=> b!83445 d!21533))

(declare-fun d!21535 () Bool)

(assert (=> d!21535 (= (get!1196 (getValueByKey!137 (toList!739 (+!107 lt!38914 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38918)) (v!2628 (getValueByKey!137 (toList!739 (+!107 lt!38914 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38918)))))

(assert (=> d!20927 d!21535))

(declare-fun e!54963 () Option!143)

(declare-fun b!84268 () Bool)

(assert (=> b!84268 (= e!54963 (getValueByKey!137 (t!5214 (toList!739 (+!107 lt!38914 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) lt!38918))))

(declare-fun c!13560 () Bool)

(declare-fun d!21537 () Bool)

(assert (=> d!21537 (= c!13560 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38914 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) (= (_1!1111 (h!2109 (toList!739 (+!107 lt!38914 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))) lt!38918)))))

(declare-fun e!54962 () Option!143)

(assert (=> d!21537 (= (getValueByKey!137 (toList!739 (+!107 lt!38914 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38918) e!54962)))

(declare-fun b!84266 () Bool)

(assert (=> b!84266 (= e!54962 (Some!142 (_2!1111 (h!2109 (toList!739 (+!107 lt!38914 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))))

(declare-fun b!84269 () Bool)

(assert (=> b!84269 (= e!54963 None!141)))

(declare-fun b!84267 () Bool)

(assert (=> b!84267 (= e!54962 e!54963)))

(declare-fun c!13561 () Bool)

(assert (=> b!84267 (= c!13561 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38914 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) (not (= (_1!1111 (h!2109 (toList!739 (+!107 lt!38914 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))) lt!38918))))))

(assert (= (and d!21537 c!13560) b!84266))

(assert (= (and d!21537 (not c!13560)) b!84267))

(assert (= (and b!84267 c!13561) b!84268))

(assert (= (and b!84267 (not c!13561)) b!84269))

(declare-fun m!87975 () Bool)

(assert (=> b!84268 m!87975))

(assert (=> d!20927 d!21537))

(declare-fun d!21539 () Bool)

(declare-fun e!54965 () Bool)

(assert (=> d!21539 e!54965))

(declare-fun res!43511 () Bool)

(assert (=> d!21539 (=> res!43511 e!54965)))

(declare-fun lt!39713 () Bool)

(assert (=> d!21539 (= res!43511 (not lt!39713))))

(declare-fun lt!39715 () Bool)

(assert (=> d!21539 (= lt!39713 lt!39715)))

(declare-fun lt!39714 () Unit!2426)

(declare-fun e!54964 () Unit!2426)

(assert (=> d!21539 (= lt!39714 e!54964)))

(declare-fun c!13562 () Bool)

(assert (=> d!21539 (= c!13562 lt!39715)))

(assert (=> d!21539 (= lt!39715 (containsKey!141 (toList!739 lt!39288) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21539 (= (contains!749 lt!39288 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!39713)))

(declare-fun b!84270 () Bool)

(declare-fun lt!39712 () Unit!2426)

(assert (=> b!84270 (= e!54964 lt!39712)))

(assert (=> b!84270 (= lt!39712 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39288) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> b!84270 (isDefined!91 (getValueByKey!137 (toList!739 lt!39288) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun b!84271 () Bool)

(declare-fun Unit!2480 () Unit!2426)

(assert (=> b!84271 (= e!54964 Unit!2480)))

(declare-fun b!84272 () Bool)

(assert (=> b!84272 (= e!54965 (isDefined!91 (getValueByKey!137 (toList!739 lt!39288) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (= (and d!21539 c!13562) b!84270))

(assert (= (and d!21539 (not c!13562)) b!84271))

(assert (= (and d!21539 (not res!43511)) b!84272))

(declare-fun m!87977 () Bool)

(assert (=> d!21539 m!87977))

(declare-fun m!87979 () Bool)

(assert (=> b!84270 m!87979))

(assert (=> b!84270 m!86625))

(assert (=> b!84270 m!86625))

(declare-fun m!87981 () Bool)

(assert (=> b!84270 m!87981))

(assert (=> b!84272 m!86625))

(assert (=> b!84272 m!86625))

(assert (=> b!84272 m!87981))

(assert (=> d!21047 d!21539))

(declare-fun b!84275 () Bool)

(declare-fun e!54967 () Option!143)

(assert (=> b!84275 (= e!54967 (getValueByKey!137 (t!5214 lt!39287) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun c!13563 () Bool)

(declare-fun d!21541 () Bool)

(assert (=> d!21541 (= c!13563 (and ((_ is Cons!1519) lt!39287) (= (_1!1111 (h!2109 lt!39287)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun e!54966 () Option!143)

(assert (=> d!21541 (= (getValueByKey!137 lt!39287 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) e!54966)))

(declare-fun b!84273 () Bool)

(assert (=> b!84273 (= e!54966 (Some!142 (_2!1111 (h!2109 lt!39287))))))

(declare-fun b!84276 () Bool)

(assert (=> b!84276 (= e!54967 None!141)))

(declare-fun b!84274 () Bool)

(assert (=> b!84274 (= e!54966 e!54967)))

(declare-fun c!13564 () Bool)

(assert (=> b!84274 (= c!13564 (and ((_ is Cons!1519) lt!39287) (not (= (_1!1111 (h!2109 lt!39287)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(assert (= (and d!21541 c!13563) b!84273))

(assert (= (and d!21541 (not c!13563)) b!84274))

(assert (= (and b!84274 c!13564) b!84275))

(assert (= (and b!84274 (not c!13564)) b!84276))

(declare-fun m!87983 () Bool)

(assert (=> b!84275 m!87983))

(assert (=> d!21047 d!21541))

(declare-fun d!21543 () Bool)

(assert (=> d!21543 (= (getValueByKey!137 lt!39287 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun lt!39716 () Unit!2426)

(assert (=> d!21543 (= lt!39716 (choose!497 lt!39287 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun e!54968 () Bool)

(assert (=> d!21543 e!54968))

(declare-fun res!43512 () Bool)

(assert (=> d!21543 (=> (not res!43512) (not e!54968))))

(assert (=> d!21543 (= res!43512 (isStrictlySorted!292 lt!39287))))

(assert (=> d!21543 (= (lemmaContainsTupThenGetReturnValue!57 lt!39287 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!39716)))

(declare-fun b!84277 () Bool)

(declare-fun res!43513 () Bool)

(assert (=> b!84277 (=> (not res!43513) (not e!54968))))

(assert (=> b!84277 (= res!43513 (containsKey!141 lt!39287 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun b!84278 () Bool)

(assert (=> b!84278 (= e!54968 (contains!751 lt!39287 (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (= (and d!21543 res!43512) b!84277))

(assert (= (and b!84277 res!43513) b!84278))

(assert (=> d!21543 m!86619))

(declare-fun m!87985 () Bool)

(assert (=> d!21543 m!87985))

(declare-fun m!87987 () Bool)

(assert (=> d!21543 m!87987))

(declare-fun m!87989 () Bool)

(assert (=> b!84277 m!87989))

(declare-fun m!87991 () Bool)

(assert (=> b!84278 m!87991))

(assert (=> d!21047 d!21543))

(declare-fun b!84279 () Bool)

(declare-fun e!54973 () List!1523)

(declare-fun call!7940 () List!1523)

(assert (=> b!84279 (= e!54973 call!7940)))

(declare-fun lt!39717 () List!1523)

(declare-fun b!84280 () Bool)

(declare-fun e!54971 () Bool)

(assert (=> b!84280 (= e!54971 (contains!751 lt!39717 (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun c!13567 () Bool)

(declare-fun c!13565 () Bool)

(declare-fun e!54970 () List!1523)

(declare-fun b!84281 () Bool)

(assert (=> b!84281 (= e!54970 (ite c!13567 (t!5214 (toList!739 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) (ite c!13565 (Cons!1519 (h!2109 (toList!739 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) (t!5214 (toList!739 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))) Nil!1520)))))

(declare-fun d!21545 () Bool)

(assert (=> d!21545 e!54971))

(declare-fun res!43515 () Bool)

(assert (=> d!21545 (=> (not res!43515) (not e!54971))))

(assert (=> d!21545 (= res!43515 (isStrictlySorted!292 lt!39717))))

(declare-fun e!54972 () List!1523)

(assert (=> d!21545 (= lt!39717 e!54972)))

(declare-fun c!13566 () Bool)

(assert (=> d!21545 (= c!13566 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) (bvslt (_1!1111 (h!2109 (toList!739 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (=> d!21545 (isStrictlySorted!292 (toList!739 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21545 (= (insertStrictlySorted!60 (toList!739 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!39717)))

(declare-fun b!84282 () Bool)

(assert (=> b!84282 (= e!54970 (insertStrictlySorted!60 (t!5214 (toList!739 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun bm!7937 () Bool)

(declare-fun call!7942 () List!1523)

(assert (=> bm!7937 (= call!7940 call!7942)))

(declare-fun b!84283 () Bool)

(declare-fun e!54969 () List!1523)

(declare-fun call!7941 () List!1523)

(assert (=> b!84283 (= e!54969 call!7941)))

(declare-fun b!84284 () Bool)

(assert (=> b!84284 (= e!54972 e!54973)))

(assert (=> b!84284 (= c!13567 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) (= (_1!1111 (h!2109 (toList!739 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!84285 () Bool)

(declare-fun res!43514 () Bool)

(assert (=> b!84285 (=> (not res!43514) (not e!54971))))

(assert (=> b!84285 (= res!43514 (containsKey!141 lt!39717 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun bm!7938 () Bool)

(assert (=> bm!7938 (= call!7941 call!7940)))

(declare-fun b!84286 () Bool)

(assert (=> b!84286 (= e!54972 call!7942)))

(declare-fun b!84287 () Bool)

(assert (=> b!84287 (= e!54969 call!7941)))

(declare-fun b!84288 () Bool)

(assert (=> b!84288 (= c!13565 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) (bvsgt (_1!1111 (h!2109 (toList!739 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (=> b!84288 (= e!54973 e!54969)))

(declare-fun bm!7939 () Bool)

(assert (=> bm!7939 (= call!7942 ($colon$colon!70 e!54970 (ite c!13566 (h!2109 (toList!739 (+!107 lt!38741 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(declare-fun c!13568 () Bool)

(assert (=> bm!7939 (= c!13568 c!13566)))

(assert (= (and d!21545 c!13566) b!84286))

(assert (= (and d!21545 (not c!13566)) b!84284))

(assert (= (and b!84284 c!13567) b!84279))

(assert (= (and b!84284 (not c!13567)) b!84288))

(assert (= (and b!84288 c!13565) b!84283))

(assert (= (and b!84288 (not c!13565)) b!84287))

(assert (= (or b!84283 b!84287) bm!7938))

(assert (= (or b!84279 bm!7938) bm!7937))

(assert (= (or b!84286 bm!7937) bm!7939))

(assert (= (and bm!7939 c!13568) b!84282))

(assert (= (and bm!7939 (not c!13568)) b!84281))

(assert (= (and d!21545 res!43515) b!84285))

(assert (= (and b!84285 res!43514) b!84280))

(declare-fun m!87993 () Bool)

(assert (=> bm!7939 m!87993))

(declare-fun m!87995 () Bool)

(assert (=> b!84282 m!87995))

(declare-fun m!87997 () Bool)

(assert (=> d!21545 m!87997))

(declare-fun m!87999 () Bool)

(assert (=> d!21545 m!87999))

(declare-fun m!88001 () Bool)

(assert (=> b!84285 m!88001))

(declare-fun m!88003 () Bool)

(assert (=> b!84280 m!88003))

(assert (=> d!21047 d!21545))

(declare-fun d!21547 () Bool)

(assert (=> d!21547 (= (apply!81 lt!39115 lt!39120) (get!1196 (getValueByKey!137 (toList!739 lt!39115) lt!39120)))))

(declare-fun bs!3561 () Bool)

(assert (= bs!3561 d!21547))

(declare-fun m!88005 () Bool)

(assert (=> bs!3561 m!88005))

(assert (=> bs!3561 m!88005))

(declare-fun m!88007 () Bool)

(assert (=> bs!3561 m!88007))

(assert (=> b!83240 d!21547))

(declare-fun d!21549 () Bool)

(assert (=> d!21549 (= (apply!81 lt!39119 lt!39113) (get!1196 (getValueByKey!137 (toList!739 lt!39119) lt!39113)))))

(declare-fun bs!3562 () Bool)

(assert (= bs!3562 d!21549))

(declare-fun m!88009 () Bool)

(assert (=> bs!3562 m!88009))

(assert (=> bs!3562 m!88009))

(declare-fun m!88011 () Bool)

(assert (=> bs!3562 m!88011))

(assert (=> b!83240 d!21549))

(declare-fun d!21551 () Bool)

(declare-fun e!54974 () Bool)

(assert (=> d!21551 e!54974))

(declare-fun res!43516 () Bool)

(assert (=> d!21551 (=> (not res!43516) (not e!54974))))

(declare-fun lt!39719 () ListLongMap!1447)

(assert (=> d!21551 (= res!43516 (contains!749 lt!39719 (_1!1111 (tuple2!2201 lt!39117 (zeroValue!2210 newMap!16)))))))

(declare-fun lt!39718 () List!1523)

(assert (=> d!21551 (= lt!39719 (ListLongMap!1448 lt!39718))))

(declare-fun lt!39721 () Unit!2426)

(declare-fun lt!39720 () Unit!2426)

(assert (=> d!21551 (= lt!39721 lt!39720)))

(assert (=> d!21551 (= (getValueByKey!137 lt!39718 (_1!1111 (tuple2!2201 lt!39117 (zeroValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39117 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21551 (= lt!39720 (lemmaContainsTupThenGetReturnValue!57 lt!39718 (_1!1111 (tuple2!2201 lt!39117 (zeroValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39117 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21551 (= lt!39718 (insertStrictlySorted!60 (toList!739 lt!39115) (_1!1111 (tuple2!2201 lt!39117 (zeroValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39117 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21551 (= (+!107 lt!39115 (tuple2!2201 lt!39117 (zeroValue!2210 newMap!16))) lt!39719)))

(declare-fun b!84289 () Bool)

(declare-fun res!43517 () Bool)

(assert (=> b!84289 (=> (not res!43517) (not e!54974))))

(assert (=> b!84289 (= res!43517 (= (getValueByKey!137 (toList!739 lt!39719) (_1!1111 (tuple2!2201 lt!39117 (zeroValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39117 (zeroValue!2210 newMap!16))))))))

(declare-fun b!84290 () Bool)

(assert (=> b!84290 (= e!54974 (contains!751 (toList!739 lt!39719) (tuple2!2201 lt!39117 (zeroValue!2210 newMap!16))))))

(assert (= (and d!21551 res!43516) b!84289))

(assert (= (and b!84289 res!43517) b!84290))

(declare-fun m!88013 () Bool)

(assert (=> d!21551 m!88013))

(declare-fun m!88015 () Bool)

(assert (=> d!21551 m!88015))

(declare-fun m!88017 () Bool)

(assert (=> d!21551 m!88017))

(declare-fun m!88019 () Bool)

(assert (=> d!21551 m!88019))

(declare-fun m!88021 () Bool)

(assert (=> b!84289 m!88021))

(declare-fun m!88023 () Bool)

(assert (=> b!84290 m!88023))

(assert (=> b!83240 d!21551))

(declare-fun d!21553 () Bool)

(assert (=> d!21553 (= (apply!81 (+!107 lt!39119 (tuple2!2201 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))) lt!39113) (apply!81 lt!39119 lt!39113))))

(declare-fun lt!39722 () Unit!2426)

(assert (=> d!21553 (= lt!39722 (choose!494 lt!39119 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) lt!39113))))

(declare-fun e!54975 () Bool)

(assert (=> d!21553 e!54975))

(declare-fun res!43518 () Bool)

(assert (=> d!21553 (=> (not res!43518) (not e!54975))))

(assert (=> d!21553 (= res!43518 (contains!749 lt!39119 lt!39113))))

(assert (=> d!21553 (= (addApplyDifferent!57 lt!39119 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) lt!39113) lt!39722)))

(declare-fun b!84291 () Bool)

(assert (=> b!84291 (= e!54975 (not (= lt!39113 lt!39128)))))

(assert (= (and d!21553 res!43518) b!84291))

(assert (=> d!21553 m!86113))

(declare-fun m!88025 () Bool)

(assert (=> d!21553 m!88025))

(assert (=> d!21553 m!86117))

(assert (=> d!21553 m!86117))

(assert (=> d!21553 m!86119))

(declare-fun m!88027 () Bool)

(assert (=> d!21553 m!88027))

(assert (=> b!83240 d!21553))

(declare-fun d!21555 () Bool)

(declare-fun e!54976 () Bool)

(assert (=> d!21555 e!54976))

(declare-fun res!43519 () Bool)

(assert (=> d!21555 (=> (not res!43519) (not e!54976))))

(declare-fun lt!39724 () ListLongMap!1447)

(assert (=> d!21555 (= res!43519 (contains!749 lt!39724 (_1!1111 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16)))))))

(declare-fun lt!39723 () List!1523)

(assert (=> d!21555 (= lt!39724 (ListLongMap!1448 lt!39723))))

(declare-fun lt!39726 () Unit!2426)

(declare-fun lt!39725 () Unit!2426)

(assert (=> d!21555 (= lt!39726 lt!39725)))

(assert (=> d!21555 (= (getValueByKey!137 lt!39723 (_1!1111 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21555 (= lt!39725 (lemmaContainsTupThenGetReturnValue!57 lt!39723 (_1!1111 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21555 (= lt!39723 (insertStrictlySorted!60 (toList!739 lt!39132) (_1!1111 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21555 (= (+!107 lt!39132 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16))) lt!39724)))

(declare-fun b!84292 () Bool)

(declare-fun res!43520 () Bool)

(assert (=> b!84292 (=> (not res!43520) (not e!54976))))

(assert (=> b!84292 (= res!43520 (= (getValueByKey!137 (toList!739 lt!39724) (_1!1111 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16))))))))

(declare-fun b!84293 () Bool)

(assert (=> b!84293 (= e!54976 (contains!751 (toList!739 lt!39724) (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16))))))

(assert (= (and d!21555 res!43519) b!84292))

(assert (= (and b!84292 res!43520) b!84293))

(declare-fun m!88029 () Bool)

(assert (=> d!21555 m!88029))

(declare-fun m!88031 () Bool)

(assert (=> d!21555 m!88031))

(declare-fun m!88033 () Bool)

(assert (=> d!21555 m!88033))

(declare-fun m!88035 () Bool)

(assert (=> d!21555 m!88035))

(declare-fun m!88037 () Bool)

(assert (=> b!84292 m!88037))

(declare-fun m!88039 () Bool)

(assert (=> b!84293 m!88039))

(assert (=> b!83240 d!21555))

(declare-fun d!21557 () Bool)

(declare-fun e!54977 () Bool)

(assert (=> d!21557 e!54977))

(declare-fun res!43521 () Bool)

(assert (=> d!21557 (=> (not res!43521) (not e!54977))))

(declare-fun lt!39728 () ListLongMap!1447)

(assert (=> d!21557 (= res!43521 (contains!749 lt!39728 (_1!1111 (tuple2!2201 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))))

(declare-fun lt!39727 () List!1523)

(assert (=> d!21557 (= lt!39728 (ListLongMap!1448 lt!39727))))

(declare-fun lt!39730 () Unit!2426)

(declare-fun lt!39729 () Unit!2426)

(assert (=> d!21557 (= lt!39730 lt!39729)))

(assert (=> d!21557 (= (getValueByKey!137 lt!39727 (_1!1111 (tuple2!2201 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))) (Some!142 (_2!1111 (tuple2!2201 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))))

(assert (=> d!21557 (= lt!39729 (lemmaContainsTupThenGetReturnValue!57 lt!39727 (_1!1111 (tuple2!2201 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))) (_2!1111 (tuple2!2201 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))))

(assert (=> d!21557 (= lt!39727 (insertStrictlySorted!60 (toList!739 lt!39119) (_1!1111 (tuple2!2201 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))) (_2!1111 (tuple2!2201 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))))

(assert (=> d!21557 (= (+!107 lt!39119 (tuple2!2201 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))) lt!39728)))

(declare-fun b!84294 () Bool)

(declare-fun res!43522 () Bool)

(assert (=> b!84294 (=> (not res!43522) (not e!54977))))

(assert (=> b!84294 (= res!43522 (= (getValueByKey!137 (toList!739 lt!39728) (_1!1111 (tuple2!2201 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))) (Some!142 (_2!1111 (tuple2!2201 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))))))))

(declare-fun b!84295 () Bool)

(assert (=> b!84295 (= e!54977 (contains!751 (toList!739 lt!39728) (tuple2!2201 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))))))

(assert (= (and d!21557 res!43521) b!84294))

(assert (= (and b!84294 res!43522) b!84295))

(declare-fun m!88041 () Bool)

(assert (=> d!21557 m!88041))

(declare-fun m!88043 () Bool)

(assert (=> d!21557 m!88043))

(declare-fun m!88045 () Bool)

(assert (=> d!21557 m!88045))

(declare-fun m!88047 () Bool)

(assert (=> d!21557 m!88047))

(declare-fun m!88049 () Bool)

(assert (=> b!84294 m!88049))

(declare-fun m!88051 () Bool)

(assert (=> b!84295 m!88051))

(assert (=> b!83240 d!21557))

(declare-fun d!21559 () Bool)

(declare-fun e!54978 () Bool)

(assert (=> d!21559 e!54978))

(declare-fun res!43523 () Bool)

(assert (=> d!21559 (=> (not res!43523) (not e!54978))))

(declare-fun lt!39732 () ListLongMap!1447)

(assert (=> d!21559 (= res!43523 (contains!749 lt!39732 (_1!1111 (tuple2!2201 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))))

(declare-fun lt!39731 () List!1523)

(assert (=> d!21559 (= lt!39732 (ListLongMap!1448 lt!39731))))

(declare-fun lt!39734 () Unit!2426)

(declare-fun lt!39733 () Unit!2426)

(assert (=> d!21559 (= lt!39734 lt!39733)))

(assert (=> d!21559 (= (getValueByKey!137 lt!39731 (_1!1111 (tuple2!2201 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))) (Some!142 (_2!1111 (tuple2!2201 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))))

(assert (=> d!21559 (= lt!39733 (lemmaContainsTupThenGetReturnValue!57 lt!39731 (_1!1111 (tuple2!2201 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))) (_2!1111 (tuple2!2201 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))))

(assert (=> d!21559 (= lt!39731 (insertStrictlySorted!60 (toList!739 lt!39121) (_1!1111 (tuple2!2201 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))) (_2!1111 (tuple2!2201 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))))

(assert (=> d!21559 (= (+!107 lt!39121 (tuple2!2201 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))) lt!39732)))

(declare-fun b!84296 () Bool)

(declare-fun res!43524 () Bool)

(assert (=> b!84296 (=> (not res!43524) (not e!54978))))

(assert (=> b!84296 (= res!43524 (= (getValueByKey!137 (toList!739 lt!39732) (_1!1111 (tuple2!2201 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))) (Some!142 (_2!1111 (tuple2!2201 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))))))))

(declare-fun b!84297 () Bool)

(assert (=> b!84297 (= e!54978 (contains!751 (toList!739 lt!39732) (tuple2!2201 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))))))

(assert (= (and d!21559 res!43523) b!84296))

(assert (= (and b!84296 res!43524) b!84297))

(declare-fun m!88053 () Bool)

(assert (=> d!21559 m!88053))

(declare-fun m!88055 () Bool)

(assert (=> d!21559 m!88055))

(declare-fun m!88057 () Bool)

(assert (=> d!21559 m!88057))

(declare-fun m!88059 () Bool)

(assert (=> d!21559 m!88059))

(declare-fun m!88061 () Bool)

(assert (=> b!84296 m!88061))

(declare-fun m!88063 () Bool)

(assert (=> b!84297 m!88063))

(assert (=> b!83240 d!21559))

(declare-fun d!21561 () Bool)

(assert (=> d!21561 (= (apply!81 (+!107 lt!39121 (tuple2!2201 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))) lt!39125) (get!1196 (getValueByKey!137 (toList!739 (+!107 lt!39121 (tuple2!2201 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))) lt!39125)))))

(declare-fun bs!3563 () Bool)

(assert (= bs!3563 d!21561))

(declare-fun m!88065 () Bool)

(assert (=> bs!3563 m!88065))

(assert (=> bs!3563 m!88065))

(declare-fun m!88067 () Bool)

(assert (=> bs!3563 m!88067))

(assert (=> b!83240 d!21561))

(declare-fun d!21563 () Bool)

(assert (=> d!21563 (= (apply!81 lt!39121 lt!39125) (get!1196 (getValueByKey!137 (toList!739 lt!39121) lt!39125)))))

(declare-fun bs!3564 () Bool)

(assert (= bs!3564 d!21563))

(declare-fun m!88069 () Bool)

(assert (=> bs!3564 m!88069))

(assert (=> bs!3564 m!88069))

(declare-fun m!88071 () Bool)

(assert (=> bs!3564 m!88071))

(assert (=> b!83240 d!21563))

(declare-fun d!21565 () Bool)

(assert (=> d!21565 (= (apply!81 (+!107 lt!39115 (tuple2!2201 lt!39117 (zeroValue!2210 newMap!16))) lt!39120) (get!1196 (getValueByKey!137 (toList!739 (+!107 lt!39115 (tuple2!2201 lt!39117 (zeroValue!2210 newMap!16)))) lt!39120)))))

(declare-fun bs!3565 () Bool)

(assert (= bs!3565 d!21565))

(declare-fun m!88073 () Bool)

(assert (=> bs!3565 m!88073))

(assert (=> bs!3565 m!88073))

(declare-fun m!88075 () Bool)

(assert (=> bs!3565 m!88075))

(assert (=> b!83240 d!21565))

(declare-fun d!21567 () Bool)

(assert (=> d!21567 (= (apply!81 (+!107 lt!39121 (tuple2!2201 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))) lt!39125) (apply!81 lt!39121 lt!39125))))

(declare-fun lt!39735 () Unit!2426)

(assert (=> d!21567 (= lt!39735 (choose!494 lt!39121 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) lt!39125))))

(declare-fun e!54979 () Bool)

(assert (=> d!21567 e!54979))

(declare-fun res!43525 () Bool)

(assert (=> d!21567 (=> (not res!43525) (not e!54979))))

(assert (=> d!21567 (= res!43525 (contains!749 lt!39121 lt!39125))))

(assert (=> d!21567 (= (addApplyDifferent!57 lt!39121 lt!39118 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) lt!39125) lt!39735)))

(declare-fun b!84298 () Bool)

(assert (=> b!84298 (= e!54979 (not (= lt!39125 lt!39118)))))

(assert (= (and d!21567 res!43525) b!84298))

(assert (=> d!21567 m!86127))

(declare-fun m!88077 () Bool)

(assert (=> d!21567 m!88077))

(assert (=> d!21567 m!86115))

(assert (=> d!21567 m!86115))

(assert (=> d!21567 m!86137))

(declare-fun m!88079 () Bool)

(assert (=> d!21567 m!88079))

(assert (=> b!83240 d!21567))

(declare-fun d!21569 () Bool)

(declare-fun e!54981 () Bool)

(assert (=> d!21569 e!54981))

(declare-fun res!43526 () Bool)

(assert (=> d!21569 (=> res!43526 e!54981)))

(declare-fun lt!39737 () Bool)

(assert (=> d!21569 (= res!43526 (not lt!39737))))

(declare-fun lt!39739 () Bool)

(assert (=> d!21569 (= lt!39737 lt!39739)))

(declare-fun lt!39738 () Unit!2426)

(declare-fun e!54980 () Unit!2426)

(assert (=> d!21569 (= lt!39738 e!54980)))

(declare-fun c!13569 () Bool)

(assert (=> d!21569 (= c!13569 lt!39739)))

(assert (=> d!21569 (= lt!39739 (containsKey!141 (toList!739 (+!107 lt!39132 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16)))) lt!39130))))

(assert (=> d!21569 (= (contains!749 (+!107 lt!39132 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16))) lt!39130) lt!39737)))

(declare-fun b!84299 () Bool)

(declare-fun lt!39736 () Unit!2426)

(assert (=> b!84299 (= e!54980 lt!39736)))

(assert (=> b!84299 (= lt!39736 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 (+!107 lt!39132 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16)))) lt!39130))))

(assert (=> b!84299 (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!39132 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16)))) lt!39130))))

(declare-fun b!84300 () Bool)

(declare-fun Unit!2481 () Unit!2426)

(assert (=> b!84300 (= e!54980 Unit!2481)))

(declare-fun b!84301 () Bool)

(assert (=> b!84301 (= e!54981 (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!39132 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16)))) lt!39130)))))

(assert (= (and d!21569 c!13569) b!84299))

(assert (= (and d!21569 (not c!13569)) b!84300))

(assert (= (and d!21569 (not res!43526)) b!84301))

(declare-fun m!88081 () Bool)

(assert (=> d!21569 m!88081))

(declare-fun m!88083 () Bool)

(assert (=> b!84299 m!88083))

(declare-fun m!88085 () Bool)

(assert (=> b!84299 m!88085))

(assert (=> b!84299 m!88085))

(declare-fun m!88087 () Bool)

(assert (=> b!84299 m!88087))

(assert (=> b!84301 m!88085))

(assert (=> b!84301 m!88085))

(assert (=> b!84301 m!88087))

(assert (=> b!83240 d!21569))

(declare-fun d!21571 () Bool)

(assert (=> d!21571 (= (apply!81 (+!107 lt!39119 (tuple2!2201 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))) lt!39113) (get!1196 (getValueByKey!137 (toList!739 (+!107 lt!39119 (tuple2!2201 lt!39128 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))) lt!39113)))))

(declare-fun bs!3566 () Bool)

(assert (= bs!3566 d!21571))

(declare-fun m!88089 () Bool)

(assert (=> bs!3566 m!88089))

(assert (=> bs!3566 m!88089))

(declare-fun m!88091 () Bool)

(assert (=> bs!3566 m!88091))

(assert (=> b!83240 d!21571))

(declare-fun b!84302 () Bool)

(declare-fun e!54986 () Bool)

(declare-fun lt!39744 () ListLongMap!1447)

(assert (=> b!84302 (= e!54986 (= lt!39744 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011) (mask!6333 newMap!16) (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) (zeroValue!2210 newMap!16) (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2316 newMap!16))))))

(declare-fun d!21573 () Bool)

(declare-fun e!54983 () Bool)

(assert (=> d!21573 e!54983))

(declare-fun res!43528 () Bool)

(assert (=> d!21573 (=> (not res!43528) (not e!54983))))

(assert (=> d!21573 (= res!43528 (not (contains!749 lt!39744 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!54985 () ListLongMap!1447)

(assert (=> d!21573 (= lt!39744 e!54985)))

(declare-fun c!13571 () Bool)

(assert (=> d!21573 (= c!13571 (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(assert (=> d!21573 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21573 (= (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011) (mask!6333 newMap!16) (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) (zeroValue!2210 newMap!16) (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39744)))

(declare-fun b!84303 () Bool)

(declare-fun e!54988 () Bool)

(assert (=> b!84303 (= e!54983 e!54988)))

(declare-fun c!13570 () Bool)

(declare-fun e!54984 () Bool)

(assert (=> b!84303 (= c!13570 e!54984)))

(declare-fun res!43529 () Bool)

(assert (=> b!84303 (=> (not res!43529) (not e!54984))))

(assert (=> b!84303 (= res!43529 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84304 () Bool)

(declare-fun e!54982 () ListLongMap!1447)

(declare-fun call!7943 () ListLongMap!1447)

(assert (=> b!84304 (= e!54982 call!7943)))

(declare-fun b!84305 () Bool)

(assert (=> b!84305 (= e!54986 (isEmpty!336 lt!39744))))

(declare-fun b!84306 () Bool)

(assert (=> b!84306 (= e!54988 e!54986)))

(declare-fun c!13572 () Bool)

(assert (=> b!84306 (= c!13572 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84307 () Bool)

(declare-fun res!43530 () Bool)

(assert (=> b!84307 (=> (not res!43530) (not e!54983))))

(assert (=> b!84307 (= res!43530 (not (contains!749 lt!39744 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84308 () Bool)

(assert (=> b!84308 (= e!54985 (ListLongMap!1448 Nil!1520))))

(declare-fun b!84309 () Bool)

(assert (=> b!84309 (= e!54984 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84309 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!84310 () Bool)

(declare-fun lt!39741 () Unit!2426)

(declare-fun lt!39740 () Unit!2426)

(assert (=> b!84310 (= lt!39741 lt!39740)))

(declare-fun lt!39745 () (_ BitVec 64))

(declare-fun lt!39742 () (_ BitVec 64))

(declare-fun lt!39746 () ListLongMap!1447)

(declare-fun lt!39743 () V!3017)

(assert (=> b!84310 (not (contains!749 (+!107 lt!39746 (tuple2!2201 lt!39742 lt!39743)) lt!39745))))

(assert (=> b!84310 (= lt!39740 (addStillNotContains!31 lt!39746 lt!39742 lt!39743 lt!39745))))

(assert (=> b!84310 (= lt!39745 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!84310 (= lt!39743 (get!1193 (select (arr!1901 (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!84310 (= lt!39742 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!84310 (= lt!39746 call!7943)))

(assert (=> b!84310 (= e!54982 (+!107 call!7943 (tuple2!2201 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000) (get!1193 (select (arr!1901 (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!7940 () Bool)

(assert (=> bm!7940 (= call!7943 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011) (mask!6333 newMap!16) (ite c!13210 (ite c!13217 (extraKeys!2159 newMap!16) lt!39013) (extraKeys!2159 newMap!16)) (zeroValue!2210 newMap!16) (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2316 newMap!16)))))

(declare-fun b!84311 () Bool)

(assert (=> b!84311 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(assert (=> b!84311 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2145 (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011))))))

(declare-fun e!54987 () Bool)

(assert (=> b!84311 (= e!54987 (= (apply!81 lt!39744 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) (get!1193 (select (arr!1901 (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!84312 () Bool)

(assert (=> b!84312 (= e!54985 e!54982)))

(declare-fun c!13573 () Bool)

(assert (=> b!84312 (= c!13573 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84313 () Bool)

(assert (=> b!84313 (= e!54988 e!54987)))

(assert (=> b!84313 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun res!43527 () Bool)

(assert (=> b!84313 (= res!43527 (contains!749 lt!39744 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84313 (=> (not res!43527) (not e!54987))))

(assert (= (and d!21573 c!13571) b!84308))

(assert (= (and d!21573 (not c!13571)) b!84312))

(assert (= (and b!84312 c!13573) b!84310))

(assert (= (and b!84312 (not c!13573)) b!84304))

(assert (= (or b!84310 b!84304) bm!7940))

(assert (= (and d!21573 res!43528) b!84307))

(assert (= (and b!84307 res!43530) b!84303))

(assert (= (and b!84303 res!43529) b!84309))

(assert (= (and b!84303 c!13570) b!84313))

(assert (= (and b!84303 (not c!13570)) b!84306))

(assert (= (and b!84313 res!43527) b!84311))

(assert (= (and b!84306 c!13572) b!84302))

(assert (= (and b!84306 (not c!13572)) b!84305))

(declare-fun b_lambda!3741 () Bool)

(assert (=> (not b_lambda!3741) (not b!84310)))

(assert (=> b!84310 t!5225))

(declare-fun b_and!5121 () Bool)

(assert (= b_and!5117 (and (=> t!5225 result!2895) b_and!5121)))

(assert (=> b!84310 t!5227))

(declare-fun b_and!5123 () Bool)

(assert (= b_and!5119 (and (=> t!5227 result!2897) b_and!5123)))

(declare-fun b_lambda!3743 () Bool)

(assert (=> (not b_lambda!3743) (not b!84311)))

(assert (=> b!84311 t!5225))

(declare-fun b_and!5125 () Bool)

(assert (= b_and!5121 (and (=> t!5225 result!2895) b_and!5125)))

(assert (=> b!84311 t!5227))

(declare-fun b_and!5127 () Bool)

(assert (= b_and!5123 (and (=> t!5227 result!2897) b_and!5127)))

(declare-fun m!88093 () Bool)

(assert (=> bm!7940 m!88093))

(declare-fun m!88095 () Bool)

(assert (=> b!84305 m!88095))

(assert (=> b!84309 m!86045))

(assert (=> b!84309 m!86045))

(assert (=> b!84309 m!86051))

(declare-fun m!88097 () Bool)

(assert (=> b!84310 m!88097))

(declare-fun m!88099 () Bool)

(assert (=> b!84310 m!88099))

(assert (=> b!84310 m!86145))

(assert (=> b!84310 m!86141))

(assert (=> b!84310 m!86147))

(declare-fun m!88101 () Bool)

(assert (=> b!84310 m!88101))

(declare-fun m!88103 () Bool)

(assert (=> b!84310 m!88103))

(assert (=> b!84310 m!86045))

(assert (=> b!84310 m!86141))

(assert (=> b!84310 m!88101))

(assert (=> b!84310 m!86145))

(declare-fun m!88105 () Bool)

(assert (=> d!21573 m!88105))

(assert (=> d!21573 m!86067))

(assert (=> b!84312 m!86045))

(assert (=> b!84312 m!86045))

(assert (=> b!84312 m!86051))

(assert (=> b!84302 m!88093))

(assert (=> b!84313 m!86045))

(assert (=> b!84313 m!86045))

(declare-fun m!88107 () Bool)

(assert (=> b!84313 m!88107))

(declare-fun m!88109 () Bool)

(assert (=> b!84307 m!88109))

(assert (=> b!84311 m!86145))

(assert (=> b!84311 m!86045))

(assert (=> b!84311 m!86141))

(assert (=> b!84311 m!86045))

(declare-fun m!88111 () Bool)

(assert (=> b!84311 m!88111))

(assert (=> b!84311 m!86145))

(assert (=> b!84311 m!86141))

(assert (=> b!84311 m!86147))

(assert (=> b!83240 d!21573))

(declare-fun d!21575 () Bool)

(assert (=> d!21575 (= (apply!81 (+!107 lt!39115 (tuple2!2201 lt!39117 (zeroValue!2210 newMap!16))) lt!39120) (apply!81 lt!39115 lt!39120))))

(declare-fun lt!39747 () Unit!2426)

(assert (=> d!21575 (= lt!39747 (choose!494 lt!39115 lt!39117 (zeroValue!2210 newMap!16) lt!39120))))

(declare-fun e!54989 () Bool)

(assert (=> d!21575 e!54989))

(declare-fun res!43531 () Bool)

(assert (=> d!21575 (=> (not res!43531) (not e!54989))))

(assert (=> d!21575 (= res!43531 (contains!749 lt!39115 lt!39120))))

(assert (=> d!21575 (= (addApplyDifferent!57 lt!39115 lt!39117 (zeroValue!2210 newMap!16) lt!39120) lt!39747)))

(declare-fun b!84314 () Bool)

(assert (=> b!84314 (= e!54989 (not (= lt!39120 lt!39117)))))

(assert (= (and d!21575 res!43531) b!84314))

(assert (=> d!21575 m!86111))

(declare-fun m!88113 () Bool)

(assert (=> d!21575 m!88113))

(assert (=> d!21575 m!86131))

(assert (=> d!21575 m!86131))

(assert (=> d!21575 m!86133))

(declare-fun m!88115 () Bool)

(assert (=> d!21575 m!88115))

(assert (=> b!83240 d!21575))

(declare-fun d!21577 () Bool)

(assert (=> d!21577 (contains!749 (+!107 lt!39132 (tuple2!2201 lt!39129 (zeroValue!2210 newMap!16))) lt!39130)))

(declare-fun lt!39748 () Unit!2426)

(assert (=> d!21577 (= lt!39748 (choose!495 lt!39132 lt!39129 (zeroValue!2210 newMap!16) lt!39130))))

(assert (=> d!21577 (contains!749 lt!39132 lt!39130)))

(assert (=> d!21577 (= (addStillContains!57 lt!39132 lt!39129 (zeroValue!2210 newMap!16) lt!39130) lt!39748)))

(declare-fun bs!3567 () Bool)

(assert (= bs!3567 d!21577))

(assert (=> bs!3567 m!86121))

(assert (=> bs!3567 m!86121))

(assert (=> bs!3567 m!86129))

(declare-fun m!88117 () Bool)

(assert (=> bs!3567 m!88117))

(declare-fun m!88119 () Bool)

(assert (=> bs!3567 m!88119))

(assert (=> b!83240 d!21577))

(declare-fun d!21579 () Bool)

(declare-fun res!43532 () Bool)

(declare-fun e!54990 () Bool)

(assert (=> d!21579 (=> res!43532 e!54990)))

(assert (=> d!21579 (= res!43532 (and ((_ is Cons!1519) lt!39475) (= (_1!1111 (h!2109 lt!39475)) (_1!1111 lt!38742))))))

(assert (=> d!21579 (= (containsKey!141 lt!39475 (_1!1111 lt!38742)) e!54990)))

(declare-fun b!84315 () Bool)

(declare-fun e!54991 () Bool)

(assert (=> b!84315 (= e!54990 e!54991)))

(declare-fun res!43533 () Bool)

(assert (=> b!84315 (=> (not res!43533) (not e!54991))))

(assert (=> b!84315 (= res!43533 (and (or (not ((_ is Cons!1519) lt!39475)) (bvsle (_1!1111 (h!2109 lt!39475)) (_1!1111 lt!38742))) ((_ is Cons!1519) lt!39475) (bvslt (_1!1111 (h!2109 lt!39475)) (_1!1111 lt!38742))))))

(declare-fun b!84316 () Bool)

(assert (=> b!84316 (= e!54991 (containsKey!141 (t!5214 lt!39475) (_1!1111 lt!38742)))))

(assert (= (and d!21579 (not res!43532)) b!84315))

(assert (= (and b!84315 res!43533) b!84316))

(declare-fun m!88121 () Bool)

(assert (=> b!84316 m!88121))

(assert (=> b!83691 d!21579))

(assert (=> b!83664 d!21261))

(assert (=> d!20943 d!20927))

(assert (=> d!20943 d!20945))

(declare-fun d!21581 () Bool)

(declare-fun e!54993 () Bool)

(assert (=> d!21581 e!54993))

(declare-fun res!43534 () Bool)

(assert (=> d!21581 (=> res!43534 e!54993)))

(declare-fun lt!39750 () Bool)

(assert (=> d!21581 (= res!43534 (not lt!39750))))

(declare-fun lt!39752 () Bool)

(assert (=> d!21581 (= lt!39750 lt!39752)))

(declare-fun lt!39751 () Unit!2426)

(declare-fun e!54992 () Unit!2426)

(assert (=> d!21581 (= lt!39751 e!54992)))

(declare-fun c!13574 () Bool)

(assert (=> d!21581 (= c!13574 lt!39752)))

(assert (=> d!21581 (= lt!39752 (containsKey!141 (toList!739 lt!38914) lt!38918))))

(assert (=> d!21581 (= (contains!749 lt!38914 lt!38918) lt!39750)))

(declare-fun b!84317 () Bool)

(declare-fun lt!39749 () Unit!2426)

(assert (=> b!84317 (= e!54992 lt!39749)))

(assert (=> b!84317 (= lt!39749 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!38914) lt!38918))))

(assert (=> b!84317 (isDefined!91 (getValueByKey!137 (toList!739 lt!38914) lt!38918))))

(declare-fun b!84318 () Bool)

(declare-fun Unit!2482 () Unit!2426)

(assert (=> b!84318 (= e!54992 Unit!2482)))

(declare-fun b!84319 () Bool)

(assert (=> b!84319 (= e!54993 (isDefined!91 (getValueByKey!137 (toList!739 lt!38914) lt!38918)))))

(assert (= (and d!21581 c!13574) b!84317))

(assert (= (and d!21581 (not c!13574)) b!84318))

(assert (= (and d!21581 (not res!43534)) b!84319))

(declare-fun m!88123 () Bool)

(assert (=> d!21581 m!88123))

(declare-fun m!88125 () Bool)

(assert (=> b!84317 m!88125))

(assert (=> b!84317 m!86249))

(assert (=> b!84317 m!86249))

(declare-fun m!88127 () Bool)

(assert (=> b!84317 m!88127))

(assert (=> b!84319 m!86249))

(assert (=> b!84319 m!86249))

(assert (=> b!84319 m!88127))

(assert (=> d!20943 d!21581))

(declare-fun d!21583 () Bool)

(assert (=> d!21583 (= (apply!81 (+!107 lt!38914 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38918) (apply!81 lt!38914 lt!38918))))

(assert (=> d!21583 true))

(declare-fun _$34!833 () Unit!2426)

(assert (=> d!21583 (= (choose!494 lt!38914 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38918) _$34!833)))

(declare-fun bs!3568 () Bool)

(assert (= bs!3568 d!21583))

(assert (=> bs!3568 m!85795))

(assert (=> bs!3568 m!85795))

(assert (=> bs!3568 m!85817))

(assert (=> bs!3568 m!85807))

(assert (=> d!20943 d!21583))

(assert (=> d!20943 d!20929))

(declare-fun d!21585 () Bool)

(declare-fun e!54995 () Bool)

(assert (=> d!21585 e!54995))

(declare-fun res!43535 () Bool)

(assert (=> d!21585 (=> res!43535 e!54995)))

(declare-fun lt!39754 () Bool)

(assert (=> d!21585 (= res!43535 (not lt!39754))))

(declare-fun lt!39756 () Bool)

(assert (=> d!21585 (= lt!39754 lt!39756)))

(declare-fun lt!39755 () Unit!2426)

(declare-fun e!54994 () Unit!2426)

(assert (=> d!21585 (= lt!39755 e!54994)))

(declare-fun c!13575 () Bool)

(assert (=> d!21585 (= c!13575 lt!39756)))

(assert (=> d!21585 (= lt!39756 (containsKey!141 (toList!739 lt!39265) (_1!1111 (tuple2!2201 lt!39051 lt!39052))))))

(assert (=> d!21585 (= (contains!749 lt!39265 (_1!1111 (tuple2!2201 lt!39051 lt!39052))) lt!39754)))

(declare-fun b!84320 () Bool)

(declare-fun lt!39753 () Unit!2426)

(assert (=> b!84320 (= e!54994 lt!39753)))

(assert (=> b!84320 (= lt!39753 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39265) (_1!1111 (tuple2!2201 lt!39051 lt!39052))))))

(assert (=> b!84320 (isDefined!91 (getValueByKey!137 (toList!739 lt!39265) (_1!1111 (tuple2!2201 lt!39051 lt!39052))))))

(declare-fun b!84321 () Bool)

(declare-fun Unit!2483 () Unit!2426)

(assert (=> b!84321 (= e!54994 Unit!2483)))

(declare-fun b!84322 () Bool)

(assert (=> b!84322 (= e!54995 (isDefined!91 (getValueByKey!137 (toList!739 lt!39265) (_1!1111 (tuple2!2201 lt!39051 lt!39052)))))))

(assert (= (and d!21585 c!13575) b!84320))

(assert (= (and d!21585 (not c!13575)) b!84321))

(assert (= (and d!21585 (not res!43535)) b!84322))

(declare-fun m!88129 () Bool)

(assert (=> d!21585 m!88129))

(declare-fun m!88131 () Bool)

(assert (=> b!84320 m!88131))

(assert (=> b!84320 m!86563))

(assert (=> b!84320 m!86563))

(declare-fun m!88133 () Bool)

(assert (=> b!84320 m!88133))

(assert (=> b!84322 m!86563))

(assert (=> b!84322 m!86563))

(assert (=> b!84322 m!88133))

(assert (=> d!21029 d!21585))

(declare-fun e!54997 () Option!143)

(declare-fun b!84325 () Bool)

(assert (=> b!84325 (= e!54997 (getValueByKey!137 (t!5214 lt!39264) (_1!1111 (tuple2!2201 lt!39051 lt!39052))))))

(declare-fun c!13576 () Bool)

(declare-fun d!21587 () Bool)

(assert (=> d!21587 (= c!13576 (and ((_ is Cons!1519) lt!39264) (= (_1!1111 (h!2109 lt!39264)) (_1!1111 (tuple2!2201 lt!39051 lt!39052)))))))

(declare-fun e!54996 () Option!143)

(assert (=> d!21587 (= (getValueByKey!137 lt!39264 (_1!1111 (tuple2!2201 lt!39051 lt!39052))) e!54996)))

(declare-fun b!84323 () Bool)

(assert (=> b!84323 (= e!54996 (Some!142 (_2!1111 (h!2109 lt!39264))))))

(declare-fun b!84326 () Bool)

(assert (=> b!84326 (= e!54997 None!141)))

(declare-fun b!84324 () Bool)

(assert (=> b!84324 (= e!54996 e!54997)))

(declare-fun c!13577 () Bool)

(assert (=> b!84324 (= c!13577 (and ((_ is Cons!1519) lt!39264) (not (= (_1!1111 (h!2109 lt!39264)) (_1!1111 (tuple2!2201 lt!39051 lt!39052))))))))

(assert (= (and d!21587 c!13576) b!84323))

(assert (= (and d!21587 (not c!13576)) b!84324))

(assert (= (and b!84324 c!13577) b!84325))

(assert (= (and b!84324 (not c!13577)) b!84326))

(declare-fun m!88135 () Bool)

(assert (=> b!84325 m!88135))

(assert (=> d!21029 d!21587))

(declare-fun d!21589 () Bool)

(assert (=> d!21589 (= (getValueByKey!137 lt!39264 (_1!1111 (tuple2!2201 lt!39051 lt!39052))) (Some!142 (_2!1111 (tuple2!2201 lt!39051 lt!39052))))))

(declare-fun lt!39757 () Unit!2426)

(assert (=> d!21589 (= lt!39757 (choose!497 lt!39264 (_1!1111 (tuple2!2201 lt!39051 lt!39052)) (_2!1111 (tuple2!2201 lt!39051 lt!39052))))))

(declare-fun e!54998 () Bool)

(assert (=> d!21589 e!54998))

(declare-fun res!43536 () Bool)

(assert (=> d!21589 (=> (not res!43536) (not e!54998))))

(assert (=> d!21589 (= res!43536 (isStrictlySorted!292 lt!39264))))

(assert (=> d!21589 (= (lemmaContainsTupThenGetReturnValue!57 lt!39264 (_1!1111 (tuple2!2201 lt!39051 lt!39052)) (_2!1111 (tuple2!2201 lt!39051 lt!39052))) lt!39757)))

(declare-fun b!84327 () Bool)

(declare-fun res!43537 () Bool)

(assert (=> b!84327 (=> (not res!43537) (not e!54998))))

(assert (=> b!84327 (= res!43537 (containsKey!141 lt!39264 (_1!1111 (tuple2!2201 lt!39051 lt!39052))))))

(declare-fun b!84328 () Bool)

(assert (=> b!84328 (= e!54998 (contains!751 lt!39264 (tuple2!2201 (_1!1111 (tuple2!2201 lt!39051 lt!39052)) (_2!1111 (tuple2!2201 lt!39051 lt!39052)))))))

(assert (= (and d!21589 res!43536) b!84327))

(assert (= (and b!84327 res!43537) b!84328))

(assert (=> d!21589 m!86557))

(declare-fun m!88137 () Bool)

(assert (=> d!21589 m!88137))

(declare-fun m!88139 () Bool)

(assert (=> d!21589 m!88139))

(declare-fun m!88141 () Bool)

(assert (=> b!84327 m!88141))

(declare-fun m!88143 () Bool)

(assert (=> b!84328 m!88143))

(assert (=> d!21029 d!21589))

(declare-fun b!84329 () Bool)

(declare-fun e!55003 () List!1523)

(declare-fun call!7944 () List!1523)

(assert (=> b!84329 (= e!55003 call!7944)))

(declare-fun lt!39758 () List!1523)

(declare-fun e!55001 () Bool)

(declare-fun b!84330 () Bool)

(assert (=> b!84330 (= e!55001 (contains!751 lt!39758 (tuple2!2201 (_1!1111 (tuple2!2201 lt!39051 lt!39052)) (_2!1111 (tuple2!2201 lt!39051 lt!39052)))))))

(declare-fun c!13580 () Bool)

(declare-fun c!13578 () Bool)

(declare-fun b!84331 () Bool)

(declare-fun e!55000 () List!1523)

(assert (=> b!84331 (= e!55000 (ite c!13580 (t!5214 (toList!739 lt!39055)) (ite c!13578 (Cons!1519 (h!2109 (toList!739 lt!39055)) (t!5214 (toList!739 lt!39055))) Nil!1520)))))

(declare-fun d!21591 () Bool)

(assert (=> d!21591 e!55001))

(declare-fun res!43539 () Bool)

(assert (=> d!21591 (=> (not res!43539) (not e!55001))))

(assert (=> d!21591 (= res!43539 (isStrictlySorted!292 lt!39758))))

(declare-fun e!55002 () List!1523)

(assert (=> d!21591 (= lt!39758 e!55002)))

(declare-fun c!13579 () Bool)

(assert (=> d!21591 (= c!13579 (and ((_ is Cons!1519) (toList!739 lt!39055)) (bvslt (_1!1111 (h!2109 (toList!739 lt!39055))) (_1!1111 (tuple2!2201 lt!39051 lt!39052)))))))

(assert (=> d!21591 (isStrictlySorted!292 (toList!739 lt!39055))))

(assert (=> d!21591 (= (insertStrictlySorted!60 (toList!739 lt!39055) (_1!1111 (tuple2!2201 lt!39051 lt!39052)) (_2!1111 (tuple2!2201 lt!39051 lt!39052))) lt!39758)))

(declare-fun b!84332 () Bool)

(assert (=> b!84332 (= e!55000 (insertStrictlySorted!60 (t!5214 (toList!739 lt!39055)) (_1!1111 (tuple2!2201 lt!39051 lt!39052)) (_2!1111 (tuple2!2201 lt!39051 lt!39052))))))

(declare-fun bm!7941 () Bool)

(declare-fun call!7946 () List!1523)

(assert (=> bm!7941 (= call!7944 call!7946)))

(declare-fun b!84333 () Bool)

(declare-fun e!54999 () List!1523)

(declare-fun call!7945 () List!1523)

(assert (=> b!84333 (= e!54999 call!7945)))

(declare-fun b!84334 () Bool)

(assert (=> b!84334 (= e!55002 e!55003)))

(assert (=> b!84334 (= c!13580 (and ((_ is Cons!1519) (toList!739 lt!39055)) (= (_1!1111 (h!2109 (toList!739 lt!39055))) (_1!1111 (tuple2!2201 lt!39051 lt!39052)))))))

(declare-fun b!84335 () Bool)

(declare-fun res!43538 () Bool)

(assert (=> b!84335 (=> (not res!43538) (not e!55001))))

(assert (=> b!84335 (= res!43538 (containsKey!141 lt!39758 (_1!1111 (tuple2!2201 lt!39051 lt!39052))))))

(declare-fun bm!7942 () Bool)

(assert (=> bm!7942 (= call!7945 call!7944)))

(declare-fun b!84336 () Bool)

(assert (=> b!84336 (= e!55002 call!7946)))

(declare-fun b!84337 () Bool)

(assert (=> b!84337 (= e!54999 call!7945)))

(declare-fun b!84338 () Bool)

(assert (=> b!84338 (= c!13578 (and ((_ is Cons!1519) (toList!739 lt!39055)) (bvsgt (_1!1111 (h!2109 (toList!739 lt!39055))) (_1!1111 (tuple2!2201 lt!39051 lt!39052)))))))

(assert (=> b!84338 (= e!55003 e!54999)))

(declare-fun bm!7943 () Bool)

(assert (=> bm!7943 (= call!7946 ($colon$colon!70 e!55000 (ite c!13579 (h!2109 (toList!739 lt!39055)) (tuple2!2201 (_1!1111 (tuple2!2201 lt!39051 lt!39052)) (_2!1111 (tuple2!2201 lt!39051 lt!39052))))))))

(declare-fun c!13581 () Bool)

(assert (=> bm!7943 (= c!13581 c!13579)))

(assert (= (and d!21591 c!13579) b!84336))

(assert (= (and d!21591 (not c!13579)) b!84334))

(assert (= (and b!84334 c!13580) b!84329))

(assert (= (and b!84334 (not c!13580)) b!84338))

(assert (= (and b!84338 c!13578) b!84333))

(assert (= (and b!84338 (not c!13578)) b!84337))

(assert (= (or b!84333 b!84337) bm!7942))

(assert (= (or b!84329 bm!7942) bm!7941))

(assert (= (or b!84336 bm!7941) bm!7943))

(assert (= (and bm!7943 c!13581) b!84332))

(assert (= (and bm!7943 (not c!13581)) b!84331))

(assert (= (and d!21591 res!43539) b!84335))

(assert (= (and b!84335 res!43538) b!84330))

(declare-fun m!88145 () Bool)

(assert (=> bm!7943 m!88145))

(declare-fun m!88147 () Bool)

(assert (=> b!84332 m!88147))

(declare-fun m!88149 () Bool)

(assert (=> d!21591 m!88149))

(declare-fun m!88151 () Bool)

(assert (=> d!21591 m!88151))

(declare-fun m!88153 () Bool)

(assert (=> b!84335 m!88153))

(declare-fun m!88155 () Bool)

(assert (=> b!84330 m!88155))

(assert (=> d!21029 d!21591))

(declare-fun d!21593 () Bool)

(declare-fun e!55005 () Bool)

(assert (=> d!21593 e!55005))

(declare-fun res!43540 () Bool)

(assert (=> d!21593 (=> res!43540 e!55005)))

(declare-fun lt!39760 () Bool)

(assert (=> d!21593 (= res!43540 (not lt!39760))))

(declare-fun lt!39762 () Bool)

(assert (=> d!21593 (= lt!39760 lt!39762)))

(declare-fun lt!39761 () Unit!2426)

(declare-fun e!55004 () Unit!2426)

(assert (=> d!21593 (= lt!39761 e!55004)))

(declare-fun c!13582 () Bool)

(assert (=> d!21593 (= c!13582 lt!39762)))

(assert (=> d!21593 (= lt!39762 (containsKey!141 (toList!739 (map!1183 (_2!1112 lt!39395))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> d!21593 (= (contains!749 (map!1183 (_2!1112 lt!39395)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) lt!39760)))

(declare-fun b!84339 () Bool)

(declare-fun lt!39759 () Unit!2426)

(assert (=> b!84339 (= e!55004 lt!39759)))

(assert (=> b!84339 (= lt!39759 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 (map!1183 (_2!1112 lt!39395))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> b!84339 (isDefined!91 (getValueByKey!137 (toList!739 (map!1183 (_2!1112 lt!39395))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun b!84340 () Bool)

(declare-fun Unit!2484 () Unit!2426)

(assert (=> b!84340 (= e!55004 Unit!2484)))

(declare-fun b!84341 () Bool)

(assert (=> b!84341 (= e!55005 (isDefined!91 (getValueByKey!137 (toList!739 (map!1183 (_2!1112 lt!39395))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(assert (= (and d!21593 c!13582) b!84339))

(assert (= (and d!21593 (not c!13582)) b!84340))

(assert (= (and d!21593 (not res!43540)) b!84341))

(assert (=> d!21593 m!85563))

(declare-fun m!88157 () Bool)

(assert (=> d!21593 m!88157))

(assert (=> b!84339 m!85563))

(declare-fun m!88159 () Bool)

(assert (=> b!84339 m!88159))

(assert (=> b!84339 m!85563))

(declare-fun m!88161 () Bool)

(assert (=> b!84339 m!88161))

(assert (=> b!84339 m!88161))

(declare-fun m!88163 () Bool)

(assert (=> b!84339 m!88163))

(assert (=> b!84341 m!85563))

(assert (=> b!84341 m!88161))

(assert (=> b!84341 m!88161))

(assert (=> b!84341 m!88163))

(assert (=> b!83572 d!21593))

(assert (=> b!83572 d!21485))

(declare-fun d!21595 () Bool)

(assert (=> d!21595 (= (get!1196 (getValueByKey!137 (toList!739 lt!38908) lt!38913)) (v!2628 (getValueByKey!137 (toList!739 lt!38908) lt!38913)))))

(assert (=> d!20931 d!21595))

(declare-fun b!84344 () Bool)

(declare-fun e!55007 () Option!143)

(assert (=> b!84344 (= e!55007 (getValueByKey!137 (t!5214 (toList!739 lt!38908)) lt!38913))))

(declare-fun d!21597 () Bool)

(declare-fun c!13583 () Bool)

(assert (=> d!21597 (= c!13583 (and ((_ is Cons!1519) (toList!739 lt!38908)) (= (_1!1111 (h!2109 (toList!739 lt!38908))) lt!38913)))))

(declare-fun e!55006 () Option!143)

(assert (=> d!21597 (= (getValueByKey!137 (toList!739 lt!38908) lt!38913) e!55006)))

(declare-fun b!84342 () Bool)

(assert (=> b!84342 (= e!55006 (Some!142 (_2!1111 (h!2109 (toList!739 lt!38908)))))))

(declare-fun b!84345 () Bool)

(assert (=> b!84345 (= e!55007 None!141)))

(declare-fun b!84343 () Bool)

(assert (=> b!84343 (= e!55006 e!55007)))

(declare-fun c!13584 () Bool)

(assert (=> b!84343 (= c!13584 (and ((_ is Cons!1519) (toList!739 lt!38908)) (not (= (_1!1111 (h!2109 (toList!739 lt!38908))) lt!38913))))))

(assert (= (and d!21597 c!13583) b!84342))

(assert (= (and d!21597 (not c!13583)) b!84343))

(assert (= (and b!84343 c!13584) b!84344))

(assert (= (and b!84343 (not c!13584)) b!84345))

(declare-fun m!88165 () Bool)

(assert (=> b!84344 m!88165))

(assert (=> d!20931 d!21597))

(declare-fun b!84346 () Bool)

(declare-fun e!55010 () Bool)

(declare-fun e!55008 () Bool)

(assert (=> b!84346 (= e!55010 e!55008)))

(declare-fun c!13585 () Bool)

(assert (=> b!84346 (= c!13585 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000)))))

(declare-fun b!84347 () Bool)

(declare-fun e!55009 () Bool)

(declare-fun call!7947 () Bool)

(assert (=> b!84347 (= e!55009 call!7947)))

(declare-fun b!84348 () Bool)

(assert (=> b!84348 (= e!55008 e!55009)))

(declare-fun lt!39764 () (_ BitVec 64))

(assert (=> b!84348 (= lt!39764 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000))))

(declare-fun lt!39765 () Unit!2426)

(assert (=> b!84348 (= lt!39765 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3983 (_2!1112 lt!39016)) lt!39764 #b00000000000000000000000000000000))))

(assert (=> b!84348 (arrayContainsKey!0 (_keys!3983 (_2!1112 lt!39016)) lt!39764 #b00000000000000000000000000000000)))

(declare-fun lt!39763 () Unit!2426)

(assert (=> b!84348 (= lt!39763 lt!39765)))

(declare-fun res!43541 () Bool)

(assert (=> b!84348 (= res!43541 (= (seekEntryOrOpen!0 (select (arr!1900 (_keys!3983 (_2!1112 lt!39016))) #b00000000000000000000000000000000) (_keys!3983 (_2!1112 lt!39016)) (mask!6333 (_2!1112 lt!39016))) (Found!245 #b00000000000000000000000000000000)))))

(assert (=> b!84348 (=> (not res!43541) (not e!55009))))

(declare-fun d!21599 () Bool)

(declare-fun res!43542 () Bool)

(assert (=> d!21599 (=> res!43542 e!55010)))

(assert (=> d!21599 (= res!43542 (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 (_2!1112 lt!39016)))))))

(assert (=> d!21599 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3983 (_2!1112 lt!39016)) (mask!6333 (_2!1112 lt!39016))) e!55010)))

(declare-fun b!84349 () Bool)

(assert (=> b!84349 (= e!55008 call!7947)))

(declare-fun bm!7944 () Bool)

(assert (=> bm!7944 (= call!7947 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3983 (_2!1112 lt!39016)) (mask!6333 (_2!1112 lt!39016))))))

(assert (= (and d!21599 (not res!43542)) b!84346))

(assert (= (and b!84346 c!13585) b!84348))

(assert (= (and b!84346 (not c!13585)) b!84349))

(assert (= (and b!84348 res!43541) b!84347))

(assert (= (or b!84347 b!84349) bm!7944))

(assert (=> b!84346 m!87161))

(assert (=> b!84346 m!87161))

(assert (=> b!84346 m!87163))

(assert (=> b!84348 m!87161))

(declare-fun m!88167 () Bool)

(assert (=> b!84348 m!88167))

(declare-fun m!88169 () Bool)

(assert (=> b!84348 m!88169))

(assert (=> b!84348 m!87161))

(declare-fun m!88171 () Bool)

(assert (=> b!84348 m!88171))

(declare-fun m!88173 () Bool)

(assert (=> bm!7944 m!88173))

(assert (=> b!83433 d!21599))

(declare-fun d!21601 () Bool)

(declare-fun res!43543 () Bool)

(declare-fun e!55011 () Bool)

(assert (=> d!21601 (=> res!43543 e!55011)))

(assert (=> d!21601 (= res!43543 (and ((_ is Cons!1519) (toList!739 lt!38907)) (= (_1!1111 (h!2109 (toList!739 lt!38907))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21601 (= (containsKey!141 (toList!739 lt!38907) #b1000000000000000000000000000000000000000000000000000000000000000) e!55011)))

(declare-fun b!84350 () Bool)

(declare-fun e!55012 () Bool)

(assert (=> b!84350 (= e!55011 e!55012)))

(declare-fun res!43544 () Bool)

(assert (=> b!84350 (=> (not res!43544) (not e!55012))))

(assert (=> b!84350 (= res!43544 (and (or (not ((_ is Cons!1519) (toList!739 lt!38907))) (bvsle (_1!1111 (h!2109 (toList!739 lt!38907))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1519) (toList!739 lt!38907)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38907))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84351 () Bool)

(assert (=> b!84351 (= e!55012 (containsKey!141 (t!5214 (toList!739 lt!38907)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21601 (not res!43543)) b!84350))

(assert (= (and b!84350 res!43544) b!84351))

(declare-fun m!88175 () Bool)

(assert (=> b!84351 m!88175))

(assert (=> d!21125 d!21601))

(declare-fun d!21603 () Bool)

(declare-fun lt!39766 () Bool)

(assert (=> d!21603 (= lt!39766 (select (content!87 (toList!739 lt!39084)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun e!55013 () Bool)

(assert (=> d!21603 (= lt!39766 e!55013)))

(declare-fun res!43545 () Bool)

(assert (=> d!21603 (=> (not res!43545) (not e!55013))))

(assert (=> d!21603 (= res!43545 ((_ is Cons!1519) (toList!739 lt!39084)))))

(assert (=> d!21603 (= (contains!751 (toList!739 lt!39084) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39766)))

(declare-fun b!84352 () Bool)

(declare-fun e!55014 () Bool)

(assert (=> b!84352 (= e!55013 e!55014)))

(declare-fun res!43546 () Bool)

(assert (=> b!84352 (=> res!43546 e!55014)))

(assert (=> b!84352 (= res!43546 (= (h!2109 (toList!739 lt!39084)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!84353 () Bool)

(assert (=> b!84353 (= e!55014 (contains!751 (t!5214 (toList!739 lt!39084)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!21603 res!43545) b!84352))

(assert (= (and b!84352 (not res!43546)) b!84353))

(declare-fun m!88177 () Bool)

(assert (=> d!21603 m!88177))

(declare-fun m!88179 () Bool)

(assert (=> d!21603 m!88179))

(declare-fun m!88181 () Bool)

(assert (=> b!84353 m!88181))

(assert (=> b!83160 d!21603))

(declare-fun b!84356 () Bool)

(declare-fun e!55016 () Option!143)

(assert (=> b!84356 (= e!55016 (getValueByKey!137 (t!5214 (t!5214 lt!39027)) (_1!1111 lt!38738)))))

(declare-fun d!21605 () Bool)

(declare-fun c!13586 () Bool)

(assert (=> d!21605 (= c!13586 (and ((_ is Cons!1519) (t!5214 lt!39027)) (= (_1!1111 (h!2109 (t!5214 lt!39027))) (_1!1111 lt!38738))))))

(declare-fun e!55015 () Option!143)

(assert (=> d!21605 (= (getValueByKey!137 (t!5214 lt!39027) (_1!1111 lt!38738)) e!55015)))

(declare-fun b!84354 () Bool)

(assert (=> b!84354 (= e!55015 (Some!142 (_2!1111 (h!2109 (t!5214 lt!39027)))))))

(declare-fun b!84357 () Bool)

(assert (=> b!84357 (= e!55016 None!141)))

(declare-fun b!84355 () Bool)

(assert (=> b!84355 (= e!55015 e!55016)))

(declare-fun c!13587 () Bool)

(assert (=> b!84355 (= c!13587 (and ((_ is Cons!1519) (t!5214 lt!39027)) (not (= (_1!1111 (h!2109 (t!5214 lt!39027))) (_1!1111 lt!38738)))))))

(assert (= (and d!21605 c!13586) b!84354))

(assert (= (and d!21605 (not c!13586)) b!84355))

(assert (= (and b!84355 c!13587) b!84356))

(assert (= (and b!84355 (not c!13587)) b!84357))

(declare-fun m!88183 () Bool)

(assert (=> b!84356 m!88183))

(assert (=> b!83377 d!21605))

(assert (=> d!21041 d!21045))

(assert (=> d!21041 d!21043))

(assert (=> d!21041 d!21047))

(assert (=> d!21041 d!21049))

(assert (=> b!83609 d!21333))

(assert (=> b!83609 d!20991))

(declare-fun b!84361 () Bool)

(declare-fun e!55017 () Bool)

(assert (=> b!84361 (= e!55017 (and (bvsge (extraKeys!2159 (_2!1112 lt!39016)) #b00000000000000000000000000000000) (bvsle (extraKeys!2159 (_2!1112 lt!39016)) #b00000000000000000000000000000011) (bvsge (_vacant!423 (_2!1112 lt!39016)) #b00000000000000000000000000000000)))))

(declare-fun b!84360 () Bool)

(declare-fun res!43549 () Bool)

(assert (=> b!84360 (=> (not res!43549) (not e!55017))))

(assert (=> b!84360 (= res!43549 (= (size!2150 (_2!1112 lt!39016)) (bvadd (_size!423 (_2!1112 lt!39016)) (bvsdiv (bvadd (extraKeys!2159 (_2!1112 lt!39016)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!84358 () Bool)

(declare-fun res!43550 () Bool)

(assert (=> b!84358 (=> (not res!43550) (not e!55017))))

(assert (=> b!84358 (= res!43550 (and (= (size!2145 (_values!2299 (_2!1112 lt!39016))) (bvadd (mask!6333 (_2!1112 lt!39016)) #b00000000000000000000000000000001)) (= (size!2144 (_keys!3983 (_2!1112 lt!39016))) (size!2145 (_values!2299 (_2!1112 lt!39016)))) (bvsge (_size!423 (_2!1112 lt!39016)) #b00000000000000000000000000000000) (bvsle (_size!423 (_2!1112 lt!39016)) (bvadd (mask!6333 (_2!1112 lt!39016)) #b00000000000000000000000000000001))))))

(declare-fun b!84359 () Bool)

(declare-fun res!43548 () Bool)

(assert (=> b!84359 (=> (not res!43548) (not e!55017))))

(assert (=> b!84359 (= res!43548 (bvsge (size!2150 (_2!1112 lt!39016)) (_size!423 (_2!1112 lt!39016))))))

(declare-fun d!21607 () Bool)

(declare-fun res!43547 () Bool)

(assert (=> d!21607 (=> (not res!43547) (not e!55017))))

(assert (=> d!21607 (= res!43547 (validMask!0 (mask!6333 (_2!1112 lt!39016))))))

(assert (=> d!21607 (= (simpleValid!57 (_2!1112 lt!39016)) e!55017)))

(assert (= (and d!21607 res!43547) b!84358))

(assert (= (and b!84358 res!43550) b!84359))

(assert (= (and b!84359 res!43548) b!84360))

(assert (= (and b!84360 res!43549) b!84361))

(declare-fun m!88185 () Bool)

(assert (=> b!84360 m!88185))

(assert (=> b!84359 m!88185))

(assert (=> d!21607 m!87615))

(assert (=> d!21019 d!21607))

(assert (=> d!20999 d!21007))

(assert (=> d!20999 d!21001))

(assert (=> d!20999 d!21005))

(assert (=> d!20999 d!21003))

(assert (=> bm!7861 d!20909))

(declare-fun d!21609 () Bool)

(declare-fun lt!39767 () Bool)

(assert (=> d!21609 (= lt!39767 (select (content!87 (toList!739 lt!39284)) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun e!55018 () Bool)

(assert (=> d!21609 (= lt!39767 e!55018)))

(declare-fun res!43551 () Bool)

(assert (=> d!21609 (=> (not res!43551) (not e!55018))))

(assert (=> d!21609 (= res!43551 ((_ is Cons!1519) (toList!739 lt!39284)))))

(assert (=> d!21609 (= (contains!751 (toList!739 lt!39284) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39767)))

(declare-fun b!84362 () Bool)

(declare-fun e!55019 () Bool)

(assert (=> b!84362 (= e!55018 e!55019)))

(declare-fun res!43552 () Bool)

(assert (=> b!84362 (=> res!43552 e!55019)))

(assert (=> b!84362 (= res!43552 (= (h!2109 (toList!739 lt!39284)) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!84363 () Bool)

(assert (=> b!84363 (= e!55019 (contains!751 (t!5214 (toList!739 lt!39284)) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!21609 res!43551) b!84362))

(assert (= (and b!84362 (not res!43552)) b!84363))

(declare-fun m!88187 () Bool)

(assert (=> d!21609 m!88187))

(declare-fun m!88189 () Bool)

(assert (=> d!21609 m!88189))

(declare-fun m!88191 () Bool)

(assert (=> b!84363 m!88191))

(assert (=> b!83463 d!21609))

(declare-fun b!84366 () Bool)

(declare-fun e!55021 () Option!143)

(assert (=> b!84366 (= e!55021 (getValueByKey!137 (t!5214 (t!5214 (toList!739 lt!38733))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun c!13588 () Bool)

(declare-fun d!21611 () Bool)

(assert (=> d!21611 (= c!13588 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38733))) (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!38733)))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(declare-fun e!55020 () Option!143)

(assert (=> d!21611 (= (getValueByKey!137 (t!5214 (toList!739 lt!38733)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) e!55020)))

(declare-fun b!84364 () Bool)

(assert (=> b!84364 (= e!55020 (Some!142 (_2!1111 (h!2109 (t!5214 (toList!739 lt!38733))))))))

(declare-fun b!84367 () Bool)

(assert (=> b!84367 (= e!55021 None!141)))

(declare-fun b!84365 () Bool)

(assert (=> b!84365 (= e!55020 e!55021)))

(declare-fun c!13589 () Bool)

(assert (=> b!84365 (= c!13589 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38733))) (not (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!38733)))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))))

(assert (= (and d!21611 c!13588) b!84364))

(assert (= (and d!21611 (not c!13588)) b!84365))

(assert (= (and b!84365 c!13589) b!84366))

(assert (= (and b!84365 (not c!13589)) b!84367))

(assert (=> b!84366 m!85563))

(declare-fun m!88193 () Bool)

(assert (=> b!84366 m!88193))

(assert (=> b!83587 d!21611))

(declare-fun d!21613 () Bool)

(assert (=> d!21613 (= (apply!81 lt!39114 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) (get!1196 (getValueByKey!137 (toList!739 lt!39114) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3569 () Bool)

(assert (= bs!3569 d!21613))

(assert (=> bs!3569 m!86045))

(declare-fun m!88195 () Bool)

(assert (=> bs!3569 m!88195))

(assert (=> bs!3569 m!88195))

(declare-fun m!88197 () Bool)

(assert (=> bs!3569 m!88197))

(assert (=> b!83229 d!21613))

(declare-fun d!21615 () Bool)

(declare-fun c!13590 () Bool)

(assert (=> d!21615 (= c!13590 ((_ is ValueCellFull!920) (select (arr!1901 (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011)) #b00000000000000000000000000000000)))))

(declare-fun e!55022 () V!3017)

(assert (=> d!21615 (= (get!1193 (select (arr!1901 (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!55022)))

(declare-fun b!84368 () Bool)

(assert (=> b!84368 (= e!55022 (get!1194 (select (arr!1901 (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84369 () Bool)

(assert (=> b!84369 (= e!55022 (get!1195 (select (arr!1901 (ite (or c!13210 c!13219) (_values!2299 newMap!16) lt!39011)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21615 c!13590) b!84368))

(assert (= (and d!21615 (not c!13590)) b!84369))

(assert (=> b!84368 m!86145))

(assert (=> b!84368 m!86141))

(declare-fun m!88199 () Bool)

(assert (=> b!84368 m!88199))

(assert (=> b!84369 m!86145))

(assert (=> b!84369 m!86141))

(declare-fun m!88201 () Bool)

(assert (=> b!84369 m!88201))

(assert (=> b!83229 d!21615))

(declare-fun b!84372 () Bool)

(declare-fun e!55024 () Option!143)

(assert (=> b!84372 (= e!55024 (getValueByKey!137 (t!5214 (toList!739 lt!39242)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun d!21617 () Bool)

(declare-fun c!13591 () Bool)

(assert (=> d!21617 (= c!13591 (and ((_ is Cons!1519) (toList!739 lt!39242)) (= (_1!1111 (h!2109 (toList!739 lt!39242))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun e!55023 () Option!143)

(assert (=> d!21617 (= (getValueByKey!137 (toList!739 lt!39242) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) e!55023)))

(declare-fun b!84370 () Bool)

(assert (=> b!84370 (= e!55023 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39242)))))))

(declare-fun b!84373 () Bool)

(assert (=> b!84373 (= e!55024 None!141)))

(declare-fun b!84371 () Bool)

(assert (=> b!84371 (= e!55023 e!55024)))

(declare-fun c!13592 () Bool)

(assert (=> b!84371 (= c!13592 (and ((_ is Cons!1519) (toList!739 lt!39242)) (not (= (_1!1111 (h!2109 (toList!739 lt!39242))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(assert (= (and d!21617 c!13591) b!84370))

(assert (= (and d!21617 (not c!13591)) b!84371))

(assert (= (and b!84371 c!13592) b!84372))

(assert (= (and b!84371 (not c!13592)) b!84373))

(declare-fun m!88203 () Bool)

(assert (=> b!84372 m!88203))

(assert (=> b!83417 d!21617))

(declare-fun d!21619 () Bool)

(declare-fun res!43553 () Bool)

(declare-fun e!55025 () Bool)

(assert (=> d!21619 (=> res!43553 e!55025)))

(assert (=> d!21619 (= res!43553 (or ((_ is Nil!1520) lt!39431) ((_ is Nil!1520) (t!5214 lt!39431))))))

(assert (=> d!21619 (= (isStrictlySorted!292 lt!39431) e!55025)))

(declare-fun b!84374 () Bool)

(declare-fun e!55026 () Bool)

(assert (=> b!84374 (= e!55025 e!55026)))

(declare-fun res!43554 () Bool)

(assert (=> b!84374 (=> (not res!43554) (not e!55026))))

(assert (=> b!84374 (= res!43554 (bvslt (_1!1111 (h!2109 lt!39431)) (_1!1111 (h!2109 (t!5214 lt!39431)))))))

(declare-fun b!84375 () Bool)

(assert (=> b!84375 (= e!55026 (isStrictlySorted!292 (t!5214 lt!39431)))))

(assert (= (and d!21619 (not res!43553)) b!84374))

(assert (= (and b!84374 res!43554) b!84375))

(declare-fun m!88205 () Bool)

(assert (=> b!84375 m!88205))

(assert (=> d!21113 d!21619))

(declare-fun d!21621 () Bool)

(declare-fun res!43555 () Bool)

(declare-fun e!55027 () Bool)

(assert (=> d!21621 (=> res!43555 e!55027)))

(assert (=> d!21621 (= res!43555 (or ((_ is Nil!1520) (toList!739 lt!38741)) ((_ is Nil!1520) (t!5214 (toList!739 lt!38741)))))))

(assert (=> d!21621 (= (isStrictlySorted!292 (toList!739 lt!38741)) e!55027)))

(declare-fun b!84376 () Bool)

(declare-fun e!55028 () Bool)

(assert (=> b!84376 (= e!55027 e!55028)))

(declare-fun res!43556 () Bool)

(assert (=> b!84376 (=> (not res!43556) (not e!55028))))

(assert (=> b!84376 (= res!43556 (bvslt (_1!1111 (h!2109 (toList!739 lt!38741))) (_1!1111 (h!2109 (t!5214 (toList!739 lt!38741))))))))

(declare-fun b!84377 () Bool)

(assert (=> b!84377 (= e!55028 (isStrictlySorted!292 (t!5214 (toList!739 lt!38741))))))

(assert (= (and d!21621 (not res!43555)) b!84376))

(assert (= (and b!84376 res!43556) b!84377))

(declare-fun m!88207 () Bool)

(assert (=> b!84377 m!88207))

(assert (=> d!21113 d!21621))

(declare-fun b!84380 () Bool)

(declare-fun e!55030 () Option!143)

(assert (=> b!84380 (= e!55030 (getValueByKey!137 (t!5214 (t!5214 lt!39076)) (_1!1111 lt!38742)))))

(declare-fun d!21623 () Bool)

(declare-fun c!13593 () Bool)

(assert (=> d!21623 (= c!13593 (and ((_ is Cons!1519) (t!5214 lt!39076)) (= (_1!1111 (h!2109 (t!5214 lt!39076))) (_1!1111 lt!38742))))))

(declare-fun e!55029 () Option!143)

(assert (=> d!21623 (= (getValueByKey!137 (t!5214 lt!39076) (_1!1111 lt!38742)) e!55029)))

(declare-fun b!84378 () Bool)

(assert (=> b!84378 (= e!55029 (Some!142 (_2!1111 (h!2109 (t!5214 lt!39076)))))))

(declare-fun b!84381 () Bool)

(assert (=> b!84381 (= e!55030 None!141)))

(declare-fun b!84379 () Bool)

(assert (=> b!84379 (= e!55029 e!55030)))

(declare-fun c!13594 () Bool)

(assert (=> b!84379 (= c!13594 (and ((_ is Cons!1519) (t!5214 lt!39076)) (not (= (_1!1111 (h!2109 (t!5214 lt!39076))) (_1!1111 lt!38742)))))))

(assert (= (and d!21623 c!13593) b!84378))

(assert (= (and d!21623 (not c!13593)) b!84379))

(assert (= (and b!84379 c!13594) b!84380))

(assert (= (and b!84379 (not c!13594)) b!84381))

(declare-fun m!88209 () Bool)

(assert (=> b!84380 m!88209))

(assert (=> b!83300 d!21623))

(assert (=> bm!7820 d!21573))

(assert (=> b!83347 d!21261))

(declare-fun d!21625 () Bool)

(declare-fun c!13595 () Bool)

(assert (=> d!21625 (= c!13595 ((_ is Nil!1520) (toList!739 lt!39068)))))

(declare-fun e!55031 () (InoxSet tuple2!2200))

(assert (=> d!21625 (= (content!87 (toList!739 lt!39068)) e!55031)))

(declare-fun b!84382 () Bool)

(assert (=> b!84382 (= e!55031 ((as const (Array tuple2!2200 Bool)) false))))

(declare-fun b!84383 () Bool)

(assert (=> b!84383 (= e!55031 ((_ map or) (store ((as const (Array tuple2!2200 Bool)) false) (h!2109 (toList!739 lt!39068)) true) (content!87 (t!5214 (toList!739 lt!39068)))))))

(assert (= (and d!21625 c!13595) b!84382))

(assert (= (and d!21625 (not c!13595)) b!84383))

(declare-fun m!88211 () Bool)

(assert (=> b!84383 m!88211))

(assert (=> b!84383 m!87629))

(assert (=> d!21127 d!21625))

(declare-fun d!21627 () Bool)

(declare-fun e!55033 () Bool)

(assert (=> d!21627 e!55033))

(declare-fun res!43557 () Bool)

(assert (=> d!21627 (=> res!43557 e!55033)))

(declare-fun lt!39769 () Bool)

(assert (=> d!21627 (= res!43557 (not lt!39769))))

(declare-fun lt!39771 () Bool)

(assert (=> d!21627 (= lt!39769 lt!39771)))

(declare-fun lt!39770 () Unit!2426)

(declare-fun e!55032 () Unit!2426)

(assert (=> d!21627 (= lt!39770 e!55032)))

(declare-fun c!13596 () Bool)

(assert (=> d!21627 (= c!13596 lt!39771)))

(assert (=> d!21627 (= lt!39771 (containsKey!141 (toList!739 lt!39158) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21627 (= (contains!749 lt!39158 (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39769)))

(declare-fun b!84384 () Bool)

(declare-fun lt!39768 () Unit!2426)

(assert (=> b!84384 (= e!55032 lt!39768)))

(assert (=> b!84384 (= lt!39768 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39158) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> b!84384 (isDefined!91 (getValueByKey!137 (toList!739 lt!39158) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!84385 () Bool)

(declare-fun Unit!2485 () Unit!2426)

(assert (=> b!84385 (= e!55032 Unit!2485)))

(declare-fun b!84386 () Bool)

(assert (=> b!84386 (= e!55033 (isDefined!91 (getValueByKey!137 (toList!739 lt!39158) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21627 c!13596) b!84384))

(assert (= (and d!21627 (not c!13596)) b!84385))

(assert (= (and d!21627 (not res!43557)) b!84386))

(declare-fun m!88213 () Bool)

(assert (=> d!21627 m!88213))

(declare-fun m!88215 () Bool)

(assert (=> b!84384 m!88215))

(assert (=> b!84384 m!86241))

(assert (=> b!84384 m!86241))

(declare-fun m!88217 () Bool)

(assert (=> b!84384 m!88217))

(assert (=> b!84386 m!86241))

(assert (=> b!84386 m!86241))

(assert (=> b!84386 m!88217))

(assert (=> d!20941 d!21627))

(declare-fun b!84389 () Bool)

(declare-fun e!55035 () Option!143)

(assert (=> b!84389 (= e!55035 (getValueByKey!137 (t!5214 lt!39157) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun c!13597 () Bool)

(declare-fun d!21629 () Bool)

(assert (=> d!21629 (= c!13597 (and ((_ is Cons!1519) lt!39157) (= (_1!1111 (h!2109 lt!39157)) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!55034 () Option!143)

(assert (=> d!21629 (= (getValueByKey!137 lt!39157 (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!55034)))

(declare-fun b!84387 () Bool)

(assert (=> b!84387 (= e!55034 (Some!142 (_2!1111 (h!2109 lt!39157))))))

(declare-fun b!84390 () Bool)

(assert (=> b!84390 (= e!55035 None!141)))

(declare-fun b!84388 () Bool)

(assert (=> b!84388 (= e!55034 e!55035)))

(declare-fun c!13598 () Bool)

(assert (=> b!84388 (= c!13598 (and ((_ is Cons!1519) lt!39157) (not (= (_1!1111 (h!2109 lt!39157)) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21629 c!13597) b!84387))

(assert (= (and d!21629 (not c!13597)) b!84388))

(assert (= (and b!84388 c!13598) b!84389))

(assert (= (and b!84388 (not c!13598)) b!84390))

(declare-fun m!88219 () Bool)

(assert (=> b!84389 m!88219))

(assert (=> d!20941 d!21629))

(declare-fun d!21631 () Bool)

(assert (=> d!21631 (= (getValueByKey!137 lt!39157 (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39772 () Unit!2426)

(assert (=> d!21631 (= lt!39772 (choose!497 lt!39157 (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun e!55036 () Bool)

(assert (=> d!21631 e!55036))

(declare-fun res!43558 () Bool)

(assert (=> d!21631 (=> (not res!43558) (not e!55036))))

(assert (=> d!21631 (= res!43558 (isStrictlySorted!292 lt!39157))))

(assert (=> d!21631 (= (lemmaContainsTupThenGetReturnValue!57 lt!39157 (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39772)))

(declare-fun b!84391 () Bool)

(declare-fun res!43559 () Bool)

(assert (=> b!84391 (=> (not res!43559) (not e!55036))))

(assert (=> b!84391 (= res!43559 (containsKey!141 lt!39157 (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!84392 () Bool)

(assert (=> b!84392 (= e!55036 (contains!751 lt!39157 (tuple2!2201 (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21631 res!43558) b!84391))

(assert (= (and b!84391 res!43559) b!84392))

(assert (=> d!21631 m!86235))

(declare-fun m!88221 () Bool)

(assert (=> d!21631 m!88221))

(declare-fun m!88223 () Bool)

(assert (=> d!21631 m!88223))

(declare-fun m!88225 () Bool)

(assert (=> b!84391 m!88225))

(declare-fun m!88227 () Bool)

(assert (=> b!84392 m!88227))

(assert (=> d!20941 d!21631))

(declare-fun b!84393 () Bool)

(declare-fun e!55041 () List!1523)

(declare-fun call!7948 () List!1523)

(assert (=> b!84393 (= e!55041 call!7948)))

(declare-fun e!55039 () Bool)

(declare-fun b!84394 () Bool)

(declare-fun lt!39773 () List!1523)

(assert (=> b!84394 (= e!55039 (contains!751 lt!39773 (tuple2!2201 (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!84395 () Bool)

(declare-fun e!55038 () List!1523)

(declare-fun c!13601 () Bool)

(declare-fun c!13599 () Bool)

(assert (=> b!84395 (= e!55038 (ite c!13601 (t!5214 (toList!739 lt!38908)) (ite c!13599 (Cons!1519 (h!2109 (toList!739 lt!38908)) (t!5214 (toList!739 lt!38908))) Nil!1520)))))

(declare-fun d!21633 () Bool)

(assert (=> d!21633 e!55039))

(declare-fun res!43561 () Bool)

(assert (=> d!21633 (=> (not res!43561) (not e!55039))))

(assert (=> d!21633 (= res!43561 (isStrictlySorted!292 lt!39773))))

(declare-fun e!55040 () List!1523)

(assert (=> d!21633 (= lt!39773 e!55040)))

(declare-fun c!13600 () Bool)

(assert (=> d!21633 (= c!13600 (and ((_ is Cons!1519) (toList!739 lt!38908)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38908))) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> d!21633 (isStrictlySorted!292 (toList!739 lt!38908))))

(assert (=> d!21633 (= (insertStrictlySorted!60 (toList!739 lt!38908) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39773)))

(declare-fun b!84396 () Bool)

(assert (=> b!84396 (= e!55038 (insertStrictlySorted!60 (t!5214 (toList!739 lt!38908)) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7945 () Bool)

(declare-fun call!7950 () List!1523)

(assert (=> bm!7945 (= call!7948 call!7950)))

(declare-fun b!84397 () Bool)

(declare-fun e!55037 () List!1523)

(declare-fun call!7949 () List!1523)

(assert (=> b!84397 (= e!55037 call!7949)))

(declare-fun b!84398 () Bool)

(assert (=> b!84398 (= e!55040 e!55041)))

(assert (=> b!84398 (= c!13601 (and ((_ is Cons!1519) (toList!739 lt!38908)) (= (_1!1111 (h!2109 (toList!739 lt!38908))) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!84399 () Bool)

(declare-fun res!43560 () Bool)

(assert (=> b!84399 (=> (not res!43560) (not e!55039))))

(assert (=> b!84399 (= res!43560 (containsKey!141 lt!39773 (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7946 () Bool)

(assert (=> bm!7946 (= call!7949 call!7948)))

(declare-fun b!84400 () Bool)

(assert (=> b!84400 (= e!55040 call!7950)))

(declare-fun b!84401 () Bool)

(assert (=> b!84401 (= e!55037 call!7949)))

(declare-fun b!84402 () Bool)

(assert (=> b!84402 (= c!13599 (and ((_ is Cons!1519) (toList!739 lt!38908)) (bvsgt (_1!1111 (h!2109 (toList!739 lt!38908))) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> b!84402 (= e!55041 e!55037)))

(declare-fun bm!7947 () Bool)

(assert (=> bm!7947 (= call!7950 ($colon$colon!70 e!55038 (ite c!13600 (h!2109 (toList!739 lt!38908)) (tuple2!2201 (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(declare-fun c!13602 () Bool)

(assert (=> bm!7947 (= c!13602 c!13600)))

(assert (= (and d!21633 c!13600) b!84400))

(assert (= (and d!21633 (not c!13600)) b!84398))

(assert (= (and b!84398 c!13601) b!84393))

(assert (= (and b!84398 (not c!13601)) b!84402))

(assert (= (and b!84402 c!13599) b!84397))

(assert (= (and b!84402 (not c!13599)) b!84401))

(assert (= (or b!84397 b!84401) bm!7946))

(assert (= (or b!84393 bm!7946) bm!7945))

(assert (= (or b!84400 bm!7945) bm!7947))

(assert (= (and bm!7947 c!13602) b!84396))

(assert (= (and bm!7947 (not c!13602)) b!84395))

(assert (= (and d!21633 res!43561) b!84399))

(assert (= (and b!84399 res!43560) b!84394))

(declare-fun m!88229 () Bool)

(assert (=> bm!7947 m!88229))

(declare-fun m!88231 () Bool)

(assert (=> b!84396 m!88231))

(declare-fun m!88233 () Bool)

(assert (=> d!21633 m!88233))

(declare-fun m!88235 () Bool)

(assert (=> d!21633 m!88235))

(declare-fun m!88237 () Bool)

(assert (=> b!84399 m!88237))

(declare-fun m!88239 () Bool)

(assert (=> b!84394 m!88239))

(assert (=> d!20941 d!21633))

(declare-fun d!21635 () Bool)

(assert (=> d!21635 (isDefined!91 (getValueByKey!137 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun lt!39774 () Unit!2426)

(assert (=> d!21635 (= lt!39774 (choose!500 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun e!55042 () Bool)

(assert (=> d!21635 e!55042))

(declare-fun res!43562 () Bool)

(assert (=> d!21635 (=> (not res!43562) (not e!55042))))

(assert (=> d!21635 (= res!43562 (isStrictlySorted!292 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))))

(assert (=> d!21635 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) lt!39774)))

(declare-fun b!84403 () Bool)

(assert (=> b!84403 (= e!55042 (containsKey!141 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (= (and d!21635 res!43562) b!84403))

(assert (=> d!21635 m!85563))

(assert (=> d!21635 m!86825))

(assert (=> d!21635 m!86825))

(assert (=> d!21635 m!86827))

(assert (=> d!21635 m!85563))

(declare-fun m!88241 () Bool)

(assert (=> d!21635 m!88241))

(declare-fun m!88243 () Bool)

(assert (=> d!21635 m!88243))

(assert (=> b!84403 m!85563))

(assert (=> b!84403 m!86821))

(assert (=> b!83601 d!21635))

(declare-fun d!21637 () Bool)

(assert (=> d!21637 (= (isDefined!91 (getValueByKey!137 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))) (not (isEmpty!338 (getValueByKey!137 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))))

(declare-fun bs!3570 () Bool)

(assert (= bs!3570 d!21637))

(assert (=> bs!3570 m!86825))

(declare-fun m!88245 () Bool)

(assert (=> bs!3570 m!88245))

(assert (=> b!83601 d!21637))

(declare-fun e!55044 () Option!143)

(declare-fun b!84406 () Bool)

(assert (=> b!84406 (= e!55044 (getValueByKey!137 (t!5214 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun d!21639 () Bool)

(declare-fun c!13603 () Bool)

(assert (=> d!21639 (= c!13603 (and ((_ is Cons!1519) (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))) (= (_1!1111 (h!2109 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(declare-fun e!55043 () Option!143)

(assert (=> d!21639 (= (getValueByKey!137 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) e!55043)))

(declare-fun b!84404 () Bool)

(assert (=> b!84404 (= e!55043 (Some!142 (_2!1111 (h!2109 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))))))

(declare-fun b!84407 () Bool)

(assert (=> b!84407 (= e!55044 None!141)))

(declare-fun b!84405 () Bool)

(assert (=> b!84405 (= e!55043 e!55044)))

(declare-fun c!13604 () Bool)

(assert (=> b!84405 (= c!13604 (and ((_ is Cons!1519) (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))) (not (= (_1!1111 (h!2109 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))))

(assert (= (and d!21639 c!13603) b!84404))

(assert (= (and d!21639 (not c!13603)) b!84405))

(assert (= (and b!84405 c!13604) b!84406))

(assert (= (and b!84405 (not c!13604)) b!84407))

(assert (=> b!84406 m!85563))

(declare-fun m!88247 () Bool)

(assert (=> b!84406 m!88247))

(assert (=> b!83601 d!21639))

(declare-fun b!84410 () Bool)

(declare-fun e!55046 () Option!143)

(assert (=> b!84410 (= e!55046 (getValueByKey!137 (t!5214 (t!5214 (toList!739 lt!39077))) (_1!1111 lt!38742)))))

(declare-fun d!21641 () Bool)

(declare-fun c!13605 () Bool)

(assert (=> d!21641 (= c!13605 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!39077))) (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!39077)))) (_1!1111 lt!38742))))))

(declare-fun e!55045 () Option!143)

(assert (=> d!21641 (= (getValueByKey!137 (t!5214 (toList!739 lt!39077)) (_1!1111 lt!38742)) e!55045)))

(declare-fun b!84408 () Bool)

(assert (=> b!84408 (= e!55045 (Some!142 (_2!1111 (h!2109 (t!5214 (toList!739 lt!39077))))))))

(declare-fun b!84411 () Bool)

(assert (=> b!84411 (= e!55046 None!141)))

(declare-fun b!84409 () Bool)

(assert (=> b!84409 (= e!55045 e!55046)))

(declare-fun c!13606 () Bool)

(assert (=> b!84409 (= c!13606 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!39077))) (not (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!39077)))) (_1!1111 lt!38742)))))))

(assert (= (and d!21641 c!13605) b!84408))

(assert (= (and d!21641 (not c!13605)) b!84409))

(assert (= (and b!84409 c!13606) b!84410))

(assert (= (and b!84409 (not c!13606)) b!84411))

(declare-fun m!88249 () Bool)

(assert (=> b!84410 m!88249))

(assert (=> b!83157 d!21641))

(declare-fun d!21643 () Bool)

(declare-fun e!55048 () Bool)

(assert (=> d!21643 e!55048))

(declare-fun res!43563 () Bool)

(assert (=> d!21643 (=> res!43563 e!55048)))

(declare-fun lt!39776 () Bool)

(assert (=> d!21643 (= res!43563 (not lt!39776))))

(declare-fun lt!39778 () Bool)

(assert (=> d!21643 (= lt!39776 lt!39778)))

(declare-fun lt!39777 () Unit!2426)

(declare-fun e!55047 () Unit!2426)

(assert (=> d!21643 (= lt!39777 e!55047)))

(declare-fun c!13607 () Bool)

(assert (=> d!21643 (= c!13607 lt!39778)))

(assert (=> d!21643 (= lt!39778 (containsKey!141 (toList!739 lt!39242) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21643 (= (contains!749 lt!39242 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!39776)))

(declare-fun b!84412 () Bool)

(declare-fun lt!39775 () Unit!2426)

(assert (=> b!84412 (= e!55047 lt!39775)))

(assert (=> b!84412 (= lt!39775 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39242) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> b!84412 (isDefined!91 (getValueByKey!137 (toList!739 lt!39242) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun b!84413 () Bool)

(declare-fun Unit!2486 () Unit!2426)

(assert (=> b!84413 (= e!55047 Unit!2486)))

(declare-fun b!84414 () Bool)

(assert (=> b!84414 (= e!55048 (isDefined!91 (getValueByKey!137 (toList!739 lt!39242) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (= (and d!21643 c!13607) b!84412))

(assert (= (and d!21643 (not c!13607)) b!84413))

(assert (= (and d!21643 (not res!43563)) b!84414))

(declare-fun m!88251 () Bool)

(assert (=> d!21643 m!88251))

(declare-fun m!88253 () Bool)

(assert (=> b!84412 m!88253))

(assert (=> b!84412 m!86483))

(assert (=> b!84412 m!86483))

(declare-fun m!88255 () Bool)

(assert (=> b!84412 m!88255))

(assert (=> b!84414 m!86483))

(assert (=> b!84414 m!86483))

(assert (=> b!84414 m!88255))

(assert (=> d!21005 d!21643))

(declare-fun b!84417 () Bool)

(declare-fun e!55050 () Option!143)

(assert (=> b!84417 (= e!55050 (getValueByKey!137 (t!5214 lt!39241) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun c!13608 () Bool)

(declare-fun d!21645 () Bool)

(assert (=> d!21645 (= c!13608 (and ((_ is Cons!1519) lt!39241) (= (_1!1111 (h!2109 lt!39241)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun e!55049 () Option!143)

(assert (=> d!21645 (= (getValueByKey!137 lt!39241 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) e!55049)))

(declare-fun b!84415 () Bool)

(assert (=> b!84415 (= e!55049 (Some!142 (_2!1111 (h!2109 lt!39241))))))

(declare-fun b!84418 () Bool)

(assert (=> b!84418 (= e!55050 None!141)))

(declare-fun b!84416 () Bool)

(assert (=> b!84416 (= e!55049 e!55050)))

(declare-fun c!13609 () Bool)

(assert (=> b!84416 (= c!13609 (and ((_ is Cons!1519) lt!39241) (not (= (_1!1111 (h!2109 lt!39241)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(assert (= (and d!21645 c!13608) b!84415))

(assert (= (and d!21645 (not c!13608)) b!84416))

(assert (= (and b!84416 c!13609) b!84417))

(assert (= (and b!84416 (not c!13609)) b!84418))

(declare-fun m!88257 () Bool)

(assert (=> b!84417 m!88257))

(assert (=> d!21005 d!21645))

(declare-fun d!21647 () Bool)

(assert (=> d!21647 (= (getValueByKey!137 lt!39241 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun lt!39779 () Unit!2426)

(assert (=> d!21647 (= lt!39779 (choose!497 lt!39241 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun e!55051 () Bool)

(assert (=> d!21647 e!55051))

(declare-fun res!43564 () Bool)

(assert (=> d!21647 (=> (not res!43564) (not e!55051))))

(assert (=> d!21647 (= res!43564 (isStrictlySorted!292 lt!39241))))

(assert (=> d!21647 (= (lemmaContainsTupThenGetReturnValue!57 lt!39241 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!39779)))

(declare-fun b!84419 () Bool)

(declare-fun res!43565 () Bool)

(assert (=> b!84419 (=> (not res!43565) (not e!55051))))

(assert (=> b!84419 (= res!43565 (containsKey!141 lt!39241 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun b!84420 () Bool)

(assert (=> b!84420 (= e!55051 (contains!751 lt!39241 (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (= (and d!21647 res!43564) b!84419))

(assert (= (and b!84419 res!43565) b!84420))

(assert (=> d!21647 m!86477))

(declare-fun m!88259 () Bool)

(assert (=> d!21647 m!88259))

(declare-fun m!88261 () Bool)

(assert (=> d!21647 m!88261))

(declare-fun m!88263 () Bool)

(assert (=> b!84419 m!88263))

(declare-fun m!88265 () Bool)

(assert (=> b!84420 m!88265))

(assert (=> d!21005 d!21647))

(declare-fun b!84421 () Bool)

(declare-fun e!55056 () List!1523)

(declare-fun call!7951 () List!1523)

(assert (=> b!84421 (= e!55056 call!7951)))

(declare-fun b!84422 () Bool)

(declare-fun e!55054 () Bool)

(declare-fun lt!39780 () List!1523)

(assert (=> b!84422 (= e!55054 (contains!751 lt!39780 (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!84423 () Bool)

(declare-fun c!13612 () Bool)

(declare-fun c!13610 () Bool)

(declare-fun e!55053 () List!1523)

(assert (=> b!84423 (= e!55053 (ite c!13612 (t!5214 (toList!739 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) (ite c!13610 (Cons!1519 (h!2109 (toList!739 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) (t!5214 (toList!739 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))) Nil!1520)))))

(declare-fun d!21649 () Bool)

(assert (=> d!21649 e!55054))

(declare-fun res!43567 () Bool)

(assert (=> d!21649 (=> (not res!43567) (not e!55054))))

(assert (=> d!21649 (= res!43567 (isStrictlySorted!292 lt!39780))))

(declare-fun e!55055 () List!1523)

(assert (=> d!21649 (= lt!39780 e!55055)))

(declare-fun c!13611 () Bool)

(assert (=> d!21649 (= c!13611 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) (bvslt (_1!1111 (h!2109 (toList!739 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (=> d!21649 (isStrictlySorted!292 (toList!739 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21649 (= (insertStrictlySorted!60 (toList!739 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!39780)))

(declare-fun b!84424 () Bool)

(assert (=> b!84424 (= e!55053 (insertStrictlySorted!60 (t!5214 (toList!739 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun bm!7948 () Bool)

(declare-fun call!7953 () List!1523)

(assert (=> bm!7948 (= call!7951 call!7953)))

(declare-fun b!84425 () Bool)

(declare-fun e!55052 () List!1523)

(declare-fun call!7952 () List!1523)

(assert (=> b!84425 (= e!55052 call!7952)))

(declare-fun b!84426 () Bool)

(assert (=> b!84426 (= e!55055 e!55056)))

(assert (=> b!84426 (= c!13612 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) (= (_1!1111 (h!2109 (toList!739 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!84427 () Bool)

(declare-fun res!43566 () Bool)

(assert (=> b!84427 (=> (not res!43566) (not e!55054))))

(assert (=> b!84427 (= res!43566 (containsKey!141 lt!39780 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun bm!7949 () Bool)

(assert (=> bm!7949 (= call!7952 call!7951)))

(declare-fun b!84428 () Bool)

(assert (=> b!84428 (= e!55055 call!7953)))

(declare-fun b!84429 () Bool)

(assert (=> b!84429 (= e!55052 call!7952)))

(declare-fun b!84430 () Bool)

(assert (=> b!84430 (= c!13610 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) (bvsgt (_1!1111 (h!2109 (toList!739 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (=> b!84430 (= e!55056 e!55052)))

(declare-fun bm!7950 () Bool)

(assert (=> bm!7950 (= call!7953 ($colon$colon!70 e!55053 (ite c!13611 (h!2109 (toList!739 (+!107 lt!38728 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(declare-fun c!13613 () Bool)

(assert (=> bm!7950 (= c!13613 c!13611)))

(assert (= (and d!21649 c!13611) b!84428))

(assert (= (and d!21649 (not c!13611)) b!84426))

(assert (= (and b!84426 c!13612) b!84421))

(assert (= (and b!84426 (not c!13612)) b!84430))

(assert (= (and b!84430 c!13610) b!84425))

(assert (= (and b!84430 (not c!13610)) b!84429))

(assert (= (or b!84425 b!84429) bm!7949))

(assert (= (or b!84421 bm!7949) bm!7948))

(assert (= (or b!84428 bm!7948) bm!7950))

(assert (= (and bm!7950 c!13613) b!84424))

(assert (= (and bm!7950 (not c!13613)) b!84423))

(assert (= (and d!21649 res!43567) b!84427))

(assert (= (and b!84427 res!43566) b!84422))

(declare-fun m!88267 () Bool)

(assert (=> bm!7950 m!88267))

(declare-fun m!88269 () Bool)

(assert (=> b!84424 m!88269))

(declare-fun m!88271 () Bool)

(assert (=> d!21649 m!88271))

(declare-fun m!88273 () Bool)

(assert (=> d!21649 m!88273))

(declare-fun m!88275 () Bool)

(assert (=> b!84427 m!88275))

(declare-fun m!88277 () Bool)

(assert (=> b!84422 m!88277))

(assert (=> d!21005 d!21649))

(declare-fun b!84431 () Bool)

(declare-fun e!55061 () List!1523)

(declare-fun call!7954 () List!1523)

(assert (=> b!84431 (= e!55061 call!7954)))

(declare-fun b!84432 () Bool)

(declare-fun e!55059 () Bool)

(declare-fun lt!39781 () List!1523)

(assert (=> b!84432 (= e!55059 (contains!751 lt!39781 (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(declare-fun c!13616 () Bool)

(declare-fun e!55058 () List!1523)

(declare-fun b!84433 () Bool)

(declare-fun c!13614 () Bool)

(assert (=> b!84433 (= e!55058 (ite c!13616 (t!5214 (t!5214 (toList!739 lt!38728))) (ite c!13614 (Cons!1519 (h!2109 (t!5214 (toList!739 lt!38728))) (t!5214 (t!5214 (toList!739 lt!38728)))) Nil!1520)))))

(declare-fun d!21651 () Bool)

(assert (=> d!21651 e!55059))

(declare-fun res!43569 () Bool)

(assert (=> d!21651 (=> (not res!43569) (not e!55059))))

(assert (=> d!21651 (= res!43569 (isStrictlySorted!292 lt!39781))))

(declare-fun e!55060 () List!1523)

(assert (=> d!21651 (= lt!39781 e!55060)))

(declare-fun c!13615 () Bool)

(assert (=> d!21651 (= c!13615 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38728))) (bvslt (_1!1111 (h!2109 (t!5214 (toList!739 lt!38728)))) (_1!1111 lt!38742))))))

(assert (=> d!21651 (isStrictlySorted!292 (t!5214 (toList!739 lt!38728)))))

(assert (=> d!21651 (= (insertStrictlySorted!60 (t!5214 (toList!739 lt!38728)) (_1!1111 lt!38742) (_2!1111 lt!38742)) lt!39781)))

(declare-fun b!84434 () Bool)

(assert (=> b!84434 (= e!55058 (insertStrictlySorted!60 (t!5214 (t!5214 (toList!739 lt!38728))) (_1!1111 lt!38742) (_2!1111 lt!38742)))))

(declare-fun bm!7951 () Bool)

(declare-fun call!7956 () List!1523)

(assert (=> bm!7951 (= call!7954 call!7956)))

(declare-fun b!84435 () Bool)

(declare-fun e!55057 () List!1523)

(declare-fun call!7955 () List!1523)

(assert (=> b!84435 (= e!55057 call!7955)))

(declare-fun b!84436 () Bool)

(assert (=> b!84436 (= e!55060 e!55061)))

(assert (=> b!84436 (= c!13616 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38728))) (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!38728)))) (_1!1111 lt!38742))))))

(declare-fun b!84437 () Bool)

(declare-fun res!43568 () Bool)

(assert (=> b!84437 (=> (not res!43568) (not e!55059))))

(assert (=> b!84437 (= res!43568 (containsKey!141 lt!39781 (_1!1111 lt!38742)))))

(declare-fun bm!7952 () Bool)

(assert (=> bm!7952 (= call!7955 call!7954)))

(declare-fun b!84438 () Bool)

(assert (=> b!84438 (= e!55060 call!7956)))

(declare-fun b!84439 () Bool)

(assert (=> b!84439 (= e!55057 call!7955)))

(declare-fun b!84440 () Bool)

(assert (=> b!84440 (= c!13614 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38728))) (bvsgt (_1!1111 (h!2109 (t!5214 (toList!739 lt!38728)))) (_1!1111 lt!38742))))))

(assert (=> b!84440 (= e!55061 e!55057)))

(declare-fun bm!7953 () Bool)

(assert (=> bm!7953 (= call!7956 ($colon$colon!70 e!55058 (ite c!13615 (h!2109 (t!5214 (toList!739 lt!38728))) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742)))))))

(declare-fun c!13617 () Bool)

(assert (=> bm!7953 (= c!13617 c!13615)))

(assert (= (and d!21651 c!13615) b!84438))

(assert (= (and d!21651 (not c!13615)) b!84436))

(assert (= (and b!84436 c!13616) b!84431))

(assert (= (and b!84436 (not c!13616)) b!84440))

(assert (= (and b!84440 c!13614) b!84435))

(assert (= (and b!84440 (not c!13614)) b!84439))

(assert (= (or b!84435 b!84439) bm!7952))

(assert (= (or b!84431 bm!7952) bm!7951))

(assert (= (or b!84438 bm!7951) bm!7953))

(assert (= (and bm!7953 c!13617) b!84434))

(assert (= (and bm!7953 (not c!13617)) b!84433))

(assert (= (and d!21651 res!43569) b!84437))

(assert (= (and b!84437 res!43568) b!84432))

(declare-fun m!88279 () Bool)

(assert (=> bm!7953 m!88279))

(declare-fun m!88281 () Bool)

(assert (=> b!84434 m!88281))

(declare-fun m!88283 () Bool)

(assert (=> d!21651 m!88283))

(assert (=> d!21651 m!87009))

(declare-fun m!88285 () Bool)

(assert (=> b!84437 m!88285))

(declare-fun m!88287 () Bool)

(assert (=> b!84432 m!88287))

(assert (=> b!83331 d!21651))

(declare-fun d!21653 () Bool)

(declare-fun e!55063 () Bool)

(assert (=> d!21653 e!55063))

(declare-fun res!43570 () Bool)

(assert (=> d!21653 (=> res!43570 e!55063)))

(declare-fun lt!39783 () Bool)

(assert (=> d!21653 (= res!43570 (not lt!39783))))

(declare-fun lt!39785 () Bool)

(assert (=> d!21653 (= lt!39783 lt!39785)))

(declare-fun lt!39784 () Unit!2426)

(declare-fun e!55062 () Unit!2426)

(assert (=> d!21653 (= lt!39784 e!55062)))

(declare-fun c!13618 () Bool)

(assert (=> d!21653 (= c!13618 lt!39785)))

(assert (=> d!21653 (= lt!39785 (containsKey!141 (toList!739 lt!39114) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!21653 (= (contains!749 lt!39114 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) lt!39783)))

(declare-fun b!84441 () Bool)

(declare-fun lt!39782 () Unit!2426)

(assert (=> b!84441 (= e!55062 lt!39782)))

(assert (=> b!84441 (= lt!39782 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39114) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84441 (isDefined!91 (getValueByKey!137 (toList!739 lt!39114) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84442 () Bool)

(declare-fun Unit!2487 () Unit!2426)

(assert (=> b!84442 (= e!55062 Unit!2487)))

(declare-fun b!84443 () Bool)

(assert (=> b!84443 (= e!55063 (isDefined!91 (getValueByKey!137 (toList!739 lt!39114) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!21653 c!13618) b!84441))

(assert (= (and d!21653 (not c!13618)) b!84442))

(assert (= (and d!21653 (not res!43570)) b!84443))

(assert (=> d!21653 m!86045))

(declare-fun m!88289 () Bool)

(assert (=> d!21653 m!88289))

(assert (=> b!84441 m!86045))

(declare-fun m!88291 () Bool)

(assert (=> b!84441 m!88291))

(assert (=> b!84441 m!86045))

(assert (=> b!84441 m!88195))

(assert (=> b!84441 m!88195))

(declare-fun m!88293 () Bool)

(assert (=> b!84441 m!88293))

(assert (=> b!84443 m!86045))

(assert (=> b!84443 m!88195))

(assert (=> b!84443 m!88195))

(assert (=> b!84443 m!88293))

(assert (=> b!83242 d!21653))

(declare-fun d!21655 () Bool)

(assert (=> d!21655 (= (get!1196 (getValueByKey!137 (toList!739 lt!38907) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2628 (getValueByKey!137 (toList!739 lt!38907) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21021 d!21655))

(assert (=> d!21021 d!21377))

(assert (=> b!83647 d!21375))

(assert (=> b!83647 d!21377))

(assert (=> d!21139 d!21137))

(declare-fun d!21657 () Bool)

(assert (=> d!21657 (= (getValueByKey!137 lt!39031 (_1!1111 lt!38742)) (Some!142 (_2!1111 lt!38742)))))

(assert (=> d!21657 true))

(declare-fun _$22!411 () Unit!2426)

(assert (=> d!21657 (= (choose!497 lt!39031 (_1!1111 lt!38742) (_2!1111 lt!38742)) _$22!411)))

(declare-fun bs!3571 () Bool)

(assert (= bs!3571 d!21657))

(assert (=> bs!3571 m!85911))

(assert (=> d!21139 d!21657))

(declare-fun d!21659 () Bool)

(declare-fun res!43571 () Bool)

(declare-fun e!55064 () Bool)

(assert (=> d!21659 (=> res!43571 e!55064)))

(assert (=> d!21659 (= res!43571 (or ((_ is Nil!1520) lt!39031) ((_ is Nil!1520) (t!5214 lt!39031))))))

(assert (=> d!21659 (= (isStrictlySorted!292 lt!39031) e!55064)))

(declare-fun b!84444 () Bool)

(declare-fun e!55065 () Bool)

(assert (=> b!84444 (= e!55064 e!55065)))

(declare-fun res!43572 () Bool)

(assert (=> b!84444 (=> (not res!43572) (not e!55065))))

(assert (=> b!84444 (= res!43572 (bvslt (_1!1111 (h!2109 lt!39031)) (_1!1111 (h!2109 (t!5214 lt!39031)))))))

(declare-fun b!84445 () Bool)

(assert (=> b!84445 (= e!55065 (isStrictlySorted!292 (t!5214 lt!39031)))))

(assert (= (and d!21659 (not res!43571)) b!84444))

(assert (= (and b!84444 res!43572) b!84445))

(declare-fun m!88295 () Bool)

(assert (=> b!84445 m!88295))

(assert (=> d!21139 d!21659))

(declare-fun d!21661 () Bool)

(declare-fun lt!39786 () Bool)

(assert (=> d!21661 (= lt!39786 (select (content!87 lt!39027) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(declare-fun e!55066 () Bool)

(assert (=> d!21661 (= lt!39786 e!55066)))

(declare-fun res!43573 () Bool)

(assert (=> d!21661 (=> (not res!43573) (not e!55066))))

(assert (=> d!21661 (= res!43573 ((_ is Cons!1519) lt!39027))))

(assert (=> d!21661 (= (contains!751 lt!39027 (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))) lt!39786)))

(declare-fun b!84446 () Bool)

(declare-fun e!55067 () Bool)

(assert (=> b!84446 (= e!55066 e!55067)))

(declare-fun res!43574 () Bool)

(assert (=> b!84446 (=> res!43574 e!55067)))

(assert (=> b!84446 (= res!43574 (= (h!2109 lt!39027) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(declare-fun b!84447 () Bool)

(assert (=> b!84447 (= e!55067 (contains!751 (t!5214 lt!39027) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(assert (= (and d!21661 res!43573) b!84446))

(assert (= (and b!84446 (not res!43574)) b!84447))

(declare-fun m!88297 () Bool)

(assert (=> d!21661 m!88297))

(declare-fun m!88299 () Bool)

(assert (=> d!21661 m!88299))

(declare-fun m!88301 () Bool)

(assert (=> b!84447 m!88301))

(assert (=> b!83380 d!21661))

(assert (=> b!83178 d!21261))

(declare-fun d!21663 () Bool)

(declare-fun lt!39787 () Bool)

(assert (=> d!21663 (= lt!39787 (select (content!87 lt!39431) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun e!55068 () Bool)

(assert (=> d!21663 (= lt!39787 e!55068)))

(declare-fun res!43575 () Bool)

(assert (=> d!21663 (=> (not res!43575) (not e!55068))))

(assert (=> d!21663 (= res!43575 ((_ is Cons!1519) lt!39431))))

(assert (=> d!21663 (= (contains!751 lt!39431 (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))) lt!39787)))

(declare-fun b!84448 () Bool)

(declare-fun e!55069 () Bool)

(assert (=> b!84448 (= e!55068 e!55069)))

(declare-fun res!43576 () Bool)

(assert (=> b!84448 (=> res!43576 e!55069)))

(assert (=> b!84448 (= res!43576 (= (h!2109 lt!39431) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun b!84449 () Bool)

(assert (=> b!84449 (= e!55069 (contains!751 (t!5214 lt!39431) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(assert (= (and d!21663 res!43575) b!84448))

(assert (= (and b!84448 (not res!43576)) b!84449))

(declare-fun m!88303 () Bool)

(assert (=> d!21663 m!88303))

(declare-fun m!88305 () Bool)

(assert (=> d!21663 m!88305))

(declare-fun m!88307 () Bool)

(assert (=> b!84449 m!88307))

(assert (=> b!83617 d!21663))

(declare-fun d!21665 () Bool)

(assert (=> d!21665 (= (get!1195 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83444 d!21665))

(declare-fun lt!39788 () Bool)

(declare-fun d!21667 () Bool)

(assert (=> d!21667 (= lt!39788 (select (content!87 (toList!739 lt!39164)) (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun e!55070 () Bool)

(assert (=> d!21667 (= lt!39788 e!55070)))

(declare-fun res!43577 () Bool)

(assert (=> d!21667 (=> (not res!43577) (not e!55070))))

(assert (=> d!21667 (= res!43577 ((_ is Cons!1519) (toList!739 lt!39164)))))

(assert (=> d!21667 (= (contains!751 (toList!739 lt!39164) (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39788)))

(declare-fun b!84450 () Bool)

(declare-fun e!55071 () Bool)

(assert (=> b!84450 (= e!55070 e!55071)))

(declare-fun res!43578 () Bool)

(assert (=> b!84450 (=> res!43578 e!55071)))

(assert (=> b!84450 (= res!43578 (= (h!2109 (toList!739 lt!39164)) (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!84451 () Bool)

(assert (=> b!84451 (= e!55071 (contains!751 (t!5214 (toList!739 lt!39164)) (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!21667 res!43577) b!84450))

(assert (= (and b!84450 (not res!43578)) b!84451))

(declare-fun m!88309 () Bool)

(assert (=> d!21667 m!88309))

(declare-fun m!88311 () Bool)

(assert (=> d!21667 m!88311))

(declare-fun m!88313 () Bool)

(assert (=> b!84451 m!88313))

(assert (=> b!83281 d!21667))

(declare-fun b!84464 () Bool)

(declare-fun e!55078 () SeekEntryResult!245)

(assert (=> b!84464 (= e!55078 Undefined!245)))

(declare-fun b!84465 () Bool)

(declare-fun e!55079 () SeekEntryResult!245)

(assert (=> b!84465 (= e!55078 e!55079)))

(declare-fun c!13627 () Bool)

(declare-fun lt!39793 () (_ BitVec 64))

(assert (=> b!84465 (= c!13627 (= lt!39793 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun d!21669 () Bool)

(declare-fun lt!39794 () SeekEntryResult!245)

(assert (=> d!21669 (and (or ((_ is Undefined!245) lt!39794) (not ((_ is Found!245) lt!39794)) (and (bvsge (index!3117 lt!39794) #b00000000000000000000000000000000) (bvslt (index!3117 lt!39794) (size!2144 (_keys!3983 newMap!16))))) (or ((_ is Undefined!245) lt!39794) ((_ is Found!245) lt!39794) (not ((_ is MissingVacant!245) lt!39794)) (not (= (index!3119 lt!39794) (index!3118 lt!39106))) (and (bvsge (index!3119 lt!39794) #b00000000000000000000000000000000) (bvslt (index!3119 lt!39794) (size!2144 (_keys!3983 newMap!16))))) (or ((_ is Undefined!245) lt!39794) (ite ((_ is Found!245) lt!39794) (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!39794)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (and ((_ is MissingVacant!245) lt!39794) (= (index!3119 lt!39794) (index!3118 lt!39106)) (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3119 lt!39794)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!21669 (= lt!39794 e!55078)))

(declare-fun c!13625 () Bool)

(assert (=> d!21669 (= c!13625 (bvsge (x!11853 lt!39106) #b01111111111111111111111111111110))))

(assert (=> d!21669 (= lt!39793 (select (arr!1900 (_keys!3983 newMap!16)) (index!3118 lt!39106)))))

(assert (=> d!21669 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21669 (= (seekKeyOrZeroReturnVacant!0 (x!11853 lt!39106) (index!3118 lt!39106) (index!3118 lt!39106) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (mask!6333 newMap!16)) lt!39794)))

(declare-fun b!84466 () Bool)

(declare-fun c!13626 () Bool)

(assert (=> b!84466 (= c!13626 (= lt!39793 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55080 () SeekEntryResult!245)

(assert (=> b!84466 (= e!55079 e!55080)))

(declare-fun b!84467 () Bool)

(assert (=> b!84467 (= e!55079 (Found!245 (index!3118 lt!39106)))))

(declare-fun b!84468 () Bool)

(assert (=> b!84468 (= e!55080 (MissingVacant!245 (index!3118 lt!39106)))))

(declare-fun b!84469 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!84469 (= e!55080 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11853 lt!39106) #b00000000000000000000000000000001) (nextIndex!0 (index!3118 lt!39106) (x!11853 lt!39106) (mask!6333 newMap!16)) (index!3118 lt!39106) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(assert (= (and d!21669 c!13625) b!84464))

(assert (= (and d!21669 (not c!13625)) b!84465))

(assert (= (and b!84465 c!13627) b!84467))

(assert (= (and b!84465 (not c!13627)) b!84466))

(assert (= (and b!84466 c!13626) b!84468))

(assert (= (and b!84466 (not c!13626)) b!84469))

(declare-fun m!88315 () Bool)

(assert (=> d!21669 m!88315))

(declare-fun m!88317 () Bool)

(assert (=> d!21669 m!88317))

(assert (=> d!21669 m!86075))

(assert (=> d!21669 m!86067))

(declare-fun m!88319 () Bool)

(assert (=> b!84469 m!88319))

(assert (=> b!84469 m!88319))

(assert (=> b!84469 m!85563))

(declare-fun m!88321 () Bool)

(assert (=> b!84469 m!88321))

(assert (=> b!83219 d!21669))

(declare-fun b!84472 () Bool)

(declare-fun e!55082 () Option!143)

(assert (=> b!84472 (= e!55082 (getValueByKey!137 (t!5214 (t!5214 (toList!739 lt!39068))) (_1!1111 lt!38729)))))

(declare-fun d!21671 () Bool)

(declare-fun c!13628 () Bool)

(assert (=> d!21671 (= c!13628 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!39068))) (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!39068)))) (_1!1111 lt!38729))))))

(declare-fun e!55081 () Option!143)

(assert (=> d!21671 (= (getValueByKey!137 (t!5214 (toList!739 lt!39068)) (_1!1111 lt!38729)) e!55081)))

(declare-fun b!84470 () Bool)

(assert (=> b!84470 (= e!55081 (Some!142 (_2!1111 (h!2109 (t!5214 (toList!739 lt!39068))))))))

(declare-fun b!84473 () Bool)

(assert (=> b!84473 (= e!55082 None!141)))

(declare-fun b!84471 () Bool)

(assert (=> b!84471 (= e!55081 e!55082)))

(declare-fun c!13629 () Bool)

(assert (=> b!84471 (= c!13629 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!39068))) (not (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!39068)))) (_1!1111 lt!38729)))))))

(assert (= (and d!21671 c!13628) b!84470))

(assert (= (and d!21671 (not c!13628)) b!84471))

(assert (= (and b!84471 c!13629) b!84472))

(assert (= (and b!84471 (not c!13629)) b!84473))

(declare-fun m!88323 () Bool)

(assert (=> b!84472 m!88323))

(assert (=> b!83370 d!21671))

(declare-fun d!21673 () Bool)

(declare-fun c!13630 () Bool)

(assert (=> d!21673 (= c!13630 ((_ is Nil!1520) (toList!739 lt!39032)))))

(declare-fun e!55083 () (InoxSet tuple2!2200))

(assert (=> d!21673 (= (content!87 (toList!739 lt!39032)) e!55083)))

(declare-fun b!84474 () Bool)

(assert (=> b!84474 (= e!55083 ((as const (Array tuple2!2200 Bool)) false))))

(declare-fun b!84475 () Bool)

(assert (=> b!84475 (= e!55083 ((_ map or) (store ((as const (Array tuple2!2200 Bool)) false) (h!2109 (toList!739 lt!39032)) true) (content!87 (t!5214 (toList!739 lt!39032)))))))

(assert (= (and d!21673 c!13630) b!84474))

(assert (= (and d!21673 (not c!13630)) b!84475))

(declare-fun m!88325 () Bool)

(assert (=> b!84475 m!88325))

(declare-fun m!88327 () Bool)

(assert (=> b!84475 m!88327))

(assert (=> d!20913 d!21673))

(assert (=> b!83628 d!21453))

(assert (=> b!83628 d!20995))

(declare-fun lt!39795 () Bool)

(declare-fun d!21675 () Bool)

(assert (=> d!21675 (= lt!39795 (select (content!87 (toList!739 lt!39158)) (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun e!55084 () Bool)

(assert (=> d!21675 (= lt!39795 e!55084)))

(declare-fun res!43579 () Bool)

(assert (=> d!21675 (=> (not res!43579) (not e!55084))))

(assert (=> d!21675 (= res!43579 ((_ is Cons!1519) (toList!739 lt!39158)))))

(assert (=> d!21675 (= (contains!751 (toList!739 lt!39158) (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39795)))

(declare-fun b!84476 () Bool)

(declare-fun e!55085 () Bool)

(assert (=> b!84476 (= e!55084 e!55085)))

(declare-fun res!43580 () Bool)

(assert (=> b!84476 (=> res!43580 e!55085)))

(assert (=> b!84476 (= res!43580 (= (h!2109 (toList!739 lt!39158)) (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!84477 () Bool)

(assert (=> b!84477 (= e!55085 (contains!751 (t!5214 (toList!739 lt!39158)) (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!21675 res!43579) b!84476))

(assert (= (and b!84476 (not res!43580)) b!84477))

(declare-fun m!88329 () Bool)

(assert (=> d!21675 m!88329))

(declare-fun m!88331 () Bool)

(assert (=> d!21675 m!88331))

(declare-fun m!88333 () Bool)

(assert (=> b!84477 m!88333))

(assert (=> b!83277 d!21675))

(declare-fun b!84496 () Bool)

(declare-fun e!55096 () Bool)

(declare-fun lt!39800 () SeekEntryResult!245)

(assert (=> b!84496 (= e!55096 (bvsge (x!11853 lt!39800) #b01111111111111111111111111111110))))

(declare-fun e!55097 () SeekEntryResult!245)

(declare-fun b!84498 () Bool)

(assert (=> b!84498 (= e!55097 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (mask!6333 newMap!16)) #b00000000000000000000000000000000 (mask!6333 newMap!16)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(declare-fun b!84499 () Bool)

(declare-fun e!55098 () SeekEntryResult!245)

(assert (=> b!84499 (= e!55098 e!55097)))

(declare-fun lt!39801 () (_ BitVec 64))

(declare-fun c!13637 () Bool)

(assert (=> b!84499 (= c!13637 (or (= lt!39801 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (= (bvadd lt!39801 lt!39801) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84500 () Bool)

(assert (=> b!84500 (= e!55097 (Intermediate!245 false (toIndex!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (mask!6333 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!84501 () Bool)

(declare-fun e!55100 () Bool)

(assert (=> b!84501 (= e!55096 e!55100)))

(declare-fun res!43589 () Bool)

(assert (=> b!84501 (= res!43589 (and ((_ is Intermediate!245) lt!39800) (not (undefined!1057 lt!39800)) (bvslt (x!11853 lt!39800) #b01111111111111111111111111111110) (bvsge (x!11853 lt!39800) #b00000000000000000000000000000000) (bvsge (x!11853 lt!39800) #b00000000000000000000000000000000)))))

(assert (=> b!84501 (=> (not res!43589) (not e!55100))))

(declare-fun b!84502 () Bool)

(assert (=> b!84502 (and (bvsge (index!3118 lt!39800) #b00000000000000000000000000000000) (bvslt (index!3118 lt!39800) (size!2144 (_keys!3983 newMap!16))))))

(declare-fun res!43588 () Bool)

(assert (=> b!84502 (= res!43588 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3118 lt!39800)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55099 () Bool)

(assert (=> b!84502 (=> res!43588 e!55099)))

(declare-fun d!21677 () Bool)

(assert (=> d!21677 e!55096))

(declare-fun c!13639 () Bool)

(assert (=> d!21677 (= c!13639 (and ((_ is Intermediate!245) lt!39800) (undefined!1057 lt!39800)))))

(assert (=> d!21677 (= lt!39800 e!55098)))

(declare-fun c!13638 () Bool)

(assert (=> d!21677 (= c!13638 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!21677 (= lt!39801 (select (arr!1900 (_keys!3983 newMap!16)) (toIndex!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (mask!6333 newMap!16))))))

(assert (=> d!21677 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21677 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (mask!6333 newMap!16)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (mask!6333 newMap!16)) lt!39800)))

(declare-fun b!84497 () Bool)

(assert (=> b!84497 (and (bvsge (index!3118 lt!39800) #b00000000000000000000000000000000) (bvslt (index!3118 lt!39800) (size!2144 (_keys!3983 newMap!16))))))

(declare-fun res!43587 () Bool)

(assert (=> b!84497 (= res!43587 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3118 lt!39800)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> b!84497 (=> res!43587 e!55099)))

(assert (=> b!84497 (= e!55100 e!55099)))

(declare-fun b!84503 () Bool)

(assert (=> b!84503 (and (bvsge (index!3118 lt!39800) #b00000000000000000000000000000000) (bvslt (index!3118 lt!39800) (size!2144 (_keys!3983 newMap!16))))))

(assert (=> b!84503 (= e!55099 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3118 lt!39800)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84504 () Bool)

(assert (=> b!84504 (= e!55098 (Intermediate!245 true (toIndex!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (mask!6333 newMap!16)) #b00000000000000000000000000000000))))

(assert (= (and d!21677 c!13638) b!84504))

(assert (= (and d!21677 (not c!13638)) b!84499))

(assert (= (and b!84499 c!13637) b!84500))

(assert (= (and b!84499 (not c!13637)) b!84498))

(assert (= (and d!21677 c!13639) b!84496))

(assert (= (and d!21677 (not c!13639)) b!84501))

(assert (= (and b!84501 res!43589) b!84497))

(assert (= (and b!84497 (not res!43587)) b!84502))

(assert (= (and b!84502 (not res!43588)) b!84503))

(declare-fun m!88335 () Bool)

(assert (=> b!84503 m!88335))

(assert (=> b!84502 m!88335))

(assert (=> d!21677 m!86077))

(declare-fun m!88337 () Bool)

(assert (=> d!21677 m!88337))

(assert (=> d!21677 m!86067))

(assert (=> b!84498 m!86077))

(declare-fun m!88339 () Bool)

(assert (=> b!84498 m!88339))

(assert (=> b!84498 m!88339))

(assert (=> b!84498 m!85563))

(declare-fun m!88341 () Bool)

(assert (=> b!84498 m!88341))

(assert (=> b!84497 m!88335))

(assert (=> d!20909 d!21677))

(declare-fun d!21679 () Bool)

(declare-fun lt!39807 () (_ BitVec 32))

(declare-fun lt!39806 () (_ BitVec 32))

(assert (=> d!21679 (= lt!39807 (bvmul (bvxor lt!39806 (bvlshr lt!39806 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!21679 (= lt!39806 ((_ extract 31 0) (bvand (bvxor (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvlshr (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!21679 (and (bvsge (mask!6333 newMap!16) #b00000000000000000000000000000000) (let ((res!43590 (let ((h!2111 ((_ extract 31 0) (bvand (bvxor (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvlshr (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11956 (bvmul (bvxor h!2111 (bvlshr h!2111 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11956 (bvlshr x!11956 #b00000000000000000000000000001101)) (mask!6333 newMap!16)))))) (and (bvslt res!43590 (bvadd (mask!6333 newMap!16) #b00000000000000000000000000000001)) (bvsge res!43590 #b00000000000000000000000000000000))))))

(assert (=> d!21679 (= (toIndex!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (mask!6333 newMap!16)) (bvand (bvxor lt!39807 (bvlshr lt!39807 #b00000000000000000000000000001101)) (mask!6333 newMap!16)))))

(assert (=> d!20909 d!21679))

(assert (=> d!20909 d!21305))

(declare-fun d!21681 () Bool)

(declare-fun lt!39808 () Bool)

(assert (=> d!21681 (= lt!39808 (select (content!87 (toList!739 lt!39148)) (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun e!55101 () Bool)

(assert (=> d!21681 (= lt!39808 e!55101)))

(declare-fun res!43591 () Bool)

(assert (=> d!21681 (=> (not res!43591) (not e!55101))))

(assert (=> d!21681 (= res!43591 ((_ is Cons!1519) (toList!739 lt!39148)))))

(assert (=> d!21681 (= (contains!751 (toList!739 lt!39148) (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!39808)))

(declare-fun b!84505 () Bool)

(declare-fun e!55102 () Bool)

(assert (=> b!84505 (= e!55101 e!55102)))

(declare-fun res!43592 () Bool)

(assert (=> b!84505 (=> res!43592 e!55102)))

(assert (=> b!84505 (= res!43592 (= (h!2109 (toList!739 lt!39148)) (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!84506 () Bool)

(assert (=> b!84506 (= e!55102 (contains!751 (t!5214 (toList!739 lt!39148)) (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))

(assert (= (and d!21681 res!43591) b!84505))

(assert (= (and b!84505 (not res!43592)) b!84506))

(declare-fun m!88343 () Bool)

(assert (=> d!21681 m!88343))

(declare-fun m!88345 () Bool)

(assert (=> d!21681 m!88345))

(declare-fun m!88347 () Bool)

(assert (=> b!84506 m!88347))

(assert (=> b!83270 d!21681))

(assert (=> b!83264 d!21187))

(assert (=> b!83164 d!21261))

(declare-fun b!84509 () Bool)

(declare-fun e!55104 () Option!143)

(assert (=> b!84509 (= e!55104 (getValueByKey!137 (t!5214 (t!5214 (toList!739 lt!39028))) (_1!1111 lt!38738)))))

(declare-fun d!21683 () Bool)

(declare-fun c!13640 () Bool)

(assert (=> d!21683 (= c!13640 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!39028))) (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!39028)))) (_1!1111 lt!38738))))))

(declare-fun e!55103 () Option!143)

(assert (=> d!21683 (= (getValueByKey!137 (t!5214 (toList!739 lt!39028)) (_1!1111 lt!38738)) e!55103)))

(declare-fun b!84507 () Bool)

(assert (=> b!84507 (= e!55103 (Some!142 (_2!1111 (h!2109 (t!5214 (toList!739 lt!39028))))))))

(declare-fun b!84510 () Bool)

(assert (=> b!84510 (= e!55104 None!141)))

(declare-fun b!84508 () Bool)

(assert (=> b!84508 (= e!55103 e!55104)))

(declare-fun c!13641 () Bool)

(assert (=> b!84508 (= c!13641 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!39028))) (not (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!39028)))) (_1!1111 lt!38738)))))))

(assert (= (and d!21683 c!13640) b!84507))

(assert (= (and d!21683 (not c!13640)) b!84508))

(assert (= (and b!84508 c!13641) b!84509))

(assert (= (and b!84508 (not c!13641)) b!84510))

(declare-fun m!88349 () Bool)

(assert (=> b!84509 m!88349))

(assert (=> b!83593 d!21683))

(declare-fun b!84513 () Bool)

(declare-fun e!55106 () Option!143)

(assert (=> b!84513 (= e!55106 (getValueByKey!137 (t!5214 (t!5214 (toList!739 lt!39061))) (_1!1111 lt!38729)))))

(declare-fun d!21685 () Bool)

(declare-fun c!13642 () Bool)

(assert (=> d!21685 (= c!13642 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!39061))) (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!39061)))) (_1!1111 lt!38729))))))

(declare-fun e!55105 () Option!143)

(assert (=> d!21685 (= (getValueByKey!137 (t!5214 (toList!739 lt!39061)) (_1!1111 lt!38729)) e!55105)))

(declare-fun b!84511 () Bool)

(assert (=> b!84511 (= e!55105 (Some!142 (_2!1111 (h!2109 (t!5214 (toList!739 lt!39061))))))))

(declare-fun b!84514 () Bool)

(assert (=> b!84514 (= e!55106 None!141)))

(declare-fun b!84512 () Bool)

(assert (=> b!84512 (= e!55105 e!55106)))

(declare-fun c!13643 () Bool)

(assert (=> b!84512 (= c!13643 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!39061))) (not (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!39061)))) (_1!1111 lt!38729)))))))

(assert (= (and d!21685 c!13642) b!84511))

(assert (= (and d!21685 (not c!13642)) b!84512))

(assert (= (and b!84512 c!13643) b!84513))

(assert (= (and b!84512 (not c!13643)) b!84514))

(declare-fun m!88351 () Bool)

(assert (=> b!84513 m!88351))

(assert (=> b!83393 d!21685))

(declare-fun d!21687 () Bool)

(declare-fun res!43593 () Bool)

(declare-fun e!55107 () Bool)

(assert (=> d!21687 (=> res!43593 e!55107)))

(assert (=> d!21687 (= res!43593 (and ((_ is Cons!1519) lt!39056) (= (_1!1111 (h!2109 lt!39056)) (_1!1111 lt!38729))))))

(assert (=> d!21687 (= (containsKey!141 lt!39056 (_1!1111 lt!38729)) e!55107)))

(declare-fun b!84515 () Bool)

(declare-fun e!55108 () Bool)

(assert (=> b!84515 (= e!55107 e!55108)))

(declare-fun res!43594 () Bool)

(assert (=> b!84515 (=> (not res!43594) (not e!55108))))

(assert (=> b!84515 (= res!43594 (and (or (not ((_ is Cons!1519) lt!39056)) (bvsle (_1!1111 (h!2109 lt!39056)) (_1!1111 lt!38729))) ((_ is Cons!1519) lt!39056) (bvslt (_1!1111 (h!2109 lt!39056)) (_1!1111 lt!38729))))))

(declare-fun b!84516 () Bool)

(assert (=> b!84516 (= e!55108 (containsKey!141 (t!5214 lt!39056) (_1!1111 lt!38729)))))

(assert (= (and d!21687 (not res!43593)) b!84515))

(assert (= (and b!84515 res!43594) b!84516))

(declare-fun m!88353 () Bool)

(assert (=> b!84516 m!88353))

(assert (=> b!83633 d!21687))

(declare-fun d!21689 () Bool)

(declare-fun lt!39809 () Bool)

(assert (=> d!21689 (= lt!39809 (select (content!87 lt!39314) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun e!55109 () Bool)

(assert (=> d!21689 (= lt!39809 e!55109)))

(declare-fun res!43595 () Bool)

(assert (=> d!21689 (=> (not res!43595) (not e!55109))))

(assert (=> d!21689 (= res!43595 ((_ is Cons!1519) lt!39314))))

(assert (=> d!21689 (= (contains!751 lt!39314 (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))) lt!39809)))

(declare-fun b!84517 () Bool)

(declare-fun e!55110 () Bool)

(assert (=> b!84517 (= e!55109 e!55110)))

(declare-fun res!43596 () Bool)

(assert (=> b!84517 (=> res!43596 e!55110)))

(assert (=> b!84517 (= res!43596 (= (h!2109 lt!39314) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun b!84518 () Bool)

(assert (=> b!84518 (= e!55110 (contains!751 (t!5214 lt!39314) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(assert (= (and d!21689 res!43595) b!84517))

(assert (= (and b!84517 (not res!43596)) b!84518))

(declare-fun m!88355 () Bool)

(assert (=> d!21689 m!88355))

(declare-fun m!88357 () Bool)

(assert (=> d!21689 m!88357))

(declare-fun m!88359 () Bool)

(assert (=> b!84518 m!88359))

(assert (=> b!83514 d!21689))

(declare-fun d!21691 () Bool)

(assert (=> d!21691 (= (isEmpty!336 lt!39140) (isEmpty!337 (toList!739 lt!39140)))))

(declare-fun bs!3572 () Bool)

(assert (= bs!3572 d!21691))

(declare-fun m!88361 () Bool)

(assert (=> bs!3572 m!88361))

(assert (=> b!83257 d!21691))

(assert (=> b!83340 d!21433))

(assert (=> b!83340 d!21435))

(declare-fun d!21693 () Bool)

(declare-fun res!43597 () Bool)

(declare-fun e!55111 () Bool)

(assert (=> d!21693 (=> res!43597 e!55111)))

(assert (=> d!21693 (= res!43597 (and ((_ is Cons!1519) lt!39437) (= (_1!1111 (h!2109 lt!39437)) (_1!1111 lt!38729))))))

(assert (=> d!21693 (= (containsKey!141 lt!39437 (_1!1111 lt!38729)) e!55111)))

(declare-fun b!84519 () Bool)

(declare-fun e!55112 () Bool)

(assert (=> b!84519 (= e!55111 e!55112)))

(declare-fun res!43598 () Bool)

(assert (=> b!84519 (=> (not res!43598) (not e!55112))))

(assert (=> b!84519 (= res!43598 (and (or (not ((_ is Cons!1519) lt!39437)) (bvsle (_1!1111 (h!2109 lt!39437)) (_1!1111 lt!38729))) ((_ is Cons!1519) lt!39437) (bvslt (_1!1111 (h!2109 lt!39437)) (_1!1111 lt!38729))))))

(declare-fun b!84520 () Bool)

(assert (=> b!84520 (= e!55112 (containsKey!141 (t!5214 lt!39437) (_1!1111 lt!38729)))))

(assert (= (and d!21693 (not res!43597)) b!84519))

(assert (= (and b!84519 res!43598) b!84520))

(declare-fun m!88363 () Bool)

(assert (=> b!84520 m!88363))

(assert (=> b!83641 d!21693))

(declare-fun d!21695 () Bool)

(assert (=> d!21695 (= (get!1196 (getValueByKey!137 (toList!739 lt!39053) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2628 (getValueByKey!137 (toList!739 lt!39053) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!21063 d!21695))

(assert (=> d!21063 d!21195))

(declare-fun bm!7954 () Bool)

(declare-fun call!7957 () Bool)

(declare-fun c!13644 () Bool)

(assert (=> bm!7954 (= call!7957 (arrayNoDuplicates!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13644 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!13275 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519)) (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519))) (ite c!13275 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519)) (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519)))))))

(declare-fun d!21697 () Bool)

(declare-fun res!43601 () Bool)

(declare-fun e!55114 () Bool)

(assert (=> d!21697 (=> res!43601 e!55114)))

(assert (=> d!21697 (= res!43601 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(assert (=> d!21697 (= (arrayNoDuplicates!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13275 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519)) (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519))) e!55114)))

(declare-fun b!84521 () Bool)

(declare-fun e!55115 () Bool)

(assert (=> b!84521 (= e!55115 call!7957)))

(declare-fun b!84522 () Bool)

(assert (=> b!84522 (= e!55115 call!7957)))

(declare-fun b!84523 () Bool)

(declare-fun e!55116 () Bool)

(assert (=> b!84523 (= e!55116 (contains!750 (ite c!13275 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519)) (ite c!13162 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) Nil!1519) Nil!1519)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!84524 () Bool)

(declare-fun e!55113 () Bool)

(assert (=> b!84524 (= e!55113 e!55115)))

(assert (=> b!84524 (= c!13644 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!84525 () Bool)

(assert (=> b!84525 (= e!55114 e!55113)))

(declare-fun res!43600 () Bool)

(assert (=> b!84525 (=> (not res!43600) (not e!55113))))

(assert (=> b!84525 (= res!43600 (not e!55116))))

(declare-fun res!43599 () Bool)

(assert (=> b!84525 (=> (not res!43599) (not e!55116))))

(assert (=> b!84525 (= res!43599 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!21697 (not res!43601)) b!84525))

(assert (= (and b!84525 res!43599) b!84523))

(assert (= (and b!84525 res!43600) b!84524))

(assert (= (and b!84524 c!13644) b!84521))

(assert (= (and b!84524 (not c!13644)) b!84522))

(assert (= (or b!84521 b!84522) bm!7954))

(declare-fun m!88365 () Bool)

(assert (=> bm!7954 m!88365))

(declare-fun m!88367 () Bool)

(assert (=> bm!7954 m!88367))

(assert (=> b!84523 m!88365))

(assert (=> b!84523 m!88365))

(declare-fun m!88369 () Bool)

(assert (=> b!84523 m!88369))

(assert (=> b!84524 m!88365))

(assert (=> b!84524 m!88365))

(declare-fun m!88371 () Bool)

(assert (=> b!84524 m!88371))

(assert (=> b!84525 m!88365))

(assert (=> b!84525 m!88365))

(assert (=> b!84525 m!88371))

(assert (=> bm!7822 d!21697))

(declare-fun d!21699 () Bool)

(declare-fun e!55117 () Bool)

(assert (=> d!21699 e!55117))

(declare-fun res!43602 () Bool)

(assert (=> d!21699 (=> (not res!43602) (not e!55117))))

(declare-fun lt!39811 () ListLongMap!1447)

(assert (=> d!21699 (= res!43602 (contains!749 lt!39811 (_1!1111 (tuple2!2201 lt!39454 (minValue!2210 newMap!16)))))))

(declare-fun lt!39810 () List!1523)

(assert (=> d!21699 (= lt!39811 (ListLongMap!1448 lt!39810))))

(declare-fun lt!39813 () Unit!2426)

(declare-fun lt!39812 () Unit!2426)

(assert (=> d!21699 (= lt!39813 lt!39812)))

(assert (=> d!21699 (= (getValueByKey!137 lt!39810 (_1!1111 (tuple2!2201 lt!39454 (minValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39454 (minValue!2210 newMap!16)))))))

(assert (=> d!21699 (= lt!39812 (lemmaContainsTupThenGetReturnValue!57 lt!39810 (_1!1111 (tuple2!2201 lt!39454 (minValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39454 (minValue!2210 newMap!16)))))))

(assert (=> d!21699 (= lt!39810 (insertStrictlySorted!60 (toList!739 lt!39457) (_1!1111 (tuple2!2201 lt!39454 (minValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39454 (minValue!2210 newMap!16)))))))

(assert (=> d!21699 (= (+!107 lt!39457 (tuple2!2201 lt!39454 (minValue!2210 newMap!16))) lt!39811)))

(declare-fun b!84526 () Bool)

(declare-fun res!43603 () Bool)

(assert (=> b!84526 (=> (not res!43603) (not e!55117))))

(assert (=> b!84526 (= res!43603 (= (getValueByKey!137 (toList!739 lt!39811) (_1!1111 (tuple2!2201 lt!39454 (minValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39454 (minValue!2210 newMap!16))))))))

(declare-fun b!84527 () Bool)

(assert (=> b!84527 (= e!55117 (contains!751 (toList!739 lt!39811) (tuple2!2201 lt!39454 (minValue!2210 newMap!16))))))

(assert (= (and d!21699 res!43602) b!84526))

(assert (= (and b!84526 res!43603) b!84527))

(declare-fun m!88373 () Bool)

(assert (=> d!21699 m!88373))

(declare-fun m!88375 () Bool)

(assert (=> d!21699 m!88375))

(declare-fun m!88377 () Bool)

(assert (=> d!21699 m!88377))

(declare-fun m!88379 () Bool)

(assert (=> d!21699 m!88379))

(declare-fun m!88381 () Bool)

(assert (=> b!84526 m!88381))

(declare-fun m!88383 () Bool)

(assert (=> b!84527 m!88383))

(assert (=> b!83666 d!21699))

(declare-fun d!21701 () Bool)

(assert (=> d!21701 (= (apply!81 (+!107 lt!39457 (tuple2!2201 lt!39454 (minValue!2210 newMap!16))) lt!39461) (apply!81 lt!39457 lt!39461))))

(declare-fun lt!39814 () Unit!2426)

(assert (=> d!21701 (= lt!39814 (choose!494 lt!39457 lt!39454 (minValue!2210 newMap!16) lt!39461))))

(declare-fun e!55118 () Bool)

(assert (=> d!21701 e!55118))

(declare-fun res!43604 () Bool)

(assert (=> d!21701 (=> (not res!43604) (not e!55118))))

(assert (=> d!21701 (= res!43604 (contains!749 lt!39457 lt!39461))))

(assert (=> d!21701 (= (addApplyDifferent!57 lt!39457 lt!39454 (minValue!2210 newMap!16) lt!39461) lt!39814)))

(declare-fun b!84528 () Bool)

(assert (=> b!84528 (= e!55118 (not (= lt!39461 lt!39454)))))

(assert (= (and d!21701 res!43604) b!84528))

(assert (=> d!21701 m!86937))

(declare-fun m!88385 () Bool)

(assert (=> d!21701 m!88385))

(assert (=> d!21701 m!86925))

(assert (=> d!21701 m!86925))

(assert (=> d!21701 m!86947))

(declare-fun m!88387 () Bool)

(assert (=> d!21701 m!88387))

(assert (=> b!83666 d!21701))

(declare-fun d!21703 () Bool)

(assert (=> d!21703 (contains!749 (+!107 lt!39468 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))) lt!39466)))

(declare-fun lt!39815 () Unit!2426)

(assert (=> d!21703 (= lt!39815 (choose!495 lt!39468 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) lt!39466))))

(assert (=> d!21703 (contains!749 lt!39468 lt!39466)))

(assert (=> d!21703 (= (addStillContains!57 lt!39468 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) lt!39466) lt!39815)))

(declare-fun bs!3573 () Bool)

(assert (= bs!3573 d!21703))

(assert (=> bs!3573 m!86931))

(assert (=> bs!3573 m!86931))

(assert (=> bs!3573 m!86939))

(declare-fun m!88389 () Bool)

(assert (=> bs!3573 m!88389))

(declare-fun m!88391 () Bool)

(assert (=> bs!3573 m!88391))

(assert (=> b!83666 d!21703))

(declare-fun d!21705 () Bool)

(assert (=> d!21705 (= (apply!81 (+!107 lt!39455 (tuple2!2201 lt!39464 (minValue!2210 newMap!16))) lt!39449) (apply!81 lt!39455 lt!39449))))

(declare-fun lt!39816 () Unit!2426)

(assert (=> d!21705 (= lt!39816 (choose!494 lt!39455 lt!39464 (minValue!2210 newMap!16) lt!39449))))

(declare-fun e!55119 () Bool)

(assert (=> d!21705 e!55119))

(declare-fun res!43605 () Bool)

(assert (=> d!21705 (=> (not res!43605) (not e!55119))))

(assert (=> d!21705 (= res!43605 (contains!749 lt!39455 lt!39449))))

(assert (=> d!21705 (= (addApplyDifferent!57 lt!39455 lt!39464 (minValue!2210 newMap!16) lt!39449) lt!39816)))

(declare-fun b!84529 () Bool)

(assert (=> b!84529 (= e!55119 (not (= lt!39449 lt!39464)))))

(assert (= (and d!21705 res!43605) b!84529))

(assert (=> d!21705 m!86923))

(declare-fun m!88393 () Bool)

(assert (=> d!21705 m!88393))

(assert (=> d!21705 m!86927))

(assert (=> d!21705 m!86927))

(assert (=> d!21705 m!86929))

(declare-fun m!88395 () Bool)

(assert (=> d!21705 m!88395))

(assert (=> b!83666 d!21705))

(declare-fun d!21707 () Bool)

(assert (=> d!21707 (= (apply!81 lt!39451 lt!39456) (get!1196 (getValueByKey!137 (toList!739 lt!39451) lt!39456)))))

(declare-fun bs!3574 () Bool)

(assert (= bs!3574 d!21707))

(declare-fun m!88397 () Bool)

(assert (=> bs!3574 m!88397))

(assert (=> bs!3574 m!88397))

(declare-fun m!88399 () Bool)

(assert (=> bs!3574 m!88399))

(assert (=> b!83666 d!21707))

(declare-fun d!21709 () Bool)

(assert (=> d!21709 (= (apply!81 lt!39455 lt!39449) (get!1196 (getValueByKey!137 (toList!739 lt!39455) lt!39449)))))

(declare-fun bs!3575 () Bool)

(assert (= bs!3575 d!21709))

(declare-fun m!88401 () Bool)

(assert (=> bs!3575 m!88401))

(assert (=> bs!3575 m!88401))

(declare-fun m!88403 () Bool)

(assert (=> bs!3575 m!88403))

(assert (=> b!83666 d!21709))

(declare-fun d!21711 () Bool)

(assert (=> d!21711 (= (apply!81 lt!39457 lt!39461) (get!1196 (getValueByKey!137 (toList!739 lt!39457) lt!39461)))))

(declare-fun bs!3576 () Bool)

(assert (= bs!3576 d!21711))

(declare-fun m!88405 () Bool)

(assert (=> bs!3576 m!88405))

(assert (=> bs!3576 m!88405))

(declare-fun m!88407 () Bool)

(assert (=> bs!3576 m!88407))

(assert (=> b!83666 d!21711))

(declare-fun d!21713 () Bool)

(declare-fun e!55120 () Bool)

(assert (=> d!21713 e!55120))

(declare-fun res!43606 () Bool)

(assert (=> d!21713 (=> (not res!43606) (not e!55120))))

(declare-fun lt!39818 () ListLongMap!1447)

(assert (=> d!21713 (= res!43606 (contains!749 lt!39818 (_1!1111 (tuple2!2201 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))))))

(declare-fun lt!39817 () List!1523)

(assert (=> d!21713 (= lt!39818 (ListLongMap!1448 lt!39817))))

(declare-fun lt!39820 () Unit!2426)

(declare-fun lt!39819 () Unit!2426)

(assert (=> d!21713 (= lt!39820 lt!39819)))

(assert (=> d!21713 (= (getValueByKey!137 lt!39817 (_1!1111 (tuple2!2201 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))) (Some!142 (_2!1111 (tuple2!2201 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))))))

(assert (=> d!21713 (= lt!39819 (lemmaContainsTupThenGetReturnValue!57 lt!39817 (_1!1111 (tuple2!2201 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))) (_2!1111 (tuple2!2201 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))))))

(assert (=> d!21713 (= lt!39817 (insertStrictlySorted!60 (toList!739 lt!39451) (_1!1111 (tuple2!2201 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))) (_2!1111 (tuple2!2201 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))))))

(assert (=> d!21713 (= (+!107 lt!39451 (tuple2!2201 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))) lt!39818)))

(declare-fun b!84530 () Bool)

(declare-fun res!43607 () Bool)

(assert (=> b!84530 (=> (not res!43607) (not e!55120))))

(assert (=> b!84530 (= res!43607 (= (getValueByKey!137 (toList!739 lt!39818) (_1!1111 (tuple2!2201 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))) (Some!142 (_2!1111 (tuple2!2201 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))))))))

(declare-fun b!84531 () Bool)

(assert (=> b!84531 (= e!55120 (contains!751 (toList!739 lt!39818) (tuple2!2201 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))))))

(assert (= (and d!21713 res!43606) b!84530))

(assert (= (and b!84530 res!43607) b!84531))

(declare-fun m!88409 () Bool)

(assert (=> d!21713 m!88409))

(declare-fun m!88411 () Bool)

(assert (=> d!21713 m!88411))

(declare-fun m!88413 () Bool)

(assert (=> d!21713 m!88413))

(declare-fun m!88415 () Bool)

(assert (=> d!21713 m!88415))

(declare-fun m!88417 () Bool)

(assert (=> b!84530 m!88417))

(declare-fun m!88419 () Bool)

(assert (=> b!84531 m!88419))

(assert (=> b!83666 d!21713))

(declare-fun d!21715 () Bool)

(declare-fun e!55121 () Bool)

(assert (=> d!21715 e!55121))

(declare-fun res!43608 () Bool)

(assert (=> d!21715 (=> (not res!43608) (not e!55121))))

(declare-fun lt!39822 () ListLongMap!1447)

(assert (=> d!21715 (= res!43608 (contains!749 lt!39822 (_1!1111 (tuple2!2201 lt!39464 (minValue!2210 newMap!16)))))))

(declare-fun lt!39821 () List!1523)

(assert (=> d!21715 (= lt!39822 (ListLongMap!1448 lt!39821))))

(declare-fun lt!39824 () Unit!2426)

(declare-fun lt!39823 () Unit!2426)

(assert (=> d!21715 (= lt!39824 lt!39823)))

(assert (=> d!21715 (= (getValueByKey!137 lt!39821 (_1!1111 (tuple2!2201 lt!39464 (minValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39464 (minValue!2210 newMap!16)))))))

(assert (=> d!21715 (= lt!39823 (lemmaContainsTupThenGetReturnValue!57 lt!39821 (_1!1111 (tuple2!2201 lt!39464 (minValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39464 (minValue!2210 newMap!16)))))))

(assert (=> d!21715 (= lt!39821 (insertStrictlySorted!60 (toList!739 lt!39455) (_1!1111 (tuple2!2201 lt!39464 (minValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39464 (minValue!2210 newMap!16)))))))

(assert (=> d!21715 (= (+!107 lt!39455 (tuple2!2201 lt!39464 (minValue!2210 newMap!16))) lt!39822)))

(declare-fun b!84532 () Bool)

(declare-fun res!43609 () Bool)

(assert (=> b!84532 (=> (not res!43609) (not e!55121))))

(assert (=> b!84532 (= res!43609 (= (getValueByKey!137 (toList!739 lt!39822) (_1!1111 (tuple2!2201 lt!39464 (minValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39464 (minValue!2210 newMap!16))))))))

(declare-fun b!84533 () Bool)

(assert (=> b!84533 (= e!55121 (contains!751 (toList!739 lt!39822) (tuple2!2201 lt!39464 (minValue!2210 newMap!16))))))

(assert (= (and d!21715 res!43608) b!84532))

(assert (= (and b!84532 res!43609) b!84533))

(declare-fun m!88421 () Bool)

(assert (=> d!21715 m!88421))

(declare-fun m!88423 () Bool)

(assert (=> d!21715 m!88423))

(declare-fun m!88425 () Bool)

(assert (=> d!21715 m!88425))

(declare-fun m!88427 () Bool)

(assert (=> d!21715 m!88427))

(declare-fun m!88429 () Bool)

(assert (=> b!84532 m!88429))

(declare-fun m!88431 () Bool)

(assert (=> b!84533 m!88431))

(assert (=> b!83666 d!21715))

(declare-fun d!21717 () Bool)

(declare-fun e!55123 () Bool)

(assert (=> d!21717 e!55123))

(declare-fun res!43610 () Bool)

(assert (=> d!21717 (=> res!43610 e!55123)))

(declare-fun lt!39826 () Bool)

(assert (=> d!21717 (= res!43610 (not lt!39826))))

(declare-fun lt!39828 () Bool)

(assert (=> d!21717 (= lt!39826 lt!39828)))

(declare-fun lt!39827 () Unit!2426)

(declare-fun e!55122 () Unit!2426)

(assert (=> d!21717 (= lt!39827 e!55122)))

(declare-fun c!13645 () Bool)

(assert (=> d!21717 (= c!13645 lt!39828)))

(assert (=> d!21717 (= lt!39828 (containsKey!141 (toList!739 (+!107 lt!39468 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))) lt!39466))))

(assert (=> d!21717 (= (contains!749 (+!107 lt!39468 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))) lt!39466) lt!39826)))

(declare-fun b!84534 () Bool)

(declare-fun lt!39825 () Unit!2426)

(assert (=> b!84534 (= e!55122 lt!39825)))

(assert (=> b!84534 (= lt!39825 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 (+!107 lt!39468 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))) lt!39466))))

(assert (=> b!84534 (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!39468 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))) lt!39466))))

(declare-fun b!84535 () Bool)

(declare-fun Unit!2488 () Unit!2426)

(assert (=> b!84535 (= e!55122 Unit!2488)))

(declare-fun b!84536 () Bool)

(assert (=> b!84536 (= e!55123 (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!39468 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))) lt!39466)))))

(assert (= (and d!21717 c!13645) b!84534))

(assert (= (and d!21717 (not c!13645)) b!84535))

(assert (= (and d!21717 (not res!43610)) b!84536))

(declare-fun m!88433 () Bool)

(assert (=> d!21717 m!88433))

(declare-fun m!88435 () Bool)

(assert (=> b!84534 m!88435))

(declare-fun m!88437 () Bool)

(assert (=> b!84534 m!88437))

(assert (=> b!84534 m!88437))

(declare-fun m!88439 () Bool)

(assert (=> b!84534 m!88439))

(assert (=> b!84536 m!88437))

(assert (=> b!84536 m!88437))

(assert (=> b!84536 m!88439))

(assert (=> b!83666 d!21717))

(assert (=> b!83666 d!21281))

(declare-fun d!21719 () Bool)

(assert (=> d!21719 (= (apply!81 (+!107 lt!39451 (tuple2!2201 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))) lt!39456) (apply!81 lt!39451 lt!39456))))

(declare-fun lt!39829 () Unit!2426)

(assert (=> d!21719 (= lt!39829 (choose!494 lt!39451 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) lt!39456))))

(declare-fun e!55124 () Bool)

(assert (=> d!21719 e!55124))

(declare-fun res!43611 () Bool)

(assert (=> d!21719 (=> (not res!43611) (not e!55124))))

(assert (=> d!21719 (= res!43611 (contains!749 lt!39451 lt!39456))))

(assert (=> d!21719 (= (addApplyDifferent!57 lt!39451 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)) lt!39456) lt!39829)))

(declare-fun b!84537 () Bool)

(assert (=> b!84537 (= e!55124 (not (= lt!39456 lt!39453)))))

(assert (= (and d!21719 res!43611) b!84537))

(assert (=> d!21719 m!86921))

(declare-fun m!88441 () Bool)

(assert (=> d!21719 m!88441))

(assert (=> d!21719 m!86941))

(assert (=> d!21719 m!86941))

(assert (=> d!21719 m!86943))

(declare-fun m!88443 () Bool)

(assert (=> d!21719 m!88443))

(assert (=> b!83666 d!21719))

(declare-fun d!21721 () Bool)

(assert (=> d!21721 (= (apply!81 (+!107 lt!39455 (tuple2!2201 lt!39464 (minValue!2210 newMap!16))) lt!39449) (get!1196 (getValueByKey!137 (toList!739 (+!107 lt!39455 (tuple2!2201 lt!39464 (minValue!2210 newMap!16)))) lt!39449)))))

(declare-fun bs!3577 () Bool)

(assert (= bs!3577 d!21721))

(declare-fun m!88445 () Bool)

(assert (=> bs!3577 m!88445))

(assert (=> bs!3577 m!88445))

(declare-fun m!88447 () Bool)

(assert (=> bs!3577 m!88447))

(assert (=> b!83666 d!21721))

(declare-fun d!21723 () Bool)

(declare-fun e!55125 () Bool)

(assert (=> d!21723 e!55125))

(declare-fun res!43612 () Bool)

(assert (=> d!21723 (=> (not res!43612) (not e!55125))))

(declare-fun lt!39831 () ListLongMap!1447)

(assert (=> d!21723 (= res!43612 (contains!749 lt!39831 (_1!1111 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))))))

(declare-fun lt!39830 () List!1523)

(assert (=> d!21723 (= lt!39831 (ListLongMap!1448 lt!39830))))

(declare-fun lt!39833 () Unit!2426)

(declare-fun lt!39832 () Unit!2426)

(assert (=> d!21723 (= lt!39833 lt!39832)))

(assert (=> d!21723 (= (getValueByKey!137 lt!39830 (_1!1111 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))) (Some!142 (_2!1111 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))))))

(assert (=> d!21723 (= lt!39832 (lemmaContainsTupThenGetReturnValue!57 lt!39830 (_1!1111 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))) (_2!1111 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))))))

(assert (=> d!21723 (= lt!39830 (insertStrictlySorted!60 (toList!739 lt!39468) (_1!1111 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))) (_2!1111 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))))))

(assert (=> d!21723 (= (+!107 lt!39468 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))) lt!39831)))

(declare-fun b!84538 () Bool)

(declare-fun res!43613 () Bool)

(assert (=> b!84538 (=> (not res!43613) (not e!55125))))

(assert (=> b!84538 (= res!43613 (= (getValueByKey!137 (toList!739 lt!39831) (_1!1111 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))) (Some!142 (_2!1111 (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))))))))

(declare-fun b!84539 () Bool)

(assert (=> b!84539 (= e!55125 (contains!751 (toList!739 lt!39831) (tuple2!2201 lt!39465 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))))))

(assert (= (and d!21723 res!43612) b!84538))

(assert (= (and b!84538 res!43613) b!84539))

(declare-fun m!88449 () Bool)

(assert (=> d!21723 m!88449))

(declare-fun m!88451 () Bool)

(assert (=> d!21723 m!88451))

(declare-fun m!88453 () Bool)

(assert (=> d!21723 m!88453))

(declare-fun m!88455 () Bool)

(assert (=> d!21723 m!88455))

(declare-fun m!88457 () Bool)

(assert (=> b!84538 m!88457))

(declare-fun m!88459 () Bool)

(assert (=> b!84539 m!88459))

(assert (=> b!83666 d!21723))

(declare-fun d!21725 () Bool)

(assert (=> d!21725 (= (apply!81 (+!107 lt!39457 (tuple2!2201 lt!39454 (minValue!2210 newMap!16))) lt!39461) (get!1196 (getValueByKey!137 (toList!739 (+!107 lt!39457 (tuple2!2201 lt!39454 (minValue!2210 newMap!16)))) lt!39461)))))

(declare-fun bs!3578 () Bool)

(assert (= bs!3578 d!21725))

(declare-fun m!88461 () Bool)

(assert (=> bs!3578 m!88461))

(assert (=> bs!3578 m!88461))

(declare-fun m!88463 () Bool)

(assert (=> bs!3578 m!88463))

(assert (=> b!83666 d!21725))

(declare-fun d!21727 () Bool)

(assert (=> d!21727 (= (apply!81 (+!107 lt!39451 (tuple2!2201 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16)))) lt!39456) (get!1196 (getValueByKey!137 (toList!739 (+!107 lt!39451 (tuple2!2201 lt!39453 (ite (and c!13210 c!13217) lt!38725 (zeroValue!2210 newMap!16))))) lt!39456)))))

(declare-fun bs!3579 () Bool)

(assert (= bs!3579 d!21727))

(declare-fun m!88465 () Bool)

(assert (=> bs!3579 m!88465))

(assert (=> bs!3579 m!88465))

(declare-fun m!88467 () Bool)

(assert (=> bs!3579 m!88467))

(assert (=> b!83666 d!21727))

(declare-fun b!84540 () Bool)

(declare-fun e!55128 () Bool)

(declare-fun e!55126 () Bool)

(assert (=> b!84540 (= e!55128 e!55126)))

(declare-fun c!13646 () Bool)

(assert (=> b!84540 (= c!13646 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!84541 () Bool)

(declare-fun e!55127 () Bool)

(declare-fun call!7958 () Bool)

(assert (=> b!84541 (= e!55127 call!7958)))

(declare-fun b!84542 () Bool)

(assert (=> b!84542 (= e!55126 e!55127)))

(declare-fun lt!39835 () (_ BitVec 64))

(assert (=> b!84542 (= lt!39835 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!39836 () Unit!2426)

(assert (=> b!84542 (= lt!39836 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) lt!39835 #b00000000000000000000000000000000))))

(assert (=> b!84542 (arrayContainsKey!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) lt!39835 #b00000000000000000000000000000000)))

(declare-fun lt!39834 () Unit!2426)

(assert (=> b!84542 (= lt!39834 lt!39836)))

(declare-fun res!43614 () Bool)

(assert (=> b!84542 (= res!43614 (= (seekEntryOrOpen!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) #b00000000000000000000000000000000) (_keys!3983 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992)))) (Found!245 #b00000000000000000000000000000000)))))

(assert (=> b!84542 (=> (not res!43614) (not e!55127))))

(declare-fun d!21729 () Bool)

(declare-fun res!43615 () Bool)

(assert (=> d!21729 (=> res!43615 e!55128)))

(assert (=> d!21729 (= res!43615 (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(assert (=> d!21729 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992)))) e!55128)))

(declare-fun b!84543 () Bool)

(assert (=> b!84543 (= e!55126 call!7958)))

(declare-fun bm!7955 () Bool)

(assert (=> bm!7955 (= call!7958 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3983 (v!2622 (underlying!282 thiss!992))) (mask!6333 (v!2622 (underlying!282 thiss!992)))))))

(assert (= (and d!21729 (not res!43615)) b!84540))

(assert (= (and b!84540 c!13646) b!84542))

(assert (= (and b!84540 (not c!13646)) b!84543))

(assert (= (and b!84542 res!43614) b!84541))

(assert (= (or b!84541 b!84543) bm!7955))

(declare-fun m!88469 () Bool)

(assert (=> b!84540 m!88469))

(assert (=> b!84540 m!88469))

(declare-fun m!88471 () Bool)

(assert (=> b!84540 m!88471))

(assert (=> b!84542 m!88469))

(declare-fun m!88473 () Bool)

(assert (=> b!84542 m!88473))

(declare-fun m!88475 () Bool)

(assert (=> b!84542 m!88475))

(assert (=> b!84542 m!88469))

(declare-fun m!88477 () Bool)

(assert (=> b!84542 m!88477))

(declare-fun m!88479 () Bool)

(assert (=> bm!7955 m!88479))

(assert (=> b!83578 d!21729))

(declare-fun d!21731 () Bool)

(declare-fun res!43616 () Bool)

(declare-fun e!55129 () Bool)

(assert (=> d!21731 (=> res!43616 e!55129)))

(assert (=> d!21731 (= res!43616 (or ((_ is Nil!1520) lt!39304) ((_ is Nil!1520) (t!5214 lt!39304))))))

(assert (=> d!21731 (= (isStrictlySorted!292 lt!39304) e!55129)))

(declare-fun b!84544 () Bool)

(declare-fun e!55130 () Bool)

(assert (=> b!84544 (= e!55129 e!55130)))

(declare-fun res!43617 () Bool)

(assert (=> b!84544 (=> (not res!43617) (not e!55130))))

(assert (=> b!84544 (= res!43617 (bvslt (_1!1111 (h!2109 lt!39304)) (_1!1111 (h!2109 (t!5214 lt!39304)))))))

(declare-fun b!84545 () Bool)

(assert (=> b!84545 (= e!55130 (isStrictlySorted!292 (t!5214 lt!39304)))))

(assert (= (and d!21731 (not res!43616)) b!84544))

(assert (= (and b!84544 res!43617) b!84545))

(declare-fun m!88481 () Bool)

(assert (=> b!84545 m!88481))

(assert (=> d!21061 d!21731))

(assert (=> d!21061 d!21621))

(assert (=> d!21111 d!21109))

(declare-fun d!21733 () Bool)

(assert (=> d!21733 (= (getValueByKey!137 lt!39060 (_1!1111 lt!38729)) (Some!142 (_2!1111 lt!38729)))))

(assert (=> d!21733 true))

(declare-fun _$22!412 () Unit!2426)

(assert (=> d!21733 (= (choose!497 lt!39060 (_1!1111 lt!38729) (_2!1111 lt!38729)) _$22!412)))

(declare-fun bs!3580 () Bool)

(assert (= bs!3580 d!21733))

(assert (=> bs!3580 m!85955))

(assert (=> d!21111 d!21733))

(declare-fun d!21735 () Bool)

(declare-fun res!43618 () Bool)

(declare-fun e!55131 () Bool)

(assert (=> d!21735 (=> res!43618 e!55131)))

(assert (=> d!21735 (= res!43618 (or ((_ is Nil!1520) lt!39060) ((_ is Nil!1520) (t!5214 lt!39060))))))

(assert (=> d!21735 (= (isStrictlySorted!292 lt!39060) e!55131)))

(declare-fun b!84546 () Bool)

(declare-fun e!55132 () Bool)

(assert (=> b!84546 (= e!55131 e!55132)))

(declare-fun res!43619 () Bool)

(assert (=> b!84546 (=> (not res!43619) (not e!55132))))

(assert (=> b!84546 (= res!43619 (bvslt (_1!1111 (h!2109 lt!39060)) (_1!1111 (h!2109 (t!5214 lt!39060)))))))

(declare-fun b!84547 () Bool)

(assert (=> b!84547 (= e!55132 (isStrictlySorted!292 (t!5214 lt!39060)))))

(assert (= (and d!21735 (not res!43618)) b!84546))

(assert (= (and b!84546 res!43619) b!84547))

(declare-fun m!88483 () Bool)

(assert (=> b!84547 m!88483))

(assert (=> d!21111 d!21735))

(declare-fun d!21737 () Bool)

(assert (=> d!21737 (= (apply!81 lt!39114 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1196 (getValueByKey!137 (toList!739 lt!39114) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3581 () Bool)

(assert (= bs!3581 d!21737))

(assert (=> bs!3581 m!87003))

(assert (=> bs!3581 m!87003))

(declare-fun m!88485 () Bool)

(assert (=> bs!3581 m!88485))

(assert (=> b!83236 d!21737))

(assert (=> b!83652 d!21441))

(assert (=> b!83652 d!21443))

(declare-fun d!21739 () Bool)

(declare-fun e!55135 () Bool)

(assert (=> d!21739 e!55135))

(declare-fun res!43622 () Bool)

(assert (=> d!21739 (=> (not res!43622) (not e!55135))))

(assert (=> d!21739 (= res!43622 (and (bvsge (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000000) (bvslt (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (size!2144 (_keys!3983 newMap!16)))))))

(declare-fun lt!39839 () Unit!2426)

(declare-fun choose!102 ((_ BitVec 64) array!3991 (_ BitVec 32) (_ BitVec 32)) Unit!2426)

(assert (=> d!21739 (= lt!39839 (choose!102 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (mask!6333 newMap!16)))))

(assert (=> d!21739 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21739 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (mask!6333 newMap!16)) lt!39839)))

(declare-fun b!84550 () Bool)

(assert (=> b!84550 (= e!55135 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (mask!6333 newMap!16)))))

(assert (= (and d!21739 res!43622) b!84550))

(assert (=> d!21739 m!85563))

(declare-fun m!88487 () Bool)

(assert (=> d!21739 m!88487))

(assert (=> d!21739 m!86067))

(assert (=> b!84550 m!86767))

(assert (=> b!84550 m!86743))

(assert (=> d!21077 d!21739))

(declare-fun d!21741 () Bool)

(declare-fun e!55138 () Bool)

(assert (=> d!21741 e!55138))

(declare-fun res!43625 () Bool)

(assert (=> d!21741 (=> (not res!43625) (not e!55138))))

(assert (=> d!21741 (= res!43625 (and (bvsge (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000000) (bvslt (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (size!2144 (_keys!3983 newMap!16)))))))

(declare-fun lt!39842 () Unit!2426)

(declare-fun choose!41 (array!3991 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1522) Unit!2426)

(assert (=> d!21741 (= lt!39842 (choose!41 (_keys!3983 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) lt!39383 lt!39387))))

(assert (=> d!21741 (bvslt (size!2144 (_keys!3983 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!21741 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3983 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) lt!39383 lt!39387) lt!39842)))

(declare-fun b!84553 () Bool)

(assert (=> b!84553 (= e!55138 (arrayNoDuplicates!0 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) lt!39383 lt!39387))))

(assert (= (and d!21741 res!43625) b!84553))

(assert (=> d!21741 m!85563))

(declare-fun m!88489 () Bool)

(assert (=> d!21741 m!88489))

(assert (=> b!84553 m!86767))

(assert (=> b!84553 m!86741))

(assert (=> d!21077 d!21741))

(declare-fun d!21743 () Bool)

(declare-fun res!43626 () Bool)

(declare-fun e!55139 () Bool)

(assert (=> d!21743 (=> res!43626 e!55139)))

(assert (=> d!21743 (= res!43626 (= (select (arr!1900 lt!39382) #b00000000000000000000000000000000) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> d!21743 (= (arrayContainsKey!0 lt!39382 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b00000000000000000000000000000000) e!55139)))

(declare-fun b!84554 () Bool)

(declare-fun e!55140 () Bool)

(assert (=> b!84554 (= e!55139 e!55140)))

(declare-fun res!43627 () Bool)

(assert (=> b!84554 (=> (not res!43627) (not e!55140))))

(assert (=> b!84554 (= res!43627 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2144 lt!39382)))))

(declare-fun b!84555 () Bool)

(assert (=> b!84555 (= e!55140 (arrayContainsKey!0 lt!39382 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!21743 (not res!43626)) b!84554))

(assert (= (and b!84554 res!43627) b!84555))

(declare-fun m!88491 () Bool)

(assert (=> d!21743 m!88491))

(assert (=> b!84555 m!85563))

(declare-fun m!88493 () Bool)

(assert (=> b!84555 m!88493))

(assert (=> d!21077 d!21743))

(declare-fun d!21745 () Bool)

(declare-fun e!55141 () Bool)

(assert (=> d!21745 e!55141))

(declare-fun res!43628 () Bool)

(assert (=> d!21745 (=> (not res!43628) (not e!55141))))

(declare-fun lt!39844 () ListLongMap!1447)

(assert (=> d!21745 (= res!43628 (contains!749 lt!39844 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun lt!39843 () List!1523)

(assert (=> d!21745 (= lt!39844 (ListLongMap!1448 lt!39843))))

(declare-fun lt!39846 () Unit!2426)

(declare-fun lt!39845 () Unit!2426)

(assert (=> d!21745 (= lt!39846 lt!39845)))

(assert (=> d!21745 (= (getValueByKey!137 lt!39843 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21745 (= lt!39845 (lemmaContainsTupThenGetReturnValue!57 lt!39843 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21745 (= lt!39843 (insertStrictlySorted!60 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21745 (= (+!107 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) lt!39844)))

(declare-fun b!84556 () Bool)

(declare-fun res!43629 () Bool)

(assert (=> b!84556 (=> (not res!43629) (not e!55141))))

(assert (=> b!84556 (= res!43629 (= (getValueByKey!137 (toList!739 lt!39844) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!84557 () Bool)

(assert (=> b!84557 (= e!55141 (contains!751 (toList!739 lt!39844) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(assert (= (and d!21745 res!43628) b!84556))

(assert (= (and b!84556 res!43629) b!84557))

(declare-fun m!88495 () Bool)

(assert (=> d!21745 m!88495))

(declare-fun m!88497 () Bool)

(assert (=> d!21745 m!88497))

(declare-fun m!88499 () Bool)

(assert (=> d!21745 m!88499))

(declare-fun m!88501 () Bool)

(assert (=> d!21745 m!88501))

(declare-fun m!88503 () Bool)

(assert (=> b!84556 m!88503))

(declare-fun m!88505 () Bool)

(assert (=> b!84557 m!88505))

(assert (=> d!21077 d!21745))

(assert (=> d!21077 d!20977))

(assert (=> d!21077 d!20849))

(assert (=> d!21077 d!21093))

(assert (=> d!21077 d!20905))

(declare-fun b!84558 () Bool)

(declare-fun e!55153 () Bool)

(declare-fun call!7963 () Bool)

(assert (=> b!84558 (= e!55153 (not call!7963))))

(declare-fun b!84559 () Bool)

(declare-fun e!55147 () Bool)

(declare-fun e!55151 () Bool)

(assert (=> b!84559 (= e!55147 e!55151)))

(declare-fun c!13652 () Bool)

(assert (=> b!84559 (= c!13652 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun lt!39850 () ListLongMap!1447)

(declare-fun b!84560 () Bool)

(declare-fun e!55142 () Bool)

(assert (=> b!84560 (= e!55142 (= (apply!81 lt!39850 (select (arr!1900 lt!39400) #b00000000000000000000000000000000)) (get!1193 (select (arr!1901 lt!39401) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!84560 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2145 lt!39401)))))

(assert (=> b!84560 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 lt!39400)))))

(declare-fun b!84561 () Bool)

(declare-fun e!55149 () ListLongMap!1447)

(declare-fun call!7965 () ListLongMap!1447)

(assert (=> b!84561 (= e!55149 call!7965)))

(declare-fun c!13647 () Bool)

(declare-fun bm!7956 () Bool)

(declare-fun call!7961 () ListLongMap!1447)

(declare-fun call!7960 () ListLongMap!1447)

(declare-fun c!13650 () Bool)

(declare-fun call!7964 () ListLongMap!1447)

(declare-fun call!7959 () ListLongMap!1447)

(assert (=> bm!7956 (= call!7964 (+!107 (ite c!13647 call!7959 (ite c!13650 call!7961 call!7960)) (ite (or c!13647 c!13650) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun b!84562 () Bool)

(declare-fun e!55144 () Bool)

(assert (=> b!84562 (= e!55144 (validKeyInArray!0 (select (arr!1900 lt!39400) #b00000000000000000000000000000000)))))

(declare-fun b!84563 () Bool)

(declare-fun res!43637 () Bool)

(assert (=> b!84563 (=> (not res!43637) (not e!55147))))

(declare-fun e!55143 () Bool)

(assert (=> b!84563 (= res!43637 e!55143)))

(declare-fun res!43638 () Bool)

(assert (=> b!84563 (=> res!43638 e!55143)))

(assert (=> b!84563 (= res!43638 (not e!55144))))

(declare-fun res!43630 () Bool)

(assert (=> b!84563 (=> (not res!43630) (not e!55144))))

(assert (=> b!84563 (= res!43630 (bvslt #b00000000000000000000000000000000 (size!2144 lt!39400)))))

(declare-fun b!84564 () Bool)

(declare-fun call!7962 () Bool)

(assert (=> b!84564 (= e!55151 (not call!7962))))

(declare-fun b!84565 () Bool)

(declare-fun e!55152 () Bool)

(assert (=> b!84565 (= e!55153 e!55152)))

(declare-fun res!43631 () Bool)

(assert (=> b!84565 (= res!43631 call!7963)))

(assert (=> b!84565 (=> (not res!43631) (not e!55152))))

(declare-fun bm!7957 () Bool)

(assert (=> bm!7957 (= call!7962 (contains!749 lt!39850 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84566 () Bool)

(declare-fun res!43633 () Bool)

(assert (=> b!84566 (=> (not res!43633) (not e!55147))))

(assert (=> b!84566 (= res!43633 e!55153)))

(declare-fun c!13649 () Bool)

(assert (=> b!84566 (= c!13649 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!21747 () Bool)

(assert (=> d!21747 e!55147))

(declare-fun res!43636 () Bool)

(assert (=> d!21747 (=> (not res!43636) (not e!55147))))

(assert (=> d!21747 (= res!43636 (or (bvsge #b00000000000000000000000000000000 (size!2144 lt!39400)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 lt!39400)))))))

(declare-fun lt!39863 () ListLongMap!1447)

(assert (=> d!21747 (= lt!39850 lt!39863)))

(declare-fun lt!39860 () Unit!2426)

(declare-fun e!55148 () Unit!2426)

(assert (=> d!21747 (= lt!39860 e!55148)))

(declare-fun c!13648 () Bool)

(declare-fun e!55145 () Bool)

(assert (=> d!21747 (= c!13648 e!55145)))

(declare-fun res!43634 () Bool)

(assert (=> d!21747 (=> (not res!43634) (not e!55145))))

(assert (=> d!21747 (= res!43634 (bvslt #b00000000000000000000000000000000 (size!2144 lt!39400)))))

(declare-fun e!55154 () ListLongMap!1447)

(assert (=> d!21747 (= lt!39863 e!55154)))

(assert (=> d!21747 (= c!13647 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21747 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21747 (= (getCurrentListMap!425 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39850)))

(declare-fun b!84567 () Bool)

(assert (=> b!84567 (= e!55152 (= (apply!81 lt!39850 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 newMap!16)))))

(declare-fun b!84568 () Bool)

(declare-fun e!55150 () Bool)

(assert (=> b!84568 (= e!55151 e!55150)))

(declare-fun res!43632 () Bool)

(assert (=> b!84568 (= res!43632 call!7962)))

(assert (=> b!84568 (=> (not res!43632) (not e!55150))))

(declare-fun b!84569 () Bool)

(assert (=> b!84569 (= e!55145 (validKeyInArray!0 (select (arr!1900 lt!39400) #b00000000000000000000000000000000)))))

(declare-fun b!84570 () Bool)

(assert (=> b!84570 (= e!55154 e!55149)))

(assert (=> b!84570 (= c!13650 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7958 () Bool)

(assert (=> bm!7958 (= call!7961 call!7959)))

(declare-fun b!84571 () Bool)

(declare-fun lt!39862 () Unit!2426)

(assert (=> b!84571 (= e!55148 lt!39862)))

(declare-fun lt!39868 () ListLongMap!1447)

(assert (=> b!84571 (= lt!39868 (getCurrentListMapNoExtraKeys!71 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39865 () (_ BitVec 64))

(assert (=> b!84571 (= lt!39865 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39866 () (_ BitVec 64))

(assert (=> b!84571 (= lt!39866 (select (arr!1900 lt!39400) #b00000000000000000000000000000000))))

(declare-fun lt!39848 () Unit!2426)

(assert (=> b!84571 (= lt!39848 (addStillContains!57 lt!39868 lt!39865 (zeroValue!2210 newMap!16) lt!39866))))

(assert (=> b!84571 (contains!749 (+!107 lt!39868 (tuple2!2201 lt!39865 (zeroValue!2210 newMap!16))) lt!39866)))

(declare-fun lt!39867 () Unit!2426)

(assert (=> b!84571 (= lt!39867 lt!39848)))

(declare-fun lt!39857 () ListLongMap!1447)

(assert (=> b!84571 (= lt!39857 (getCurrentListMapNoExtraKeys!71 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39854 () (_ BitVec 64))

(assert (=> b!84571 (= lt!39854 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39861 () (_ BitVec 64))

(assert (=> b!84571 (= lt!39861 (select (arr!1900 lt!39400) #b00000000000000000000000000000000))))

(declare-fun lt!39852 () Unit!2426)

(assert (=> b!84571 (= lt!39852 (addApplyDifferent!57 lt!39857 lt!39854 (minValue!2210 newMap!16) lt!39861))))

(assert (=> b!84571 (= (apply!81 (+!107 lt!39857 (tuple2!2201 lt!39854 (minValue!2210 newMap!16))) lt!39861) (apply!81 lt!39857 lt!39861))))

(declare-fun lt!39847 () Unit!2426)

(assert (=> b!84571 (= lt!39847 lt!39852)))

(declare-fun lt!39851 () ListLongMap!1447)

(assert (=> b!84571 (= lt!39851 (getCurrentListMapNoExtraKeys!71 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39853 () (_ BitVec 64))

(assert (=> b!84571 (= lt!39853 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39856 () (_ BitVec 64))

(assert (=> b!84571 (= lt!39856 (select (arr!1900 lt!39400) #b00000000000000000000000000000000))))

(declare-fun lt!39858 () Unit!2426)

(assert (=> b!84571 (= lt!39858 (addApplyDifferent!57 lt!39851 lt!39853 (zeroValue!2210 newMap!16) lt!39856))))

(assert (=> b!84571 (= (apply!81 (+!107 lt!39851 (tuple2!2201 lt!39853 (zeroValue!2210 newMap!16))) lt!39856) (apply!81 lt!39851 lt!39856))))

(declare-fun lt!39859 () Unit!2426)

(assert (=> b!84571 (= lt!39859 lt!39858)))

(declare-fun lt!39855 () ListLongMap!1447)

(assert (=> b!84571 (= lt!39855 (getCurrentListMapNoExtraKeys!71 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39864 () (_ BitVec 64))

(assert (=> b!84571 (= lt!39864 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39849 () (_ BitVec 64))

(assert (=> b!84571 (= lt!39849 (select (arr!1900 lt!39400) #b00000000000000000000000000000000))))

(assert (=> b!84571 (= lt!39862 (addApplyDifferent!57 lt!39855 lt!39864 (minValue!2210 newMap!16) lt!39849))))

(assert (=> b!84571 (= (apply!81 (+!107 lt!39855 (tuple2!2201 lt!39864 (minValue!2210 newMap!16))) lt!39849) (apply!81 lt!39855 lt!39849))))

(declare-fun bm!7959 () Bool)

(assert (=> bm!7959 (= call!7960 call!7961)))

(declare-fun b!84572 () Bool)

(declare-fun Unit!2489 () Unit!2426)

(assert (=> b!84572 (= e!55148 Unit!2489)))

(declare-fun b!84573 () Bool)

(assert (=> b!84573 (= e!55143 e!55142)))

(declare-fun res!43635 () Bool)

(assert (=> b!84573 (=> (not res!43635) (not e!55142))))

(assert (=> b!84573 (= res!43635 (contains!749 lt!39850 (select (arr!1900 lt!39400) #b00000000000000000000000000000000)))))

(assert (=> b!84573 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 lt!39400)))))

(declare-fun b!84574 () Bool)

(declare-fun e!55146 () ListLongMap!1447)

(assert (=> b!84574 (= e!55146 call!7965)))

(declare-fun b!84575 () Bool)

(assert (=> b!84575 (= e!55150 (= (apply!81 lt!39850 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 newMap!16)))))

(declare-fun bm!7960 () Bool)

(assert (=> bm!7960 (= call!7965 call!7964)))

(declare-fun bm!7961 () Bool)

(assert (=> bm!7961 (= call!7963 (contains!749 lt!39850 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84576 () Bool)

(assert (=> b!84576 (= e!55146 call!7960)))

(declare-fun b!84577 () Bool)

(declare-fun c!13651 () Bool)

(assert (=> b!84577 (= c!13651 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!84577 (= e!55149 e!55146)))

(declare-fun b!84578 () Bool)

(assert (=> b!84578 (= e!55154 (+!107 call!7964 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(declare-fun bm!7962 () Bool)

(assert (=> bm!7962 (= call!7959 (getCurrentListMapNoExtraKeys!71 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (= (and d!21747 c!13647) b!84578))

(assert (= (and d!21747 (not c!13647)) b!84570))

(assert (= (and b!84570 c!13650) b!84561))

(assert (= (and b!84570 (not c!13650)) b!84577))

(assert (= (and b!84577 c!13651) b!84574))

(assert (= (and b!84577 (not c!13651)) b!84576))

(assert (= (or b!84574 b!84576) bm!7959))

(assert (= (or b!84561 bm!7959) bm!7958))

(assert (= (or b!84561 b!84574) bm!7960))

(assert (= (or b!84578 bm!7958) bm!7962))

(assert (= (or b!84578 bm!7960) bm!7956))

(assert (= (and d!21747 res!43634) b!84569))

(assert (= (and d!21747 c!13648) b!84571))

(assert (= (and d!21747 (not c!13648)) b!84572))

(assert (= (and d!21747 res!43636) b!84563))

(assert (= (and b!84563 res!43630) b!84562))

(assert (= (and b!84563 (not res!43638)) b!84573))

(assert (= (and b!84573 res!43635) b!84560))

(assert (= (and b!84563 res!43637) b!84566))

(assert (= (and b!84566 c!13649) b!84565))

(assert (= (and b!84566 (not c!13649)) b!84558))

(assert (= (and b!84565 res!43631) b!84567))

(assert (= (or b!84565 b!84558) bm!7961))

(assert (= (and b!84566 res!43633) b!84559))

(assert (= (and b!84559 c!13652) b!84568))

(assert (= (and b!84559 (not c!13652)) b!84564))

(assert (= (and b!84568 res!43632) b!84575))

(assert (= (or b!84568 b!84564) bm!7957))

(declare-fun b_lambda!3745 () Bool)

(assert (=> (not b_lambda!3745) (not b!84560)))

(assert (=> b!84560 t!5225))

(declare-fun b_and!5129 () Bool)

(assert (= b_and!5125 (and (=> t!5225 result!2895) b_and!5129)))

(assert (=> b!84560 t!5227))

(declare-fun b_and!5131 () Bool)

(assert (= b_and!5127 (and (=> t!5227 result!2897) b_and!5131)))

(declare-fun m!88507 () Bool)

(assert (=> b!84575 m!88507))

(declare-fun m!88509 () Bool)

(assert (=> bm!7957 m!88509))

(declare-fun m!88511 () Bool)

(assert (=> b!84573 m!88511))

(assert (=> b!84573 m!88511))

(declare-fun m!88513 () Bool)

(assert (=> b!84573 m!88513))

(declare-fun m!88515 () Bool)

(assert (=> bm!7962 m!88515))

(declare-fun m!88517 () Bool)

(assert (=> bm!7956 m!88517))

(declare-fun m!88519 () Bool)

(assert (=> bm!7961 m!88519))

(assert (=> b!84571 m!88511))

(assert (=> b!84571 m!88515))

(declare-fun m!88521 () Bool)

(assert (=> b!84571 m!88521))

(declare-fun m!88523 () Bool)

(assert (=> b!84571 m!88523))

(declare-fun m!88525 () Bool)

(assert (=> b!84571 m!88525))

(declare-fun m!88527 () Bool)

(assert (=> b!84571 m!88527))

(declare-fun m!88529 () Bool)

(assert (=> b!84571 m!88529))

(declare-fun m!88531 () Bool)

(assert (=> b!84571 m!88531))

(declare-fun m!88533 () Bool)

(assert (=> b!84571 m!88533))

(declare-fun m!88535 () Bool)

(assert (=> b!84571 m!88535))

(declare-fun m!88537 () Bool)

(assert (=> b!84571 m!88537))

(assert (=> b!84571 m!88527))

(assert (=> b!84571 m!88531))

(declare-fun m!88539 () Bool)

(assert (=> b!84571 m!88539))

(declare-fun m!88541 () Bool)

(assert (=> b!84571 m!88541))

(assert (=> b!84571 m!88541))

(declare-fun m!88543 () Bool)

(assert (=> b!84571 m!88543))

(declare-fun m!88545 () Bool)

(assert (=> b!84571 m!88545))

(assert (=> b!84571 m!88525))

(declare-fun m!88547 () Bool)

(assert (=> b!84571 m!88547))

(declare-fun m!88549 () Bool)

(assert (=> b!84571 m!88549))

(assert (=> b!84560 m!88511))

(assert (=> b!84560 m!86141))

(assert (=> b!84560 m!88511))

(declare-fun m!88551 () Bool)

(assert (=> b!84560 m!88551))

(declare-fun m!88553 () Bool)

(assert (=> b!84560 m!88553))

(assert (=> b!84560 m!88553))

(assert (=> b!84560 m!86141))

(declare-fun m!88555 () Bool)

(assert (=> b!84560 m!88555))

(assert (=> b!84562 m!88511))

(assert (=> b!84562 m!88511))

(declare-fun m!88557 () Bool)

(assert (=> b!84562 m!88557))

(declare-fun m!88559 () Bool)

(assert (=> b!84578 m!88559))

(declare-fun m!88561 () Bool)

(assert (=> b!84567 m!88561))

(assert (=> b!84569 m!88511))

(assert (=> b!84569 m!88511))

(assert (=> b!84569 m!88557))

(assert (=> d!21747 m!86067))

(assert (=> d!21077 d!21747))

(declare-fun d!21749 () Bool)

(declare-fun e!55156 () Bool)

(assert (=> d!21749 e!55156))

(declare-fun res!43639 () Bool)

(assert (=> d!21749 (=> res!43639 e!55156)))

(declare-fun lt!39870 () Bool)

(assert (=> d!21749 (= res!43639 (not lt!39870))))

(declare-fun lt!39872 () Bool)

(assert (=> d!21749 (= lt!39870 lt!39872)))

(declare-fun lt!39871 () Unit!2426)

(declare-fun e!55155 () Unit!2426)

(assert (=> d!21749 (= lt!39871 e!55155)))

(declare-fun c!13653 () Bool)

(assert (=> d!21749 (= c!13653 lt!39872)))

(assert (=> d!21749 (= lt!39872 (containsKey!141 (toList!739 (getCurrentListMap!425 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)))))))

(assert (=> d!21749 (= (contains!749 (getCurrentListMap!425 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)))) lt!39870)))

(declare-fun b!84579 () Bool)

(declare-fun lt!39869 () Unit!2426)

(assert (=> b!84579 (= e!55155 lt!39869)))

(assert (=> b!84579 (= lt!39869 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 (getCurrentListMap!425 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)))))))

(assert (=> b!84579 (isDefined!91 (getValueByKey!137 (toList!739 (getCurrentListMap!425 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)))))))

(declare-fun b!84580 () Bool)

(declare-fun Unit!2490 () Unit!2426)

(assert (=> b!84580 (= e!55155 Unit!2490)))

(declare-fun b!84581 () Bool)

(assert (=> b!84581 (= e!55156 (isDefined!91 (getValueByKey!137 (toList!739 (getCurrentListMap!425 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998))))))))

(assert (= (and d!21749 c!13653) b!84579))

(assert (= (and d!21749 (not c!13653)) b!84580))

(assert (= (and d!21749 (not res!43639)) b!84581))

(assert (=> d!21749 m!86769))

(declare-fun m!88563 () Bool)

(assert (=> d!21749 m!88563))

(assert (=> b!84579 m!86769))

(declare-fun m!88565 () Bool)

(assert (=> b!84579 m!88565))

(assert (=> b!84579 m!86769))

(declare-fun m!88567 () Bool)

(assert (=> b!84579 m!88567))

(assert (=> b!84579 m!88567))

(declare-fun m!88569 () Bool)

(assert (=> b!84579 m!88569))

(assert (=> b!84581 m!86769))

(assert (=> b!84581 m!88567))

(assert (=> b!84581 m!88567))

(assert (=> b!84581 m!88569))

(assert (=> d!21077 d!21749))

(declare-fun b!84591 () Bool)

(declare-fun res!43649 () Bool)

(declare-fun e!55162 () Bool)

(assert (=> b!84591 (=> (not res!43649) (not e!55162))))

(assert (=> b!84591 (= res!43649 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun b!84592 () Bool)

(assert (=> b!84592 (= e!55162 (bvslt (size!2144 (_keys!3983 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!21751 () Bool)

(declare-fun e!55161 () Bool)

(assert (=> d!21751 e!55161))

(declare-fun res!43651 () Bool)

(assert (=> d!21751 (=> (not res!43651) (not e!55161))))

(assert (=> d!21751 (= res!43651 (and (bvsge (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000000) (bvslt (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (size!2144 (_keys!3983 newMap!16)))))))

(declare-fun lt!39875 () Unit!2426)

(declare-fun choose!1 (array!3991 (_ BitVec 32) (_ BitVec 64)) Unit!2426)

(assert (=> d!21751 (= lt!39875 (choose!1 (_keys!3983 newMap!16) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> d!21751 e!55162))

(declare-fun res!43648 () Bool)

(assert (=> d!21751 (=> (not res!43648) (not e!55162))))

(assert (=> d!21751 (= res!43648 (and (bvsge (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000000) (bvslt (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (size!2144 (_keys!3983 newMap!16)))))))

(assert (=> d!21751 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3983 newMap!16) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) lt!39875)))

(declare-fun b!84593 () Bool)

(assert (=> b!84593 (= e!55161 (= (arrayCountValidKeys!0 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3983 newMap!16) #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!84590 () Bool)

(declare-fun res!43650 () Bool)

(assert (=> b!84590 (=> (not res!43650) (not e!55162))))

(assert (=> b!84590 (= res!43650 (not (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998))))))))

(assert (= (and d!21751 res!43648) b!84590))

(assert (= (and b!84590 res!43650) b!84591))

(assert (= (and b!84591 res!43649) b!84592))

(assert (= (and d!21751 res!43651) b!84593))

(assert (=> b!84591 m!85563))

(assert (=> b!84591 m!85777))

(assert (=> d!21751 m!85563))

(declare-fun m!88571 () Bool)

(assert (=> d!21751 m!88571))

(assert (=> b!84593 m!86767))

(assert (=> b!84593 m!86755))

(assert (=> b!84593 m!85757))

(declare-fun m!88573 () Bool)

(assert (=> b!84590 m!88573))

(assert (=> b!84590 m!88573))

(declare-fun m!88575 () Bool)

(assert (=> b!84590 m!88575))

(assert (=> d!21077 d!21751))

(declare-fun bm!7963 () Bool)

(declare-fun c!13654 () Bool)

(declare-fun call!7966 () Bool)

(assert (=> bm!7963 (= call!7966 (arrayNoDuplicates!0 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (bvadd lt!39383 #b00000000000000000000000000000001) (ite c!13654 (Cons!1518 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) lt!39383) lt!39387) lt!39387)))))

(declare-fun d!21753 () Bool)

(declare-fun res!43654 () Bool)

(declare-fun e!55164 () Bool)

(assert (=> d!21753 (=> res!43654 e!55164)))

(assert (=> d!21753 (= res!43654 (bvsge lt!39383 (size!2144 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))))))))

(assert (=> d!21753 (= (arrayNoDuplicates!0 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) lt!39383 lt!39387) e!55164)))

(declare-fun b!84594 () Bool)

(declare-fun e!55165 () Bool)

(assert (=> b!84594 (= e!55165 call!7966)))

(declare-fun b!84595 () Bool)

(assert (=> b!84595 (= e!55165 call!7966)))

(declare-fun b!84596 () Bool)

(declare-fun e!55166 () Bool)

(assert (=> b!84596 (= e!55166 (contains!750 lt!39387 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) lt!39383)))))

(declare-fun b!84597 () Bool)

(declare-fun e!55163 () Bool)

(assert (=> b!84597 (= e!55163 e!55165)))

(assert (=> b!84597 (= c!13654 (validKeyInArray!0 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) lt!39383)))))

(declare-fun b!84598 () Bool)

(assert (=> b!84598 (= e!55164 e!55163)))

(declare-fun res!43653 () Bool)

(assert (=> b!84598 (=> (not res!43653) (not e!55163))))

(assert (=> b!84598 (= res!43653 (not e!55166))))

(declare-fun res!43652 () Bool)

(assert (=> b!84598 (=> (not res!43652) (not e!55166))))

(assert (=> b!84598 (= res!43652 (validKeyInArray!0 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) lt!39383)))))

(assert (= (and d!21753 (not res!43654)) b!84598))

(assert (= (and b!84598 res!43652) b!84596))

(assert (= (and b!84598 res!43653) b!84597))

(assert (= (and b!84597 c!13654) b!84594))

(assert (= (and b!84597 (not c!13654)) b!84595))

(assert (= (or b!84594 b!84595) bm!7963))

(declare-fun m!88577 () Bool)

(assert (=> bm!7963 m!88577))

(declare-fun m!88579 () Bool)

(assert (=> bm!7963 m!88579))

(assert (=> b!84596 m!88577))

(assert (=> b!84596 m!88577))

(declare-fun m!88581 () Bool)

(assert (=> b!84596 m!88581))

(assert (=> b!84597 m!88577))

(assert (=> b!84597 m!88577))

(declare-fun m!88583 () Bool)

(assert (=> b!84597 m!88583))

(assert (=> b!84598 m!88577))

(assert (=> b!84598 m!88577))

(assert (=> b!84598 m!88583))

(assert (=> d!21077 d!21753))

(declare-fun d!21755 () Bool)

(assert (=> d!21755 (arrayContainsKey!0 lt!39382 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!39876 () Unit!2426)

(assert (=> d!21755 (= lt!39876 (choose!13 lt!39382 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998))))))

(assert (=> d!21755 (bvsge (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000000)))

(assert (=> d!21755 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!39382 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998))) lt!39876)))

(declare-fun bs!3582 () Bool)

(assert (= bs!3582 d!21755))

(assert (=> bs!3582 m!85563))

(assert (=> bs!3582 m!86749))

(assert (=> bs!3582 m!85563))

(declare-fun m!88585 () Bool)

(assert (=> bs!3582 m!88585))

(assert (=> d!21077 d!21755))

(declare-fun b!84599 () Bool)

(declare-fun e!55167 () (_ BitVec 32))

(assert (=> b!84599 (= e!55167 #b00000000000000000000000000000000)))

(declare-fun lt!39877 () (_ BitVec 32))

(declare-fun d!21757 () Bool)

(assert (=> d!21757 (and (bvsge lt!39877 #b00000000000000000000000000000000) (bvsle lt!39877 (bvsub (size!2144 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!21757 (= lt!39877 e!55167)))

(declare-fun c!13655 () Bool)

(assert (=> d!21757 (= c!13655 (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(assert (=> d!21757 (and (bvsle #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2144 (_keys!3983 newMap!16)) (size!2144 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))))))))

(assert (=> d!21757 (= (arrayCountValidKeys!0 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) lt!39877)))

(declare-fun b!84600 () Bool)

(declare-fun e!55168 () (_ BitVec 32))

(assert (=> b!84600 (= e!55167 e!55168)))

(declare-fun c!13656 () Bool)

(assert (=> b!84600 (= c!13656 (validKeyInArray!0 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!84601 () Bool)

(declare-fun call!7967 () (_ BitVec 32))

(assert (=> b!84601 (= e!55168 call!7967)))

(declare-fun bm!7964 () Bool)

(assert (=> bm!7964 (= call!7967 (arrayCountValidKeys!0 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84602 () Bool)

(assert (=> b!84602 (= e!55168 (bvadd #b00000000000000000000000000000001 call!7967))))

(assert (= (and d!21757 c!13655) b!84599))

(assert (= (and d!21757 (not c!13655)) b!84600))

(assert (= (and b!84600 c!13656) b!84602))

(assert (= (and b!84600 (not c!13656)) b!84601))

(assert (= (or b!84602 b!84601) bm!7964))

(declare-fun m!88587 () Bool)

(assert (=> b!84600 m!88587))

(assert (=> b!84600 m!88587))

(declare-fun m!88589 () Bool)

(assert (=> b!84600 m!88589))

(declare-fun m!88591 () Bool)

(assert (=> bm!7964 m!88591))

(assert (=> d!21077 d!21757))

(declare-fun b!84603 () Bool)

(declare-fun e!55180 () Bool)

(declare-fun call!7972 () Bool)

(assert (=> b!84603 (= e!55180 (not call!7972))))

(declare-fun b!84604 () Bool)

(declare-fun e!55174 () Bool)

(declare-fun e!55178 () Bool)

(assert (=> b!84604 (= e!55174 e!55178)))

(declare-fun c!13662 () Bool)

(assert (=> b!84604 (= c!13662 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!84605 () Bool)

(declare-fun lt!39881 () ListLongMap!1447)

(declare-fun e!55169 () Bool)

(assert (=> b!84605 (= e!55169 (= (apply!81 lt!39881 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) #b00000000000000000000000000000000)) (get!1193 (select (arr!1901 (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!84605 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2145 (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))))))))

(assert (=> b!84605 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))))))))

(declare-fun b!84606 () Bool)

(declare-fun e!55176 () ListLongMap!1447)

(declare-fun call!7974 () ListLongMap!1447)

(assert (=> b!84606 (= e!55176 call!7974)))

(declare-fun call!7973 () ListLongMap!1447)

(declare-fun c!13657 () Bool)

(declare-fun call!7970 () ListLongMap!1447)

(declare-fun bm!7965 () Bool)

(declare-fun call!7969 () ListLongMap!1447)

(declare-fun c!13660 () Bool)

(declare-fun call!7968 () ListLongMap!1447)

(assert (=> bm!7965 (= call!7973 (+!107 (ite c!13657 call!7968 (ite c!13660 call!7970 call!7969)) (ite (or c!13657 c!13660) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun e!55171 () Bool)

(declare-fun b!84607 () Bool)

(assert (=> b!84607 (= e!55171 (validKeyInArray!0 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!84608 () Bool)

(declare-fun res!43662 () Bool)

(assert (=> b!84608 (=> (not res!43662) (not e!55174))))

(declare-fun e!55170 () Bool)

(assert (=> b!84608 (= res!43662 e!55170)))

(declare-fun res!43663 () Bool)

(assert (=> b!84608 (=> res!43663 e!55170)))

(assert (=> b!84608 (= res!43663 (not e!55171))))

(declare-fun res!43655 () Bool)

(assert (=> b!84608 (=> (not res!43655) (not e!55171))))

(assert (=> b!84608 (= res!43655 (bvslt #b00000000000000000000000000000000 (size!2144 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))))))))

(declare-fun b!84609 () Bool)

(declare-fun call!7971 () Bool)

(assert (=> b!84609 (= e!55178 (not call!7971))))

(declare-fun b!84610 () Bool)

(declare-fun e!55179 () Bool)

(assert (=> b!84610 (= e!55180 e!55179)))

(declare-fun res!43656 () Bool)

(assert (=> b!84610 (= res!43656 call!7972)))

(assert (=> b!84610 (=> (not res!43656) (not e!55179))))

(declare-fun bm!7966 () Bool)

(assert (=> bm!7966 (= call!7971 (contains!749 lt!39881 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84611 () Bool)

(declare-fun res!43658 () Bool)

(assert (=> b!84611 (=> (not res!43658) (not e!55174))))

(assert (=> b!84611 (= res!43658 e!55180)))

(declare-fun c!13659 () Bool)

(assert (=> b!84611 (= c!13659 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!21759 () Bool)

(assert (=> d!21759 e!55174))

(declare-fun res!43661 () Bool)

(assert (=> d!21759 (=> (not res!43661) (not e!55174))))

(assert (=> d!21759 (= res!43661 (or (bvsge #b00000000000000000000000000000000 (size!2144 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))))))))))

(declare-fun lt!39894 () ListLongMap!1447)

(assert (=> d!21759 (= lt!39881 lt!39894)))

(declare-fun lt!39891 () Unit!2426)

(declare-fun e!55175 () Unit!2426)

(assert (=> d!21759 (= lt!39891 e!55175)))

(declare-fun c!13658 () Bool)

(declare-fun e!55172 () Bool)

(assert (=> d!21759 (= c!13658 e!55172)))

(declare-fun res!43659 () Bool)

(assert (=> d!21759 (=> (not res!43659) (not e!55172))))

(assert (=> d!21759 (= res!43659 (bvslt #b00000000000000000000000000000000 (size!2144 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))))))))

(declare-fun e!55181 () ListLongMap!1447)

(assert (=> d!21759 (= lt!39894 e!55181)))

(assert (=> d!21759 (= c!13657 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21759 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21759 (= (getCurrentListMap!425 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39881)))

(declare-fun b!84612 () Bool)

(assert (=> b!84612 (= e!55179 (= (apply!81 lt!39881 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 newMap!16)))))

(declare-fun b!84613 () Bool)

(declare-fun e!55177 () Bool)

(assert (=> b!84613 (= e!55178 e!55177)))

(declare-fun res!43657 () Bool)

(assert (=> b!84613 (= res!43657 call!7971)))

(assert (=> b!84613 (=> (not res!43657) (not e!55177))))

(declare-fun b!84614 () Bool)

(assert (=> b!84614 (= e!55172 (validKeyInArray!0 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!84615 () Bool)

(assert (=> b!84615 (= e!55181 e!55176)))

(assert (=> b!84615 (= c!13660 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7967 () Bool)

(assert (=> bm!7967 (= call!7970 call!7968)))

(declare-fun b!84616 () Bool)

(declare-fun lt!39893 () Unit!2426)

(assert (=> b!84616 (= e!55175 lt!39893)))

(declare-fun lt!39899 () ListLongMap!1447)

(assert (=> b!84616 (= lt!39899 (getCurrentListMapNoExtraKeys!71 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39896 () (_ BitVec 64))

(assert (=> b!84616 (= lt!39896 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39897 () (_ BitVec 64))

(assert (=> b!84616 (= lt!39897 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!39879 () Unit!2426)

(assert (=> b!84616 (= lt!39879 (addStillContains!57 lt!39899 lt!39896 (zeroValue!2210 newMap!16) lt!39897))))

(assert (=> b!84616 (contains!749 (+!107 lt!39899 (tuple2!2201 lt!39896 (zeroValue!2210 newMap!16))) lt!39897)))

(declare-fun lt!39898 () Unit!2426)

(assert (=> b!84616 (= lt!39898 lt!39879)))

(declare-fun lt!39888 () ListLongMap!1447)

(assert (=> b!84616 (= lt!39888 (getCurrentListMapNoExtraKeys!71 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39885 () (_ BitVec 64))

(assert (=> b!84616 (= lt!39885 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39892 () (_ BitVec 64))

(assert (=> b!84616 (= lt!39892 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!39883 () Unit!2426)

(assert (=> b!84616 (= lt!39883 (addApplyDifferent!57 lt!39888 lt!39885 (minValue!2210 newMap!16) lt!39892))))

(assert (=> b!84616 (= (apply!81 (+!107 lt!39888 (tuple2!2201 lt!39885 (minValue!2210 newMap!16))) lt!39892) (apply!81 lt!39888 lt!39892))))

(declare-fun lt!39878 () Unit!2426)

(assert (=> b!84616 (= lt!39878 lt!39883)))

(declare-fun lt!39882 () ListLongMap!1447)

(assert (=> b!84616 (= lt!39882 (getCurrentListMapNoExtraKeys!71 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39884 () (_ BitVec 64))

(assert (=> b!84616 (= lt!39884 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39887 () (_ BitVec 64))

(assert (=> b!84616 (= lt!39887 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!39889 () Unit!2426)

(assert (=> b!84616 (= lt!39889 (addApplyDifferent!57 lt!39882 lt!39884 (zeroValue!2210 newMap!16) lt!39887))))

(assert (=> b!84616 (= (apply!81 (+!107 lt!39882 (tuple2!2201 lt!39884 (zeroValue!2210 newMap!16))) lt!39887) (apply!81 lt!39882 lt!39887))))

(declare-fun lt!39890 () Unit!2426)

(assert (=> b!84616 (= lt!39890 lt!39889)))

(declare-fun lt!39886 () ListLongMap!1447)

(assert (=> b!84616 (= lt!39886 (getCurrentListMapNoExtraKeys!71 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39895 () (_ BitVec 64))

(assert (=> b!84616 (= lt!39895 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39880 () (_ BitVec 64))

(assert (=> b!84616 (= lt!39880 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!84616 (= lt!39893 (addApplyDifferent!57 lt!39886 lt!39895 (minValue!2210 newMap!16) lt!39880))))

(assert (=> b!84616 (= (apply!81 (+!107 lt!39886 (tuple2!2201 lt!39895 (minValue!2210 newMap!16))) lt!39880) (apply!81 lt!39886 lt!39880))))

(declare-fun bm!7968 () Bool)

(assert (=> bm!7968 (= call!7969 call!7970)))

(declare-fun b!84617 () Bool)

(declare-fun Unit!2491 () Unit!2426)

(assert (=> b!84617 (= e!55175 Unit!2491)))

(declare-fun b!84618 () Bool)

(assert (=> b!84618 (= e!55170 e!55169)))

(declare-fun res!43660 () Bool)

(assert (=> b!84618 (=> (not res!43660) (not e!55169))))

(assert (=> b!84618 (= res!43660 (contains!749 lt!39881 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!84618 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))))))))

(declare-fun b!84619 () Bool)

(declare-fun e!55173 () ListLongMap!1447)

(assert (=> b!84619 (= e!55173 call!7974)))

(declare-fun b!84620 () Bool)

(assert (=> b!84620 (= e!55177 (= (apply!81 lt!39881 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 newMap!16)))))

(declare-fun bm!7969 () Bool)

(assert (=> bm!7969 (= call!7974 call!7973)))

(declare-fun bm!7970 () Bool)

(assert (=> bm!7970 (= call!7972 (contains!749 lt!39881 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84621 () Bool)

(assert (=> b!84621 (= e!55173 call!7969)))

(declare-fun b!84622 () Bool)

(declare-fun c!13661 () Bool)

(assert (=> b!84622 (= c!13661 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!84622 (= e!55176 e!55173)))

(declare-fun b!84623 () Bool)

(assert (=> b!84623 (= e!55181 (+!107 call!7973 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(declare-fun bm!7971 () Bool)

(assert (=> bm!7971 (= call!7968 (getCurrentListMapNoExtraKeys!71 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (= (and d!21759 c!13657) b!84623))

(assert (= (and d!21759 (not c!13657)) b!84615))

(assert (= (and b!84615 c!13660) b!84606))

(assert (= (and b!84615 (not c!13660)) b!84622))

(assert (= (and b!84622 c!13661) b!84619))

(assert (= (and b!84622 (not c!13661)) b!84621))

(assert (= (or b!84619 b!84621) bm!7968))

(assert (= (or b!84606 bm!7968) bm!7967))

(assert (= (or b!84606 b!84619) bm!7969))

(assert (= (or b!84623 bm!7967) bm!7971))

(assert (= (or b!84623 bm!7969) bm!7965))

(assert (= (and d!21759 res!43659) b!84614))

(assert (= (and d!21759 c!13658) b!84616))

(assert (= (and d!21759 (not c!13658)) b!84617))

(assert (= (and d!21759 res!43661) b!84608))

(assert (= (and b!84608 res!43655) b!84607))

(assert (= (and b!84608 (not res!43663)) b!84618))

(assert (= (and b!84618 res!43660) b!84605))

(assert (= (and b!84608 res!43662) b!84611))

(assert (= (and b!84611 c!13659) b!84610))

(assert (= (and b!84611 (not c!13659)) b!84603))

(assert (= (and b!84610 res!43656) b!84612))

(assert (= (or b!84610 b!84603) bm!7970))

(assert (= (and b!84611 res!43658) b!84604))

(assert (= (and b!84604 c!13662) b!84613))

(assert (= (and b!84604 (not c!13662)) b!84609))

(assert (= (and b!84613 res!43657) b!84620))

(assert (= (or b!84613 b!84609) bm!7966))

(declare-fun b_lambda!3747 () Bool)

(assert (=> (not b_lambda!3747) (not b!84605)))

(assert (=> b!84605 t!5225))

(declare-fun b_and!5133 () Bool)

(assert (= b_and!5129 (and (=> t!5225 result!2895) b_and!5133)))

(assert (=> b!84605 t!5227))

(declare-fun b_and!5135 () Bool)

(assert (= b_and!5131 (and (=> t!5227 result!2897) b_and!5135)))

(declare-fun m!88593 () Bool)

(assert (=> b!84620 m!88593))

(declare-fun m!88595 () Bool)

(assert (=> bm!7966 m!88595))

(assert (=> b!84618 m!88587))

(assert (=> b!84618 m!88587))

(declare-fun m!88597 () Bool)

(assert (=> b!84618 m!88597))

(declare-fun m!88599 () Bool)

(assert (=> bm!7971 m!88599))

(declare-fun m!88601 () Bool)

(assert (=> bm!7965 m!88601))

(declare-fun m!88603 () Bool)

(assert (=> bm!7970 m!88603))

(assert (=> b!84616 m!88587))

(assert (=> b!84616 m!88599))

(declare-fun m!88605 () Bool)

(assert (=> b!84616 m!88605))

(declare-fun m!88607 () Bool)

(assert (=> b!84616 m!88607))

(declare-fun m!88609 () Bool)

(assert (=> b!84616 m!88609))

(declare-fun m!88611 () Bool)

(assert (=> b!84616 m!88611))

(declare-fun m!88613 () Bool)

(assert (=> b!84616 m!88613))

(declare-fun m!88615 () Bool)

(assert (=> b!84616 m!88615))

(declare-fun m!88617 () Bool)

(assert (=> b!84616 m!88617))

(declare-fun m!88619 () Bool)

(assert (=> b!84616 m!88619))

(declare-fun m!88621 () Bool)

(assert (=> b!84616 m!88621))

(assert (=> b!84616 m!88611))

(assert (=> b!84616 m!88615))

(declare-fun m!88623 () Bool)

(assert (=> b!84616 m!88623))

(declare-fun m!88625 () Bool)

(assert (=> b!84616 m!88625))

(assert (=> b!84616 m!88625))

(declare-fun m!88627 () Bool)

(assert (=> b!84616 m!88627))

(declare-fun m!88629 () Bool)

(assert (=> b!84616 m!88629))

(assert (=> b!84616 m!88609))

(declare-fun m!88631 () Bool)

(assert (=> b!84616 m!88631))

(declare-fun m!88633 () Bool)

(assert (=> b!84616 m!88633))

(assert (=> b!84605 m!88587))

(assert (=> b!84605 m!86141))

(assert (=> b!84605 m!88587))

(declare-fun m!88635 () Bool)

(assert (=> b!84605 m!88635))

(declare-fun m!88637 () Bool)

(assert (=> b!84605 m!88637))

(assert (=> b!84605 m!88637))

(assert (=> b!84605 m!86141))

(declare-fun m!88639 () Bool)

(assert (=> b!84605 m!88639))

(assert (=> b!84607 m!88587))

(assert (=> b!84607 m!88587))

(assert (=> b!84607 m!88589))

(declare-fun m!88641 () Bool)

(assert (=> b!84623 m!88641))

(declare-fun m!88643 () Bool)

(assert (=> b!84612 m!88643))

(assert (=> b!84614 m!88587))

(assert (=> b!84614 m!88587))

(assert (=> b!84614 m!88589))

(assert (=> d!21759 m!86067))

(assert (=> d!21077 d!21759))

(assert (=> d!21077 d!21101))

(declare-fun b!84624 () Bool)

(declare-fun e!55184 () Bool)

(declare-fun e!55182 () Bool)

(assert (=> b!84624 (= e!55184 e!55182)))

(declare-fun c!13663 () Bool)

(assert (=> b!84624 (= c!13663 (validKeyInArray!0 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!84625 () Bool)

(declare-fun e!55183 () Bool)

(declare-fun call!7975 () Bool)

(assert (=> b!84625 (= e!55183 call!7975)))

(declare-fun b!84626 () Bool)

(assert (=> b!84626 (= e!55182 e!55183)))

(declare-fun lt!39901 () (_ BitVec 64))

(assert (=> b!84626 (= lt!39901 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!39902 () Unit!2426)

(assert (=> b!84626 (= lt!39902 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) lt!39901 #b00000000000000000000000000000000))))

(assert (=> b!84626 (arrayContainsKey!0 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) lt!39901 #b00000000000000000000000000000000)))

(declare-fun lt!39900 () Unit!2426)

(assert (=> b!84626 (= lt!39900 lt!39902)))

(declare-fun res!43664 () Bool)

(assert (=> b!84626 (= res!43664 (= (seekEntryOrOpen!0 (select (arr!1900 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16)))) #b00000000000000000000000000000000) (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (mask!6333 newMap!16)) (Found!245 #b00000000000000000000000000000000)))))

(assert (=> b!84626 (=> (not res!43664) (not e!55183))))

(declare-fun d!21761 () Bool)

(declare-fun res!43665 () Bool)

(assert (=> d!21761 (=> res!43665 e!55184)))

(assert (=> d!21761 (= res!43665 (bvsge #b00000000000000000000000000000000 (size!2144 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))))))))

(assert (=> d!21761 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (mask!6333 newMap!16)) e!55184)))

(declare-fun b!84627 () Bool)

(assert (=> b!84627 (= e!55182 call!7975)))

(declare-fun bm!7972 () Bool)

(assert (=> bm!7972 (= call!7975 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (mask!6333 newMap!16)))))

(assert (= (and d!21761 (not res!43665)) b!84624))

(assert (= (and b!84624 c!13663) b!84626))

(assert (= (and b!84624 (not c!13663)) b!84627))

(assert (= (and b!84626 res!43664) b!84625))

(assert (= (or b!84625 b!84627) bm!7972))

(assert (=> b!84624 m!88587))

(assert (=> b!84624 m!88587))

(assert (=> b!84624 m!88589))

(assert (=> b!84626 m!88587))

(declare-fun m!88645 () Bool)

(assert (=> b!84626 m!88645))

(declare-fun m!88647 () Bool)

(assert (=> b!84626 m!88647))

(assert (=> b!84626 m!88587))

(declare-fun m!88649 () Bool)

(assert (=> b!84626 m!88649))

(declare-fun m!88651 () Bool)

(assert (=> bm!7972 m!88651))

(assert (=> d!21077 d!21761))

(declare-fun d!21763 () Bool)

(assert (=> d!21763 (= (arrayCountValidKeys!0 lt!39396 (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (bvadd (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!39905 () Unit!2426)

(declare-fun choose!2 (array!3991 (_ BitVec 32)) Unit!2426)

(assert (=> d!21763 (= lt!39905 (choose!2 lt!39396 (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998))))))

(declare-fun e!55187 () Bool)

(assert (=> d!21763 e!55187))

(declare-fun res!43670 () Bool)

(assert (=> d!21763 (=> (not res!43670) (not e!55187))))

(assert (=> d!21763 (= res!43670 (and (bvsge (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000000) (bvslt (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (size!2144 lt!39396))))))

(assert (=> d!21763 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!39396 (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998))) lt!39905)))

(declare-fun b!84632 () Bool)

(declare-fun res!43671 () Bool)

(assert (=> b!84632 (=> (not res!43671) (not e!55187))))

(assert (=> b!84632 (= res!43671 (validKeyInArray!0 (select (arr!1900 lt!39396) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)))))))

(declare-fun b!84633 () Bool)

(assert (=> b!84633 (= e!55187 (bvslt (size!2144 lt!39396) #b01111111111111111111111111111111))))

(assert (= (and d!21763 res!43670) b!84632))

(assert (= (and b!84632 res!43671) b!84633))

(assert (=> d!21763 m!86763))

(declare-fun m!88653 () Bool)

(assert (=> d!21763 m!88653))

(declare-fun m!88655 () Bool)

(assert (=> b!84632 m!88655))

(assert (=> b!84632 m!88655))

(declare-fun m!88657 () Bool)

(assert (=> b!84632 m!88657))

(assert (=> d!21077 d!21763))

(declare-fun d!21765 () Bool)

(declare-fun e!55188 () Bool)

(assert (=> d!21765 e!55188))

(declare-fun res!43672 () Bool)

(assert (=> d!21765 (=> (not res!43672) (not e!55188))))

(assert (=> d!21765 (= res!43672 (and (bvsge (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000000) (bvslt (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (size!2144 lt!39400))))))

(declare-fun lt!39906 () Unit!2426)

(assert (=> d!21765 (= lt!39906 (choose!501 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (defaultEntry!2316 newMap!16)))))

(assert (=> d!21765 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21765 (= (lemmaValidKeyInArrayIsInListMap!89 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (defaultEntry!2316 newMap!16)) lt!39906)))

(declare-fun b!84634 () Bool)

(assert (=> b!84634 (= e!55188 (contains!749 (getCurrentListMap!425 lt!39400 lt!39401 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1900 lt!39400) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)))))))

(assert (= (and d!21765 res!43672) b!84634))

(declare-fun m!88659 () Bool)

(assert (=> d!21765 m!88659))

(assert (=> d!21765 m!86067))

(assert (=> b!84634 m!86745))

(declare-fun m!88661 () Bool)

(assert (=> b!84634 m!88661))

(assert (=> b!84634 m!86745))

(assert (=> b!84634 m!88661))

(declare-fun m!88663 () Bool)

(assert (=> b!84634 m!88663))

(assert (=> d!21077 d!21765))

(declare-fun d!21767 () Bool)

(declare-fun e!55191 () Bool)

(assert (=> d!21767 e!55191))

(declare-fun res!43675 () Bool)

(assert (=> d!21767 (=> (not res!43675) (not e!55191))))

(assert (=> d!21767 (= res!43675 (and (bvsge (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000000) (bvslt (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (size!2144 (_keys!3983 newMap!16))) (bvslt (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (size!2145 (_values!2299 newMap!16)))))))

(declare-fun lt!39909 () Unit!2426)

(declare-fun choose!503 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) (_ BitVec 64) V!3017 Int) Unit!2426)

(assert (=> d!21767 (= lt!39909 (choose!503 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 (defaultEntry!2316 newMap!16)))))

(assert (=> d!21767 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21767 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!18 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 (defaultEntry!2316 newMap!16)) lt!39909)))

(declare-fun b!84637 () Bool)

(assert (=> b!84637 (= e!55191 (= (+!107 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (getCurrentListMap!425 (array!3992 (store (arr!1900 (_keys!3983 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) (size!2144 (_keys!3983 newMap!16))) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))))

(assert (= (and d!21767 res!43675) b!84637))

(assert (=> d!21767 m!85563))

(declare-fun m!88665 () Bool)

(assert (=> d!21767 m!88665))

(assert (=> d!21767 m!86067))

(assert (=> b!84637 m!85779))

(assert (=> b!84637 m!86765))

(assert (=> b!84637 m!85779))

(assert (=> b!84637 m!86759))

(assert (=> b!84637 m!86753))

(assert (=> b!84637 m!86767))

(assert (=> d!21077 d!21767))

(declare-fun b!84638 () Bool)

(declare-fun e!55192 () (_ BitVec 32))

(assert (=> b!84638 (= e!55192 #b00000000000000000000000000000000)))

(declare-fun d!21769 () Bool)

(declare-fun lt!39910 () (_ BitVec 32))

(assert (=> d!21769 (and (bvsge lt!39910 #b00000000000000000000000000000000) (bvsle lt!39910 (bvsub (size!2144 lt!39396) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)))))))

(assert (=> d!21769 (= lt!39910 e!55192)))

(declare-fun c!13664 () Bool)

(assert (=> d!21769 (= c!13664 (bvsge (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (bvadd (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000001)))))

(assert (=> d!21769 (and (bvsle (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (bvadd (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000001)) (bvsge (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000001) (size!2144 lt!39396)))))

(assert (=> d!21769 (= (arrayCountValidKeys!0 lt!39396 (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) (bvadd (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000001)) lt!39910)))

(declare-fun b!84639 () Bool)

(declare-fun e!55193 () (_ BitVec 32))

(assert (=> b!84639 (= e!55192 e!55193)))

(declare-fun c!13665 () Bool)

(assert (=> b!84639 (= c!13665 (validKeyInArray!0 (select (arr!1900 lt!39396) (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)))))))

(declare-fun b!84640 () Bool)

(declare-fun call!7976 () (_ BitVec 32))

(assert (=> b!84640 (= e!55193 call!7976)))

(declare-fun bm!7973 () Bool)

(assert (=> bm!7973 (= call!7976 (arrayCountValidKeys!0 lt!39396 (bvadd (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000001) (bvadd (ite c!13218 (index!3119 lt!38998) (index!3116 lt!38998)) #b00000000000000000000000000000001)))))

(declare-fun b!84641 () Bool)

(assert (=> b!84641 (= e!55193 (bvadd #b00000000000000000000000000000001 call!7976))))

(assert (= (and d!21769 c!13664) b!84638))

(assert (= (and d!21769 (not c!13664)) b!84639))

(assert (= (and b!84639 c!13665) b!84641))

(assert (= (and b!84639 (not c!13665)) b!84640))

(assert (= (or b!84641 b!84640) bm!7973))

(assert (=> b!84639 m!88655))

(assert (=> b!84639 m!88655))

(assert (=> b!84639 m!88657))

(declare-fun m!88667 () Bool)

(assert (=> bm!7973 m!88667))

(assert (=> d!21077 d!21769))

(declare-fun d!21771 () Bool)

(declare-fun res!43676 () Bool)

(declare-fun e!55194 () Bool)

(assert (=> d!21771 (=> res!43676 e!55194)))

(assert (=> d!21771 (= res!43676 (or ((_ is Nil!1520) lt!39314) ((_ is Nil!1520) (t!5214 lt!39314))))))

(assert (=> d!21771 (= (isStrictlySorted!292 lt!39314) e!55194)))

(declare-fun b!84642 () Bool)

(declare-fun e!55195 () Bool)

(assert (=> b!84642 (= e!55194 e!55195)))

(declare-fun res!43677 () Bool)

(assert (=> b!84642 (=> (not res!43677) (not e!55195))))

(assert (=> b!84642 (= res!43677 (bvslt (_1!1111 (h!2109 lt!39314)) (_1!1111 (h!2109 (t!5214 lt!39314)))))))

(declare-fun b!84643 () Bool)

(assert (=> b!84643 (= e!55195 (isStrictlySorted!292 (t!5214 lt!39314)))))

(assert (= (and d!21771 (not res!43676)) b!84642))

(assert (= (and b!84642 res!43677) b!84643))

(declare-fun m!88669 () Bool)

(assert (=> b!84643 m!88669))

(assert (=> d!21075 d!21771))

(declare-fun d!21773 () Bool)

(declare-fun res!43678 () Bool)

(declare-fun e!55196 () Bool)

(assert (=> d!21773 (=> res!43678 e!55196)))

(assert (=> d!21773 (= res!43678 (or ((_ is Nil!1520) (toList!739 (+!107 lt!38728 lt!38742))) ((_ is Nil!1520) (t!5214 (toList!739 (+!107 lt!38728 lt!38742))))))))

(assert (=> d!21773 (= (isStrictlySorted!292 (toList!739 (+!107 lt!38728 lt!38742))) e!55196)))

(declare-fun b!84644 () Bool)

(declare-fun e!55197 () Bool)

(assert (=> b!84644 (= e!55196 e!55197)))

(declare-fun res!43679 () Bool)

(assert (=> b!84644 (=> (not res!43679) (not e!55197))))

(assert (=> b!84644 (= res!43679 (bvslt (_1!1111 (h!2109 (toList!739 (+!107 lt!38728 lt!38742)))) (_1!1111 (h!2109 (t!5214 (toList!739 (+!107 lt!38728 lt!38742)))))))))

(declare-fun b!84645 () Bool)

(assert (=> b!84645 (= e!55197 (isStrictlySorted!292 (t!5214 (toList!739 (+!107 lt!38728 lt!38742)))))))

(assert (= (and d!21773 (not res!43678)) b!84644))

(assert (= (and b!84644 res!43679) b!84645))

(declare-fun m!88671 () Bool)

(assert (=> b!84645 m!88671))

(assert (=> d!21075 d!21773))

(declare-fun d!21775 () Bool)

(declare-fun lt!39911 () Bool)

(assert (=> d!21775 (= lt!39911 (select (content!87 lt!39067) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun e!55198 () Bool)

(assert (=> d!21775 (= lt!39911 e!55198)))

(declare-fun res!43680 () Bool)

(assert (=> d!21775 (=> (not res!43680) (not e!55198))))

(assert (=> d!21775 (= res!43680 ((_ is Cons!1519) lt!39067))))

(assert (=> d!21775 (= (contains!751 lt!39067 (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))) lt!39911)))

(declare-fun b!84646 () Bool)

(declare-fun e!55199 () Bool)

(assert (=> b!84646 (= e!55198 e!55199)))

(declare-fun res!43681 () Bool)

(assert (=> b!84646 (=> res!43681 e!55199)))

(assert (=> b!84646 (= res!43681 (= (h!2109 lt!39067) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun b!84647 () Bool)

(assert (=> b!84647 (= e!55199 (contains!751 (t!5214 lt!39067) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(assert (= (and d!21775 res!43680) b!84646))

(assert (= (and b!84646 (not res!43681)) b!84647))

(declare-fun m!88673 () Bool)

(assert (=> d!21775 m!88673))

(declare-fun m!88675 () Bool)

(assert (=> d!21775 m!88675))

(declare-fun m!88677 () Bool)

(assert (=> b!84647 m!88677))

(assert (=> b!83512 d!21775))

(declare-fun d!21777 () Bool)

(declare-fun res!43682 () Bool)

(declare-fun e!55200 () Bool)

(assert (=> d!21777 (=> res!43682 e!55200)))

(assert (=> d!21777 (= res!43682 (and ((_ is Cons!1519) (toList!739 lt!39077)) (= (_1!1111 (h!2109 (toList!739 lt!39077))) (_1!1111 lt!38742))))))

(assert (=> d!21777 (= (containsKey!141 (toList!739 lt!39077) (_1!1111 lt!38742)) e!55200)))

(declare-fun b!84648 () Bool)

(declare-fun e!55201 () Bool)

(assert (=> b!84648 (= e!55200 e!55201)))

(declare-fun res!43683 () Bool)

(assert (=> b!84648 (=> (not res!43683) (not e!55201))))

(assert (=> b!84648 (= res!43683 (and (or (not ((_ is Cons!1519) (toList!739 lt!39077))) (bvsle (_1!1111 (h!2109 (toList!739 lt!39077))) (_1!1111 lt!38742))) ((_ is Cons!1519) (toList!739 lt!39077)) (bvslt (_1!1111 (h!2109 (toList!739 lt!39077))) (_1!1111 lt!38742))))))

(declare-fun b!84649 () Bool)

(assert (=> b!84649 (= e!55201 (containsKey!141 (t!5214 (toList!739 lt!39077)) (_1!1111 lt!38742)))))

(assert (= (and d!21777 (not res!43682)) b!84648))

(assert (= (and b!84648 res!43683) b!84649))

(declare-fun m!88679 () Bool)

(assert (=> b!84649 m!88679))

(assert (=> d!20959 d!21777))

(declare-fun b!84652 () Bool)

(declare-fun e!55203 () Option!143)

(assert (=> b!84652 (= e!55203 (getValueByKey!137 (t!5214 (toList!739 lt!39284)) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21779 () Bool)

(declare-fun c!13666 () Bool)

(assert (=> d!21779 (= c!13666 (and ((_ is Cons!1519) (toList!739 lt!39284)) (= (_1!1111 (h!2109 (toList!739 lt!39284))) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!55202 () Option!143)

(assert (=> d!21779 (= (getValueByKey!137 (toList!739 lt!39284) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!55202)))

(declare-fun b!84650 () Bool)

(assert (=> b!84650 (= e!55202 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39284)))))))

(declare-fun b!84653 () Bool)

(assert (=> b!84653 (= e!55203 None!141)))

(declare-fun b!84651 () Bool)

(assert (=> b!84651 (= e!55202 e!55203)))

(declare-fun c!13667 () Bool)

(assert (=> b!84651 (= c!13667 (and ((_ is Cons!1519) (toList!739 lt!39284)) (not (= (_1!1111 (h!2109 (toList!739 lt!39284))) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21779 c!13666) b!84650))

(assert (= (and d!21779 (not c!13666)) b!84651))

(assert (= (and b!84651 c!13667) b!84652))

(assert (= (and b!84651 (not c!13667)) b!84653))

(declare-fun m!88681 () Bool)

(assert (=> b!84652 m!88681))

(assert (=> b!83462 d!21779))

(assert (=> b!83502 d!21399))

(declare-fun d!21781 () Bool)

(declare-fun e!55205 () Bool)

(assert (=> d!21781 e!55205))

(declare-fun res!43684 () Bool)

(assert (=> d!21781 (=> res!43684 e!55205)))

(declare-fun lt!39913 () Bool)

(assert (=> d!21781 (= res!43684 (not lt!39913))))

(declare-fun lt!39915 () Bool)

(assert (=> d!21781 (= lt!39913 lt!39915)))

(declare-fun lt!39914 () Unit!2426)

(declare-fun e!55204 () Unit!2426)

(assert (=> d!21781 (= lt!39914 e!55204)))

(declare-fun c!13668 () Bool)

(assert (=> d!21781 (= c!13668 lt!39915)))

(assert (=> d!21781 (= lt!39915 (containsKey!141 (toList!739 lt!39140) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21781 (= (contains!749 lt!39140 #b0000000000000000000000000000000000000000000000000000000000000000) lt!39913)))

(declare-fun b!84654 () Bool)

(declare-fun lt!39912 () Unit!2426)

(assert (=> b!84654 (= e!55204 lt!39912)))

(assert (=> b!84654 (= lt!39912 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39140) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84654 (isDefined!91 (getValueByKey!137 (toList!739 lt!39140) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84655 () Bool)

(declare-fun Unit!2492 () Unit!2426)

(assert (=> b!84655 (= e!55204 Unit!2492)))

(declare-fun b!84656 () Bool)

(assert (=> b!84656 (= e!55205 (isDefined!91 (getValueByKey!137 (toList!739 lt!39140) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21781 c!13668) b!84654))

(assert (= (and d!21781 (not c!13668)) b!84655))

(assert (= (and d!21781 (not res!43684)) b!84656))

(declare-fun m!88683 () Bool)

(assert (=> d!21781 m!88683))

(declare-fun m!88685 () Bool)

(assert (=> b!84654 m!88685))

(declare-fun m!88687 () Bool)

(assert (=> b!84654 m!88687))

(assert (=> b!84654 m!88687))

(declare-fun m!88689 () Bool)

(assert (=> b!84654 m!88689))

(assert (=> b!84656 m!88687))

(assert (=> b!84656 m!88687))

(assert (=> b!84656 m!88689))

(assert (=> d!20923 d!21781))

(assert (=> d!20923 d!20891))

(declare-fun d!21783 () Bool)

(assert (=> d!21783 (= (content!88 Nil!1519) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!21023 d!21783))

(declare-fun d!21785 () Bool)

(declare-fun e!55206 () Bool)

(assert (=> d!21785 e!55206))

(declare-fun res!43685 () Bool)

(assert (=> d!21785 (=> (not res!43685) (not e!55206))))

(declare-fun lt!39917 () ListLongMap!1447)

(assert (=> d!21785 (= res!43685 (contains!749 lt!39917 (_1!1111 (ite (or c!13292 c!13295) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(declare-fun lt!39916 () List!1523)

(assert (=> d!21785 (= lt!39917 (ListLongMap!1448 lt!39916))))

(declare-fun lt!39919 () Unit!2426)

(declare-fun lt!39918 () Unit!2426)

(assert (=> d!21785 (= lt!39919 lt!39918)))

(assert (=> d!21785 (= (getValueByKey!137 lt!39916 (_1!1111 (ite (or c!13292 c!13295) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))) (Some!142 (_2!1111 (ite (or c!13292 c!13295) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(assert (=> d!21785 (= lt!39918 (lemmaContainsTupThenGetReturnValue!57 lt!39916 (_1!1111 (ite (or c!13292 c!13295) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (_2!1111 (ite (or c!13292 c!13295) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(assert (=> d!21785 (= lt!39916 (insertStrictlySorted!60 (toList!739 (ite c!13292 call!7835 (ite c!13295 call!7837 call!7836))) (_1!1111 (ite (or c!13292 c!13295) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (_2!1111 (ite (or c!13292 c!13295) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(assert (=> d!21785 (= (+!107 (ite c!13292 call!7835 (ite c!13295 call!7837 call!7836)) (ite (or c!13292 c!13295) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) lt!39917)))

(declare-fun b!84657 () Bool)

(declare-fun res!43686 () Bool)

(assert (=> b!84657 (=> (not res!43686) (not e!55206))))

(assert (=> b!84657 (= res!43686 (= (getValueByKey!137 (toList!739 lt!39917) (_1!1111 (ite (or c!13292 c!13295) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))) (Some!142 (_2!1111 (ite (or c!13292 c!13295) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))))

(declare-fun b!84658 () Bool)

(assert (=> b!84658 (= e!55206 (contains!751 (toList!739 lt!39917) (ite (or c!13292 c!13295) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (= (and d!21785 res!43685) b!84657))

(assert (= (and b!84657 res!43686) b!84658))

(declare-fun m!88691 () Bool)

(assert (=> d!21785 m!88691))

(declare-fun m!88693 () Bool)

(assert (=> d!21785 m!88693))

(declare-fun m!88695 () Bool)

(assert (=> d!21785 m!88695))

(declare-fun m!88697 () Bool)

(assert (=> d!21785 m!88697))

(declare-fun m!88699 () Bool)

(assert (=> b!84657 m!88699))

(declare-fun m!88701 () Bool)

(assert (=> b!84658 m!88701))

(assert (=> bm!7832 d!21785))

(declare-fun d!21787 () Bool)

(declare-fun res!43687 () Bool)

(declare-fun e!55207 () Bool)

(assert (=> d!21787 (=> res!43687 e!55207)))

(assert (=> d!21787 (= res!43687 (and ((_ is Cons!1519) (toList!739 lt!38907)) (= (_1!1111 (h!2109 (toList!739 lt!38907))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21787 (= (containsKey!141 (toList!739 lt!38907) #b0000000000000000000000000000000000000000000000000000000000000000) e!55207)))

(declare-fun b!84659 () Bool)

(declare-fun e!55208 () Bool)

(assert (=> b!84659 (= e!55207 e!55208)))

(declare-fun res!43688 () Bool)

(assert (=> b!84659 (=> (not res!43688) (not e!55208))))

(assert (=> b!84659 (= res!43688 (and (or (not ((_ is Cons!1519) (toList!739 lt!38907))) (bvsle (_1!1111 (h!2109 (toList!739 lt!38907))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1519) (toList!739 lt!38907)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38907))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84660 () Bool)

(assert (=> b!84660 (= e!55208 (containsKey!141 (t!5214 (toList!739 lt!38907)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21787 (not res!43687)) b!84659))

(assert (= (and b!84659 res!43688) b!84660))

(declare-fun m!88703 () Bool)

(assert (=> b!84660 m!88703))

(assert (=> d!21079 d!21787))

(declare-fun d!21789 () Bool)

(declare-fun lt!39920 () Bool)

(assert (=> d!21789 (= lt!39920 (select (content!87 (t!5214 (toList!739 lt!39057))) lt!38729))))

(declare-fun e!55209 () Bool)

(assert (=> d!21789 (= lt!39920 e!55209)))

(declare-fun res!43689 () Bool)

(assert (=> d!21789 (=> (not res!43689) (not e!55209))))

(assert (=> d!21789 (= res!43689 ((_ is Cons!1519) (t!5214 (toList!739 lt!39057))))))

(assert (=> d!21789 (= (contains!751 (t!5214 (toList!739 lt!39057)) lt!38729) lt!39920)))

(declare-fun b!84661 () Bool)

(declare-fun e!55210 () Bool)

(assert (=> b!84661 (= e!55209 e!55210)))

(declare-fun res!43690 () Bool)

(assert (=> b!84661 (=> res!43690 e!55210)))

(assert (=> b!84661 (= res!43690 (= (h!2109 (t!5214 (toList!739 lt!39057))) lt!38729))))

(declare-fun b!84662 () Bool)

(assert (=> b!84662 (= e!55210 (contains!751 (t!5214 (t!5214 (toList!739 lt!39057))) lt!38729))))

(assert (= (and d!21789 res!43689) b!84661))

(assert (= (and b!84661 (not res!43690)) b!84662))

(declare-fun m!88705 () Bool)

(assert (=> d!21789 m!88705))

(declare-fun m!88707 () Bool)

(assert (=> d!21789 m!88707))

(declare-fun m!88709 () Bool)

(assert (=> b!84662 m!88709))

(assert (=> b!83146 d!21789))

(declare-fun lt!39921 () Bool)

(declare-fun d!21791 () Bool)

(assert (=> d!21791 (= lt!39921 (select (content!87 (toList!739 lt!39261)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!55211 () Bool)

(assert (=> d!21791 (= lt!39921 e!55211)))

(declare-fun res!43691 () Bool)

(assert (=> d!21791 (=> (not res!43691) (not e!55211))))

(assert (=> d!21791 (= res!43691 ((_ is Cons!1519) (toList!739 lt!39261)))))

(assert (=> d!21791 (= (contains!751 (toList!739 lt!39261) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!39921)))

(declare-fun b!84663 () Bool)

(declare-fun e!55212 () Bool)

(assert (=> b!84663 (= e!55211 e!55212)))

(declare-fun res!43692 () Bool)

(assert (=> b!84663 (=> res!43692 e!55212)))

(assert (=> b!84663 (= res!43692 (= (h!2109 (toList!739 lt!39261)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!84664 () Bool)

(assert (=> b!84664 (= e!55212 (contains!751 (t!5214 (toList!739 lt!39261)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1193 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!21791 res!43691) b!84663))

(assert (= (and b!84663 (not res!43692)) b!84664))

(declare-fun m!88711 () Bool)

(assert (=> d!21791 m!88711))

(declare-fun m!88713 () Bool)

(assert (=> d!21791 m!88713))

(declare-fun m!88715 () Bool)

(assert (=> b!84664 m!88715))

(assert (=> b!83442 d!21791))

(assert (=> d!20907 d!20909))

(declare-fun b!84681 () Bool)

(declare-fun res!43703 () Bool)

(declare-fun e!55223 () Bool)

(assert (=> b!84681 (=> (not res!43703) (not e!55223))))

(declare-fun call!7982 () Bool)

(assert (=> b!84681 (= res!43703 call!7982)))

(declare-fun e!55224 () Bool)

(assert (=> b!84681 (= e!55224 e!55223)))

(declare-fun b!84682 () Bool)

(declare-fun res!43701 () Bool)

(declare-fun lt!39924 () SeekEntryResult!245)

(assert (=> b!84682 (= res!43701 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3116 lt!39924)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55221 () Bool)

(assert (=> b!84682 (=> (not res!43701) (not e!55221))))

(declare-fun b!84683 () Bool)

(declare-fun e!55222 () Bool)

(assert (=> b!84683 (= e!55222 e!55224)))

(declare-fun c!13673 () Bool)

(assert (=> b!84683 (= c!13673 ((_ is MissingVacant!245) lt!39924))))

(declare-fun d!21793 () Bool)

(assert (=> d!21793 e!55222))

(declare-fun c!13674 () Bool)

(assert (=> d!21793 (= c!13674 ((_ is MissingZero!245) lt!39924))))

(assert (=> d!21793 (= lt!39924 (seekEntryOrOpen!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(assert (=> d!21793 true))

(declare-fun _$34!836 () Unit!2426)

(assert (=> d!21793 (= (choose!492 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)) _$34!836)))

(declare-fun call!7981 () Bool)

(declare-fun bm!7978 () Bool)

(assert (=> bm!7978 (= call!7981 (arrayContainsKey!0 (_keys!3983 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!7979 () Bool)

(assert (=> bm!7979 (= call!7982 (inRange!0 (ite c!13674 (index!3116 lt!39924) (index!3119 lt!39924)) (mask!6333 newMap!16)))))

(declare-fun b!84684 () Bool)

(assert (=> b!84684 (= e!55224 ((_ is Undefined!245) lt!39924))))

(declare-fun b!84685 () Bool)

(declare-fun res!43704 () Bool)

(assert (=> b!84685 (=> (not res!43704) (not e!55223))))

(assert (=> b!84685 (= res!43704 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3119 lt!39924)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84686 () Bool)

(assert (=> b!84686 (= e!55222 e!55221)))

(declare-fun res!43702 () Bool)

(assert (=> b!84686 (= res!43702 call!7982)))

(assert (=> b!84686 (=> (not res!43702) (not e!55221))))

(declare-fun b!84687 () Bool)

(assert (=> b!84687 (= e!55223 (not call!7981))))

(declare-fun b!84688 () Bool)

(assert (=> b!84688 (= e!55221 (not call!7981))))

(assert (= (and d!21793 c!13674) b!84686))

(assert (= (and d!21793 (not c!13674)) b!84683))

(assert (= (and b!84686 res!43702) b!84682))

(assert (= (and b!84682 res!43701) b!84688))

(assert (= (and b!84683 c!13673) b!84681))

(assert (= (and b!84683 (not c!13673)) b!84684))

(assert (= (and b!84681 res!43703) b!84685))

(assert (= (and b!84685 res!43704) b!84687))

(assert (= (or b!84686 b!84681) bm!7979))

(assert (= (or b!84688 b!84687) bm!7978))

(declare-fun m!88717 () Bool)

(assert (=> b!84685 m!88717))

(assert (=> d!21793 m!85563))

(assert (=> d!21793 m!85879))

(declare-fun m!88719 () Bool)

(assert (=> b!84682 m!88719))

(declare-fun m!88721 () Bool)

(assert (=> bm!7979 m!88721))

(assert (=> bm!7978 m!85563))

(assert (=> bm!7978 m!85885))

(assert (=> d!20907 d!21793))

(assert (=> d!20907 d!21305))

(declare-fun d!21795 () Bool)

(declare-fun e!55225 () Bool)

(assert (=> d!21795 e!55225))

(declare-fun res!43705 () Bool)

(assert (=> d!21795 (=> (not res!43705) (not e!55225))))

(declare-fun lt!39926 () ListLongMap!1447)

(assert (=> d!21795 (= res!43705 (contains!749 lt!39926 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))))

(declare-fun lt!39925 () List!1523)

(assert (=> d!21795 (= lt!39926 (ListLongMap!1448 lt!39925))))

(declare-fun lt!39928 () Unit!2426)

(declare-fun lt!39927 () Unit!2426)

(assert (=> d!21795 (= lt!39928 lt!39927)))

(assert (=> d!21795 (= (getValueByKey!137 lt!39925 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))))

(assert (=> d!21795 (= lt!39927 (lemmaContainsTupThenGetReturnValue!57 lt!39925 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))))

(assert (=> d!21795 (= lt!39925 (insertStrictlySorted!60 (toList!739 call!7822) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))))

(assert (=> d!21795 (= (+!107 call!7822 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))) lt!39926)))

(declare-fun b!84689 () Bool)

(declare-fun res!43706 () Bool)

(assert (=> b!84689 (=> (not res!43706) (not e!55225))))

(assert (=> b!84689 (= res!43706 (= (getValueByKey!137 (toList!739 lt!39926) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))))))))

(declare-fun b!84690 () Bool)

(assert (=> b!84690 (= e!55225 (contains!751 (toList!739 lt!39926) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))))))

(assert (= (and d!21795 res!43705) b!84689))

(assert (= (and b!84689 res!43706) b!84690))

(declare-fun m!88723 () Bool)

(assert (=> d!21795 m!88723))

(declare-fun m!88725 () Bool)

(assert (=> d!21795 m!88725))

(declare-fun m!88727 () Bool)

(assert (=> d!21795 m!88727))

(declare-fun m!88729 () Bool)

(assert (=> d!21795 m!88729))

(declare-fun m!88731 () Bool)

(assert (=> b!84689 m!88731))

(declare-fun m!88733 () Bool)

(assert (=> b!84690 m!88733))

(assert (=> b!83247 d!21795))

(declare-fun d!21797 () Bool)

(declare-fun res!43707 () Bool)

(declare-fun e!55226 () Bool)

(assert (=> d!21797 (=> res!43707 e!55226)))

(assert (=> d!21797 (= res!43707 (and ((_ is Cons!1519) (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))) (= (_1!1111 (h!2109 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(assert (=> d!21797 (= (containsKey!141 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) e!55226)))

(declare-fun b!84691 () Bool)

(declare-fun e!55227 () Bool)

(assert (=> b!84691 (= e!55226 e!55227)))

(declare-fun res!43708 () Bool)

(assert (=> b!84691 (=> (not res!43708) (not e!55227))))

(assert (=> b!84691 (= res!43708 (and (or (not ((_ is Cons!1519) (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))) (bvsle (_1!1111 (h!2109 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))) ((_ is Cons!1519) (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))) (bvslt (_1!1111 (h!2109 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(declare-fun b!84692 () Bool)

(assert (=> b!84692 (= e!55227 (containsKey!141 (t!5214 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (= (and d!21797 (not res!43707)) b!84691))

(assert (= (and b!84691 res!43708) b!84692))

(assert (=> b!84692 m!85563))

(declare-fun m!88735 () Bool)

(assert (=> b!84692 m!88735))

(assert (=> d!21101 d!21797))

(declare-fun e!55229 () Option!143)

(declare-fun b!84695 () Bool)

(assert (=> b!84695 (= e!55229 (getValueByKey!137 (t!5214 (toList!739 lt!39164)) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21799 () Bool)

(declare-fun c!13675 () Bool)

(assert (=> d!21799 (= c!13675 (and ((_ is Cons!1519) (toList!739 lt!39164)) (= (_1!1111 (h!2109 (toList!739 lt!39164))) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!55228 () Option!143)

(assert (=> d!21799 (= (getValueByKey!137 (toList!739 lt!39164) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!55228)))

(declare-fun b!84693 () Bool)

(assert (=> b!84693 (= e!55228 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39164)))))))

(declare-fun b!84696 () Bool)

(assert (=> b!84696 (= e!55229 None!141)))

(declare-fun b!84694 () Bool)

(assert (=> b!84694 (= e!55228 e!55229)))

(declare-fun c!13676 () Bool)

(assert (=> b!84694 (= c!13676 (and ((_ is Cons!1519) (toList!739 lt!39164)) (not (= (_1!1111 (h!2109 (toList!739 lt!39164))) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21799 c!13675) b!84693))

(assert (= (and d!21799 (not c!13675)) b!84694))

(assert (= (and b!84694 c!13676) b!84695))

(assert (= (and b!84694 (not c!13676)) b!84696))

(declare-fun m!88737 () Bool)

(assert (=> b!84695 m!88737))

(assert (=> b!83280 d!21799))

(declare-fun d!21801 () Bool)

(declare-fun res!43709 () Bool)

(declare-fun e!55230 () Bool)

(assert (=> d!21801 (=> res!43709 e!55230)))

(assert (=> d!21801 (= res!43709 (and ((_ is Cons!1519) lt!39027) (= (_1!1111 (h!2109 lt!39027)) (_1!1111 lt!38738))))))

(assert (=> d!21801 (= (containsKey!141 lt!39027 (_1!1111 lt!38738)) e!55230)))

(declare-fun b!84697 () Bool)

(declare-fun e!55231 () Bool)

(assert (=> b!84697 (= e!55230 e!55231)))

(declare-fun res!43710 () Bool)

(assert (=> b!84697 (=> (not res!43710) (not e!55231))))

(assert (=> b!84697 (= res!43710 (and (or (not ((_ is Cons!1519) lt!39027)) (bvsle (_1!1111 (h!2109 lt!39027)) (_1!1111 lt!38738))) ((_ is Cons!1519) lt!39027) (bvslt (_1!1111 (h!2109 lt!39027)) (_1!1111 lt!38738))))))

(declare-fun b!84698 () Bool)

(assert (=> b!84698 (= e!55231 (containsKey!141 (t!5214 lt!39027) (_1!1111 lt!38738)))))

(assert (= (and d!21801 (not res!43709)) b!84697))

(assert (= (and b!84697 res!43710) b!84698))

(declare-fun m!88739 () Bool)

(assert (=> b!84698 m!88739))

(assert (=> b!83379 d!21801))

(declare-fun d!21803 () Bool)

(declare-fun lt!39929 () Bool)

(assert (=> d!21803 (= lt!39929 (select (content!87 lt!39071) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(declare-fun e!55232 () Bool)

(assert (=> d!21803 (= lt!39929 e!55232)))

(declare-fun res!43711 () Bool)

(assert (=> d!21803 (=> (not res!43711) (not e!55232))))

(assert (=> d!21803 (= res!43711 ((_ is Cons!1519) lt!39071))))

(assert (=> d!21803 (= (contains!751 lt!39071 (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))) lt!39929)))

(declare-fun b!84699 () Bool)

(declare-fun e!55233 () Bool)

(assert (=> b!84699 (= e!55232 e!55233)))

(declare-fun res!43712 () Bool)

(assert (=> b!84699 (=> res!43712 e!55233)))

(assert (=> b!84699 (= res!43712 (= (h!2109 lt!39071) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(declare-fun b!84700 () Bool)

(assert (=> b!84700 (= e!55233 (contains!751 (t!5214 lt!39071) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(assert (= (and d!21803 res!43711) b!84699))

(assert (= (and b!84699 (not res!43712)) b!84700))

(declare-fun m!88741 () Bool)

(assert (=> d!21803 m!88741))

(declare-fun m!88743 () Bool)

(assert (=> d!21803 m!88743))

(declare-fun m!88745 () Bool)

(assert (=> b!84700 m!88745))

(assert (=> b!83479 d!21803))

(declare-fun d!21805 () Bool)

(declare-fun lt!39930 () Bool)

(assert (=> d!21805 (= lt!39930 (select (content!87 (t!5214 (toList!739 lt!39032))) lt!38742))))

(declare-fun e!55234 () Bool)

(assert (=> d!21805 (= lt!39930 e!55234)))

(declare-fun res!43713 () Bool)

(assert (=> d!21805 (=> (not res!43713) (not e!55234))))

(assert (=> d!21805 (= res!43713 ((_ is Cons!1519) (t!5214 (toList!739 lt!39032))))))

(assert (=> d!21805 (= (contains!751 (t!5214 (toList!739 lt!39032)) lt!38742) lt!39930)))

(declare-fun b!84701 () Bool)

(declare-fun e!55235 () Bool)

(assert (=> b!84701 (= e!55234 e!55235)))

(declare-fun res!43714 () Bool)

(assert (=> b!84701 (=> res!43714 e!55235)))

(assert (=> b!84701 (= res!43714 (= (h!2109 (t!5214 (toList!739 lt!39032))) lt!38742))))

(declare-fun b!84702 () Bool)

(assert (=> b!84702 (= e!55235 (contains!751 (t!5214 (t!5214 (toList!739 lt!39032))) lt!38742))))

(assert (= (and d!21805 res!43713) b!84701))

(assert (= (and b!84701 (not res!43714)) b!84702))

(assert (=> d!21805 m!88327))

(declare-fun m!88747 () Bool)

(assert (=> d!21805 m!88747))

(declare-fun m!88749 () Bool)

(assert (=> b!84702 m!88749))

(assert (=> b!83226 d!21805))

(declare-fun d!21807 () Bool)

(assert (=> d!21807 (= (apply!81 lt!39198 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1196 (getValueByKey!137 (toList!739 lt!39198) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3583 () Bool)

(assert (= bs!3583 d!21807))

(assert (=> bs!3583 m!87375))

(assert (=> bs!3583 m!87375))

(declare-fun m!88751 () Bool)

(assert (=> bs!3583 m!88751))

(assert (=> b!83360 d!21807))

(declare-fun d!21809 () Bool)

(declare-fun c!13677 () Bool)

(assert (=> d!21809 (= c!13677 ((_ is Nil!1520) (toList!739 lt!39057)))))

(declare-fun e!55236 () (InoxSet tuple2!2200))

(assert (=> d!21809 (= (content!87 (toList!739 lt!39057)) e!55236)))

(declare-fun b!84703 () Bool)

(assert (=> b!84703 (= e!55236 ((as const (Array tuple2!2200 Bool)) false))))

(declare-fun b!84704 () Bool)

(assert (=> b!84704 (= e!55236 ((_ map or) (store ((as const (Array tuple2!2200 Bool)) false) (h!2109 (toList!739 lt!39057)) true) (content!87 (t!5214 (toList!739 lt!39057)))))))

(assert (= (and d!21809 c!13677) b!84703))

(assert (= (and d!21809 (not c!13677)) b!84704))

(declare-fun m!88753 () Bool)

(assert (=> b!84704 m!88753))

(assert (=> b!84704 m!88705))

(assert (=> d!20895 d!21809))

(declare-fun d!21811 () Bool)

(assert (=> d!21811 (= (get!1194 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2621 (select (arr!1901 (_values!2299 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83443 d!21811))

(declare-fun d!21813 () Bool)

(assert (=> d!21813 (contains!749 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))

(declare-fun lt!39933 () Unit!2426)

(declare-fun choose!504 (array!3991 array!3993 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) (_ BitVec 32) Int) Unit!2426)

(assert (=> d!21813 (= lt!39933 (choose!504 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (=> d!21813 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21813 (= (lemmaArrayContainsKeyThenInListMap!18 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39933)))

(declare-fun bs!3584 () Bool)

(assert (= bs!3584 d!21813))

(assert (=> bs!3584 m!85779))

(assert (=> bs!3584 m!85779))

(assert (=> bs!3584 m!85563))

(assert (=> bs!3584 m!85893))

(assert (=> bs!3584 m!85563))

(declare-fun m!88755 () Bool)

(assert (=> bs!3584 m!88755))

(assert (=> bs!3584 m!86067))

(assert (=> b!83566 d!21813))

(assert (=> b!83566 d!21101))

(assert (=> b!83566 d!20977))

(declare-fun d!21815 () Bool)

(declare-fun e!55238 () Bool)

(assert (=> d!21815 e!55238))

(declare-fun res!43715 () Bool)

(assert (=> d!21815 (=> res!43715 e!55238)))

(declare-fun lt!39935 () Bool)

(assert (=> d!21815 (= res!43715 (not lt!39935))))

(declare-fun lt!39937 () Bool)

(assert (=> d!21815 (= lt!39935 lt!39937)))

(declare-fun lt!39936 () Unit!2426)

(declare-fun e!55237 () Unit!2426)

(assert (=> d!21815 (= lt!39936 e!55237)))

(declare-fun c!13678 () Bool)

(assert (=> d!21815 (= c!13678 lt!39937)))

(assert (=> d!21815 (= lt!39937 (containsKey!141 (toList!739 lt!39164) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21815 (= (contains!749 lt!39164 (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39935)))

(declare-fun b!84705 () Bool)

(declare-fun lt!39934 () Unit!2426)

(assert (=> b!84705 (= e!55237 lt!39934)))

(assert (=> b!84705 (= lt!39934 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39164) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> b!84705 (isDefined!91 (getValueByKey!137 (toList!739 lt!39164) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!84706 () Bool)

(declare-fun Unit!2493 () Unit!2426)

(assert (=> b!84706 (= e!55237 Unit!2493)))

(declare-fun b!84707 () Bool)

(assert (=> b!84707 (= e!55238 (isDefined!91 (getValueByKey!137 (toList!739 lt!39164) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21815 c!13678) b!84705))

(assert (= (and d!21815 (not c!13678)) b!84706))

(assert (= (and d!21815 (not res!43715)) b!84707))

(declare-fun m!88757 () Bool)

(assert (=> d!21815 m!88757))

(declare-fun m!88759 () Bool)

(assert (=> b!84705 m!88759))

(assert (=> b!84705 m!86265))

(assert (=> b!84705 m!86265))

(declare-fun m!88761 () Bool)

(assert (=> b!84705 m!88761))

(assert (=> b!84707 m!86265))

(assert (=> b!84707 m!86265))

(assert (=> b!84707 m!88761))

(assert (=> d!20949 d!21815))

(declare-fun b!84710 () Bool)

(declare-fun e!55240 () Option!143)

(assert (=> b!84710 (= e!55240 (getValueByKey!137 (t!5214 lt!39163) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21817 () Bool)

(declare-fun c!13679 () Bool)

(assert (=> d!21817 (= c!13679 (and ((_ is Cons!1519) lt!39163) (= (_1!1111 (h!2109 lt!39163)) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!55239 () Option!143)

(assert (=> d!21817 (= (getValueByKey!137 lt!39163 (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!55239)))

(declare-fun b!84708 () Bool)

(assert (=> b!84708 (= e!55239 (Some!142 (_2!1111 (h!2109 lt!39163))))))

(declare-fun b!84711 () Bool)

(assert (=> b!84711 (= e!55240 None!141)))

(declare-fun b!84709 () Bool)

(assert (=> b!84709 (= e!55239 e!55240)))

(declare-fun c!13680 () Bool)

(assert (=> b!84709 (= c!13680 (and ((_ is Cons!1519) lt!39163) (not (= (_1!1111 (h!2109 lt!39163)) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21817 c!13679) b!84708))

(assert (= (and d!21817 (not c!13679)) b!84709))

(assert (= (and b!84709 c!13680) b!84710))

(assert (= (and b!84709 (not c!13680)) b!84711))

(declare-fun m!88763 () Bool)

(assert (=> b!84710 m!88763))

(assert (=> d!20949 d!21817))

(declare-fun d!21819 () Bool)

(assert (=> d!21819 (= (getValueByKey!137 lt!39163 (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39938 () Unit!2426)

(assert (=> d!21819 (= lt!39938 (choose!497 lt!39163 (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun e!55241 () Bool)

(assert (=> d!21819 e!55241))

(declare-fun res!43716 () Bool)

(assert (=> d!21819 (=> (not res!43716) (not e!55241))))

(assert (=> d!21819 (= res!43716 (isStrictlySorted!292 lt!39163))))

(assert (=> d!21819 (= (lemmaContainsTupThenGetReturnValue!57 lt!39163 (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39938)))

(declare-fun b!84712 () Bool)

(declare-fun res!43717 () Bool)

(assert (=> b!84712 (=> (not res!43717) (not e!55241))))

(assert (=> b!84712 (= res!43717 (containsKey!141 lt!39163 (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!84713 () Bool)

(assert (=> b!84713 (= e!55241 (contains!751 lt!39163 (tuple2!2201 (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21819 res!43716) b!84712))

(assert (= (and b!84712 res!43717) b!84713))

(assert (=> d!21819 m!86259))

(declare-fun m!88765 () Bool)

(assert (=> d!21819 m!88765))

(declare-fun m!88767 () Bool)

(assert (=> d!21819 m!88767))

(declare-fun m!88769 () Bool)

(assert (=> b!84712 m!88769))

(declare-fun m!88771 () Bool)

(assert (=> b!84713 m!88771))

(assert (=> d!20949 d!21819))

(declare-fun b!84714 () Bool)

(declare-fun e!55246 () List!1523)

(declare-fun call!7983 () List!1523)

(assert (=> b!84714 (= e!55246 call!7983)))

(declare-fun lt!39939 () List!1523)

(declare-fun b!84715 () Bool)

(declare-fun e!55244 () Bool)

(assert (=> b!84715 (= e!55244 (contains!751 lt!39939 (tuple2!2201 (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun c!13683 () Bool)

(declare-fun b!84716 () Bool)

(declare-fun e!55243 () List!1523)

(declare-fun c!13681 () Bool)

(assert (=> b!84716 (= e!55243 (ite c!13683 (t!5214 (toList!739 lt!38925)) (ite c!13681 (Cons!1519 (h!2109 (toList!739 lt!38925)) (t!5214 (toList!739 lt!38925))) Nil!1520)))))

(declare-fun d!21821 () Bool)

(assert (=> d!21821 e!55244))

(declare-fun res!43719 () Bool)

(assert (=> d!21821 (=> (not res!43719) (not e!55244))))

(assert (=> d!21821 (= res!43719 (isStrictlySorted!292 lt!39939))))

(declare-fun e!55245 () List!1523)

(assert (=> d!21821 (= lt!39939 e!55245)))

(declare-fun c!13682 () Bool)

(assert (=> d!21821 (= c!13682 (and ((_ is Cons!1519) (toList!739 lt!38925)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38925))) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> d!21821 (isStrictlySorted!292 (toList!739 lt!38925))))

(assert (=> d!21821 (= (insertStrictlySorted!60 (toList!739 lt!38925) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39939)))

(declare-fun b!84717 () Bool)

(assert (=> b!84717 (= e!55243 (insertStrictlySorted!60 (t!5214 (toList!739 lt!38925)) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7980 () Bool)

(declare-fun call!7985 () List!1523)

(assert (=> bm!7980 (= call!7983 call!7985)))

(declare-fun b!84718 () Bool)

(declare-fun e!55242 () List!1523)

(declare-fun call!7984 () List!1523)

(assert (=> b!84718 (= e!55242 call!7984)))

(declare-fun b!84719 () Bool)

(assert (=> b!84719 (= e!55245 e!55246)))

(assert (=> b!84719 (= c!13683 (and ((_ is Cons!1519) (toList!739 lt!38925)) (= (_1!1111 (h!2109 (toList!739 lt!38925))) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!84720 () Bool)

(declare-fun res!43718 () Bool)

(assert (=> b!84720 (=> (not res!43718) (not e!55244))))

(assert (=> b!84720 (= res!43718 (containsKey!141 lt!39939 (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7981 () Bool)

(assert (=> bm!7981 (= call!7984 call!7983)))

(declare-fun b!84721 () Bool)

(assert (=> b!84721 (= e!55245 call!7985)))

(declare-fun b!84722 () Bool)

(assert (=> b!84722 (= e!55242 call!7984)))

(declare-fun b!84723 () Bool)

(assert (=> b!84723 (= c!13681 (and ((_ is Cons!1519) (toList!739 lt!38925)) (bvsgt (_1!1111 (h!2109 (toList!739 lt!38925))) (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> b!84723 (= e!55246 e!55242)))

(declare-fun bm!7982 () Bool)

(assert (=> bm!7982 (= call!7985 ($colon$colon!70 e!55243 (ite c!13682 (h!2109 (toList!739 lt!38925)) (tuple2!2201 (_1!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(declare-fun c!13684 () Bool)

(assert (=> bm!7982 (= c!13684 c!13682)))

(assert (= (and d!21821 c!13682) b!84721))

(assert (= (and d!21821 (not c!13682)) b!84719))

(assert (= (and b!84719 c!13683) b!84714))

(assert (= (and b!84719 (not c!13683)) b!84723))

(assert (= (and b!84723 c!13681) b!84718))

(assert (= (and b!84723 (not c!13681)) b!84722))

(assert (= (or b!84718 b!84722) bm!7981))

(assert (= (or b!84714 bm!7981) bm!7980))

(assert (= (or b!84721 bm!7980) bm!7982))

(assert (= (and bm!7982 c!13684) b!84717))

(assert (= (and bm!7982 (not c!13684)) b!84716))

(assert (= (and d!21821 res!43719) b!84720))

(assert (= (and b!84720 res!43718) b!84715))

(declare-fun m!88773 () Bool)

(assert (=> bm!7982 m!88773))

(declare-fun m!88775 () Bool)

(assert (=> b!84717 m!88775))

(declare-fun m!88777 () Bool)

(assert (=> d!21821 m!88777))

(declare-fun m!88779 () Bool)

(assert (=> d!21821 m!88779))

(declare-fun m!88781 () Bool)

(assert (=> b!84720 m!88781))

(declare-fun m!88783 () Bool)

(assert (=> b!84715 m!88783))

(assert (=> d!20949 d!21821))

(declare-fun d!21823 () Bool)

(assert (=> d!21823 (isDefined!91 (getValueByKey!137 (toList!739 lt!38907) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!39940 () Unit!2426)

(assert (=> d!21823 (= lt!39940 (choose!500 (toList!739 lt!38907) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55247 () Bool)

(assert (=> d!21823 e!55247))

(declare-fun res!43720 () Bool)

(assert (=> d!21823 (=> (not res!43720) (not e!55247))))

(assert (=> d!21823 (= res!43720 (isStrictlySorted!292 (toList!739 lt!38907)))))

(assert (=> d!21823 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!38907) #b0000000000000000000000000000000000000000000000000000000000000000) lt!39940)))

(declare-fun b!84724 () Bool)

(assert (=> b!84724 (= e!55247 (containsKey!141 (toList!739 lt!38907) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21823 res!43720) b!84724))

(assert (=> d!21823 m!86785))

(assert (=> d!21823 m!86785))

(assert (=> d!21823 m!86787))

(declare-fun m!88785 () Bool)

(assert (=> d!21823 m!88785))

(assert (=> d!21823 m!87521))

(assert (=> b!84724 m!86781))

(assert (=> b!83574 d!21823))

(declare-fun d!21825 () Bool)

(assert (=> d!21825 (= (isDefined!91 (getValueByKey!137 (toList!739 lt!38907) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!338 (getValueByKey!137 (toList!739 lt!38907) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3585 () Bool)

(assert (= bs!3585 d!21825))

(assert (=> bs!3585 m!86785))

(declare-fun m!88787 () Bool)

(assert (=> bs!3585 m!88787))

(assert (=> b!83574 d!21825))

(declare-fun b!84727 () Bool)

(declare-fun e!55249 () Option!143)

(assert (=> b!84727 (= e!55249 (getValueByKey!137 (t!5214 (toList!739 lt!38907)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!21827 () Bool)

(declare-fun c!13685 () Bool)

(assert (=> d!21827 (= c!13685 (and ((_ is Cons!1519) (toList!739 lt!38907)) (= (_1!1111 (h!2109 (toList!739 lt!38907))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!55248 () Option!143)

(assert (=> d!21827 (= (getValueByKey!137 (toList!739 lt!38907) #b0000000000000000000000000000000000000000000000000000000000000000) e!55248)))

(declare-fun b!84725 () Bool)

(assert (=> b!84725 (= e!55248 (Some!142 (_2!1111 (h!2109 (toList!739 lt!38907)))))))

(declare-fun b!84728 () Bool)

(assert (=> b!84728 (= e!55249 None!141)))

(declare-fun b!84726 () Bool)

(assert (=> b!84726 (= e!55248 e!55249)))

(declare-fun c!13686 () Bool)

(assert (=> b!84726 (= c!13686 (and ((_ is Cons!1519) (toList!739 lt!38907)) (not (= (_1!1111 (h!2109 (toList!739 lt!38907))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!21827 c!13685) b!84725))

(assert (= (and d!21827 (not c!13685)) b!84726))

(assert (= (and b!84726 c!13686) b!84727))

(assert (= (and b!84726 (not c!13686)) b!84728))

(declare-fun m!88789 () Bool)

(assert (=> b!84727 m!88789))

(assert (=> b!83574 d!21827))

(assert (=> b!83354 d!21261))

(declare-fun b!84731 () Bool)

(declare-fun e!55251 () Option!143)

(assert (=> b!84731 (= e!55251 (getValueByKey!137 (t!5214 (toList!739 lt!39158)) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21829 () Bool)

(declare-fun c!13687 () Bool)

(assert (=> d!21829 (= c!13687 (and ((_ is Cons!1519) (toList!739 lt!39158)) (= (_1!1111 (h!2109 (toList!739 lt!39158))) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!55250 () Option!143)

(assert (=> d!21829 (= (getValueByKey!137 (toList!739 lt!39158) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!55250)))

(declare-fun b!84729 () Bool)

(assert (=> b!84729 (= e!55250 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39158)))))))

(declare-fun b!84732 () Bool)

(assert (=> b!84732 (= e!55251 None!141)))

(declare-fun b!84730 () Bool)

(assert (=> b!84730 (= e!55250 e!55251)))

(declare-fun c!13688 () Bool)

(assert (=> b!84730 (= c!13688 (and ((_ is Cons!1519) (toList!739 lt!39158)) (not (= (_1!1111 (h!2109 (toList!739 lt!39158))) (_1!1111 (tuple2!2201 lt!38910 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21829 c!13687) b!84729))

(assert (= (and d!21829 (not c!13687)) b!84730))

(assert (= (and b!84730 c!13688) b!84731))

(assert (= (and b!84730 (not c!13688)) b!84732))

(declare-fun m!88791 () Bool)

(assert (=> b!84731 m!88791))

(assert (=> b!83276 d!21829))

(declare-fun d!21831 () Bool)

(declare-fun res!43721 () Bool)

(declare-fun e!55252 () Bool)

(assert (=> d!21831 (=> res!43721 e!55252)))

(assert (=> d!21831 (= res!43721 (or ((_ is Nil!1520) lt!39475) ((_ is Nil!1520) (t!5214 lt!39475))))))

(assert (=> d!21831 (= (isStrictlySorted!292 lt!39475) e!55252)))

(declare-fun b!84733 () Bool)

(declare-fun e!55253 () Bool)

(assert (=> b!84733 (= e!55252 e!55253)))

(declare-fun res!43722 () Bool)

(assert (=> b!84733 (=> (not res!43722) (not e!55253))))

(assert (=> b!84733 (= res!43722 (bvslt (_1!1111 (h!2109 lt!39475)) (_1!1111 (h!2109 (t!5214 lt!39475)))))))

(declare-fun b!84734 () Bool)

(assert (=> b!84734 (= e!55253 (isStrictlySorted!292 (t!5214 lt!39475)))))

(assert (= (and d!21831 (not res!43721)) b!84733))

(assert (= (and b!84733 res!43722) b!84734))

(declare-fun m!88793 () Bool)

(assert (=> b!84734 m!88793))

(assert (=> d!21141 d!21831))

(declare-fun d!21833 () Bool)

(declare-fun res!43723 () Bool)

(declare-fun e!55254 () Bool)

(assert (=> d!21833 (=> res!43723 e!55254)))

(assert (=> d!21833 (= res!43723 (or ((_ is Nil!1520) (toList!739 lt!38730)) ((_ is Nil!1520) (t!5214 (toList!739 lt!38730)))))))

(assert (=> d!21833 (= (isStrictlySorted!292 (toList!739 lt!38730)) e!55254)))

(declare-fun b!84735 () Bool)

(declare-fun e!55255 () Bool)

(assert (=> b!84735 (= e!55254 e!55255)))

(declare-fun res!43724 () Bool)

(assert (=> b!84735 (=> (not res!43724) (not e!55255))))

(assert (=> b!84735 (= res!43724 (bvslt (_1!1111 (h!2109 (toList!739 lt!38730))) (_1!1111 (h!2109 (t!5214 (toList!739 lt!38730))))))))

(declare-fun b!84736 () Bool)

(assert (=> b!84736 (= e!55255 (isStrictlySorted!292 (t!5214 (toList!739 lt!38730))))))

(assert (= (and d!21833 (not res!43723)) b!84735))

(assert (= (and b!84735 res!43724) b!84736))

(declare-fun m!88795 () Bool)

(assert (=> b!84736 m!88795))

(assert (=> d!21141 d!21833))

(declare-fun e!55257 () Option!143)

(declare-fun b!84739 () Bool)

(assert (=> b!84739 (= e!55257 (getValueByKey!137 (t!5214 (toList!739 lt!39148)) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21835 () Bool)

(declare-fun c!13689 () Bool)

(assert (=> d!21835 (= c!13689 (and ((_ is Cons!1519) (toList!739 lt!39148)) (= (_1!1111 (h!2109 (toList!739 lt!39148))) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!55256 () Option!143)

(assert (=> d!21835 (= (getValueByKey!137 (toList!739 lt!39148) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!55256)))

(declare-fun b!84737 () Bool)

(assert (=> b!84737 (= e!55256 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39148)))))))

(declare-fun b!84740 () Bool)

(assert (=> b!84740 (= e!55257 None!141)))

(declare-fun b!84738 () Bool)

(assert (=> b!84738 (= e!55256 e!55257)))

(declare-fun c!13690 () Bool)

(assert (=> b!84738 (= c!13690 (and ((_ is Cons!1519) (toList!739 lt!39148)) (not (= (_1!1111 (h!2109 (toList!739 lt!39148))) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21835 c!13689) b!84737))

(assert (= (and d!21835 (not c!13689)) b!84738))

(assert (= (and b!84738 c!13690) b!84739))

(assert (= (and b!84738 (not c!13690)) b!84740))

(declare-fun m!88797 () Bool)

(assert (=> b!84739 m!88797))

(assert (=> b!83269 d!21835))

(declare-fun d!21837 () Bool)

(declare-fun e!55259 () Bool)

(assert (=> d!21837 e!55259))

(declare-fun res!43725 () Bool)

(assert (=> d!21837 (=> res!43725 e!55259)))

(declare-fun lt!39942 () Bool)

(assert (=> d!21837 (= res!43725 (not lt!39942))))

(declare-fun lt!39944 () Bool)

(assert (=> d!21837 (= lt!39942 lt!39944)))

(declare-fun lt!39943 () Unit!2426)

(declare-fun e!55258 () Unit!2426)

(assert (=> d!21837 (= lt!39943 e!55258)))

(declare-fun c!13691 () Bool)

(assert (=> d!21837 (= c!13691 lt!39944)))

(assert (=> d!21837 (= lt!39944 (containsKey!141 (toList!739 lt!39284) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21837 (= (contains!749 lt!39284 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39942)))

(declare-fun b!84741 () Bool)

(declare-fun lt!39941 () Unit!2426)

(assert (=> b!84741 (= e!55258 lt!39941)))

(assert (=> b!84741 (= lt!39941 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39284) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> b!84741 (isDefined!91 (getValueByKey!137 (toList!739 lt!39284) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!84742 () Bool)

(declare-fun Unit!2494 () Unit!2426)

(assert (=> b!84742 (= e!55258 Unit!2494)))

(declare-fun b!84743 () Bool)

(assert (=> b!84743 (= e!55259 (isDefined!91 (getValueByKey!137 (toList!739 lt!39284) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21837 c!13691) b!84741))

(assert (= (and d!21837 (not c!13691)) b!84742))

(assert (= (and d!21837 (not res!43725)) b!84743))

(declare-fun m!88799 () Bool)

(assert (=> d!21837 m!88799))

(declare-fun m!88801 () Bool)

(assert (=> b!84741 m!88801))

(assert (=> b!84741 m!86613))

(assert (=> b!84741 m!86613))

(declare-fun m!88803 () Bool)

(assert (=> b!84741 m!88803))

(assert (=> b!84743 m!86613))

(assert (=> b!84743 m!86613))

(assert (=> b!84743 m!88803))

(assert (=> d!21045 d!21837))

(declare-fun b!84746 () Bool)

(declare-fun e!55261 () Option!143)

(assert (=> b!84746 (= e!55261 (getValueByKey!137 (t!5214 lt!39283) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21839 () Bool)

(declare-fun c!13692 () Bool)

(assert (=> d!21839 (= c!13692 (and ((_ is Cons!1519) lt!39283) (= (_1!1111 (h!2109 lt!39283)) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!55260 () Option!143)

(assert (=> d!21839 (= (getValueByKey!137 lt!39283 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!55260)))

(declare-fun b!84744 () Bool)

(assert (=> b!84744 (= e!55260 (Some!142 (_2!1111 (h!2109 lt!39283))))))

(declare-fun b!84747 () Bool)

(assert (=> b!84747 (= e!55261 None!141)))

(declare-fun b!84745 () Bool)

(assert (=> b!84745 (= e!55260 e!55261)))

(declare-fun c!13693 () Bool)

(assert (=> b!84745 (= c!13693 (and ((_ is Cons!1519) lt!39283) (not (= (_1!1111 (h!2109 lt!39283)) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21839 c!13692) b!84744))

(assert (= (and d!21839 (not c!13692)) b!84745))

(assert (= (and b!84745 c!13693) b!84746))

(assert (= (and b!84745 (not c!13693)) b!84747))

(declare-fun m!88805 () Bool)

(assert (=> b!84746 m!88805))

(assert (=> d!21045 d!21839))

(declare-fun d!21841 () Bool)

(assert (=> d!21841 (= (getValueByKey!137 lt!39283 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39945 () Unit!2426)

(assert (=> d!21841 (= lt!39945 (choose!497 lt!39283 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun e!55262 () Bool)

(assert (=> d!21841 e!55262))

(declare-fun res!43726 () Bool)

(assert (=> d!21841 (=> (not res!43726) (not e!55262))))

(assert (=> d!21841 (= res!43726 (isStrictlySorted!292 lt!39283))))

(assert (=> d!21841 (= (lemmaContainsTupThenGetReturnValue!57 lt!39283 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39945)))

(declare-fun b!84748 () Bool)

(declare-fun res!43727 () Bool)

(assert (=> b!84748 (=> (not res!43727) (not e!55262))))

(assert (=> b!84748 (= res!43727 (containsKey!141 lt!39283 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!84749 () Bool)

(assert (=> b!84749 (= e!55262 (contains!751 lt!39283 (tuple2!2201 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21841 res!43726) b!84748))

(assert (= (and b!84748 res!43727) b!84749))

(assert (=> d!21841 m!86607))

(declare-fun m!88807 () Bool)

(assert (=> d!21841 m!88807))

(declare-fun m!88809 () Bool)

(assert (=> d!21841 m!88809))

(declare-fun m!88811 () Bool)

(assert (=> b!84748 m!88811))

(declare-fun m!88813 () Bool)

(assert (=> b!84749 m!88813))

(assert (=> d!21045 d!21841))

(declare-fun b!84750 () Bool)

(declare-fun e!55267 () List!1523)

(declare-fun call!7986 () List!1523)

(assert (=> b!84750 (= e!55267 call!7986)))

(declare-fun b!84751 () Bool)

(declare-fun e!55265 () Bool)

(declare-fun lt!39946 () List!1523)

(assert (=> b!84751 (= e!55265 (contains!751 lt!39946 (tuple2!2201 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!84752 () Bool)

(declare-fun c!13694 () Bool)

(declare-fun e!55264 () List!1523)

(declare-fun c!13696 () Bool)

(assert (=> b!84752 (= e!55264 (ite c!13696 (t!5214 (toList!739 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (ite c!13694 (Cons!1519 (h!2109 (toList!739 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (t!5214 (toList!739 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))) Nil!1520)))))

(declare-fun d!21843 () Bool)

(assert (=> d!21843 e!55265))

(declare-fun res!43729 () Bool)

(assert (=> d!21843 (=> (not res!43729) (not e!55265))))

(assert (=> d!21843 (= res!43729 (isStrictlySorted!292 lt!39946))))

(declare-fun e!55266 () List!1523)

(assert (=> d!21843 (= lt!39946 e!55266)))

(declare-fun c!13695 () Bool)

(assert (=> d!21843 (= c!13695 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (bvslt (_1!1111 (h!2109 (toList!739 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> d!21843 (isStrictlySorted!292 (toList!739 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!21843 (= (insertStrictlySorted!60 (toList!739 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39946)))

(declare-fun b!84753 () Bool)

(assert (=> b!84753 (= e!55264 (insertStrictlySorted!60 (t!5214 (toList!739 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7983 () Bool)

(declare-fun call!7988 () List!1523)

(assert (=> bm!7983 (= call!7986 call!7988)))

(declare-fun b!84754 () Bool)

(declare-fun e!55263 () List!1523)

(declare-fun call!7987 () List!1523)

(assert (=> b!84754 (= e!55263 call!7987)))

(declare-fun b!84755 () Bool)

(assert (=> b!84755 (= e!55266 e!55267)))

(assert (=> b!84755 (= c!13696 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (= (_1!1111 (h!2109 (toList!739 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!84756 () Bool)

(declare-fun res!43728 () Bool)

(assert (=> b!84756 (=> (not res!43728) (not e!55265))))

(assert (=> b!84756 (= res!43728 (containsKey!141 lt!39946 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7984 () Bool)

(assert (=> bm!7984 (= call!7987 call!7986)))

(declare-fun b!84757 () Bool)

(assert (=> b!84757 (= e!55266 call!7988)))

(declare-fun b!84758 () Bool)

(assert (=> b!84758 (= e!55263 call!7987)))

(declare-fun b!84759 () Bool)

(assert (=> b!84759 (= c!13694 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (bvsgt (_1!1111 (h!2109 (toList!739 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))) (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> b!84759 (= e!55267 e!55263)))

(declare-fun bm!7985 () Bool)

(assert (=> bm!7985 (= call!7988 ($colon$colon!70 e!55264 (ite c!13695 (h!2109 (toList!739 (+!107 lt!38741 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (tuple2!2201 (_1!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(declare-fun c!13697 () Bool)

(assert (=> bm!7985 (= c!13697 c!13695)))

(assert (= (and d!21843 c!13695) b!84757))

(assert (= (and d!21843 (not c!13695)) b!84755))

(assert (= (and b!84755 c!13696) b!84750))

(assert (= (and b!84755 (not c!13696)) b!84759))

(assert (= (and b!84759 c!13694) b!84754))

(assert (= (and b!84759 (not c!13694)) b!84758))

(assert (= (or b!84754 b!84758) bm!7984))

(assert (= (or b!84750 bm!7984) bm!7983))

(assert (= (or b!84757 bm!7983) bm!7985))

(assert (= (and bm!7985 c!13697) b!84753))

(assert (= (and bm!7985 (not c!13697)) b!84752))

(assert (= (and d!21843 res!43729) b!84756))

(assert (= (and b!84756 res!43728) b!84751))

(declare-fun m!88815 () Bool)

(assert (=> bm!7985 m!88815))

(declare-fun m!88817 () Bool)

(assert (=> b!84753 m!88817))

(declare-fun m!88819 () Bool)

(assert (=> d!21843 m!88819))

(declare-fun m!88821 () Bool)

(assert (=> d!21843 m!88821))

(declare-fun m!88823 () Bool)

(assert (=> b!84756 m!88823))

(declare-fun m!88825 () Bool)

(assert (=> b!84751 m!88825))

(assert (=> d!21045 d!21843))

(declare-fun d!21845 () Bool)

(assert (=> d!21845 (= (get!1196 (getValueByKey!137 (toList!739 lt!38914) lt!38918)) (v!2628 (getValueByKey!137 (toList!739 lt!38914) lt!38918)))))

(assert (=> d!20945 d!21845))

(declare-fun b!84762 () Bool)

(declare-fun e!55269 () Option!143)

(assert (=> b!84762 (= e!55269 (getValueByKey!137 (t!5214 (toList!739 lt!38914)) lt!38918))))

(declare-fun d!21847 () Bool)

(declare-fun c!13698 () Bool)

(assert (=> d!21847 (= c!13698 (and ((_ is Cons!1519) (toList!739 lt!38914)) (= (_1!1111 (h!2109 (toList!739 lt!38914))) lt!38918)))))

(declare-fun e!55268 () Option!143)

(assert (=> d!21847 (= (getValueByKey!137 (toList!739 lt!38914) lt!38918) e!55268)))

(declare-fun b!84760 () Bool)

(assert (=> b!84760 (= e!55268 (Some!142 (_2!1111 (h!2109 (toList!739 lt!38914)))))))

(declare-fun b!84763 () Bool)

(assert (=> b!84763 (= e!55269 None!141)))

(declare-fun b!84761 () Bool)

(assert (=> b!84761 (= e!55268 e!55269)))

(declare-fun c!13699 () Bool)

(assert (=> b!84761 (= c!13699 (and ((_ is Cons!1519) (toList!739 lt!38914)) (not (= (_1!1111 (h!2109 (toList!739 lt!38914))) lt!38918))))))

(assert (= (and d!21847 c!13698) b!84760))

(assert (= (and d!21847 (not c!13698)) b!84761))

(assert (= (and b!84761 c!13699) b!84762))

(assert (= (and b!84761 (not c!13699)) b!84763))

(declare-fun m!88827 () Bool)

(assert (=> b!84762 m!88827))

(assert (=> d!20945 d!21847))

(declare-fun d!21849 () Bool)

(assert (=> d!21849 (= (apply!81 lt!39140 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1196 (getValueByKey!137 (toList!739 lt!39140) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3586 () Bool)

(assert (= bs!3586 d!21849))

(assert (=> bs!3586 m!86165))

(declare-fun m!88829 () Bool)

(assert (=> bs!3586 m!88829))

(assert (=> bs!3586 m!88829))

(declare-fun m!88831 () Bool)

(assert (=> bs!3586 m!88831))

(assert (=> b!83263 d!21849))

(assert (=> b!83263 d!21507))

(declare-fun d!21851 () Bool)

(declare-fun lt!39947 () Bool)

(assert (=> d!21851 (= lt!39947 (select (content!88 Nil!1519) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!55271 () Bool)

(assert (=> d!21851 (= lt!39947 e!55271)))

(declare-fun res!43730 () Bool)

(assert (=> d!21851 (=> (not res!43730) (not e!55271))))

(assert (=> d!21851 (= res!43730 ((_ is Cons!1518) Nil!1519))))

(assert (=> d!21851 (= (contains!750 Nil!1519 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) lt!39947)))

(declare-fun b!84764 () Bool)

(declare-fun e!55270 () Bool)

(assert (=> b!84764 (= e!55271 e!55270)))

(declare-fun res!43731 () Bool)

(assert (=> b!84764 (=> res!43731 e!55270)))

(assert (=> b!84764 (= res!43731 (= (h!2108 Nil!1519) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84765 () Bool)

(assert (=> b!84765 (= e!55270 (contains!750 (t!5213 Nil!1519) (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!21851 res!43730) b!84764))

(assert (= (and b!84764 (not res!43731)) b!84765))

(assert (=> d!21851 m!86533))

(assert (=> d!21851 m!86045))

(declare-fun m!88833 () Bool)

(assert (=> d!21851 m!88833))

(assert (=> b!84765 m!86045))

(declare-fun m!88835 () Bool)

(assert (=> b!84765 m!88835))

(assert (=> b!83163 d!21851))

(assert (=> b!83374 d!21519))

(assert (=> b!83374 d!21095))

(declare-fun d!21853 () Bool)

(declare-fun e!55273 () Bool)

(assert (=> d!21853 e!55273))

(declare-fun res!43732 () Bool)

(assert (=> d!21853 (=> res!43732 e!55273)))

(declare-fun lt!39949 () Bool)

(assert (=> d!21853 (= res!43732 (not lt!39949))))

(declare-fun lt!39951 () Bool)

(assert (=> d!21853 (= lt!39949 lt!39951)))

(declare-fun lt!39950 () Unit!2426)

(declare-fun e!55272 () Unit!2426)

(assert (=> d!21853 (= lt!39950 e!55272)))

(declare-fun c!13700 () Bool)

(assert (=> d!21853 (= c!13700 lt!39951)))

(assert (=> d!21853 (= lt!39951 (containsKey!141 (toList!739 lt!39450) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21853 (= (contains!749 lt!39450 #b0000000000000000000000000000000000000000000000000000000000000000) lt!39949)))

(declare-fun b!84766 () Bool)

(declare-fun lt!39948 () Unit!2426)

(assert (=> b!84766 (= e!55272 lt!39948)))

(assert (=> b!84766 (= lt!39948 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39450) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84766 (isDefined!91 (getValueByKey!137 (toList!739 lt!39450) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84767 () Bool)

(declare-fun Unit!2495 () Unit!2426)

(assert (=> b!84767 (= e!55272 Unit!2495)))

(declare-fun b!84768 () Bool)

(assert (=> b!84768 (= e!55273 (isDefined!91 (getValueByKey!137 (toList!739 lt!39450) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21853 c!13700) b!84766))

(assert (= (and d!21853 (not c!13700)) b!84767))

(assert (= (and d!21853 (not res!43732)) b!84768))

(declare-fun m!88837 () Bool)

(assert (=> d!21853 m!88837))

(declare-fun m!88839 () Bool)

(assert (=> b!84766 m!88839))

(assert (=> b!84766 m!87013))

(assert (=> b!84766 m!87013))

(declare-fun m!88841 () Bool)

(assert (=> b!84766 m!88841))

(assert (=> b!84768 m!87013))

(assert (=> b!84768 m!87013))

(assert (=> b!84768 m!88841))

(assert (=> bm!7874 d!21853))

(declare-fun d!21855 () Bool)

(declare-fun e!55275 () Bool)

(assert (=> d!21855 e!55275))

(declare-fun res!43733 () Bool)

(assert (=> d!21855 (=> res!43733 e!55275)))

(declare-fun lt!39953 () Bool)

(assert (=> d!21855 (= res!43733 (not lt!39953))))

(declare-fun lt!39955 () Bool)

(assert (=> d!21855 (= lt!39953 lt!39955)))

(declare-fun lt!39954 () Unit!2426)

(declare-fun e!55274 () Unit!2426)

(assert (=> d!21855 (= lt!39954 e!55274)))

(declare-fun c!13701 () Bool)

(assert (=> d!21855 (= c!13701 lt!39955)))

(assert (=> d!21855 (= lt!39955 (containsKey!141 (toList!739 lt!39148) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21855 (= (contains!749 lt!39148 (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39953)))

(declare-fun b!84769 () Bool)

(declare-fun lt!39952 () Unit!2426)

(assert (=> b!84769 (= e!55274 lt!39952)))

(assert (=> b!84769 (= lt!39952 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39148) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> b!84769 (isDefined!91 (getValueByKey!137 (toList!739 lt!39148) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!84770 () Bool)

(declare-fun Unit!2496 () Unit!2426)

(assert (=> b!84770 (= e!55274 Unit!2496)))

(declare-fun b!84771 () Bool)

(assert (=> b!84771 (= e!55275 (isDefined!91 (getValueByKey!137 (toList!739 lt!39148) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21855 c!13701) b!84769))

(assert (= (and d!21855 (not c!13701)) b!84770))

(assert (= (and d!21855 (not res!43733)) b!84771))

(declare-fun m!88843 () Bool)

(assert (=> d!21855 m!88843))

(declare-fun m!88845 () Bool)

(assert (=> b!84769 m!88845))

(assert (=> b!84769 m!86209))

(assert (=> b!84769 m!86209))

(declare-fun m!88847 () Bool)

(assert (=> b!84769 m!88847))

(assert (=> b!84771 m!86209))

(assert (=> b!84771 m!86209))

(assert (=> b!84771 m!88847))

(assert (=> d!20929 d!21855))

(declare-fun b!84774 () Bool)

(declare-fun e!55277 () Option!143)

(assert (=> b!84774 (= e!55277 (getValueByKey!137 (t!5214 lt!39147) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21857 () Bool)

(declare-fun c!13702 () Bool)

(assert (=> d!21857 (= c!13702 (and ((_ is Cons!1519) lt!39147) (= (_1!1111 (h!2109 lt!39147)) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!55276 () Option!143)

(assert (=> d!21857 (= (getValueByKey!137 lt!39147 (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!55276)))

(declare-fun b!84772 () Bool)

(assert (=> b!84772 (= e!55276 (Some!142 (_2!1111 (h!2109 lt!39147))))))

(declare-fun b!84775 () Bool)

(assert (=> b!84775 (= e!55277 None!141)))

(declare-fun b!84773 () Bool)

(assert (=> b!84773 (= e!55276 e!55277)))

(declare-fun c!13703 () Bool)

(assert (=> b!84773 (= c!13703 (and ((_ is Cons!1519) lt!39147) (not (= (_1!1111 (h!2109 lt!39147)) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21857 c!13702) b!84772))

(assert (= (and d!21857 (not c!13702)) b!84773))

(assert (= (and b!84773 c!13703) b!84774))

(assert (= (and b!84773 (not c!13703)) b!84775))

(declare-fun m!88849 () Bool)

(assert (=> b!84774 m!88849))

(assert (=> d!20929 d!21857))

(declare-fun d!21859 () Bool)

(assert (=> d!21859 (= (getValueByKey!137 lt!39147 (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!39956 () Unit!2426)

(assert (=> d!21859 (= lt!39956 (choose!497 lt!39147 (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun e!55278 () Bool)

(assert (=> d!21859 e!55278))

(declare-fun res!43734 () Bool)

(assert (=> d!21859 (=> (not res!43734) (not e!55278))))

(assert (=> d!21859 (= res!43734 (isStrictlySorted!292 lt!39147))))

(assert (=> d!21859 (= (lemmaContainsTupThenGetReturnValue!57 lt!39147 (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39956)))

(declare-fun b!84776 () Bool)

(declare-fun res!43735 () Bool)

(assert (=> b!84776 (=> (not res!43735) (not e!55278))))

(assert (=> b!84776 (= res!43735 (containsKey!141 lt!39147 (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!84777 () Bool)

(assert (=> b!84777 (= e!55278 (contains!751 lt!39147 (tuple2!2201 (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21859 res!43734) b!84776))

(assert (= (and b!84776 res!43735) b!84777))

(assert (=> d!21859 m!86203))

(declare-fun m!88851 () Bool)

(assert (=> d!21859 m!88851))

(declare-fun m!88853 () Bool)

(assert (=> d!21859 m!88853))

(declare-fun m!88855 () Bool)

(assert (=> b!84776 m!88855))

(declare-fun m!88857 () Bool)

(assert (=> b!84777 m!88857))

(assert (=> d!20929 d!21859))

(declare-fun b!84778 () Bool)

(declare-fun e!55283 () List!1523)

(declare-fun call!7989 () List!1523)

(assert (=> b!84778 (= e!55283 call!7989)))

(declare-fun lt!39957 () List!1523)

(declare-fun b!84779 () Bool)

(declare-fun e!55281 () Bool)

(assert (=> b!84779 (= e!55281 (contains!751 lt!39957 (tuple2!2201 (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun c!13706 () Bool)

(declare-fun c!13704 () Bool)

(declare-fun b!84780 () Bool)

(declare-fun e!55280 () List!1523)

(assert (=> b!84780 (= e!55280 (ite c!13706 (t!5214 (toList!739 lt!38914)) (ite c!13704 (Cons!1519 (h!2109 (toList!739 lt!38914)) (t!5214 (toList!739 lt!38914))) Nil!1520)))))

(declare-fun d!21861 () Bool)

(assert (=> d!21861 e!55281))

(declare-fun res!43737 () Bool)

(assert (=> d!21861 (=> (not res!43737) (not e!55281))))

(assert (=> d!21861 (= res!43737 (isStrictlySorted!292 lt!39957))))

(declare-fun e!55282 () List!1523)

(assert (=> d!21861 (= lt!39957 e!55282)))

(declare-fun c!13705 () Bool)

(assert (=> d!21861 (= c!13705 (and ((_ is Cons!1519) (toList!739 lt!38914)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38914))) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> d!21861 (isStrictlySorted!292 (toList!739 lt!38914))))

(assert (=> d!21861 (= (insertStrictlySorted!60 (toList!739 lt!38914) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!39957)))

(declare-fun b!84781 () Bool)

(assert (=> b!84781 (= e!55280 (insertStrictlySorted!60 (t!5214 (toList!739 lt!38914)) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7986 () Bool)

(declare-fun call!7991 () List!1523)

(assert (=> bm!7986 (= call!7989 call!7991)))

(declare-fun b!84782 () Bool)

(declare-fun e!55279 () List!1523)

(declare-fun call!7990 () List!1523)

(assert (=> b!84782 (= e!55279 call!7990)))

(declare-fun b!84783 () Bool)

(assert (=> b!84783 (= e!55282 e!55283)))

(assert (=> b!84783 (= c!13706 (and ((_ is Cons!1519) (toList!739 lt!38914)) (= (_1!1111 (h!2109 (toList!739 lt!38914))) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!84784 () Bool)

(declare-fun res!43736 () Bool)

(assert (=> b!84784 (=> (not res!43736) (not e!55281))))

(assert (=> b!84784 (= res!43736 (containsKey!141 lt!39957 (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!7987 () Bool)

(assert (=> bm!7987 (= call!7990 call!7989)))

(declare-fun b!84785 () Bool)

(assert (=> b!84785 (= e!55282 call!7991)))

(declare-fun b!84786 () Bool)

(assert (=> b!84786 (= e!55279 call!7990)))

(declare-fun b!84787 () Bool)

(assert (=> b!84787 (= c!13704 (and ((_ is Cons!1519) (toList!739 lt!38914)) (bvsgt (_1!1111 (h!2109 (toList!739 lt!38914))) (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> b!84787 (= e!55283 e!55279)))

(declare-fun bm!7988 () Bool)

(assert (=> bm!7988 (= call!7991 ($colon$colon!70 e!55280 (ite c!13705 (h!2109 (toList!739 lt!38914)) (tuple2!2201 (_1!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 lt!38911 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(declare-fun c!13707 () Bool)

(assert (=> bm!7988 (= c!13707 c!13705)))

(assert (= (and d!21861 c!13705) b!84785))

(assert (= (and d!21861 (not c!13705)) b!84783))

(assert (= (and b!84783 c!13706) b!84778))

(assert (= (and b!84783 (not c!13706)) b!84787))

(assert (= (and b!84787 c!13704) b!84782))

(assert (= (and b!84787 (not c!13704)) b!84786))

(assert (= (or b!84782 b!84786) bm!7987))

(assert (= (or b!84778 bm!7987) bm!7986))

(assert (= (or b!84785 bm!7986) bm!7988))

(assert (= (and bm!7988 c!13707) b!84781))

(assert (= (and bm!7988 (not c!13707)) b!84780))

(assert (= (and d!21861 res!43737) b!84784))

(assert (= (and b!84784 res!43736) b!84779))

(declare-fun m!88859 () Bool)

(assert (=> bm!7988 m!88859))

(declare-fun m!88861 () Bool)

(assert (=> b!84781 m!88861))

(declare-fun m!88863 () Bool)

(assert (=> d!21861 m!88863))

(declare-fun m!88865 () Bool)

(assert (=> d!21861 m!88865))

(declare-fun m!88867 () Bool)

(assert (=> b!84784 m!88867))

(declare-fun m!88869 () Bool)

(assert (=> b!84779 m!88869))

(assert (=> d!20929 d!21861))

(assert (=> d!21033 d!21031))

(assert (=> d!21033 d!21029))

(declare-fun d!21863 () Bool)

(assert (=> d!21863 (not (contains!749 (+!107 lt!39055 (tuple2!2201 lt!39051 lt!39052)) lt!39054))))

(assert (=> d!21863 true))

(declare-fun _$36!310 () Unit!2426)

(assert (=> d!21863 (= (choose!499 lt!39055 lt!39051 lt!39052 lt!39054) _$36!310)))

(declare-fun bs!3587 () Bool)

(assert (= bs!3587 d!21863))

(assert (=> bs!3587 m!85929))

(assert (=> bs!3587 m!85929))

(assert (=> bs!3587 m!85931))

(assert (=> d!21033 d!21863))

(declare-fun d!21865 () Bool)

(declare-fun e!55285 () Bool)

(assert (=> d!21865 e!55285))

(declare-fun res!43738 () Bool)

(assert (=> d!21865 (=> res!43738 e!55285)))

(declare-fun lt!39959 () Bool)

(assert (=> d!21865 (= res!43738 (not lt!39959))))

(declare-fun lt!39961 () Bool)

(assert (=> d!21865 (= lt!39959 lt!39961)))

(declare-fun lt!39960 () Unit!2426)

(declare-fun e!55284 () Unit!2426)

(assert (=> d!21865 (= lt!39960 e!55284)))

(declare-fun c!13708 () Bool)

(assert (=> d!21865 (= c!13708 lt!39961)))

(assert (=> d!21865 (= lt!39961 (containsKey!141 (toList!739 lt!39055) lt!39054))))

(assert (=> d!21865 (= (contains!749 lt!39055 lt!39054) lt!39959)))

(declare-fun b!84789 () Bool)

(declare-fun lt!39958 () Unit!2426)

(assert (=> b!84789 (= e!55284 lt!39958)))

(assert (=> b!84789 (= lt!39958 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39055) lt!39054))))

(assert (=> b!84789 (isDefined!91 (getValueByKey!137 (toList!739 lt!39055) lt!39054))))

(declare-fun b!84790 () Bool)

(declare-fun Unit!2497 () Unit!2426)

(assert (=> b!84790 (= e!55284 Unit!2497)))

(declare-fun b!84791 () Bool)

(assert (=> b!84791 (= e!55285 (isDefined!91 (getValueByKey!137 (toList!739 lt!39055) lt!39054)))))

(assert (= (and d!21865 c!13708) b!84789))

(assert (= (and d!21865 (not c!13708)) b!84790))

(assert (= (and d!21865 (not res!43738)) b!84791))

(declare-fun m!88871 () Bool)

(assert (=> d!21865 m!88871))

(declare-fun m!88873 () Bool)

(assert (=> b!84789 m!88873))

(declare-fun m!88875 () Bool)

(assert (=> b!84789 m!88875))

(assert (=> b!84789 m!88875))

(declare-fun m!88877 () Bool)

(assert (=> b!84789 m!88877))

(assert (=> b!84791 m!88875))

(assert (=> b!84791 m!88875))

(assert (=> b!84791 m!88877))

(assert (=> d!21033 d!21865))

(declare-fun b!84792 () Bool)

(declare-fun e!55286 () (_ BitVec 32))

(assert (=> b!84792 (= e!55286 #b00000000000000000000000000000000)))

(declare-fun d!21867 () Bool)

(declare-fun lt!39962 () (_ BitVec 32))

(assert (=> d!21867 (and (bvsge lt!39962 #b00000000000000000000000000000000) (bvsle lt!39962 (bvsub (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!21867 (= lt!39962 e!55286)))

(declare-fun c!13709 () Bool)

(assert (=> d!21867 (= c!13709 (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(assert (=> d!21867 (and (bvsle #b00000000000000000000000000000000 (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(assert (=> d!21867 (= (arrayCountValidKeys!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000000 (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))) lt!39962)))

(declare-fun b!84793 () Bool)

(declare-fun e!55287 () (_ BitVec 32))

(assert (=> b!84793 (= e!55286 e!55287)))

(declare-fun c!13710 () Bool)

(assert (=> b!84793 (= c!13710 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!84794 () Bool)

(declare-fun call!7992 () (_ BitVec 32))

(assert (=> b!84794 (= e!55287 call!7992)))

(declare-fun bm!7989 () Bool)

(assert (=> bm!7989 (= call!7992 (arrayCountValidKeys!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!84795 () Bool)

(assert (=> b!84795 (= e!55287 (bvadd #b00000000000000000000000000000001 call!7992))))

(assert (= (and d!21867 c!13709) b!84792))

(assert (= (and d!21867 (not c!13709)) b!84793))

(assert (= (and b!84793 c!13710) b!84795))

(assert (= (and b!84793 (not c!13710)) b!84794))

(assert (= (or b!84795 b!84794) bm!7989))

(assert (=> b!84793 m!88469))

(assert (=> b!84793 m!88469))

(assert (=> b!84793 m!88471))

(declare-fun m!88879 () Bool)

(assert (=> bm!7989 m!88879))

(assert (=> b!83577 d!21867))

(assert (=> bm!7862 d!21093))

(declare-fun d!21869 () Bool)

(declare-fun lt!39963 () Bool)

(assert (=> d!21869 (= lt!39963 (select (content!87 lt!39475) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(declare-fun e!55288 () Bool)

(assert (=> d!21869 (= lt!39963 e!55288)))

(declare-fun res!43739 () Bool)

(assert (=> d!21869 (=> (not res!43739) (not e!55288))))

(assert (=> d!21869 (= res!43739 ((_ is Cons!1519) lt!39475))))

(assert (=> d!21869 (= (contains!751 lt!39475 (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))) lt!39963)))

(declare-fun b!84796 () Bool)

(declare-fun e!55289 () Bool)

(assert (=> b!84796 (= e!55288 e!55289)))

(declare-fun res!43740 () Bool)

(assert (=> b!84796 (=> res!43740 e!55289)))

(assert (=> b!84796 (= res!43740 (= (h!2109 lt!39475) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(declare-fun b!84797 () Bool)

(assert (=> b!84797 (= e!55289 (contains!751 (t!5214 lt!39475) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(assert (= (and d!21869 res!43739) b!84796))

(assert (= (and b!84796 (not res!43740)) b!84797))

(declare-fun m!88881 () Bool)

(assert (=> d!21869 m!88881))

(declare-fun m!88883 () Bool)

(assert (=> d!21869 m!88883))

(declare-fun m!88885 () Bool)

(assert (=> b!84797 m!88885))

(assert (=> b!83686 d!21869))

(declare-fun d!21871 () Bool)

(declare-fun res!43741 () Bool)

(declare-fun e!55290 () Bool)

(assert (=> d!21871 (=> res!43741 e!55290)))

(assert (=> d!21871 (= res!43741 (and ((_ is Cons!1519) lt!39222) (= (_1!1111 (h!2109 lt!39222)) (_1!1111 lt!38738))))))

(assert (=> d!21871 (= (containsKey!141 lt!39222 (_1!1111 lt!38738)) e!55290)))

(declare-fun b!84798 () Bool)

(declare-fun e!55291 () Bool)

(assert (=> b!84798 (= e!55290 e!55291)))

(declare-fun res!43742 () Bool)

(assert (=> b!84798 (=> (not res!43742) (not e!55291))))

(assert (=> b!84798 (= res!43742 (and (or (not ((_ is Cons!1519) lt!39222)) (bvsle (_1!1111 (h!2109 lt!39222)) (_1!1111 lt!38738))) ((_ is Cons!1519) lt!39222) (bvslt (_1!1111 (h!2109 lt!39222)) (_1!1111 lt!38738))))))

(declare-fun b!84799 () Bool)

(assert (=> b!84799 (= e!55291 (containsKey!141 (t!5214 lt!39222) (_1!1111 lt!38738)))))

(assert (= (and d!21871 (not res!43741)) b!84798))

(assert (= (and b!84798 res!43742) b!84799))

(declare-fun m!88887 () Bool)

(assert (=> b!84799 m!88887))

(assert (=> b!83387 d!21871))

(declare-fun d!21873 () Bool)

(assert (=> d!21873 (isDefined!91 (getValueByKey!137 (toList!739 lt!39077) (_1!1111 lt!38742)))))

(declare-fun lt!39964 () Unit!2426)

(assert (=> d!21873 (= lt!39964 (choose!500 (toList!739 lt!39077) (_1!1111 lt!38742)))))

(declare-fun e!55292 () Bool)

(assert (=> d!21873 e!55292))

(declare-fun res!43743 () Bool)

(assert (=> d!21873 (=> (not res!43743) (not e!55292))))

(assert (=> d!21873 (= res!43743 (isStrictlySorted!292 (toList!739 lt!39077)))))

(assert (=> d!21873 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39077) (_1!1111 lt!38742)) lt!39964)))

(declare-fun b!84800 () Bool)

(assert (=> b!84800 (= e!55292 (containsKey!141 (toList!739 lt!39077) (_1!1111 lt!38742)))))

(assert (= (and d!21873 res!43743) b!84800))

(assert (=> d!21873 m!86017))

(assert (=> d!21873 m!86017))

(assert (=> d!21873 m!86303))

(declare-fun m!88889 () Bool)

(assert (=> d!21873 m!88889))

(declare-fun m!88891 () Bool)

(assert (=> d!21873 m!88891))

(assert (=> b!84800 m!86299))

(assert (=> b!83295 d!21873))

(declare-fun d!21875 () Bool)

(assert (=> d!21875 (= (isDefined!91 (getValueByKey!137 (toList!739 lt!39077) (_1!1111 lt!38742))) (not (isEmpty!338 (getValueByKey!137 (toList!739 lt!39077) (_1!1111 lt!38742)))))))

(declare-fun bs!3588 () Bool)

(assert (= bs!3588 d!21875))

(assert (=> bs!3588 m!86017))

(declare-fun m!88893 () Bool)

(assert (=> bs!3588 m!88893))

(assert (=> b!83295 d!21875))

(assert (=> b!83295 d!20897))

(assert (=> d!20955 d!20909))

(declare-fun d!21877 () Bool)

(declare-fun e!55295 () Bool)

(assert (=> d!21877 e!55295))

(declare-fun res!43748 () Bool)

(assert (=> d!21877 (=> (not res!43748) (not e!55295))))

(declare-fun lt!39967 () SeekEntryResult!245)

(assert (=> d!21877 (= res!43748 ((_ is Found!245) lt!39967))))

(assert (=> d!21877 (= lt!39967 (seekEntryOrOpen!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (_keys!3983 newMap!16) (mask!6333 newMap!16)))))

(assert (=> d!21877 true))

(declare-fun _$33!69 () Unit!2426)

(assert (=> d!21877 (= (choose!496 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)) _$33!69)))

(declare-fun b!84805 () Bool)

(declare-fun res!43749 () Bool)

(assert (=> b!84805 (=> (not res!43749) (not e!55295))))

(assert (=> b!84805 (= res!43749 (inRange!0 (index!3117 lt!39967) (mask!6333 newMap!16)))))

(declare-fun b!84806 () Bool)

(assert (=> b!84806 (= e!55295 (= (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!39967)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (= (and d!21877 res!43748) b!84805))

(assert (= (and b!84805 res!43749) b!84806))

(assert (=> d!21877 m!85563))

(assert (=> d!21877 m!85879))

(declare-fun m!88895 () Bool)

(assert (=> b!84805 m!88895))

(declare-fun m!88897 () Bool)

(assert (=> b!84806 m!88897))

(assert (=> d!20955 d!21877))

(assert (=> d!20955 d!21305))

(declare-fun d!21879 () Bool)

(declare-fun res!43750 () Bool)

(declare-fun e!55296 () Bool)

(assert (=> d!21879 (=> res!43750 e!55296)))

(assert (=> d!21879 (= res!43750 (and ((_ is Cons!1519) (toList!739 lt!39053)) (= (_1!1111 (h!2109 (toList!739 lt!39053))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!21879 (= (containsKey!141 (toList!739 lt!39053) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!55296)))

(declare-fun b!84807 () Bool)

(declare-fun e!55297 () Bool)

(assert (=> b!84807 (= e!55296 e!55297)))

(declare-fun res!43751 () Bool)

(assert (=> b!84807 (=> (not res!43751) (not e!55297))))

(assert (=> b!84807 (= res!43751 (and (or (not ((_ is Cons!1519) (toList!739 lt!39053))) (bvsle (_1!1111 (h!2109 (toList!739 lt!39053))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1519) (toList!739 lt!39053)) (bvslt (_1!1111 (h!2109 (toList!739 lt!39053))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!84808 () Bool)

(assert (=> b!84808 (= e!55297 (containsKey!141 (t!5214 (toList!739 lt!39053)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!21879 (not res!43750)) b!84807))

(assert (= (and b!84807 res!43751) b!84808))

(assert (=> b!84808 m!85767))

(declare-fun m!88899 () Bool)

(assert (=> b!84808 m!88899))

(assert (=> d!21011 d!21879))

(declare-fun b!84809 () Bool)

(declare-fun e!55302 () List!1523)

(declare-fun call!7993 () List!1523)

(assert (=> b!84809 (= e!55302 call!7993)))

(declare-fun b!84810 () Bool)

(declare-fun e!55300 () Bool)

(declare-fun lt!39968 () List!1523)

(assert (=> b!84810 (= e!55300 (contains!751 lt!39968 (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun b!84811 () Bool)

(declare-fun c!13713 () Bool)

(declare-fun c!13711 () Bool)

(declare-fun e!55299 () List!1523)

(assert (=> b!84811 (= e!55299 (ite c!13713 (t!5214 (t!5214 (toList!739 lt!38741))) (ite c!13711 (Cons!1519 (h!2109 (t!5214 (toList!739 lt!38741))) (t!5214 (t!5214 (toList!739 lt!38741)))) Nil!1520)))))

(declare-fun d!21881 () Bool)

(assert (=> d!21881 e!55300))

(declare-fun res!43753 () Bool)

(assert (=> d!21881 (=> (not res!43753) (not e!55300))))

(assert (=> d!21881 (= res!43753 (isStrictlySorted!292 lt!39968))))

(declare-fun e!55301 () List!1523)

(assert (=> d!21881 (= lt!39968 e!55301)))

(declare-fun c!13712 () Bool)

(assert (=> d!21881 (= c!13712 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38741))) (bvslt (_1!1111 (h!2109 (t!5214 (toList!739 lt!38741)))) (_1!1111 lt!38729))))))

(assert (=> d!21881 (isStrictlySorted!292 (t!5214 (toList!739 lt!38741)))))

(assert (=> d!21881 (= (insertStrictlySorted!60 (t!5214 (toList!739 lt!38741)) (_1!1111 lt!38729) (_2!1111 lt!38729)) lt!39968)))

(declare-fun b!84812 () Bool)

(assert (=> b!84812 (= e!55299 (insertStrictlySorted!60 (t!5214 (t!5214 (toList!739 lt!38741))) (_1!1111 lt!38729) (_2!1111 lt!38729)))))

(declare-fun bm!7990 () Bool)

(declare-fun call!7995 () List!1523)

(assert (=> bm!7990 (= call!7993 call!7995)))

(declare-fun b!84813 () Bool)

(declare-fun e!55298 () List!1523)

(declare-fun call!7994 () List!1523)

(assert (=> b!84813 (= e!55298 call!7994)))

(declare-fun b!84814 () Bool)

(assert (=> b!84814 (= e!55301 e!55302)))

(assert (=> b!84814 (= c!13713 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38741))) (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!38741)))) (_1!1111 lt!38729))))))

(declare-fun b!84815 () Bool)

(declare-fun res!43752 () Bool)

(assert (=> b!84815 (=> (not res!43752) (not e!55300))))

(assert (=> b!84815 (= res!43752 (containsKey!141 lt!39968 (_1!1111 lt!38729)))))

(declare-fun bm!7991 () Bool)

(assert (=> bm!7991 (= call!7994 call!7993)))

(declare-fun b!84816 () Bool)

(assert (=> b!84816 (= e!55301 call!7995)))

(declare-fun b!84817 () Bool)

(assert (=> b!84817 (= e!55298 call!7994)))

(declare-fun b!84818 () Bool)

(assert (=> b!84818 (= c!13711 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38741))) (bvsgt (_1!1111 (h!2109 (t!5214 (toList!739 lt!38741)))) (_1!1111 lt!38729))))))

(assert (=> b!84818 (= e!55302 e!55298)))

(declare-fun bm!7992 () Bool)

(assert (=> bm!7992 (= call!7995 ($colon$colon!70 e!55299 (ite c!13712 (h!2109 (t!5214 (toList!739 lt!38741))) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729)))))))

(declare-fun c!13714 () Bool)

(assert (=> bm!7992 (= c!13714 c!13712)))

(assert (= (and d!21881 c!13712) b!84816))

(assert (= (and d!21881 (not c!13712)) b!84814))

(assert (= (and b!84814 c!13713) b!84809))

(assert (= (and b!84814 (not c!13713)) b!84818))

(assert (= (and b!84818 c!13711) b!84813))

(assert (= (and b!84818 (not c!13711)) b!84817))

(assert (= (or b!84813 b!84817) bm!7991))

(assert (= (or b!84809 bm!7991) bm!7990))

(assert (= (or b!84816 bm!7990) bm!7992))

(assert (= (and bm!7992 c!13714) b!84812))

(assert (= (and bm!7992 (not c!13714)) b!84811))

(assert (= (and d!21881 res!43753) b!84815))

(assert (= (and b!84815 res!43752) b!84810))

(declare-fun m!88901 () Bool)

(assert (=> bm!7992 m!88901))

(declare-fun m!88903 () Bool)

(assert (=> b!84812 m!88903))

(declare-fun m!88905 () Bool)

(assert (=> d!21881 m!88905))

(assert (=> d!21881 m!88207))

(declare-fun m!88907 () Bool)

(assert (=> b!84815 m!88907))

(declare-fun m!88909 () Bool)

(assert (=> b!84810 m!88909))

(assert (=> b!83619 d!21881))

(declare-fun d!21883 () Bool)

(declare-fun e!55304 () Bool)

(assert (=> d!21883 e!55304))

(declare-fun res!43754 () Bool)

(assert (=> d!21883 (=> res!43754 e!55304)))

(declare-fun lt!39970 () Bool)

(assert (=> d!21883 (= res!43754 (not lt!39970))))

(declare-fun lt!39972 () Bool)

(assert (=> d!21883 (= lt!39970 lt!39972)))

(declare-fun lt!39971 () Unit!2426)

(declare-fun e!55303 () Unit!2426)

(assert (=> d!21883 (= lt!39971 e!55303)))

(declare-fun c!13715 () Bool)

(assert (=> d!21883 (= c!13715 lt!39972)))

(assert (=> d!21883 (= lt!39972 (containsKey!141 (toList!739 lt!39276) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (=> d!21883 (= (contains!749 lt!39276 (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) lt!39970)))

(declare-fun b!84819 () Bool)

(declare-fun lt!39969 () Unit!2426)

(assert (=> b!84819 (= e!55303 lt!39969)))

(assert (=> b!84819 (= lt!39969 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39276) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (=> b!84819 (isDefined!91 (getValueByKey!137 (toList!739 lt!39276) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!84820 () Bool)

(declare-fun Unit!2498 () Unit!2426)

(assert (=> b!84820 (= e!55303 Unit!2498)))

(declare-fun b!84821 () Bool)

(assert (=> b!84821 (= e!55304 (isDefined!91 (getValueByKey!137 (toList!739 lt!39276) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(assert (= (and d!21883 c!13715) b!84819))

(assert (= (and d!21883 (not c!13715)) b!84820))

(assert (= (and d!21883 (not res!43754)) b!84821))

(declare-fun m!88911 () Bool)

(assert (=> d!21883 m!88911))

(declare-fun m!88913 () Bool)

(assert (=> b!84819 m!88913))

(assert (=> b!84819 m!86589))

(assert (=> b!84819 m!86589))

(declare-fun m!88915 () Bool)

(assert (=> b!84819 m!88915))

(assert (=> b!84821 m!86589))

(assert (=> b!84821 m!86589))

(assert (=> b!84821 m!88915))

(assert (=> d!21037 d!21883))

(declare-fun b!84824 () Bool)

(declare-fun e!55306 () Option!143)

(assert (=> b!84824 (= e!55306 (getValueByKey!137 (t!5214 lt!39275) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun c!13716 () Bool)

(declare-fun d!21885 () Bool)

(assert (=> d!21885 (= c!13716 (and ((_ is Cons!1519) lt!39275) (= (_1!1111 (h!2109 lt!39275)) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(declare-fun e!55305 () Option!143)

(assert (=> d!21885 (= (getValueByKey!137 lt!39275 (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) e!55305)))

(declare-fun b!84822 () Bool)

(assert (=> b!84822 (= e!55305 (Some!142 (_2!1111 (h!2109 lt!39275))))))

(declare-fun b!84825 () Bool)

(assert (=> b!84825 (= e!55306 None!141)))

(declare-fun b!84823 () Bool)

(assert (=> b!84823 (= e!55305 e!55306)))

(declare-fun c!13717 () Bool)

(assert (=> b!84823 (= c!13717 (and ((_ is Cons!1519) lt!39275) (not (= (_1!1111 (h!2109 lt!39275)) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))))

(assert (= (and d!21885 c!13716) b!84822))

(assert (= (and d!21885 (not c!13716)) b!84823))

(assert (= (and b!84823 c!13717) b!84824))

(assert (= (and b!84823 (not c!13717)) b!84825))

(declare-fun m!88917 () Bool)

(assert (=> b!84824 m!88917))

(assert (=> d!21037 d!21885))

(declare-fun d!21887 () Bool)

(assert (=> d!21887 (= (getValueByKey!137 lt!39275 (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) (Some!142 (_2!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun lt!39973 () Unit!2426)

(assert (=> d!21887 (= lt!39973 (choose!497 lt!39275 (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (_2!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun e!55307 () Bool)

(assert (=> d!21887 e!55307))

(declare-fun res!43755 () Bool)

(assert (=> d!21887 (=> (not res!43755) (not e!55307))))

(assert (=> d!21887 (= res!43755 (isStrictlySorted!292 lt!39275))))

(assert (=> d!21887 (= (lemmaContainsTupThenGetReturnValue!57 lt!39275 (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (_2!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) lt!39973)))

(declare-fun b!84826 () Bool)

(declare-fun res!43756 () Bool)

(assert (=> b!84826 (=> (not res!43756) (not e!55307))))

(assert (=> b!84826 (= res!43756 (containsKey!141 lt!39275 (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!84827 () Bool)

(assert (=> b!84827 (= e!55307 (contains!751 lt!39275 (tuple2!2201 (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (_2!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(assert (= (and d!21887 res!43755) b!84826))

(assert (= (and b!84826 res!43756) b!84827))

(assert (=> d!21887 m!86583))

(declare-fun m!88919 () Bool)

(assert (=> d!21887 m!88919))

(declare-fun m!88921 () Bool)

(assert (=> d!21887 m!88921))

(declare-fun m!88923 () Bool)

(assert (=> b!84826 m!88923))

(declare-fun m!88925 () Bool)

(assert (=> b!84827 m!88925))

(assert (=> d!21037 d!21887))

(declare-fun b!84828 () Bool)

(declare-fun e!55312 () List!1523)

(declare-fun call!7996 () List!1523)

(assert (=> b!84828 (= e!55312 call!7996)))

(declare-fun e!55310 () Bool)

(declare-fun b!84829 () Bool)

(declare-fun lt!39974 () List!1523)

(assert (=> b!84829 (= e!55310 (contains!751 lt!39974 (tuple2!2201 (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (_2!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(declare-fun b!84830 () Bool)

(declare-fun c!13720 () Bool)

(declare-fun c!13718 () Bool)

(declare-fun e!55309 () List!1523)

(assert (=> b!84830 (= e!55309 (ite c!13720 (t!5214 (toList!739 e!54230)) (ite c!13718 (Cons!1519 (h!2109 (toList!739 e!54230)) (t!5214 (toList!739 e!54230))) Nil!1520)))))

(declare-fun d!21889 () Bool)

(assert (=> d!21889 e!55310))

(declare-fun res!43758 () Bool)

(assert (=> d!21889 (=> (not res!43758) (not e!55310))))

(assert (=> d!21889 (= res!43758 (isStrictlySorted!292 lt!39974))))

(declare-fun e!55311 () List!1523)

(assert (=> d!21889 (= lt!39974 e!55311)))

(declare-fun c!13719 () Bool)

(assert (=> d!21889 (= c!13719 (and ((_ is Cons!1519) (toList!739 e!54230)) (bvslt (_1!1111 (h!2109 (toList!739 e!54230))) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(assert (=> d!21889 (isStrictlySorted!292 (toList!739 e!54230))))

(assert (=> d!21889 (= (insertStrictlySorted!60 (toList!739 e!54230) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (_2!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) lt!39974)))

(declare-fun b!84831 () Bool)

(assert (=> b!84831 (= e!55309 (insertStrictlySorted!60 (t!5214 (toList!739 e!54230)) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (_2!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun bm!7993 () Bool)

(declare-fun call!7998 () List!1523)

(assert (=> bm!7993 (= call!7996 call!7998)))

(declare-fun b!84832 () Bool)

(declare-fun e!55308 () List!1523)

(declare-fun call!7997 () List!1523)

(assert (=> b!84832 (= e!55308 call!7997)))

(declare-fun b!84833 () Bool)

(assert (=> b!84833 (= e!55311 e!55312)))

(assert (=> b!84833 (= c!13720 (and ((_ is Cons!1519) (toList!739 e!54230)) (= (_1!1111 (h!2109 (toList!739 e!54230))) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(declare-fun b!84834 () Bool)

(declare-fun res!43757 () Bool)

(assert (=> b!84834 (=> (not res!43757) (not e!55310))))

(assert (=> b!84834 (= res!43757 (containsKey!141 lt!39974 (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun bm!7994 () Bool)

(assert (=> bm!7994 (= call!7997 call!7996)))

(declare-fun b!84835 () Bool)

(assert (=> b!84835 (= e!55311 call!7998)))

(declare-fun b!84836 () Bool)

(assert (=> b!84836 (= e!55308 call!7997)))

(declare-fun b!84837 () Bool)

(assert (=> b!84837 (= c!13718 (and ((_ is Cons!1519) (toList!739 e!54230)) (bvsgt (_1!1111 (h!2109 (toList!739 e!54230))) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(assert (=> b!84837 (= e!55312 e!55308)))

(declare-fun bm!7995 () Bool)

(assert (=> bm!7995 (= call!7998 ($colon$colon!70 e!55309 (ite c!13719 (h!2109 (toList!739 e!54230)) (tuple2!2201 (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (_2!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))))

(declare-fun c!13721 () Bool)

(assert (=> bm!7995 (= c!13721 c!13719)))

(assert (= (and d!21889 c!13719) b!84835))

(assert (= (and d!21889 (not c!13719)) b!84833))

(assert (= (and b!84833 c!13720) b!84828))

(assert (= (and b!84833 (not c!13720)) b!84837))

(assert (= (and b!84837 c!13718) b!84832))

(assert (= (and b!84837 (not c!13718)) b!84836))

(assert (= (or b!84832 b!84836) bm!7994))

(assert (= (or b!84828 bm!7994) bm!7993))

(assert (= (or b!84835 bm!7993) bm!7995))

(assert (= (and bm!7995 c!13721) b!84831))

(assert (= (and bm!7995 (not c!13721)) b!84830))

(assert (= (and d!21889 res!43758) b!84834))

(assert (= (and b!84834 res!43757) b!84829))

(declare-fun m!88927 () Bool)

(assert (=> bm!7995 m!88927))

(declare-fun m!88929 () Bool)

(assert (=> b!84831 m!88929))

(declare-fun m!88931 () Bool)

(assert (=> d!21889 m!88931))

(declare-fun m!88933 () Bool)

(assert (=> d!21889 m!88933))

(declare-fun m!88935 () Bool)

(assert (=> b!84834 m!88935))

(declare-fun m!88937 () Bool)

(assert (=> b!84829 m!88937))

(assert (=> d!21037 d!21889))

(assert (=> d!20937 d!20925))

(assert (=> d!20937 d!20949))

(declare-fun d!21891 () Bool)

(assert (=> d!21891 (contains!749 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))) lt!38923)))

(assert (=> d!21891 true))

(declare-fun _$35!327 () Unit!2426)

(assert (=> d!21891 (= (choose!495 lt!38925 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))) lt!38923) _$35!327)))

(declare-fun bs!3589 () Bool)

(assert (= bs!3589 d!21891))

(assert (=> bs!3589 m!85801))

(assert (=> bs!3589 m!85801))

(assert (=> bs!3589 m!85809))

(assert (=> d!20937 d!21891))

(declare-fun d!21893 () Bool)

(declare-fun e!55314 () Bool)

(assert (=> d!21893 e!55314))

(declare-fun res!43759 () Bool)

(assert (=> d!21893 (=> res!43759 e!55314)))

(declare-fun lt!39976 () Bool)

(assert (=> d!21893 (= res!43759 (not lt!39976))))

(declare-fun lt!39978 () Bool)

(assert (=> d!21893 (= lt!39976 lt!39978)))

(declare-fun lt!39977 () Unit!2426)

(declare-fun e!55313 () Unit!2426)

(assert (=> d!21893 (= lt!39977 e!55313)))

(declare-fun c!13722 () Bool)

(assert (=> d!21893 (= c!13722 lt!39978)))

(assert (=> d!21893 (= lt!39978 (containsKey!141 (toList!739 lt!38925) lt!38923))))

(assert (=> d!21893 (= (contains!749 lt!38925 lt!38923) lt!39976)))

(declare-fun b!84839 () Bool)

(declare-fun lt!39975 () Unit!2426)

(assert (=> b!84839 (= e!55313 lt!39975)))

(assert (=> b!84839 (= lt!39975 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!38925) lt!38923))))

(assert (=> b!84839 (isDefined!91 (getValueByKey!137 (toList!739 lt!38925) lt!38923))))

(declare-fun b!84840 () Bool)

(declare-fun Unit!2499 () Unit!2426)

(assert (=> b!84840 (= e!55313 Unit!2499)))

(declare-fun b!84841 () Bool)

(assert (=> b!84841 (= e!55314 (isDefined!91 (getValueByKey!137 (toList!739 lt!38925) lt!38923)))))

(assert (= (and d!21893 c!13722) b!84839))

(assert (= (and d!21893 (not c!13722)) b!84840))

(assert (= (and d!21893 (not res!43759)) b!84841))

(declare-fun m!88939 () Bool)

(assert (=> d!21893 m!88939))

(declare-fun m!88941 () Bool)

(assert (=> b!84839 m!88941))

(declare-fun m!88943 () Bool)

(assert (=> b!84839 m!88943))

(assert (=> b!84839 m!88943))

(declare-fun m!88945 () Bool)

(assert (=> b!84839 m!88945))

(assert (=> b!84841 m!88943))

(assert (=> b!84841 m!88943))

(assert (=> b!84841 m!88945))

(assert (=> d!20937 d!21893))

(declare-fun d!21895 () Bool)

(declare-fun e!55316 () Bool)

(assert (=> d!21895 e!55316))

(declare-fun res!43760 () Bool)

(assert (=> d!21895 (=> res!43760 e!55316)))

(declare-fun lt!39980 () Bool)

(assert (=> d!21895 (= res!43760 (not lt!39980))))

(declare-fun lt!39982 () Bool)

(assert (=> d!21895 (= lt!39980 lt!39982)))

(declare-fun lt!39981 () Unit!2426)

(declare-fun e!55315 () Unit!2426)

(assert (=> d!21895 (= lt!39981 e!55315)))

(declare-fun c!13723 () Bool)

(assert (=> d!21895 (= c!13723 lt!39982)))

(assert (=> d!21895 (= lt!39982 (containsKey!141 (toList!739 lt!39450) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21895 (= (contains!749 lt!39450 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39980)))

(declare-fun b!84842 () Bool)

(declare-fun lt!39979 () Unit!2426)

(assert (=> b!84842 (= e!55315 lt!39979)))

(assert (=> b!84842 (= lt!39979 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39450) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84842 (isDefined!91 (getValueByKey!137 (toList!739 lt!39450) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84843 () Bool)

(declare-fun Unit!2500 () Unit!2426)

(assert (=> b!84843 (= e!55315 Unit!2500)))

(declare-fun b!84844 () Bool)

(assert (=> b!84844 (= e!55316 (isDefined!91 (getValueByKey!137 (toList!739 lt!39450) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21895 c!13723) b!84842))

(assert (= (and d!21895 (not c!13723)) b!84843))

(assert (= (and d!21895 (not res!43760)) b!84844))

(declare-fun m!88947 () Bool)

(assert (=> d!21895 m!88947))

(declare-fun m!88949 () Bool)

(assert (=> b!84842 m!88949))

(assert (=> b!84842 m!87969))

(assert (=> b!84842 m!87969))

(declare-fun m!88951 () Bool)

(assert (=> b!84842 m!88951))

(assert (=> b!84844 m!87969))

(assert (=> b!84844 m!87969))

(assert (=> b!84844 m!88951))

(assert (=> bm!7870 d!21895))

(declare-fun b!84847 () Bool)

(declare-fun e!55318 () Option!143)

(assert (=> b!84847 (= e!55318 (getValueByKey!137 (t!5214 (toList!739 lt!39238)) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21897 () Bool)

(declare-fun c!13724 () Bool)

(assert (=> d!21897 (= c!13724 (and ((_ is Cons!1519) (toList!739 lt!39238)) (= (_1!1111 (h!2109 (toList!739 lt!39238))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!55317 () Option!143)

(assert (=> d!21897 (= (getValueByKey!137 (toList!739 lt!39238) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!55317)))

(declare-fun b!84845 () Bool)

(assert (=> b!84845 (= e!55317 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39238)))))))

(declare-fun b!84848 () Bool)

(assert (=> b!84848 (= e!55318 None!141)))

(declare-fun b!84846 () Bool)

(assert (=> b!84846 (= e!55317 e!55318)))

(declare-fun c!13725 () Bool)

(assert (=> b!84846 (= c!13725 (and ((_ is Cons!1519) (toList!739 lt!39238)) (not (= (_1!1111 (h!2109 (toList!739 lt!39238))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21897 c!13724) b!84845))

(assert (= (and d!21897 (not c!13724)) b!84846))

(assert (= (and b!84846 c!13725) b!84847))

(assert (= (and b!84846 (not c!13725)) b!84848))

(declare-fun m!88953 () Bool)

(assert (=> b!84847 m!88953))

(assert (=> b!83415 d!21897))

(declare-fun d!21899 () Bool)

(assert (=> d!21899 (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38923))))

(declare-fun lt!39983 () Unit!2426)

(assert (=> d!21899 (= lt!39983 (choose!500 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38923))))

(declare-fun e!55319 () Bool)

(assert (=> d!21899 e!55319))

(declare-fun res!43761 () Bool)

(assert (=> d!21899 (=> (not res!43761) (not e!55319))))

(assert (=> d!21899 (= res!43761 (isStrictlySorted!292 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> d!21899 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38923) lt!39983)))

(declare-fun b!84849 () Bool)

(assert (=> b!84849 (= e!55319 (containsKey!141 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38923))))

(assert (= (and d!21899 res!43761) b!84849))

(assert (=> d!21899 m!86193))

(assert (=> d!21899 m!86193))

(assert (=> d!21899 m!86195))

(declare-fun m!88955 () Bool)

(assert (=> d!21899 m!88955))

(declare-fun m!88957 () Bool)

(assert (=> d!21899 m!88957))

(assert (=> b!84849 m!86189))

(assert (=> b!83266 d!21899))

(assert (=> b!83266 d!21319))

(assert (=> b!83266 d!21321))

(declare-fun d!21901 () Bool)

(declare-fun e!55320 () Bool)

(assert (=> d!21901 e!55320))

(declare-fun res!43762 () Bool)

(assert (=> d!21901 (=> (not res!43762) (not e!55320))))

(declare-fun lt!39985 () ListLongMap!1447)

(assert (=> d!21901 (= res!43762 (contains!749 lt!39985 (_1!1111 (ite (or c!13264 c!13267) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))))))))

(declare-fun lt!39984 () List!1523)

(assert (=> d!21901 (= lt!39985 (ListLongMap!1448 lt!39984))))

(declare-fun lt!39987 () Unit!2426)

(declare-fun lt!39986 () Unit!2426)

(assert (=> d!21901 (= lt!39987 lt!39986)))

(assert (=> d!21901 (= (getValueByKey!137 lt!39984 (_1!1111 (ite (or c!13264 c!13267) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))))) (Some!142 (_2!1111 (ite (or c!13264 c!13267) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))))))))

(assert (=> d!21901 (= lt!39986 (lemmaContainsTupThenGetReturnValue!57 lt!39984 (_1!1111 (ite (or c!13264 c!13267) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))) (_2!1111 (ite (or c!13264 c!13267) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))))))))

(assert (=> d!21901 (= lt!39984 (insertStrictlySorted!60 (toList!739 (ite c!13264 call!7817 (ite c!13267 call!7819 call!7818))) (_1!1111 (ite (or c!13264 c!13267) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))) (_2!1111 (ite (or c!13264 c!13267) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))))))))

(assert (=> d!21901 (= (+!107 (ite c!13264 call!7817 (ite c!13267 call!7819 call!7818)) (ite (or c!13264 c!13267) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))) lt!39985)))

(declare-fun b!84850 () Bool)

(declare-fun res!43763 () Bool)

(assert (=> b!84850 (=> (not res!43763) (not e!55320))))

(assert (=> b!84850 (= res!43763 (= (getValueByKey!137 (toList!739 lt!39985) (_1!1111 (ite (or c!13264 c!13267) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16)))))) (Some!142 (_2!1111 (ite (or c!13264 c!13267) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))))))

(declare-fun b!84851 () Bool)

(assert (=> b!84851 (= e!55320 (contains!751 (toList!739 lt!39985) (ite (or c!13264 c!13267) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13210 (ite c!13217 (minValue!2210 newMap!16) lt!38725) (minValue!2210 newMap!16))))))))

(assert (= (and d!21901 res!43762) b!84850))

(assert (= (and b!84850 res!43763) b!84851))

(declare-fun m!88959 () Bool)

(assert (=> d!21901 m!88959))

(declare-fun m!88961 () Bool)

(assert (=> d!21901 m!88961))

(declare-fun m!88963 () Bool)

(assert (=> d!21901 m!88963))

(declare-fun m!88965 () Bool)

(assert (=> d!21901 m!88965))

(declare-fun m!88967 () Bool)

(assert (=> b!84850 m!88967))

(declare-fun m!88969 () Bool)

(assert (=> b!84851 m!88969))

(assert (=> bm!7814 d!21901))

(declare-fun d!21903 () Bool)

(declare-fun lt!39988 () Bool)

(assert (=> d!21903 (= lt!39988 (select (content!87 lt!39222) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(declare-fun e!55321 () Bool)

(assert (=> d!21903 (= lt!39988 e!55321)))

(declare-fun res!43764 () Bool)

(assert (=> d!21903 (=> (not res!43764) (not e!55321))))

(assert (=> d!21903 (= res!43764 ((_ is Cons!1519) lt!39222))))

(assert (=> d!21903 (= (contains!751 lt!39222 (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))) lt!39988)))

(declare-fun b!84852 () Bool)

(declare-fun e!55322 () Bool)

(assert (=> b!84852 (= e!55321 e!55322)))

(declare-fun res!43765 () Bool)

(assert (=> b!84852 (=> res!43765 e!55322)))

(assert (=> b!84852 (= res!43765 (= (h!2109 lt!39222) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(declare-fun b!84853 () Bool)

(assert (=> b!84853 (= e!55322 (contains!751 (t!5214 lt!39222) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(assert (= (and d!21903 res!43764) b!84852))

(assert (= (and b!84852 (not res!43765)) b!84853))

(declare-fun m!88971 () Bool)

(assert (=> d!21903 m!88971))

(declare-fun m!88973 () Bool)

(assert (=> d!21903 m!88973))

(declare-fun m!88975 () Bool)

(assert (=> b!84853 m!88975))

(assert (=> b!83382 d!21903))

(declare-fun d!21905 () Bool)

(declare-fun c!13726 () Bool)

(assert (=> d!21905 (= c!13726 ((_ is Nil!1520) (toList!739 lt!39061)))))

(declare-fun e!55323 () (InoxSet tuple2!2200))

(assert (=> d!21905 (= (content!87 (toList!739 lt!39061)) e!55323)))

(declare-fun b!84854 () Bool)

(assert (=> b!84854 (= e!55323 ((as const (Array tuple2!2200 Bool)) false))))

(declare-fun b!84855 () Bool)

(assert (=> b!84855 (= e!55323 ((_ map or) (store ((as const (Array tuple2!2200 Bool)) false) (h!2109 (toList!739 lt!39061)) true) (content!87 (t!5214 (toList!739 lt!39061)))))))

(assert (= (and d!21905 c!13726) b!84854))

(assert (= (and d!21905 (not c!13726)) b!84855))

(declare-fun m!88977 () Bool)

(assert (=> b!84855 m!88977))

(declare-fun m!88979 () Bool)

(assert (=> b!84855 m!88979))

(assert (=> d!20911 d!21905))

(declare-fun d!21907 () Bool)

(declare-fun e!55324 () Bool)

(assert (=> d!21907 e!55324))

(declare-fun res!43766 () Bool)

(assert (=> d!21907 (=> (not res!43766) (not e!55324))))

(declare-fun lt!39990 () ListLongMap!1447)

(assert (=> d!21907 (= res!43766 (contains!749 lt!39990 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun lt!39989 () List!1523)

(assert (=> d!21907 (= lt!39990 (ListLongMap!1448 lt!39989))))

(declare-fun lt!39992 () Unit!2426)

(declare-fun lt!39991 () Unit!2426)

(assert (=> d!21907 (= lt!39992 lt!39991)))

(assert (=> d!21907 (= (getValueByKey!137 lt!39989 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (=> d!21907 (= lt!39991 (lemmaContainsTupThenGetReturnValue!57 lt!39989 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (=> d!21907 (= lt!39989 (insertStrictlySorted!60 (toList!739 call!7877) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (=> d!21907 (= (+!107 call!7877 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))) lt!39990)))

(declare-fun b!84856 () Bool)

(declare-fun res!43767 () Bool)

(assert (=> b!84856 (=> (not res!43767) (not e!55324))))

(assert (=> b!84856 (= res!43767 (= (getValueByKey!137 (toList!739 lt!39990) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(declare-fun b!84857 () Bool)

(assert (=> b!84857 (= e!55324 (contains!751 (toList!739 lt!39990) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(assert (= (and d!21907 res!43766) b!84856))

(assert (= (and b!84856 res!43767) b!84857))

(declare-fun m!88981 () Bool)

(assert (=> d!21907 m!88981))

(declare-fun m!88983 () Bool)

(assert (=> d!21907 m!88983))

(declare-fun m!88985 () Bool)

(assert (=> d!21907 m!88985))

(declare-fun m!88987 () Bool)

(assert (=> d!21907 m!88987))

(declare-fun m!88989 () Bool)

(assert (=> b!84856 m!88989))

(declare-fun m!88991 () Bool)

(assert (=> b!84857 m!88991))

(assert (=> b!83673 d!21907))

(declare-fun d!21909 () Bool)

(declare-fun c!13727 () Bool)

(assert (=> d!21909 (= c!13727 ((_ is Nil!1520) (toList!739 lt!39028)))))

(declare-fun e!55325 () (InoxSet tuple2!2200))

(assert (=> d!21909 (= (content!87 (toList!739 lt!39028)) e!55325)))

(declare-fun b!84858 () Bool)

(assert (=> b!84858 (= e!55325 ((as const (Array tuple2!2200 Bool)) false))))

(declare-fun b!84859 () Bool)

(assert (=> b!84859 (= e!55325 ((_ map or) (store ((as const (Array tuple2!2200 Bool)) false) (h!2109 (toList!739 lt!39028)) true) (content!87 (t!5214 (toList!739 lt!39028)))))))

(assert (= (and d!21909 c!13727) b!84858))

(assert (= (and d!21909 (not c!13727)) b!84859))

(declare-fun m!88993 () Bool)

(assert (=> b!84859 m!88993))

(declare-fun m!88995 () Bool)

(assert (=> b!84859 m!88995))

(assert (=> d!20969 d!21909))

(assert (=> d!21131 d!21305))

(declare-fun d!21911 () Bool)

(assert (=> d!21911 (= ($colon$colon!70 e!54600 (ite c!13384 (h!2109 (toList!739 lt!38730)) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742)))) (Cons!1519 (ite c!13384 (h!2109 (toList!739 lt!38730)) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))) e!54600))))

(assert (=> bm!7878 d!21911))

(declare-fun b!84860 () Bool)

(declare-fun e!55326 () (_ BitVec 32))

(assert (=> b!84860 (= e!55326 #b00000000000000000000000000000000)))

(declare-fun d!21913 () Bool)

(declare-fun lt!39993 () (_ BitVec 32))

(assert (=> d!21913 (and (bvsge lt!39993 #b00000000000000000000000000000000) (bvsle lt!39993 (bvsub (size!2144 (_keys!3983 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!21913 (= lt!39993 e!55326)))

(declare-fun c!13728 () Bool)

(assert (=> d!21913 (= c!13728 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2144 (_keys!3983 newMap!16))))))

(assert (=> d!21913 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2144 (_keys!3983 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2144 (_keys!3983 newMap!16)) (size!2144 (_keys!3983 newMap!16))))))

(assert (=> d!21913 (= (arrayCountValidKeys!0 (_keys!3983 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2144 (_keys!3983 newMap!16))) lt!39993)))

(declare-fun b!84861 () Bool)

(declare-fun e!55327 () (_ BitVec 32))

(assert (=> b!84861 (= e!55326 e!55327)))

(declare-fun c!13729 () Bool)

(assert (=> b!84861 (= c!13729 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!84862 () Bool)

(declare-fun call!7999 () (_ BitVec 32))

(assert (=> b!84862 (= e!55327 call!7999)))

(declare-fun bm!7996 () Bool)

(assert (=> bm!7996 (= call!7999 (arrayCountValidKeys!0 (_keys!3983 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84863 () Bool)

(assert (=> b!84863 (= e!55327 (bvadd #b00000000000000000000000000000001 call!7999))))

(assert (= (and d!21913 c!13728) b!84860))

(assert (= (and d!21913 (not c!13728)) b!84861))

(assert (= (and b!84861 c!13729) b!84863))

(assert (= (and b!84861 (not c!13729)) b!84862))

(assert (= (or b!84863 b!84862) bm!7996))

(assert (=> b!84861 m!87105))

(assert (=> b!84861 m!87105))

(assert (=> b!84861 m!87111))

(declare-fun m!88997 () Bool)

(assert (=> bm!7996 m!88997))

(assert (=> bm!7807 d!21913))

(declare-fun lt!39994 () Bool)

(declare-fun d!21915 () Bool)

(assert (=> d!21915 (= lt!39994 (select (content!87 (toList!739 lt!39280)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(declare-fun e!55328 () Bool)

(assert (=> d!21915 (= lt!39994 e!55328)))

(declare-fun res!43768 () Bool)

(assert (=> d!21915 (=> (not res!43768) (not e!55328))))

(assert (=> d!21915 (= res!43768 ((_ is Cons!1519) (toList!739 lt!39280)))))

(assert (=> d!21915 (= (contains!751 (toList!739 lt!39280) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) lt!39994)))

(declare-fun b!84864 () Bool)

(declare-fun e!55329 () Bool)

(assert (=> b!84864 (= e!55328 e!55329)))

(declare-fun res!43769 () Bool)

(assert (=> b!84864 (=> res!43769 e!55329)))

(assert (=> b!84864 (= res!43769 (= (h!2109 (toList!739 lt!39280)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(declare-fun b!84865 () Bool)

(assert (=> b!84865 (= e!55329 (contains!751 (t!5214 (toList!739 lt!39280)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(assert (= (and d!21915 res!43768) b!84864))

(assert (= (and b!84864 (not res!43769)) b!84865))

(declare-fun m!88999 () Bool)

(assert (=> d!21915 m!88999))

(declare-fun m!89001 () Bool)

(assert (=> d!21915 m!89001))

(declare-fun m!89003 () Bool)

(assert (=> b!84865 m!89003))

(assert (=> b!83461 d!21915))

(declare-fun d!21917 () Bool)

(assert (=> d!21917 (= (apply!81 lt!39114 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1196 (getValueByKey!137 (toList!739 lt!39114) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3590 () Bool)

(assert (= bs!3590 d!21917))

(assert (=> bs!3590 m!87767))

(assert (=> bs!3590 m!87767))

(declare-fun m!89005 () Bool)

(assert (=> bs!3590 m!89005))

(assert (=> b!83244 d!21917))

(declare-fun b!84868 () Bool)

(declare-fun e!55331 () Option!143)

(assert (=> b!84868 (= e!55331 (getValueByKey!137 (t!5214 (t!5214 (toList!739 lt!39057))) (_1!1111 lt!38729)))))

(declare-fun d!21919 () Bool)

(declare-fun c!13730 () Bool)

(assert (=> d!21919 (= c!13730 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!39057))) (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!39057)))) (_1!1111 lt!38729))))))

(declare-fun e!55330 () Option!143)

(assert (=> d!21919 (= (getValueByKey!137 (t!5214 (toList!739 lt!39057)) (_1!1111 lt!38729)) e!55330)))

(declare-fun b!84866 () Bool)

(assert (=> b!84866 (= e!55330 (Some!142 (_2!1111 (h!2109 (t!5214 (toList!739 lt!39057))))))))

(declare-fun b!84869 () Bool)

(assert (=> b!84869 (= e!55331 None!141)))

(declare-fun b!84867 () Bool)

(assert (=> b!84867 (= e!55330 e!55331)))

(declare-fun c!13731 () Bool)

(assert (=> b!84867 (= c!13731 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!39057))) (not (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!39057)))) (_1!1111 lt!38729)))))))

(assert (= (and d!21919 c!13730) b!84866))

(assert (= (and d!21919 (not c!13730)) b!84867))

(assert (= (and b!84867 c!13731) b!84868))

(assert (= (and b!84867 (not c!13731)) b!84869))

(declare-fun m!89007 () Bool)

(assert (=> b!84868 m!89007))

(assert (=> b!83399 d!21919))

(declare-fun d!21921 () Bool)

(declare-fun e!55333 () Bool)

(assert (=> d!21921 e!55333))

(declare-fun res!43770 () Bool)

(assert (=> d!21921 (=> res!43770 e!55333)))

(declare-fun lt!39996 () Bool)

(assert (=> d!21921 (= res!43770 (not lt!39996))))

(declare-fun lt!39998 () Bool)

(assert (=> d!21921 (= lt!39996 lt!39998)))

(declare-fun lt!39997 () Unit!2426)

(declare-fun e!55332 () Unit!2426)

(assert (=> d!21921 (= lt!39997 e!55332)))

(declare-fun c!13732 () Bool)

(assert (=> d!21921 (= c!13732 lt!39998)))

(assert (=> d!21921 (= lt!39998 (containsKey!141 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998))))))

(assert (=> d!21921 (= (contains!749 (getCurrentListMap!425 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998))) lt!39996)))

(declare-fun b!84870 () Bool)

(declare-fun lt!39995 () Unit!2426)

(assert (=> b!84870 (= e!55332 lt!39995)))

(assert (=> b!84870 (= lt!39995 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998))))))

(assert (=> b!84870 (isDefined!91 (getValueByKey!137 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998))))))

(declare-fun b!84871 () Bool)

(declare-fun Unit!2501 () Unit!2426)

(assert (=> b!84871 (= e!55332 Unit!2501)))

(declare-fun b!84872 () Bool)

(assert (=> b!84872 (= e!55333 (isDefined!91 (getValueByKey!137 (toList!739 (getCurrentListMap!425 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))))))

(assert (= (and d!21921 c!13732) b!84870))

(assert (= (and d!21921 (not c!13732)) b!84871))

(assert (= (and d!21921 (not res!43770)) b!84872))

(assert (=> d!21921 m!85861))

(declare-fun m!89009 () Bool)

(assert (=> d!21921 m!89009))

(assert (=> b!84870 m!85861))

(declare-fun m!89011 () Bool)

(assert (=> b!84870 m!89011))

(assert (=> b!84870 m!85861))

(declare-fun m!89013 () Bool)

(assert (=> b!84870 m!89013))

(assert (=> b!84870 m!89013))

(declare-fun m!89015 () Bool)

(assert (=> b!84870 m!89015))

(assert (=> b!84872 m!85861))

(assert (=> b!84872 m!89013))

(assert (=> b!84872 m!89013))

(assert (=> b!84872 m!89015))

(assert (=> b!83597 d!21921))

(declare-fun b!84873 () Bool)

(declare-fun e!55345 () Bool)

(declare-fun call!8004 () Bool)

(assert (=> b!84873 (= e!55345 (not call!8004))))

(declare-fun b!84874 () Bool)

(declare-fun e!55339 () Bool)

(declare-fun e!55343 () Bool)

(assert (=> b!84874 (= e!55339 e!55343)))

(declare-fun c!13738 () Bool)

(assert (=> b!84874 (= c!13738 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun e!55334 () Bool)

(declare-fun b!84875 () Bool)

(declare-fun lt!40002 () ListLongMap!1447)

(assert (=> b!84875 (= e!55334 (= (apply!81 lt!40002 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) (get!1193 (select (arr!1901 lt!39011) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!84875 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2145 lt!39011)))))

(assert (=> b!84875 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84876 () Bool)

(declare-fun e!55341 () ListLongMap!1447)

(declare-fun call!8006 () ListLongMap!1447)

(assert (=> b!84876 (= e!55341 call!8006)))

(declare-fun call!8001 () ListLongMap!1447)

(declare-fun c!13736 () Bool)

(declare-fun call!8000 () ListLongMap!1447)

(declare-fun bm!7997 () Bool)

(declare-fun call!8002 () ListLongMap!1447)

(declare-fun c!13733 () Bool)

(declare-fun call!8005 () ListLongMap!1447)

(assert (=> bm!7997 (= call!8005 (+!107 (ite c!13733 call!8000 (ite c!13736 call!8002 call!8001)) (ite (or c!13733 c!13736) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun b!84877 () Bool)

(declare-fun e!55336 () Bool)

(assert (=> b!84877 (= e!55336 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84878 () Bool)

(declare-fun res!43778 () Bool)

(assert (=> b!84878 (=> (not res!43778) (not e!55339))))

(declare-fun e!55335 () Bool)

(assert (=> b!84878 (= res!43778 e!55335)))

(declare-fun res!43779 () Bool)

(assert (=> b!84878 (=> res!43779 e!55335)))

(assert (=> b!84878 (= res!43779 (not e!55336))))

(declare-fun res!43771 () Bool)

(assert (=> b!84878 (=> (not res!43771) (not e!55336))))

(assert (=> b!84878 (= res!43771 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84879 () Bool)

(declare-fun call!8003 () Bool)

(assert (=> b!84879 (= e!55343 (not call!8003))))

(declare-fun b!84880 () Bool)

(declare-fun e!55344 () Bool)

(assert (=> b!84880 (= e!55345 e!55344)))

(declare-fun res!43772 () Bool)

(assert (=> b!84880 (= res!43772 call!8004)))

(assert (=> b!84880 (=> (not res!43772) (not e!55344))))

(declare-fun bm!7998 () Bool)

(assert (=> bm!7998 (= call!8003 (contains!749 lt!40002 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84881 () Bool)

(declare-fun res!43774 () Bool)

(assert (=> b!84881 (=> (not res!43774) (not e!55339))))

(assert (=> b!84881 (= res!43774 e!55345)))

(declare-fun c!13735 () Bool)

(assert (=> b!84881 (= c!13735 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!21923 () Bool)

(assert (=> d!21923 e!55339))

(declare-fun res!43777 () Bool)

(assert (=> d!21923 (=> (not res!43777) (not e!55339))))

(assert (=> d!21923 (= res!43777 (or (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))))

(declare-fun lt!40015 () ListLongMap!1447)

(assert (=> d!21923 (= lt!40002 lt!40015)))

(declare-fun lt!40012 () Unit!2426)

(declare-fun e!55340 () Unit!2426)

(assert (=> d!21923 (= lt!40012 e!55340)))

(declare-fun c!13734 () Bool)

(declare-fun e!55337 () Bool)

(assert (=> d!21923 (= c!13734 e!55337)))

(declare-fun res!43775 () Bool)

(assert (=> d!21923 (=> (not res!43775) (not e!55337))))

(assert (=> d!21923 (= res!43775 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun e!55346 () ListLongMap!1447)

(assert (=> d!21923 (= lt!40015 e!55346)))

(assert (=> d!21923 (= c!13733 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21923 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!21923 (= (getCurrentListMap!425 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!40002)))

(declare-fun b!84882 () Bool)

(assert (=> b!84882 (= e!55344 (= (apply!81 lt!40002 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 newMap!16)))))

(declare-fun b!84883 () Bool)

(declare-fun e!55342 () Bool)

(assert (=> b!84883 (= e!55343 e!55342)))

(declare-fun res!43773 () Bool)

(assert (=> b!84883 (= res!43773 call!8003)))

(assert (=> b!84883 (=> (not res!43773) (not e!55342))))

(declare-fun b!84884 () Bool)

(assert (=> b!84884 (= e!55337 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84885 () Bool)

(assert (=> b!84885 (= e!55346 e!55341)))

(assert (=> b!84885 (= c!13736 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7999 () Bool)

(assert (=> bm!7999 (= call!8002 call!8000)))

(declare-fun b!84886 () Bool)

(declare-fun lt!40014 () Unit!2426)

(assert (=> b!84886 (= e!55340 lt!40014)))

(declare-fun lt!40020 () ListLongMap!1447)

(assert (=> b!84886 (= lt!40020 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!40017 () (_ BitVec 64))

(assert (=> b!84886 (= lt!40017 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40018 () (_ BitVec 64))

(assert (=> b!84886 (= lt!40018 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40000 () Unit!2426)

(assert (=> b!84886 (= lt!40000 (addStillContains!57 lt!40020 lt!40017 (zeroValue!2210 newMap!16) lt!40018))))

(assert (=> b!84886 (contains!749 (+!107 lt!40020 (tuple2!2201 lt!40017 (zeroValue!2210 newMap!16))) lt!40018)))

(declare-fun lt!40019 () Unit!2426)

(assert (=> b!84886 (= lt!40019 lt!40000)))

(declare-fun lt!40009 () ListLongMap!1447)

(assert (=> b!84886 (= lt!40009 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!40006 () (_ BitVec 64))

(assert (=> b!84886 (= lt!40006 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40013 () (_ BitVec 64))

(assert (=> b!84886 (= lt!40013 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40004 () Unit!2426)

(assert (=> b!84886 (= lt!40004 (addApplyDifferent!57 lt!40009 lt!40006 (minValue!2210 newMap!16) lt!40013))))

(assert (=> b!84886 (= (apply!81 (+!107 lt!40009 (tuple2!2201 lt!40006 (minValue!2210 newMap!16))) lt!40013) (apply!81 lt!40009 lt!40013))))

(declare-fun lt!39999 () Unit!2426)

(assert (=> b!84886 (= lt!39999 lt!40004)))

(declare-fun lt!40003 () ListLongMap!1447)

(assert (=> b!84886 (= lt!40003 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!40005 () (_ BitVec 64))

(assert (=> b!84886 (= lt!40005 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40008 () (_ BitVec 64))

(assert (=> b!84886 (= lt!40008 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40010 () Unit!2426)

(assert (=> b!84886 (= lt!40010 (addApplyDifferent!57 lt!40003 lt!40005 (zeroValue!2210 newMap!16) lt!40008))))

(assert (=> b!84886 (= (apply!81 (+!107 lt!40003 (tuple2!2201 lt!40005 (zeroValue!2210 newMap!16))) lt!40008) (apply!81 lt!40003 lt!40008))))

(declare-fun lt!40011 () Unit!2426)

(assert (=> b!84886 (= lt!40011 lt!40010)))

(declare-fun lt!40007 () ListLongMap!1447)

(assert (=> b!84886 (= lt!40007 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!40016 () (_ BitVec 64))

(assert (=> b!84886 (= lt!40016 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40001 () (_ BitVec 64))

(assert (=> b!84886 (= lt!40001 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!84886 (= lt!40014 (addApplyDifferent!57 lt!40007 lt!40016 (minValue!2210 newMap!16) lt!40001))))

(assert (=> b!84886 (= (apply!81 (+!107 lt!40007 (tuple2!2201 lt!40016 (minValue!2210 newMap!16))) lt!40001) (apply!81 lt!40007 lt!40001))))

(declare-fun bm!8000 () Bool)

(assert (=> bm!8000 (= call!8001 call!8002)))

(declare-fun b!84887 () Bool)

(declare-fun Unit!2502 () Unit!2426)

(assert (=> b!84887 (= e!55340 Unit!2502)))

(declare-fun b!84888 () Bool)

(assert (=> b!84888 (= e!55335 e!55334)))

(declare-fun res!43776 () Bool)

(assert (=> b!84888 (=> (not res!43776) (not e!55334))))

(assert (=> b!84888 (= res!43776 (contains!749 lt!40002 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84888 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84889 () Bool)

(declare-fun e!55338 () ListLongMap!1447)

(assert (=> b!84889 (= e!55338 call!8006)))

(declare-fun b!84890 () Bool)

(assert (=> b!84890 (= e!55342 (= (apply!81 lt!40002 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 newMap!16)))))

(declare-fun bm!8001 () Bool)

(assert (=> bm!8001 (= call!8006 call!8005)))

(declare-fun bm!8002 () Bool)

(assert (=> bm!8002 (= call!8004 (contains!749 lt!40002 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84891 () Bool)

(assert (=> b!84891 (= e!55338 call!8001)))

(declare-fun b!84892 () Bool)

(declare-fun c!13737 () Bool)

(assert (=> b!84892 (= c!13737 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!84892 (= e!55341 e!55338)))

(declare-fun b!84893 () Bool)

(assert (=> b!84893 (= e!55346 (+!107 call!8005 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(declare-fun bm!8003 () Bool)

(assert (=> bm!8003 (= call!8000 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) lt!39011 (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (= (and d!21923 c!13733) b!84893))

(assert (= (and d!21923 (not c!13733)) b!84885))

(assert (= (and b!84885 c!13736) b!84876))

(assert (= (and b!84885 (not c!13736)) b!84892))

(assert (= (and b!84892 c!13737) b!84889))

(assert (= (and b!84892 (not c!13737)) b!84891))

(assert (= (or b!84889 b!84891) bm!8000))

(assert (= (or b!84876 bm!8000) bm!7999))

(assert (= (or b!84876 b!84889) bm!8001))

(assert (= (or b!84893 bm!7999) bm!8003))

(assert (= (or b!84893 bm!8001) bm!7997))

(assert (= (and d!21923 res!43775) b!84884))

(assert (= (and d!21923 c!13734) b!84886))

(assert (= (and d!21923 (not c!13734)) b!84887))

(assert (= (and d!21923 res!43777) b!84878))

(assert (= (and b!84878 res!43771) b!84877))

(assert (= (and b!84878 (not res!43779)) b!84888))

(assert (= (and b!84888 res!43776) b!84875))

(assert (= (and b!84878 res!43778) b!84881))

(assert (= (and b!84881 c!13735) b!84880))

(assert (= (and b!84881 (not c!13735)) b!84873))

(assert (= (and b!84880 res!43772) b!84882))

(assert (= (or b!84880 b!84873) bm!8002))

(assert (= (and b!84881 res!43774) b!84874))

(assert (= (and b!84874 c!13738) b!84883))

(assert (= (and b!84874 (not c!13738)) b!84879))

(assert (= (and b!84883 res!43773) b!84890))

(assert (= (or b!84883 b!84879) bm!7998))

(declare-fun b_lambda!3749 () Bool)

(assert (=> (not b_lambda!3749) (not b!84875)))

(assert (=> b!84875 t!5225))

(declare-fun b_and!5137 () Bool)

(assert (= b_and!5133 (and (=> t!5225 result!2895) b_and!5137)))

(assert (=> b!84875 t!5227))

(declare-fun b_and!5139 () Bool)

(assert (= b_and!5135 (and (=> t!5227 result!2897) b_and!5139)))

(declare-fun m!89017 () Bool)

(assert (=> b!84890 m!89017))

(declare-fun m!89019 () Bool)

(assert (=> bm!7998 m!89019))

(assert (=> b!84888 m!86045))

(assert (=> b!84888 m!86045))

(declare-fun m!89021 () Bool)

(assert (=> b!84888 m!89021))

(declare-fun m!89023 () Bool)

(assert (=> bm!8003 m!89023))

(declare-fun m!89025 () Bool)

(assert (=> bm!7997 m!89025))

(declare-fun m!89027 () Bool)

(assert (=> bm!8002 m!89027))

(assert (=> b!84886 m!86045))

(assert (=> b!84886 m!89023))

(declare-fun m!89029 () Bool)

(assert (=> b!84886 m!89029))

(declare-fun m!89031 () Bool)

(assert (=> b!84886 m!89031))

(declare-fun m!89033 () Bool)

(assert (=> b!84886 m!89033))

(declare-fun m!89035 () Bool)

(assert (=> b!84886 m!89035))

(declare-fun m!89037 () Bool)

(assert (=> b!84886 m!89037))

(declare-fun m!89039 () Bool)

(assert (=> b!84886 m!89039))

(declare-fun m!89041 () Bool)

(assert (=> b!84886 m!89041))

(declare-fun m!89043 () Bool)

(assert (=> b!84886 m!89043))

(declare-fun m!89045 () Bool)

(assert (=> b!84886 m!89045))

(assert (=> b!84886 m!89035))

(assert (=> b!84886 m!89039))

(declare-fun m!89047 () Bool)

(assert (=> b!84886 m!89047))

(declare-fun m!89049 () Bool)

(assert (=> b!84886 m!89049))

(assert (=> b!84886 m!89049))

(declare-fun m!89051 () Bool)

(assert (=> b!84886 m!89051))

(declare-fun m!89053 () Bool)

(assert (=> b!84886 m!89053))

(assert (=> b!84886 m!89033))

(declare-fun m!89055 () Bool)

(assert (=> b!84886 m!89055))

(declare-fun m!89057 () Bool)

(assert (=> b!84886 m!89057))

(assert (=> b!84875 m!86045))

(assert (=> b!84875 m!86141))

(assert (=> b!84875 m!86045))

(declare-fun m!89059 () Bool)

(assert (=> b!84875 m!89059))

(declare-fun m!89061 () Bool)

(assert (=> b!84875 m!89061))

(assert (=> b!84875 m!89061))

(assert (=> b!84875 m!86141))

(declare-fun m!89063 () Bool)

(assert (=> b!84875 m!89063))

(assert (=> b!84877 m!86045))

(assert (=> b!84877 m!86045))

(assert (=> b!84877 m!86051))

(declare-fun m!89065 () Bool)

(assert (=> b!84893 m!89065))

(declare-fun m!89067 () Bool)

(assert (=> b!84882 m!89067))

(assert (=> b!84884 m!86045))

(assert (=> b!84884 m!86045))

(assert (=> b!84884 m!86051))

(assert (=> d!21923 m!86067))

(assert (=> b!83597 d!21923))

(declare-fun d!21925 () Bool)

(declare-fun lt!40021 () Bool)

(assert (=> d!21925 (= lt!40021 (select (content!87 lt!39076) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(declare-fun e!55347 () Bool)

(assert (=> d!21925 (= lt!40021 e!55347)))

(declare-fun res!43780 () Bool)

(assert (=> d!21925 (=> (not res!43780) (not e!55347))))

(assert (=> d!21925 (= res!43780 ((_ is Cons!1519) lt!39076))))

(assert (=> d!21925 (= (contains!751 lt!39076 (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))) lt!40021)))

(declare-fun b!84894 () Bool)

(declare-fun e!55348 () Bool)

(assert (=> b!84894 (= e!55347 e!55348)))

(declare-fun res!43781 () Bool)

(assert (=> b!84894 (=> res!43781 e!55348)))

(assert (=> b!84894 (= res!43781 (= (h!2109 lt!39076) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(declare-fun b!84895 () Bool)

(assert (=> b!84895 (= e!55348 (contains!751 (t!5214 lt!39076) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(assert (= (and d!21925 res!43780) b!84894))

(assert (= (and b!84894 (not res!43781)) b!84895))

(declare-fun m!89069 () Bool)

(assert (=> d!21925 m!89069))

(declare-fun m!89071 () Bool)

(assert (=> d!21925 m!89071))

(declare-fun m!89073 () Bool)

(assert (=> b!84895 m!89073))

(assert (=> b!83307 d!21925))

(assert (=> b!83238 d!21261))

(assert (=> d!20987 d!20985))

(declare-fun d!21927 () Bool)

(assert (=> d!21927 (= (getValueByKey!137 lt!39027 (_1!1111 lt!38738)) (Some!142 (_2!1111 lt!38738)))))

(assert (=> d!21927 true))

(declare-fun _$22!413 () Unit!2426)

(assert (=> d!21927 (= (choose!497 lt!39027 (_1!1111 lt!38738) (_2!1111 lt!38738)) _$22!413)))

(declare-fun bs!3591 () Bool)

(assert (= bs!3591 d!21927))

(assert (=> bs!3591 m!85899))

(assert (=> d!20987 d!21927))

(declare-fun d!21929 () Bool)

(declare-fun res!43782 () Bool)

(declare-fun e!55349 () Bool)

(assert (=> d!21929 (=> res!43782 e!55349)))

(assert (=> d!21929 (= res!43782 (or ((_ is Nil!1520) lt!39027) ((_ is Nil!1520) (t!5214 lt!39027))))))

(assert (=> d!21929 (= (isStrictlySorted!292 lt!39027) e!55349)))

(declare-fun b!84896 () Bool)

(declare-fun e!55350 () Bool)

(assert (=> b!84896 (= e!55349 e!55350)))

(declare-fun res!43783 () Bool)

(assert (=> b!84896 (=> (not res!43783) (not e!55350))))

(assert (=> b!84896 (= res!43783 (bvslt (_1!1111 (h!2109 lt!39027)) (_1!1111 (h!2109 (t!5214 lt!39027)))))))

(declare-fun b!84897 () Bool)

(assert (=> b!84897 (= e!55350 (isStrictlySorted!292 (t!5214 lt!39027)))))

(assert (= (and d!21929 (not res!43782)) b!84896))

(assert (= (and b!84896 res!43783) b!84897))

(declare-fun m!89075 () Bool)

(assert (=> b!84897 m!89075))

(assert (=> d!20987 d!21929))

(declare-fun d!21931 () Bool)

(assert (=> d!21931 (= (apply!81 (+!107 lt!39205 (tuple2!2201 lt!39202 (minValue!2210 newMap!16))) lt!39209) (get!1196 (getValueByKey!137 (toList!739 (+!107 lt!39205 (tuple2!2201 lt!39202 (minValue!2210 newMap!16)))) lt!39209)))))

(declare-fun bs!3592 () Bool)

(assert (= bs!3592 d!21931))

(declare-fun m!89077 () Bool)

(assert (=> bs!3592 m!89077))

(assert (=> bs!3592 m!89077))

(declare-fun m!89079 () Bool)

(assert (=> bs!3592 m!89079))

(assert (=> b!83356 d!21931))

(declare-fun d!21933 () Bool)

(assert (=> d!21933 (= (apply!81 (+!107 lt!39205 (tuple2!2201 lt!39202 (minValue!2210 newMap!16))) lt!39209) (apply!81 lt!39205 lt!39209))))

(declare-fun lt!40022 () Unit!2426)

(assert (=> d!21933 (= lt!40022 (choose!494 lt!39205 lt!39202 (minValue!2210 newMap!16) lt!39209))))

(declare-fun e!55351 () Bool)

(assert (=> d!21933 e!55351))

(declare-fun res!43784 () Bool)

(assert (=> d!21933 (=> (not res!43784) (not e!55351))))

(assert (=> d!21933 (= res!43784 (contains!749 lt!39205 lt!39209))))

(assert (=> d!21933 (= (addApplyDifferent!57 lt!39205 lt!39202 (minValue!2210 newMap!16) lt!39209) lt!40022)))

(declare-fun b!84898 () Bool)

(assert (=> b!84898 (= e!55351 (not (= lt!39209 lt!39202)))))

(assert (= (and d!21933 res!43784) b!84898))

(assert (=> d!21933 m!86377))

(declare-fun m!89081 () Bool)

(assert (=> d!21933 m!89081))

(assert (=> d!21933 m!86365))

(assert (=> d!21933 m!86365))

(assert (=> d!21933 m!86387))

(declare-fun m!89083 () Bool)

(assert (=> d!21933 m!89083))

(assert (=> b!83356 d!21933))

(declare-fun d!21935 () Bool)

(assert (=> d!21935 (= (apply!81 (+!107 lt!39199 (tuple2!2201 lt!39201 (zeroValue!2210 newMap!16))) lt!39204) (get!1196 (getValueByKey!137 (toList!739 (+!107 lt!39199 (tuple2!2201 lt!39201 (zeroValue!2210 newMap!16)))) lt!39204)))))

(declare-fun bs!3593 () Bool)

(assert (= bs!3593 d!21935))

(declare-fun m!89085 () Bool)

(assert (=> bs!3593 m!89085))

(assert (=> bs!3593 m!89085))

(declare-fun m!89087 () Bool)

(assert (=> bs!3593 m!89087))

(assert (=> b!83356 d!21935))

(declare-fun d!21937 () Bool)

(declare-fun e!55352 () Bool)

(assert (=> d!21937 e!55352))

(declare-fun res!43785 () Bool)

(assert (=> d!21937 (=> (not res!43785) (not e!55352))))

(declare-fun lt!40024 () ListLongMap!1447)

(assert (=> d!21937 (= res!43785 (contains!749 lt!40024 (_1!1111 (tuple2!2201 lt!39201 (zeroValue!2210 newMap!16)))))))

(declare-fun lt!40023 () List!1523)

(assert (=> d!21937 (= lt!40024 (ListLongMap!1448 lt!40023))))

(declare-fun lt!40026 () Unit!2426)

(declare-fun lt!40025 () Unit!2426)

(assert (=> d!21937 (= lt!40026 lt!40025)))

(assert (=> d!21937 (= (getValueByKey!137 lt!40023 (_1!1111 (tuple2!2201 lt!39201 (zeroValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39201 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21937 (= lt!40025 (lemmaContainsTupThenGetReturnValue!57 lt!40023 (_1!1111 (tuple2!2201 lt!39201 (zeroValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39201 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21937 (= lt!40023 (insertStrictlySorted!60 (toList!739 lt!39199) (_1!1111 (tuple2!2201 lt!39201 (zeroValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39201 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21937 (= (+!107 lt!39199 (tuple2!2201 lt!39201 (zeroValue!2210 newMap!16))) lt!40024)))

(declare-fun b!84899 () Bool)

(declare-fun res!43786 () Bool)

(assert (=> b!84899 (=> (not res!43786) (not e!55352))))

(assert (=> b!84899 (= res!43786 (= (getValueByKey!137 (toList!739 lt!40024) (_1!1111 (tuple2!2201 lt!39201 (zeroValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39201 (zeroValue!2210 newMap!16))))))))

(declare-fun b!84900 () Bool)

(assert (=> b!84900 (= e!55352 (contains!751 (toList!739 lt!40024) (tuple2!2201 lt!39201 (zeroValue!2210 newMap!16))))))

(assert (= (and d!21937 res!43785) b!84899))

(assert (= (and b!84899 res!43786) b!84900))

(declare-fun m!89089 () Bool)

(assert (=> d!21937 m!89089))

(declare-fun m!89091 () Bool)

(assert (=> d!21937 m!89091))

(declare-fun m!89093 () Bool)

(assert (=> d!21937 m!89093))

(declare-fun m!89095 () Bool)

(assert (=> d!21937 m!89095))

(declare-fun m!89097 () Bool)

(assert (=> b!84899 m!89097))

(declare-fun m!89099 () Bool)

(assert (=> b!84900 m!89099))

(assert (=> b!83356 d!21937))

(declare-fun d!21939 () Bool)

(assert (=> d!21939 (= (apply!81 (+!107 lt!39203 (tuple2!2201 lt!39212 (minValue!2210 newMap!16))) lt!39197) (get!1196 (getValueByKey!137 (toList!739 (+!107 lt!39203 (tuple2!2201 lt!39212 (minValue!2210 newMap!16)))) lt!39197)))))

(declare-fun bs!3594 () Bool)

(assert (= bs!3594 d!21939))

(declare-fun m!89101 () Bool)

(assert (=> bs!3594 m!89101))

(assert (=> bs!3594 m!89101))

(declare-fun m!89103 () Bool)

(assert (=> bs!3594 m!89103))

(assert (=> b!83356 d!21939))

(declare-fun d!21941 () Bool)

(declare-fun e!55353 () Bool)

(assert (=> d!21941 e!55353))

(declare-fun res!43787 () Bool)

(assert (=> d!21941 (=> (not res!43787) (not e!55353))))

(declare-fun lt!40028 () ListLongMap!1447)

(assert (=> d!21941 (= res!43787 (contains!749 lt!40028 (_1!1111 (tuple2!2201 lt!39212 (minValue!2210 newMap!16)))))))

(declare-fun lt!40027 () List!1523)

(assert (=> d!21941 (= lt!40028 (ListLongMap!1448 lt!40027))))

(declare-fun lt!40030 () Unit!2426)

(declare-fun lt!40029 () Unit!2426)

(assert (=> d!21941 (= lt!40030 lt!40029)))

(assert (=> d!21941 (= (getValueByKey!137 lt!40027 (_1!1111 (tuple2!2201 lt!39212 (minValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39212 (minValue!2210 newMap!16)))))))

(assert (=> d!21941 (= lt!40029 (lemmaContainsTupThenGetReturnValue!57 lt!40027 (_1!1111 (tuple2!2201 lt!39212 (minValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39212 (minValue!2210 newMap!16)))))))

(assert (=> d!21941 (= lt!40027 (insertStrictlySorted!60 (toList!739 lt!39203) (_1!1111 (tuple2!2201 lt!39212 (minValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39212 (minValue!2210 newMap!16)))))))

(assert (=> d!21941 (= (+!107 lt!39203 (tuple2!2201 lt!39212 (minValue!2210 newMap!16))) lt!40028)))

(declare-fun b!84901 () Bool)

(declare-fun res!43788 () Bool)

(assert (=> b!84901 (=> (not res!43788) (not e!55353))))

(assert (=> b!84901 (= res!43788 (= (getValueByKey!137 (toList!739 lt!40028) (_1!1111 (tuple2!2201 lt!39212 (minValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39212 (minValue!2210 newMap!16))))))))

(declare-fun b!84902 () Bool)

(assert (=> b!84902 (= e!55353 (contains!751 (toList!739 lt!40028) (tuple2!2201 lt!39212 (minValue!2210 newMap!16))))))

(assert (= (and d!21941 res!43787) b!84901))

(assert (= (and b!84901 res!43788) b!84902))

(declare-fun m!89105 () Bool)

(assert (=> d!21941 m!89105))

(declare-fun m!89107 () Bool)

(assert (=> d!21941 m!89107))

(declare-fun m!89109 () Bool)

(assert (=> d!21941 m!89109))

(declare-fun m!89111 () Bool)

(assert (=> d!21941 m!89111))

(declare-fun m!89113 () Bool)

(assert (=> b!84901 m!89113))

(declare-fun m!89115 () Bool)

(assert (=> b!84902 m!89115))

(assert (=> b!83356 d!21941))

(declare-fun d!21943 () Bool)

(assert (=> d!21943 (= (apply!81 (+!107 lt!39199 (tuple2!2201 lt!39201 (zeroValue!2210 newMap!16))) lt!39204) (apply!81 lt!39199 lt!39204))))

(declare-fun lt!40031 () Unit!2426)

(assert (=> d!21943 (= lt!40031 (choose!494 lt!39199 lt!39201 (zeroValue!2210 newMap!16) lt!39204))))

(declare-fun e!55354 () Bool)

(assert (=> d!21943 e!55354))

(declare-fun res!43789 () Bool)

(assert (=> d!21943 (=> (not res!43789) (not e!55354))))

(assert (=> d!21943 (= res!43789 (contains!749 lt!39199 lt!39204))))

(assert (=> d!21943 (= (addApplyDifferent!57 lt!39199 lt!39201 (zeroValue!2210 newMap!16) lt!39204) lt!40031)))

(declare-fun b!84903 () Bool)

(assert (=> b!84903 (= e!55354 (not (= lt!39204 lt!39201)))))

(assert (= (and d!21943 res!43789) b!84903))

(assert (=> d!21943 m!86361))

(declare-fun m!89117 () Bool)

(assert (=> d!21943 m!89117))

(assert (=> d!21943 m!86381))

(assert (=> d!21943 m!86381))

(assert (=> d!21943 m!86383))

(declare-fun m!89119 () Bool)

(assert (=> d!21943 m!89119))

(assert (=> b!83356 d!21943))

(declare-fun d!21945 () Bool)

(assert (=> d!21945 (= (apply!81 lt!39199 lt!39204) (get!1196 (getValueByKey!137 (toList!739 lt!39199) lt!39204)))))

(declare-fun bs!3595 () Bool)

(assert (= bs!3595 d!21945))

(declare-fun m!89121 () Bool)

(assert (=> bs!3595 m!89121))

(assert (=> bs!3595 m!89121))

(declare-fun m!89123 () Bool)

(assert (=> bs!3595 m!89123))

(assert (=> b!83356 d!21945))

(declare-fun d!21947 () Bool)

(declare-fun e!55355 () Bool)

(assert (=> d!21947 e!55355))

(declare-fun res!43790 () Bool)

(assert (=> d!21947 (=> (not res!43790) (not e!55355))))

(declare-fun lt!40033 () ListLongMap!1447)

(assert (=> d!21947 (= res!43790 (contains!749 lt!40033 (_1!1111 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16)))))))

(declare-fun lt!40032 () List!1523)

(assert (=> d!21947 (= lt!40033 (ListLongMap!1448 lt!40032))))

(declare-fun lt!40035 () Unit!2426)

(declare-fun lt!40034 () Unit!2426)

(assert (=> d!21947 (= lt!40035 lt!40034)))

(assert (=> d!21947 (= (getValueByKey!137 lt!40032 (_1!1111 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21947 (= lt!40034 (lemmaContainsTupThenGetReturnValue!57 lt!40032 (_1!1111 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21947 (= lt!40032 (insertStrictlySorted!60 (toList!739 lt!39216) (_1!1111 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21947 (= (+!107 lt!39216 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16))) lt!40033)))

(declare-fun b!84904 () Bool)

(declare-fun res!43791 () Bool)

(assert (=> b!84904 (=> (not res!43791) (not e!55355))))

(assert (=> b!84904 (= res!43791 (= (getValueByKey!137 (toList!739 lt!40033) (_1!1111 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16))))))))

(declare-fun b!84905 () Bool)

(assert (=> b!84905 (= e!55355 (contains!751 (toList!739 lt!40033) (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16))))))

(assert (= (and d!21947 res!43790) b!84904))

(assert (= (and b!84904 res!43791) b!84905))

(declare-fun m!89125 () Bool)

(assert (=> d!21947 m!89125))

(declare-fun m!89127 () Bool)

(assert (=> d!21947 m!89127))

(declare-fun m!89129 () Bool)

(assert (=> d!21947 m!89129))

(declare-fun m!89131 () Bool)

(assert (=> d!21947 m!89131))

(declare-fun m!89133 () Bool)

(assert (=> b!84904 m!89133))

(declare-fun m!89135 () Bool)

(assert (=> b!84905 m!89135))

(assert (=> b!83356 d!21947))

(declare-fun d!21949 () Bool)

(declare-fun e!55356 () Bool)

(assert (=> d!21949 e!55356))

(declare-fun res!43792 () Bool)

(assert (=> d!21949 (=> (not res!43792) (not e!55356))))

(declare-fun lt!40037 () ListLongMap!1447)

(assert (=> d!21949 (= res!43792 (contains!749 lt!40037 (_1!1111 (tuple2!2201 lt!39202 (minValue!2210 newMap!16)))))))

(declare-fun lt!40036 () List!1523)

(assert (=> d!21949 (= lt!40037 (ListLongMap!1448 lt!40036))))

(declare-fun lt!40039 () Unit!2426)

(declare-fun lt!40038 () Unit!2426)

(assert (=> d!21949 (= lt!40039 lt!40038)))

(assert (=> d!21949 (= (getValueByKey!137 lt!40036 (_1!1111 (tuple2!2201 lt!39202 (minValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39202 (minValue!2210 newMap!16)))))))

(assert (=> d!21949 (= lt!40038 (lemmaContainsTupThenGetReturnValue!57 lt!40036 (_1!1111 (tuple2!2201 lt!39202 (minValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39202 (minValue!2210 newMap!16)))))))

(assert (=> d!21949 (= lt!40036 (insertStrictlySorted!60 (toList!739 lt!39205) (_1!1111 (tuple2!2201 lt!39202 (minValue!2210 newMap!16))) (_2!1111 (tuple2!2201 lt!39202 (minValue!2210 newMap!16)))))))

(assert (=> d!21949 (= (+!107 lt!39205 (tuple2!2201 lt!39202 (minValue!2210 newMap!16))) lt!40037)))

(declare-fun b!84906 () Bool)

(declare-fun res!43793 () Bool)

(assert (=> b!84906 (=> (not res!43793) (not e!55356))))

(assert (=> b!84906 (= res!43793 (= (getValueByKey!137 (toList!739 lt!40037) (_1!1111 (tuple2!2201 lt!39202 (minValue!2210 newMap!16)))) (Some!142 (_2!1111 (tuple2!2201 lt!39202 (minValue!2210 newMap!16))))))))

(declare-fun b!84907 () Bool)

(assert (=> b!84907 (= e!55356 (contains!751 (toList!739 lt!40037) (tuple2!2201 lt!39202 (minValue!2210 newMap!16))))))

(assert (= (and d!21949 res!43792) b!84906))

(assert (= (and b!84906 res!43793) b!84907))

(declare-fun m!89137 () Bool)

(assert (=> d!21949 m!89137))

(declare-fun m!89139 () Bool)

(assert (=> d!21949 m!89139))

(declare-fun m!89141 () Bool)

(assert (=> d!21949 m!89141))

(declare-fun m!89143 () Bool)

(assert (=> d!21949 m!89143))

(declare-fun m!89145 () Bool)

(assert (=> b!84906 m!89145))

(declare-fun m!89147 () Bool)

(assert (=> b!84907 m!89147))

(assert (=> b!83356 d!21949))

(assert (=> b!83356 d!21223))

(declare-fun d!21951 () Bool)

(assert (=> d!21951 (= (apply!81 lt!39205 lt!39209) (get!1196 (getValueByKey!137 (toList!739 lt!39205) lt!39209)))))

(declare-fun bs!3596 () Bool)

(assert (= bs!3596 d!21951))

(declare-fun m!89149 () Bool)

(assert (=> bs!3596 m!89149))

(assert (=> bs!3596 m!89149))

(declare-fun m!89151 () Bool)

(assert (=> bs!3596 m!89151))

(assert (=> b!83356 d!21951))

(declare-fun d!21953 () Bool)

(assert (=> d!21953 (contains!749 (+!107 lt!39216 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16))) lt!39214)))

(declare-fun lt!40040 () Unit!2426)

(assert (=> d!21953 (= lt!40040 (choose!495 lt!39216 lt!39213 (zeroValue!2210 newMap!16) lt!39214))))

(assert (=> d!21953 (contains!749 lt!39216 lt!39214)))

(assert (=> d!21953 (= (addStillContains!57 lt!39216 lt!39213 (zeroValue!2210 newMap!16) lt!39214) lt!40040)))

(declare-fun bs!3597 () Bool)

(assert (= bs!3597 d!21953))

(assert (=> bs!3597 m!86371))

(assert (=> bs!3597 m!86371))

(assert (=> bs!3597 m!86379))

(declare-fun m!89153 () Bool)

(assert (=> bs!3597 m!89153))

(declare-fun m!89155 () Bool)

(assert (=> bs!3597 m!89155))

(assert (=> b!83356 d!21953))

(declare-fun d!21955 () Bool)

(declare-fun e!55358 () Bool)

(assert (=> d!21955 e!55358))

(declare-fun res!43794 () Bool)

(assert (=> d!21955 (=> res!43794 e!55358)))

(declare-fun lt!40042 () Bool)

(assert (=> d!21955 (= res!43794 (not lt!40042))))

(declare-fun lt!40044 () Bool)

(assert (=> d!21955 (= lt!40042 lt!40044)))

(declare-fun lt!40043 () Unit!2426)

(declare-fun e!55357 () Unit!2426)

(assert (=> d!21955 (= lt!40043 e!55357)))

(declare-fun c!13739 () Bool)

(assert (=> d!21955 (= c!13739 lt!40044)))

(assert (=> d!21955 (= lt!40044 (containsKey!141 (toList!739 (+!107 lt!39216 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16)))) lt!39214))))

(assert (=> d!21955 (= (contains!749 (+!107 lt!39216 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16))) lt!39214) lt!40042)))

(declare-fun b!84908 () Bool)

(declare-fun lt!40041 () Unit!2426)

(assert (=> b!84908 (= e!55357 lt!40041)))

(assert (=> b!84908 (= lt!40041 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 (+!107 lt!39216 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16)))) lt!39214))))

(assert (=> b!84908 (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!39216 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16)))) lt!39214))))

(declare-fun b!84909 () Bool)

(declare-fun Unit!2503 () Unit!2426)

(assert (=> b!84909 (= e!55357 Unit!2503)))

(declare-fun b!84910 () Bool)

(assert (=> b!84910 (= e!55358 (isDefined!91 (getValueByKey!137 (toList!739 (+!107 lt!39216 (tuple2!2201 lt!39213 (zeroValue!2210 newMap!16)))) lt!39214)))))

(assert (= (and d!21955 c!13739) b!84908))

(assert (= (and d!21955 (not c!13739)) b!84909))

(assert (= (and d!21955 (not res!43794)) b!84910))

(declare-fun m!89157 () Bool)

(assert (=> d!21955 m!89157))

(declare-fun m!89159 () Bool)

(assert (=> b!84908 m!89159))

(declare-fun m!89161 () Bool)

(assert (=> b!84908 m!89161))

(assert (=> b!84908 m!89161))

(declare-fun m!89163 () Bool)

(assert (=> b!84908 m!89163))

(assert (=> b!84910 m!89161))

(assert (=> b!84910 m!89161))

(assert (=> b!84910 m!89163))

(assert (=> b!83356 d!21955))

(declare-fun d!21957 () Bool)

(assert (=> d!21957 (= (apply!81 (+!107 lt!39203 (tuple2!2201 lt!39212 (minValue!2210 newMap!16))) lt!39197) (apply!81 lt!39203 lt!39197))))

(declare-fun lt!40045 () Unit!2426)

(assert (=> d!21957 (= lt!40045 (choose!494 lt!39203 lt!39212 (minValue!2210 newMap!16) lt!39197))))

(declare-fun e!55359 () Bool)

(assert (=> d!21957 e!55359))

(declare-fun res!43795 () Bool)

(assert (=> d!21957 (=> (not res!43795) (not e!55359))))

(assert (=> d!21957 (= res!43795 (contains!749 lt!39203 lt!39197))))

(assert (=> d!21957 (= (addApplyDifferent!57 lt!39203 lt!39212 (minValue!2210 newMap!16) lt!39197) lt!40045)))

(declare-fun b!84911 () Bool)

(assert (=> b!84911 (= e!55359 (not (= lt!39197 lt!39212)))))

(assert (= (and d!21957 res!43795) b!84911))

(assert (=> d!21957 m!86363))

(declare-fun m!89165 () Bool)

(assert (=> d!21957 m!89165))

(assert (=> d!21957 m!86367))

(assert (=> d!21957 m!86367))

(assert (=> d!21957 m!86369))

(declare-fun m!89167 () Bool)

(assert (=> d!21957 m!89167))

(assert (=> b!83356 d!21957))

(declare-fun d!21959 () Bool)

(assert (=> d!21959 (= (apply!81 lt!39203 lt!39197) (get!1196 (getValueByKey!137 (toList!739 lt!39203) lt!39197)))))

(declare-fun bs!3598 () Bool)

(assert (= bs!3598 d!21959))

(declare-fun m!89169 () Bool)

(assert (=> bs!3598 m!89169))

(assert (=> bs!3598 m!89169))

(declare-fun m!89171 () Bool)

(assert (=> bs!3598 m!89171))

(assert (=> b!83356 d!21959))

(declare-fun d!21961 () Bool)

(declare-fun e!55361 () Bool)

(assert (=> d!21961 e!55361))

(declare-fun res!43796 () Bool)

(assert (=> d!21961 (=> res!43796 e!55361)))

(declare-fun lt!40047 () Bool)

(assert (=> d!21961 (= res!43796 (not lt!40047))))

(declare-fun lt!40049 () Bool)

(assert (=> d!21961 (= lt!40047 lt!40049)))

(declare-fun lt!40048 () Unit!2426)

(declare-fun e!55360 () Unit!2426)

(assert (=> d!21961 (= lt!40048 e!55360)))

(declare-fun c!13740 () Bool)

(assert (=> d!21961 (= c!13740 lt!40049)))

(assert (=> d!21961 (= lt!40049 (containsKey!141 (toList!739 lt!39238) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> d!21961 (= (contains!749 lt!39238 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!40047)))

(declare-fun b!84912 () Bool)

(declare-fun lt!40046 () Unit!2426)

(assert (=> b!84912 (= e!55360 lt!40046)))

(assert (=> b!84912 (= lt!40046 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39238) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(assert (=> b!84912 (isDefined!91 (getValueByKey!137 (toList!739 lt!39238) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!84913 () Bool)

(declare-fun Unit!2504 () Unit!2426)

(assert (=> b!84913 (= e!55360 Unit!2504)))

(declare-fun b!84914 () Bool)

(assert (=> b!84914 (= e!55361 (isDefined!91 (getValueByKey!137 (toList!739 lt!39238) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21961 c!13740) b!84912))

(assert (= (and d!21961 (not c!13740)) b!84913))

(assert (= (and d!21961 (not res!43796)) b!84914))

(declare-fun m!89173 () Bool)

(assert (=> d!21961 m!89173))

(declare-fun m!89175 () Bool)

(assert (=> b!84912 m!89175))

(assert (=> b!84912 m!86471))

(assert (=> b!84912 m!86471))

(declare-fun m!89177 () Bool)

(assert (=> b!84912 m!89177))

(assert (=> b!84914 m!86471))

(assert (=> b!84914 m!86471))

(assert (=> b!84914 m!89177))

(assert (=> d!21003 d!21961))

(declare-fun b!84917 () Bool)

(declare-fun e!55363 () Option!143)

(assert (=> b!84917 (= e!55363 (getValueByKey!137 (t!5214 lt!39237) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun d!21963 () Bool)

(declare-fun c!13741 () Bool)

(assert (=> d!21963 (= c!13741 (and ((_ is Cons!1519) lt!39237) (= (_1!1111 (h!2109 lt!39237)) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun e!55362 () Option!143)

(assert (=> d!21963 (= (getValueByKey!137 lt!39237 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) e!55362)))

(declare-fun b!84915 () Bool)

(assert (=> b!84915 (= e!55362 (Some!142 (_2!1111 (h!2109 lt!39237))))))

(declare-fun b!84918 () Bool)

(assert (=> b!84918 (= e!55363 None!141)))

(declare-fun b!84916 () Bool)

(assert (=> b!84916 (= e!55362 e!55363)))

(declare-fun c!13742 () Bool)

(assert (=> b!84916 (= c!13742 (and ((_ is Cons!1519) lt!39237) (not (= (_1!1111 (h!2109 lt!39237)) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(assert (= (and d!21963 c!13741) b!84915))

(assert (= (and d!21963 (not c!13741)) b!84916))

(assert (= (and b!84916 c!13742) b!84917))

(assert (= (and b!84916 (not c!13742)) b!84918))

(declare-fun m!89179 () Bool)

(assert (=> b!84917 m!89179))

(assert (=> d!21003 d!21963))

(declare-fun d!21965 () Bool)

(assert (=> d!21965 (= (getValueByKey!137 lt!39237 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) (Some!142 (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun lt!40050 () Unit!2426)

(assert (=> d!21965 (= lt!40050 (choose!497 lt!39237 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun e!55364 () Bool)

(assert (=> d!21965 e!55364))

(declare-fun res!43797 () Bool)

(assert (=> d!21965 (=> (not res!43797) (not e!55364))))

(assert (=> d!21965 (= res!43797 (isStrictlySorted!292 lt!39237))))

(assert (=> d!21965 (= (lemmaContainsTupThenGetReturnValue!57 lt!39237 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!40050)))

(declare-fun b!84919 () Bool)

(declare-fun res!43798 () Bool)

(assert (=> b!84919 (=> (not res!43798) (not e!55364))))

(assert (=> b!84919 (= res!43798 (containsKey!141 lt!39237 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun b!84920 () Bool)

(assert (=> b!84920 (= e!55364 (contains!751 lt!39237 (tuple2!2201 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (= (and d!21965 res!43797) b!84919))

(assert (= (and b!84919 res!43798) b!84920))

(assert (=> d!21965 m!86465))

(declare-fun m!89181 () Bool)

(assert (=> d!21965 m!89181))

(declare-fun m!89183 () Bool)

(assert (=> d!21965 m!89183))

(declare-fun m!89185 () Bool)

(assert (=> b!84919 m!89185))

(declare-fun m!89187 () Bool)

(assert (=> b!84920 m!89187))

(assert (=> d!21003 d!21965))

(declare-fun b!84921 () Bool)

(declare-fun e!55369 () List!1523)

(declare-fun call!8007 () List!1523)

(assert (=> b!84921 (= e!55369 call!8007)))

(declare-fun b!84922 () Bool)

(declare-fun e!55367 () Bool)

(declare-fun lt!40051 () List!1523)

(assert (=> b!84922 (= e!55367 (contains!751 lt!40051 (tuple2!2201 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun c!13743 () Bool)

(declare-fun e!55366 () List!1523)

(declare-fun b!84923 () Bool)

(declare-fun c!13745 () Bool)

(assert (=> b!84923 (= e!55366 (ite c!13745 (t!5214 (toList!739 lt!38728)) (ite c!13743 (Cons!1519 (h!2109 (toList!739 lt!38728)) (t!5214 (toList!739 lt!38728))) Nil!1520)))))

(declare-fun d!21967 () Bool)

(assert (=> d!21967 e!55367))

(declare-fun res!43800 () Bool)

(assert (=> d!21967 (=> (not res!43800) (not e!55367))))

(assert (=> d!21967 (= res!43800 (isStrictlySorted!292 lt!40051))))

(declare-fun e!55368 () List!1523)

(assert (=> d!21967 (= lt!40051 e!55368)))

(declare-fun c!13744 () Bool)

(assert (=> d!21967 (= c!13744 (and ((_ is Cons!1519) (toList!739 lt!38728)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38728))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> d!21967 (isStrictlySorted!292 (toList!739 lt!38728))))

(assert (=> d!21967 (= (insertStrictlySorted!60 (toList!739 lt!38728) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!40051)))

(declare-fun b!84924 () Bool)

(assert (=> b!84924 (= e!55366 (insertStrictlySorted!60 (t!5214 (toList!739 lt!38728)) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!8004 () Bool)

(declare-fun call!8009 () List!1523)

(assert (=> bm!8004 (= call!8007 call!8009)))

(declare-fun b!84925 () Bool)

(declare-fun e!55365 () List!1523)

(declare-fun call!8008 () List!1523)

(assert (=> b!84925 (= e!55365 call!8008)))

(declare-fun b!84926 () Bool)

(assert (=> b!84926 (= e!55368 e!55369)))

(assert (=> b!84926 (= c!13745 (and ((_ is Cons!1519) (toList!739 lt!38728)) (= (_1!1111 (h!2109 (toList!739 lt!38728))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(declare-fun b!84927 () Bool)

(declare-fun res!43799 () Bool)

(assert (=> b!84927 (=> (not res!43799) (not e!55367))))

(assert (=> b!84927 (= res!43799 (containsKey!141 lt!40051 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))

(declare-fun bm!8005 () Bool)

(assert (=> bm!8005 (= call!8008 call!8007)))

(declare-fun b!84928 () Bool)

(assert (=> b!84928 (= e!55368 call!8009)))

(declare-fun b!84929 () Bool)

(assert (=> b!84929 (= e!55365 call!8008)))

(declare-fun b!84930 () Bool)

(assert (=> b!84930 (= c!13743 (and ((_ is Cons!1519) (toList!739 lt!38728)) (bvsgt (_1!1111 (h!2109 (toList!739 lt!38728))) (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))

(assert (=> b!84930 (= e!55369 e!55365)))

(declare-fun bm!8006 () Bool)

(assert (=> bm!8006 (= call!8009 ($colon$colon!70 e!55366 (ite c!13744 (h!2109 (toList!739 lt!38728)) (tuple2!2201 (_1!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992))))) (_2!1111 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))))))

(declare-fun c!13746 () Bool)

(assert (=> bm!8006 (= c!13746 c!13744)))

(assert (= (and d!21967 c!13744) b!84928))

(assert (= (and d!21967 (not c!13744)) b!84926))

(assert (= (and b!84926 c!13745) b!84921))

(assert (= (and b!84926 (not c!13745)) b!84930))

(assert (= (and b!84930 c!13743) b!84925))

(assert (= (and b!84930 (not c!13743)) b!84929))

(assert (= (or b!84925 b!84929) bm!8005))

(assert (= (or b!84921 bm!8005) bm!8004))

(assert (= (or b!84928 bm!8004) bm!8006))

(assert (= (and bm!8006 c!13746) b!84924))

(assert (= (and bm!8006 (not c!13746)) b!84923))

(assert (= (and d!21967 res!43800) b!84927))

(assert (= (and b!84927 res!43799) b!84922))

(declare-fun m!89189 () Bool)

(assert (=> bm!8006 m!89189))

(declare-fun m!89191 () Bool)

(assert (=> b!84924 m!89191))

(declare-fun m!89193 () Bool)

(assert (=> d!21967 m!89193))

(assert (=> d!21967 m!86321))

(declare-fun m!89195 () Bool)

(assert (=> b!84927 m!89195))

(declare-fun m!89197 () Bool)

(assert (=> b!84922 m!89197))

(assert (=> d!21003 d!21967))

(declare-fun d!21969 () Bool)

(declare-fun res!43801 () Bool)

(declare-fun e!55370 () Bool)

(assert (=> d!21969 (=> res!43801 e!55370)))

(assert (=> d!21969 (= res!43801 (and ((_ is Cons!1519) (toList!739 call!7780)) (= (_1!1111 (h!2109 (toList!739 call!7780))) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998))))))))

(assert (=> d!21969 (= (containsKey!141 (toList!739 call!7780) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))) e!55370)))

(declare-fun b!84931 () Bool)

(declare-fun e!55371 () Bool)

(assert (=> b!84931 (= e!55370 e!55371)))

(declare-fun res!43802 () Bool)

(assert (=> b!84931 (=> (not res!43802) (not e!55371))))

(assert (=> b!84931 (= res!43802 (and (or (not ((_ is Cons!1519) (toList!739 call!7780))) (bvsle (_1!1111 (h!2109 (toList!739 call!7780))) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998))))) ((_ is Cons!1519) (toList!739 call!7780)) (bvslt (_1!1111 (h!2109 (toList!739 call!7780))) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998))))))))

(declare-fun b!84932 () Bool)

(assert (=> b!84932 (= e!55371 (containsKey!141 (t!5214 (toList!739 call!7780)) (ite c!13219 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (select (arr!1900 (_keys!3983 newMap!16)) (index!3117 lt!38998)))))))

(assert (= (and d!21969 (not res!43801)) b!84931))

(assert (= (and b!84931 res!43802) b!84932))

(declare-fun m!89199 () Bool)

(assert (=> b!84932 m!89199))

(assert (=> d!20903 d!21969))

(declare-fun b!84933 () Bool)

(declare-fun e!55376 () List!1523)

(declare-fun call!8010 () List!1523)

(assert (=> b!84933 (= e!55376 call!8010)))

(declare-fun b!84934 () Bool)

(declare-fun e!55374 () Bool)

(declare-fun lt!40052 () List!1523)

(assert (=> b!84934 (= e!55374 (contains!751 lt!40052 (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(declare-fun b!84935 () Bool)

(declare-fun c!13749 () Bool)

(declare-fun c!13747 () Bool)

(declare-fun e!55373 () List!1523)

(assert (=> b!84935 (= e!55373 (ite c!13749 (t!5214 (t!5214 (toList!739 lt!38741))) (ite c!13747 (Cons!1519 (h!2109 (t!5214 (toList!739 lt!38741))) (t!5214 (t!5214 (toList!739 lt!38741)))) Nil!1520)))))

(declare-fun d!21971 () Bool)

(assert (=> d!21971 e!55374))

(declare-fun res!43804 () Bool)

(assert (=> d!21971 (=> (not res!43804) (not e!55374))))

(assert (=> d!21971 (= res!43804 (isStrictlySorted!292 lt!40052))))

(declare-fun e!55375 () List!1523)

(assert (=> d!21971 (= lt!40052 e!55375)))

(declare-fun c!13748 () Bool)

(assert (=> d!21971 (= c!13748 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38741))) (bvslt (_1!1111 (h!2109 (t!5214 (toList!739 lt!38741)))) (_1!1111 lt!38738))))))

(assert (=> d!21971 (isStrictlySorted!292 (t!5214 (toList!739 lt!38741)))))

(assert (=> d!21971 (= (insertStrictlySorted!60 (t!5214 (toList!739 lt!38741)) (_1!1111 lt!38738) (_2!1111 lt!38738)) lt!40052)))

(declare-fun b!84936 () Bool)

(assert (=> b!84936 (= e!55373 (insertStrictlySorted!60 (t!5214 (t!5214 (toList!739 lt!38741))) (_1!1111 lt!38738) (_2!1111 lt!38738)))))

(declare-fun bm!8007 () Bool)

(declare-fun call!8012 () List!1523)

(assert (=> bm!8007 (= call!8010 call!8012)))

(declare-fun b!84937 () Bool)

(declare-fun e!55372 () List!1523)

(declare-fun call!8011 () List!1523)

(assert (=> b!84937 (= e!55372 call!8011)))

(declare-fun b!84938 () Bool)

(assert (=> b!84938 (= e!55375 e!55376)))

(assert (=> b!84938 (= c!13749 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38741))) (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!38741)))) (_1!1111 lt!38738))))))

(declare-fun b!84939 () Bool)

(declare-fun res!43803 () Bool)

(assert (=> b!84939 (=> (not res!43803) (not e!55374))))

(assert (=> b!84939 (= res!43803 (containsKey!141 lt!40052 (_1!1111 lt!38738)))))

(declare-fun bm!8008 () Bool)

(assert (=> bm!8008 (= call!8011 call!8010)))

(declare-fun b!84940 () Bool)

(assert (=> b!84940 (= e!55375 call!8012)))

(declare-fun b!84941 () Bool)

(assert (=> b!84941 (= e!55372 call!8011)))

(declare-fun b!84942 () Bool)

(assert (=> b!84942 (= c!13747 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38741))) (bvsgt (_1!1111 (h!2109 (t!5214 (toList!739 lt!38741)))) (_1!1111 lt!38738))))))

(assert (=> b!84942 (= e!55376 e!55372)))

(declare-fun bm!8009 () Bool)

(assert (=> bm!8009 (= call!8012 ($colon$colon!70 e!55373 (ite c!13748 (h!2109 (t!5214 (toList!739 lt!38741))) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738)))))))

(declare-fun c!13750 () Bool)

(assert (=> bm!8009 (= c!13750 c!13748)))

(assert (= (and d!21971 c!13748) b!84940))

(assert (= (and d!21971 (not c!13748)) b!84938))

(assert (= (and b!84938 c!13749) b!84933))

(assert (= (and b!84938 (not c!13749)) b!84942))

(assert (= (and b!84942 c!13747) b!84937))

(assert (= (and b!84942 (not c!13747)) b!84941))

(assert (= (or b!84937 b!84941) bm!8008))

(assert (= (or b!84933 bm!8008) bm!8007))

(assert (= (or b!84940 bm!8007) bm!8009))

(assert (= (and bm!8009 c!13750) b!84936))

(assert (= (and bm!8009 (not c!13750)) b!84935))

(assert (= (and d!21971 res!43804) b!84939))

(assert (= (and b!84939 res!43803) b!84934))

(declare-fun m!89201 () Bool)

(assert (=> bm!8009 m!89201))

(declare-fun m!89203 () Bool)

(assert (=> b!84936 m!89203))

(declare-fun m!89205 () Bool)

(assert (=> d!21971 m!89205))

(assert (=> d!21971 m!88207))

(declare-fun m!89207 () Bool)

(assert (=> b!84939 m!89207))

(declare-fun m!89209 () Bool)

(assert (=> b!84934 m!89209))

(assert (=> b!83483 d!21971))

(assert (=> b!83409 d!21261))

(declare-fun b!84943 () Bool)

(declare-fun e!55381 () List!1523)

(declare-fun call!8013 () List!1523)

(assert (=> b!84943 (= e!55381 call!8013)))

(declare-fun b!84944 () Bool)

(declare-fun e!55379 () Bool)

(declare-fun lt!40053 () List!1523)

(assert (=> b!84944 (= e!55379 (contains!751 lt!40053 (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun e!55378 () List!1523)

(declare-fun c!13751 () Bool)

(declare-fun b!84945 () Bool)

(declare-fun c!13753 () Bool)

(assert (=> b!84945 (= e!55378 (ite c!13753 (t!5214 (t!5214 (toList!739 (+!107 lt!38728 lt!38742)))) (ite c!13751 (Cons!1519 (h!2109 (t!5214 (toList!739 (+!107 lt!38728 lt!38742)))) (t!5214 (t!5214 (toList!739 (+!107 lt!38728 lt!38742))))) Nil!1520)))))

(declare-fun d!21973 () Bool)

(assert (=> d!21973 e!55379))

(declare-fun res!43806 () Bool)

(assert (=> d!21973 (=> (not res!43806) (not e!55379))))

(assert (=> d!21973 (= res!43806 (isStrictlySorted!292 lt!40053))))

(declare-fun e!55380 () List!1523)

(assert (=> d!21973 (= lt!40053 e!55380)))

(declare-fun c!13752 () Bool)

(assert (=> d!21973 (= c!13752 (and ((_ is Cons!1519) (t!5214 (toList!739 (+!107 lt!38728 lt!38742)))) (bvslt (_1!1111 (h!2109 (t!5214 (toList!739 (+!107 lt!38728 lt!38742))))) (_1!1111 lt!38729))))))

(assert (=> d!21973 (isStrictlySorted!292 (t!5214 (toList!739 (+!107 lt!38728 lt!38742))))))

(assert (=> d!21973 (= (insertStrictlySorted!60 (t!5214 (toList!739 (+!107 lt!38728 lt!38742))) (_1!1111 lt!38729) (_2!1111 lt!38729)) lt!40053)))

(declare-fun b!84946 () Bool)

(assert (=> b!84946 (= e!55378 (insertStrictlySorted!60 (t!5214 (t!5214 (toList!739 (+!107 lt!38728 lt!38742)))) (_1!1111 lt!38729) (_2!1111 lt!38729)))))

(declare-fun bm!8010 () Bool)

(declare-fun call!8015 () List!1523)

(assert (=> bm!8010 (= call!8013 call!8015)))

(declare-fun b!84947 () Bool)

(declare-fun e!55377 () List!1523)

(declare-fun call!8014 () List!1523)

(assert (=> b!84947 (= e!55377 call!8014)))

(declare-fun b!84948 () Bool)

(assert (=> b!84948 (= e!55380 e!55381)))

(assert (=> b!84948 (= c!13753 (and ((_ is Cons!1519) (t!5214 (toList!739 (+!107 lt!38728 lt!38742)))) (= (_1!1111 (h!2109 (t!5214 (toList!739 (+!107 lt!38728 lt!38742))))) (_1!1111 lt!38729))))))

(declare-fun b!84949 () Bool)

(declare-fun res!43805 () Bool)

(assert (=> b!84949 (=> (not res!43805) (not e!55379))))

(assert (=> b!84949 (= res!43805 (containsKey!141 lt!40053 (_1!1111 lt!38729)))))

(declare-fun bm!8011 () Bool)

(assert (=> bm!8011 (= call!8014 call!8013)))

(declare-fun b!84950 () Bool)

(assert (=> b!84950 (= e!55380 call!8015)))

(declare-fun b!84951 () Bool)

(assert (=> b!84951 (= e!55377 call!8014)))

(declare-fun b!84952 () Bool)

(assert (=> b!84952 (= c!13751 (and ((_ is Cons!1519) (t!5214 (toList!739 (+!107 lt!38728 lt!38742)))) (bvsgt (_1!1111 (h!2109 (t!5214 (toList!739 (+!107 lt!38728 lt!38742))))) (_1!1111 lt!38729))))))

(assert (=> b!84952 (= e!55381 e!55377)))

(declare-fun bm!8012 () Bool)

(assert (=> bm!8012 (= call!8015 ($colon$colon!70 e!55378 (ite c!13752 (h!2109 (t!5214 (toList!739 (+!107 lt!38728 lt!38742)))) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729)))))))

(declare-fun c!13754 () Bool)

(assert (=> bm!8012 (= c!13754 c!13752)))

(assert (= (and d!21973 c!13752) b!84950))

(assert (= (and d!21973 (not c!13752)) b!84948))

(assert (= (and b!84948 c!13753) b!84943))

(assert (= (and b!84948 (not c!13753)) b!84952))

(assert (= (and b!84952 c!13751) b!84947))

(assert (= (and b!84952 (not c!13751)) b!84951))

(assert (= (or b!84947 b!84951) bm!8011))

(assert (= (or b!84943 bm!8011) bm!8010))

(assert (= (or b!84950 bm!8010) bm!8012))

(assert (= (and bm!8012 c!13754) b!84946))

(assert (= (and bm!8012 (not c!13754)) b!84945))

(assert (= (and d!21973 res!43806) b!84949))

(assert (= (and b!84949 res!43805) b!84944))

(declare-fun m!89211 () Bool)

(assert (=> bm!8012 m!89211))

(declare-fun m!89213 () Bool)

(assert (=> b!84946 m!89213))

(declare-fun m!89215 () Bool)

(assert (=> d!21973 m!89215))

(assert (=> d!21973 m!88671))

(declare-fun m!89217 () Bool)

(assert (=> b!84949 m!89217))

(declare-fun m!89219 () Bool)

(assert (=> b!84944 m!89219))

(assert (=> b!83516 d!21973))

(declare-fun d!21975 () Bool)

(assert (=> d!21975 (isDefined!91 (getValueByKey!137 (toList!739 lt!39053) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!40054 () Unit!2426)

(assert (=> d!21975 (= lt!40054 (choose!500 (toList!739 lt!39053) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!55382 () Bool)

(assert (=> d!21975 e!55382))

(declare-fun res!43807 () Bool)

(assert (=> d!21975 (=> (not res!43807) (not e!55382))))

(assert (=> d!21975 (= res!43807 (isStrictlySorted!292 (toList!739 lt!39053)))))

(assert (=> d!21975 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39053) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!40054)))

(declare-fun b!84953 () Bool)

(assert (=> b!84953 (= e!55382 (containsKey!141 (toList!739 lt!39053) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!21975 res!43807) b!84953))

(assert (=> d!21975 m!85767))

(assert (=> d!21975 m!86515))

(assert (=> d!21975 m!86515))

(assert (=> d!21975 m!86517))

(assert (=> d!21975 m!85767))

(declare-fun m!89221 () Bool)

(assert (=> d!21975 m!89221))

(assert (=> d!21975 m!87751))

(assert (=> b!84953 m!85767))

(assert (=> b!84953 m!86511))

(assert (=> b!83423 d!21975))

(assert (=> b!83423 d!21193))

(assert (=> b!83423 d!21195))

(assert (=> b!83430 d!20855))

(declare-fun d!21977 () Bool)

(declare-fun res!43808 () Bool)

(declare-fun e!55383 () Bool)

(assert (=> d!21977 (=> res!43808 e!55383)))

(assert (=> d!21977 (= res!43808 (and ((_ is Cons!1519) (toList!739 lt!39032)) (= (_1!1111 (h!2109 (toList!739 lt!39032))) (_1!1111 lt!38742))))))

(assert (=> d!21977 (= (containsKey!141 (toList!739 lt!39032) (_1!1111 lt!38742)) e!55383)))

(declare-fun b!84954 () Bool)

(declare-fun e!55384 () Bool)

(assert (=> b!84954 (= e!55383 e!55384)))

(declare-fun res!43809 () Bool)

(assert (=> b!84954 (=> (not res!43809) (not e!55384))))

(assert (=> b!84954 (= res!43809 (and (or (not ((_ is Cons!1519) (toList!739 lt!39032))) (bvsle (_1!1111 (h!2109 (toList!739 lt!39032))) (_1!1111 lt!38742))) ((_ is Cons!1519) (toList!739 lt!39032)) (bvslt (_1!1111 (h!2109 (toList!739 lt!39032))) (_1!1111 lt!38742))))))

(declare-fun b!84955 () Bool)

(assert (=> b!84955 (= e!55384 (containsKey!141 (t!5214 (toList!739 lt!39032)) (_1!1111 lt!38742)))))

(assert (= (and d!21977 (not res!43808)) b!84954))

(assert (= (and b!84954 res!43809) b!84955))

(declare-fun m!89223 () Bool)

(assert (=> b!84955 m!89223))

(assert (=> d!21135 d!21977))

(declare-fun d!21979 () Bool)

(declare-fun e!55386 () Bool)

(assert (=> d!21979 e!55386))

(declare-fun res!43810 () Bool)

(assert (=> d!21979 (=> res!43810 e!55386)))

(declare-fun lt!40056 () Bool)

(assert (=> d!21979 (= res!43810 (not lt!40056))))

(declare-fun lt!40058 () Bool)

(assert (=> d!21979 (= lt!40056 lt!40058)))

(declare-fun lt!40057 () Unit!2426)

(declare-fun e!55385 () Unit!2426)

(assert (=> d!21979 (= lt!40057 e!55385)))

(declare-fun c!13755 () Bool)

(assert (=> d!21979 (= c!13755 lt!40058)))

(assert (=> d!21979 (= lt!40058 (containsKey!141 (toList!739 lt!39140) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21979 (= (contains!749 lt!39140 #b1000000000000000000000000000000000000000000000000000000000000000) lt!40056)))

(declare-fun b!84956 () Bool)

(declare-fun lt!40055 () Unit!2426)

(assert (=> b!84956 (= e!55385 lt!40055)))

(assert (=> b!84956 (= lt!40055 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39140) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84956 (isDefined!91 (getValueByKey!137 (toList!739 lt!39140) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84957 () Bool)

(declare-fun Unit!2505 () Unit!2426)

(assert (=> b!84957 (= e!55385 Unit!2505)))

(declare-fun b!84958 () Bool)

(assert (=> b!84958 (= e!55386 (isDefined!91 (getValueByKey!137 (toList!739 lt!39140) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21979 c!13755) b!84956))

(assert (= (and d!21979 (not c!13755)) b!84957))

(assert (= (and d!21979 (not res!43810)) b!84958))

(declare-fun m!89225 () Bool)

(assert (=> d!21979 m!89225))

(declare-fun m!89227 () Bool)

(assert (=> b!84956 m!89227))

(declare-fun m!89229 () Bool)

(assert (=> b!84956 m!89229))

(assert (=> b!84956 m!89229))

(declare-fun m!89231 () Bool)

(assert (=> b!84956 m!89231))

(assert (=> b!84958 m!89229))

(assert (=> b!84958 m!89229))

(assert (=> b!84958 m!89231))

(assert (=> b!83259 d!21979))

(declare-fun lt!40059 () Bool)

(declare-fun d!21981 () Bool)

(assert (=> d!21981 (= lt!40059 (select (content!87 (toList!739 lt!39276)) (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun e!55387 () Bool)

(assert (=> d!21981 (= lt!40059 e!55387)))

(declare-fun res!43811 () Bool)

(assert (=> d!21981 (=> (not res!43811) (not e!55387))))

(assert (=> d!21981 (= res!43811 ((_ is Cons!1519) (toList!739 lt!39276)))))

(assert (=> d!21981 (= (contains!751 (toList!739 lt!39276) (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!40059)))

(declare-fun b!84959 () Bool)

(declare-fun e!55388 () Bool)

(assert (=> b!84959 (= e!55387 e!55388)))

(declare-fun res!43812 () Bool)

(assert (=> b!84959 (=> res!43812 e!55388)))

(assert (=> b!84959 (= res!43812 (= (h!2109 (toList!739 lt!39276)) (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun b!84960 () Bool)

(assert (=> b!84960 (= e!55388 (contains!751 (t!5214 (toList!739 lt!39276)) (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (= (and d!21981 res!43811) b!84959))

(assert (= (and b!84959 (not res!43812)) b!84960))

(declare-fun m!89233 () Bool)

(assert (=> d!21981 m!89233))

(declare-fun m!89235 () Bool)

(assert (=> d!21981 m!89235))

(declare-fun m!89237 () Bool)

(assert (=> b!84960 m!89237))

(assert (=> b!83459 d!21981))

(declare-fun d!21983 () Bool)

(assert (=> d!21983 (= ($colon$colon!70 e!54559 (ite c!13362 (h!2109 (toList!739 lt!38741)) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729)))) (Cons!1519 (ite c!13362 (h!2109 (toList!739 lt!38741)) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))) e!54559))))

(assert (=> bm!7865 d!21983))

(declare-fun d!21985 () Bool)

(declare-fun res!43813 () Bool)

(declare-fun e!55389 () Bool)

(assert (=> d!21985 (=> res!43813 e!55389)))

(assert (=> d!21985 (= res!43813 (and ((_ is Cons!1519) (toList!739 lt!38907)) (= (_1!1111 (h!2109 (toList!739 lt!38907))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!21985 (= (containsKey!141 (toList!739 lt!38907) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!55389)))

(declare-fun b!84961 () Bool)

(declare-fun e!55390 () Bool)

(assert (=> b!84961 (= e!55389 e!55390)))

(declare-fun res!43814 () Bool)

(assert (=> b!84961 (=> (not res!43814) (not e!55390))))

(assert (=> b!84961 (= res!43814 (and (or (not ((_ is Cons!1519) (toList!739 lt!38907))) (bvsle (_1!1111 (h!2109 (toList!739 lt!38907))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1519) (toList!739 lt!38907)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38907))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!84962 () Bool)

(assert (=> b!84962 (= e!55390 (containsKey!141 (t!5214 (toList!739 lt!38907)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!21985 (not res!43813)) b!84961))

(assert (= (and b!84961 res!43814) b!84962))

(assert (=> b!84962 m!85767))

(declare-fun m!89239 () Bool)

(assert (=> b!84962 m!89239))

(assert (=> d!21105 d!21985))

(declare-fun d!21987 () Bool)

(declare-fun e!55392 () Bool)

(assert (=> d!21987 e!55392))

(declare-fun res!43815 () Bool)

(assert (=> d!21987 (=> res!43815 e!55392)))

(declare-fun lt!40061 () Bool)

(assert (=> d!21987 (= res!43815 (not lt!40061))))

(declare-fun lt!40063 () Bool)

(assert (=> d!21987 (= lt!40061 lt!40063)))

(declare-fun lt!40062 () Unit!2426)

(declare-fun e!55391 () Unit!2426)

(assert (=> d!21987 (= lt!40062 e!55391)))

(declare-fun c!13756 () Bool)

(assert (=> d!21987 (= c!13756 lt!40063)))

(assert (=> d!21987 (= lt!40063 (containsKey!141 (toList!739 lt!39198) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21987 (= (contains!749 lt!39198 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40061)))

(declare-fun b!84963 () Bool)

(declare-fun lt!40060 () Unit!2426)

(assert (=> b!84963 (= e!55391 lt!40060)))

(assert (=> b!84963 (= lt!40060 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39198) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84963 (isDefined!91 (getValueByKey!137 (toList!739 lt!39198) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84964 () Bool)

(declare-fun Unit!2506 () Unit!2426)

(assert (=> b!84964 (= e!55391 Unit!2506)))

(declare-fun b!84965 () Bool)

(assert (=> b!84965 (= e!55392 (isDefined!91 (getValueByKey!137 (toList!739 lt!39198) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21987 c!13756) b!84963))

(assert (= (and d!21987 (not c!13756)) b!84964))

(assert (= (and d!21987 (not res!43815)) b!84965))

(declare-fun m!89241 () Bool)

(assert (=> d!21987 m!89241))

(declare-fun m!89243 () Bool)

(assert (=> b!84963 m!89243))

(assert (=> b!84963 m!87887))

(assert (=> b!84963 m!87887))

(declare-fun m!89245 () Bool)

(assert (=> b!84963 m!89245))

(assert (=> b!84965 m!87887))

(assert (=> b!84965 m!87887))

(assert (=> b!84965 m!89245))

(assert (=> bm!7837 d!21987))

(declare-fun d!21989 () Bool)

(assert (=> d!21989 (= (get!1196 (getValueByKey!137 (toList!739 lt!38907) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2628 (getValueByKey!137 (toList!739 lt!38907) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21123 d!21989))

(assert (=> d!21123 d!21827))

(declare-fun d!21991 () Bool)

(declare-fun lt!40064 () Bool)

(assert (=> d!21991 (= lt!40064 (select (content!87 (t!5214 (toList!739 lt!39061))) lt!38729))))

(declare-fun e!55393 () Bool)

(assert (=> d!21991 (= lt!40064 e!55393)))

(declare-fun res!43816 () Bool)

(assert (=> d!21991 (=> (not res!43816) (not e!55393))))

(assert (=> d!21991 (= res!43816 ((_ is Cons!1519) (t!5214 (toList!739 lt!39061))))))

(assert (=> d!21991 (= (contains!751 (t!5214 (toList!739 lt!39061)) lt!38729) lt!40064)))

(declare-fun b!84966 () Bool)

(declare-fun e!55394 () Bool)

(assert (=> b!84966 (= e!55393 e!55394)))

(declare-fun res!43817 () Bool)

(assert (=> b!84966 (=> res!43817 e!55394)))

(assert (=> b!84966 (= res!43817 (= (h!2109 (t!5214 (toList!739 lt!39061))) lt!38729))))

(declare-fun b!84967 () Bool)

(assert (=> b!84967 (= e!55394 (contains!751 (t!5214 (t!5214 (toList!739 lt!39061))) lt!38729))))

(assert (= (and d!21991 res!43816) b!84966))

(assert (= (and b!84966 (not res!43817)) b!84967))

(assert (=> d!21991 m!88979))

(declare-fun m!89247 () Bool)

(assert (=> d!21991 m!89247))

(declare-fun m!89249 () Bool)

(assert (=> b!84967 m!89249))

(assert (=> b!83224 d!21991))

(declare-fun d!21993 () Bool)

(declare-fun lt!40065 () Bool)

(assert (=> d!21993 (= lt!40065 (select (content!87 (t!5214 (toList!739 lt!39028))) lt!38738))))

(declare-fun e!55395 () Bool)

(assert (=> d!21993 (= lt!40065 e!55395)))

(declare-fun res!43818 () Bool)

(assert (=> d!21993 (=> (not res!43818) (not e!55395))))

(assert (=> d!21993 (= res!43818 ((_ is Cons!1519) (t!5214 (toList!739 lt!39028))))))

(assert (=> d!21993 (= (contains!751 (t!5214 (toList!739 lt!39028)) lt!38738) lt!40065)))

(declare-fun b!84968 () Bool)

(declare-fun e!55396 () Bool)

(assert (=> b!84968 (= e!55395 e!55396)))

(declare-fun res!43819 () Bool)

(assert (=> b!84968 (=> res!43819 e!55396)))

(assert (=> b!84968 (= res!43819 (= (h!2109 (t!5214 (toList!739 lt!39028))) lt!38738))))

(declare-fun b!84969 () Bool)

(assert (=> b!84969 (= e!55396 (contains!751 (t!5214 (t!5214 (toList!739 lt!39028))) lt!38738))))

(assert (= (and d!21993 res!43818) b!84968))

(assert (= (and b!84968 (not res!43819)) b!84969))

(assert (=> d!21993 m!88995))

(declare-fun m!89251 () Bool)

(assert (=> d!21993 m!89251))

(declare-fun m!89253 () Bool)

(assert (=> b!84969 m!89253))

(assert (=> b!83342 d!21993))

(declare-fun d!21995 () Bool)

(declare-fun res!43820 () Bool)

(declare-fun e!55397 () Bool)

(assert (=> d!21995 (=> res!43820 e!55397)))

(assert (=> d!21995 (= res!43820 (= (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (=> d!21995 (= (arrayContainsKey!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!55397)))

(declare-fun b!84970 () Bool)

(declare-fun e!55398 () Bool)

(assert (=> b!84970 (= e!55397 e!55398)))

(declare-fun res!43821 () Bool)

(assert (=> b!84970 (=> (not res!43821) (not e!55398))))

(assert (=> b!84970 (= res!43821 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(declare-fun b!84971 () Bool)

(assert (=> b!84971 (= e!55398 (arrayContainsKey!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!21995 (not res!43820)) b!84970))

(assert (= (and b!84970 res!43821) b!84971))

(assert (=> d!21995 m!87431))

(assert (=> b!84971 m!85563))

(declare-fun m!89255 () Bool)

(assert (=> b!84971 m!89255))

(assert (=> b!83581 d!21995))

(declare-fun d!21997 () Bool)

(declare-fun lt!40066 () Bool)

(assert (=> d!21997 (= lt!40066 (select (content!87 lt!39304) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(declare-fun e!55399 () Bool)

(assert (=> d!21997 (= lt!40066 e!55399)))

(declare-fun res!43822 () Bool)

(assert (=> d!21997 (=> (not res!43822) (not e!55399))))

(assert (=> d!21997 (= res!43822 ((_ is Cons!1519) lt!39304))))

(assert (=> d!21997 (= (contains!751 lt!39304 (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))) lt!40066)))

(declare-fun b!84972 () Bool)

(declare-fun e!55400 () Bool)

(assert (=> b!84972 (= e!55399 e!55400)))

(declare-fun res!43823 () Bool)

(assert (=> b!84972 (=> res!43823 e!55400)))

(assert (=> b!84972 (= res!43823 (= (h!2109 lt!39304) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(declare-fun b!84973 () Bool)

(assert (=> b!84973 (= e!55400 (contains!751 (t!5214 lt!39304) (tuple2!2201 (_1!1111 lt!38738) (_2!1111 lt!38738))))))

(assert (= (and d!21997 res!43822) b!84972))

(assert (= (and b!84972 (not res!43823)) b!84973))

(declare-fun m!89257 () Bool)

(assert (=> d!21997 m!89257))

(declare-fun m!89259 () Bool)

(assert (=> d!21997 m!89259))

(declare-fun m!89261 () Bool)

(assert (=> b!84973 m!89261))

(assert (=> b!83481 d!21997))

(declare-fun lt!40067 () Bool)

(declare-fun d!21999 () Bool)

(assert (=> d!21999 (= lt!40067 (select (content!87 (toList!739 lt!39242)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(declare-fun e!55401 () Bool)

(assert (=> d!21999 (= lt!40067 e!55401)))

(declare-fun res!43824 () Bool)

(assert (=> d!21999 (=> (not res!43824) (not e!55401))))

(assert (=> d!21999 (= res!43824 ((_ is Cons!1519) (toList!739 lt!39242)))))

(assert (=> d!21999 (= (contains!751 (toList!739 lt!39242) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) lt!40067)))

(declare-fun b!84974 () Bool)

(declare-fun e!55402 () Bool)

(assert (=> b!84974 (= e!55401 e!55402)))

(declare-fun res!43825 () Bool)

(assert (=> b!84974 (=> res!43825 e!55402)))

(assert (=> b!84974 (= res!43825 (= (h!2109 (toList!739 lt!39242)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(declare-fun b!84975 () Bool)

(assert (=> b!84975 (= e!55402 (contains!751 (t!5214 (toList!739 lt!39242)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))

(assert (= (and d!21999 res!43824) b!84974))

(assert (= (and b!84974 (not res!43825)) b!84975))

(declare-fun m!89263 () Bool)

(assert (=> d!21999 m!89263))

(declare-fun m!89265 () Bool)

(assert (=> d!21999 m!89265))

(declare-fun m!89267 () Bool)

(assert (=> b!84975 m!89267))

(assert (=> b!83418 d!21999))

(declare-fun d!22001 () Bool)

(assert (=> d!22001 (= ($colon$colon!70 e!54397 (ite c!13288 (h!2109 (toList!739 lt!38728)) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742)))) (Cons!1519 (ite c!13288 (h!2109 (toList!739 lt!38728)) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))) e!54397))))

(assert (=> bm!7831 d!22001))

(declare-fun d!22003 () Bool)

(declare-fun lt!40068 () Bool)

(assert (=> d!22003 (= lt!40068 (select (content!87 lt!39056) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun e!55403 () Bool)

(assert (=> d!22003 (= lt!40068 e!55403)))

(declare-fun res!43826 () Bool)

(assert (=> d!22003 (=> (not res!43826) (not e!55403))))

(assert (=> d!22003 (= res!43826 ((_ is Cons!1519) lt!39056))))

(assert (=> d!22003 (= (contains!751 lt!39056 (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))) lt!40068)))

(declare-fun b!84976 () Bool)

(declare-fun e!55404 () Bool)

(assert (=> b!84976 (= e!55403 e!55404)))

(declare-fun res!43827 () Bool)

(assert (=> b!84976 (=> res!43827 e!55404)))

(assert (=> b!84976 (= res!43827 (= (h!2109 lt!39056) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(declare-fun b!84977 () Bool)

(assert (=> b!84977 (= e!55404 (contains!751 (t!5214 lt!39056) (tuple2!2201 (_1!1111 lt!38729) (_2!1111 lt!38729))))))

(assert (= (and d!22003 res!43826) b!84976))

(assert (= (and b!84976 (not res!43827)) b!84977))

(declare-fun m!89269 () Bool)

(assert (=> d!22003 m!89269))

(declare-fun m!89271 () Bool)

(assert (=> d!22003 m!89271))

(declare-fun m!89273 () Bool)

(assert (=> b!84977 m!89273))

(assert (=> b!83634 d!22003))

(declare-fun d!22005 () Bool)

(declare-fun e!55406 () Bool)

(assert (=> d!22005 e!55406))

(declare-fun res!43828 () Bool)

(assert (=> d!22005 (=> res!43828 e!55406)))

(declare-fun lt!40070 () Bool)

(assert (=> d!22005 (= res!43828 (not lt!40070))))

(declare-fun lt!40072 () Bool)

(assert (=> d!22005 (= lt!40070 lt!40072)))

(declare-fun lt!40071 () Unit!2426)

(declare-fun e!55405 () Unit!2426)

(assert (=> d!22005 (= lt!40071 e!55405)))

(declare-fun c!13757 () Bool)

(assert (=> d!22005 (= c!13757 lt!40072)))

(assert (=> d!22005 (= lt!40072 (containsKey!141 (toList!739 lt!39140) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!22005 (= (contains!749 lt!39140 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!40070)))

(declare-fun b!84978 () Bool)

(declare-fun lt!40069 () Unit!2426)

(assert (=> b!84978 (= e!55405 lt!40069)))

(assert (=> b!84978 (= lt!40069 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39140) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!84978 (isDefined!91 (getValueByKey!137 (toList!739 lt!39140) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!84979 () Bool)

(declare-fun Unit!2507 () Unit!2426)

(assert (=> b!84979 (= e!55405 Unit!2507)))

(declare-fun b!84980 () Bool)

(assert (=> b!84980 (= e!55406 (isDefined!91 (getValueByKey!137 (toList!739 lt!39140) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!22005 c!13757) b!84978))

(assert (= (and d!22005 (not c!13757)) b!84979))

(assert (= (and d!22005 (not res!43828)) b!84980))

(assert (=> d!22005 m!86165))

(declare-fun m!89275 () Bool)

(assert (=> d!22005 m!89275))

(assert (=> b!84978 m!86165))

(declare-fun m!89277 () Bool)

(assert (=> b!84978 m!89277))

(assert (=> b!84978 m!86165))

(assert (=> b!84978 m!88829))

(assert (=> b!84978 m!88829))

(declare-fun m!89279 () Bool)

(assert (=> b!84978 m!89279))

(assert (=> b!84980 m!86165))

(assert (=> b!84980 m!88829))

(assert (=> b!84980 m!88829))

(assert (=> b!84980 m!89279))

(assert (=> b!83265 d!22005))

(assert (=> b!83165 d!21261))

(declare-fun d!22007 () Bool)

(declare-fun res!43829 () Bool)

(declare-fun e!55407 () Bool)

(assert (=> d!22007 (=> res!43829 e!55407)))

(assert (=> d!22007 (= res!43829 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) (= (_1!1111 (h!2109 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))) lt!38923)))))

(assert (=> d!22007 (= (containsKey!141 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38923) e!55407)))

(declare-fun b!84981 () Bool)

(declare-fun e!55408 () Bool)

(assert (=> b!84981 (= e!55407 e!55408)))

(declare-fun res!43830 () Bool)

(assert (=> b!84981 (=> (not res!43830) (not e!55408))))

(assert (=> b!84981 (= res!43830 (and (or (not ((_ is Cons!1519) (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))) (bvsle (_1!1111 (h!2109 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))) lt!38923)) ((_ is Cons!1519) (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) (bvslt (_1!1111 (h!2109 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992)))))))) lt!38923)))))

(declare-fun b!84982 () Bool)

(assert (=> b!84982 (= e!55408 (containsKey!141 (t!5214 (toList!739 (+!107 lt!38925 (tuple2!2201 lt!38922 (zeroValue!2210 (v!2622 (underlying!282 thiss!992))))))) lt!38923))))

(assert (= (and d!22007 (not res!43829)) b!84981))

(assert (= (and b!84981 res!43830) b!84982))

(declare-fun m!89281 () Bool)

(assert (=> b!84982 m!89281))

(assert (=> d!20925 d!22007))

(declare-fun d!22009 () Bool)

(assert (=> d!22009 (= (get!1196 (getValueByKey!137 (toList!739 (+!107 lt!38912 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38906)) (v!2628 (getValueByKey!137 (toList!739 (+!107 lt!38912 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38906)))))

(assert (=> d!20939 d!22009))

(declare-fun e!55410 () Option!143)

(declare-fun b!84985 () Bool)

(assert (=> b!84985 (= e!55410 (getValueByKey!137 (t!5214 (toList!739 (+!107 lt!38912 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) lt!38906))))

(declare-fun d!22011 () Bool)

(declare-fun c!13758 () Bool)

(assert (=> d!22011 (= c!13758 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38912 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) (= (_1!1111 (h!2109 (toList!739 (+!107 lt!38912 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))) lt!38906)))))

(declare-fun e!55409 () Option!143)

(assert (=> d!22011 (= (getValueByKey!137 (toList!739 (+!107 lt!38912 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))) lt!38906) e!55409)))

(declare-fun b!84983 () Bool)

(assert (=> b!84983 (= e!55409 (Some!142 (_2!1111 (h!2109 (toList!739 (+!107 lt!38912 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))))))))

(declare-fun b!84986 () Bool)

(assert (=> b!84986 (= e!55410 None!141)))

(declare-fun b!84984 () Bool)

(assert (=> b!84984 (= e!55409 e!55410)))

(declare-fun c!13759 () Bool)

(assert (=> b!84984 (= c!13759 (and ((_ is Cons!1519) (toList!739 (+!107 lt!38912 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992))))))) (not (= (_1!1111 (h!2109 (toList!739 (+!107 lt!38912 (tuple2!2201 lt!38921 (minValue!2210 (v!2622 (underlying!282 thiss!992)))))))) lt!38906))))))

(assert (= (and d!22011 c!13758) b!84983))

(assert (= (and d!22011 (not c!13758)) b!84984))

(assert (= (and b!84984 c!13759) b!84985))

(assert (= (and b!84984 (not c!13759)) b!84986))

(declare-fun m!89283 () Bool)

(assert (=> b!84985 m!89283))

(assert (=> d!20939 d!22011))

(assert (=> bm!7812 d!21093))

(declare-fun d!22013 () Bool)

(declare-fun res!43831 () Bool)

(declare-fun e!55411 () Bool)

(assert (=> d!22013 (=> res!43831 e!55411)))

(assert (=> d!22013 (= res!43831 (and ((_ is Cons!1519) (toList!739 call!7797)) (= (_1!1111 (h!2109 (toList!739 call!7797))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(assert (=> d!22013 (= (containsKey!141 (toList!739 call!7797) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) e!55411)))

(declare-fun b!84987 () Bool)

(declare-fun e!55412 () Bool)

(assert (=> b!84987 (= e!55411 e!55412)))

(declare-fun res!43832 () Bool)

(assert (=> b!84987 (=> (not res!43832) (not e!55412))))

(assert (=> b!84987 (= res!43832 (and (or (not ((_ is Cons!1519) (toList!739 call!7797))) (bvsle (_1!1111 (h!2109 (toList!739 call!7797))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))) ((_ is Cons!1519) (toList!739 call!7797)) (bvslt (_1!1111 (h!2109 (toList!739 call!7797))) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))))))

(declare-fun b!84988 () Bool)

(assert (=> b!84988 (= e!55412 (containsKey!141 (t!5214 (toList!739 call!7797)) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (= (and d!22013 (not res!43831)) b!84987))

(assert (= (and b!84987 res!43832) b!84988))

(assert (=> b!84988 m!85563))

(declare-fun m!89285 () Bool)

(assert (=> b!84988 m!89285))

(assert (=> d!21051 d!22013))

(declare-fun b!84991 () Bool)

(declare-fun e!55414 () Option!143)

(assert (=> b!84991 (= e!55414 (getValueByKey!137 (t!5214 (toList!739 lt!39280)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun d!22015 () Bool)

(declare-fun c!13760 () Bool)

(assert (=> d!22015 (= c!13760 (and ((_ is Cons!1519) (toList!739 lt!39280)) (= (_1!1111 (h!2109 (toList!739 lt!39280))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun e!55413 () Option!143)

(assert (=> d!22015 (= (getValueByKey!137 (toList!739 lt!39280) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) e!55413)))

(declare-fun b!84989 () Bool)

(assert (=> b!84989 (= e!55413 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39280)))))))

(declare-fun b!84992 () Bool)

(assert (=> b!84992 (= e!55414 None!141)))

(declare-fun b!84990 () Bool)

(assert (=> b!84990 (= e!55413 e!55414)))

(declare-fun c!13761 () Bool)

(assert (=> b!84990 (= c!13761 (and ((_ is Cons!1519) (toList!739 lt!39280)) (not (= (_1!1111 (h!2109 (toList!739 lt!39280))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(assert (= (and d!22015 c!13760) b!84989))

(assert (= (and d!22015 (not c!13760)) b!84990))

(assert (= (and b!84990 c!13761) b!84991))

(assert (= (and b!84990 (not c!13761)) b!84992))

(declare-fun m!89287 () Bool)

(assert (=> b!84991 m!89287))

(assert (=> b!83460 d!22015))

(assert (=> b!83600 d!21745))

(assert (=> b!83600 d!20977))

(declare-fun b!84993 () Bool)

(declare-fun e!55426 () Bool)

(declare-fun call!8020 () Bool)

(assert (=> b!84993 (= e!55426 (not call!8020))))

(declare-fun b!84994 () Bool)

(declare-fun e!55420 () Bool)

(declare-fun e!55424 () Bool)

(assert (=> b!84994 (= e!55420 e!55424)))

(declare-fun c!13767 () Bool)

(assert (=> b!84994 (= c!13767 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!84995 () Bool)

(declare-fun lt!40076 () ListLongMap!1447)

(declare-fun e!55415 () Bool)

(assert (=> b!84995 (= e!55415 (= (apply!81 lt!40076 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)) (get!1193 (select (arr!1901 (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!84995 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2145 (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))))))))

(assert (=> b!84995 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84996 () Bool)

(declare-fun e!55422 () ListLongMap!1447)

(declare-fun call!8022 () ListLongMap!1447)

(assert (=> b!84996 (= e!55422 call!8022)))

(declare-fun call!8016 () ListLongMap!1447)

(declare-fun bm!8013 () Bool)

(declare-fun call!8017 () ListLongMap!1447)

(declare-fun call!8021 () ListLongMap!1447)

(declare-fun c!13762 () Bool)

(declare-fun c!13765 () Bool)

(declare-fun call!8018 () ListLongMap!1447)

(assert (=> bm!8013 (= call!8021 (+!107 (ite c!13762 call!8016 (ite c!13765 call!8018 call!8017)) (ite (or c!13762 c!13765) (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun b!84997 () Bool)

(declare-fun e!55417 () Bool)

(assert (=> b!84997 (= e!55417 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84998 () Bool)

(declare-fun res!43840 () Bool)

(assert (=> b!84998 (=> (not res!43840) (not e!55420))))

(declare-fun e!55416 () Bool)

(assert (=> b!84998 (= res!43840 e!55416)))

(declare-fun res!43841 () Bool)

(assert (=> b!84998 (=> res!43841 e!55416)))

(assert (=> b!84998 (= res!43841 (not e!55417))))

(declare-fun res!43833 () Bool)

(assert (=> b!84998 (=> (not res!43833) (not e!55417))))

(assert (=> b!84998 (= res!43833 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!84999 () Bool)

(declare-fun call!8019 () Bool)

(assert (=> b!84999 (= e!55424 (not call!8019))))

(declare-fun b!85000 () Bool)

(declare-fun e!55425 () Bool)

(assert (=> b!85000 (= e!55426 e!55425)))

(declare-fun res!43834 () Bool)

(assert (=> b!85000 (= res!43834 call!8020)))

(assert (=> b!85000 (=> (not res!43834) (not e!55425))))

(declare-fun bm!8014 () Bool)

(assert (=> bm!8014 (= call!8019 (contains!749 lt!40076 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85001 () Bool)

(declare-fun res!43836 () Bool)

(assert (=> b!85001 (=> (not res!43836) (not e!55420))))

(assert (=> b!85001 (= res!43836 e!55426)))

(declare-fun c!13764 () Bool)

(assert (=> b!85001 (= c!13764 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!22017 () Bool)

(assert (=> d!22017 e!55420))

(declare-fun res!43839 () Bool)

(assert (=> d!22017 (=> (not res!43839) (not e!55420))))

(assert (=> d!22017 (= res!43839 (or (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))))

(declare-fun lt!40089 () ListLongMap!1447)

(assert (=> d!22017 (= lt!40076 lt!40089)))

(declare-fun lt!40086 () Unit!2426)

(declare-fun e!55421 () Unit!2426)

(assert (=> d!22017 (= lt!40086 e!55421)))

(declare-fun c!13763 () Bool)

(declare-fun e!55418 () Bool)

(assert (=> d!22017 (= c!13763 e!55418)))

(declare-fun res!43837 () Bool)

(assert (=> d!22017 (=> (not res!43837) (not e!55418))))

(assert (=> d!22017 (= res!43837 (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun e!55427 () ListLongMap!1447)

(assert (=> d!22017 (= lt!40089 e!55427)))

(assert (=> d!22017 (= c!13762 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22017 (validMask!0 (mask!6333 newMap!16))))

(assert (=> d!22017 (= (getCurrentListMap!425 (_keys!3983 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!40076)))

(declare-fun b!85002 () Bool)

(assert (=> b!85002 (= e!55425 (= (apply!81 lt!40076 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 newMap!16)))))

(declare-fun b!85003 () Bool)

(declare-fun e!55423 () Bool)

(assert (=> b!85003 (= e!55424 e!55423)))

(declare-fun res!43835 () Bool)

(assert (=> b!85003 (= res!43835 call!8019)))

(assert (=> b!85003 (=> (not res!43835) (not e!55423))))

(declare-fun b!85004 () Bool)

(assert (=> b!85004 (= e!55418 (validKeyInArray!0 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85005 () Bool)

(assert (=> b!85005 (= e!55427 e!55422)))

(assert (=> b!85005 (= c!13765 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!8015 () Bool)

(assert (=> bm!8015 (= call!8018 call!8016)))

(declare-fun b!85006 () Bool)

(declare-fun lt!40088 () Unit!2426)

(assert (=> b!85006 (= e!55421 lt!40088)))

(declare-fun lt!40094 () ListLongMap!1447)

(assert (=> b!85006 (= lt!40094 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!40091 () (_ BitVec 64))

(assert (=> b!85006 (= lt!40091 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40092 () (_ BitVec 64))

(assert (=> b!85006 (= lt!40092 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40074 () Unit!2426)

(assert (=> b!85006 (= lt!40074 (addStillContains!57 lt!40094 lt!40091 (zeroValue!2210 newMap!16) lt!40092))))

(assert (=> b!85006 (contains!749 (+!107 lt!40094 (tuple2!2201 lt!40091 (zeroValue!2210 newMap!16))) lt!40092)))

(declare-fun lt!40093 () Unit!2426)

(assert (=> b!85006 (= lt!40093 lt!40074)))

(declare-fun lt!40083 () ListLongMap!1447)

(assert (=> b!85006 (= lt!40083 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!40080 () (_ BitVec 64))

(assert (=> b!85006 (= lt!40080 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40087 () (_ BitVec 64))

(assert (=> b!85006 (= lt!40087 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40078 () Unit!2426)

(assert (=> b!85006 (= lt!40078 (addApplyDifferent!57 lt!40083 lt!40080 (minValue!2210 newMap!16) lt!40087))))

(assert (=> b!85006 (= (apply!81 (+!107 lt!40083 (tuple2!2201 lt!40080 (minValue!2210 newMap!16))) lt!40087) (apply!81 lt!40083 lt!40087))))

(declare-fun lt!40073 () Unit!2426)

(assert (=> b!85006 (= lt!40073 lt!40078)))

(declare-fun lt!40077 () ListLongMap!1447)

(assert (=> b!85006 (= lt!40077 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!40079 () (_ BitVec 64))

(assert (=> b!85006 (= lt!40079 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40082 () (_ BitVec 64))

(assert (=> b!85006 (= lt!40082 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40084 () Unit!2426)

(assert (=> b!85006 (= lt!40084 (addApplyDifferent!57 lt!40077 lt!40079 (zeroValue!2210 newMap!16) lt!40082))))

(assert (=> b!85006 (= (apply!81 (+!107 lt!40077 (tuple2!2201 lt!40079 (zeroValue!2210 newMap!16))) lt!40082) (apply!81 lt!40077 lt!40082))))

(declare-fun lt!40085 () Unit!2426)

(assert (=> b!85006 (= lt!40085 lt!40084)))

(declare-fun lt!40081 () ListLongMap!1447)

(assert (=> b!85006 (= lt!40081 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!40090 () (_ BitVec 64))

(assert (=> b!85006 (= lt!40090 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40075 () (_ BitVec 64))

(assert (=> b!85006 (= lt!40075 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85006 (= lt!40088 (addApplyDifferent!57 lt!40081 lt!40090 (minValue!2210 newMap!16) lt!40075))))

(assert (=> b!85006 (= (apply!81 (+!107 lt!40081 (tuple2!2201 lt!40090 (minValue!2210 newMap!16))) lt!40075) (apply!81 lt!40081 lt!40075))))

(declare-fun bm!8016 () Bool)

(assert (=> bm!8016 (= call!8017 call!8018)))

(declare-fun b!85007 () Bool)

(declare-fun Unit!2508 () Unit!2426)

(assert (=> b!85007 (= e!55421 Unit!2508)))

(declare-fun b!85008 () Bool)

(assert (=> b!85008 (= e!55416 e!55415)))

(declare-fun res!43838 () Bool)

(assert (=> b!85008 (=> (not res!43838) (not e!55415))))

(assert (=> b!85008 (= res!43838 (contains!749 lt!40076 (select (arr!1900 (_keys!3983 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!85008 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2144 (_keys!3983 newMap!16))))))

(declare-fun b!85009 () Bool)

(declare-fun e!55419 () ListLongMap!1447)

(assert (=> b!85009 (= e!55419 call!8022)))

(declare-fun b!85010 () Bool)

(assert (=> b!85010 (= e!55423 (= (apply!81 lt!40076 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 newMap!16)))))

(declare-fun bm!8017 () Bool)

(assert (=> bm!8017 (= call!8022 call!8021)))

(declare-fun bm!8018 () Bool)

(assert (=> bm!8018 (= call!8020 (contains!749 lt!40076 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85011 () Bool)

(assert (=> b!85011 (= e!55419 call!8017)))

(declare-fun b!85012 () Bool)

(declare-fun c!13766 () Bool)

(assert (=> b!85012 (= c!13766 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!85012 (= e!55422 e!55419)))

(declare-fun b!85013 () Bool)

(assert (=> b!85013 (= e!55427 (+!107 call!8021 (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(declare-fun bm!8019 () Bool)

(assert (=> bm!8019 (= call!8016 (getCurrentListMapNoExtraKeys!71 (_keys!3983 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (= (and d!22017 c!13762) b!85013))

(assert (= (and d!22017 (not c!13762)) b!85005))

(assert (= (and b!85005 c!13765) b!84996))

(assert (= (and b!85005 (not c!13765)) b!85012))

(assert (= (and b!85012 c!13766) b!85009))

(assert (= (and b!85012 (not c!13766)) b!85011))

(assert (= (or b!85009 b!85011) bm!8016))

(assert (= (or b!84996 bm!8016) bm!8015))

(assert (= (or b!84996 b!85009) bm!8017))

(assert (= (or b!85013 bm!8015) bm!8019))

(assert (= (or b!85013 bm!8017) bm!8013))

(assert (= (and d!22017 res!43837) b!85004))

(assert (= (and d!22017 c!13763) b!85006))

(assert (= (and d!22017 (not c!13763)) b!85007))

(assert (= (and d!22017 res!43839) b!84998))

(assert (= (and b!84998 res!43833) b!84997))

(assert (= (and b!84998 (not res!43841)) b!85008))

(assert (= (and b!85008 res!43838) b!84995))

(assert (= (and b!84998 res!43840) b!85001))

(assert (= (and b!85001 c!13764) b!85000))

(assert (= (and b!85001 (not c!13764)) b!84993))

(assert (= (and b!85000 res!43834) b!85002))

(assert (= (or b!85000 b!84993) bm!8018))

(assert (= (and b!85001 res!43836) b!84994))

(assert (= (and b!84994 c!13767) b!85003))

(assert (= (and b!84994 (not c!13767)) b!84999))

(assert (= (and b!85003 res!43835) b!85010))

(assert (= (or b!85003 b!84999) bm!8014))

(declare-fun b_lambda!3751 () Bool)

(assert (=> (not b_lambda!3751) (not b!84995)))

(assert (=> b!84995 t!5225))

(declare-fun b_and!5141 () Bool)

(assert (= b_and!5137 (and (=> t!5225 result!2895) b_and!5141)))

(assert (=> b!84995 t!5227))

(declare-fun b_and!5143 () Bool)

(assert (= b_and!5139 (and (=> t!5227 result!2897) b_and!5143)))

(declare-fun m!89289 () Bool)

(assert (=> b!85010 m!89289))

(declare-fun m!89291 () Bool)

(assert (=> bm!8014 m!89291))

(assert (=> b!85008 m!86045))

(assert (=> b!85008 m!86045))

(declare-fun m!89293 () Bool)

(assert (=> b!85008 m!89293))

(declare-fun m!89295 () Bool)

(assert (=> bm!8019 m!89295))

(declare-fun m!89297 () Bool)

(assert (=> bm!8013 m!89297))

(declare-fun m!89299 () Bool)

(assert (=> bm!8018 m!89299))

(assert (=> b!85006 m!86045))

(assert (=> b!85006 m!89295))

(declare-fun m!89301 () Bool)

(assert (=> b!85006 m!89301))

(declare-fun m!89303 () Bool)

(assert (=> b!85006 m!89303))

(declare-fun m!89305 () Bool)

(assert (=> b!85006 m!89305))

(declare-fun m!89307 () Bool)

(assert (=> b!85006 m!89307))

(declare-fun m!89309 () Bool)

(assert (=> b!85006 m!89309))

(declare-fun m!89311 () Bool)

(assert (=> b!85006 m!89311))

(declare-fun m!89313 () Bool)

(assert (=> b!85006 m!89313))

(declare-fun m!89315 () Bool)

(assert (=> b!85006 m!89315))

(declare-fun m!89317 () Bool)

(assert (=> b!85006 m!89317))

(assert (=> b!85006 m!89307))

(assert (=> b!85006 m!89311))

(declare-fun m!89319 () Bool)

(assert (=> b!85006 m!89319))

(declare-fun m!89321 () Bool)

(assert (=> b!85006 m!89321))

(assert (=> b!85006 m!89321))

(declare-fun m!89323 () Bool)

(assert (=> b!85006 m!89323))

(declare-fun m!89325 () Bool)

(assert (=> b!85006 m!89325))

(assert (=> b!85006 m!89305))

(declare-fun m!89327 () Bool)

(assert (=> b!85006 m!89327))

(declare-fun m!89329 () Bool)

(assert (=> b!85006 m!89329))

(assert (=> b!84995 m!86045))

(assert (=> b!84995 m!86141))

(assert (=> b!84995 m!86045))

(declare-fun m!89331 () Bool)

(assert (=> b!84995 m!89331))

(declare-fun m!89333 () Bool)

(assert (=> b!84995 m!89333))

(assert (=> b!84995 m!89333))

(assert (=> b!84995 m!86141))

(declare-fun m!89335 () Bool)

(assert (=> b!84995 m!89335))

(assert (=> b!84997 m!86045))

(assert (=> b!84997 m!86045))

(assert (=> b!84997 m!86051))

(declare-fun m!89337 () Bool)

(assert (=> b!85013 m!89337))

(declare-fun m!89339 () Bool)

(assert (=> b!85002 m!89339))

(assert (=> b!85004 m!86045))

(assert (=> b!85004 m!86045))

(assert (=> b!85004 m!86051))

(assert (=> d!22017 m!86067))

(assert (=> b!83600 d!22017))

(assert (=> b!83297 d!21875))

(assert (=> b!83297 d!20897))

(declare-fun b!85014 () Bool)

(declare-fun e!55432 () List!1523)

(declare-fun call!8023 () List!1523)

(assert (=> b!85014 (= e!55432 call!8023)))

(declare-fun b!85015 () Bool)

(declare-fun e!55430 () Bool)

(declare-fun lt!40095 () List!1523)

(assert (=> b!85015 (= e!55430 (contains!751 lt!40095 (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742))))))

(declare-fun c!13768 () Bool)

(declare-fun b!85016 () Bool)

(declare-fun e!55429 () List!1523)

(declare-fun c!13770 () Bool)

(assert (=> b!85016 (= e!55429 (ite c!13770 (t!5214 (t!5214 (toList!739 lt!38730))) (ite c!13768 (Cons!1519 (h!2109 (t!5214 (toList!739 lt!38730))) (t!5214 (t!5214 (toList!739 lt!38730)))) Nil!1520)))))

(declare-fun d!22019 () Bool)

(assert (=> d!22019 e!55430))

(declare-fun res!43843 () Bool)

(assert (=> d!22019 (=> (not res!43843) (not e!55430))))

(assert (=> d!22019 (= res!43843 (isStrictlySorted!292 lt!40095))))

(declare-fun e!55431 () List!1523)

(assert (=> d!22019 (= lt!40095 e!55431)))

(declare-fun c!13769 () Bool)

(assert (=> d!22019 (= c!13769 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38730))) (bvslt (_1!1111 (h!2109 (t!5214 (toList!739 lt!38730)))) (_1!1111 lt!38742))))))

(assert (=> d!22019 (isStrictlySorted!292 (t!5214 (toList!739 lt!38730)))))

(assert (=> d!22019 (= (insertStrictlySorted!60 (t!5214 (toList!739 lt!38730)) (_1!1111 lt!38742) (_2!1111 lt!38742)) lt!40095)))

(declare-fun b!85017 () Bool)

(assert (=> b!85017 (= e!55429 (insertStrictlySorted!60 (t!5214 (t!5214 (toList!739 lt!38730))) (_1!1111 lt!38742) (_2!1111 lt!38742)))))

(declare-fun bm!8020 () Bool)

(declare-fun call!8025 () List!1523)

(assert (=> bm!8020 (= call!8023 call!8025)))

(declare-fun b!85018 () Bool)

(declare-fun e!55428 () List!1523)

(declare-fun call!8024 () List!1523)

(assert (=> b!85018 (= e!55428 call!8024)))

(declare-fun b!85019 () Bool)

(assert (=> b!85019 (= e!55431 e!55432)))

(assert (=> b!85019 (= c!13770 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38730))) (= (_1!1111 (h!2109 (t!5214 (toList!739 lt!38730)))) (_1!1111 lt!38742))))))

(declare-fun b!85020 () Bool)

(declare-fun res!43842 () Bool)

(assert (=> b!85020 (=> (not res!43842) (not e!55430))))

(assert (=> b!85020 (= res!43842 (containsKey!141 lt!40095 (_1!1111 lt!38742)))))

(declare-fun bm!8021 () Bool)

(assert (=> bm!8021 (= call!8024 call!8023)))

(declare-fun b!85021 () Bool)

(assert (=> b!85021 (= e!55431 call!8025)))

(declare-fun b!85022 () Bool)

(assert (=> b!85022 (= e!55428 call!8024)))

(declare-fun b!85023 () Bool)

(assert (=> b!85023 (= c!13768 (and ((_ is Cons!1519) (t!5214 (toList!739 lt!38730))) (bvsgt (_1!1111 (h!2109 (t!5214 (toList!739 lt!38730)))) (_1!1111 lt!38742))))))

(assert (=> b!85023 (= e!55432 e!55428)))

(declare-fun bm!8022 () Bool)

(assert (=> bm!8022 (= call!8025 ($colon$colon!70 e!55429 (ite c!13769 (h!2109 (t!5214 (toList!739 lt!38730))) (tuple2!2201 (_1!1111 lt!38742) (_2!1111 lt!38742)))))))

(declare-fun c!13771 () Bool)

(assert (=> bm!8022 (= c!13771 c!13769)))

(assert (= (and d!22019 c!13769) b!85021))

(assert (= (and d!22019 (not c!13769)) b!85019))

(assert (= (and b!85019 c!13770) b!85014))

(assert (= (and b!85019 (not c!13770)) b!85023))

(assert (= (and b!85023 c!13768) b!85018))

(assert (= (and b!85023 (not c!13768)) b!85022))

(assert (= (or b!85018 b!85022) bm!8021))

(assert (= (or b!85014 bm!8021) bm!8020))

(assert (= (or b!85021 bm!8020) bm!8022))

(assert (= (and bm!8022 c!13771) b!85017))

(assert (= (and bm!8022 (not c!13771)) b!85016))

(assert (= (and d!22019 res!43843) b!85020))

(assert (= (and b!85020 res!43842) b!85015))

(declare-fun m!89341 () Bool)

(assert (=> bm!8022 m!89341))

(declare-fun m!89343 () Bool)

(assert (=> b!85017 m!89343))

(declare-fun m!89345 () Bool)

(assert (=> d!22019 m!89345))

(assert (=> d!22019 m!88795))

(declare-fun m!89347 () Bool)

(assert (=> b!85020 m!89347))

(declare-fun m!89349 () Bool)

(assert (=> b!85015 m!89349))

(assert (=> b!83688 d!22019))

(declare-fun d!22021 () Bool)

(declare-fun res!43844 () Bool)

(declare-fun e!55433 () Bool)

(assert (=> d!22021 (=> res!43844 e!55433)))

(assert (=> d!22021 (= res!43844 (and ((_ is Cons!1519) lt!39076) (= (_1!1111 (h!2109 lt!39076)) (_1!1111 lt!38742))))))

(assert (=> d!22021 (= (containsKey!141 lt!39076 (_1!1111 lt!38742)) e!55433)))

(declare-fun b!85024 () Bool)

(declare-fun e!55434 () Bool)

(assert (=> b!85024 (= e!55433 e!55434)))

(declare-fun res!43845 () Bool)

(assert (=> b!85024 (=> (not res!43845) (not e!55434))))

(assert (=> b!85024 (= res!43845 (and (or (not ((_ is Cons!1519) lt!39076)) (bvsle (_1!1111 (h!2109 lt!39076)) (_1!1111 lt!38742))) ((_ is Cons!1519) lt!39076) (bvslt (_1!1111 (h!2109 lt!39076)) (_1!1111 lt!38742))))))

(declare-fun b!85025 () Bool)

(assert (=> b!85025 (= e!55434 (containsKey!141 (t!5214 lt!39076) (_1!1111 lt!38742)))))

(assert (= (and d!22021 (not res!43844)) b!85024))

(assert (= (and b!85024 res!43845) b!85025))

(declare-fun m!89351 () Bool)

(assert (=> b!85025 m!89351))

(assert (=> b!83306 d!22021))

(declare-fun d!22023 () Bool)

(declare-fun e!55436 () Bool)

(assert (=> d!22023 e!55436))

(declare-fun res!43846 () Bool)

(assert (=> d!22023 (=> res!43846 e!55436)))

(declare-fun lt!40097 () Bool)

(assert (=> d!22023 (= res!43846 (not lt!40097))))

(declare-fun lt!40099 () Bool)

(assert (=> d!22023 (= lt!40097 lt!40099)))

(declare-fun lt!40098 () Unit!2426)

(declare-fun e!55435 () Unit!2426)

(assert (=> d!22023 (= lt!40098 e!55435)))

(declare-fun c!13772 () Bool)

(assert (=> d!22023 (= c!13772 lt!40099)))

(assert (=> d!22023 (= lt!40099 (containsKey!141 (toList!739 lt!39280) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> d!22023 (= (contains!749 lt!39280 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!40097)))

(declare-fun b!85026 () Bool)

(declare-fun lt!40096 () Unit!2426)

(assert (=> b!85026 (= e!55435 lt!40096)))

(assert (=> b!85026 (= lt!40096 (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!39280) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(assert (=> b!85026 (isDefined!91 (getValueByKey!137 (toList!739 lt!39280) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun b!85027 () Bool)

(declare-fun Unit!2509 () Unit!2426)

(assert (=> b!85027 (= e!55435 Unit!2509)))

(declare-fun b!85028 () Bool)

(assert (=> b!85028 (= e!55436 (isDefined!91 (getValueByKey!137 (toList!739 lt!39280) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (= (and d!22023 c!13772) b!85026))

(assert (= (and d!22023 (not c!13772)) b!85027))

(assert (= (and d!22023 (not res!43846)) b!85028))

(declare-fun m!89353 () Bool)

(assert (=> d!22023 m!89353))

(declare-fun m!89355 () Bool)

(assert (=> b!85026 m!89355))

(assert (=> b!85026 m!86601))

(assert (=> b!85026 m!86601))

(declare-fun m!89357 () Bool)

(assert (=> b!85026 m!89357))

(assert (=> b!85028 m!86601))

(assert (=> b!85028 m!86601))

(assert (=> b!85028 m!89357))

(assert (=> d!21043 d!22023))

(declare-fun b!85031 () Bool)

(declare-fun e!55438 () Option!143)

(assert (=> b!85031 (= e!55438 (getValueByKey!137 (t!5214 lt!39279) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun c!13773 () Bool)

(declare-fun d!22025 () Bool)

(assert (=> d!22025 (= c!13773 (and ((_ is Cons!1519) lt!39279) (= (_1!1111 (h!2109 lt!39279)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun e!55437 () Option!143)

(assert (=> d!22025 (= (getValueByKey!137 lt!39279 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) e!55437)))

(declare-fun b!85029 () Bool)

(assert (=> b!85029 (= e!55437 (Some!142 (_2!1111 (h!2109 lt!39279))))))

(declare-fun b!85032 () Bool)

(assert (=> b!85032 (= e!55438 None!141)))

(declare-fun b!85030 () Bool)

(assert (=> b!85030 (= e!55437 e!55438)))

(declare-fun c!13774 () Bool)

(assert (=> b!85030 (= c!13774 (and ((_ is Cons!1519) lt!39279) (not (= (_1!1111 (h!2109 lt!39279)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(assert (= (and d!22025 c!13773) b!85029))

(assert (= (and d!22025 (not c!13773)) b!85030))

(assert (= (and b!85030 c!13774) b!85031))

(assert (= (and b!85030 (not c!13774)) b!85032))

(declare-fun m!89359 () Bool)

(assert (=> b!85031 m!89359))

(assert (=> d!21043 d!22025))

(declare-fun d!22027 () Bool)

(assert (=> d!22027 (= (getValueByKey!137 lt!39279 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) (Some!142 (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun lt!40100 () Unit!2426)

(assert (=> d!22027 (= lt!40100 (choose!497 lt!39279 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun e!55439 () Bool)

(assert (=> d!22027 e!55439))

(declare-fun res!43847 () Bool)

(assert (=> d!22027 (=> (not res!43847) (not e!55439))))

(assert (=> d!22027 (= res!43847 (isStrictlySorted!292 lt!39279))))

(assert (=> d!22027 (= (lemmaContainsTupThenGetReturnValue!57 lt!39279 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!40100)))

(declare-fun b!85033 () Bool)

(declare-fun res!43848 () Bool)

(assert (=> b!85033 (=> (not res!43848) (not e!55439))))

(assert (=> b!85033 (= res!43848 (containsKey!141 lt!39279 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun b!85034 () Bool)

(assert (=> b!85034 (= e!55439 (contains!751 lt!39279 (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (= (and d!22027 res!43847) b!85033))

(assert (= (and b!85033 res!43848) b!85034))

(assert (=> d!22027 m!86595))

(declare-fun m!89361 () Bool)

(assert (=> d!22027 m!89361))

(declare-fun m!89363 () Bool)

(assert (=> d!22027 m!89363))

(declare-fun m!89365 () Bool)

(assert (=> b!85033 m!89365))

(declare-fun m!89367 () Bool)

(assert (=> b!85034 m!89367))

(assert (=> d!21043 d!22027))

(declare-fun b!85035 () Bool)

(declare-fun e!55444 () List!1523)

(declare-fun call!8026 () List!1523)

(assert (=> b!85035 (= e!55444 call!8026)))

(declare-fun b!85036 () Bool)

(declare-fun e!55442 () Bool)

(declare-fun lt!40101 () List!1523)

(assert (=> b!85036 (= e!55442 (contains!751 lt!40101 (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun c!13777 () Bool)

(declare-fun c!13775 () Bool)

(declare-fun b!85037 () Bool)

(declare-fun e!55441 () List!1523)

(assert (=> b!85037 (= e!55441 (ite c!13777 (t!5214 (toList!739 lt!38741)) (ite c!13775 (Cons!1519 (h!2109 (toList!739 lt!38741)) (t!5214 (toList!739 lt!38741))) Nil!1520)))))

(declare-fun d!22029 () Bool)

(assert (=> d!22029 e!55442))

(declare-fun res!43850 () Bool)

(assert (=> d!22029 (=> (not res!43850) (not e!55442))))

(assert (=> d!22029 (= res!43850 (isStrictlySorted!292 lt!40101))))

(declare-fun e!55443 () List!1523)

(assert (=> d!22029 (= lt!40101 e!55443)))

(declare-fun c!13776 () Bool)

(assert (=> d!22029 (= c!13776 (and ((_ is Cons!1519) (toList!739 lt!38741)) (bvslt (_1!1111 (h!2109 (toList!739 lt!38741))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (=> d!22029 (isStrictlySorted!292 (toList!739 lt!38741))))

(assert (=> d!22029 (= (insertStrictlySorted!60 (toList!739 lt!38741) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))) lt!40101)))

(declare-fun b!85038 () Bool)

(assert (=> b!85038 (= e!55441 (insertStrictlySorted!60 (t!5214 (toList!739 lt!38741)) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun bm!8023 () Bool)

(declare-fun call!8028 () List!1523)

(assert (=> bm!8023 (= call!8026 call!8028)))

(declare-fun b!85039 () Bool)

(declare-fun e!55440 () List!1523)

(declare-fun call!8027 () List!1523)

(assert (=> b!85039 (= e!55440 call!8027)))

(declare-fun b!85040 () Bool)

(assert (=> b!85040 (= e!55443 e!55444)))

(assert (=> b!85040 (= c!13777 (and ((_ is Cons!1519) (toList!739 lt!38741)) (= (_1!1111 (h!2109 (toList!739 lt!38741))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun b!85041 () Bool)

(declare-fun res!43849 () Bool)

(assert (=> b!85041 (=> (not res!43849) (not e!55442))))

(assert (=> b!85041 (= res!43849 (containsKey!141 lt!40101 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))

(declare-fun bm!8024 () Bool)

(assert (=> bm!8024 (= call!8027 call!8026)))

(declare-fun b!85042 () Bool)

(assert (=> b!85042 (= e!55443 call!8028)))

(declare-fun b!85043 () Bool)

(assert (=> b!85043 (= e!55440 call!8027)))

(declare-fun b!85044 () Bool)

(assert (=> b!85044 (= c!13775 (and ((_ is Cons!1519) (toList!739 lt!38741)) (bvsgt (_1!1111 (h!2109 (toList!739 lt!38741))) (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(assert (=> b!85044 (= e!55444 e!55440)))

(declare-fun bm!8025 () Bool)

(assert (=> bm!8025 (= call!8028 ($colon$colon!70 e!55441 (ite c!13776 (h!2109 (toList!739 lt!38741)) (tuple2!2201 (_1!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (_2!1111 (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(declare-fun c!13778 () Bool)

(assert (=> bm!8025 (= c!13778 c!13776)))

(assert (= (and d!22029 c!13776) b!85042))

(assert (= (and d!22029 (not c!13776)) b!85040))

(assert (= (and b!85040 c!13777) b!85035))

(assert (= (and b!85040 (not c!13777)) b!85044))

(assert (= (and b!85044 c!13775) b!85039))

(assert (= (and b!85044 (not c!13775)) b!85043))

(assert (= (or b!85039 b!85043) bm!8024))

(assert (= (or b!85035 bm!8024) bm!8023))

(assert (= (or b!85042 bm!8023) bm!8025))

(assert (= (and bm!8025 c!13778) b!85038))

(assert (= (and bm!8025 (not c!13778)) b!85037))

(assert (= (and d!22029 res!43850) b!85041))

(assert (= (and b!85041 res!43849) b!85036))

(declare-fun m!89369 () Bool)

(assert (=> bm!8025 m!89369))

(declare-fun m!89371 () Bool)

(assert (=> b!85038 m!89371))

(declare-fun m!89373 () Bool)

(assert (=> d!22029 m!89373))

(assert (=> d!22029 m!86675))

(declare-fun m!89375 () Bool)

(assert (=> b!85041 m!89375))

(declare-fun m!89377 () Bool)

(assert (=> b!85036 m!89377))

(assert (=> d!21043 d!22029))

(assert (=> b!83576 d!21825))

(assert (=> b!83576 d!21827))

(assert (=> d!21059 d!21057))

(declare-fun d!22031 () Bool)

(assert (=> d!22031 (= (getValueByKey!137 lt!39071 (_1!1111 lt!38738)) (Some!142 (_2!1111 lt!38738)))))

(assert (=> d!22031 true))

(declare-fun _$22!414 () Unit!2426)

(assert (=> d!22031 (= (choose!497 lt!39071 (_1!1111 lt!38738) (_2!1111 lt!38738)) _$22!414)))

(declare-fun bs!3599 () Bool)

(assert (= bs!3599 d!22031))

(assert (=> bs!3599 m!85989))

(assert (=> d!21059 d!22031))

(declare-fun d!22033 () Bool)

(declare-fun res!43851 () Bool)

(declare-fun e!55445 () Bool)

(assert (=> d!22033 (=> res!43851 e!55445)))

(assert (=> d!22033 (= res!43851 (or ((_ is Nil!1520) lt!39071) ((_ is Nil!1520) (t!5214 lt!39071))))))

(assert (=> d!22033 (= (isStrictlySorted!292 lt!39071) e!55445)))

(declare-fun b!85045 () Bool)

(declare-fun e!55446 () Bool)

(assert (=> b!85045 (= e!55445 e!55446)))

(declare-fun res!43852 () Bool)

(assert (=> b!85045 (=> (not res!43852) (not e!55446))))

(assert (=> b!85045 (= res!43852 (bvslt (_1!1111 (h!2109 lt!39071)) (_1!1111 (h!2109 (t!5214 lt!39071)))))))

(declare-fun b!85046 () Bool)

(assert (=> b!85046 (= e!55446 (isStrictlySorted!292 (t!5214 lt!39071)))))

(assert (= (and d!22033 (not res!43851)) b!85045))

(assert (= (and b!85045 res!43852) b!85046))

(declare-fun m!89379 () Bool)

(assert (=> b!85046 m!89379))

(assert (=> d!21059 d!22033))

(assert (=> d!21073 d!21071))

(declare-fun d!22035 () Bool)

(assert (=> d!22035 (= (getValueByKey!137 lt!39067 (_1!1111 lt!38729)) (Some!142 (_2!1111 lt!38729)))))

(assert (=> d!22035 true))

(declare-fun _$22!415 () Unit!2426)

(assert (=> d!22035 (= (choose!497 lt!39067 (_1!1111 lt!38729) (_2!1111 lt!38729)) _$22!415)))

(declare-fun bs!3600 () Bool)

(assert (= bs!3600 d!22035))

(assert (=> bs!3600 m!85977))

(assert (=> d!21073 d!22035))

(declare-fun d!22037 () Bool)

(declare-fun res!43853 () Bool)

(declare-fun e!55447 () Bool)

(assert (=> d!22037 (=> res!43853 e!55447)))

(assert (=> d!22037 (= res!43853 (or ((_ is Nil!1520) lt!39067) ((_ is Nil!1520) (t!5214 lt!39067))))))

(assert (=> d!22037 (= (isStrictlySorted!292 lt!39067) e!55447)))

(declare-fun b!85047 () Bool)

(declare-fun e!55448 () Bool)

(assert (=> b!85047 (= e!55447 e!55448)))

(declare-fun res!43854 () Bool)

(assert (=> b!85047 (=> (not res!43854) (not e!55448))))

(assert (=> b!85047 (= res!43854 (bvslt (_1!1111 (h!2109 lt!39067)) (_1!1111 (h!2109 (t!5214 lt!39067)))))))

(declare-fun b!85048 () Bool)

(assert (=> b!85048 (= e!55448 (isStrictlySorted!292 (t!5214 lt!39067)))))

(assert (= (and d!22037 (not res!43853)) b!85047))

(assert (= (and b!85047 res!43854) b!85048))

(declare-fun m!89381 () Bool)

(assert (=> b!85048 m!89381))

(assert (=> d!21073 d!22037))

(declare-fun d!22039 () Bool)

(assert (=> d!22039 (isDefined!91 (getValueByKey!137 (toList!739 call!7797) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun lt!40102 () Unit!2426)

(assert (=> d!22039 (= lt!40102 (choose!500 (toList!739 call!7797) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(declare-fun e!55449 () Bool)

(assert (=> d!22039 e!55449))

(declare-fun res!43855 () Bool)

(assert (=> d!22039 (=> (not res!43855) (not e!55449))))

(assert (=> d!22039 (= res!43855 (isStrictlySorted!292 (toList!739 call!7797)))))

(assert (=> d!22039 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 call!7797) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)) lt!40102)))

(declare-fun b!85049 () Bool)

(assert (=> b!85049 (= e!55449 (containsKey!141 (toList!739 call!7797) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))

(assert (= (and d!22039 res!43855) b!85049))

(assert (=> d!22039 m!85563))

(assert (=> d!22039 m!86645))

(assert (=> d!22039 m!86645))

(assert (=> d!22039 m!86647))

(assert (=> d!22039 m!85563))

(declare-fun m!89383 () Bool)

(assert (=> d!22039 m!89383))

(declare-fun m!89385 () Bool)

(assert (=> d!22039 m!89385))

(assert (=> b!85049 m!85563))

(assert (=> b!85049 m!86641))

(assert (=> b!83468 d!22039))

(assert (=> b!83468 d!21335))

(assert (=> b!83468 d!21337))

(assert (=> b!83603 d!21637))

(assert (=> b!83603 d!21639))

(declare-fun d!22041 () Bool)

(assert (=> d!22041 (= (+!107 (getCurrentListMap!425 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)) (getCurrentListMap!425 (_keys!3983 newMap!16) (array!3994 (store (arr!1901 (_values!2299 newMap!16)) (index!3117 lt!38998) (ValueCellFull!920 lt!38725)) (size!2145 (_values!2299 newMap!16))) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (=> d!22041 true))

(declare-fun _$5!89 () Unit!2426)

(assert (=> d!22041 (= (choose!502 (_keys!3983 newMap!16) (_values!2299 newMap!16) (mask!6333 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3117 lt!38998) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725 (defaultEntry!2316 newMap!16)) _$5!89)))

(declare-fun bs!3601 () Bool)

(assert (= bs!3601 d!22041))

(assert (=> bs!3601 m!85779))

(assert (=> bs!3601 m!85779))

(assert (=> bs!3601 m!86759))

(assert (=> bs!3601 m!85881))

(assert (=> bs!3601 m!86819))

(assert (=> d!21099 d!22041))

(assert (=> d!21099 d!21305))

(declare-fun e!55451 () Option!143)

(declare-fun b!85052 () Bool)

(assert (=> b!85052 (= e!55451 (getValueByKey!137 (t!5214 (toList!739 lt!39276)) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))

(declare-fun d!22043 () Bool)

(declare-fun c!13779 () Bool)

(assert (=> d!22043 (= c!13779 (and ((_ is Cons!1519) (toList!739 lt!39276)) (= (_1!1111 (h!2109 (toList!739 lt!39276))) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725))))))))

(declare-fun e!55450 () Option!143)

(assert (=> d!22043 (= (getValueByKey!137 (toList!739 lt!39276) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))) e!55450)))

(declare-fun b!85050 () Bool)

(assert (=> b!85050 (= e!55450 (Some!142 (_2!1111 (h!2109 (toList!739 lt!39276)))))))

(declare-fun b!85053 () Bool)

(assert (=> b!85053 (= e!55451 None!141)))

(declare-fun b!85051 () Bool)

(assert (=> b!85051 (= e!55450 e!55451)))

(declare-fun c!13780 () Bool)

(assert (=> b!85051 (= c!13780 (and ((_ is Cons!1519) (toList!739 lt!39276)) (not (= (_1!1111 (h!2109 (toList!739 lt!39276))) (_1!1111 (ite c!13210 (ite c!13217 (tuple2!2201 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38725) (tuple2!2201 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38725)) (tuple2!2201 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355) lt!38725)))))))))

(assert (= (and d!22043 c!13779) b!85050))

(assert (= (and d!22043 (not c!13779)) b!85051))

(assert (= (and b!85051 c!13780) b!85052))

(assert (= (and b!85051 (not c!13780)) b!85053))

(declare-fun m!89387 () Bool)

(assert (=> b!85052 m!89387))

(assert (=> b!83458 d!22043))

(declare-fun d!22045 () Bool)

(declare-fun res!43856 () Bool)

(declare-fun e!55452 () Bool)

(assert (=> d!22045 (=> res!43856 e!55452)))

(assert (=> d!22045 (= res!43856 (or ((_ is Nil!1520) lt!39222) ((_ is Nil!1520) (t!5214 lt!39222))))))

(assert (=> d!22045 (= (isStrictlySorted!292 lt!39222) e!55452)))

(declare-fun b!85054 () Bool)

(declare-fun e!55453 () Bool)

(assert (=> b!85054 (= e!55452 e!55453)))

(declare-fun res!43857 () Bool)

(assert (=> b!85054 (=> (not res!43857) (not e!55453))))

(assert (=> b!85054 (= res!43857 (bvslt (_1!1111 (h!2109 lt!39222)) (_1!1111 (h!2109 (t!5214 lt!39222)))))))

(declare-fun b!85055 () Bool)

(assert (=> b!85055 (= e!55453 (isStrictlySorted!292 (t!5214 lt!39222)))))

(assert (= (and d!22045 (not res!43856)) b!85054))

(assert (= (and b!85054 res!43857) b!85055))

(declare-fun m!89389 () Bool)

(assert (=> b!85055 m!89389))

(assert (=> d!20989 d!22045))

(declare-fun d!22047 () Bool)

(declare-fun res!43858 () Bool)

(declare-fun e!55454 () Bool)

(assert (=> d!22047 (=> res!43858 e!55454)))

(assert (=> d!22047 (= res!43858 (or ((_ is Nil!1520) (toList!739 lt!38731)) ((_ is Nil!1520) (t!5214 (toList!739 lt!38731)))))))

(assert (=> d!22047 (= (isStrictlySorted!292 (toList!739 lt!38731)) e!55454)))

(declare-fun b!85056 () Bool)

(declare-fun e!55455 () Bool)

(assert (=> b!85056 (= e!55454 e!55455)))

(declare-fun res!43859 () Bool)

(assert (=> b!85056 (=> (not res!43859) (not e!55455))))

(assert (=> b!85056 (= res!43859 (bvslt (_1!1111 (h!2109 (toList!739 lt!38731))) (_1!1111 (h!2109 (t!5214 (toList!739 lt!38731))))))))

(declare-fun b!85057 () Bool)

(assert (=> b!85057 (= e!55455 (isStrictlySorted!292 (t!5214 (toList!739 lt!38731))))))

(assert (= (and d!22047 (not res!43858)) b!85056))

(assert (= (and b!85056 res!43859) b!85057))

(assert (=> b!85057 m!87347))

(assert (=> d!20989 d!22047))

(declare-fun d!22049 () Bool)

(assert (=> d!22049 (= (isEmpty!338 (getValueByKey!137 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355))) (not ((_ is Some!142) (getValueByKey!137 (toList!739 lt!38733) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) from!355)))))))

(assert (=> d!21087 d!22049))

(declare-fun bm!8026 () Bool)

(declare-fun call!8029 () Bool)

(declare-fun c!13781 () Bool)

(assert (=> bm!8026 (= call!8029 (arrayNoDuplicates!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13781 (Cons!1518 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) #b00000000000000000000000000000000) Nil!1519) Nil!1519)))))

(declare-fun d!22051 () Bool)

(declare-fun res!43862 () Bool)

(declare-fun e!55457 () Bool)

(assert (=> d!22051 (=> res!43862 e!55457)))

(assert (=> d!22051 (= res!43862 (bvsge #b00000000000000000000000000000000 (size!2144 (_keys!3983 (v!2622 (underlying!282 thiss!992))))))))

(assert (=> d!22051 (= (arrayNoDuplicates!0 (_keys!3983 (v!2622 (underlying!282 thiss!992))) #b00000000000000000000000000000000 Nil!1519) e!55457)))

(declare-fun b!85058 () Bool)

(declare-fun e!55458 () Bool)

(assert (=> b!85058 (= e!55458 call!8029)))

(declare-fun b!85059 () Bool)

(assert (=> b!85059 (= e!55458 call!8029)))

(declare-fun b!85060 () Bool)

(declare-fun e!55459 () Bool)

(assert (=> b!85060 (= e!55459 (contains!750 Nil!1519 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!85061 () Bool)

(declare-fun e!55456 () Bool)

(assert (=> b!85061 (= e!55456 e!55458)))

(assert (=> b!85061 (= c!13781 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!85062 () Bool)

(assert (=> b!85062 (= e!55457 e!55456)))

(declare-fun res!43861 () Bool)

(assert (=> b!85062 (=> (not res!43861) (not e!55456))))

(assert (=> b!85062 (= res!43861 (not e!55459))))

(declare-fun res!43860 () Bool)

(assert (=> b!85062 (=> (not res!43860) (not e!55459))))

(assert (=> b!85062 (= res!43860 (validKeyInArray!0 (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!22051 (not res!43862)) b!85062))

(assert (= (and b!85062 res!43860) b!85060))

(assert (= (and b!85062 res!43861) b!85061))

(assert (= (and b!85061 c!13781) b!85058))

(assert (= (and b!85061 (not c!13781)) b!85059))

(assert (= (or b!85058 b!85059) bm!8026))

(assert (=> bm!8026 m!88469))

(declare-fun m!89391 () Bool)

(assert (=> bm!8026 m!89391))

(assert (=> b!85060 m!88469))

(assert (=> b!85060 m!88469))

(declare-fun m!89393 () Bool)

(assert (=> b!85060 m!89393))

(assert (=> b!85061 m!88469))

(assert (=> b!85061 m!88469))

(assert (=> b!85061 m!88471))

(assert (=> b!85062 m!88469))

(assert (=> b!85062 m!88469))

(assert (=> b!85062 m!88471))

(assert (=> b!83579 d!22051))

(declare-fun d!22053 () Bool)

(assert (=> d!22053 (isDefined!91 (getValueByKey!137 (toList!739 lt!38907) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!40103 () Unit!2426)

(assert (=> d!22053 (= lt!40103 (choose!500 (toList!739 lt!38907) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!55460 () Bool)

(assert (=> d!22053 e!55460))

(declare-fun res!43863 () Bool)

(assert (=> d!22053 (=> (not res!43863) (not e!55460))))

(assert (=> d!22053 (= res!43863 (isStrictlySorted!292 (toList!739 lt!38907)))))

(assert (=> d!22053 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!90 (toList!739 lt!38907) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!40103)))

(declare-fun b!85063 () Bool)

(assert (=> b!85063 (= e!55460 (containsKey!141 (toList!739 lt!38907) (select (arr!1900 (_keys!3983 (v!2622 (underlying!282 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!22053 res!43863) b!85063))

(assert (=> d!22053 m!85767))

(assert (=> d!22053 m!86649))

(assert (=> d!22053 m!86649))

(assert (=> d!22053 m!86833))

(assert (=> d!22053 m!85767))

(declare-fun m!89395 () Bool)

(assert (=> d!22053 m!89395))

(assert (=> d!22053 m!87521))

(assert (=> b!85063 m!85767))

(assert (=> b!85063 m!86829))

(assert (=> b!83604 d!22053))

(assert (=> b!83604 d!21293))

(assert (=> b!83604 d!21295))

(declare-fun mapNonEmpty!3387 () Bool)

(declare-fun mapRes!3387 () Bool)

(declare-fun tp!8913 () Bool)

(declare-fun e!55461 () Bool)

(assert (=> mapNonEmpty!3387 (= mapRes!3387 (and tp!8913 e!55461))))

(declare-fun mapKey!3387 () (_ BitVec 32))

(declare-fun mapRest!3387 () (Array (_ BitVec 32) ValueCell!920))

(declare-fun mapValue!3387 () ValueCell!920)

(assert (=> mapNonEmpty!3387 (= mapRest!3385 (store mapRest!3387 mapKey!3387 mapValue!3387))))

(declare-fun b!85064 () Bool)

(assert (=> b!85064 (= e!55461 tp_is_empty!2527)))

(declare-fun condMapEmpty!3387 () Bool)

(declare-fun mapDefault!3387 () ValueCell!920)

(assert (=> mapNonEmpty!3385 (= condMapEmpty!3387 (= mapRest!3385 ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3387)))))

(declare-fun e!55462 () Bool)

(assert (=> mapNonEmpty!3385 (= tp!8911 (and e!55462 mapRes!3387))))

(declare-fun mapIsEmpty!3387 () Bool)

(assert (=> mapIsEmpty!3387 mapRes!3387))

(declare-fun b!85065 () Bool)

(assert (=> b!85065 (= e!55462 tp_is_empty!2527)))

(assert (= (and mapNonEmpty!3385 condMapEmpty!3387) mapIsEmpty!3387))

(assert (= (and mapNonEmpty!3385 (not condMapEmpty!3387)) mapNonEmpty!3387))

(assert (= (and mapNonEmpty!3387 ((_ is ValueCellFull!920) mapValue!3387)) b!85064))

(assert (= (and mapNonEmpty!3385 ((_ is ValueCellFull!920) mapDefault!3387)) b!85065))

(declare-fun m!89397 () Bool)

(assert (=> mapNonEmpty!3387 m!89397))

(declare-fun mapNonEmpty!3388 () Bool)

(declare-fun mapRes!3388 () Bool)

(declare-fun tp!8914 () Bool)

(declare-fun e!55463 () Bool)

(assert (=> mapNonEmpty!3388 (= mapRes!3388 (and tp!8914 e!55463))))

(declare-fun mapValue!3388 () ValueCell!920)

(declare-fun mapRest!3388 () (Array (_ BitVec 32) ValueCell!920))

(declare-fun mapKey!3388 () (_ BitVec 32))

(assert (=> mapNonEmpty!3388 (= mapRest!3386 (store mapRest!3388 mapKey!3388 mapValue!3388))))

(declare-fun b!85066 () Bool)

(assert (=> b!85066 (= e!55463 tp_is_empty!2527)))

(declare-fun condMapEmpty!3388 () Bool)

(declare-fun mapDefault!3388 () ValueCell!920)

(assert (=> mapNonEmpty!3386 (= condMapEmpty!3388 (= mapRest!3386 ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3388)))))

(declare-fun e!55464 () Bool)

(assert (=> mapNonEmpty!3386 (= tp!8912 (and e!55464 mapRes!3388))))

(declare-fun mapIsEmpty!3388 () Bool)

(assert (=> mapIsEmpty!3388 mapRes!3388))

(declare-fun b!85067 () Bool)

(assert (=> b!85067 (= e!55464 tp_is_empty!2527)))

(assert (= (and mapNonEmpty!3386 condMapEmpty!3388) mapIsEmpty!3388))

(assert (= (and mapNonEmpty!3386 (not condMapEmpty!3388)) mapNonEmpty!3388))

(assert (= (and mapNonEmpty!3388 ((_ is ValueCellFull!920) mapValue!3388)) b!85066))

(assert (= (and mapNonEmpty!3386 ((_ is ValueCellFull!920) mapDefault!3388)) b!85067))

(declare-fun m!89399 () Bool)

(assert (=> mapNonEmpty!3388 m!89399))

(declare-fun b_lambda!3753 () Bool)

(assert (= b_lambda!3731 (or (and b!82709 b_free!2221) (and b!82707 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))))) b_lambda!3753)))

(declare-fun b_lambda!3755 () Bool)

(assert (= b_lambda!3733 (or (and b!82709 b_free!2221) (and b!82707 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))))) b_lambda!3755)))

(declare-fun b_lambda!3757 () Bool)

(assert (= b_lambda!3739 (or (and b!82709 b_free!2221 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82707 b_free!2223) b_lambda!3757)))

(declare-fun b_lambda!3759 () Bool)

(assert (= b_lambda!3735 (or (and b!82709 b_free!2221 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82707 b_free!2223) b_lambda!3759)))

(declare-fun b_lambda!3761 () Bool)

(assert (= b_lambda!3745 (or (and b!82709 b_free!2221 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82707 b_free!2223) b_lambda!3761)))

(declare-fun b_lambda!3763 () Bool)

(assert (= b_lambda!3749 (or (and b!82709 b_free!2221 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82707 b_free!2223) b_lambda!3763)))

(declare-fun b_lambda!3765 () Bool)

(assert (= b_lambda!3723 (or (and b!82709 b_free!2221 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82707 b_free!2223) b_lambda!3765)))

(declare-fun b_lambda!3767 () Bool)

(assert (= b_lambda!3741 (or (and b!82709 b_free!2221 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82707 b_free!2223) b_lambda!3767)))

(declare-fun b_lambda!3769 () Bool)

(assert (= b_lambda!3727 (or (and b!82709 b_free!2221 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82707 b_free!2223) b_lambda!3769)))

(declare-fun b_lambda!3771 () Bool)

(assert (= b_lambda!3751 (or (and b!82709 b_free!2221 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82707 b_free!2223) b_lambda!3771)))

(declare-fun b_lambda!3773 () Bool)

(assert (= b_lambda!3725 (or (and b!82709 b_free!2221 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82707 b_free!2223) b_lambda!3773)))

(declare-fun b_lambda!3775 () Bool)

(assert (= b_lambda!3747 (or (and b!82709 b_free!2221 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82707 b_free!2223) b_lambda!3775)))

(declare-fun b_lambda!3777 () Bool)

(assert (= b_lambda!3729 (or (and b!82709 b_free!2221 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82707 b_free!2223) b_lambda!3777)))

(declare-fun b_lambda!3779 () Bool)

(assert (= b_lambda!3743 (or (and b!82709 b_free!2221 (= (defaultEntry!2316 (v!2622 (underlying!282 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82707 b_free!2223) b_lambda!3779)))

(check-sat (not b!84643) (not b!84126) (not d!21709) (not d!21993) (not b!84179) (not d!21613) (not b!84850) (not b!84024) (not b!84556) (not b!84924) (not d!21453) (not b!84967) (not b!83979) (not b!84784) (not d!21513) (not b!83846) (not b!83758) (not b!84538) (not b!83954) (not b!84406) (not b!83808) (not d!22035) (not d!21795) (not bm!8018) (not d!21581) (not d!21253) (not b!83723) (not b!84353) (not bm!7950) (not b!84312) (not b!84560) (not b!84827) (not d!21493) (not b!83760) (not d!21167) (not mapNonEmpty!3388) (not b!84746) (not b!84079) (not b!85049) (not b!84904) (not d!21747) (not b!84169) (not b!83810) (not d!21281) (not b!84777) (not b!83802) (not b!84569) (not b!83786) (not b!84808) (not b!84172) (not d!21999) (not bm!7927) (not b!83730) (not b!84236) (not b!84906) (not d!21877) (not d!21589) (not d!21423) (not b_lambda!3701) (not b!84509) (not d!21965) (not b!84330) (not b!84434) (not d!21365) (not b!84015) (not b!84532) (not b!83820) (not d!21205) (not b!84547) (not b!84534) (not d!21481) (not b!84698) (not d!21329) (not d!22005) (not d!21921) (not bm!7921) (not b!84890) (not b!84218) (not bm!7899) (not bm!7955) (not bm!7997) (not bm!8009) (not d!21159) (not b!84751) (not d!21239) (not b!84578) (not b!84914) (not b!84886) (not b!84768) (not b!84936) (not b!84285) (not b!84072) (not b!84526) (not b!84076) (not b!84831) (not d!21865) (not d!21707) (not d!21939) (not b!84647) (not b!83972) (not d!21539) (not b!84985) (not b!85031) (not b!83858) (not d!21331) (not b!84294) (not bm!7939) (not b!83753) (not b!84859) (not b!84251) (not b!84855) (not d!21583) (not d!21971) (not d!21781) (not b!84753) (not b!84205) (not b_lambda!3713) (not b!84748) (not d!21563) (not bm!7962) (not bm!7998) (not b!83750) (not d!21409) (not b!84104) (not d!21925) (not b_lambda!3761) (not b!85017) (not b!84032) (not d!21593) (not b!84210) (not b!84130) (not bm!7996) (not b!84394) (not b!84270) (not b!84893) (not b_next!2221) (not b!84562) (not b!84632) (not b!83904) (not d!21265) (not d!21417) (not b!84386) (not b!84396) (not b!83768) (not bm!7888) (not d!21661) (not b!83998) (not b!84527) (not d!21923) (not b!84177) (not d!21509) (not d!21725) (not b!83995) (not bm!7905) (not d!21247) (not d!21571) (not b!84895) (not b!85055) (not b!84154) (not b!84856) (not d!21991) (not d!21487) (not b!84731) (not b!84524) (not d!21745) (not b!84166) (not b!84596) (not b!84143) (not d!21591) (not d!21425) (not b!83830) (not bm!8022) (not b!84441) (not d!21767) (not b!84117) (not d!21723) (not d!21207) (not b!84865) (not b!84377) (not b!84332) (not b!83699) (not d!21815) (not bm!8026) (not b!85025) (not b!84899) (not b!84734) (not b!84182) (not b!85006) (not b!84525) (not d!21373) (not b!84789) (not b!83837) (not b!84307) (not b!84041) (not b!83844) (not b!84882) (not b!83748) (not d!21979) (not b!83727) (not d!21569) (not d!21355) (not b!84099) (not bm!7909) (not d!21935) (not b!84212) (not b!84690) (not b_lambda!3759) (not b!83720) (not d!21547) (not b!84449) (not b!84235) (not b!84727) (not d!21549) (not b!84498) (not d!21825) (not b!85020) (not b!84289) (not b!84540) (not d!21899) (not d!21681) (not b!84241) (not b!84253) (not b!83881) (not b!83962) (not bm!7925) (not bm!7930) (not b!84164) (not b!84264) (not d!22003) (not b!84634) (not b!84422) (not d!21499) (not b!84313) (not b!84618) (not b!84383) (not b!83822) (not b!84591) (not b!84034) (not d!21269) (not b!84299) (not d!21475) (not d!21715) (not b!84305) (not bm!7972) (not b!84581) (not b!85008) (not d!21931) (not b!83892) (not b!84839) (not d!21407) (not b!84567) (not d!21657) (not d!21375) (not b!84216) (not b!84712) (not b!84417) (not d!21525) (not b!84107) (not d!21873) (not b!83719) (not b!84092) (not b!84870) (not b!84320) (not d!21157) (not b!84705) (not b!84810) (not b!83915) (not b!83977) (not b!84639) (not d!21457) (not b!84793) (not b!84934) (not b!84147) (not b!84278) (not b!84949) (not d!21177) (not b!83791) (not b!84445) (not b_lambda!3773) (not b!84296) (not b!83869) (not bm!7971) (not b!83740) (not d!21161) (not b!84328) (not b!83841) (not d!21527) (not b!84958) (not d!21853) (not b_lambda!3771) (not d!21881) (not b!84277) (not b!84472) (not d!21901) (not b!84626) (not d!21813) (not b!84969) (not b!84743) (not bm!7943) (not d!21173) (not b!84720) (not bm!7992) (not bm!7970) (not b_lambda!3719) (not b!84175) (not b!84000) (not d!21701) (not b!84295) (not d!21293) (not b!83824) (not d!21951) (not d!21807) (not b!84211) (not b!84028) (not d!21959) (not b!83898) (not d!21751) (not b!84956) (not d!22017) (not d!21491) (not d!21863) (not b!84215) (not b!83932) (not b!83942) (not b!85002) (not b!84539) (not d!21585) (not b!84003) (not b!83778) (not b!84081) (not b_lambda!3717) (not b!84902) (not d!21469) (not b!83985) (not d!21653) (not b!84555) (not d!21893) (not d!21997) (not b!84082) (not d!21565) (not b!84579) (not b!83833) (not d!21199) (not b!85004) (not d!21627) (not b!83918) (not d!21285) (not b!84872) (not d!22023) (not b_lambda!3689) (not b!84414) (not b!84645) (not b!84771) (not b!84017) (not b!84322) (not bm!7940) (not b!84341) (not b!83756) (not d!21643) (not d!21545) (not d!21823) (not b!84600) (not b_lambda!3765) (not b!83999) (not b!85036) (not b!83900) (not b!84124) (not b!84261) (not b!84765) (not b!84598) (not bm!7953) (not d!21197) (not b!84058) (not d!21143) (not b!85063) (not d!21663) (not d!21181) (not b!84248) (not b!84359) (not b!83826) (not b!84256) (not b!83737) (not b!84590) (not b!84779) (not b!84152) (not d!21763) (not b!83880) (not b!84399) (not bm!7979) (not b!85038) (not b!84518) (not b!83875) (not d!21357) (not b!84044) (not b!84939) (not bm!7982) (not bm!7919) (not b!84571) (not b!84702) (not b!84884) (not b!83961) (not b!83923) (not b!84658) (not b!85028) (not d!21385) (not bm!7894) (not b!84375) (not d!21917) (not b!84657) (not bm!7904) (not d!22031) (not b!83895) (not b!83903) (not d!21339) (not d!21895) (not d!21949) (not b!84475) (not b!84975) (not d!21341) (not d!21667) (not d!21379) (not bm!7916) (not d!21215) (not d!21561) (not d!22039) (not b!83878) (not bm!7954) (not b!83988) (not b!84221) (not b!84384) (not d!21677) (not b!84717) (not d!21255) (not b!84776) (not d!21313) (not b!84074) (not d!21689) (not b!83959) (not d!21737) (not bm!7995) (not bm!7898) (not d!21297) (not b!84029) (not b!84973) (not d!21915) (not b!83888) (not b!83997) (not b!84268) (not b!84369) (not b!83763) (not b_lambda!3763) (not b!83907) (not b!83873) (not b_lambda!3721) (not b!84380) (not b!84901) (not d!21941) (not b!84228) (not b!84700) (not b!84188) (not d!21451) (not b!83909) (not b!84249) (not b!83813) (not bm!7885) (not b!84036) (not bm!7900) (not bm!8003) (not b!84919) (not d!21567) (not b!84656) (not bm!7914) (not b!85015) (not b!84346) (not b!83865) (not d!21733) (not b!84006) (not d!21229) (not b!84605) (not d!21869) (not d!21193) (not d!21333) (not d!21791) (not b!84769) (not d!21891) (not b!84097) (not d!21837) (not b!84907) (not b!83983) (not b!84905) (not b!84301) (not b!85026) (not d!21459) (not b!84724) (not b!84953) (not b!84389) (not b!83789) (not b!84339) (not b!84013) (not b!84162) (not d!21953) (not d!21699) (not b!84190) (not b!84946) (not b!84366) (not b!84739) (not bm!7933) (not b!84607) (not d!21973) (not bm!8012) (not d!21543) (not b!84912) (not d!21555) (not b!83912) (not d!21271) (not bm!7893) (not d!21981) (not d!21633) (not b!84427) (not b!84805) (not d!21875) (not d!21887) (not d!21907) (not b!84319) (not b!84704) (not b!84861) (not b!83906) (not d!21463) (not b!83934) (not b!84243) (not b!84195) (not b!83732) (not d!21419) (not b!84302) (not b!84713) (not b_lambda!3775) (not b!83800) (not b!83905) (not b!84991) (not d!21961) (not b!84756) (not b!84293) (not b!83712) (not b_lambda!3769) (not b!84094) (not d!21859) (not d!21669) (not b_lambda!3737) (not b!83968) (not b!84317) (not d!21227) (not d!21937) (not d!21741) (not d!21559) (not d!21821) (not b!84232) (not b!84829) (not b!84922) (not d!21275) (not b!84715) (not b!85061) (not b!84167) (not d!21367) (not b!83965) (not bm!7897) (not b!84100) (not b!84664) (not b!83929) (not b!84977) (not d!21257) (not b!85033) (not b!84213) (not b!83709) (not b!83927) (not bm!7978) (not b!84200) (not b!85052) (not d!21635) (not b!83781) (not b!83849) (not b!84523) (not b!84927) (not b!84988) (not b!84159) (not b!84356) (not b!84612) (not b!84978) (not b!84662) (not d!21335) (not bm!7947) (not d!21521) (not b!84054) (not b!84982) (not d!21843) (not b!83937) (not b!83787) (not b!84316) (not b!84857) (not d!22029) (not b!84039) (not b!84025) (not b_lambda!3753) (not b!84272) (not bm!7936) (not b!84068) (not b!85046) (not b!84741) (not b!84710) (not b!84917) (not b!84963) (not bm!7908) tp_is_empty!2527 (not b!84070) (not b!84391) (not bm!8006) (not b!84920) (not bm!7889) (not b!83828) (not b!83821) (not b!84410) (not d!21433) (not b!84819) (not b!84327) (not b!83718) (not b!83894) (not d!22041) (not bm!7915) (not b!84309) (not b!84530) (not b!84616) (not b!84392) (not d!21439) (not d!21447) (not b!83746) (not d!21975) (not b!84351) (not d!21855) (not d!21711) (not b!84557) (not b!84536) (not b!84424) (not b!83902) (not b!84844) (not b!84223) (not b!84573) (not b!84997) (not b!84815) (not d!21955) (not b!84593) (not b!84826) (not b!84208) (not b!84161) (not d!21183) (not b!84311) (not b!84841) (not b!84847) (not b!84137) (not d!21577) (not d!21283) (not bm!7961) (not b_lambda!3779) (not bm!8002) (not b!84197) (not b!84520) (not bm!7965) (not d!21345) (not d!21675) (not d!21691) (not bm!7890) (not d!22027) (not b_next!2223) (not b!84432) (not d!21515) (not bm!7956) (not b!83883) (not b!84420) (not b!84888) (not b!85041) (not b!84781) (not b!84960) (not b!84134) (not d!21967) (not b!83773) (not d!21703) (not b!83771) (not b!84707) (not d!21889) (not d!21719) (not b!85013) (not b!83872) (not b!84824) (not b!84654) (not b!84995) (not bm!7966) (not d!21225) (not b_lambda!3715) (not b!84191) (not d!21153) (not b!84451) (not b!84897) (not b_lambda!3757) (not bm!7884) (not d!21429) (not d!21369) (not b!84849) (not b!83707) (not b!84477) (not d!21223) (not b!84115) (not b!83733) (not b!84122) (not b!83930) (not b!84575) (not b_lambda!3767) (not d!21531) (not b!84026) (not b!84128) (not b!84842) (not bm!8019) (not b!84875) (not d!21557) (not d!21607) (not b!83855) (not d!21945) (not d!21413) (not d!21431) (not b!85060) (not b!84061) (not b!83974) (not d!21441) (not d!21485) (not d!21383) (not d!21755) (not b!83717) (not b!84403) (not b!84623) (not b!84774) (not b!84799) (not d!21927) (not bm!8025) (not d!21749) (not b!84135) (not d!21277) (not b_lambda!3755) (not d!22019) (not b!84533) (not b!84419) (not b!84160) (not d!21631) (not b!84193) (not b!84447) (not b!84762) (not d!21603) (not d!21213) (not b!83860) (not b!84980) (not b!85062) (not d!21805) (not b!84239) (not b!83920) (not b!83952) (not b!84091) (not b!84516) (not b!84877) (not d!21609) (not b!84238) (not b!84042) (not d!21575) (not b!83735) (not mapNonEmpty!3387) (not b!84335) (not b!83725) (not b!85057) (not bm!7988) (not d!21405) (not b!84360) (not b!83990) (not b!84156) (not d!21323) (not b!84363) (not b!84021) (not b!84513) (not d!21299) (not b!84812) (not b!84412) (not b!84910) (not b!84689) (not bm!7963) (not bm!7944) (not b!84868) (not d!21841) (not b!84962) (not b!84749) (not b!84695) (not b!84851) (not d!21849) (not d!21573) (not d!21353) (not d!21957) (not d!21775) (not d!21551) (not b!84275) (not b!84102) (not b!84008) (not d!21151) (not b!84149) (not b!83701) (not b!83993) (not b!84797) (not b!83776) (not b!84368) (not b!84550) (not b!84344) (not bm!7881) (not d!21553) (not b!84469) (not d!21793) (not b!84955) (not b!84280) (not b!84225) (not b!84133) (not b!84019) (not b!83784) (not d!21933) (not b!84224) (not d!21943) (not bm!7964) (not d!21497) (not b!84084) (not d!21785) (not d!21883) (not d!21395) (not bm!8014) (not d!21721) (not b_lambda!3777) (not d!21947) (not d!21705) (not b!84049) (not bm!7920) (not b!84140) (not b!83818) (not b!84900) (not b!83970) (not b!84246) (not b!85048) (not b!84174) (not bm!7985) (not b!84056) (not b!84637) (not b!84620) (not d!21717) (not b!84545) (not d!21765) (not d!21421) (not b!83885) (not d!21171) (not b!83823) (not d!21243) (not b!84348) (not b!84089) (not b!84087) (not bm!7910) (not b!84853) (not b!84240) (not b!84624) (not d!21319) (not b!84971) (not d!21201) (not b!84652) (not b!83862) b_and!5141 (not b!83772) (not b!83981) (not d!21291) (not d!21361) (not b!84614) (not b!84437) (not b!83949) (not b!84908) (not d!21727) (not b!84736) (not b!83779) (not b!84112) (not bm!7973) (not bm!8013) (not bm!7989) (not d!21251) (not b!84310) (not b!84542) (not d!21465) (not b!85010) (not b!84692) (not b!84766) (not b!84531) (not d!21759) (not d!21903) (not d!21647) (not d!21789) (not b!84234) (not d!21351) (not b_lambda!3697) (not b!84443) (not b!84553) (not b!83957) (not b!84001) (not b_lambda!3699) (not b!83913) (not d!21819) (not d!21511) (not b!84660) (not b!84506) (not b!84325) (not b!84932) (not b!83816) (not bm!7926) (not b!84965) (not d!21415) (not d!21987) (not b!84282) (not b!84231) (not b!84821) (not b!84597) (not d!21861) (not b!85034) (not d!21713) (not b!84063) (not b!83864) (not b!84230) (not d!21649) (not b!84791) (not d!21851) b_and!5143 (not d!21309) (not b!83945) (not b!84046) (not b!83715) (not b!84834) (not b!84292) (not b!84290) (not b!84297) (not b!84144) (not bm!7957) (not d!21651) (not b!83755) (not b!84372) (not b!84800) (not d!21739) (not d!22053) (not d!21803) (not d!21519) (not d!21517) (not b!84944) (not b!83794) (not b!84649) (not d!21637))
(check-sat b_and!5141 b_and!5143 (not b_next!2221) (not b_next!2223))
