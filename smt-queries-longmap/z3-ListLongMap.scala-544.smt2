; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!14260 () Bool)

(assert start!14260)

(declare-fun b!132300 () Bool)

(declare-fun b_free!2921 () Bool)

(declare-fun b_next!2921 () Bool)

(assert (=> b!132300 (= b_free!2921 (not b_next!2921))))

(declare-fun tp!11206 () Bool)

(declare-fun b_and!8195 () Bool)

(assert (=> b!132300 (= tp!11206 b_and!8195)))

(declare-fun b!132303 () Bool)

(declare-fun b_free!2923 () Bool)

(declare-fun b_next!2923 () Bool)

(assert (=> b!132303 (= b_free!2923 (not b_next!2923))))

(declare-fun tp!11207 () Bool)

(declare-fun b_and!8197 () Bool)

(assert (=> b!132303 (= tp!11207 b_and!8197)))

(declare-fun mapIsEmpty!4643 () Bool)

(declare-fun mapRes!4644 () Bool)

(assert (=> mapIsEmpty!4643 mapRes!4644))

(declare-fun tp_is_empty!2877 () Bool)

(declare-fun e!86279 () Bool)

(declare-fun e!86270 () Bool)

(declare-datatypes ((V!3483 0))(
  ( (V!3484 (val!1483 Int)) )
))
(declare-datatypes ((array!4781 0))(
  ( (array!4782 (arr!2261 (Array (_ BitVec 32) (_ BitVec 64))) (size!2530 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1095 0))(
  ( (ValueCellFull!1095 (v!3198 V!3483)) (EmptyCell!1095) )
))
(declare-datatypes ((array!4783 0))(
  ( (array!4784 (arr!2262 (Array (_ BitVec 32) ValueCell!1095)) (size!2531 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!1098 0))(
  ( (LongMapFixedSize!1099 (defaultEntry!2865 Int) (mask!7165 (_ BitVec 32)) (extraKeys!2630 (_ BitVec 32)) (zeroValue!2720 V!3483) (minValue!2720 V!3483) (_size!598 (_ BitVec 32)) (_keys!4614 array!4781) (_values!2848 array!4783) (_vacant!598 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!888 0))(
  ( (Cell!889 (v!3199 LongMapFixedSize!1098)) )
))
(declare-datatypes ((LongMap!888 0))(
  ( (LongMap!889 (underlying!455 Cell!888)) )
))
(declare-fun thiss!992 () LongMap!888)

(declare-fun array_inv!1423 (array!4781) Bool)

(declare-fun array_inv!1424 (array!4783) Bool)

(assert (=> b!132300 (= e!86270 (and tp!11206 tp_is_empty!2877 (array_inv!1423 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (array_inv!1424 (_values!2848 (v!3199 (underlying!455 thiss!992)))) e!86279))))

(declare-fun b!132301 () Bool)

(declare-fun e!86267 () Bool)

(assert (=> b!132301 (= e!86267 tp_is_empty!2877)))

(declare-fun b!132302 () Bool)

(declare-fun mapRes!4643 () Bool)

(assert (=> b!132302 (= e!86279 (and e!86267 mapRes!4643))))

(declare-fun condMapEmpty!4644 () Bool)

(declare-fun mapDefault!4643 () ValueCell!1095)

(assert (=> b!132302 (= condMapEmpty!4644 (= (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4643)))))

(declare-fun mapIsEmpty!4644 () Bool)

(assert (=> mapIsEmpty!4644 mapRes!4643))

(declare-fun mapNonEmpty!4643 () Bool)

(declare-fun tp!11208 () Bool)

(declare-fun e!86272 () Bool)

(assert (=> mapNonEmpty!4643 (= mapRes!4643 (and tp!11208 e!86272))))

(declare-fun mapValue!4643 () ValueCell!1095)

(declare-fun mapKey!4644 () (_ BitVec 32))

(declare-fun mapRest!4644 () (Array (_ BitVec 32) ValueCell!1095))

(assert (=> mapNonEmpty!4643 (= (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (store mapRest!4644 mapKey!4644 mapValue!4643))))

(declare-fun e!86269 () Bool)

(declare-fun newMap!16 () LongMapFixedSize!1098)

(declare-fun e!86271 () Bool)

(assert (=> b!132303 (= e!86269 (and tp!11207 tp_is_empty!2877 (array_inv!1423 (_keys!4614 newMap!16)) (array_inv!1424 (_values!2848 newMap!16)) e!86271))))

(declare-fun b!132304 () Bool)

(declare-fun res!63740 () Bool)

(declare-fun e!86268 () Bool)

(assert (=> b!132304 (=> (not res!63740) (not e!86268))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!132304 (= res!63740 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun res!63736 () Bool)

(declare-fun e!86266 () Bool)

(assert (=> start!14260 (=> (not res!63736) (not e!86266))))

(declare-fun valid!523 (LongMap!888) Bool)

(assert (=> start!14260 (= res!63736 (valid!523 thiss!992))))

(assert (=> start!14260 e!86266))

(declare-fun e!86280 () Bool)

(assert (=> start!14260 e!86280))

(assert (=> start!14260 true))

(assert (=> start!14260 e!86269))

(declare-fun mapNonEmpty!4644 () Bool)

(declare-fun tp!11205 () Bool)

(declare-fun e!86273 () Bool)

(assert (=> mapNonEmpty!4644 (= mapRes!4644 (and tp!11205 e!86273))))

(declare-fun mapRest!4643 () (Array (_ BitVec 32) ValueCell!1095))

(declare-fun mapValue!4644 () ValueCell!1095)

(declare-fun mapKey!4643 () (_ BitVec 32))

(assert (=> mapNonEmpty!4644 (= (arr!2262 (_values!2848 newMap!16)) (store mapRest!4643 mapKey!4643 mapValue!4644))))

(declare-fun b!132305 () Bool)

(assert (=> b!132305 (= e!86272 tp_is_empty!2877)))

(declare-fun b!132306 () Bool)

(declare-fun res!63734 () Bool)

(assert (=> b!132306 (=> (not res!63734) (not e!86268))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4781 (_ BitVec 32)) Bool)

(assert (=> b!132306 (= res!63734 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!132307 () Bool)

(declare-fun e!86277 () Bool)

(assert (=> b!132307 (= e!86266 e!86277)))

(declare-fun res!63743 () Bool)

(assert (=> b!132307 (=> (not res!63743) (not e!86277))))

(declare-datatypes ((tuple2!2626 0))(
  ( (tuple2!2627 (_1!1324 (_ BitVec 64)) (_2!1324 V!3483)) )
))
(declare-datatypes ((List!1716 0))(
  ( (Nil!1713) (Cons!1712 (h!2317 tuple2!2626) (t!6167 List!1716)) )
))
(declare-datatypes ((ListLongMap!1707 0))(
  ( (ListLongMap!1708 (toList!869 List!1716)) )
))
(declare-fun lt!69022 () ListLongMap!1707)

(declare-fun lt!69023 () ListLongMap!1707)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!132307 (= res!63743 (and (= lt!69023 lt!69022) (not (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1409 (LongMapFixedSize!1098) ListLongMap!1707)

(assert (=> b!132307 (= lt!69022 (map!1409 newMap!16))))

(declare-fun getCurrentListMap!546 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) Int) ListLongMap!1707)

(assert (=> b!132307 (= lt!69023 (getCurrentListMap!546 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!132308 () Bool)

(assert (=> b!132308 (= e!86277 e!86268)))

(declare-fun res!63735 () Bool)

(assert (=> b!132308 (=> (not res!63735) (not e!86268))))

(declare-fun contains!899 (ListLongMap!1707 (_ BitVec 64)) Bool)

(assert (=> b!132308 (= res!63735 (contains!899 lt!69022 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-datatypes ((tuple2!2628 0))(
  ( (tuple2!2629 (_1!1325 Bool) (_2!1325 LongMapFixedSize!1098)) )
))
(declare-fun lt!69021 () tuple2!2628)

(declare-fun update!194 (LongMapFixedSize!1098 (_ BitVec 64) V!3483) tuple2!2628)

(declare-fun get!1482 (ValueCell!1095 V!3483) V!3483)

(declare-fun dynLambda!425 (Int (_ BitVec 64)) V!3483)

(assert (=> b!132308 (= lt!69021 (update!194 newMap!16 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!132309 () Bool)

(assert (=> b!132309 (= e!86273 tp_is_empty!2877)))

(declare-fun b!132310 () Bool)

(declare-fun e!86278 () Bool)

(assert (=> b!132310 (= e!86280 e!86278)))

(declare-fun b!132311 () Bool)

(declare-fun res!63742 () Bool)

(assert (=> b!132311 (=> (not res!63742) (not e!86268))))

(declare-datatypes ((List!1717 0))(
  ( (Nil!1714) (Cons!1713 (h!2318 (_ BitVec 64)) (t!6168 List!1717)) )
))
(declare-fun arrayNoDuplicates!0 (array!4781 (_ BitVec 32) List!1717) Bool)

(assert (=> b!132311 (= res!63742 (arrayNoDuplicates!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000000 Nil!1714))))

(declare-fun b!132312 () Bool)

(declare-fun e!86276 () Bool)

(assert (=> b!132312 (= e!86276 tp_is_empty!2877)))

(declare-fun b!132313 () Bool)

(declare-fun res!63737 () Bool)

(assert (=> b!132313 (=> (not res!63737) (not e!86266))))

(assert (=> b!132313 (= res!63737 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!132314 () Bool)

(declare-fun res!63739 () Bool)

(assert (=> b!132314 (=> (not res!63739) (not e!86266))))

(declare-fun valid!524 (LongMapFixedSize!1098) Bool)

(assert (=> b!132314 (= res!63739 (valid!524 newMap!16))))

(declare-fun b!132315 () Bool)

(declare-fun res!63738 () Bool)

(assert (=> b!132315 (=> (not res!63738) (not e!86268))))

(assert (=> b!132315 (= res!63738 (and (= (size!2531 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!7165 (v!3199 (underlying!455 thiss!992))))) (= (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (size!2531 (_values!2848 (v!3199 (underlying!455 thiss!992))))) (bvsge (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000000) (bvsge (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun b!132316 () Bool)

(assert (=> b!132316 (= e!86278 e!86270)))

(declare-fun b!132317 () Bool)

(assert (=> b!132317 (= e!86271 (and e!86276 mapRes!4644))))

(declare-fun condMapEmpty!4643 () Bool)

(declare-fun mapDefault!4644 () ValueCell!1095)

(assert (=> b!132317 (= condMapEmpty!4643 (= (arr!2262 (_values!2848 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4644)))))

(declare-fun b!132318 () Bool)

(declare-fun res!63741 () Bool)

(assert (=> b!132318 (=> (not res!63741) (not e!86266))))

(assert (=> b!132318 (= res!63741 (bvsge (bvadd #b00000000000000000000000000000001 (mask!7165 newMap!16)) (_size!598 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!132319 () Bool)

(assert (=> b!132319 (= e!86268 (or (bvslt (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and start!14260 res!63736) b!132313))

(assert (= (and b!132313 res!63737) b!132314))

(assert (= (and b!132314 res!63739) b!132318))

(assert (= (and b!132318 res!63741) b!132307))

(assert (= (and b!132307 res!63743) b!132308))

(assert (= (and b!132308 res!63735) b!132304))

(assert (= (and b!132304 res!63740) b!132315))

(assert (= (and b!132315 res!63738) b!132306))

(assert (= (and b!132306 res!63734) b!132311))

(assert (= (and b!132311 res!63742) b!132319))

(assert (= (and b!132302 condMapEmpty!4644) mapIsEmpty!4644))

(assert (= (and b!132302 (not condMapEmpty!4644)) mapNonEmpty!4643))

(get-info :version)

(assert (= (and mapNonEmpty!4643 ((_ is ValueCellFull!1095) mapValue!4643)) b!132305))

(assert (= (and b!132302 ((_ is ValueCellFull!1095) mapDefault!4643)) b!132301))

(assert (= b!132300 b!132302))

(assert (= b!132316 b!132300))

(assert (= b!132310 b!132316))

(assert (= start!14260 b!132310))

(assert (= (and b!132317 condMapEmpty!4643) mapIsEmpty!4643))

(assert (= (and b!132317 (not condMapEmpty!4643)) mapNonEmpty!4644))

(assert (= (and mapNonEmpty!4644 ((_ is ValueCellFull!1095) mapValue!4644)) b!132309))

(assert (= (and b!132317 ((_ is ValueCellFull!1095) mapDefault!4644)) b!132312))

(assert (= b!132303 b!132317))

(assert (= start!14260 b!132303))

(declare-fun b_lambda!5889 () Bool)

(assert (=> (not b_lambda!5889) (not b!132308)))

(declare-fun t!6164 () Bool)

(declare-fun tb!2413 () Bool)

(assert (=> (and b!132300 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992)))) t!6164) tb!2413))

(declare-fun result!3983 () Bool)

(assert (=> tb!2413 (= result!3983 tp_is_empty!2877)))

(assert (=> b!132308 t!6164))

(declare-fun b_and!8199 () Bool)

(assert (= b_and!8195 (and (=> t!6164 result!3983) b_and!8199)))

(declare-fun t!6166 () Bool)

(declare-fun tb!2415 () Bool)

(assert (=> (and b!132303 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992)))) t!6166) tb!2415))

(declare-fun result!3987 () Bool)

(assert (= result!3987 result!3983))

(assert (=> b!132308 t!6166))

(declare-fun b_and!8201 () Bool)

(assert (= b_and!8197 (and (=> t!6166 result!3987) b_and!8201)))

(declare-fun m!155863 () Bool)

(assert (=> b!132300 m!155863))

(declare-fun m!155865 () Bool)

(assert (=> b!132300 m!155865))

(declare-fun m!155867 () Bool)

(assert (=> b!132304 m!155867))

(declare-fun m!155869 () Bool)

(assert (=> b!132307 m!155869))

(declare-fun m!155871 () Bool)

(assert (=> b!132307 m!155871))

(declare-fun m!155873 () Bool)

(assert (=> b!132307 m!155873))

(declare-fun m!155875 () Bool)

(assert (=> b!132306 m!155875))

(declare-fun m!155877 () Bool)

(assert (=> b!132311 m!155877))

(declare-fun m!155879 () Bool)

(assert (=> mapNonEmpty!4643 m!155879))

(declare-fun m!155881 () Bool)

(assert (=> b!132314 m!155881))

(declare-fun m!155883 () Bool)

(assert (=> start!14260 m!155883))

(declare-fun m!155885 () Bool)

(assert (=> mapNonEmpty!4644 m!155885))

(declare-fun m!155887 () Bool)

(assert (=> b!132303 m!155887))

(declare-fun m!155889 () Bool)

(assert (=> b!132303 m!155889))

(declare-fun m!155891 () Bool)

(assert (=> b!132308 m!155891))

(declare-fun m!155893 () Bool)

(assert (=> b!132308 m!155893))

(declare-fun m!155895 () Bool)

(assert (=> b!132308 m!155895))

(assert (=> b!132308 m!155869))

(declare-fun m!155897 () Bool)

(assert (=> b!132308 m!155897))

(assert (=> b!132308 m!155869))

(assert (=> b!132308 m!155893))

(assert (=> b!132308 m!155869))

(assert (=> b!132308 m!155895))

(declare-fun m!155899 () Bool)

(assert (=> b!132308 m!155899))

(assert (=> b!132308 m!155891))

(check-sat (not b!132303) (not b_next!2923) (not mapNonEmpty!4644) (not b!132311) b_and!8199 tp_is_empty!2877 (not b!132314) b_and!8201 (not b!132300) (not start!14260) (not b_lambda!5889) (not b_next!2921) (not b!132306) (not b!132308) (not b!132307) (not mapNonEmpty!4643) (not b!132304))
(check-sat b_and!8199 b_and!8201 (not b_next!2921) (not b_next!2923))
(get-model)

(declare-fun b_lambda!5893 () Bool)

(assert (= b_lambda!5889 (or (and b!132300 b_free!2921) (and b!132303 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))))) b_lambda!5893)))

(check-sat (not b!132303) (not b_next!2923) (not mapNonEmpty!4644) (not b!132311) b_and!8199 tp_is_empty!2877 (not b!132314) b_and!8201 (not b_lambda!5893) (not b!132300) (not start!14260) (not b_next!2921) (not b!132306) (not b!132308) (not b!132307) (not mapNonEmpty!4643) (not b!132304))
(check-sat b_and!8199 b_and!8201 (not b_next!2921) (not b_next!2923))
(get-model)

(declare-fun d!40169 () Bool)

(assert (=> d!40169 (= (array_inv!1423 (_keys!4614 newMap!16)) (bvsge (size!2530 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!132303 d!40169))

(declare-fun d!40171 () Bool)

(assert (=> d!40171 (= (array_inv!1424 (_values!2848 newMap!16)) (bvsge (size!2531 (_values!2848 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!132303 d!40171))

(declare-fun d!40173 () Bool)

(assert (=> d!40173 (= (array_inv!1423 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvsge (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!132300 d!40173))

(declare-fun d!40175 () Bool)

(assert (=> d!40175 (= (array_inv!1424 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvsge (size!2531 (_values!2848 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!132300 d!40175))

(declare-fun d!40177 () Bool)

(assert (=> d!40177 (= (map!1409 newMap!16) (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun bs!5474 () Bool)

(assert (= bs!5474 d!40177))

(declare-fun m!155939 () Bool)

(assert (=> bs!5474 m!155939))

(assert (=> b!132307 d!40177))

(declare-fun b!132426 () Bool)

(declare-datatypes ((Unit!4135 0))(
  ( (Unit!4136) )
))
(declare-fun e!86364 () Unit!4135)

(declare-fun lt!69077 () Unit!4135)

(assert (=> b!132426 (= e!86364 lt!69077)))

(declare-fun lt!69093 () ListLongMap!1707)

(declare-fun getCurrentListMapNoExtraKeys!141 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) Int) ListLongMap!1707)

(assert (=> b!132426 (= lt!69093 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun lt!69087 () (_ BitVec 64))

(assert (=> b!132426 (= lt!69087 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69092 () (_ BitVec 64))

(assert (=> b!132426 (= lt!69092 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!69090 () Unit!4135)

(declare-fun addStillContains!92 (ListLongMap!1707 (_ BitVec 64) V!3483 (_ BitVec 64)) Unit!4135)

(assert (=> b!132426 (= lt!69090 (addStillContains!92 lt!69093 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69092))))

(declare-fun +!175 (ListLongMap!1707 tuple2!2626) ListLongMap!1707)

(assert (=> b!132426 (contains!899 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69092)))

(declare-fun lt!69097 () Unit!4135)

(assert (=> b!132426 (= lt!69097 lt!69090)))

(declare-fun lt!69079 () ListLongMap!1707)

(assert (=> b!132426 (= lt!69079 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun lt!69082 () (_ BitVec 64))

(assert (=> b!132426 (= lt!69082 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69098 () (_ BitVec 64))

(assert (=> b!132426 (= lt!69098 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!69089 () Unit!4135)

(declare-fun addApplyDifferent!92 (ListLongMap!1707 (_ BitVec 64) V!3483 (_ BitVec 64)) Unit!4135)

(assert (=> b!132426 (= lt!69089 (addApplyDifferent!92 lt!69079 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69098))))

(declare-fun apply!116 (ListLongMap!1707 (_ BitVec 64)) V!3483)

(assert (=> b!132426 (= (apply!116 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69098) (apply!116 lt!69079 lt!69098))))

(declare-fun lt!69078 () Unit!4135)

(assert (=> b!132426 (= lt!69078 lt!69089)))

(declare-fun lt!69084 () ListLongMap!1707)

(assert (=> b!132426 (= lt!69084 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun lt!69086 () (_ BitVec 64))

(assert (=> b!132426 (= lt!69086 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69080 () (_ BitVec 64))

(assert (=> b!132426 (= lt!69080 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!69083 () Unit!4135)

(assert (=> b!132426 (= lt!69083 (addApplyDifferent!92 lt!69084 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69080))))

(assert (=> b!132426 (= (apply!116 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69080) (apply!116 lt!69084 lt!69080))))

(declare-fun lt!69091 () Unit!4135)

(assert (=> b!132426 (= lt!69091 lt!69083)))

(declare-fun lt!69081 () ListLongMap!1707)

(assert (=> b!132426 (= lt!69081 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun lt!69096 () (_ BitVec 64))

(assert (=> b!132426 (= lt!69096 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69094 () (_ BitVec 64))

(assert (=> b!132426 (= lt!69094 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!132426 (= lt!69077 (addApplyDifferent!92 lt!69081 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69094))))

(assert (=> b!132426 (= (apply!116 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69094) (apply!116 lt!69081 lt!69094))))

(declare-fun b!132427 () Bool)

(declare-fun e!86361 () Bool)

(declare-fun call!14543 () Bool)

(assert (=> b!132427 (= e!86361 (not call!14543))))

(declare-fun b!132428 () Bool)

(declare-fun e!86358 () Bool)

(declare-fun e!86357 () Bool)

(assert (=> b!132428 (= e!86358 e!86357)))

(declare-fun c!24450 () Bool)

(assert (=> b!132428 (= c!24450 (not (= (bvand (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132429 () Bool)

(declare-fun e!86362 () ListLongMap!1707)

(declare-fun call!14546 () ListLongMap!1707)

(assert (=> b!132429 (= e!86362 call!14546)))

(declare-fun b!132430 () Bool)

(declare-fun e!86353 () ListLongMap!1707)

(declare-fun call!14540 () ListLongMap!1707)

(assert (=> b!132430 (= e!86353 call!14540)))

(declare-fun b!132431 () Bool)

(declare-fun c!24452 () Bool)

(assert (=> b!132431 (= c!24452 (and (not (= (bvand (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!132431 (= e!86353 e!86362)))

(declare-fun b!132432 () Bool)

(declare-fun call!14541 () Bool)

(assert (=> b!132432 (= e!86357 (not call!14541))))

(declare-fun d!40179 () Bool)

(assert (=> d!40179 e!86358))

(declare-fun res!63795 () Bool)

(assert (=> d!40179 (=> (not res!63795) (not e!86358))))

(assert (=> d!40179 (= res!63795 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun lt!69095 () ListLongMap!1707)

(declare-fun lt!69088 () ListLongMap!1707)

(assert (=> d!40179 (= lt!69095 lt!69088)))

(declare-fun lt!69085 () Unit!4135)

(assert (=> d!40179 (= lt!69085 e!86364)))

(declare-fun c!24448 () Bool)

(declare-fun e!86360 () Bool)

(assert (=> d!40179 (= c!24448 e!86360)))

(declare-fun res!63794 () Bool)

(assert (=> d!40179 (=> (not res!63794) (not e!86360))))

(assert (=> d!40179 (= res!63794 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun e!86355 () ListLongMap!1707)

(assert (=> d!40179 (= lt!69088 e!86355)))

(declare-fun c!24451 () Bool)

(assert (=> d!40179 (= c!24451 (and (not (= (bvand (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40179 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!40179 (= (getCurrentListMap!546 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992)))) lt!69095)))

(declare-fun b!132433 () Bool)

(declare-fun e!86359 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!132433 (= e!86359 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!14537 () Bool)

(assert (=> bm!14537 (= call!14543 (contains!899 lt!69095 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132434 () Bool)

(assert (=> b!132434 (= e!86355 e!86353)))

(declare-fun c!24449 () Bool)

(assert (=> b!132434 (= c!24449 (and (not (= (bvand (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132435 () Bool)

(declare-fun call!14544 () ListLongMap!1707)

(assert (=> b!132435 (= e!86355 (+!175 call!14544 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!132436 () Bool)

(declare-fun e!86352 () Bool)

(assert (=> b!132436 (= e!86352 (= (apply!116 lt!69095 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132436 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2531 (_values!2848 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> b!132436 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun bm!14538 () Bool)

(assert (=> bm!14538 (= call!14541 (contains!899 lt!69095 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132437 () Bool)

(declare-fun res!63796 () Bool)

(assert (=> b!132437 (=> (not res!63796) (not e!86358))))

(assert (=> b!132437 (= res!63796 e!86361)))

(declare-fun c!24447 () Bool)

(assert (=> b!132437 (= c!24447 (not (= (bvand (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!132438 () Bool)

(declare-fun e!86356 () Bool)

(assert (=> b!132438 (= e!86357 e!86356)))

(declare-fun res!63798 () Bool)

(assert (=> b!132438 (= res!63798 call!14541)))

(assert (=> b!132438 (=> (not res!63798) (not e!86356))))

(declare-fun call!14542 () ListLongMap!1707)

(declare-fun bm!14539 () Bool)

(declare-fun call!14545 () ListLongMap!1707)

(assert (=> bm!14539 (= call!14544 (+!175 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)) (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!132439 () Bool)

(declare-fun e!86363 () Bool)

(assert (=> b!132439 (= e!86363 (= (apply!116 lt!69095 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun bm!14540 () Bool)

(assert (=> bm!14540 (= call!14540 call!14544)))

(declare-fun b!132440 () Bool)

(assert (=> b!132440 (= e!86361 e!86363)))

(declare-fun res!63793 () Bool)

(assert (=> b!132440 (= res!63793 call!14543)))

(assert (=> b!132440 (=> (not res!63793) (not e!86363))))

(declare-fun bm!14541 () Bool)

(assert (=> bm!14541 (= call!14546 call!14545)))

(declare-fun bm!14542 () Bool)

(assert (=> bm!14542 (= call!14542 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!132441 () Bool)

(assert (=> b!132441 (= e!86362 call!14540)))

(declare-fun b!132442 () Bool)

(declare-fun e!86354 () Bool)

(assert (=> b!132442 (= e!86354 e!86352)))

(declare-fun res!63797 () Bool)

(assert (=> b!132442 (=> (not res!63797) (not e!86352))))

(assert (=> b!132442 (= res!63797 (contains!899 lt!69095 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!132442 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!132443 () Bool)

(declare-fun res!63800 () Bool)

(assert (=> b!132443 (=> (not res!63800) (not e!86358))))

(assert (=> b!132443 (= res!63800 e!86354)))

(declare-fun res!63792 () Bool)

(assert (=> b!132443 (=> res!63792 e!86354)))

(assert (=> b!132443 (= res!63792 (not e!86359))))

(declare-fun res!63799 () Bool)

(assert (=> b!132443 (=> (not res!63799) (not e!86359))))

(assert (=> b!132443 (= res!63799 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun bm!14543 () Bool)

(assert (=> bm!14543 (= call!14545 call!14542)))

(declare-fun b!132444 () Bool)

(assert (=> b!132444 (= e!86356 (= (apply!116 lt!69095 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!132445 () Bool)

(assert (=> b!132445 (= e!86360 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!132446 () Bool)

(declare-fun Unit!4137 () Unit!4135)

(assert (=> b!132446 (= e!86364 Unit!4137)))

(assert (= (and d!40179 c!24451) b!132435))

(assert (= (and d!40179 (not c!24451)) b!132434))

(assert (= (and b!132434 c!24449) b!132430))

(assert (= (and b!132434 (not c!24449)) b!132431))

(assert (= (and b!132431 c!24452) b!132441))

(assert (= (and b!132431 (not c!24452)) b!132429))

(assert (= (or b!132441 b!132429) bm!14541))

(assert (= (or b!132430 bm!14541) bm!14543))

(assert (= (or b!132430 b!132441) bm!14540))

(assert (= (or b!132435 bm!14543) bm!14542))

(assert (= (or b!132435 bm!14540) bm!14539))

(assert (= (and d!40179 res!63794) b!132445))

(assert (= (and d!40179 c!24448) b!132426))

(assert (= (and d!40179 (not c!24448)) b!132446))

(assert (= (and d!40179 res!63795) b!132443))

(assert (= (and b!132443 res!63799) b!132433))

(assert (= (and b!132443 (not res!63792)) b!132442))

(assert (= (and b!132442 res!63797) b!132436))

(assert (= (and b!132443 res!63800) b!132437))

(assert (= (and b!132437 c!24447) b!132440))

(assert (= (and b!132437 (not c!24447)) b!132427))

(assert (= (and b!132440 res!63793) b!132439))

(assert (= (or b!132440 b!132427) bm!14537))

(assert (= (and b!132437 res!63796) b!132428))

(assert (= (and b!132428 c!24450) b!132438))

(assert (= (and b!132428 (not c!24450)) b!132432))

(assert (= (and b!132438 res!63798) b!132444))

(assert (= (or b!132438 b!132432) bm!14538))

(declare-fun b_lambda!5895 () Bool)

(assert (=> (not b_lambda!5895) (not b!132436)))

(assert (=> b!132436 t!6164))

(declare-fun b_and!8211 () Bool)

(assert (= b_and!8199 (and (=> t!6164 result!3983) b_and!8211)))

(assert (=> b!132436 t!6166))

(declare-fun b_and!8213 () Bool)

(assert (= b_and!8201 (and (=> t!6166 result!3987) b_and!8213)))

(declare-fun m!155941 () Bool)

(assert (=> bm!14542 m!155941))

(declare-fun m!155943 () Bool)

(assert (=> bm!14539 m!155943))

(declare-fun m!155945 () Bool)

(assert (=> b!132436 m!155945))

(assert (=> b!132436 m!155945))

(assert (=> b!132436 m!155893))

(declare-fun m!155947 () Bool)

(assert (=> b!132436 m!155947))

(declare-fun m!155949 () Bool)

(assert (=> b!132436 m!155949))

(assert (=> b!132436 m!155893))

(assert (=> b!132436 m!155949))

(declare-fun m!155951 () Bool)

(assert (=> b!132436 m!155951))

(declare-fun m!155953 () Bool)

(assert (=> bm!14537 m!155953))

(declare-fun m!155955 () Bool)

(assert (=> b!132435 m!155955))

(assert (=> b!132445 m!155949))

(assert (=> b!132445 m!155949))

(declare-fun m!155957 () Bool)

(assert (=> b!132445 m!155957))

(assert (=> d!40179 m!155867))

(declare-fun m!155959 () Bool)

(assert (=> b!132426 m!155959))

(declare-fun m!155961 () Bool)

(assert (=> b!132426 m!155961))

(declare-fun m!155963 () Bool)

(assert (=> b!132426 m!155963))

(declare-fun m!155965 () Bool)

(assert (=> b!132426 m!155965))

(assert (=> b!132426 m!155941))

(declare-fun m!155967 () Bool)

(assert (=> b!132426 m!155967))

(declare-fun m!155969 () Bool)

(assert (=> b!132426 m!155969))

(declare-fun m!155971 () Bool)

(assert (=> b!132426 m!155971))

(declare-fun m!155973 () Bool)

(assert (=> b!132426 m!155973))

(declare-fun m!155975 () Bool)

(assert (=> b!132426 m!155975))

(assert (=> b!132426 m!155959))

(declare-fun m!155977 () Bool)

(assert (=> b!132426 m!155977))

(assert (=> b!132426 m!155971))

(declare-fun m!155979 () Bool)

(assert (=> b!132426 m!155979))

(assert (=> b!132426 m!155963))

(declare-fun m!155981 () Bool)

(assert (=> b!132426 m!155981))

(assert (=> b!132426 m!155949))

(declare-fun m!155983 () Bool)

(assert (=> b!132426 m!155983))

(assert (=> b!132426 m!155961))

(declare-fun m!155985 () Bool)

(assert (=> b!132426 m!155985))

(declare-fun m!155987 () Bool)

(assert (=> b!132426 m!155987))

(declare-fun m!155989 () Bool)

(assert (=> bm!14538 m!155989))

(declare-fun m!155991 () Bool)

(assert (=> b!132439 m!155991))

(declare-fun m!155993 () Bool)

(assert (=> b!132444 m!155993))

(assert (=> b!132442 m!155949))

(assert (=> b!132442 m!155949))

(declare-fun m!155995 () Bool)

(assert (=> b!132442 m!155995))

(assert (=> b!132433 m!155949))

(assert (=> b!132433 m!155949))

(assert (=> b!132433 m!155957))

(assert (=> b!132307 d!40179))

(declare-fun bm!14546 () Bool)

(declare-fun call!14549 () Bool)

(assert (=> bm!14546 (= call!14549 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!132455 () Bool)

(declare-fun e!86373 () Bool)

(declare-fun e!86371 () Bool)

(assert (=> b!132455 (= e!86373 e!86371)))

(declare-fun c!24455 () Bool)

(assert (=> b!132455 (= c!24455 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!40181 () Bool)

(declare-fun res!63805 () Bool)

(assert (=> d!40181 (=> res!63805 e!86373)))

(assert (=> d!40181 (= res!63805 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!40181 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) e!86373)))

(declare-fun b!132456 () Bool)

(assert (=> b!132456 (= e!86371 call!14549)))

(declare-fun b!132457 () Bool)

(declare-fun e!86372 () Bool)

(assert (=> b!132457 (= e!86372 call!14549)))

(declare-fun b!132458 () Bool)

(assert (=> b!132458 (= e!86371 e!86372)))

(declare-fun lt!69106 () (_ BitVec 64))

(assert (=> b!132458 (= lt!69106 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!69107 () Unit!4135)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4781 (_ BitVec 64) (_ BitVec 32)) Unit!4135)

(assert (=> b!132458 (= lt!69107 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69106 #b00000000000000000000000000000000))))

(declare-fun arrayContainsKey!0 (array!4781 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!132458 (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69106 #b00000000000000000000000000000000)))

(declare-fun lt!69105 () Unit!4135)

(assert (=> b!132458 (= lt!69105 lt!69107)))

(declare-fun res!63806 () Bool)

(declare-datatypes ((SeekEntryResult!275 0))(
  ( (MissingZero!275 (index!3260 (_ BitVec 32))) (Found!275 (index!3261 (_ BitVec 32))) (Intermediate!275 (undefined!1087 Bool) (index!3262 (_ BitVec 32)) (x!15592 (_ BitVec 32))) (Undefined!275) (MissingVacant!275 (index!3263 (_ BitVec 32))) )
))
(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4781 (_ BitVec 32)) SeekEntryResult!275)

(assert (=> b!132458 (= res!63806 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (Found!275 #b00000000000000000000000000000000)))))

(assert (=> b!132458 (=> (not res!63806) (not e!86372))))

(assert (= (and d!40181 (not res!63805)) b!132455))

(assert (= (and b!132455 c!24455) b!132458))

(assert (= (and b!132455 (not c!24455)) b!132456))

(assert (= (and b!132458 res!63806) b!132457))

(assert (= (or b!132457 b!132456) bm!14546))

(declare-fun m!155997 () Bool)

(assert (=> bm!14546 m!155997))

(declare-fun m!155999 () Bool)

(assert (=> b!132455 m!155999))

(assert (=> b!132455 m!155999))

(declare-fun m!156001 () Bool)

(assert (=> b!132455 m!156001))

(assert (=> b!132458 m!155999))

(declare-fun m!156003 () Bool)

(assert (=> b!132458 m!156003))

(declare-fun m!156005 () Bool)

(assert (=> b!132458 m!156005))

(assert (=> b!132458 m!155999))

(declare-fun m!156007 () Bool)

(assert (=> b!132458 m!156007))

(assert (=> b!132306 d!40181))

(declare-fun bm!14549 () Bool)

(declare-fun call!14552 () Bool)

(declare-fun c!24458 () Bool)

(assert (=> bm!14549 (= call!14552 (arrayNoDuplicates!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)))))

(declare-fun b!132469 () Bool)

(declare-fun e!86385 () Bool)

(declare-fun e!86382 () Bool)

(assert (=> b!132469 (= e!86385 e!86382)))

(assert (=> b!132469 (= c!24458 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!132470 () Bool)

(declare-fun e!86383 () Bool)

(declare-fun contains!901 (List!1717 (_ BitVec 64)) Bool)

(assert (=> b!132470 (= e!86383 (contains!901 Nil!1714 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!132471 () Bool)

(assert (=> b!132471 (= e!86382 call!14552)))

(declare-fun b!132472 () Bool)

(declare-fun e!86384 () Bool)

(assert (=> b!132472 (= e!86384 e!86385)))

(declare-fun res!63815 () Bool)

(assert (=> b!132472 (=> (not res!63815) (not e!86385))))

(assert (=> b!132472 (= res!63815 (not e!86383))))

(declare-fun res!63814 () Bool)

(assert (=> b!132472 (=> (not res!63814) (not e!86383))))

(assert (=> b!132472 (= res!63814 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!132473 () Bool)

(assert (=> b!132473 (= e!86382 call!14552)))

(declare-fun d!40183 () Bool)

(declare-fun res!63813 () Bool)

(assert (=> d!40183 (=> res!63813 e!86384)))

(assert (=> d!40183 (= res!63813 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!40183 (= (arrayNoDuplicates!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000000 Nil!1714) e!86384)))

(assert (= (and d!40183 (not res!63813)) b!132472))

(assert (= (and b!132472 res!63814) b!132470))

(assert (= (and b!132472 res!63815) b!132469))

(assert (= (and b!132469 c!24458) b!132471))

(assert (= (and b!132469 (not c!24458)) b!132473))

(assert (= (or b!132471 b!132473) bm!14549))

(assert (=> bm!14549 m!155999))

(declare-fun m!156009 () Bool)

(assert (=> bm!14549 m!156009))

(assert (=> b!132469 m!155999))

(assert (=> b!132469 m!155999))

(assert (=> b!132469 m!156001))

(assert (=> b!132470 m!155999))

(assert (=> b!132470 m!155999))

(declare-fun m!156011 () Bool)

(assert (=> b!132470 m!156011))

(assert (=> b!132472 m!155999))

(assert (=> b!132472 m!155999))

(assert (=> b!132472 m!156001))

(assert (=> b!132311 d!40183))

(declare-fun d!40185 () Bool)

(assert (=> d!40185 (= (valid!523 thiss!992) (valid!524 (v!3199 (underlying!455 thiss!992))))))

(declare-fun bs!5475 () Bool)

(assert (= bs!5475 d!40185))

(declare-fun m!156013 () Bool)

(assert (=> bs!5475 m!156013))

(assert (=> start!14260 d!40185))

(declare-fun d!40187 () Bool)

(declare-fun res!63822 () Bool)

(declare-fun e!86388 () Bool)

(assert (=> d!40187 (=> (not res!63822) (not e!86388))))

(declare-fun simpleValid!92 (LongMapFixedSize!1098) Bool)

(assert (=> d!40187 (= res!63822 (simpleValid!92 newMap!16))))

(assert (=> d!40187 (= (valid!524 newMap!16) e!86388)))

(declare-fun b!132480 () Bool)

(declare-fun res!63823 () Bool)

(assert (=> b!132480 (=> (not res!63823) (not e!86388))))

(declare-fun arrayCountValidKeys!0 (array!4781 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!132480 (= res!63823 (= (arrayCountValidKeys!0 (_keys!4614 newMap!16) #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) (_size!598 newMap!16)))))

(declare-fun b!132481 () Bool)

(declare-fun res!63824 () Bool)

(assert (=> b!132481 (=> (not res!63824) (not e!86388))))

(assert (=> b!132481 (= res!63824 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!132482 () Bool)

(assert (=> b!132482 (= e!86388 (arrayNoDuplicates!0 (_keys!4614 newMap!16) #b00000000000000000000000000000000 Nil!1714))))

(assert (= (and d!40187 res!63822) b!132480))

(assert (= (and b!132480 res!63823) b!132481))

(assert (= (and b!132481 res!63824) b!132482))

(declare-fun m!156015 () Bool)

(assert (=> d!40187 m!156015))

(declare-fun m!156017 () Bool)

(assert (=> b!132480 m!156017))

(declare-fun m!156019 () Bool)

(assert (=> b!132481 m!156019))

(declare-fun m!156021 () Bool)

(assert (=> b!132482 m!156021))

(assert (=> b!132314 d!40187))

(declare-fun d!40189 () Bool)

(declare-fun e!86393 () Bool)

(assert (=> d!40189 e!86393))

(declare-fun res!63827 () Bool)

(assert (=> d!40189 (=> res!63827 e!86393)))

(declare-fun lt!69119 () Bool)

(assert (=> d!40189 (= res!63827 (not lt!69119))))

(declare-fun lt!69116 () Bool)

(assert (=> d!40189 (= lt!69119 lt!69116)))

(declare-fun lt!69118 () Unit!4135)

(declare-fun e!86394 () Unit!4135)

(assert (=> d!40189 (= lt!69118 e!86394)))

(declare-fun c!24461 () Bool)

(assert (=> d!40189 (= c!24461 lt!69116)))

(declare-fun containsKey!176 (List!1716 (_ BitVec 64)) Bool)

(assert (=> d!40189 (= lt!69116 (containsKey!176 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> d!40189 (= (contains!899 lt!69022 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) lt!69119)))

(declare-fun b!132489 () Bool)

(declare-fun lt!69117 () Unit!4135)

(assert (=> b!132489 (= e!86394 lt!69117)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!124 (List!1716 (_ BitVec 64)) Unit!4135)

(assert (=> b!132489 (= lt!69117 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-datatypes ((Option!178 0))(
  ( (Some!177 (v!3203 V!3483)) (None!176) )
))
(declare-fun isDefined!125 (Option!178) Bool)

(declare-fun getValueByKey!172 (List!1716 (_ BitVec 64)) Option!178)

(assert (=> b!132489 (isDefined!125 (getValueByKey!172 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!132490 () Bool)

(declare-fun Unit!4138 () Unit!4135)

(assert (=> b!132490 (= e!86394 Unit!4138)))

(declare-fun b!132491 () Bool)

(assert (=> b!132491 (= e!86393 (isDefined!125 (getValueByKey!172 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(assert (= (and d!40189 c!24461) b!132489))

(assert (= (and d!40189 (not c!24461)) b!132490))

(assert (= (and d!40189 (not res!63827)) b!132491))

(assert (=> d!40189 m!155869))

(declare-fun m!156023 () Bool)

(assert (=> d!40189 m!156023))

(assert (=> b!132489 m!155869))

(declare-fun m!156025 () Bool)

(assert (=> b!132489 m!156025))

(assert (=> b!132489 m!155869))

(declare-fun m!156027 () Bool)

(assert (=> b!132489 m!156027))

(assert (=> b!132489 m!156027))

(declare-fun m!156029 () Bool)

(assert (=> b!132489 m!156029))

(assert (=> b!132491 m!155869))

(assert (=> b!132491 m!156027))

(assert (=> b!132491 m!156027))

(assert (=> b!132491 m!156029))

(assert (=> b!132308 d!40189))

(declare-fun b!132572 () Bool)

(declare-fun e!86454 () Bool)

(declare-fun call!14620 () Bool)

(assert (=> b!132572 (= e!86454 (not call!14620))))

(declare-fun bm!14598 () Bool)

(declare-fun call!14611 () Bool)

(declare-fun call!14617 () Bool)

(assert (=> bm!14598 (= call!14611 call!14617)))

(declare-fun call!14619 () ListLongMap!1707)

(declare-fun b!132573 () Bool)

(declare-fun call!14603 () ListLongMap!1707)

(declare-fun e!86437 () Bool)

(assert (=> b!132573 (= e!86437 (= call!14619 (+!175 call!14603 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!132574 () Bool)

(declare-fun e!86449 () Unit!4135)

(declare-fun lt!69192 () Unit!4135)

(assert (=> b!132574 (= e!86449 lt!69192)))

(declare-fun call!14622 () Unit!4135)

(assert (=> b!132574 (= lt!69192 call!14622)))

(declare-fun lt!69185 () SeekEntryResult!275)

(declare-fun call!14607 () SeekEntryResult!275)

(assert (=> b!132574 (= lt!69185 call!14607)))

(declare-fun c!24496 () Bool)

(assert (=> b!132574 (= c!24496 ((_ is MissingZero!275) lt!69185))))

(declare-fun e!86443 () Bool)

(assert (=> b!132574 e!86443))

(declare-fun b!132575 () Bool)

(declare-fun e!86447 () Bool)

(declare-fun e!86441 () Bool)

(assert (=> b!132575 (= e!86447 e!86441)))

(declare-fun res!63869 () Bool)

(declare-fun call!14608 () Bool)

(assert (=> b!132575 (= res!63869 call!14608)))

(assert (=> b!132575 (=> (not res!63869) (not e!86441))))

(declare-fun bm!14599 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 64) Int) Unit!4135)

(assert (=> bm!14599 (= call!14622 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)))))

(declare-fun b!132576 () Bool)

(declare-fun e!86450 () tuple2!2628)

(declare-fun e!86445 () tuple2!2628)

(assert (=> b!132576 (= e!86450 e!86445)))

(declare-fun c!24497 () Bool)

(assert (=> b!132576 (= c!24497 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!14600 () Bool)

(declare-fun call!14605 () SeekEntryResult!275)

(assert (=> bm!14600 (= call!14607 call!14605)))

(declare-fun bm!14601 () Bool)

(declare-fun call!14610 () ListLongMap!1707)

(declare-fun call!14621 () ListLongMap!1707)

(assert (=> bm!14601 (= call!14610 call!14621)))

(declare-fun bm!14602 () Bool)

(assert (=> bm!14602 (= call!14617 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!132577 () Bool)

(assert (=> b!132577 (= e!86441 (not call!14611))))

(declare-fun b!132578 () Bool)

(declare-fun e!86446 () Bool)

(assert (=> b!132578 (= e!86446 (not call!14611))))

(declare-fun bm!14603 () Bool)

(declare-fun call!14616 () Bool)

(declare-fun call!14618 () Bool)

(assert (=> bm!14603 (= call!14616 call!14618)))

(declare-fun bm!14604 () Bool)

(declare-fun call!14601 () ListLongMap!1707)

(declare-fun call!14612 () ListLongMap!1707)

(assert (=> bm!14604 (= call!14601 call!14612)))

(declare-fun bm!14605 () Bool)

(declare-fun lt!69175 () SeekEntryResult!275)

(declare-fun call!14606 () Bool)

(declare-fun c!24492 () Bool)

(declare-fun call!14604 () ListLongMap!1707)

(assert (=> bm!14605 (= call!14606 (contains!899 call!14604 (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(declare-fun b!132579 () Bool)

(declare-fun e!86439 () Unit!4135)

(declare-fun Unit!4139 () Unit!4135)

(assert (=> b!132579 (= e!86439 Unit!4139)))

(declare-fun lt!69181 () Unit!4135)

(assert (=> b!132579 (= lt!69181 call!14622)))

(declare-fun lt!69196 () SeekEntryResult!275)

(declare-fun call!14609 () SeekEntryResult!275)

(assert (=> b!132579 (= lt!69196 call!14609)))

(declare-fun c!24499 () Bool)

(assert (=> b!132579 (= c!24499 ((_ is MissingZero!275) lt!69196))))

(declare-fun e!86453 () Bool)

(assert (=> b!132579 e!86453))

(declare-fun lt!69176 () Unit!4135)

(assert (=> b!132579 (= lt!69176 lt!69181)))

(assert (=> b!132579 false))

(declare-fun b!132580 () Bool)

(declare-fun lt!69187 () Unit!4135)

(declare-fun lt!69177 () Unit!4135)

(assert (=> b!132580 (= lt!69187 lt!69177)))

(assert (=> b!132580 call!14606))

(declare-fun lt!69190 () array!4783)

(declare-fun lemmaValidKeyInArrayIsInListMap!122 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) Int) Unit!4135)

(assert (=> b!132580 (= lt!69177 (lemmaValidKeyInArrayIsInListMap!122 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3261 lt!69175) (defaultEntry!2865 newMap!16)))))

(assert (=> b!132580 (= lt!69190 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))))

(declare-fun lt!69178 () Unit!4135)

(declare-fun lt!69186 () Unit!4135)

(assert (=> b!132580 (= lt!69178 lt!69186)))

(declare-fun call!14624 () ListLongMap!1707)

(assert (=> b!132580 (= call!14624 call!14612)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!61 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) (_ BitVec 64) V!3483 Int) Unit!4135)

(assert (=> b!132580 (= lt!69186 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3261 lt!69175) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69182 () Unit!4135)

(assert (=> b!132580 (= lt!69182 e!86439)))

(declare-fun c!24500 () Bool)

(assert (=> b!132580 (= c!24500 (contains!899 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun e!86457 () tuple2!2628)

(assert (=> b!132580 (= e!86457 (tuple2!2629 true (LongMapFixedSize!1099 (defaultEntry!2865 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (_size!598 newMap!16) (_keys!4614 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (_vacant!598 newMap!16))))))

(declare-fun b!132581 () Bool)

(declare-fun c!24489 () Bool)

(assert (=> b!132581 (= c!24489 ((_ is MissingVacant!275) lt!69175))))

(declare-fun e!86438 () tuple2!2628)

(declare-fun e!86452 () tuple2!2628)

(assert (=> b!132581 (= e!86438 e!86452)))

(declare-fun bm!14606 () Bool)

(assert (=> bm!14606 (= call!14603 (map!1409 newMap!16))))

(declare-fun e!86440 () Bool)

(declare-fun lt!69198 () SeekEntryResult!275)

(declare-fun b!132582 () Bool)

(assert (=> b!132582 (= e!86440 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69198)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!132583 () Bool)

(declare-fun e!86455 () ListLongMap!1707)

(assert (=> b!132583 (= e!86455 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun bm!14607 () Bool)

(declare-fun lt!69180 () (_ BitVec 32))

(declare-fun c!24491 () Bool)

(declare-fun lt!69189 () (_ BitVec 32))

(assert (=> bm!14607 (= call!14621 (getCurrentListMap!546 (_keys!4614 newMap!16) (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190) (mask!7165 newMap!16) (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!132584 () Bool)

(declare-fun lt!69194 () Unit!4135)

(assert (=> b!132584 (= lt!69194 e!86449)))

(declare-fun c!24490 () Bool)

(assert (=> b!132584 (= c!24490 call!14606)))

(assert (=> b!132584 (= e!86438 (tuple2!2629 false newMap!16))))

(declare-fun b!132585 () Bool)

(declare-fun e!86451 () Bool)

(assert (=> b!132585 (= e!86451 e!86437)))

(declare-fun res!63865 () Bool)

(assert (=> b!132585 (= res!63865 (contains!899 call!14619 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> b!132585 (=> (not res!63865) (not e!86437))))

(declare-fun b!132586 () Bool)

(declare-fun lt!69184 () Unit!4135)

(declare-fun lt!69191 () Unit!4135)

(assert (=> b!132586 (= lt!69184 lt!69191)))

(declare-fun call!14623 () ListLongMap!1707)

(assert (=> b!132586 (= call!14623 call!14610)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!61 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 V!3483 Int) Unit!4135)

(assert (=> b!132586 (= lt!69191 (lemmaChangeLongMinValueKeyThenAddPairToListMap!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69180 (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)))))

(assert (=> b!132586 (= lt!69180 (bvor (extraKeys!2630 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!132586 (= e!86445 (tuple2!2629 true (LongMapFixedSize!1099 (defaultEntry!2865 newMap!16) (mask!7165 newMap!16) (bvor (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!598 newMap!16) (_keys!4614 newMap!16) (_values!2848 newMap!16) (_vacant!598 newMap!16))))))

(declare-fun bm!14608 () Bool)

(assert (=> bm!14608 (= call!14608 call!14616)))

(declare-fun bm!14609 () Bool)

(declare-fun call!14615 () Bool)

(assert (=> bm!14609 (= call!14615 call!14618)))

(declare-fun b!132587 () Bool)

(declare-fun res!63861 () Bool)

(assert (=> b!132587 (= res!63861 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3263 lt!69185)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132587 (=> (not res!63861) (not e!86441))))

(declare-fun bm!14610 () Bool)

(assert (=> bm!14610 (= call!14612 (getCurrentListMap!546 (_keys!4614 newMap!16) (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!132588 () Bool)

(declare-fun res!63866 () Bool)

(assert (=> b!132588 (=> (not res!63866) (not e!86446))))

(assert (=> b!132588 (= res!63866 call!14608)))

(assert (=> b!132588 (= e!86443 e!86446)))

(declare-fun b!132589 () Bool)

(declare-fun res!63860 () Bool)

(assert (=> b!132589 (= res!63860 call!14616)))

(declare-fun e!86448 () Bool)

(assert (=> b!132589 (=> (not res!63860) (not e!86448))))

(declare-fun b!132590 () Bool)

(declare-fun res!63862 () Bool)

(assert (=> b!132590 (= res!63862 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3263 lt!69196)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86444 () Bool)

(assert (=> b!132590 (=> (not res!63862) (not e!86444))))

(declare-fun b!132591 () Bool)

(declare-fun e!86456 () Bool)

(assert (=> b!132591 (= e!86456 e!86444)))

(declare-fun res!63867 () Bool)

(declare-fun call!14613 () Bool)

(assert (=> b!132591 (= res!63867 call!14613)))

(assert (=> b!132591 (=> (not res!63867) (not e!86444))))

(declare-fun bm!14611 () Bool)

(assert (=> bm!14611 (= call!14623 call!14624)))

(declare-fun b!132592 () Bool)

(declare-fun lt!69193 () Unit!4135)

(assert (=> b!132592 (= e!86439 lt!69193)))

(declare-fun call!14602 () Unit!4135)

(assert (=> b!132592 (= lt!69193 call!14602)))

(assert (=> b!132592 (= lt!69198 call!14609)))

(declare-fun res!63856 () Bool)

(assert (=> b!132592 (= res!63856 ((_ is Found!275) lt!69198))))

(assert (=> b!132592 (=> (not res!63856) (not e!86440))))

(assert (=> b!132592 e!86440))

(declare-fun b!132593 () Bool)

(declare-fun lt!69197 () tuple2!2628)

(declare-fun call!14614 () tuple2!2628)

(assert (=> b!132593 (= lt!69197 call!14614)))

(assert (=> b!132593 (= e!86457 (tuple2!2629 (_1!1325 lt!69197) (_2!1325 lt!69197)))))

(declare-fun b!132594 () Bool)

(declare-fun c!24495 () Bool)

(assert (=> b!132594 (= c!24495 ((_ is MissingVacant!275) lt!69196))))

(assert (=> b!132594 (= e!86453 e!86456)))

(declare-fun bm!14612 () Bool)

(assert (=> bm!14612 (= call!14624 (+!175 e!86455 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!24493 () Bool)

(assert (=> bm!14612 (= c!24493 c!24491)))

(declare-fun bm!14613 () Bool)

(assert (=> bm!14613 (= call!14605 (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!132595 () Bool)

(declare-fun lt!69188 () Unit!4135)

(declare-fun lt!69200 () Unit!4135)

(assert (=> b!132595 (= lt!69188 lt!69200)))

(assert (=> b!132595 (= call!14623 call!14610)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!61 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 V!3483 Int) Unit!4135)

(assert (=> b!132595 (= lt!69200 (lemmaChangeZeroKeyThenAddPairToListMap!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69189 (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) (defaultEntry!2865 newMap!16)))))

(assert (=> b!132595 (= lt!69189 (bvor (extraKeys!2630 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!132595 (= e!86445 (tuple2!2629 true (LongMapFixedSize!1099 (defaultEntry!2865 newMap!16) (mask!7165 newMap!16) (bvor (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) (_size!598 newMap!16) (_keys!4614 newMap!16) (_values!2848 newMap!16) (_vacant!598 newMap!16))))))

(declare-fun b!132596 () Bool)

(assert (=> b!132596 (= e!86452 e!86457)))

(declare-fun c!24488 () Bool)

(assert (=> b!132596 (= c!24488 ((_ is MissingZero!275) lt!69175))))

(declare-fun b!132597 () Bool)

(declare-fun res!63863 () Bool)

(assert (=> b!132597 (=> (not res!63863) (not e!86454))))

(assert (=> b!132597 (= res!63863 call!14613)))

(assert (=> b!132597 (= e!86453 e!86454)))

(declare-fun b!132598 () Bool)

(assert (=> b!132598 (= e!86456 ((_ is Undefined!275) lt!69196))))

(declare-fun b!132599 () Bool)

(declare-fun res!63857 () Bool)

(assert (=> b!132599 (=> (not res!63857) (not e!86446))))

(assert (=> b!132599 (= res!63857 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3260 lt!69185)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132600 () Bool)

(assert (=> b!132600 (= e!86444 (not call!14620))))

(declare-fun bm!14614 () Bool)

(declare-fun updateHelperNewKey!61 (LongMapFixedSize!1098 (_ BitVec 64) V!3483 (_ BitVec 32)) tuple2!2628)

(assert (=> bm!14614 (= call!14614 (updateHelperNewKey!61 newMap!16 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))))))

(declare-fun b!132601 () Bool)

(assert (=> b!132601 (= e!86451 (= call!14619 call!14603))))

(declare-fun bm!14615 () Bool)

(assert (=> bm!14615 (= call!14609 call!14605)))

(declare-fun b!132602 () Bool)

(declare-fun res!63859 () Bool)

(assert (=> b!132602 (=> (not res!63859) (not e!86454))))

(assert (=> b!132602 (= res!63859 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3260 lt!69196)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132603 () Bool)

(declare-fun lt!69183 () tuple2!2628)

(assert (=> b!132603 (= e!86452 (tuple2!2629 (_1!1325 lt!69183) (_2!1325 lt!69183)))))

(assert (=> b!132603 (= lt!69183 call!14614)))

(declare-fun bm!14616 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 64) Int) Unit!4135)

(assert (=> bm!14616 (= call!14602 (lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)))))

(declare-fun b!132604 () Bool)

(declare-fun res!63858 () Bool)

(assert (=> b!132604 (= res!63858 call!14615)))

(assert (=> b!132604 (=> (not res!63858) (not e!86440))))

(declare-fun bm!14617 () Bool)

(declare-fun lt!69179 () tuple2!2628)

(assert (=> bm!14617 (= call!14619 (map!1409 (_2!1325 lt!69179)))))

(declare-fun bm!14618 () Bool)

(assert (=> bm!14618 (= call!14620 call!14617)))

(declare-fun b!132605 () Bool)

(declare-fun c!24494 () Bool)

(assert (=> b!132605 (= c!24494 ((_ is MissingVacant!275) lt!69185))))

(assert (=> b!132605 (= e!86443 e!86447)))

(declare-fun b!132606 () Bool)

(declare-fun Unit!4140 () Unit!4135)

(assert (=> b!132606 (= e!86449 Unit!4140)))

(declare-fun lt!69199 () Unit!4135)

(assert (=> b!132606 (= lt!69199 call!14602)))

(declare-fun lt!69195 () SeekEntryResult!275)

(assert (=> b!132606 (= lt!69195 call!14607)))

(declare-fun res!63864 () Bool)

(assert (=> b!132606 (= res!63864 ((_ is Found!275) lt!69195))))

(assert (=> b!132606 (=> (not res!63864) (not e!86448))))

(assert (=> b!132606 e!86448))

(declare-fun lt!69174 () Unit!4135)

(assert (=> b!132606 (= lt!69174 lt!69199)))

(assert (=> b!132606 false))

(declare-fun d!40191 () Bool)

(declare-fun e!86442 () Bool)

(assert (=> d!40191 e!86442))

(declare-fun res!63868 () Bool)

(assert (=> d!40191 (=> (not res!63868) (not e!86442))))

(assert (=> d!40191 (= res!63868 (valid!524 (_2!1325 lt!69179)))))

(assert (=> d!40191 (= lt!69179 e!86450)))

(assert (=> d!40191 (= c!24491 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (bvneg (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(assert (=> d!40191 (valid!524 newMap!16)))

(assert (=> d!40191 (= (update!194 newMap!16 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!69179)))

(declare-fun b!132607 () Bool)

(assert (=> b!132607 (= e!86442 e!86451)))

(declare-fun c!24498 () Bool)

(assert (=> b!132607 (= c!24498 (_1!1325 lt!69179))))

(declare-fun b!132608 () Bool)

(assert (=> b!132608 (= e!86450 e!86438)))

(assert (=> b!132608 (= lt!69175 (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (=> b!132608 (= c!24492 ((_ is Undefined!275) lt!69175))))

(declare-fun bm!14619 () Bool)

(assert (=> bm!14619 (= call!14604 call!14621)))

(declare-fun b!132609 () Bool)

(assert (=> b!132609 (= e!86455 call!14601)))

(declare-fun b!132610 () Bool)

(assert (=> b!132610 (= e!86448 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69195)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!132611 () Bool)

(assert (=> b!132611 (= e!86447 ((_ is Undefined!275) lt!69185))))

(declare-fun bm!14620 () Bool)

(assert (=> bm!14620 (= call!14613 call!14615)))

(declare-fun bm!14621 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!14621 (= call!14618 (inRange!0 (ite c!24492 (ite c!24490 (index!3261 lt!69195) (ite c!24496 (index!3260 lt!69185) (index!3263 lt!69185))) (ite c!24500 (index!3261 lt!69198) (ite c!24499 (index!3260 lt!69196) (index!3263 lt!69196)))) (mask!7165 newMap!16)))))

(assert (= (and d!40191 c!24491) b!132576))

(assert (= (and d!40191 (not c!24491)) b!132608))

(assert (= (and b!132576 c!24497) b!132595))

(assert (= (and b!132576 (not c!24497)) b!132586))

(assert (= (or b!132595 b!132586) bm!14604))

(assert (= (or b!132595 b!132586) bm!14601))

(assert (= (or b!132595 b!132586) bm!14611))

(assert (= (and b!132608 c!24492) b!132584))

(assert (= (and b!132608 (not c!24492)) b!132581))

(assert (= (and b!132584 c!24490) b!132606))

(assert (= (and b!132584 (not c!24490)) b!132574))

(assert (= (and b!132606 res!63864) b!132589))

(assert (= (and b!132589 res!63860) b!132610))

(assert (= (and b!132574 c!24496) b!132588))

(assert (= (and b!132574 (not c!24496)) b!132605))

(assert (= (and b!132588 res!63866) b!132599))

(assert (= (and b!132599 res!63857) b!132578))

(assert (= (and b!132605 c!24494) b!132575))

(assert (= (and b!132605 (not c!24494)) b!132611))

(assert (= (and b!132575 res!63869) b!132587))

(assert (= (and b!132587 res!63861) b!132577))

(assert (= (or b!132588 b!132575) bm!14608))

(assert (= (or b!132578 b!132577) bm!14598))

(assert (= (or b!132589 bm!14608) bm!14603))

(assert (= (or b!132606 b!132574) bm!14600))

(assert (= (and b!132581 c!24489) b!132603))

(assert (= (and b!132581 (not c!24489)) b!132596))

(assert (= (and b!132596 c!24488) b!132593))

(assert (= (and b!132596 (not c!24488)) b!132580))

(assert (= (and b!132580 c!24500) b!132592))

(assert (= (and b!132580 (not c!24500)) b!132579))

(assert (= (and b!132592 res!63856) b!132604))

(assert (= (and b!132604 res!63858) b!132582))

(assert (= (and b!132579 c!24499) b!132597))

(assert (= (and b!132579 (not c!24499)) b!132594))

(assert (= (and b!132597 res!63863) b!132602))

(assert (= (and b!132602 res!63859) b!132572))

(assert (= (and b!132594 c!24495) b!132591))

(assert (= (and b!132594 (not c!24495)) b!132598))

(assert (= (and b!132591 res!63867) b!132590))

(assert (= (and b!132590 res!63862) b!132600))

(assert (= (or b!132597 b!132591) bm!14620))

(assert (= (or b!132572 b!132600) bm!14618))

(assert (= (or b!132604 bm!14620) bm!14609))

(assert (= (or b!132592 b!132579) bm!14615))

(assert (= (or b!132603 b!132593) bm!14614))

(assert (= (or bm!14598 bm!14618) bm!14602))

(assert (= (or bm!14603 bm!14609) bm!14621))

(assert (= (or b!132606 b!132592) bm!14616))

(assert (= (or b!132574 b!132579) bm!14599))

(assert (= (or b!132584 b!132580) bm!14619))

(assert (= (or bm!14600 bm!14615) bm!14613))

(assert (= (or b!132584 b!132580) bm!14605))

(assert (= (or bm!14601 bm!14619) bm!14607))

(assert (= (or bm!14604 b!132580) bm!14610))

(assert (= (or bm!14611 b!132580) bm!14612))

(assert (= (and bm!14612 c!24493) b!132609))

(assert (= (and bm!14612 (not c!24493)) b!132583))

(assert (= (and d!40191 res!63868) b!132607))

(assert (= (and b!132607 c!24498) b!132585))

(assert (= (and b!132607 (not c!24498)) b!132601))

(assert (= (and b!132585 res!63865) b!132573))

(assert (= (or b!132585 b!132573 b!132601) bm!14617))

(assert (= (or b!132573 b!132601) bm!14606))

(declare-fun m!156031 () Bool)

(assert (=> b!132610 m!156031))

(declare-fun m!156033 () Bool)

(assert (=> b!132590 m!156033))

(declare-fun m!156035 () Bool)

(assert (=> d!40191 m!156035))

(assert (=> d!40191 m!155881))

(assert (=> b!132608 m!155869))

(declare-fun m!156037 () Bool)

(assert (=> b!132608 m!156037))

(assert (=> b!132595 m!155895))

(declare-fun m!156039 () Bool)

(assert (=> b!132595 m!156039))

(declare-fun m!156041 () Bool)

(assert (=> b!132599 m!156041))

(declare-fun m!156043 () Bool)

(assert (=> b!132580 m!156043))

(declare-fun m!156045 () Bool)

(assert (=> b!132580 m!156045))

(assert (=> b!132580 m!155939))

(assert (=> b!132580 m!155939))

(assert (=> b!132580 m!155869))

(declare-fun m!156047 () Bool)

(assert (=> b!132580 m!156047))

(assert (=> b!132580 m!155869))

(assert (=> b!132580 m!155895))

(declare-fun m!156049 () Bool)

(assert (=> b!132580 m!156049))

(declare-fun m!156051 () Bool)

(assert (=> bm!14617 m!156051))

(assert (=> bm!14610 m!156043))

(declare-fun m!156053 () Bool)

(assert (=> bm!14610 m!156053))

(declare-fun m!156055 () Bool)

(assert (=> b!132582 m!156055))

(assert (=> bm!14614 m!155869))

(assert (=> bm!14614 m!155895))

(declare-fun m!156057 () Bool)

(assert (=> bm!14614 m!156057))

(assert (=> bm!14616 m!155869))

(declare-fun m!156059 () Bool)

(assert (=> bm!14616 m!156059))

(assert (=> b!132585 m!155869))

(declare-fun m!156061 () Bool)

(assert (=> b!132585 m!156061))

(declare-fun m!156063 () Bool)

(assert (=> bm!14621 m!156063))

(assert (=> bm!14602 m!155869))

(declare-fun m!156065 () Bool)

(assert (=> bm!14602 m!156065))

(declare-fun m!156067 () Bool)

(assert (=> bm!14612 m!156067))

(declare-fun m!156069 () Bool)

(assert (=> bm!14605 m!156069))

(declare-fun m!156071 () Bool)

(assert (=> bm!14605 m!156071))

(assert (=> bm!14599 m!155869))

(declare-fun m!156073 () Bool)

(assert (=> bm!14599 m!156073))

(declare-fun m!156075 () Bool)

(assert (=> b!132587 m!156075))

(assert (=> bm!14606 m!155871))

(assert (=> b!132583 m!155939))

(declare-fun m!156077 () Bool)

(assert (=> b!132602 m!156077))

(assert (=> b!132586 m!155895))

(declare-fun m!156079 () Bool)

(assert (=> b!132586 m!156079))

(assert (=> bm!14613 m!155869))

(assert (=> bm!14613 m!156037))

(declare-fun m!156081 () Bool)

(assert (=> bm!14607 m!156081))

(declare-fun m!156083 () Bool)

(assert (=> b!132573 m!156083))

(assert (=> b!132308 d!40191))

(declare-fun d!40193 () Bool)

(declare-fun c!24503 () Bool)

(assert (=> d!40193 (= c!24503 ((_ is ValueCellFull!1095) (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun e!86460 () V!3483)

(assert (=> d!40193 (= (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!86460)))

(declare-fun b!132616 () Bool)

(declare-fun get!1484 (ValueCell!1095 V!3483) V!3483)

(assert (=> b!132616 (= e!86460 (get!1484 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!132617 () Bool)

(declare-fun get!1485 (ValueCell!1095 V!3483) V!3483)

(assert (=> b!132617 (= e!86460 (get!1485 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40193 c!24503) b!132616))

(assert (= (and d!40193 (not c!24503)) b!132617))

(assert (=> b!132616 m!155891))

(assert (=> b!132616 m!155893))

(declare-fun m!156085 () Bool)

(assert (=> b!132616 m!156085))

(assert (=> b!132617 m!155891))

(assert (=> b!132617 m!155893))

(declare-fun m!156087 () Bool)

(assert (=> b!132617 m!156087))

(assert (=> b!132308 d!40193))

(declare-fun d!40195 () Bool)

(assert (=> d!40195 (= (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992)))) (and (or (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000001111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000011111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000001111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000011111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000001111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000011111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000001111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000011111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000111111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000001111111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000011111111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000111111111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000001111111111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000011111111111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000111111111111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000001111111111111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000011111111111111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000111111111111111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000001111111111111111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000011111111111111111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000111111111111111111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00001111111111111111111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00011111111111111111111111111111) (= (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!132304 d!40195))

(declare-fun b!132625 () Bool)

(declare-fun e!86466 () Bool)

(assert (=> b!132625 (= e!86466 tp_is_empty!2877)))

(declare-fun mapNonEmpty!4653 () Bool)

(declare-fun mapRes!4653 () Bool)

(declare-fun tp!11223 () Bool)

(declare-fun e!86465 () Bool)

(assert (=> mapNonEmpty!4653 (= mapRes!4653 (and tp!11223 e!86465))))

(declare-fun mapRest!4653 () (Array (_ BitVec 32) ValueCell!1095))

(declare-fun mapKey!4653 () (_ BitVec 32))

(declare-fun mapValue!4653 () ValueCell!1095)

(assert (=> mapNonEmpty!4653 (= mapRest!4644 (store mapRest!4653 mapKey!4653 mapValue!4653))))

(declare-fun condMapEmpty!4653 () Bool)

(declare-fun mapDefault!4653 () ValueCell!1095)

(assert (=> mapNonEmpty!4643 (= condMapEmpty!4653 (= mapRest!4644 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4653)))))

(assert (=> mapNonEmpty!4643 (= tp!11208 (and e!86466 mapRes!4653))))

(declare-fun mapIsEmpty!4653 () Bool)

(assert (=> mapIsEmpty!4653 mapRes!4653))

(declare-fun b!132624 () Bool)

(assert (=> b!132624 (= e!86465 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4643 condMapEmpty!4653) mapIsEmpty!4653))

(assert (= (and mapNonEmpty!4643 (not condMapEmpty!4653)) mapNonEmpty!4653))

(assert (= (and mapNonEmpty!4653 ((_ is ValueCellFull!1095) mapValue!4653)) b!132624))

(assert (= (and mapNonEmpty!4643 ((_ is ValueCellFull!1095) mapDefault!4653)) b!132625))

(declare-fun m!156089 () Bool)

(assert (=> mapNonEmpty!4653 m!156089))

(declare-fun b!132627 () Bool)

(declare-fun e!86468 () Bool)

(assert (=> b!132627 (= e!86468 tp_is_empty!2877)))

(declare-fun mapNonEmpty!4654 () Bool)

(declare-fun mapRes!4654 () Bool)

(declare-fun tp!11224 () Bool)

(declare-fun e!86467 () Bool)

(assert (=> mapNonEmpty!4654 (= mapRes!4654 (and tp!11224 e!86467))))

(declare-fun mapRest!4654 () (Array (_ BitVec 32) ValueCell!1095))

(declare-fun mapKey!4654 () (_ BitVec 32))

(declare-fun mapValue!4654 () ValueCell!1095)

(assert (=> mapNonEmpty!4654 (= mapRest!4643 (store mapRest!4654 mapKey!4654 mapValue!4654))))

(declare-fun condMapEmpty!4654 () Bool)

(declare-fun mapDefault!4654 () ValueCell!1095)

(assert (=> mapNonEmpty!4644 (= condMapEmpty!4654 (= mapRest!4643 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4654)))))

(assert (=> mapNonEmpty!4644 (= tp!11205 (and e!86468 mapRes!4654))))

(declare-fun mapIsEmpty!4654 () Bool)

(assert (=> mapIsEmpty!4654 mapRes!4654))

(declare-fun b!132626 () Bool)

(assert (=> b!132626 (= e!86467 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4644 condMapEmpty!4654) mapIsEmpty!4654))

(assert (= (and mapNonEmpty!4644 (not condMapEmpty!4654)) mapNonEmpty!4654))

(assert (= (and mapNonEmpty!4654 ((_ is ValueCellFull!1095) mapValue!4654)) b!132626))

(assert (= (and mapNonEmpty!4644 ((_ is ValueCellFull!1095) mapDefault!4654)) b!132627))

(declare-fun m!156091 () Bool)

(assert (=> mapNonEmpty!4654 m!156091))

(declare-fun b_lambda!5897 () Bool)

(assert (= b_lambda!5895 (or (and b!132300 b_free!2921) (and b!132303 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))))) b_lambda!5897)))

(check-sat (not bm!14602) (not bm!14621) (not bm!14607) (not b!132489) (not bm!14613) (not b!132455) (not bm!14606) (not b_lambda!5897) (not b!132458) (not b!132580) (not b!132585) (not b_next!2923) (not b!132426) (not b!132482) (not b!132472) (not bm!14599) (not d!40189) (not bm!14605) b_and!8213 (not b!132480) (not d!40187) (not b!132439) (not b!132436) (not b!132469) (not bm!14537) (not bm!14538) (not b!132435) (not b!132617) (not mapNonEmpty!4653) tp_is_empty!2877 (not bm!14616) (not d!40177) (not bm!14610) (not b!132586) (not b!132433) (not bm!14542) (not b!132608) (not b_lambda!5893) (not b!132470) (not b!132445) (not bm!14549) (not b!132616) (not bm!14617) (not d!40179) (not b!132583) b_and!8211 (not bm!14539) (not b!132444) (not d!40191) (not bm!14612) (not b!132491) (not bm!14546) (not b!132573) (not bm!14614) (not d!40185) (not mapNonEmpty!4654) (not b!132595) (not b_next!2921) (not b!132442) (not b!132481))
(check-sat b_and!8211 b_and!8213 (not b_next!2921) (not b_next!2923))
(get-model)

(declare-fun d!40197 () Bool)

(assert (=> d!40197 (= (map!1409 (_2!1325 lt!69179)) (getCurrentListMap!546 (_keys!4614 (_2!1325 lt!69179)) (_values!2848 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179)) (extraKeys!2630 (_2!1325 lt!69179)) (zeroValue!2720 (_2!1325 lt!69179)) (minValue!2720 (_2!1325 lt!69179)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1325 lt!69179))))))

(declare-fun bs!5476 () Bool)

(assert (= bs!5476 d!40197))

(declare-fun m!156093 () Bool)

(assert (=> bs!5476 m!156093))

(assert (=> bm!14617 d!40197))

(declare-fun d!40199 () Bool)

(declare-fun e!86471 () Bool)

(assert (=> d!40199 e!86471))

(declare-fun res!63875 () Bool)

(assert (=> d!40199 (=> (not res!63875) (not e!86471))))

(declare-fun lt!69209 () ListLongMap!1707)

(assert (=> d!40199 (= res!63875 (contains!899 lt!69209 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun lt!69211 () List!1716)

(assert (=> d!40199 (= lt!69209 (ListLongMap!1708 lt!69211))))

(declare-fun lt!69212 () Unit!4135)

(declare-fun lt!69210 () Unit!4135)

(assert (=> d!40199 (= lt!69212 lt!69210)))

(assert (=> d!40199 (= (getValueByKey!172 lt!69211 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) (Some!177 (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!87 (List!1716 (_ BitVec 64) V!3483) Unit!4135)

(assert (=> d!40199 (= lt!69210 (lemmaContainsTupThenGetReturnValue!87 lt!69211 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun insertStrictlySorted!90 (List!1716 (_ BitVec 64) V!3483) List!1716)

(assert (=> d!40199 (= lt!69211 (insertStrictlySorted!90 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!40199 (= (+!175 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)) (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69209)))

(declare-fun b!132632 () Bool)

(declare-fun res!63874 () Bool)

(assert (=> b!132632 (=> (not res!63874) (not e!86471))))

(assert (=> b!132632 (= res!63874 (= (getValueByKey!172 (toList!869 lt!69209) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) (Some!177 (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun b!132633 () Bool)

(declare-fun contains!902 (List!1716 tuple2!2626) Bool)

(assert (=> b!132633 (= e!86471 (contains!902 (toList!869 lt!69209) (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!40199 res!63875) b!132632))

(assert (= (and b!132632 res!63874) b!132633))

(declare-fun m!156095 () Bool)

(assert (=> d!40199 m!156095))

(declare-fun m!156097 () Bool)

(assert (=> d!40199 m!156097))

(declare-fun m!156099 () Bool)

(assert (=> d!40199 m!156099))

(declare-fun m!156101 () Bool)

(assert (=> d!40199 m!156101))

(declare-fun m!156103 () Bool)

(assert (=> b!132632 m!156103))

(declare-fun m!156105 () Bool)

(assert (=> b!132633 m!156105))

(assert (=> bm!14539 d!40199))

(declare-fun d!40201 () Bool)

(declare-fun e!86472 () Bool)

(assert (=> d!40201 e!86472))

(declare-fun res!63876 () Bool)

(assert (=> d!40201 (=> res!63876 e!86472)))

(declare-fun lt!69216 () Bool)

(assert (=> d!40201 (= res!63876 (not lt!69216))))

(declare-fun lt!69213 () Bool)

(assert (=> d!40201 (= lt!69216 lt!69213)))

(declare-fun lt!69215 () Unit!4135)

(declare-fun e!86473 () Unit!4135)

(assert (=> d!40201 (= lt!69215 e!86473)))

(declare-fun c!24504 () Bool)

(assert (=> d!40201 (= c!24504 lt!69213)))

(assert (=> d!40201 (= lt!69213 (containsKey!176 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(assert (=> d!40201 (= (contains!899 call!14604 (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))) lt!69216)))

(declare-fun b!132634 () Bool)

(declare-fun lt!69214 () Unit!4135)

(assert (=> b!132634 (= e!86473 lt!69214)))

(assert (=> b!132634 (= lt!69214 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(assert (=> b!132634 (isDefined!125 (getValueByKey!172 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(declare-fun b!132635 () Bool)

(declare-fun Unit!4141 () Unit!4135)

(assert (=> b!132635 (= e!86473 Unit!4141)))

(declare-fun b!132636 () Bool)

(assert (=> b!132636 (= e!86472 (isDefined!125 (getValueByKey!172 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))))

(assert (= (and d!40201 c!24504) b!132634))

(assert (= (and d!40201 (not c!24504)) b!132635))

(assert (= (and d!40201 (not res!63876)) b!132636))

(declare-fun m!156107 () Bool)

(assert (=> d!40201 m!156107))

(declare-fun m!156109 () Bool)

(assert (=> b!132634 m!156109))

(declare-fun m!156111 () Bool)

(assert (=> b!132634 m!156111))

(assert (=> b!132634 m!156111))

(declare-fun m!156113 () Bool)

(assert (=> b!132634 m!156113))

(assert (=> b!132636 m!156111))

(assert (=> b!132636 m!156111))

(assert (=> b!132636 m!156113))

(assert (=> bm!14605 d!40201))

(declare-fun d!40203 () Bool)

(assert (=> d!40203 (= (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132472 d!40203))

(declare-fun d!40205 () Bool)

(declare-fun get!1486 (Option!178) V!3483)

(assert (=> d!40205 (= (apply!116 lt!69095 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1486 (getValueByKey!172 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5477 () Bool)

(assert (= bs!5477 d!40205))

(assert (=> bs!5477 m!155949))

(declare-fun m!156115 () Bool)

(assert (=> bs!5477 m!156115))

(assert (=> bs!5477 m!156115))

(declare-fun m!156117 () Bool)

(assert (=> bs!5477 m!156117))

(assert (=> b!132436 d!40205))

(declare-fun d!40207 () Bool)

(declare-fun c!24505 () Bool)

(assert (=> d!40207 (= c!24505 ((_ is ValueCellFull!1095) (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!86474 () V!3483)

(assert (=> d!40207 (= (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!86474)))

(declare-fun b!132637 () Bool)

(assert (=> b!132637 (= e!86474 (get!1484 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!132638 () Bool)

(assert (=> b!132638 (= e!86474 (get!1485 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40207 c!24505) b!132637))

(assert (= (and d!40207 (not c!24505)) b!132638))

(assert (=> b!132637 m!155945))

(assert (=> b!132637 m!155893))

(declare-fun m!156119 () Bool)

(assert (=> b!132637 m!156119))

(assert (=> b!132638 m!155945))

(assert (=> b!132638 m!155893))

(declare-fun m!156121 () Bool)

(assert (=> b!132638 m!156121))

(assert (=> b!132436 d!40207))

(declare-fun d!40209 () Bool)

(assert (=> d!40209 (= (get!1484 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3198 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> b!132616 d!40209))

(declare-fun d!40211 () Bool)

(assert (=> d!40211 (isDefined!125 (getValueByKey!172 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun lt!69219 () Unit!4135)

(declare-fun choose!817 (List!1716 (_ BitVec 64)) Unit!4135)

(assert (=> d!40211 (= lt!69219 (choose!817 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun e!86477 () Bool)

(assert (=> d!40211 e!86477))

(declare-fun res!63879 () Bool)

(assert (=> d!40211 (=> (not res!63879) (not e!86477))))

(declare-fun isStrictlySorted!322 (List!1716) Bool)

(assert (=> d!40211 (= res!63879 (isStrictlySorted!322 (toList!869 lt!69022)))))

(assert (=> d!40211 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) lt!69219)))

(declare-fun b!132641 () Bool)

(assert (=> b!132641 (= e!86477 (containsKey!176 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (= (and d!40211 res!63879) b!132641))

(assert (=> d!40211 m!155869))

(assert (=> d!40211 m!156027))

(assert (=> d!40211 m!156027))

(assert (=> d!40211 m!156029))

(assert (=> d!40211 m!155869))

(declare-fun m!156123 () Bool)

(assert (=> d!40211 m!156123))

(declare-fun m!156125 () Bool)

(assert (=> d!40211 m!156125))

(assert (=> b!132641 m!155869))

(assert (=> b!132641 m!156023))

(assert (=> b!132489 d!40211))

(declare-fun d!40213 () Bool)

(declare-fun isEmpty!409 (Option!178) Bool)

(assert (=> d!40213 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))))

(declare-fun bs!5478 () Bool)

(assert (= bs!5478 d!40213))

(assert (=> bs!5478 m!156027))

(declare-fun m!156127 () Bool)

(assert (=> bs!5478 m!156127))

(assert (=> b!132489 d!40213))

(declare-fun b!132652 () Bool)

(declare-fun e!86483 () Option!178)

(assert (=> b!132652 (= e!86483 (getValueByKey!172 (t!6167 (toList!869 lt!69022)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!132653 () Bool)

(assert (=> b!132653 (= e!86483 None!176)))

(declare-fun c!24510 () Bool)

(declare-fun d!40215 () Bool)

(assert (=> d!40215 (= c!24510 (and ((_ is Cons!1712) (toList!869 lt!69022)) (= (_1!1324 (h!2317 (toList!869 lt!69022))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun e!86482 () Option!178)

(assert (=> d!40215 (= (getValueByKey!172 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!86482)))

(declare-fun b!132650 () Bool)

(assert (=> b!132650 (= e!86482 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69022)))))))

(declare-fun b!132651 () Bool)

(assert (=> b!132651 (= e!86482 e!86483)))

(declare-fun c!24511 () Bool)

(assert (=> b!132651 (= c!24511 (and ((_ is Cons!1712) (toList!869 lt!69022)) (not (= (_1!1324 (h!2317 (toList!869 lt!69022))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))))

(assert (= (and d!40215 c!24510) b!132650))

(assert (= (and d!40215 (not c!24510)) b!132651))

(assert (= (and b!132651 c!24511) b!132652))

(assert (= (and b!132651 (not c!24511)) b!132653))

(assert (=> b!132652 m!155869))

(declare-fun m!156129 () Bool)

(assert (=> b!132652 m!156129))

(assert (=> b!132489 d!40215))

(declare-fun d!40217 () Bool)

(declare-fun lt!69222 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!132 (List!1717) (InoxSet (_ BitVec 64)))

(assert (=> d!40217 (= lt!69222 (select (content!132 Nil!1714) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!86488 () Bool)

(assert (=> d!40217 (= lt!69222 e!86488)))

(declare-fun res!63884 () Bool)

(assert (=> d!40217 (=> (not res!63884) (not e!86488))))

(assert (=> d!40217 (= res!63884 ((_ is Cons!1713) Nil!1714))))

(assert (=> d!40217 (= (contains!901 Nil!1714 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)) lt!69222)))

(declare-fun b!132658 () Bool)

(declare-fun e!86489 () Bool)

(assert (=> b!132658 (= e!86488 e!86489)))

(declare-fun res!63885 () Bool)

(assert (=> b!132658 (=> res!63885 e!86489)))

(assert (=> b!132658 (= res!63885 (= (h!2318 Nil!1714) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!132659 () Bool)

(assert (=> b!132659 (= e!86489 (contains!901 (t!6168 Nil!1714) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!40217 res!63884) b!132658))

(assert (= (and b!132658 (not res!63885)) b!132659))

(declare-fun m!156131 () Bool)

(assert (=> d!40217 m!156131))

(assert (=> d!40217 m!155999))

(declare-fun m!156133 () Bool)

(assert (=> d!40217 m!156133))

(assert (=> b!132659 m!155999))

(declare-fun m!156135 () Bool)

(assert (=> b!132659 m!156135))

(assert (=> b!132470 d!40217))

(declare-fun d!40219 () Bool)

(assert (=> d!40219 (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69106 #b00000000000000000000000000000000)))

(declare-fun lt!69225 () Unit!4135)

(declare-fun choose!13 (array!4781 (_ BitVec 64) (_ BitVec 32)) Unit!4135)

(assert (=> d!40219 (= lt!69225 (choose!13 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69106 #b00000000000000000000000000000000))))

(assert (=> d!40219 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!40219 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69106 #b00000000000000000000000000000000) lt!69225)))

(declare-fun bs!5479 () Bool)

(assert (= bs!5479 d!40219))

(assert (=> bs!5479 m!156005))

(declare-fun m!156137 () Bool)

(assert (=> bs!5479 m!156137))

(assert (=> b!132458 d!40219))

(declare-fun d!40221 () Bool)

(declare-fun res!63890 () Bool)

(declare-fun e!86494 () Bool)

(assert (=> d!40221 (=> res!63890 e!86494)))

(assert (=> d!40221 (= res!63890 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) lt!69106))))

(assert (=> d!40221 (= (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69106 #b00000000000000000000000000000000) e!86494)))

(declare-fun b!132664 () Bool)

(declare-fun e!86495 () Bool)

(assert (=> b!132664 (= e!86494 e!86495)))

(declare-fun res!63891 () Bool)

(assert (=> b!132664 (=> (not res!63891) (not e!86495))))

(assert (=> b!132664 (= res!63891 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!132665 () Bool)

(assert (=> b!132665 (= e!86495 (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69106 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40221 (not res!63890)) b!132664))

(assert (= (and b!132664 res!63891) b!132665))

(assert (=> d!40221 m!155999))

(declare-fun m!156139 () Bool)

(assert (=> b!132665 m!156139))

(assert (=> b!132458 d!40221))

(declare-fun b!132678 () Bool)

(declare-fun e!86502 () SeekEntryResult!275)

(declare-fun lt!69233 () SeekEntryResult!275)

(assert (=> b!132678 (= e!86502 (Found!275 (index!3262 lt!69233)))))

(declare-fun d!40223 () Bool)

(declare-fun lt!69234 () SeekEntryResult!275)

(assert (=> d!40223 (and (or ((_ is Undefined!275) lt!69234) (not ((_ is Found!275) lt!69234)) (and (bvsge (index!3261 lt!69234) #b00000000000000000000000000000000) (bvslt (index!3261 lt!69234) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))) (or ((_ is Undefined!275) lt!69234) ((_ is Found!275) lt!69234) (not ((_ is MissingZero!275) lt!69234)) (and (bvsge (index!3260 lt!69234) #b00000000000000000000000000000000) (bvslt (index!3260 lt!69234) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))) (or ((_ is Undefined!275) lt!69234) ((_ is Found!275) lt!69234) ((_ is MissingZero!275) lt!69234) (not ((_ is MissingVacant!275) lt!69234)) (and (bvsge (index!3263 lt!69234) #b00000000000000000000000000000000) (bvslt (index!3263 lt!69234) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))) (or ((_ is Undefined!275) lt!69234) (ite ((_ is Found!275) lt!69234) (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3261 lt!69234)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!275) lt!69234) (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3260 lt!69234)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!275) lt!69234) (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3263 lt!69234)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!86503 () SeekEntryResult!275)

(assert (=> d!40223 (= lt!69234 e!86503)))

(declare-fun c!24519 () Bool)

(assert (=> d!40223 (= c!24519 (and ((_ is Intermediate!275) lt!69233) (undefined!1087 lt!69233)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4781 (_ BitVec 32)) SeekEntryResult!275)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!40223 (= lt!69233 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(assert (=> d!40223 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!40223 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) lt!69234)))

(declare-fun b!132679 () Bool)

(assert (=> b!132679 (= e!86503 e!86502)))

(declare-fun lt!69232 () (_ BitVec 64))

(assert (=> b!132679 (= lt!69232 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!69233)))))

(declare-fun c!24518 () Bool)

(assert (=> b!132679 (= c!24518 (= lt!69232 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!132680 () Bool)

(declare-fun e!86504 () SeekEntryResult!275)

(assert (=> b!132680 (= e!86504 (MissingZero!275 (index!3262 lt!69233)))))

(declare-fun b!132681 () Bool)

(declare-fun c!24520 () Bool)

(assert (=> b!132681 (= c!24520 (= lt!69232 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132681 (= e!86502 e!86504)))

(declare-fun b!132682 () Bool)

(assert (=> b!132682 (= e!86503 Undefined!275)))

(declare-fun b!132683 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4781 (_ BitVec 32)) SeekEntryResult!275)

(assert (=> b!132683 (= e!86504 (seekKeyOrZeroReturnVacant!0 (x!15592 lt!69233) (index!3262 lt!69233) (index!3262 lt!69233) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(assert (= (and d!40223 c!24519) b!132682))

(assert (= (and d!40223 (not c!24519)) b!132679))

(assert (= (and b!132679 c!24518) b!132678))

(assert (= (and b!132679 (not c!24518)) b!132681))

(assert (= (and b!132681 c!24520) b!132680))

(assert (= (and b!132681 (not c!24520)) b!132683))

(declare-fun m!156141 () Bool)

(assert (=> d!40223 m!156141))

(declare-fun m!156143 () Bool)

(assert (=> d!40223 m!156143))

(assert (=> d!40223 m!155999))

(declare-fun m!156145 () Bool)

(assert (=> d!40223 m!156145))

(assert (=> d!40223 m!155999))

(assert (=> d!40223 m!156143))

(assert (=> d!40223 m!155867))

(declare-fun m!156147 () Bool)

(assert (=> d!40223 m!156147))

(declare-fun m!156149 () Bool)

(assert (=> d!40223 m!156149))

(declare-fun m!156151 () Bool)

(assert (=> b!132679 m!156151))

(assert (=> b!132683 m!155999))

(declare-fun m!156153 () Bool)

(assert (=> b!132683 m!156153))

(assert (=> b!132458 d!40223))

(assert (=> b!132491 d!40213))

(assert (=> b!132491 d!40215))

(declare-fun d!40225 () Bool)

(declare-fun e!86507 () Bool)

(assert (=> d!40225 e!86507))

(declare-fun res!63896 () Bool)

(assert (=> d!40225 (=> (not res!63896) (not e!86507))))

(declare-fun lt!69239 () SeekEntryResult!275)

(assert (=> d!40225 (= res!63896 ((_ is Found!275) lt!69239))))

(assert (=> d!40225 (= lt!69239 (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun lt!69240 () Unit!4135)

(declare-fun choose!818 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 64) Int) Unit!4135)

(assert (=> d!40225 (= lt!69240 (choose!818 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40225 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40225 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)) lt!69240)))

(declare-fun b!132688 () Bool)

(declare-fun res!63897 () Bool)

(assert (=> b!132688 (=> (not res!63897) (not e!86507))))

(assert (=> b!132688 (= res!63897 (inRange!0 (index!3261 lt!69239) (mask!7165 newMap!16)))))

(declare-fun b!132689 () Bool)

(assert (=> b!132689 (= e!86507 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69239)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> b!132689 (and (bvsge (index!3261 lt!69239) #b00000000000000000000000000000000) (bvslt (index!3261 lt!69239) (size!2530 (_keys!4614 newMap!16))))))

(assert (= (and d!40225 res!63896) b!132688))

(assert (= (and b!132688 res!63897) b!132689))

(assert (=> d!40225 m!155869))

(assert (=> d!40225 m!156037))

(assert (=> d!40225 m!155869))

(declare-fun m!156155 () Bool)

(assert (=> d!40225 m!156155))

(declare-fun m!156157 () Bool)

(assert (=> d!40225 m!156157))

(declare-fun m!156159 () Bool)

(assert (=> b!132688 m!156159))

(declare-fun m!156161 () Bool)

(assert (=> b!132689 m!156161))

(assert (=> bm!14616 d!40225))

(declare-fun b!132698 () Bool)

(declare-fun e!86513 () (_ BitVec 32))

(declare-fun e!86512 () (_ BitVec 32))

(assert (=> b!132698 (= e!86513 e!86512)))

(declare-fun c!24525 () Bool)

(assert (=> b!132698 (= c!24525 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132699 () Bool)

(declare-fun call!14627 () (_ BitVec 32))

(assert (=> b!132699 (= e!86512 (bvadd #b00000000000000000000000000000001 call!14627))))

(declare-fun b!132700 () Bool)

(assert (=> b!132700 (= e!86512 call!14627)))

(declare-fun d!40227 () Bool)

(declare-fun lt!69243 () (_ BitVec 32))

(assert (=> d!40227 (and (bvsge lt!69243 #b00000000000000000000000000000000) (bvsle lt!69243 (bvsub (size!2530 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40227 (= lt!69243 e!86513)))

(declare-fun c!24526 () Bool)

(assert (=> d!40227 (= c!24526 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!40227 (and (bvsle #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2530 (_keys!4614 newMap!16)) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!40227 (= (arrayCountValidKeys!0 (_keys!4614 newMap!16) #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) lt!69243)))

(declare-fun b!132701 () Bool)

(assert (=> b!132701 (= e!86513 #b00000000000000000000000000000000)))

(declare-fun bm!14624 () Bool)

(assert (=> bm!14624 (= call!14627 (arrayCountValidKeys!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (= (and d!40227 c!24526) b!132701))

(assert (= (and d!40227 (not c!24526)) b!132698))

(assert (= (and b!132698 c!24525) b!132699))

(assert (= (and b!132698 (not c!24525)) b!132700))

(assert (= (or b!132699 b!132700) bm!14624))

(declare-fun m!156163 () Bool)

(assert (=> b!132698 m!156163))

(assert (=> b!132698 m!156163))

(declare-fun m!156165 () Bool)

(assert (=> b!132698 m!156165))

(declare-fun m!156167 () Bool)

(assert (=> bm!14624 m!156167))

(assert (=> b!132480 d!40227))

(declare-fun b!132702 () Bool)

(declare-fun e!86526 () Unit!4135)

(declare-fun lt!69244 () Unit!4135)

(assert (=> b!132702 (= e!86526 lt!69244)))

(declare-fun lt!69260 () ListLongMap!1707)

(assert (=> b!132702 (= lt!69260 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69254 () (_ BitVec 64))

(assert (=> b!132702 (= lt!69254 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69259 () (_ BitVec 64))

(assert (=> b!132702 (= lt!69259 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69257 () Unit!4135)

(assert (=> b!132702 (= lt!69257 (addStillContains!92 lt!69260 lt!69254 (zeroValue!2720 newMap!16) lt!69259))))

(assert (=> b!132702 (contains!899 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))) lt!69259)))

(declare-fun lt!69264 () Unit!4135)

(assert (=> b!132702 (= lt!69264 lt!69257)))

(declare-fun lt!69246 () ListLongMap!1707)

(assert (=> b!132702 (= lt!69246 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69249 () (_ BitVec 64))

(assert (=> b!132702 (= lt!69249 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69265 () (_ BitVec 64))

(assert (=> b!132702 (= lt!69265 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69256 () Unit!4135)

(assert (=> b!132702 (= lt!69256 (addApplyDifferent!92 lt!69246 lt!69249 (minValue!2720 newMap!16) lt!69265))))

(assert (=> b!132702 (= (apply!116 (+!175 lt!69246 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))) lt!69265) (apply!116 lt!69246 lt!69265))))

(declare-fun lt!69245 () Unit!4135)

(assert (=> b!132702 (= lt!69245 lt!69256)))

(declare-fun lt!69251 () ListLongMap!1707)

(assert (=> b!132702 (= lt!69251 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69253 () (_ BitVec 64))

(assert (=> b!132702 (= lt!69253 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69247 () (_ BitVec 64))

(assert (=> b!132702 (= lt!69247 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69250 () Unit!4135)

(assert (=> b!132702 (= lt!69250 (addApplyDifferent!92 lt!69251 lt!69253 (zeroValue!2720 newMap!16) lt!69247))))

(assert (=> b!132702 (= (apply!116 (+!175 lt!69251 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))) lt!69247) (apply!116 lt!69251 lt!69247))))

(declare-fun lt!69258 () Unit!4135)

(assert (=> b!132702 (= lt!69258 lt!69250)))

(declare-fun lt!69248 () ListLongMap!1707)

(assert (=> b!132702 (= lt!69248 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69263 () (_ BitVec 64))

(assert (=> b!132702 (= lt!69263 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69261 () (_ BitVec 64))

(assert (=> b!132702 (= lt!69261 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!132702 (= lt!69244 (addApplyDifferent!92 lt!69248 lt!69263 (minValue!2720 newMap!16) lt!69261))))

(assert (=> b!132702 (= (apply!116 (+!175 lt!69248 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))) lt!69261) (apply!116 lt!69248 lt!69261))))

(declare-fun b!132703 () Bool)

(declare-fun e!86523 () Bool)

(declare-fun call!14631 () Bool)

(assert (=> b!132703 (= e!86523 (not call!14631))))

(declare-fun b!132704 () Bool)

(declare-fun e!86520 () Bool)

(declare-fun e!86519 () Bool)

(assert (=> b!132704 (= e!86520 e!86519)))

(declare-fun c!24530 () Bool)

(assert (=> b!132704 (= c!24530 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132705 () Bool)

(declare-fun e!86524 () ListLongMap!1707)

(declare-fun call!14634 () ListLongMap!1707)

(assert (=> b!132705 (= e!86524 call!14634)))

(declare-fun b!132706 () Bool)

(declare-fun e!86515 () ListLongMap!1707)

(declare-fun call!14628 () ListLongMap!1707)

(assert (=> b!132706 (= e!86515 call!14628)))

(declare-fun b!132707 () Bool)

(declare-fun c!24532 () Bool)

(assert (=> b!132707 (= c!24532 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!132707 (= e!86515 e!86524)))

(declare-fun b!132708 () Bool)

(declare-fun call!14629 () Bool)

(assert (=> b!132708 (= e!86519 (not call!14629))))

(declare-fun d!40229 () Bool)

(assert (=> d!40229 e!86520))

(declare-fun res!63901 () Bool)

(assert (=> d!40229 (=> (not res!63901) (not e!86520))))

(assert (=> d!40229 (= res!63901 (or (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))))

(declare-fun lt!69262 () ListLongMap!1707)

(declare-fun lt!69255 () ListLongMap!1707)

(assert (=> d!40229 (= lt!69262 lt!69255)))

(declare-fun lt!69252 () Unit!4135)

(assert (=> d!40229 (= lt!69252 e!86526)))

(declare-fun c!24528 () Bool)

(declare-fun e!86522 () Bool)

(assert (=> d!40229 (= c!24528 e!86522)))

(declare-fun res!63900 () Bool)

(assert (=> d!40229 (=> (not res!63900) (not e!86522))))

(assert (=> d!40229 (= res!63900 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun e!86517 () ListLongMap!1707)

(assert (=> d!40229 (= lt!69255 e!86517)))

(declare-fun c!24531 () Bool)

(assert (=> d!40229 (= c!24531 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40229 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40229 (= (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69262)))

(declare-fun b!132709 () Bool)

(declare-fun e!86521 () Bool)

(assert (=> b!132709 (= e!86521 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14625 () Bool)

(assert (=> bm!14625 (= call!14631 (contains!899 lt!69262 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132710 () Bool)

(assert (=> b!132710 (= e!86517 e!86515)))

(declare-fun c!24529 () Bool)

(assert (=> b!132710 (= c!24529 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132711 () Bool)

(declare-fun call!14632 () ListLongMap!1707)

(assert (=> b!132711 (= e!86517 (+!175 call!14632 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun b!132712 () Bool)

(declare-fun e!86514 () Bool)

(assert (=> b!132712 (= e!86514 (= (apply!116 lt!69262 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132712 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_values!2848 newMap!16))))))

(assert (=> b!132712 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun bm!14626 () Bool)

(assert (=> bm!14626 (= call!14629 (contains!899 lt!69262 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132713 () Bool)

(declare-fun res!63902 () Bool)

(assert (=> b!132713 (=> (not res!63902) (not e!86520))))

(assert (=> b!132713 (= res!63902 e!86523)))

(declare-fun c!24527 () Bool)

(assert (=> b!132713 (= c!24527 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!132714 () Bool)

(declare-fun e!86518 () Bool)

(assert (=> b!132714 (= e!86519 e!86518)))

(declare-fun res!63904 () Bool)

(assert (=> b!132714 (= res!63904 call!14629)))

(assert (=> b!132714 (=> (not res!63904) (not e!86518))))

(declare-fun call!14630 () ListLongMap!1707)

(declare-fun call!14633 () ListLongMap!1707)

(declare-fun bm!14627 () Bool)

(assert (=> bm!14627 (= call!14632 (+!175 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634)) (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!132715 () Bool)

(declare-fun e!86525 () Bool)

(assert (=> b!132715 (= e!86525 (= (apply!116 lt!69262 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 newMap!16)))))

(declare-fun bm!14628 () Bool)

(assert (=> bm!14628 (= call!14628 call!14632)))

(declare-fun b!132716 () Bool)

(assert (=> b!132716 (= e!86523 e!86525)))

(declare-fun res!63899 () Bool)

(assert (=> b!132716 (= res!63899 call!14631)))

(assert (=> b!132716 (=> (not res!63899) (not e!86525))))

(declare-fun bm!14629 () Bool)

(assert (=> bm!14629 (= call!14634 call!14633)))

(declare-fun bm!14630 () Bool)

(assert (=> bm!14630 (= call!14630 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!132717 () Bool)

(assert (=> b!132717 (= e!86524 call!14628)))

(declare-fun b!132718 () Bool)

(declare-fun e!86516 () Bool)

(assert (=> b!132718 (= e!86516 e!86514)))

(declare-fun res!63903 () Bool)

(assert (=> b!132718 (=> (not res!63903) (not e!86514))))

(assert (=> b!132718 (= res!63903 (contains!899 lt!69262 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!132718 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!132719 () Bool)

(declare-fun res!63906 () Bool)

(assert (=> b!132719 (=> (not res!63906) (not e!86520))))

(assert (=> b!132719 (= res!63906 e!86516)))

(declare-fun res!63898 () Bool)

(assert (=> b!132719 (=> res!63898 e!86516)))

(assert (=> b!132719 (= res!63898 (not e!86521))))

(declare-fun res!63905 () Bool)

(assert (=> b!132719 (=> (not res!63905) (not e!86521))))

(assert (=> b!132719 (= res!63905 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun bm!14631 () Bool)

(assert (=> bm!14631 (= call!14633 call!14630)))

(declare-fun b!132720 () Bool)

(assert (=> b!132720 (= e!86518 (= (apply!116 lt!69262 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 newMap!16)))))

(declare-fun b!132721 () Bool)

(assert (=> b!132721 (= e!86522 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132722 () Bool)

(declare-fun Unit!4142 () Unit!4135)

(assert (=> b!132722 (= e!86526 Unit!4142)))

(assert (= (and d!40229 c!24531) b!132711))

(assert (= (and d!40229 (not c!24531)) b!132710))

(assert (= (and b!132710 c!24529) b!132706))

(assert (= (and b!132710 (not c!24529)) b!132707))

(assert (= (and b!132707 c!24532) b!132717))

(assert (= (and b!132707 (not c!24532)) b!132705))

(assert (= (or b!132717 b!132705) bm!14629))

(assert (= (or b!132706 bm!14629) bm!14631))

(assert (= (or b!132706 b!132717) bm!14628))

(assert (= (or b!132711 bm!14631) bm!14630))

(assert (= (or b!132711 bm!14628) bm!14627))

(assert (= (and d!40229 res!63900) b!132721))

(assert (= (and d!40229 c!24528) b!132702))

(assert (= (and d!40229 (not c!24528)) b!132722))

(assert (= (and d!40229 res!63901) b!132719))

(assert (= (and b!132719 res!63905) b!132709))

(assert (= (and b!132719 (not res!63898)) b!132718))

(assert (= (and b!132718 res!63903) b!132712))

(assert (= (and b!132719 res!63906) b!132713))

(assert (= (and b!132713 c!24527) b!132716))

(assert (= (and b!132713 (not c!24527)) b!132703))

(assert (= (and b!132716 res!63899) b!132715))

(assert (= (or b!132716 b!132703) bm!14625))

(assert (= (and b!132713 res!63902) b!132704))

(assert (= (and b!132704 c!24530) b!132714))

(assert (= (and b!132704 (not c!24530)) b!132708))

(assert (= (and b!132714 res!63904) b!132720))

(assert (= (or b!132714 b!132708) bm!14626))

(declare-fun b_lambda!5899 () Bool)

(assert (=> (not b_lambda!5899) (not b!132712)))

(declare-fun tb!2421 () Bool)

(declare-fun t!6176 () Bool)

(assert (=> (and b!132300 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16)) t!6176) tb!2421))

(declare-fun result!3997 () Bool)

(assert (=> tb!2421 (= result!3997 tp_is_empty!2877)))

(assert (=> b!132712 t!6176))

(declare-fun b_and!8215 () Bool)

(assert (= b_and!8211 (and (=> t!6176 result!3997) b_and!8215)))

(declare-fun t!6178 () Bool)

(declare-fun tb!2423 () Bool)

(assert (=> (and b!132303 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 newMap!16)) t!6178) tb!2423))

(declare-fun result!3999 () Bool)

(assert (= result!3999 result!3997))

(assert (=> b!132712 t!6178))

(declare-fun b_and!8217 () Bool)

(assert (= b_and!8213 (and (=> t!6178 result!3999) b_and!8217)))

(declare-fun m!156169 () Bool)

(assert (=> bm!14630 m!156169))

(declare-fun m!156171 () Bool)

(assert (=> bm!14627 m!156171))

(declare-fun m!156173 () Bool)

(assert (=> b!132712 m!156173))

(assert (=> b!132712 m!156173))

(declare-fun m!156175 () Bool)

(assert (=> b!132712 m!156175))

(declare-fun m!156177 () Bool)

(assert (=> b!132712 m!156177))

(assert (=> b!132712 m!156163))

(assert (=> b!132712 m!156175))

(assert (=> b!132712 m!156163))

(declare-fun m!156179 () Bool)

(assert (=> b!132712 m!156179))

(declare-fun m!156181 () Bool)

(assert (=> bm!14625 m!156181))

(declare-fun m!156183 () Bool)

(assert (=> b!132711 m!156183))

(assert (=> b!132721 m!156163))

(assert (=> b!132721 m!156163))

(assert (=> b!132721 m!156165))

(assert (=> d!40229 m!156157))

(declare-fun m!156185 () Bool)

(assert (=> b!132702 m!156185))

(declare-fun m!156187 () Bool)

(assert (=> b!132702 m!156187))

(declare-fun m!156189 () Bool)

(assert (=> b!132702 m!156189))

(declare-fun m!156191 () Bool)

(assert (=> b!132702 m!156191))

(assert (=> b!132702 m!156169))

(declare-fun m!156193 () Bool)

(assert (=> b!132702 m!156193))

(declare-fun m!156195 () Bool)

(assert (=> b!132702 m!156195))

(declare-fun m!156197 () Bool)

(assert (=> b!132702 m!156197))

(declare-fun m!156199 () Bool)

(assert (=> b!132702 m!156199))

(declare-fun m!156201 () Bool)

(assert (=> b!132702 m!156201))

(assert (=> b!132702 m!156185))

(declare-fun m!156203 () Bool)

(assert (=> b!132702 m!156203))

(assert (=> b!132702 m!156197))

(declare-fun m!156205 () Bool)

(assert (=> b!132702 m!156205))

(assert (=> b!132702 m!156189))

(declare-fun m!156207 () Bool)

(assert (=> b!132702 m!156207))

(assert (=> b!132702 m!156163))

(declare-fun m!156209 () Bool)

(assert (=> b!132702 m!156209))

(assert (=> b!132702 m!156187))

(declare-fun m!156211 () Bool)

(assert (=> b!132702 m!156211))

(declare-fun m!156213 () Bool)

(assert (=> b!132702 m!156213))

(declare-fun m!156215 () Bool)

(assert (=> bm!14626 m!156215))

(declare-fun m!156217 () Bool)

(assert (=> b!132715 m!156217))

(declare-fun m!156219 () Bool)

(assert (=> b!132720 m!156219))

(assert (=> b!132718 m!156163))

(assert (=> b!132718 m!156163))

(declare-fun m!156221 () Bool)

(assert (=> b!132718 m!156221))

(assert (=> b!132709 m!156163))

(assert (=> b!132709 m!156163))

(assert (=> b!132709 m!156165))

(assert (=> b!132583 d!40229))

(assert (=> b!132469 d!40203))

(declare-fun d!40231 () Bool)

(assert (=> d!40231 (= (+!175 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69180 (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69268 () Unit!4135)

(declare-fun choose!819 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 V!3483 Int) Unit!4135)

(assert (=> d!40231 (= lt!69268 (choose!819 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69180 (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40231 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40231 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69180 (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)) lt!69268)))

(declare-fun bs!5480 () Bool)

(assert (= bs!5480 d!40231))

(assert (=> bs!5480 m!155895))

(declare-fun m!156223 () Bool)

(assert (=> bs!5480 m!156223))

(assert (=> bs!5480 m!155939))

(assert (=> bs!5480 m!156157))

(assert (=> bs!5480 m!155939))

(declare-fun m!156225 () Bool)

(assert (=> bs!5480 m!156225))

(assert (=> bs!5480 m!155895))

(declare-fun m!156227 () Bool)

(assert (=> bs!5480 m!156227))

(assert (=> b!132586 d!40231))

(declare-fun bm!14632 () Bool)

(declare-fun call!14635 () Bool)

(declare-fun c!24533 () Bool)

(assert (=> bm!14632 (= call!14635 (arrayNoDuplicates!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714)))))

(declare-fun b!132723 () Bool)

(declare-fun e!86530 () Bool)

(declare-fun e!86527 () Bool)

(assert (=> b!132723 (= e!86530 e!86527)))

(assert (=> b!132723 (= c!24533 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132724 () Bool)

(declare-fun e!86528 () Bool)

(assert (=> b!132724 (= e!86528 (contains!901 Nil!1714 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132725 () Bool)

(assert (=> b!132725 (= e!86527 call!14635)))

(declare-fun b!132726 () Bool)

(declare-fun e!86529 () Bool)

(assert (=> b!132726 (= e!86529 e!86530)))

(declare-fun res!63909 () Bool)

(assert (=> b!132726 (=> (not res!63909) (not e!86530))))

(assert (=> b!132726 (= res!63909 (not e!86528))))

(declare-fun res!63908 () Bool)

(assert (=> b!132726 (=> (not res!63908) (not e!86528))))

(assert (=> b!132726 (= res!63908 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132727 () Bool)

(assert (=> b!132727 (= e!86527 call!14635)))

(declare-fun d!40233 () Bool)

(declare-fun res!63907 () Bool)

(assert (=> d!40233 (=> res!63907 e!86529)))

(assert (=> d!40233 (= res!63907 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!40233 (= (arrayNoDuplicates!0 (_keys!4614 newMap!16) #b00000000000000000000000000000000 Nil!1714) e!86529)))

(assert (= (and d!40233 (not res!63907)) b!132726))

(assert (= (and b!132726 res!63908) b!132724))

(assert (= (and b!132726 res!63909) b!132723))

(assert (= (and b!132723 c!24533) b!132725))

(assert (= (and b!132723 (not c!24533)) b!132727))

(assert (= (or b!132725 b!132727) bm!14632))

(assert (=> bm!14632 m!156163))

(declare-fun m!156229 () Bool)

(assert (=> bm!14632 m!156229))

(assert (=> b!132723 m!156163))

(assert (=> b!132723 m!156163))

(assert (=> b!132723 m!156165))

(assert (=> b!132724 m!156163))

(assert (=> b!132724 m!156163))

(declare-fun m!156231 () Bool)

(assert (=> b!132724 m!156231))

(assert (=> b!132726 m!156163))

(assert (=> b!132726 m!156163))

(assert (=> b!132726 m!156165))

(assert (=> b!132482 d!40233))

(declare-fun d!40235 () Bool)

(declare-fun e!86531 () Bool)

(assert (=> d!40235 e!86531))

(declare-fun res!63910 () Bool)

(assert (=> d!40235 (=> res!63910 e!86531)))

(declare-fun lt!69272 () Bool)

(assert (=> d!40235 (= res!63910 (not lt!69272))))

(declare-fun lt!69269 () Bool)

(assert (=> d!40235 (= lt!69272 lt!69269)))

(declare-fun lt!69271 () Unit!4135)

(declare-fun e!86532 () Unit!4135)

(assert (=> d!40235 (= lt!69271 e!86532)))

(declare-fun c!24534 () Bool)

(assert (=> d!40235 (= c!24534 lt!69269)))

(assert (=> d!40235 (= lt!69269 (containsKey!176 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40235 (= (contains!899 lt!69095 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69272)))

(declare-fun b!132728 () Bool)

(declare-fun lt!69270 () Unit!4135)

(assert (=> b!132728 (= e!86532 lt!69270)))

(assert (=> b!132728 (= lt!69270 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132728 (isDefined!125 (getValueByKey!172 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132729 () Bool)

(declare-fun Unit!4143 () Unit!4135)

(assert (=> b!132729 (= e!86532 Unit!4143)))

(declare-fun b!132730 () Bool)

(assert (=> b!132730 (= e!86531 (isDefined!125 (getValueByKey!172 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40235 c!24534) b!132728))

(assert (= (and d!40235 (not c!24534)) b!132729))

(assert (= (and d!40235 (not res!63910)) b!132730))

(declare-fun m!156233 () Bool)

(assert (=> d!40235 m!156233))

(declare-fun m!156235 () Bool)

(assert (=> b!132728 m!156235))

(declare-fun m!156237 () Bool)

(assert (=> b!132728 m!156237))

(assert (=> b!132728 m!156237))

(declare-fun m!156239 () Bool)

(assert (=> b!132728 m!156239))

(assert (=> b!132730 m!156237))

(assert (=> b!132730 m!156237))

(assert (=> b!132730 m!156239))

(assert (=> bm!14537 d!40235))

(declare-fun b!132766 () Bool)

(declare-fun res!63936 () Bool)

(declare-fun call!14644 () Bool)

(assert (=> b!132766 (= res!63936 call!14644)))

(declare-fun e!86550 () Bool)

(assert (=> b!132766 (=> (not res!63936) (not e!86550))))

(declare-fun b!132767 () Bool)

(declare-fun res!63935 () Bool)

(declare-fun e!86552 () Bool)

(assert (=> b!132767 (=> (not res!63935) (not e!86552))))

(declare-fun call!14645 () Bool)

(assert (=> b!132767 (= res!63935 call!14645)))

(declare-fun e!86556 () Bool)

(assert (=> b!132767 (= e!86556 e!86552)))

(declare-fun b!132768 () Bool)

(declare-fun call!14646 () Bool)

(assert (=> b!132768 (= e!86552 (not call!14646))))

(declare-fun b!132769 () Bool)

(declare-fun e!86553 () Bool)

(assert (=> b!132769 (= e!86553 (not call!14646))))

(declare-fun bm!14641 () Bool)

(declare-fun call!14647 () SeekEntryResult!275)

(assert (=> bm!14641 (= call!14647 (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun bm!14642 () Bool)

(assert (=> bm!14642 (= call!14646 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!132765 () Bool)

(declare-fun res!63934 () Bool)

(declare-fun e!86549 () Bool)

(assert (=> b!132765 (=> (not res!63934) (not e!86549))))

(declare-fun lt!69358 () tuple2!2628)

(assert (=> b!132765 (= res!63934 (contains!899 (map!1409 (_2!1325 lt!69358)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun d!40237 () Bool)

(assert (=> d!40237 e!86549))

(declare-fun res!63932 () Bool)

(assert (=> d!40237 (=> (not res!63932) (not e!86549))))

(assert (=> d!40237 (= res!63932 (_1!1325 lt!69358))))

(assert (=> d!40237 (= lt!69358 (tuple2!2629 true (LongMapFixedSize!1099 (defaultEntry!2865 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd (_size!598 newMap!16) #b00000000000000000000000000000001) (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (_vacant!598 newMap!16))))))

(declare-fun lt!69351 () Unit!4135)

(declare-fun lt!69354 () Unit!4135)

(assert (=> d!40237 (= lt!69351 lt!69354)))

(declare-fun lt!69346 () array!4783)

(declare-fun lt!69349 () array!4781)

(assert (=> d!40237 (contains!899 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))))))

(assert (=> d!40237 (= lt!69354 (lemmaValidKeyInArrayIsInListMap!122 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40237 (= lt!69346 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))))

(assert (=> d!40237 (= lt!69349 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun lt!69341 () Unit!4135)

(declare-fun lt!69362 () Unit!4135)

(assert (=> d!40237 (= lt!69341 lt!69362)))

(declare-fun lt!69334 () array!4781)

(assert (=> d!40237 (= (arrayCountValidKeys!0 lt!69334 (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4781 (_ BitVec 32)) Unit!4135)

(assert (=> d!40237 (= lt!69362 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!69334 (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))))))

(assert (=> d!40237 (= lt!69334 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun lt!69347 () Unit!4135)

(declare-fun lt!69345 () Unit!4135)

(assert (=> d!40237 (= lt!69347 lt!69345)))

(declare-fun lt!69350 () array!4781)

(assert (=> d!40237 (arrayContainsKey!0 lt!69350 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!40237 (= lt!69345 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!69350 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))))))

(assert (=> d!40237 (= lt!69350 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun lt!69359 () Unit!4135)

(declare-fun lt!69336 () Unit!4135)

(assert (=> d!40237 (= lt!69359 lt!69336)))

(assert (=> d!40237 (= (+!175 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!546 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!42 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) (_ BitVec 64) V!3483 Int) Unit!4135)

(assert (=> d!40237 (= lt!69336 (lemmaAddValidKeyToArrayThenAddPairToListMap!42 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69343 () Unit!4135)

(declare-fun lt!69342 () Unit!4135)

(assert (=> d!40237 (= lt!69343 lt!69342)))

(assert (=> d!40237 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (mask!7165 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4781 (_ BitVec 32) (_ BitVec 32)) Unit!4135)

(assert (=> d!40237 (= lt!69342 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (mask!7165 newMap!16)))))

(declare-fun lt!69344 () Unit!4135)

(declare-fun lt!69353 () Unit!4135)

(assert (=> d!40237 (= lt!69344 lt!69353)))

(assert (=> d!40237 (= (arrayCountValidKeys!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4614 newMap!16) #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4781 (_ BitVec 32) (_ BitVec 64)) Unit!4135)

(assert (=> d!40237 (= lt!69353 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4614 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun lt!69355 () Unit!4135)

(declare-fun lt!69352 () Unit!4135)

(assert (=> d!40237 (= lt!69355 lt!69352)))

(declare-fun lt!69339 () (_ BitVec 32))

(declare-fun lt!69335 () List!1717)

(assert (=> d!40237 (arrayNoDuplicates!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) lt!69339 lt!69335)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4781 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1717) Unit!4135)

(assert (=> d!40237 (= lt!69352 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4614 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) lt!69339 lt!69335))))

(assert (=> d!40237 (= lt!69335 Nil!1714)))

(assert (=> d!40237 (= lt!69339 #b00000000000000000000000000000000)))

(declare-fun lt!69360 () Unit!4135)

(declare-fun e!86551 () Unit!4135)

(assert (=> d!40237 (= lt!69360 e!86551)))

(declare-fun c!24546 () Bool)

(assert (=> d!40237 (= c!24546 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!69357 () Unit!4135)

(declare-fun e!86555 () Unit!4135)

(assert (=> d!40237 (= lt!69357 e!86555)))

(declare-fun c!24545 () Bool)

(assert (=> d!40237 (= c!24545 (contains!899 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> d!40237 (valid!524 newMap!16)))

(assert (=> d!40237 (= (updateHelperNewKey!61 newMap!16 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))) lt!69358)))

(declare-fun b!132770 () Bool)

(declare-fun Unit!4144 () Unit!4135)

(assert (=> b!132770 (= e!86551 Unit!4144)))

(declare-fun lt!69361 () Unit!4135)

(declare-fun lemmaArrayContainsKeyThenInListMap!42 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 64) (_ BitVec 32) Int) Unit!4135)

(assert (=> b!132770 (= lt!69361 (lemmaArrayContainsKeyThenInListMap!42 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(assert (=> b!132770 (contains!899 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))

(declare-fun lt!69333 () Unit!4135)

(assert (=> b!132770 (= lt!69333 lt!69361)))

(assert (=> b!132770 false))

(declare-fun lt!69340 () SeekEntryResult!275)

(declare-fun b!132771 () Bool)

(assert (=> b!132771 (= e!86550 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69340)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!132772 () Bool)

(declare-fun Unit!4145 () Unit!4135)

(assert (=> b!132772 (= e!86555 Unit!4145)))

(declare-fun lt!69337 () Unit!4135)

(assert (=> b!132772 (= lt!69337 (lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)))))

(assert (=> b!132772 (= lt!69340 call!14647)))

(declare-fun res!63937 () Bool)

(assert (=> b!132772 (= res!63937 ((_ is Found!275) lt!69340))))

(assert (=> b!132772 (=> (not res!63937) (not e!86550))))

(assert (=> b!132772 e!86550))

(declare-fun lt!69348 () Unit!4135)

(assert (=> b!132772 (= lt!69348 lt!69337)))

(assert (=> b!132772 false))

(declare-fun b!132773 () Bool)

(declare-fun lt!69338 () Unit!4135)

(assert (=> b!132773 (= e!86555 lt!69338)))

(assert (=> b!132773 (= lt!69338 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69356 () SeekEntryResult!275)

(assert (=> b!132773 (= lt!69356 call!14647)))

(declare-fun c!24544 () Bool)

(assert (=> b!132773 (= c!24544 ((_ is MissingZero!275) lt!69356))))

(assert (=> b!132773 e!86556))

(declare-fun b!132774 () Bool)

(declare-fun e!86554 () Bool)

(assert (=> b!132774 (= e!86554 ((_ is Undefined!275) lt!69356))))

(declare-fun b!132775 () Bool)

(declare-fun Unit!4146 () Unit!4135)

(assert (=> b!132775 (= e!86551 Unit!4146)))

(declare-fun bm!14643 () Bool)

(assert (=> bm!14643 (= call!14644 (inRange!0 (ite c!24545 (index!3261 lt!69340) (ite c!24544 (index!3260 lt!69356) (index!3263 lt!69356))) (mask!7165 newMap!16)))))

(declare-fun b!132776 () Bool)

(assert (=> b!132776 (= e!86549 (= (map!1409 (_2!1325 lt!69358)) (+!175 (map!1409 newMap!16) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14644 () Bool)

(assert (=> bm!14644 (= call!14645 call!14644)))

(declare-fun b!132777 () Bool)

(declare-fun res!63929 () Bool)

(assert (=> b!132777 (=> (not res!63929) (not e!86552))))

(assert (=> b!132777 (= res!63929 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3260 lt!69356)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132778 () Bool)

(declare-fun res!63933 () Bool)

(assert (=> b!132778 (= res!63933 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3263 lt!69356)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132778 (=> (not res!63933) (not e!86553))))

(declare-fun b!132779 () Bool)

(assert (=> b!132779 (= e!86554 e!86553)))

(declare-fun res!63931 () Bool)

(assert (=> b!132779 (= res!63931 call!14645)))

(assert (=> b!132779 (=> (not res!63931) (not e!86553))))

(declare-fun b!132780 () Bool)

(declare-fun c!24543 () Bool)

(assert (=> b!132780 (= c!24543 ((_ is MissingVacant!275) lt!69356))))

(assert (=> b!132780 (= e!86556 e!86554)))

(declare-fun b!132781 () Bool)

(declare-fun res!63930 () Bool)

(assert (=> b!132781 (=> (not res!63930) (not e!86549))))

(assert (=> b!132781 (= res!63930 (valid!524 (_2!1325 lt!69358)))))

(assert (= (and d!40237 c!24545) b!132772))

(assert (= (and d!40237 (not c!24545)) b!132773))

(assert (= (and b!132772 res!63937) b!132766))

(assert (= (and b!132766 res!63936) b!132771))

(assert (= (and b!132773 c!24544) b!132767))

(assert (= (and b!132773 (not c!24544)) b!132780))

(assert (= (and b!132767 res!63935) b!132777))

(assert (= (and b!132777 res!63929) b!132768))

(assert (= (and b!132780 c!24543) b!132779))

(assert (= (and b!132780 (not c!24543)) b!132774))

(assert (= (and b!132779 res!63931) b!132778))

(assert (= (and b!132778 res!63933) b!132769))

(assert (= (or b!132767 b!132779) bm!14644))

(assert (= (or b!132768 b!132769) bm!14642))

(assert (= (or b!132766 bm!14644) bm!14643))

(assert (= (or b!132772 b!132773) bm!14641))

(assert (= (and d!40237 c!24546) b!132770))

(assert (= (and d!40237 (not c!24546)) b!132775))

(assert (= (and d!40237 res!63932) b!132781))

(assert (= (and b!132781 res!63930) b!132765))

(assert (= (and b!132765 res!63934) b!132776))

(assert (=> bm!14641 m!155869))

(assert (=> bm!14641 m!156037))

(assert (=> b!132773 m!155869))

(assert (=> b!132773 m!156073))

(declare-fun m!156241 () Bool)

(assert (=> b!132781 m!156241))

(assert (=> bm!14642 m!155869))

(assert (=> bm!14642 m!156065))

(declare-fun m!156243 () Bool)

(assert (=> b!132765 m!156243))

(assert (=> b!132765 m!156243))

(assert (=> b!132765 m!155869))

(declare-fun m!156245 () Bool)

(assert (=> b!132765 m!156245))

(declare-fun m!156247 () Bool)

(assert (=> d!40237 m!156247))

(assert (=> d!40237 m!155881))

(assert (=> d!40237 m!155939))

(declare-fun m!156249 () Bool)

(assert (=> d!40237 m!156249))

(assert (=> d!40237 m!155869))

(declare-fun m!156251 () Bool)

(assert (=> d!40237 m!156251))

(declare-fun m!156253 () Bool)

(assert (=> d!40237 m!156253))

(declare-fun m!156255 () Bool)

(assert (=> d!40237 m!156255))

(declare-fun m!156257 () Bool)

(assert (=> d!40237 m!156257))

(declare-fun m!156259 () Bool)

(assert (=> d!40237 m!156259))

(declare-fun m!156261 () Bool)

(assert (=> d!40237 m!156261))

(assert (=> d!40237 m!155869))

(declare-fun m!156263 () Bool)

(assert (=> d!40237 m!156263))

(declare-fun m!156265 () Bool)

(assert (=> d!40237 m!156265))

(assert (=> d!40237 m!156257))

(assert (=> d!40237 m!155939))

(assert (=> d!40237 m!155869))

(assert (=> d!40237 m!156047))

(declare-fun m!156267 () Bool)

(assert (=> d!40237 m!156267))

(declare-fun m!156269 () Bool)

(assert (=> d!40237 m!156269))

(assert (=> d!40237 m!155869))

(declare-fun m!156271 () Bool)

(assert (=> d!40237 m!156271))

(assert (=> d!40237 m!155869))

(declare-fun m!156273 () Bool)

(assert (=> d!40237 m!156273))

(assert (=> d!40237 m!155869))

(assert (=> d!40237 m!156065))

(assert (=> d!40237 m!156017))

(assert (=> d!40237 m!155869))

(assert (=> d!40237 m!155895))

(declare-fun m!156275 () Bool)

(assert (=> d!40237 m!156275))

(declare-fun m!156277 () Bool)

(assert (=> d!40237 m!156277))

(declare-fun m!156279 () Bool)

(assert (=> d!40237 m!156279))

(assert (=> d!40237 m!155939))

(assert (=> d!40237 m!156259))

(declare-fun m!156281 () Bool)

(assert (=> d!40237 m!156281))

(assert (=> d!40237 m!155869))

(declare-fun m!156283 () Bool)

(assert (=> d!40237 m!156283))

(assert (=> b!132776 m!156243))

(assert (=> b!132776 m!155871))

(assert (=> b!132776 m!155871))

(declare-fun m!156285 () Bool)

(assert (=> b!132776 m!156285))

(declare-fun m!156287 () Bool)

(assert (=> bm!14643 m!156287))

(declare-fun m!156289 () Bool)

(assert (=> b!132778 m!156289))

(declare-fun m!156291 () Bool)

(assert (=> b!132771 m!156291))

(assert (=> b!132772 m!155869))

(assert (=> b!132772 m!156059))

(assert (=> b!132770 m!155869))

(declare-fun m!156293 () Bool)

(assert (=> b!132770 m!156293))

(assert (=> b!132770 m!155939))

(assert (=> b!132770 m!155939))

(assert (=> b!132770 m!155869))

(assert (=> b!132770 m!156047))

(declare-fun m!156295 () Bool)

(assert (=> b!132777 m!156295))

(assert (=> bm!14614 d!40237))

(declare-fun d!40239 () Bool)

(declare-fun e!86559 () Bool)

(assert (=> d!40239 e!86559))

(declare-fun res!63940 () Bool)

(assert (=> d!40239 (=> (not res!63940) (not e!86559))))

(assert (=> d!40239 (= res!63940 (and (bvsge (index!3261 lt!69175) #b00000000000000000000000000000000) (bvslt (index!3261 lt!69175) (size!2530 (_keys!4614 newMap!16)))))))

(declare-fun lt!69365 () Unit!4135)

(declare-fun choose!820 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) Int) Unit!4135)

(assert (=> d!40239 (= lt!69365 (choose!820 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3261 lt!69175) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40239 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40239 (= (lemmaValidKeyInArrayIsInListMap!122 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3261 lt!69175) (defaultEntry!2865 newMap!16)) lt!69365)))

(declare-fun b!132784 () Bool)

(assert (=> b!132784 (= e!86559 (contains!899 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))

(assert (= (and d!40239 res!63940) b!132784))

(declare-fun m!156297 () Bool)

(assert (=> d!40239 m!156297))

(assert (=> d!40239 m!156157))

(declare-fun m!156299 () Bool)

(assert (=> b!132784 m!156299))

(assert (=> b!132784 m!156069))

(assert (=> b!132784 m!156299))

(assert (=> b!132784 m!156069))

(declare-fun m!156301 () Bool)

(assert (=> b!132784 m!156301))

(assert (=> b!132580 d!40239))

(declare-fun d!40241 () Bool)

(declare-fun e!86562 () Bool)

(assert (=> d!40241 e!86562))

(declare-fun res!63943 () Bool)

(assert (=> d!40241 (=> (not res!63943) (not e!86562))))

(assert (=> d!40241 (= res!63943 (and (bvsge (index!3261 lt!69175) #b00000000000000000000000000000000) (bvslt (index!3261 lt!69175) (size!2531 (_values!2848 newMap!16)))))))

(declare-fun lt!69368 () Unit!4135)

(declare-fun choose!821 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) (_ BitVec 64) V!3483 Int) Unit!4135)

(assert (=> d!40241 (= lt!69368 (choose!821 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3261 lt!69175) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40241 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40241 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3261 lt!69175) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)) lt!69368)))

(declare-fun b!132787 () Bool)

(assert (=> b!132787 (= e!86562 (= (+!175 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!546 (_keys!4614 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))))

(assert (= (and d!40241 res!63943) b!132787))

(assert (=> d!40241 m!155869))

(assert (=> d!40241 m!155895))

(declare-fun m!156303 () Bool)

(assert (=> d!40241 m!156303))

(assert (=> d!40241 m!156157))

(assert (=> b!132787 m!155939))

(assert (=> b!132787 m!155939))

(assert (=> b!132787 m!156249))

(assert (=> b!132787 m!156043))

(declare-fun m!156305 () Bool)

(assert (=> b!132787 m!156305))

(assert (=> b!132580 d!40241))

(declare-fun d!40243 () Bool)

(declare-fun e!86563 () Bool)

(assert (=> d!40243 e!86563))

(declare-fun res!63944 () Bool)

(assert (=> d!40243 (=> res!63944 e!86563)))

(declare-fun lt!69372 () Bool)

(assert (=> d!40243 (= res!63944 (not lt!69372))))

(declare-fun lt!69369 () Bool)

(assert (=> d!40243 (= lt!69372 lt!69369)))

(declare-fun lt!69371 () Unit!4135)

(declare-fun e!86564 () Unit!4135)

(assert (=> d!40243 (= lt!69371 e!86564)))

(declare-fun c!24547 () Bool)

(assert (=> d!40243 (= c!24547 lt!69369)))

(assert (=> d!40243 (= lt!69369 (containsKey!176 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> d!40243 (= (contains!899 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) lt!69372)))

(declare-fun b!132788 () Bool)

(declare-fun lt!69370 () Unit!4135)

(assert (=> b!132788 (= e!86564 lt!69370)))

(assert (=> b!132788 (= lt!69370 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> b!132788 (isDefined!125 (getValueByKey!172 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!132789 () Bool)

(declare-fun Unit!4147 () Unit!4135)

(assert (=> b!132789 (= e!86564 Unit!4147)))

(declare-fun b!132790 () Bool)

(assert (=> b!132790 (= e!86563 (isDefined!125 (getValueByKey!172 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(assert (= (and d!40243 c!24547) b!132788))

(assert (= (and d!40243 (not c!24547)) b!132789))

(assert (= (and d!40243 (not res!63944)) b!132790))

(assert (=> d!40243 m!155869))

(declare-fun m!156307 () Bool)

(assert (=> d!40243 m!156307))

(assert (=> b!132788 m!155869))

(declare-fun m!156309 () Bool)

(assert (=> b!132788 m!156309))

(assert (=> b!132788 m!155869))

(declare-fun m!156311 () Bool)

(assert (=> b!132788 m!156311))

(assert (=> b!132788 m!156311))

(declare-fun m!156313 () Bool)

(assert (=> b!132788 m!156313))

(assert (=> b!132790 m!155869))

(assert (=> b!132790 m!156311))

(assert (=> b!132790 m!156311))

(assert (=> b!132790 m!156313))

(assert (=> b!132580 d!40243))

(assert (=> b!132580 d!40229))

(declare-fun d!40245 () Bool)

(declare-fun res!63945 () Bool)

(declare-fun e!86565 () Bool)

(assert (=> d!40245 (=> (not res!63945) (not e!86565))))

(assert (=> d!40245 (= res!63945 (simpleValid!92 (_2!1325 lt!69179)))))

(assert (=> d!40245 (= (valid!524 (_2!1325 lt!69179)) e!86565)))

(declare-fun b!132791 () Bool)

(declare-fun res!63946 () Bool)

(assert (=> b!132791 (=> (not res!63946) (not e!86565))))

(assert (=> b!132791 (= res!63946 (= (arrayCountValidKeys!0 (_keys!4614 (_2!1325 lt!69179)) #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))) (_size!598 (_2!1325 lt!69179))))))

(declare-fun b!132792 () Bool)

(declare-fun res!63947 () Bool)

(assert (=> b!132792 (=> (not res!63947) (not e!86565))))

(assert (=> b!132792 (= res!63947 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179))))))

(declare-fun b!132793 () Bool)

(assert (=> b!132793 (= e!86565 (arrayNoDuplicates!0 (_keys!4614 (_2!1325 lt!69179)) #b00000000000000000000000000000000 Nil!1714))))

(assert (= (and d!40245 res!63945) b!132791))

(assert (= (and b!132791 res!63946) b!132792))

(assert (= (and b!132792 res!63947) b!132793))

(declare-fun m!156315 () Bool)

(assert (=> d!40245 m!156315))

(declare-fun m!156317 () Bool)

(assert (=> b!132791 m!156317))

(declare-fun m!156319 () Bool)

(assert (=> b!132792 m!156319))

(declare-fun m!156321 () Bool)

(assert (=> b!132793 m!156321))

(assert (=> d!40191 d!40245))

(assert (=> d!40191 d!40187))

(declare-fun d!40247 () Bool)

(assert (=> d!40247 (= (apply!116 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69098) (apply!116 lt!69079 lt!69098))))

(declare-fun lt!69375 () Unit!4135)

(declare-fun choose!822 (ListLongMap!1707 (_ BitVec 64) V!3483 (_ BitVec 64)) Unit!4135)

(assert (=> d!40247 (= lt!69375 (choose!822 lt!69079 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69098))))

(declare-fun e!86568 () Bool)

(assert (=> d!40247 e!86568))

(declare-fun res!63950 () Bool)

(assert (=> d!40247 (=> (not res!63950) (not e!86568))))

(assert (=> d!40247 (= res!63950 (contains!899 lt!69079 lt!69098))))

(assert (=> d!40247 (= (addApplyDifferent!92 lt!69079 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69098) lt!69375)))

(declare-fun b!132797 () Bool)

(assert (=> b!132797 (= e!86568 (not (= lt!69098 lt!69082)))))

(assert (= (and d!40247 res!63950) b!132797))

(declare-fun m!156323 () Bool)

(assert (=> d!40247 m!156323))

(assert (=> d!40247 m!155971))

(assert (=> d!40247 m!155969))

(assert (=> d!40247 m!155971))

(assert (=> d!40247 m!155979))

(declare-fun m!156325 () Bool)

(assert (=> d!40247 m!156325))

(assert (=> b!132426 d!40247))

(declare-fun d!40249 () Bool)

(assert (=> d!40249 (= (apply!116 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69098) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69098)))))

(declare-fun bs!5481 () Bool)

(assert (= bs!5481 d!40249))

(declare-fun m!156327 () Bool)

(assert (=> bs!5481 m!156327))

(assert (=> bs!5481 m!156327))

(declare-fun m!156329 () Bool)

(assert (=> bs!5481 m!156329))

(assert (=> b!132426 d!40249))

(declare-fun d!40251 () Bool)

(assert (=> d!40251 (= (apply!116 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69080) (apply!116 lt!69084 lt!69080))))

(declare-fun lt!69376 () Unit!4135)

(assert (=> d!40251 (= lt!69376 (choose!822 lt!69084 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69080))))

(declare-fun e!86569 () Bool)

(assert (=> d!40251 e!86569))

(declare-fun res!63951 () Bool)

(assert (=> d!40251 (=> (not res!63951) (not e!86569))))

(assert (=> d!40251 (= res!63951 (contains!899 lt!69084 lt!69080))))

(assert (=> d!40251 (= (addApplyDifferent!92 lt!69084 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69080) lt!69376)))

(declare-fun b!132798 () Bool)

(assert (=> b!132798 (= e!86569 (not (= lt!69080 lt!69086)))))

(assert (= (and d!40251 res!63951) b!132798))

(declare-fun m!156331 () Bool)

(assert (=> d!40251 m!156331))

(assert (=> d!40251 m!155963))

(assert (=> d!40251 m!155983))

(assert (=> d!40251 m!155963))

(assert (=> d!40251 m!155965))

(declare-fun m!156333 () Bool)

(assert (=> d!40251 m!156333))

(assert (=> b!132426 d!40251))

(declare-fun d!40253 () Bool)

(declare-fun e!86570 () Bool)

(assert (=> d!40253 e!86570))

(declare-fun res!63953 () Bool)

(assert (=> d!40253 (=> (not res!63953) (not e!86570))))

(declare-fun lt!69377 () ListLongMap!1707)

(assert (=> d!40253 (= res!63953 (contains!899 lt!69377 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun lt!69379 () List!1716)

(assert (=> d!40253 (= lt!69377 (ListLongMap!1708 lt!69379))))

(declare-fun lt!69380 () Unit!4135)

(declare-fun lt!69378 () Unit!4135)

(assert (=> d!40253 (= lt!69380 lt!69378)))

(assert (=> d!40253 (= (getValueByKey!172 lt!69379 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40253 (= lt!69378 (lemmaContainsTupThenGetReturnValue!87 lt!69379 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40253 (= lt!69379 (insertStrictlySorted!90 (toList!869 lt!69093) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40253 (= (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69377)))

(declare-fun b!132799 () Bool)

(declare-fun res!63952 () Bool)

(assert (=> b!132799 (=> (not res!63952) (not e!86570))))

(assert (=> b!132799 (= res!63952 (= (getValueByKey!172 (toList!869 lt!69377) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!132800 () Bool)

(assert (=> b!132800 (= e!86570 (contains!902 (toList!869 lt!69377) (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!40253 res!63953) b!132799))

(assert (= (and b!132799 res!63952) b!132800))

(declare-fun m!156335 () Bool)

(assert (=> d!40253 m!156335))

(declare-fun m!156337 () Bool)

(assert (=> d!40253 m!156337))

(declare-fun m!156339 () Bool)

(assert (=> d!40253 m!156339))

(declare-fun m!156341 () Bool)

(assert (=> d!40253 m!156341))

(declare-fun m!156343 () Bool)

(assert (=> b!132799 m!156343))

(declare-fun m!156345 () Bool)

(assert (=> b!132800 m!156345))

(assert (=> b!132426 d!40253))

(declare-fun d!40255 () Bool)

(declare-fun e!86571 () Bool)

(assert (=> d!40255 e!86571))

(declare-fun res!63954 () Bool)

(assert (=> d!40255 (=> res!63954 e!86571)))

(declare-fun lt!69384 () Bool)

(assert (=> d!40255 (= res!63954 (not lt!69384))))

(declare-fun lt!69381 () Bool)

(assert (=> d!40255 (= lt!69384 lt!69381)))

(declare-fun lt!69383 () Unit!4135)

(declare-fun e!86572 () Unit!4135)

(assert (=> d!40255 (= lt!69383 e!86572)))

(declare-fun c!24548 () Bool)

(assert (=> d!40255 (= c!24548 lt!69381)))

(assert (=> d!40255 (= lt!69381 (containsKey!176 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092))))

(assert (=> d!40255 (= (contains!899 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69092) lt!69384)))

(declare-fun b!132801 () Bool)

(declare-fun lt!69382 () Unit!4135)

(assert (=> b!132801 (= e!86572 lt!69382)))

(assert (=> b!132801 (= lt!69382 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092))))

(assert (=> b!132801 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092))))

(declare-fun b!132802 () Bool)

(declare-fun Unit!4148 () Unit!4135)

(assert (=> b!132802 (= e!86572 Unit!4148)))

(declare-fun b!132803 () Bool)

(assert (=> b!132803 (= e!86571 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092)))))

(assert (= (and d!40255 c!24548) b!132801))

(assert (= (and d!40255 (not c!24548)) b!132802))

(assert (= (and d!40255 (not res!63954)) b!132803))

(declare-fun m!156347 () Bool)

(assert (=> d!40255 m!156347))

(declare-fun m!156349 () Bool)

(assert (=> b!132801 m!156349))

(declare-fun m!156351 () Bool)

(assert (=> b!132801 m!156351))

(assert (=> b!132801 m!156351))

(declare-fun m!156353 () Bool)

(assert (=> b!132801 m!156353))

(assert (=> b!132803 m!156351))

(assert (=> b!132803 m!156351))

(assert (=> b!132803 m!156353))

(assert (=> b!132426 d!40255))

(declare-fun d!40257 () Bool)

(assert (=> d!40257 (= (apply!116 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69094) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69094)))))

(declare-fun bs!5482 () Bool)

(assert (= bs!5482 d!40257))

(declare-fun m!156355 () Bool)

(assert (=> bs!5482 m!156355))

(assert (=> bs!5482 m!156355))

(declare-fun m!156357 () Bool)

(assert (=> bs!5482 m!156357))

(assert (=> b!132426 d!40257))

(declare-fun d!40259 () Bool)

(assert (=> d!40259 (= (apply!116 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69080) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69080)))))

(declare-fun bs!5483 () Bool)

(assert (= bs!5483 d!40259))

(declare-fun m!156359 () Bool)

(assert (=> bs!5483 m!156359))

(assert (=> bs!5483 m!156359))

(declare-fun m!156361 () Bool)

(assert (=> bs!5483 m!156361))

(assert (=> b!132426 d!40259))

(declare-fun d!40261 () Bool)

(declare-fun e!86573 () Bool)

(assert (=> d!40261 e!86573))

(declare-fun res!63956 () Bool)

(assert (=> d!40261 (=> (not res!63956) (not e!86573))))

(declare-fun lt!69385 () ListLongMap!1707)

(assert (=> d!40261 (= res!63956 (contains!899 lt!69385 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun lt!69387 () List!1716)

(assert (=> d!40261 (= lt!69385 (ListLongMap!1708 lt!69387))))

(declare-fun lt!69388 () Unit!4135)

(declare-fun lt!69386 () Unit!4135)

(assert (=> d!40261 (= lt!69388 lt!69386)))

(assert (=> d!40261 (= (getValueByKey!172 lt!69387 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40261 (= lt!69386 (lemmaContainsTupThenGetReturnValue!87 lt!69387 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40261 (= lt!69387 (insertStrictlySorted!90 (toList!869 lt!69079) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40261 (= (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69385)))

(declare-fun b!132804 () Bool)

(declare-fun res!63955 () Bool)

(assert (=> b!132804 (=> (not res!63955) (not e!86573))))

(assert (=> b!132804 (= res!63955 (= (getValueByKey!172 (toList!869 lt!69385) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!132805 () Bool)

(assert (=> b!132805 (= e!86573 (contains!902 (toList!869 lt!69385) (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!40261 res!63956) b!132804))

(assert (= (and b!132804 res!63955) b!132805))

(declare-fun m!156363 () Bool)

(assert (=> d!40261 m!156363))

(declare-fun m!156365 () Bool)

(assert (=> d!40261 m!156365))

(declare-fun m!156367 () Bool)

(assert (=> d!40261 m!156367))

(declare-fun m!156369 () Bool)

(assert (=> d!40261 m!156369))

(declare-fun m!156371 () Bool)

(assert (=> b!132804 m!156371))

(declare-fun m!156373 () Bool)

(assert (=> b!132805 m!156373))

(assert (=> b!132426 d!40261))

(declare-fun b!132830 () Bool)

(declare-fun e!86589 () Bool)

(declare-fun e!86592 () Bool)

(assert (=> b!132830 (= e!86589 e!86592)))

(declare-fun c!24557 () Bool)

(declare-fun e!86594 () Bool)

(assert (=> b!132830 (= c!24557 e!86594)))

(declare-fun res!63968 () Bool)

(assert (=> b!132830 (=> (not res!63968) (not e!86594))))

(assert (=> b!132830 (= res!63968 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!132831 () Bool)

(declare-fun e!86593 () Bool)

(declare-fun lt!69408 () ListLongMap!1707)

(declare-fun isEmpty!410 (ListLongMap!1707) Bool)

(assert (=> b!132831 (= e!86593 (isEmpty!410 lt!69408))))

(declare-fun b!132832 () Bool)

(declare-fun lt!69404 () Unit!4135)

(declare-fun lt!69405 () Unit!4135)

(assert (=> b!132832 (= lt!69404 lt!69405)))

(declare-fun lt!69403 () V!3483)

(declare-fun lt!69407 () ListLongMap!1707)

(declare-fun lt!69409 () (_ BitVec 64))

(declare-fun lt!69406 () (_ BitVec 64))

(assert (=> b!132832 (not (contains!899 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403)) lt!69409))))

(declare-fun addStillNotContains!61 (ListLongMap!1707 (_ BitVec 64) V!3483 (_ BitVec 64)) Unit!4135)

(assert (=> b!132832 (= lt!69405 (addStillNotContains!61 lt!69407 lt!69406 lt!69403 lt!69409))))

(assert (=> b!132832 (= lt!69409 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!132832 (= lt!69403 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!132832 (= lt!69406 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!14650 () ListLongMap!1707)

(assert (=> b!132832 (= lt!69407 call!14650)))

(declare-fun e!86591 () ListLongMap!1707)

(assert (=> b!132832 (= e!86591 (+!175 call!14650 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!132833 () Bool)

(assert (=> b!132833 (= e!86592 e!86593)))

(declare-fun c!24560 () Bool)

(assert (=> b!132833 (= c!24560 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!132834 () Bool)

(assert (=> b!132834 (= e!86594 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!132834 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!132835 () Bool)

(declare-fun res!63966 () Bool)

(assert (=> b!132835 (=> (not res!63966) (not e!86589))))

(assert (=> b!132835 (= res!63966 (not (contains!899 lt!69408 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!132836 () Bool)

(assert (=> b!132836 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> b!132836 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2531 (_values!2848 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun e!86588 () Bool)

(assert (=> b!132836 (= e!86588 (= (apply!116 lt!69408 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!40263 () Bool)

(assert (=> d!40263 e!86589))

(declare-fun res!63967 () Bool)

(assert (=> d!40263 (=> (not res!63967) (not e!86589))))

(assert (=> d!40263 (= res!63967 (not (contains!899 lt!69408 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!86590 () ListLongMap!1707)

(assert (=> d!40263 (= lt!69408 e!86590)))

(declare-fun c!24558 () Bool)

(assert (=> d!40263 (= c!24558 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!40263 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!40263 (= (getCurrentListMapNoExtraKeys!141 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992)))) lt!69408)))

(declare-fun b!132837 () Bool)

(assert (=> b!132837 (= e!86591 call!14650)))

(declare-fun bm!14647 () Bool)

(assert (=> bm!14647 (= call!14650 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!132838 () Bool)

(assert (=> b!132838 (= e!86592 e!86588)))

(assert (=> b!132838 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun res!63965 () Bool)

(assert (=> b!132838 (= res!63965 (contains!899 lt!69408 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!132838 (=> (not res!63965) (not e!86588))))

(declare-fun b!132839 () Bool)

(assert (=> b!132839 (= e!86590 (ListLongMap!1708 Nil!1713))))

(declare-fun b!132840 () Bool)

(assert (=> b!132840 (= e!86593 (= lt!69408 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!132841 () Bool)

(assert (=> b!132841 (= e!86590 e!86591)))

(declare-fun c!24559 () Bool)

(assert (=> b!132841 (= c!24559 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!40263 c!24558) b!132839))

(assert (= (and d!40263 (not c!24558)) b!132841))

(assert (= (and b!132841 c!24559) b!132832))

(assert (= (and b!132841 (not c!24559)) b!132837))

(assert (= (or b!132832 b!132837) bm!14647))

(assert (= (and d!40263 res!63967) b!132835))

(assert (= (and b!132835 res!63966) b!132830))

(assert (= (and b!132830 res!63968) b!132834))

(assert (= (and b!132830 c!24557) b!132838))

(assert (= (and b!132830 (not c!24557)) b!132833))

(assert (= (and b!132838 res!63965) b!132836))

(assert (= (and b!132833 c!24560) b!132840))

(assert (= (and b!132833 (not c!24560)) b!132831))

(declare-fun b_lambda!5901 () Bool)

(assert (=> (not b_lambda!5901) (not b!132832)))

(assert (=> b!132832 t!6164))

(declare-fun b_and!8219 () Bool)

(assert (= b_and!8215 (and (=> t!6164 result!3983) b_and!8219)))

(assert (=> b!132832 t!6166))

(declare-fun b_and!8221 () Bool)

(assert (= b_and!8217 (and (=> t!6166 result!3987) b_and!8221)))

(declare-fun b_lambda!5903 () Bool)

(assert (=> (not b_lambda!5903) (not b!132836)))

(assert (=> b!132836 t!6164))

(declare-fun b_and!8223 () Bool)

(assert (= b_and!8219 (and (=> t!6164 result!3983) b_and!8223)))

(assert (=> b!132836 t!6166))

(declare-fun b_and!8225 () Bool)

(assert (= b_and!8221 (and (=> t!6166 result!3987) b_and!8225)))

(declare-fun m!156375 () Bool)

(assert (=> b!132831 m!156375))

(declare-fun m!156377 () Bool)

(assert (=> d!40263 m!156377))

(assert (=> d!40263 m!155867))

(declare-fun m!156379 () Bool)

(assert (=> b!132835 m!156379))

(assert (=> b!132841 m!155949))

(assert (=> b!132841 m!155949))

(assert (=> b!132841 m!155957))

(assert (=> b!132834 m!155949))

(assert (=> b!132834 m!155949))

(assert (=> b!132834 m!155957))

(assert (=> b!132836 m!155893))

(assert (=> b!132836 m!155945))

(assert (=> b!132836 m!155893))

(assert (=> b!132836 m!155947))

(assert (=> b!132836 m!155945))

(assert (=> b!132836 m!155949))

(declare-fun m!156381 () Bool)

(assert (=> b!132836 m!156381))

(assert (=> b!132836 m!155949))

(assert (=> b!132838 m!155949))

(assert (=> b!132838 m!155949))

(declare-fun m!156383 () Bool)

(assert (=> b!132838 m!156383))

(declare-fun m!156385 () Bool)

(assert (=> b!132840 m!156385))

(assert (=> bm!14647 m!156385))

(assert (=> b!132832 m!155893))

(assert (=> b!132832 m!155945))

(assert (=> b!132832 m!155893))

(assert (=> b!132832 m!155947))

(declare-fun m!156387 () Bool)

(assert (=> b!132832 m!156387))

(declare-fun m!156389 () Bool)

(assert (=> b!132832 m!156389))

(assert (=> b!132832 m!155945))

(declare-fun m!156391 () Bool)

(assert (=> b!132832 m!156391))

(assert (=> b!132832 m!155949))

(assert (=> b!132832 m!156389))

(declare-fun m!156393 () Bool)

(assert (=> b!132832 m!156393))

(assert (=> b!132426 d!40263))

(declare-fun d!40265 () Bool)

(assert (=> d!40265 (= (apply!116 lt!69079 lt!69098) (get!1486 (getValueByKey!172 (toList!869 lt!69079) lt!69098)))))

(declare-fun bs!5484 () Bool)

(assert (= bs!5484 d!40265))

(declare-fun m!156395 () Bool)

(assert (=> bs!5484 m!156395))

(assert (=> bs!5484 m!156395))

(declare-fun m!156397 () Bool)

(assert (=> bs!5484 m!156397))

(assert (=> b!132426 d!40265))

(declare-fun d!40267 () Bool)

(assert (=> d!40267 (= (apply!116 lt!69084 lt!69080) (get!1486 (getValueByKey!172 (toList!869 lt!69084) lt!69080)))))

(declare-fun bs!5485 () Bool)

(assert (= bs!5485 d!40267))

(declare-fun m!156399 () Bool)

(assert (=> bs!5485 m!156399))

(assert (=> bs!5485 m!156399))

(declare-fun m!156401 () Bool)

(assert (=> bs!5485 m!156401))

(assert (=> b!132426 d!40267))

(declare-fun d!40269 () Bool)

(assert (=> d!40269 (contains!899 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69092)))

(declare-fun lt!69412 () Unit!4135)

(declare-fun choose!823 (ListLongMap!1707 (_ BitVec 64) V!3483 (_ BitVec 64)) Unit!4135)

(assert (=> d!40269 (= lt!69412 (choose!823 lt!69093 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69092))))

(assert (=> d!40269 (contains!899 lt!69093 lt!69092)))

(assert (=> d!40269 (= (addStillContains!92 lt!69093 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69092) lt!69412)))

(declare-fun bs!5486 () Bool)

(assert (= bs!5486 d!40269))

(assert (=> bs!5486 m!155961))

(assert (=> bs!5486 m!155961))

(assert (=> bs!5486 m!155985))

(declare-fun m!156403 () Bool)

(assert (=> bs!5486 m!156403))

(declare-fun m!156405 () Bool)

(assert (=> bs!5486 m!156405))

(assert (=> b!132426 d!40269))

(declare-fun d!40271 () Bool)

(assert (=> d!40271 (= (apply!116 lt!69081 lt!69094) (get!1486 (getValueByKey!172 (toList!869 lt!69081) lt!69094)))))

(declare-fun bs!5487 () Bool)

(assert (= bs!5487 d!40271))

(declare-fun m!156407 () Bool)

(assert (=> bs!5487 m!156407))

(assert (=> bs!5487 m!156407))

(declare-fun m!156409 () Bool)

(assert (=> bs!5487 m!156409))

(assert (=> b!132426 d!40271))

(declare-fun d!40273 () Bool)

(declare-fun e!86595 () Bool)

(assert (=> d!40273 e!86595))

(declare-fun res!63970 () Bool)

(assert (=> d!40273 (=> (not res!63970) (not e!86595))))

(declare-fun lt!69413 () ListLongMap!1707)

(assert (=> d!40273 (= res!63970 (contains!899 lt!69413 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun lt!69415 () List!1716)

(assert (=> d!40273 (= lt!69413 (ListLongMap!1708 lt!69415))))

(declare-fun lt!69416 () Unit!4135)

(declare-fun lt!69414 () Unit!4135)

(assert (=> d!40273 (= lt!69416 lt!69414)))

(assert (=> d!40273 (= (getValueByKey!172 lt!69415 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40273 (= lt!69414 (lemmaContainsTupThenGetReturnValue!87 lt!69415 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40273 (= lt!69415 (insertStrictlySorted!90 (toList!869 lt!69081) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40273 (= (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69413)))

(declare-fun b!132843 () Bool)

(declare-fun res!63969 () Bool)

(assert (=> b!132843 (=> (not res!63969) (not e!86595))))

(assert (=> b!132843 (= res!63969 (= (getValueByKey!172 (toList!869 lt!69413) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!132844 () Bool)

(assert (=> b!132844 (= e!86595 (contains!902 (toList!869 lt!69413) (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!40273 res!63970) b!132843))

(assert (= (and b!132843 res!63969) b!132844))

(declare-fun m!156411 () Bool)

(assert (=> d!40273 m!156411))

(declare-fun m!156413 () Bool)

(assert (=> d!40273 m!156413))

(declare-fun m!156415 () Bool)

(assert (=> d!40273 m!156415))

(declare-fun m!156417 () Bool)

(assert (=> d!40273 m!156417))

(declare-fun m!156419 () Bool)

(assert (=> b!132843 m!156419))

(declare-fun m!156421 () Bool)

(assert (=> b!132844 m!156421))

(assert (=> b!132426 d!40273))

(declare-fun d!40275 () Bool)

(assert (=> d!40275 (= (apply!116 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69094) (apply!116 lt!69081 lt!69094))))

(declare-fun lt!69417 () Unit!4135)

(assert (=> d!40275 (= lt!69417 (choose!822 lt!69081 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69094))))

(declare-fun e!86596 () Bool)

(assert (=> d!40275 e!86596))

(declare-fun res!63971 () Bool)

(assert (=> d!40275 (=> (not res!63971) (not e!86596))))

(assert (=> d!40275 (= res!63971 (contains!899 lt!69081 lt!69094))))

(assert (=> d!40275 (= (addApplyDifferent!92 lt!69081 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69094) lt!69417)))

(declare-fun b!132845 () Bool)

(assert (=> b!132845 (= e!86596 (not (= lt!69094 lt!69096)))))

(assert (= (and d!40275 res!63971) b!132845))

(declare-fun m!156423 () Bool)

(assert (=> d!40275 m!156423))

(assert (=> d!40275 m!155959))

(assert (=> d!40275 m!155975))

(assert (=> d!40275 m!155959))

(assert (=> d!40275 m!155977))

(declare-fun m!156425 () Bool)

(assert (=> d!40275 m!156425))

(assert (=> b!132426 d!40275))

(declare-fun d!40277 () Bool)

(declare-fun e!86597 () Bool)

(assert (=> d!40277 e!86597))

(declare-fun res!63973 () Bool)

(assert (=> d!40277 (=> (not res!63973) (not e!86597))))

(declare-fun lt!69418 () ListLongMap!1707)

(assert (=> d!40277 (= res!63973 (contains!899 lt!69418 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun lt!69420 () List!1716)

(assert (=> d!40277 (= lt!69418 (ListLongMap!1708 lt!69420))))

(declare-fun lt!69421 () Unit!4135)

(declare-fun lt!69419 () Unit!4135)

(assert (=> d!40277 (= lt!69421 lt!69419)))

(assert (=> d!40277 (= (getValueByKey!172 lt!69420 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40277 (= lt!69419 (lemmaContainsTupThenGetReturnValue!87 lt!69420 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40277 (= lt!69420 (insertStrictlySorted!90 (toList!869 lt!69084) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40277 (= (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69418)))

(declare-fun b!132846 () Bool)

(declare-fun res!63972 () Bool)

(assert (=> b!132846 (=> (not res!63972) (not e!86597))))

(assert (=> b!132846 (= res!63972 (= (getValueByKey!172 (toList!869 lt!69418) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!132847 () Bool)

(assert (=> b!132847 (= e!86597 (contains!902 (toList!869 lt!69418) (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!40277 res!63973) b!132846))

(assert (= (and b!132846 res!63972) b!132847))

(declare-fun m!156427 () Bool)

(assert (=> d!40277 m!156427))

(declare-fun m!156429 () Bool)

(assert (=> d!40277 m!156429))

(declare-fun m!156431 () Bool)

(assert (=> d!40277 m!156431))

(declare-fun m!156433 () Bool)

(assert (=> d!40277 m!156433))

(declare-fun m!156435 () Bool)

(assert (=> b!132846 m!156435))

(declare-fun m!156437 () Bool)

(assert (=> b!132847 m!156437))

(assert (=> b!132426 d!40277))

(declare-fun d!40279 () Bool)

(declare-fun e!86598 () Bool)

(assert (=> d!40279 e!86598))

(declare-fun res!63975 () Bool)

(assert (=> d!40279 (=> (not res!63975) (not e!86598))))

(declare-fun lt!69422 () ListLongMap!1707)

(assert (=> d!40279 (= res!63975 (contains!899 lt!69422 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!69424 () List!1716)

(assert (=> d!40279 (= lt!69422 (ListLongMap!1708 lt!69424))))

(declare-fun lt!69425 () Unit!4135)

(declare-fun lt!69423 () Unit!4135)

(assert (=> d!40279 (= lt!69425 lt!69423)))

(assert (=> d!40279 (= (getValueByKey!172 lt!69424 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!177 (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40279 (= lt!69423 (lemmaContainsTupThenGetReturnValue!87 lt!69424 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40279 (= lt!69424 (insertStrictlySorted!90 (toList!869 e!86455) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40279 (= (+!175 e!86455 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69422)))

(declare-fun b!132848 () Bool)

(declare-fun res!63974 () Bool)

(assert (=> b!132848 (=> (not res!63974) (not e!86598))))

(assert (=> b!132848 (= res!63974 (= (getValueByKey!172 (toList!869 lt!69422) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!177 (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!132849 () Bool)

(assert (=> b!132849 (= e!86598 (contains!902 (toList!869 lt!69422) (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!40279 res!63975) b!132848))

(assert (= (and b!132848 res!63974) b!132849))

(declare-fun m!156439 () Bool)

(assert (=> d!40279 m!156439))

(declare-fun m!156441 () Bool)

(assert (=> d!40279 m!156441))

(declare-fun m!156443 () Bool)

(assert (=> d!40279 m!156443))

(declare-fun m!156445 () Bool)

(assert (=> d!40279 m!156445))

(declare-fun m!156447 () Bool)

(assert (=> b!132848 m!156447))

(declare-fun m!156449 () Bool)

(assert (=> b!132849 m!156449))

(assert (=> bm!14612 d!40279))

(declare-fun d!40281 () Bool)

(assert (=> d!40281 (= (apply!116 lt!69095 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5488 () Bool)

(assert (= bs!5488 d!40281))

(declare-fun m!156451 () Bool)

(assert (=> bs!5488 m!156451))

(assert (=> bs!5488 m!156451))

(declare-fun m!156453 () Bool)

(assert (=> bs!5488 m!156453))

(assert (=> b!132444 d!40281))

(declare-fun d!40283 () Bool)

(assert (=> d!40283 (= (+!175 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69189 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69428 () Unit!4135)

(declare-fun choose!824 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 V!3483 Int) Unit!4135)

(assert (=> d!40283 (= lt!69428 (choose!824 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69189 (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40283 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40283 (= (lemmaChangeZeroKeyThenAddPairToListMap!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69189 (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) (defaultEntry!2865 newMap!16)) lt!69428)))

(declare-fun bs!5489 () Bool)

(assert (= bs!5489 d!40283))

(assert (=> bs!5489 m!155895))

(declare-fun m!156455 () Bool)

(assert (=> bs!5489 m!156455))

(assert (=> bs!5489 m!156157))

(assert (=> bs!5489 m!155939))

(declare-fun m!156457 () Bool)

(assert (=> bs!5489 m!156457))

(assert (=> bs!5489 m!155895))

(declare-fun m!156459 () Bool)

(assert (=> bs!5489 m!156459))

(assert (=> bs!5489 m!155939))

(assert (=> b!132595 d!40283))

(assert (=> bm!14606 d!40177))

(declare-fun d!40285 () Bool)

(assert (=> d!40285 (= (apply!116 lt!69095 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5490 () Bool)

(assert (= bs!5490 d!40285))

(assert (=> bs!5490 m!156237))

(assert (=> bs!5490 m!156237))

(declare-fun m!156461 () Bool)

(assert (=> bs!5490 m!156461))

(assert (=> b!132439 d!40285))

(assert (=> bm!14542 d!40263))

(declare-fun d!40287 () Bool)

(declare-fun res!63976 () Bool)

(declare-fun e!86599 () Bool)

(assert (=> d!40287 (=> (not res!63976) (not e!86599))))

(assert (=> d!40287 (= res!63976 (simpleValid!92 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!40287 (= (valid!524 (v!3199 (underlying!455 thiss!992))) e!86599)))

(declare-fun b!132850 () Bool)

(declare-fun res!63977 () Bool)

(assert (=> b!132850 (=> (not res!63977) (not e!86599))))

(assert (=> b!132850 (= res!63977 (= (arrayCountValidKeys!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000000 (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))) (_size!598 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!132851 () Bool)

(declare-fun res!63978 () Bool)

(assert (=> b!132851 (=> (not res!63978) (not e!86599))))

(assert (=> b!132851 (= res!63978 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!132852 () Bool)

(assert (=> b!132852 (= e!86599 (arrayNoDuplicates!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000000 Nil!1714))))

(assert (= (and d!40287 res!63976) b!132850))

(assert (= (and b!132850 res!63977) b!132851))

(assert (= (and b!132851 res!63978) b!132852))

(declare-fun m!156463 () Bool)

(assert (=> d!40287 m!156463))

(declare-fun m!156465 () Bool)

(assert (=> b!132850 m!156465))

(assert (=> b!132851 m!155875))

(assert (=> b!132852 m!155877))

(assert (=> d!40185 d!40287))

(declare-fun b!132853 () Bool)

(declare-fun e!86600 () SeekEntryResult!275)

(declare-fun lt!69430 () SeekEntryResult!275)

(assert (=> b!132853 (= e!86600 (Found!275 (index!3262 lt!69430)))))

(declare-fun lt!69431 () SeekEntryResult!275)

(declare-fun d!40289 () Bool)

(assert (=> d!40289 (and (or ((_ is Undefined!275) lt!69431) (not ((_ is Found!275) lt!69431)) (and (bvsge (index!3261 lt!69431) #b00000000000000000000000000000000) (bvslt (index!3261 lt!69431) (size!2530 (_keys!4614 newMap!16))))) (or ((_ is Undefined!275) lt!69431) ((_ is Found!275) lt!69431) (not ((_ is MissingZero!275) lt!69431)) (and (bvsge (index!3260 lt!69431) #b00000000000000000000000000000000) (bvslt (index!3260 lt!69431) (size!2530 (_keys!4614 newMap!16))))) (or ((_ is Undefined!275) lt!69431) ((_ is Found!275) lt!69431) ((_ is MissingZero!275) lt!69431) (not ((_ is MissingVacant!275) lt!69431)) (and (bvsge (index!3263 lt!69431) #b00000000000000000000000000000000) (bvslt (index!3263 lt!69431) (size!2530 (_keys!4614 newMap!16))))) (or ((_ is Undefined!275) lt!69431) (ite ((_ is Found!275) lt!69431) (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69431)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite ((_ is MissingZero!275) lt!69431) (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3260 lt!69431)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!275) lt!69431) (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3263 lt!69431)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!86601 () SeekEntryResult!275)

(assert (=> d!40289 (= lt!69431 e!86601)))

(declare-fun c!24562 () Bool)

(assert (=> d!40289 (= c!24562 (and ((_ is Intermediate!275) lt!69430) (undefined!1087 lt!69430)))))

(assert (=> d!40289 (= lt!69430 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (mask!7165 newMap!16)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (=> d!40289 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40289 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!69431)))

(declare-fun b!132854 () Bool)

(assert (=> b!132854 (= e!86601 e!86600)))

(declare-fun lt!69429 () (_ BitVec 64))

(assert (=> b!132854 (= lt!69429 (select (arr!2261 (_keys!4614 newMap!16)) (index!3262 lt!69430)))))

(declare-fun c!24561 () Bool)

(assert (=> b!132854 (= c!24561 (= lt!69429 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!132855 () Bool)

(declare-fun e!86602 () SeekEntryResult!275)

(assert (=> b!132855 (= e!86602 (MissingZero!275 (index!3262 lt!69430)))))

(declare-fun b!132856 () Bool)

(declare-fun c!24563 () Bool)

(assert (=> b!132856 (= c!24563 (= lt!69429 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132856 (= e!86600 e!86602)))

(declare-fun b!132857 () Bool)

(assert (=> b!132857 (= e!86601 Undefined!275)))

(declare-fun b!132858 () Bool)

(assert (=> b!132858 (= e!86602 (seekKeyOrZeroReturnVacant!0 (x!15592 lt!69430) (index!3262 lt!69430) (index!3262 lt!69430) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (= (and d!40289 c!24562) b!132857))

(assert (= (and d!40289 (not c!24562)) b!132854))

(assert (= (and b!132854 c!24561) b!132853))

(assert (= (and b!132854 (not c!24561)) b!132856))

(assert (= (and b!132856 c!24563) b!132855))

(assert (= (and b!132856 (not c!24563)) b!132858))

(declare-fun m!156467 () Bool)

(assert (=> d!40289 m!156467))

(declare-fun m!156469 () Bool)

(assert (=> d!40289 m!156469))

(assert (=> d!40289 m!155869))

(declare-fun m!156471 () Bool)

(assert (=> d!40289 m!156471))

(assert (=> d!40289 m!155869))

(assert (=> d!40289 m!156469))

(assert (=> d!40289 m!156157))

(declare-fun m!156473 () Bool)

(assert (=> d!40289 m!156473))

(declare-fun m!156475 () Bool)

(assert (=> d!40289 m!156475))

(declare-fun m!156477 () Bool)

(assert (=> b!132854 m!156477))

(assert (=> b!132858 m!155869))

(declare-fun m!156479 () Bool)

(assert (=> b!132858 m!156479))

(assert (=> b!132608 d!40289))

(assert (=> d!40179 d!40195))

(declare-fun d!40291 () Bool)

(declare-fun res!63983 () Bool)

(declare-fun e!86607 () Bool)

(assert (=> d!40291 (=> res!63983 e!86607)))

(assert (=> d!40291 (= res!63983 (and ((_ is Cons!1712) (toList!869 lt!69022)) (= (_1!1324 (h!2317 (toList!869 lt!69022))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(assert (=> d!40291 (= (containsKey!176 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!86607)))

(declare-fun b!132863 () Bool)

(declare-fun e!86608 () Bool)

(assert (=> b!132863 (= e!86607 e!86608)))

(declare-fun res!63984 () Bool)

(assert (=> b!132863 (=> (not res!63984) (not e!86608))))

(assert (=> b!132863 (= res!63984 (and (or (not ((_ is Cons!1712) (toList!869 lt!69022))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69022))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))) ((_ is Cons!1712) (toList!869 lt!69022)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69022))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun b!132864 () Bool)

(assert (=> b!132864 (= e!86608 (containsKey!176 (t!6167 (toList!869 lt!69022)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (= (and d!40291 (not res!63983)) b!132863))

(assert (= (and b!132863 res!63984) b!132864))

(assert (=> b!132864 m!155869))

(declare-fun m!156481 () Bool)

(assert (=> b!132864 m!156481))

(assert (=> d!40189 d!40291))

(declare-fun d!40293 () Bool)

(declare-fun e!86609 () Bool)

(assert (=> d!40293 e!86609))

(declare-fun res!63985 () Bool)

(assert (=> d!40293 (=> res!63985 e!86609)))

(declare-fun lt!69435 () Bool)

(assert (=> d!40293 (= res!63985 (not lt!69435))))

(declare-fun lt!69432 () Bool)

(assert (=> d!40293 (= lt!69435 lt!69432)))

(declare-fun lt!69434 () Unit!4135)

(declare-fun e!86610 () Unit!4135)

(assert (=> d!40293 (= lt!69434 e!86610)))

(declare-fun c!24564 () Bool)

(assert (=> d!40293 (= c!24564 lt!69432)))

(assert (=> d!40293 (= lt!69432 (containsKey!176 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40293 (= (contains!899 lt!69095 #b1000000000000000000000000000000000000000000000000000000000000000) lt!69435)))

(declare-fun b!132865 () Bool)

(declare-fun lt!69433 () Unit!4135)

(assert (=> b!132865 (= e!86610 lt!69433)))

(assert (=> b!132865 (= lt!69433 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132865 (isDefined!125 (getValueByKey!172 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132866 () Bool)

(declare-fun Unit!4149 () Unit!4135)

(assert (=> b!132866 (= e!86610 Unit!4149)))

(declare-fun b!132867 () Bool)

(assert (=> b!132867 (= e!86609 (isDefined!125 (getValueByKey!172 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40293 c!24564) b!132865))

(assert (= (and d!40293 (not c!24564)) b!132866))

(assert (= (and d!40293 (not res!63985)) b!132867))

(declare-fun m!156483 () Bool)

(assert (=> d!40293 m!156483))

(declare-fun m!156485 () Bool)

(assert (=> b!132865 m!156485))

(assert (=> b!132865 m!156451))

(assert (=> b!132865 m!156451))

(declare-fun m!156487 () Bool)

(assert (=> b!132865 m!156487))

(assert (=> b!132867 m!156451))

(assert (=> b!132867 m!156451))

(assert (=> b!132867 m!156487))

(assert (=> bm!14538 d!40293))

(declare-fun call!14656 () Bool)

(declare-fun bm!14652 () Bool)

(assert (=> bm!14652 (= call!14656 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!40295 () Bool)

(declare-fun e!86620 () Bool)

(assert (=> d!40295 e!86620))

(declare-fun c!24569 () Bool)

(declare-fun lt!69440 () SeekEntryResult!275)

(assert (=> d!40295 (= c!24569 ((_ is MissingZero!275) lt!69440))))

(assert (=> d!40295 (= lt!69440 (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun lt!69441 () Unit!4135)

(declare-fun choose!825 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 64) Int) Unit!4135)

(assert (=> d!40295 (= lt!69441 (choose!825 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40295 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40295 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)) lt!69441)))

(declare-fun b!132884 () Bool)

(declare-fun e!86621 () Bool)

(assert (=> b!132884 (= e!86621 ((_ is Undefined!275) lt!69440))))

(declare-fun b!132885 () Bool)

(assert (=> b!132885 (and (bvsge (index!3260 lt!69440) #b00000000000000000000000000000000) (bvslt (index!3260 lt!69440) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!63996 () Bool)

(assert (=> b!132885 (= res!63996 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3260 lt!69440)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86622 () Bool)

(assert (=> b!132885 (=> (not res!63996) (not e!86622))))

(declare-fun b!132886 () Bool)

(declare-fun e!86619 () Bool)

(assert (=> b!132886 (= e!86619 (not call!14656))))

(declare-fun b!132887 () Bool)

(assert (=> b!132887 (= e!86622 (not call!14656))))

(declare-fun b!132888 () Bool)

(assert (=> b!132888 (= e!86620 e!86621)))

(declare-fun c!24570 () Bool)

(assert (=> b!132888 (= c!24570 ((_ is MissingVacant!275) lt!69440))))

(declare-fun bm!14653 () Bool)

(declare-fun call!14655 () Bool)

(assert (=> bm!14653 (= call!14655 (inRange!0 (ite c!24569 (index!3260 lt!69440) (index!3263 lt!69440)) (mask!7165 newMap!16)))))

(declare-fun b!132889 () Bool)

(declare-fun res!63995 () Bool)

(assert (=> b!132889 (=> (not res!63995) (not e!86619))))

(assert (=> b!132889 (= res!63995 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3263 lt!69440)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132889 (and (bvsge (index!3263 lt!69440) #b00000000000000000000000000000000) (bvslt (index!3263 lt!69440) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!132890 () Bool)

(assert (=> b!132890 (= e!86620 e!86622)))

(declare-fun res!63997 () Bool)

(assert (=> b!132890 (= res!63997 call!14655)))

(assert (=> b!132890 (=> (not res!63997) (not e!86622))))

(declare-fun b!132891 () Bool)

(declare-fun res!63994 () Bool)

(assert (=> b!132891 (=> (not res!63994) (not e!86619))))

(assert (=> b!132891 (= res!63994 call!14655)))

(assert (=> b!132891 (= e!86621 e!86619)))

(assert (= (and d!40295 c!24569) b!132890))

(assert (= (and d!40295 (not c!24569)) b!132888))

(assert (= (and b!132890 res!63997) b!132885))

(assert (= (and b!132885 res!63996) b!132887))

(assert (= (and b!132888 c!24570) b!132891))

(assert (= (and b!132888 (not c!24570)) b!132884))

(assert (= (and b!132891 res!63994) b!132889))

(assert (= (and b!132889 res!63995) b!132886))

(assert (= (or b!132890 b!132891) bm!14653))

(assert (= (or b!132887 b!132886) bm!14652))

(assert (=> d!40295 m!155869))

(assert (=> d!40295 m!156037))

(assert (=> d!40295 m!155869))

(declare-fun m!156489 () Bool)

(assert (=> d!40295 m!156489))

(assert (=> d!40295 m!156157))

(declare-fun m!156491 () Bool)

(assert (=> bm!14653 m!156491))

(declare-fun m!156493 () Bool)

(assert (=> b!132889 m!156493))

(assert (=> bm!14652 m!155869))

(assert (=> bm!14652 m!156065))

(declare-fun m!156495 () Bool)

(assert (=> b!132885 m!156495))

(assert (=> bm!14599 d!40295))

(assert (=> b!132455 d!40203))

(declare-fun d!40297 () Bool)

(declare-fun e!86623 () Bool)

(assert (=> d!40297 e!86623))

(declare-fun res!63999 () Bool)

(assert (=> d!40297 (=> (not res!63999) (not e!86623))))

(declare-fun lt!69442 () ListLongMap!1707)

(assert (=> d!40297 (= res!63999 (contains!899 lt!69442 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun lt!69444 () List!1716)

(assert (=> d!40297 (= lt!69442 (ListLongMap!1708 lt!69444))))

(declare-fun lt!69445 () Unit!4135)

(declare-fun lt!69443 () Unit!4135)

(assert (=> d!40297 (= lt!69445 lt!69443)))

(assert (=> d!40297 (= (getValueByKey!172 lt!69444 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40297 (= lt!69443 (lemmaContainsTupThenGetReturnValue!87 lt!69444 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40297 (= lt!69444 (insertStrictlySorted!90 (toList!869 call!14544) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40297 (= (+!175 call!14544 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69442)))

(declare-fun b!132892 () Bool)

(declare-fun res!63998 () Bool)

(assert (=> b!132892 (=> (not res!63998) (not e!86623))))

(assert (=> b!132892 (= res!63998 (= (getValueByKey!172 (toList!869 lt!69442) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!132893 () Bool)

(assert (=> b!132893 (= e!86623 (contains!902 (toList!869 lt!69442) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!40297 res!63999) b!132892))

(assert (= (and b!132892 res!63998) b!132893))

(declare-fun m!156497 () Bool)

(assert (=> d!40297 m!156497))

(declare-fun m!156499 () Bool)

(assert (=> d!40297 m!156499))

(declare-fun m!156501 () Bool)

(assert (=> d!40297 m!156501))

(declare-fun m!156503 () Bool)

(assert (=> d!40297 m!156503))

(declare-fun m!156505 () Bool)

(assert (=> b!132892 m!156505))

(declare-fun m!156507 () Bool)

(assert (=> b!132893 m!156507))

(assert (=> b!132435 d!40297))

(assert (=> d!40177 d!40229))

(declare-fun d!40299 () Bool)

(declare-fun res!64000 () Bool)

(declare-fun e!86624 () Bool)

(assert (=> d!40299 (=> res!64000 e!86624)))

(assert (=> d!40299 (= res!64000 (= (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> d!40299 (= (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b00000000000000000000000000000000) e!86624)))

(declare-fun b!132894 () Bool)

(declare-fun e!86625 () Bool)

(assert (=> b!132894 (= e!86624 e!86625)))

(declare-fun res!64001 () Bool)

(assert (=> b!132894 (=> (not res!64001) (not e!86625))))

(assert (=> b!132894 (= res!64001 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!132895 () Bool)

(assert (=> b!132895 (= e!86625 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40299 (not res!64000)) b!132894))

(assert (= (and b!132894 res!64001) b!132895))

(assert (=> d!40299 m!156163))

(assert (=> b!132895 m!155869))

(declare-fun m!156509 () Bool)

(assert (=> b!132895 m!156509))

(assert (=> bm!14602 d!40299))

(declare-fun d!40301 () Bool)

(assert (=> d!40301 (= (get!1485 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132617 d!40301))

(declare-fun b!132896 () Bool)

(declare-fun e!86638 () Unit!4135)

(declare-fun lt!69446 () Unit!4135)

(assert (=> b!132896 (= e!86638 lt!69446)))

(declare-fun lt!69462 () ListLongMap!1707)

(assert (=> b!132896 (= lt!69462 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69456 () (_ BitVec 64))

(assert (=> b!132896 (= lt!69456 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69461 () (_ BitVec 64))

(assert (=> b!132896 (= lt!69461 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69459 () Unit!4135)

(assert (=> b!132896 (= lt!69459 (addStillContains!92 lt!69462 lt!69456 (zeroValue!2720 newMap!16) lt!69461))))

(assert (=> b!132896 (contains!899 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))) lt!69461)))

(declare-fun lt!69466 () Unit!4135)

(assert (=> b!132896 (= lt!69466 lt!69459)))

(declare-fun lt!69448 () ListLongMap!1707)

(assert (=> b!132896 (= lt!69448 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69451 () (_ BitVec 64))

(assert (=> b!132896 (= lt!69451 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69467 () (_ BitVec 64))

(assert (=> b!132896 (= lt!69467 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69458 () Unit!4135)

(assert (=> b!132896 (= lt!69458 (addApplyDifferent!92 lt!69448 lt!69451 (minValue!2720 newMap!16) lt!69467))))

(assert (=> b!132896 (= (apply!116 (+!175 lt!69448 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))) lt!69467) (apply!116 lt!69448 lt!69467))))

(declare-fun lt!69447 () Unit!4135)

(assert (=> b!132896 (= lt!69447 lt!69458)))

(declare-fun lt!69453 () ListLongMap!1707)

(assert (=> b!132896 (= lt!69453 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69455 () (_ BitVec 64))

(assert (=> b!132896 (= lt!69455 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69449 () (_ BitVec 64))

(assert (=> b!132896 (= lt!69449 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69452 () Unit!4135)

(assert (=> b!132896 (= lt!69452 (addApplyDifferent!92 lt!69453 lt!69455 (zeroValue!2720 newMap!16) lt!69449))))

(assert (=> b!132896 (= (apply!116 (+!175 lt!69453 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))) lt!69449) (apply!116 lt!69453 lt!69449))))

(declare-fun lt!69460 () Unit!4135)

(assert (=> b!132896 (= lt!69460 lt!69452)))

(declare-fun lt!69450 () ListLongMap!1707)

(assert (=> b!132896 (= lt!69450 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69465 () (_ BitVec 64))

(assert (=> b!132896 (= lt!69465 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69463 () (_ BitVec 64))

(assert (=> b!132896 (= lt!69463 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!132896 (= lt!69446 (addApplyDifferent!92 lt!69450 lt!69465 (minValue!2720 newMap!16) lt!69463))))

(assert (=> b!132896 (= (apply!116 (+!175 lt!69450 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))) lt!69463) (apply!116 lt!69450 lt!69463))))

(declare-fun b!132897 () Bool)

(declare-fun e!86635 () Bool)

(declare-fun call!14660 () Bool)

(assert (=> b!132897 (= e!86635 (not call!14660))))

(declare-fun b!132898 () Bool)

(declare-fun e!86632 () Bool)

(declare-fun e!86631 () Bool)

(assert (=> b!132898 (= e!86632 e!86631)))

(declare-fun c!24574 () Bool)

(assert (=> b!132898 (= c!24574 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132899 () Bool)

(declare-fun e!86636 () ListLongMap!1707)

(declare-fun call!14663 () ListLongMap!1707)

(assert (=> b!132899 (= e!86636 call!14663)))

(declare-fun b!132900 () Bool)

(declare-fun e!86627 () ListLongMap!1707)

(declare-fun call!14657 () ListLongMap!1707)

(assert (=> b!132900 (= e!86627 call!14657)))

(declare-fun b!132901 () Bool)

(declare-fun c!24576 () Bool)

(assert (=> b!132901 (= c!24576 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!132901 (= e!86627 e!86636)))

(declare-fun b!132902 () Bool)

(declare-fun call!14658 () Bool)

(assert (=> b!132902 (= e!86631 (not call!14658))))

(declare-fun d!40303 () Bool)

(assert (=> d!40303 e!86632))

(declare-fun res!64005 () Bool)

(assert (=> d!40303 (=> (not res!64005) (not e!86632))))

(assert (=> d!40303 (= res!64005 (or (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))))

(declare-fun lt!69464 () ListLongMap!1707)

(declare-fun lt!69457 () ListLongMap!1707)

(assert (=> d!40303 (= lt!69464 lt!69457)))

(declare-fun lt!69454 () Unit!4135)

(assert (=> d!40303 (= lt!69454 e!86638)))

(declare-fun c!24572 () Bool)

(declare-fun e!86634 () Bool)

(assert (=> d!40303 (= c!24572 e!86634)))

(declare-fun res!64004 () Bool)

(assert (=> d!40303 (=> (not res!64004) (not e!86634))))

(assert (=> d!40303 (= res!64004 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun e!86629 () ListLongMap!1707)

(assert (=> d!40303 (= lt!69457 e!86629)))

(declare-fun c!24575 () Bool)

(assert (=> d!40303 (= c!24575 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40303 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40303 (= (getCurrentListMap!546 (_keys!4614 newMap!16) (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69464)))

(declare-fun b!132903 () Bool)

(declare-fun e!86633 () Bool)

(assert (=> b!132903 (= e!86633 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14654 () Bool)

(assert (=> bm!14654 (= call!14660 (contains!899 lt!69464 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132904 () Bool)

(assert (=> b!132904 (= e!86629 e!86627)))

(declare-fun c!24573 () Bool)

(assert (=> b!132904 (= c!24573 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132905 () Bool)

(declare-fun call!14661 () ListLongMap!1707)

(assert (=> b!132905 (= e!86629 (+!175 call!14661 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun b!132906 () Bool)

(declare-fun e!86626 () Bool)

(assert (=> b!132906 (= e!86626 (= (apply!116 lt!69464 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132906 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))))))))

(assert (=> b!132906 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun bm!14655 () Bool)

(assert (=> bm!14655 (= call!14658 (contains!899 lt!69464 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132907 () Bool)

(declare-fun res!64006 () Bool)

(assert (=> b!132907 (=> (not res!64006) (not e!86632))))

(assert (=> b!132907 (= res!64006 e!86635)))

(declare-fun c!24571 () Bool)

(assert (=> b!132907 (= c!24571 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!132908 () Bool)

(declare-fun e!86630 () Bool)

(assert (=> b!132908 (= e!86631 e!86630)))

(declare-fun res!64008 () Bool)

(assert (=> b!132908 (= res!64008 call!14658)))

(assert (=> b!132908 (=> (not res!64008) (not e!86630))))

(declare-fun call!14662 () ListLongMap!1707)

(declare-fun bm!14656 () Bool)

(declare-fun call!14659 () ListLongMap!1707)

(assert (=> bm!14656 (= call!14661 (+!175 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663)) (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!132909 () Bool)

(declare-fun e!86637 () Bool)

(assert (=> b!132909 (= e!86637 (= (apply!116 lt!69464 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 newMap!16)))))

(declare-fun bm!14657 () Bool)

(assert (=> bm!14657 (= call!14657 call!14661)))

(declare-fun b!132910 () Bool)

(assert (=> b!132910 (= e!86635 e!86637)))

(declare-fun res!64003 () Bool)

(assert (=> b!132910 (= res!64003 call!14660)))

(assert (=> b!132910 (=> (not res!64003) (not e!86637))))

(declare-fun bm!14658 () Bool)

(assert (=> bm!14658 (= call!14663 call!14662)))

(declare-fun bm!14659 () Bool)

(assert (=> bm!14659 (= call!14659 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!132911 () Bool)

(assert (=> b!132911 (= e!86636 call!14657)))

(declare-fun b!132912 () Bool)

(declare-fun e!86628 () Bool)

(assert (=> b!132912 (= e!86628 e!86626)))

(declare-fun res!64007 () Bool)

(assert (=> b!132912 (=> (not res!64007) (not e!86626))))

(assert (=> b!132912 (= res!64007 (contains!899 lt!69464 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!132912 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!132913 () Bool)

(declare-fun res!64010 () Bool)

(assert (=> b!132913 (=> (not res!64010) (not e!86632))))

(assert (=> b!132913 (= res!64010 e!86628)))

(declare-fun res!64002 () Bool)

(assert (=> b!132913 (=> res!64002 e!86628)))

(assert (=> b!132913 (= res!64002 (not e!86633))))

(declare-fun res!64009 () Bool)

(assert (=> b!132913 (=> (not res!64009) (not e!86633))))

(assert (=> b!132913 (= res!64009 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun bm!14660 () Bool)

(assert (=> bm!14660 (= call!14662 call!14659)))

(declare-fun b!132914 () Bool)

(assert (=> b!132914 (= e!86630 (= (apply!116 lt!69464 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 newMap!16)))))

(declare-fun b!132915 () Bool)

(assert (=> b!132915 (= e!86634 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132916 () Bool)

(declare-fun Unit!4150 () Unit!4135)

(assert (=> b!132916 (= e!86638 Unit!4150)))

(assert (= (and d!40303 c!24575) b!132905))

(assert (= (and d!40303 (not c!24575)) b!132904))

(assert (= (and b!132904 c!24573) b!132900))

(assert (= (and b!132904 (not c!24573)) b!132901))

(assert (= (and b!132901 c!24576) b!132911))

(assert (= (and b!132901 (not c!24576)) b!132899))

(assert (= (or b!132911 b!132899) bm!14658))

(assert (= (or b!132900 bm!14658) bm!14660))

(assert (= (or b!132900 b!132911) bm!14657))

(assert (= (or b!132905 bm!14660) bm!14659))

(assert (= (or b!132905 bm!14657) bm!14656))

(assert (= (and d!40303 res!64004) b!132915))

(assert (= (and d!40303 c!24572) b!132896))

(assert (= (and d!40303 (not c!24572)) b!132916))

(assert (= (and d!40303 res!64005) b!132913))

(assert (= (and b!132913 res!64009) b!132903))

(assert (= (and b!132913 (not res!64002)) b!132912))

(assert (= (and b!132912 res!64007) b!132906))

(assert (= (and b!132913 res!64010) b!132907))

(assert (= (and b!132907 c!24571) b!132910))

(assert (= (and b!132907 (not c!24571)) b!132897))

(assert (= (and b!132910 res!64003) b!132909))

(assert (= (or b!132910 b!132897) bm!14654))

(assert (= (and b!132907 res!64006) b!132898))

(assert (= (and b!132898 c!24574) b!132908))

(assert (= (and b!132898 (not c!24574)) b!132902))

(assert (= (and b!132908 res!64008) b!132914))

(assert (= (or b!132908 b!132902) bm!14655))

(declare-fun b_lambda!5905 () Bool)

(assert (=> (not b_lambda!5905) (not b!132906)))

(assert (=> b!132906 t!6176))

(declare-fun b_and!8227 () Bool)

(assert (= b_and!8223 (and (=> t!6176 result!3997) b_and!8227)))

(assert (=> b!132906 t!6178))

(declare-fun b_and!8229 () Bool)

(assert (= b_and!8225 (and (=> t!6178 result!3999) b_and!8229)))

(declare-fun m!156511 () Bool)

(assert (=> bm!14659 m!156511))

(declare-fun m!156513 () Bool)

(assert (=> bm!14656 m!156513))

(declare-fun m!156515 () Bool)

(assert (=> b!132906 m!156515))

(assert (=> b!132906 m!156515))

(assert (=> b!132906 m!156175))

(declare-fun m!156517 () Bool)

(assert (=> b!132906 m!156517))

(assert (=> b!132906 m!156163))

(assert (=> b!132906 m!156175))

(assert (=> b!132906 m!156163))

(declare-fun m!156519 () Bool)

(assert (=> b!132906 m!156519))

(declare-fun m!156521 () Bool)

(assert (=> bm!14654 m!156521))

(declare-fun m!156523 () Bool)

(assert (=> b!132905 m!156523))

(assert (=> b!132915 m!156163))

(assert (=> b!132915 m!156163))

(assert (=> b!132915 m!156165))

(assert (=> d!40303 m!156157))

(declare-fun m!156525 () Bool)

(assert (=> b!132896 m!156525))

(declare-fun m!156527 () Bool)

(assert (=> b!132896 m!156527))

(declare-fun m!156529 () Bool)

(assert (=> b!132896 m!156529))

(declare-fun m!156531 () Bool)

(assert (=> b!132896 m!156531))

(assert (=> b!132896 m!156511))

(declare-fun m!156533 () Bool)

(assert (=> b!132896 m!156533))

(declare-fun m!156535 () Bool)

(assert (=> b!132896 m!156535))

(declare-fun m!156537 () Bool)

(assert (=> b!132896 m!156537))

(declare-fun m!156539 () Bool)

(assert (=> b!132896 m!156539))

(declare-fun m!156541 () Bool)

(assert (=> b!132896 m!156541))

(assert (=> b!132896 m!156525))

(declare-fun m!156543 () Bool)

(assert (=> b!132896 m!156543))

(assert (=> b!132896 m!156537))

(declare-fun m!156545 () Bool)

(assert (=> b!132896 m!156545))

(assert (=> b!132896 m!156529))

(declare-fun m!156547 () Bool)

(assert (=> b!132896 m!156547))

(assert (=> b!132896 m!156163))

(declare-fun m!156549 () Bool)

(assert (=> b!132896 m!156549))

(assert (=> b!132896 m!156527))

(declare-fun m!156551 () Bool)

(assert (=> b!132896 m!156551))

(declare-fun m!156553 () Bool)

(assert (=> b!132896 m!156553))

(declare-fun m!156555 () Bool)

(assert (=> bm!14655 m!156555))

(declare-fun m!156557 () Bool)

(assert (=> b!132909 m!156557))

(declare-fun m!156559 () Bool)

(assert (=> b!132914 m!156559))

(assert (=> b!132912 m!156163))

(assert (=> b!132912 m!156163))

(declare-fun m!156561 () Bool)

(assert (=> b!132912 m!156561))

(assert (=> b!132903 m!156163))

(assert (=> b!132903 m!156163))

(assert (=> b!132903 m!156165))

(assert (=> bm!14610 d!40303))

(declare-fun b!132927 () Bool)

(declare-fun res!64021 () Bool)

(declare-fun e!86641 () Bool)

(assert (=> b!132927 (=> (not res!64021) (not e!86641))))

(declare-fun size!2534 (LongMapFixedSize!1098) (_ BitVec 32))

(assert (=> b!132927 (= res!64021 (= (size!2534 newMap!16) (bvadd (_size!598 newMap!16) (bvsdiv (bvadd (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!40305 () Bool)

(declare-fun res!64022 () Bool)

(assert (=> d!40305 (=> (not res!64022) (not e!86641))))

(assert (=> d!40305 (= res!64022 (validMask!0 (mask!7165 newMap!16)))))

(assert (=> d!40305 (= (simpleValid!92 newMap!16) e!86641)))

(declare-fun b!132928 () Bool)

(assert (=> b!132928 (= e!86641 (and (bvsge (extraKeys!2630 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2630 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!598 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!132925 () Bool)

(declare-fun res!64020 () Bool)

(assert (=> b!132925 (=> (not res!64020) (not e!86641))))

(assert (=> b!132925 (= res!64020 (and (= (size!2531 (_values!2848 newMap!16)) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001)) (= (size!2530 (_keys!4614 newMap!16)) (size!2531 (_values!2848 newMap!16))) (bvsge (_size!598 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!598 newMap!16) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!132926 () Bool)

(declare-fun res!64019 () Bool)

(assert (=> b!132926 (=> (not res!64019) (not e!86641))))

(assert (=> b!132926 (= res!64019 (bvsge (size!2534 newMap!16) (_size!598 newMap!16)))))

(assert (= (and d!40305 res!64022) b!132925))

(assert (= (and b!132925 res!64020) b!132926))

(assert (= (and b!132926 res!64019) b!132927))

(assert (= (and b!132927 res!64021) b!132928))

(declare-fun m!156563 () Bool)

(assert (=> b!132927 m!156563))

(assert (=> d!40305 m!156157))

(assert (=> b!132926 m!156563))

(assert (=> d!40187 d!40305))

(declare-fun d!40307 () Bool)

(assert (=> d!40307 (= (inRange!0 (ite c!24492 (ite c!24490 (index!3261 lt!69195) (ite c!24496 (index!3260 lt!69185) (index!3263 lt!69185))) (ite c!24500 (index!3261 lt!69198) (ite c!24499 (index!3260 lt!69196) (index!3263 lt!69196)))) (mask!7165 newMap!16)) (and (bvsge (ite c!24492 (ite c!24490 (index!3261 lt!69195) (ite c!24496 (index!3260 lt!69185) (index!3263 lt!69185))) (ite c!24500 (index!3261 lt!69198) (ite c!24499 (index!3260 lt!69196) (index!3263 lt!69196)))) #b00000000000000000000000000000000) (bvslt (ite c!24492 (ite c!24490 (index!3261 lt!69195) (ite c!24496 (index!3260 lt!69185) (index!3263 lt!69185))) (ite c!24500 (index!3261 lt!69198) (ite c!24499 (index!3260 lt!69196) (index!3263 lt!69196)))) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14621 d!40307))

(declare-fun b!132929 () Bool)

(declare-fun e!86654 () Unit!4135)

(declare-fun lt!69468 () Unit!4135)

(assert (=> b!132929 (= e!86654 lt!69468)))

(declare-fun lt!69484 () ListLongMap!1707)

(assert (=> b!132929 (= lt!69484 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190) (mask!7165 newMap!16) (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69478 () (_ BitVec 64))

(assert (=> b!132929 (= lt!69478 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69483 () (_ BitVec 64))

(assert (=> b!132929 (= lt!69483 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69481 () Unit!4135)

(assert (=> b!132929 (= lt!69481 (addStillContains!92 lt!69484 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69483))))

(assert (=> b!132929 (contains!899 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69483)))

(declare-fun lt!69488 () Unit!4135)

(assert (=> b!132929 (= lt!69488 lt!69481)))

(declare-fun lt!69470 () ListLongMap!1707)

(assert (=> b!132929 (= lt!69470 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190) (mask!7165 newMap!16) (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69473 () (_ BitVec 64))

(assert (=> b!132929 (= lt!69473 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69489 () (_ BitVec 64))

(assert (=> b!132929 (= lt!69489 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69480 () Unit!4135)

(assert (=> b!132929 (= lt!69480 (addApplyDifferent!92 lt!69470 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69489))))

(assert (=> b!132929 (= (apply!116 (+!175 lt!69470 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69489) (apply!116 lt!69470 lt!69489))))

(declare-fun lt!69469 () Unit!4135)

(assert (=> b!132929 (= lt!69469 lt!69480)))

(declare-fun lt!69475 () ListLongMap!1707)

(assert (=> b!132929 (= lt!69475 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190) (mask!7165 newMap!16) (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69477 () (_ BitVec 64))

(assert (=> b!132929 (= lt!69477 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69471 () (_ BitVec 64))

(assert (=> b!132929 (= lt!69471 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69474 () Unit!4135)

(assert (=> b!132929 (= lt!69474 (addApplyDifferent!92 lt!69475 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69471))))

(assert (=> b!132929 (= (apply!116 (+!175 lt!69475 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69471) (apply!116 lt!69475 lt!69471))))

(declare-fun lt!69482 () Unit!4135)

(assert (=> b!132929 (= lt!69482 lt!69474)))

(declare-fun lt!69472 () ListLongMap!1707)

(assert (=> b!132929 (= lt!69472 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190) (mask!7165 newMap!16) (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69487 () (_ BitVec 64))

(assert (=> b!132929 (= lt!69487 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69485 () (_ BitVec 64))

(assert (=> b!132929 (= lt!69485 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!132929 (= lt!69468 (addApplyDifferent!92 lt!69472 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69485))))

(assert (=> b!132929 (= (apply!116 (+!175 lt!69472 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69485) (apply!116 lt!69472 lt!69485))))

(declare-fun b!132930 () Bool)

(declare-fun e!86651 () Bool)

(declare-fun call!14667 () Bool)

(assert (=> b!132930 (= e!86651 (not call!14667))))

(declare-fun b!132931 () Bool)

(declare-fun e!86648 () Bool)

(declare-fun e!86647 () Bool)

(assert (=> b!132931 (= e!86648 e!86647)))

(declare-fun c!24580 () Bool)

(assert (=> b!132931 (= c!24580 (not (= (bvand (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132932 () Bool)

(declare-fun e!86652 () ListLongMap!1707)

(declare-fun call!14670 () ListLongMap!1707)

(assert (=> b!132932 (= e!86652 call!14670)))

(declare-fun b!132933 () Bool)

(declare-fun e!86643 () ListLongMap!1707)

(declare-fun call!14664 () ListLongMap!1707)

(assert (=> b!132933 (= e!86643 call!14664)))

(declare-fun b!132934 () Bool)

(declare-fun c!24582 () Bool)

(assert (=> b!132934 (= c!24582 (and (not (= (bvand (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!132934 (= e!86643 e!86652)))

(declare-fun b!132935 () Bool)

(declare-fun call!14665 () Bool)

(assert (=> b!132935 (= e!86647 (not call!14665))))

(declare-fun d!40309 () Bool)

(assert (=> d!40309 e!86648))

(declare-fun res!64026 () Bool)

(assert (=> d!40309 (=> (not res!64026) (not e!86648))))

(assert (=> d!40309 (= res!64026 (or (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))))

(declare-fun lt!69486 () ListLongMap!1707)

(declare-fun lt!69479 () ListLongMap!1707)

(assert (=> d!40309 (= lt!69486 lt!69479)))

(declare-fun lt!69476 () Unit!4135)

(assert (=> d!40309 (= lt!69476 e!86654)))

(declare-fun c!24578 () Bool)

(declare-fun e!86650 () Bool)

(assert (=> d!40309 (= c!24578 e!86650)))

(declare-fun res!64025 () Bool)

(assert (=> d!40309 (=> (not res!64025) (not e!86650))))

(assert (=> d!40309 (= res!64025 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun e!86645 () ListLongMap!1707)

(assert (=> d!40309 (= lt!69479 e!86645)))

(declare-fun c!24581 () Bool)

(assert (=> d!40309 (= c!24581 (and (not (= (bvand (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40309 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40309 (= (getCurrentListMap!546 (_keys!4614 newMap!16) (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190) (mask!7165 newMap!16) (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69486)))

(declare-fun b!132936 () Bool)

(declare-fun e!86649 () Bool)

(assert (=> b!132936 (= e!86649 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14661 () Bool)

(assert (=> bm!14661 (= call!14667 (contains!899 lt!69486 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132937 () Bool)

(assert (=> b!132937 (= e!86645 e!86643)))

(declare-fun c!24579 () Bool)

(assert (=> b!132937 (= c!24579 (and (not (= (bvand (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun call!14668 () ListLongMap!1707)

(declare-fun b!132938 () Bool)

(assert (=> b!132938 (= e!86645 (+!175 call!14668 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(declare-fun e!86642 () Bool)

(declare-fun b!132939 () Bool)

(assert (=> b!132939 (= e!86642 (= (apply!116 lt!69486 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132939 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190))))))

(assert (=> b!132939 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun bm!14662 () Bool)

(assert (=> bm!14662 (= call!14665 (contains!899 lt!69486 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132940 () Bool)

(declare-fun res!64027 () Bool)

(assert (=> b!132940 (=> (not res!64027) (not e!86648))))

(assert (=> b!132940 (= res!64027 e!86651)))

(declare-fun c!24577 () Bool)

(assert (=> b!132940 (= c!24577 (not (= (bvand (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!132941 () Bool)

(declare-fun e!86646 () Bool)

(assert (=> b!132941 (= e!86647 e!86646)))

(declare-fun res!64029 () Bool)

(assert (=> b!132941 (= res!64029 call!14665)))

(assert (=> b!132941 (=> (not res!64029) (not e!86646))))

(declare-fun call!14666 () ListLongMap!1707)

(declare-fun call!14669 () ListLongMap!1707)

(declare-fun bm!14663 () Bool)

(assert (=> bm!14663 (= call!14668 (+!175 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670)) (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun e!86653 () Bool)

(declare-fun b!132942 () Bool)

(assert (=> b!132942 (= e!86653 (= (apply!116 lt!69486 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))

(declare-fun bm!14664 () Bool)

(assert (=> bm!14664 (= call!14664 call!14668)))

(declare-fun b!132943 () Bool)

(assert (=> b!132943 (= e!86651 e!86653)))

(declare-fun res!64024 () Bool)

(assert (=> b!132943 (= res!64024 call!14667)))

(assert (=> b!132943 (=> (not res!64024) (not e!86653))))

(declare-fun bm!14665 () Bool)

(assert (=> bm!14665 (= call!14670 call!14669)))

(declare-fun bm!14666 () Bool)

(assert (=> bm!14666 (= call!14666 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190) (mask!7165 newMap!16) (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!132944 () Bool)

(assert (=> b!132944 (= e!86652 call!14664)))

(declare-fun b!132945 () Bool)

(declare-fun e!86644 () Bool)

(assert (=> b!132945 (= e!86644 e!86642)))

(declare-fun res!64028 () Bool)

(assert (=> b!132945 (=> (not res!64028) (not e!86642))))

(assert (=> b!132945 (= res!64028 (contains!899 lt!69486 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!132945 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!132946 () Bool)

(declare-fun res!64031 () Bool)

(assert (=> b!132946 (=> (not res!64031) (not e!86648))))

(assert (=> b!132946 (= res!64031 e!86644)))

(declare-fun res!64023 () Bool)

(assert (=> b!132946 (=> res!64023 e!86644)))

(assert (=> b!132946 (= res!64023 (not e!86649))))

(declare-fun res!64030 () Bool)

(assert (=> b!132946 (=> (not res!64030) (not e!86649))))

(assert (=> b!132946 (= res!64030 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun bm!14667 () Bool)

(assert (=> bm!14667 (= call!14669 call!14666)))

(declare-fun b!132947 () Bool)

(assert (=> b!132947 (= e!86646 (= (apply!116 lt!69486 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))

(declare-fun b!132948 () Bool)

(assert (=> b!132948 (= e!86650 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132949 () Bool)

(declare-fun Unit!4151 () Unit!4135)

(assert (=> b!132949 (= e!86654 Unit!4151)))

(assert (= (and d!40309 c!24581) b!132938))

(assert (= (and d!40309 (not c!24581)) b!132937))

(assert (= (and b!132937 c!24579) b!132933))

(assert (= (and b!132937 (not c!24579)) b!132934))

(assert (= (and b!132934 c!24582) b!132944))

(assert (= (and b!132934 (not c!24582)) b!132932))

(assert (= (or b!132944 b!132932) bm!14665))

(assert (= (or b!132933 bm!14665) bm!14667))

(assert (= (or b!132933 b!132944) bm!14664))

(assert (= (or b!132938 bm!14667) bm!14666))

(assert (= (or b!132938 bm!14664) bm!14663))

(assert (= (and d!40309 res!64025) b!132948))

(assert (= (and d!40309 c!24578) b!132929))

(assert (= (and d!40309 (not c!24578)) b!132949))

(assert (= (and d!40309 res!64026) b!132946))

(assert (= (and b!132946 res!64030) b!132936))

(assert (= (and b!132946 (not res!64023)) b!132945))

(assert (= (and b!132945 res!64028) b!132939))

(assert (= (and b!132946 res!64031) b!132940))

(assert (= (and b!132940 c!24577) b!132943))

(assert (= (and b!132940 (not c!24577)) b!132930))

(assert (= (and b!132943 res!64024) b!132942))

(assert (= (or b!132943 b!132930) bm!14661))

(assert (= (and b!132940 res!64027) b!132931))

(assert (= (and b!132931 c!24580) b!132941))

(assert (= (and b!132931 (not c!24580)) b!132935))

(assert (= (and b!132941 res!64029) b!132947))

(assert (= (or b!132941 b!132935) bm!14662))

(declare-fun b_lambda!5907 () Bool)

(assert (=> (not b_lambda!5907) (not b!132939)))

(assert (=> b!132939 t!6176))

(declare-fun b_and!8231 () Bool)

(assert (= b_and!8227 (and (=> t!6176 result!3997) b_and!8231)))

(assert (=> b!132939 t!6178))

(declare-fun b_and!8233 () Bool)

(assert (= b_and!8229 (and (=> t!6178 result!3999) b_and!8233)))

(declare-fun m!156565 () Bool)

(assert (=> bm!14666 m!156565))

(declare-fun m!156567 () Bool)

(assert (=> bm!14663 m!156567))

(declare-fun m!156569 () Bool)

(assert (=> b!132939 m!156569))

(assert (=> b!132939 m!156569))

(assert (=> b!132939 m!156175))

(declare-fun m!156571 () Bool)

(assert (=> b!132939 m!156571))

(assert (=> b!132939 m!156163))

(assert (=> b!132939 m!156175))

(assert (=> b!132939 m!156163))

(declare-fun m!156573 () Bool)

(assert (=> b!132939 m!156573))

(declare-fun m!156575 () Bool)

(assert (=> bm!14661 m!156575))

(declare-fun m!156577 () Bool)

(assert (=> b!132938 m!156577))

(assert (=> b!132948 m!156163))

(assert (=> b!132948 m!156163))

(assert (=> b!132948 m!156165))

(assert (=> d!40309 m!156157))

(declare-fun m!156579 () Bool)

(assert (=> b!132929 m!156579))

(declare-fun m!156581 () Bool)

(assert (=> b!132929 m!156581))

(declare-fun m!156583 () Bool)

(assert (=> b!132929 m!156583))

(declare-fun m!156585 () Bool)

(assert (=> b!132929 m!156585))

(assert (=> b!132929 m!156565))

(declare-fun m!156587 () Bool)

(assert (=> b!132929 m!156587))

(declare-fun m!156589 () Bool)

(assert (=> b!132929 m!156589))

(declare-fun m!156591 () Bool)

(assert (=> b!132929 m!156591))

(declare-fun m!156593 () Bool)

(assert (=> b!132929 m!156593))

(declare-fun m!156595 () Bool)

(assert (=> b!132929 m!156595))

(assert (=> b!132929 m!156579))

(declare-fun m!156597 () Bool)

(assert (=> b!132929 m!156597))

(assert (=> b!132929 m!156591))

(declare-fun m!156599 () Bool)

(assert (=> b!132929 m!156599))

(assert (=> b!132929 m!156583))

(declare-fun m!156601 () Bool)

(assert (=> b!132929 m!156601))

(assert (=> b!132929 m!156163))

(declare-fun m!156603 () Bool)

(assert (=> b!132929 m!156603))

(assert (=> b!132929 m!156581))

(declare-fun m!156605 () Bool)

(assert (=> b!132929 m!156605))

(declare-fun m!156607 () Bool)

(assert (=> b!132929 m!156607))

(declare-fun m!156609 () Bool)

(assert (=> bm!14662 m!156609))

(declare-fun m!156611 () Bool)

(assert (=> b!132942 m!156611))

(declare-fun m!156613 () Bool)

(assert (=> b!132947 m!156613))

(assert (=> b!132945 m!156163))

(assert (=> b!132945 m!156163))

(declare-fun m!156615 () Bool)

(assert (=> b!132945 m!156615))

(assert (=> b!132936 m!156163))

(assert (=> b!132936 m!156163))

(assert (=> b!132936 m!156165))

(assert (=> bm!14607 d!40309))

(declare-fun d!40311 () Bool)

(assert (=> d!40311 (= (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132445 d!40311))

(declare-fun bm!14668 () Bool)

(declare-fun call!14671 () Bool)

(assert (=> bm!14668 (= call!14671 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!132950 () Bool)

(declare-fun e!86657 () Bool)

(declare-fun e!86655 () Bool)

(assert (=> b!132950 (= e!86657 e!86655)))

(declare-fun c!24583 () Bool)

(assert (=> b!132950 (= c!24583 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!40313 () Bool)

(declare-fun res!64032 () Bool)

(assert (=> d!40313 (=> res!64032 e!86657)))

(assert (=> d!40313 (= res!64032 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!40313 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) e!86657)))

(declare-fun b!132951 () Bool)

(assert (=> b!132951 (= e!86655 call!14671)))

(declare-fun b!132952 () Bool)

(declare-fun e!86656 () Bool)

(assert (=> b!132952 (= e!86656 call!14671)))

(declare-fun b!132953 () Bool)

(assert (=> b!132953 (= e!86655 e!86656)))

(declare-fun lt!69491 () (_ BitVec 64))

(assert (=> b!132953 (= lt!69491 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!69492 () Unit!4135)

(assert (=> b!132953 (= lt!69492 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69491 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!132953 (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69491 #b00000000000000000000000000000000)))

(declare-fun lt!69490 () Unit!4135)

(assert (=> b!132953 (= lt!69490 lt!69492)))

(declare-fun res!64033 () Bool)

(assert (=> b!132953 (= res!64033 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (Found!275 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!132953 (=> (not res!64033) (not e!86656))))

(assert (= (and d!40313 (not res!64032)) b!132950))

(assert (= (and b!132950 c!24583) b!132953))

(assert (= (and b!132950 (not c!24583)) b!132951))

(assert (= (and b!132953 res!64033) b!132952))

(assert (= (or b!132952 b!132951) bm!14668))

(declare-fun m!156617 () Bool)

(assert (=> bm!14668 m!156617))

(declare-fun m!156619 () Bool)

(assert (=> b!132950 m!156619))

(assert (=> b!132950 m!156619))

(declare-fun m!156621 () Bool)

(assert (=> b!132950 m!156621))

(assert (=> b!132953 m!156619))

(declare-fun m!156623 () Bool)

(assert (=> b!132953 m!156623))

(declare-fun m!156625 () Bool)

(assert (=> b!132953 m!156625))

(assert (=> b!132953 m!156619))

(declare-fun m!156627 () Bool)

(assert (=> b!132953 m!156627))

(assert (=> bm!14546 d!40313))

(declare-fun d!40315 () Bool)

(declare-fun e!86658 () Bool)

(assert (=> d!40315 e!86658))

(declare-fun res!64034 () Bool)

(assert (=> d!40315 (=> res!64034 e!86658)))

(declare-fun lt!69496 () Bool)

(assert (=> d!40315 (= res!64034 (not lt!69496))))

(declare-fun lt!69493 () Bool)

(assert (=> d!40315 (= lt!69496 lt!69493)))

(declare-fun lt!69495 () Unit!4135)

(declare-fun e!86659 () Unit!4135)

(assert (=> d!40315 (= lt!69495 e!86659)))

(declare-fun c!24584 () Bool)

(assert (=> d!40315 (= c!24584 lt!69493)))

(assert (=> d!40315 (= lt!69493 (containsKey!176 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> d!40315 (= (contains!899 call!14619 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) lt!69496)))

(declare-fun b!132954 () Bool)

(declare-fun lt!69494 () Unit!4135)

(assert (=> b!132954 (= e!86659 lt!69494)))

(assert (=> b!132954 (= lt!69494 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> b!132954 (isDefined!125 (getValueByKey!172 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!132955 () Bool)

(declare-fun Unit!4152 () Unit!4135)

(assert (=> b!132955 (= e!86659 Unit!4152)))

(declare-fun b!132956 () Bool)

(assert (=> b!132956 (= e!86658 (isDefined!125 (getValueByKey!172 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(assert (= (and d!40315 c!24584) b!132954))

(assert (= (and d!40315 (not c!24584)) b!132955))

(assert (= (and d!40315 (not res!64034)) b!132956))

(assert (=> d!40315 m!155869))

(declare-fun m!156629 () Bool)

(assert (=> d!40315 m!156629))

(assert (=> b!132954 m!155869))

(declare-fun m!156631 () Bool)

(assert (=> b!132954 m!156631))

(assert (=> b!132954 m!155869))

(declare-fun m!156633 () Bool)

(assert (=> b!132954 m!156633))

(assert (=> b!132954 m!156633))

(declare-fun m!156635 () Bool)

(assert (=> b!132954 m!156635))

(assert (=> b!132956 m!155869))

(assert (=> b!132956 m!156633))

(assert (=> b!132956 m!156633))

(assert (=> b!132956 m!156635))

(assert (=> b!132585 d!40315))

(declare-fun bm!14669 () Bool)

(declare-fun call!14672 () Bool)

(assert (=> bm!14669 (= call!14672 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!132957 () Bool)

(declare-fun e!86662 () Bool)

(declare-fun e!86660 () Bool)

(assert (=> b!132957 (= e!86662 e!86660)))

(declare-fun c!24585 () Bool)

(assert (=> b!132957 (= c!24585 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!40317 () Bool)

(declare-fun res!64035 () Bool)

(assert (=> d!40317 (=> res!64035 e!86662)))

(assert (=> d!40317 (= res!64035 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!40317 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 newMap!16) (mask!7165 newMap!16)) e!86662)))

(declare-fun b!132958 () Bool)

(assert (=> b!132958 (= e!86660 call!14672)))

(declare-fun b!132959 () Bool)

(declare-fun e!86661 () Bool)

(assert (=> b!132959 (= e!86661 call!14672)))

(declare-fun b!132960 () Bool)

(assert (=> b!132960 (= e!86660 e!86661)))

(declare-fun lt!69498 () (_ BitVec 64))

(assert (=> b!132960 (= lt!69498 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69499 () Unit!4135)

(assert (=> b!132960 (= lt!69499 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 newMap!16) lt!69498 #b00000000000000000000000000000000))))

(assert (=> b!132960 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69498 #b00000000000000000000000000000000)))

(declare-fun lt!69497 () Unit!4135)

(assert (=> b!132960 (= lt!69497 lt!69499)))

(declare-fun res!64036 () Bool)

(assert (=> b!132960 (= res!64036 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)) (Found!275 #b00000000000000000000000000000000)))))

(assert (=> b!132960 (=> (not res!64036) (not e!86661))))

(assert (= (and d!40317 (not res!64035)) b!132957))

(assert (= (and b!132957 c!24585) b!132960))

(assert (= (and b!132957 (not c!24585)) b!132958))

(assert (= (and b!132960 res!64036) b!132959))

(assert (= (or b!132959 b!132958) bm!14669))

(declare-fun m!156637 () Bool)

(assert (=> bm!14669 m!156637))

(assert (=> b!132957 m!156163))

(assert (=> b!132957 m!156163))

(assert (=> b!132957 m!156165))

(assert (=> b!132960 m!156163))

(declare-fun m!156639 () Bool)

(assert (=> b!132960 m!156639))

(declare-fun m!156641 () Bool)

(assert (=> b!132960 m!156641))

(assert (=> b!132960 m!156163))

(declare-fun m!156643 () Bool)

(assert (=> b!132960 m!156643))

(assert (=> b!132481 d!40317))

(declare-fun call!14673 () Bool)

(declare-fun bm!14670 () Bool)

(declare-fun c!24586 () Bool)

(assert (=> bm!14670 (= call!14673 (arrayNoDuplicates!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))))))

(declare-fun b!132961 () Bool)

(declare-fun e!86666 () Bool)

(declare-fun e!86663 () Bool)

(assert (=> b!132961 (= e!86666 e!86663)))

(assert (=> b!132961 (= c!24586 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!132962 () Bool)

(declare-fun e!86664 () Bool)

(assert (=> b!132962 (= e!86664 (contains!901 (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!132963 () Bool)

(assert (=> b!132963 (= e!86663 call!14673)))

(declare-fun b!132964 () Bool)

(declare-fun e!86665 () Bool)

(assert (=> b!132964 (= e!86665 e!86666)))

(declare-fun res!64039 () Bool)

(assert (=> b!132964 (=> (not res!64039) (not e!86666))))

(assert (=> b!132964 (= res!64039 (not e!86664))))

(declare-fun res!64038 () Bool)

(assert (=> b!132964 (=> (not res!64038) (not e!86664))))

(assert (=> b!132964 (= res!64038 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!132965 () Bool)

(assert (=> b!132965 (= e!86663 call!14673)))

(declare-fun d!40319 () Bool)

(declare-fun res!64037 () Bool)

(assert (=> d!40319 (=> res!64037 e!86665)))

(assert (=> d!40319 (= res!64037 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!40319 (= (arrayNoDuplicates!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) e!86665)))

(assert (= (and d!40319 (not res!64037)) b!132964))

(assert (= (and b!132964 res!64038) b!132962))

(assert (= (and b!132964 res!64039) b!132961))

(assert (= (and b!132961 c!24586) b!132963))

(assert (= (and b!132961 (not c!24586)) b!132965))

(assert (= (or b!132963 b!132965) bm!14670))

(assert (=> bm!14670 m!156619))

(declare-fun m!156645 () Bool)

(assert (=> bm!14670 m!156645))

(assert (=> b!132961 m!156619))

(assert (=> b!132961 m!156619))

(assert (=> b!132961 m!156621))

(assert (=> b!132962 m!156619))

(assert (=> b!132962 m!156619))

(declare-fun m!156647 () Bool)

(assert (=> b!132962 m!156647))

(assert (=> b!132964 m!156619))

(assert (=> b!132964 m!156619))

(assert (=> b!132964 m!156621))

(assert (=> bm!14549 d!40319))

(assert (=> b!132433 d!40311))

(declare-fun d!40321 () Bool)

(declare-fun e!86667 () Bool)

(assert (=> d!40321 e!86667))

(declare-fun res!64041 () Bool)

(assert (=> d!40321 (=> (not res!64041) (not e!86667))))

(declare-fun lt!69500 () ListLongMap!1707)

(assert (=> d!40321 (= res!64041 (contains!899 lt!69500 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69502 () List!1716)

(assert (=> d!40321 (= lt!69500 (ListLongMap!1708 lt!69502))))

(declare-fun lt!69503 () Unit!4135)

(declare-fun lt!69501 () Unit!4135)

(assert (=> d!40321 (= lt!69503 lt!69501)))

(assert (=> d!40321 (= (getValueByKey!172 lt!69502 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40321 (= lt!69501 (lemmaContainsTupThenGetReturnValue!87 lt!69502 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40321 (= lt!69502 (insertStrictlySorted!90 (toList!869 call!14603) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40321 (= (+!175 call!14603 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69500)))

(declare-fun b!132966 () Bool)

(declare-fun res!64040 () Bool)

(assert (=> b!132966 (=> (not res!64040) (not e!86667))))

(assert (=> b!132966 (= res!64040 (= (getValueByKey!172 (toList!869 lt!69500) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!132967 () Bool)

(assert (=> b!132967 (= e!86667 (contains!902 (toList!869 lt!69500) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40321 res!64041) b!132966))

(assert (= (and b!132966 res!64040) b!132967))

(declare-fun m!156649 () Bool)

(assert (=> d!40321 m!156649))

(declare-fun m!156651 () Bool)

(assert (=> d!40321 m!156651))

(declare-fun m!156653 () Bool)

(assert (=> d!40321 m!156653))

(declare-fun m!156655 () Bool)

(assert (=> d!40321 m!156655))

(declare-fun m!156657 () Bool)

(assert (=> b!132966 m!156657))

(declare-fun m!156659 () Bool)

(assert (=> b!132967 m!156659))

(assert (=> b!132573 d!40321))

(declare-fun d!40323 () Bool)

(declare-fun e!86668 () Bool)

(assert (=> d!40323 e!86668))

(declare-fun res!64042 () Bool)

(assert (=> d!40323 (=> res!64042 e!86668)))

(declare-fun lt!69507 () Bool)

(assert (=> d!40323 (= res!64042 (not lt!69507))))

(declare-fun lt!69504 () Bool)

(assert (=> d!40323 (= lt!69507 lt!69504)))

(declare-fun lt!69506 () Unit!4135)

(declare-fun e!86669 () Unit!4135)

(assert (=> d!40323 (= lt!69506 e!86669)))

(declare-fun c!24587 () Bool)

(assert (=> d!40323 (= c!24587 lt!69504)))

(assert (=> d!40323 (= lt!69504 (containsKey!176 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!40323 (= (contains!899 lt!69095 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!69507)))

(declare-fun b!132968 () Bool)

(declare-fun lt!69505 () Unit!4135)

(assert (=> b!132968 (= e!86669 lt!69505)))

(assert (=> b!132968 (= lt!69505 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!132968 (isDefined!125 (getValueByKey!172 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!132969 () Bool)

(declare-fun Unit!4153 () Unit!4135)

(assert (=> b!132969 (= e!86669 Unit!4153)))

(declare-fun b!132970 () Bool)

(assert (=> b!132970 (= e!86668 (isDefined!125 (getValueByKey!172 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!40323 c!24587) b!132968))

(assert (= (and d!40323 (not c!24587)) b!132969))

(assert (= (and d!40323 (not res!64042)) b!132970))

(assert (=> d!40323 m!155949))

(declare-fun m!156661 () Bool)

(assert (=> d!40323 m!156661))

(assert (=> b!132968 m!155949))

(declare-fun m!156663 () Bool)

(assert (=> b!132968 m!156663))

(assert (=> b!132968 m!155949))

(assert (=> b!132968 m!156115))

(assert (=> b!132968 m!156115))

(declare-fun m!156665 () Bool)

(assert (=> b!132968 m!156665))

(assert (=> b!132970 m!155949))

(assert (=> b!132970 m!156115))

(assert (=> b!132970 m!156115))

(assert (=> b!132970 m!156665))

(assert (=> b!132442 d!40323))

(assert (=> bm!14613 d!40289))

(declare-fun b!132972 () Bool)

(declare-fun e!86671 () Bool)

(assert (=> b!132972 (= e!86671 tp_is_empty!2877)))

(declare-fun mapNonEmpty!4655 () Bool)

(declare-fun mapRes!4655 () Bool)

(declare-fun tp!11225 () Bool)

(declare-fun e!86670 () Bool)

(assert (=> mapNonEmpty!4655 (= mapRes!4655 (and tp!11225 e!86670))))

(declare-fun mapRest!4655 () (Array (_ BitVec 32) ValueCell!1095))

(declare-fun mapValue!4655 () ValueCell!1095)

(declare-fun mapKey!4655 () (_ BitVec 32))

(assert (=> mapNonEmpty!4655 (= mapRest!4653 (store mapRest!4655 mapKey!4655 mapValue!4655))))

(declare-fun condMapEmpty!4655 () Bool)

(declare-fun mapDefault!4655 () ValueCell!1095)

(assert (=> mapNonEmpty!4653 (= condMapEmpty!4655 (= mapRest!4653 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4655)))))

(assert (=> mapNonEmpty!4653 (= tp!11223 (and e!86671 mapRes!4655))))

(declare-fun mapIsEmpty!4655 () Bool)

(assert (=> mapIsEmpty!4655 mapRes!4655))

(declare-fun b!132971 () Bool)

(assert (=> b!132971 (= e!86670 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4653 condMapEmpty!4655) mapIsEmpty!4655))

(assert (= (and mapNonEmpty!4653 (not condMapEmpty!4655)) mapNonEmpty!4655))

(assert (= (and mapNonEmpty!4655 ((_ is ValueCellFull!1095) mapValue!4655)) b!132971))

(assert (= (and mapNonEmpty!4653 ((_ is ValueCellFull!1095) mapDefault!4655)) b!132972))

(declare-fun m!156667 () Bool)

(assert (=> mapNonEmpty!4655 m!156667))

(declare-fun b!132974 () Bool)

(declare-fun e!86673 () Bool)

(assert (=> b!132974 (= e!86673 tp_is_empty!2877)))

(declare-fun mapNonEmpty!4656 () Bool)

(declare-fun mapRes!4656 () Bool)

(declare-fun tp!11226 () Bool)

(declare-fun e!86672 () Bool)

(assert (=> mapNonEmpty!4656 (= mapRes!4656 (and tp!11226 e!86672))))

(declare-fun mapValue!4656 () ValueCell!1095)

(declare-fun mapRest!4656 () (Array (_ BitVec 32) ValueCell!1095))

(declare-fun mapKey!4656 () (_ BitVec 32))

(assert (=> mapNonEmpty!4656 (= mapRest!4654 (store mapRest!4656 mapKey!4656 mapValue!4656))))

(declare-fun condMapEmpty!4656 () Bool)

(declare-fun mapDefault!4656 () ValueCell!1095)

(assert (=> mapNonEmpty!4654 (= condMapEmpty!4656 (= mapRest!4654 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4656)))))

(assert (=> mapNonEmpty!4654 (= tp!11224 (and e!86673 mapRes!4656))))

(declare-fun mapIsEmpty!4656 () Bool)

(assert (=> mapIsEmpty!4656 mapRes!4656))

(declare-fun b!132973 () Bool)

(assert (=> b!132973 (= e!86672 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4654 condMapEmpty!4656) mapIsEmpty!4656))

(assert (= (and mapNonEmpty!4654 (not condMapEmpty!4656)) mapNonEmpty!4656))

(assert (= (and mapNonEmpty!4656 ((_ is ValueCellFull!1095) mapValue!4656)) b!132973))

(assert (= (and mapNonEmpty!4654 ((_ is ValueCellFull!1095) mapDefault!4656)) b!132974))

(declare-fun m!156669 () Bool)

(assert (=> mapNonEmpty!4656 m!156669))

(declare-fun b_lambda!5909 () Bool)

(assert (= b_lambda!5903 (or (and b!132300 b_free!2921) (and b!132303 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))))) b_lambda!5909)))

(declare-fun b_lambda!5911 () Bool)

(assert (= b_lambda!5907 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!5911)))

(declare-fun b_lambda!5913 () Bool)

(assert (= b_lambda!5901 (or (and b!132300 b_free!2921) (and b!132303 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))))) b_lambda!5913)))

(declare-fun b_lambda!5915 () Bool)

(assert (= b_lambda!5905 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!5915)))

(declare-fun b_lambda!5917 () Bool)

(assert (= b_lambda!5899 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!5917)))

(check-sat (not b!132851) (not d!40293) (not bm!14669) (not b!132960) (not b_lambda!5897) (not b!132835) (not d!40253) (not d!40235) (not d!40251) (not d!40265) (not b!132637) (not b!132867) (not b!132787) (not b!132698) (not d!40315) (not b!132929) (not b!132843) (not bm!14666) (not b!132652) (not bm!14655) (not b!132832) (not b_next!2923) (not d!40247) (not b!132721) (not b!132784) (not b!132730) (not b!132702) (not b!132709) (not b!132720) (not b!132641) (not b!132718) (not d!40261) (not d!40297) (not b!132915) (not b!132836) (not b!132895) (not b!132849) (not b!132968) (not d!40197) (not b!132912) (not b!132633) (not b!132831) (not b!132715) (not mapNonEmpty!4656) (not b!132926) (not bm!14652) (not b!132962) (not b!132712) (not d!40237) (not b!132638) (not bm!14656) (not d!40219) (not b!132728) (not b!132792) (not bm!14625) (not b!132892) (not d!40229) (not b!132945) (not d!40241) (not d!40255) b_and!8233 (not b!132800) (not b!132804) (not b!132909) (not d!40271) (not bm!14630) (not b!132723) (not b!132954) (not b!132634) (not b!132865) (not d!40273) (not d!40259) (not bm!14632) (not d!40321) (not b!132927) (not b!132967) (not b!132765) (not bm!14627) (not d!40249) (not d!40263) (not b_lambda!5909) (not b!132781) (not d!40287) (not d!40205) (not bm!14661) (not b!132896) (not bm!14663) (not b!132841) (not b!132665) (not b!132803) (not b!132957) (not d!40201) (not d!40245) (not b!132966) (not b!132840) (not b!132847) (not d!40223) (not d!40279) tp_is_empty!2877 (not d!40289) (not b!132948) (not d!40285) (not bm!14626) (not d!40211) (not bm!14624) (not b!132844) (not b!132947) (not d!40309) (not d!40281) (not d!40267) (not b!132950) (not b!132906) (not b!132801) (not b!132776) (not b!132726) (not bm!14647) (not b!132790) (not d!40239) (not b!132858) (not b!132805) (not b!132938) (not b!132711) (not d!40217) (not b!132964) (not b!132953) (not b!132936) (not bm!14641) (not d!40225) (not b!132793) (not b_lambda!5893) (not d!40305) (not b!132772) (not bm!14654) (not b!132659) (not d!40269) b_and!8231 (not bm!14659) (not b!132846) (not b!132848) (not b!132942) (not bm!14642) (not b!132724) (not b!132970) (not d!40277) (not b!132893) (not b!132791) (not d!40213) (not d!40323) (not bm!14668) (not b!132799) (not mapNonEmpty!4655) (not d!40295) (not b!132961) (not d!40231) (not b!132632) (not b!132838) (not b!132636) (not b!132683) (not d!40275) (not b!132850) (not b!132852) (not d!40283) (not bm!14662) (not b!132688) (not b!132914) (not d!40303) (not b_lambda!5913) (not b!132956) (not b_lambda!5917) (not bm!14653) (not b!132939) (not b_lambda!5915) (not b!132864) (not b_next!2921) (not bm!14643) (not b_lambda!5911) (not bm!14670) (not b!132788) (not b!132770) (not b!132773) (not d!40243) (not d!40199) (not d!40257) (not b!132834) (not b!132905) (not b!132903))
(check-sat b_and!8231 b_and!8233 (not b_next!2921) (not b_next!2923))
(get-model)

(declare-fun d!40325 () Bool)

(assert (=> d!40325 (= (validMask!0 (mask!7165 newMap!16)) (and (or (= (mask!7165 newMap!16) #b00000000000000000000000000000111) (= (mask!7165 newMap!16) #b00000000000000000000000000001111) (= (mask!7165 newMap!16) #b00000000000000000000000000011111) (= (mask!7165 newMap!16) #b00000000000000000000000000111111) (= (mask!7165 newMap!16) #b00000000000000000000000001111111) (= (mask!7165 newMap!16) #b00000000000000000000000011111111) (= (mask!7165 newMap!16) #b00000000000000000000000111111111) (= (mask!7165 newMap!16) #b00000000000000000000001111111111) (= (mask!7165 newMap!16) #b00000000000000000000011111111111) (= (mask!7165 newMap!16) #b00000000000000000000111111111111) (= (mask!7165 newMap!16) #b00000000000000000001111111111111) (= (mask!7165 newMap!16) #b00000000000000000011111111111111) (= (mask!7165 newMap!16) #b00000000000000000111111111111111) (= (mask!7165 newMap!16) #b00000000000000001111111111111111) (= (mask!7165 newMap!16) #b00000000000000011111111111111111) (= (mask!7165 newMap!16) #b00000000000000111111111111111111) (= (mask!7165 newMap!16) #b00000000000001111111111111111111) (= (mask!7165 newMap!16) #b00000000000011111111111111111111) (= (mask!7165 newMap!16) #b00000000000111111111111111111111) (= (mask!7165 newMap!16) #b00000000001111111111111111111111) (= (mask!7165 newMap!16) #b00000000011111111111111111111111) (= (mask!7165 newMap!16) #b00000000111111111111111111111111) (= (mask!7165 newMap!16) #b00000001111111111111111111111111) (= (mask!7165 newMap!16) #b00000011111111111111111111111111) (= (mask!7165 newMap!16) #b00000111111111111111111111111111) (= (mask!7165 newMap!16) #b00001111111111111111111111111111) (= (mask!7165 newMap!16) #b00011111111111111111111111111111) (= (mask!7165 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!7165 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!40309 d!40325))

(declare-fun d!40327 () Bool)

(assert (=> d!40327 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5491 () Bool)

(assert (= bs!5491 d!40327))

(assert (=> bs!5491 m!156115))

(declare-fun m!156671 () Bool)

(assert (=> bs!5491 m!156671))

(assert (=> b!132970 d!40327))

(declare-fun e!86675 () Option!178)

(declare-fun b!132977 () Bool)

(assert (=> b!132977 (= e!86675 (getValueByKey!172 (t!6167 (toList!869 lt!69095)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!132978 () Bool)

(assert (=> b!132978 (= e!86675 None!176)))

(declare-fun c!24588 () Bool)

(declare-fun d!40329 () Bool)

(assert (=> d!40329 (= c!24588 (and ((_ is Cons!1712) (toList!869 lt!69095)) (= (_1!1324 (h!2317 (toList!869 lt!69095))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!86674 () Option!178)

(assert (=> d!40329 (= (getValueByKey!172 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!86674)))

(declare-fun b!132975 () Bool)

(assert (=> b!132975 (= e!86674 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69095)))))))

(declare-fun b!132976 () Bool)

(assert (=> b!132976 (= e!86674 e!86675)))

(declare-fun c!24589 () Bool)

(assert (=> b!132976 (= c!24589 (and ((_ is Cons!1712) (toList!869 lt!69095)) (not (= (_1!1324 (h!2317 (toList!869 lt!69095))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!40329 c!24588) b!132975))

(assert (= (and d!40329 (not c!24588)) b!132976))

(assert (= (and b!132976 c!24589) b!132977))

(assert (= (and b!132976 (not c!24589)) b!132978))

(assert (=> b!132977 m!155949))

(declare-fun m!156673 () Bool)

(assert (=> b!132977 m!156673))

(assert (=> b!132970 d!40329))

(declare-fun d!40331 () Bool)

(assert (=> d!40331 (= (apply!116 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69098) (apply!116 lt!69079 lt!69098))))

(assert (=> d!40331 true))

(declare-fun _$34!971 () Unit!4135)

(assert (=> d!40331 (= (choose!822 lt!69079 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69098) _$34!971)))

(declare-fun bs!5492 () Bool)

(assert (= bs!5492 d!40331))

(assert (=> bs!5492 m!155971))

(assert (=> bs!5492 m!155971))

(assert (=> bs!5492 m!155979))

(assert (=> bs!5492 m!155969))

(assert (=> d!40247 d!40331))

(assert (=> d!40247 d!40249))

(assert (=> d!40247 d!40261))

(declare-fun d!40333 () Bool)

(declare-fun e!86676 () Bool)

(assert (=> d!40333 e!86676))

(declare-fun res!64043 () Bool)

(assert (=> d!40333 (=> res!64043 e!86676)))

(declare-fun lt!69511 () Bool)

(assert (=> d!40333 (= res!64043 (not lt!69511))))

(declare-fun lt!69508 () Bool)

(assert (=> d!40333 (= lt!69511 lt!69508)))

(declare-fun lt!69510 () Unit!4135)

(declare-fun e!86677 () Unit!4135)

(assert (=> d!40333 (= lt!69510 e!86677)))

(declare-fun c!24590 () Bool)

(assert (=> d!40333 (= c!24590 lt!69508)))

(assert (=> d!40333 (= lt!69508 (containsKey!176 (toList!869 lt!69079) lt!69098))))

(assert (=> d!40333 (= (contains!899 lt!69079 lt!69098) lt!69511)))

(declare-fun b!132980 () Bool)

(declare-fun lt!69509 () Unit!4135)

(assert (=> b!132980 (= e!86677 lt!69509)))

(assert (=> b!132980 (= lt!69509 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69079) lt!69098))))

(assert (=> b!132980 (isDefined!125 (getValueByKey!172 (toList!869 lt!69079) lt!69098))))

(declare-fun b!132981 () Bool)

(declare-fun Unit!4154 () Unit!4135)

(assert (=> b!132981 (= e!86677 Unit!4154)))

(declare-fun b!132982 () Bool)

(assert (=> b!132982 (= e!86676 (isDefined!125 (getValueByKey!172 (toList!869 lt!69079) lt!69098)))))

(assert (= (and d!40333 c!24590) b!132980))

(assert (= (and d!40333 (not c!24590)) b!132981))

(assert (= (and d!40333 (not res!64043)) b!132982))

(declare-fun m!156675 () Bool)

(assert (=> d!40333 m!156675))

(declare-fun m!156677 () Bool)

(assert (=> b!132980 m!156677))

(assert (=> b!132980 m!156395))

(assert (=> b!132980 m!156395))

(declare-fun m!156679 () Bool)

(assert (=> b!132980 m!156679))

(assert (=> b!132982 m!156395))

(assert (=> b!132982 m!156395))

(assert (=> b!132982 m!156679))

(assert (=> d!40247 d!40333))

(assert (=> d!40247 d!40265))

(declare-fun d!40335 () Bool)

(assert (=> d!40335 (= (apply!116 lt!69408 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1486 (getValueByKey!172 (toList!869 lt!69408) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5493 () Bool)

(assert (= bs!5493 d!40335))

(assert (=> bs!5493 m!155949))

(declare-fun m!156681 () Bool)

(assert (=> bs!5493 m!156681))

(assert (=> bs!5493 m!156681))

(declare-fun m!156683 () Bool)

(assert (=> bs!5493 m!156683))

(assert (=> b!132836 d!40335))

(assert (=> b!132836 d!40207))

(declare-fun d!40337 () Bool)

(assert (=> d!40337 (= (get!1484 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3198 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!132637 d!40337))

(assert (=> bm!14641 d!40289))

(declare-fun d!40339 () Bool)

(assert (=> d!40339 (isDefined!125 (getValueByKey!172 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!69512 () Unit!4135)

(assert (=> d!40339 (= lt!69512 (choose!817 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86678 () Bool)

(assert (=> d!40339 e!86678))

(declare-fun res!64044 () Bool)

(assert (=> d!40339 (=> (not res!64044) (not e!86678))))

(assert (=> d!40339 (= res!64044 (isStrictlySorted!322 (toList!869 lt!69095)))))

(assert (=> d!40339 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000) lt!69512)))

(declare-fun b!132983 () Bool)

(assert (=> b!132983 (= e!86678 (containsKey!176 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40339 res!64044) b!132983))

(assert (=> d!40339 m!156237))

(assert (=> d!40339 m!156237))

(assert (=> d!40339 m!156239))

(declare-fun m!156685 () Bool)

(assert (=> d!40339 m!156685))

(declare-fun m!156687 () Bool)

(assert (=> d!40339 m!156687))

(assert (=> b!132983 m!156233))

(assert (=> b!132728 d!40339))

(declare-fun d!40341 () Bool)

(assert (=> d!40341 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5494 () Bool)

(assert (= bs!5494 d!40341))

(assert (=> bs!5494 m!156237))

(declare-fun m!156689 () Bool)

(assert (=> bs!5494 m!156689))

(assert (=> b!132728 d!40341))

(declare-fun b!132986 () Bool)

(declare-fun e!86680 () Option!178)

(assert (=> b!132986 (= e!86680 (getValueByKey!172 (t!6167 (toList!869 lt!69095)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132987 () Bool)

(assert (=> b!132987 (= e!86680 None!176)))

(declare-fun d!40343 () Bool)

(declare-fun c!24591 () Bool)

(assert (=> d!40343 (= c!24591 (and ((_ is Cons!1712) (toList!869 lt!69095)) (= (_1!1324 (h!2317 (toList!869 lt!69095))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!86679 () Option!178)

(assert (=> d!40343 (= (getValueByKey!172 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000) e!86679)))

(declare-fun b!132984 () Bool)

(assert (=> b!132984 (= e!86679 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69095)))))))

(declare-fun b!132985 () Bool)

(assert (=> b!132985 (= e!86679 e!86680)))

(declare-fun c!24592 () Bool)

(assert (=> b!132985 (= c!24592 (and ((_ is Cons!1712) (toList!869 lt!69095)) (not (= (_1!1324 (h!2317 (toList!869 lt!69095))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!40343 c!24591) b!132984))

(assert (= (and d!40343 (not c!24591)) b!132985))

(assert (= (and b!132985 c!24592) b!132986))

(assert (= (and b!132985 (not c!24592)) b!132987))

(declare-fun m!156691 () Bool)

(assert (=> b!132986 m!156691))

(assert (=> b!132728 d!40343))

(assert (=> b!132772 d!40225))

(declare-fun d!40345 () Bool)

(declare-fun e!86681 () Bool)

(assert (=> d!40345 e!86681))

(declare-fun res!64045 () Bool)

(assert (=> d!40345 (=> res!64045 e!86681)))

(declare-fun lt!69516 () Bool)

(assert (=> d!40345 (= res!64045 (not lt!69516))))

(declare-fun lt!69513 () Bool)

(assert (=> d!40345 (= lt!69516 lt!69513)))

(declare-fun lt!69515 () Unit!4135)

(declare-fun e!86682 () Unit!4135)

(assert (=> d!40345 (= lt!69515 e!86682)))

(declare-fun c!24593 () Bool)

(assert (=> d!40345 (= c!24593 lt!69513)))

(assert (=> d!40345 (= lt!69513 (containsKey!176 (toList!869 lt!69464) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40345 (= (contains!899 lt!69464 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!69516)))

(declare-fun b!132988 () Bool)

(declare-fun lt!69514 () Unit!4135)

(assert (=> b!132988 (= e!86682 lt!69514)))

(assert (=> b!132988 (= lt!69514 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69464) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!132988 (isDefined!125 (getValueByKey!172 (toList!869 lt!69464) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132989 () Bool)

(declare-fun Unit!4155 () Unit!4135)

(assert (=> b!132989 (= e!86682 Unit!4155)))

(declare-fun b!132990 () Bool)

(assert (=> b!132990 (= e!86681 (isDefined!125 (getValueByKey!172 (toList!869 lt!69464) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!40345 c!24593) b!132988))

(assert (= (and d!40345 (not c!24593)) b!132989))

(assert (= (and d!40345 (not res!64045)) b!132990))

(assert (=> d!40345 m!156163))

(declare-fun m!156693 () Bool)

(assert (=> d!40345 m!156693))

(assert (=> b!132988 m!156163))

(declare-fun m!156695 () Bool)

(assert (=> b!132988 m!156695))

(assert (=> b!132988 m!156163))

(declare-fun m!156697 () Bool)

(assert (=> b!132988 m!156697))

(assert (=> b!132988 m!156697))

(declare-fun m!156699 () Bool)

(assert (=> b!132988 m!156699))

(assert (=> b!132990 m!156163))

(assert (=> b!132990 m!156697))

(assert (=> b!132990 m!156697))

(assert (=> b!132990 m!156699))

(assert (=> b!132912 d!40345))

(declare-fun d!40347 () Bool)

(declare-fun e!86683 () Bool)

(assert (=> d!40347 e!86683))

(declare-fun res!64046 () Bool)

(assert (=> d!40347 (=> res!64046 e!86683)))

(declare-fun lt!69520 () Bool)

(assert (=> d!40347 (= res!64046 (not lt!69520))))

(declare-fun lt!69517 () Bool)

(assert (=> d!40347 (= lt!69520 lt!69517)))

(declare-fun lt!69519 () Unit!4135)

(declare-fun e!86684 () Unit!4135)

(assert (=> d!40347 (= lt!69519 e!86684)))

(declare-fun c!24594 () Bool)

(assert (=> d!40347 (= c!24594 lt!69517)))

(assert (=> d!40347 (= lt!69517 (containsKey!176 (toList!869 lt!69408) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40347 (= (contains!899 lt!69408 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69520)))

(declare-fun b!132991 () Bool)

(declare-fun lt!69518 () Unit!4135)

(assert (=> b!132991 (= e!86684 lt!69518)))

(assert (=> b!132991 (= lt!69518 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69408) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132991 (isDefined!125 (getValueByKey!172 (toList!869 lt!69408) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132992 () Bool)

(declare-fun Unit!4156 () Unit!4135)

(assert (=> b!132992 (= e!86684 Unit!4156)))

(declare-fun b!132993 () Bool)

(assert (=> b!132993 (= e!86683 (isDefined!125 (getValueByKey!172 (toList!869 lt!69408) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40347 c!24594) b!132991))

(assert (= (and d!40347 (not c!24594)) b!132992))

(assert (= (and d!40347 (not res!64046)) b!132993))

(declare-fun m!156701 () Bool)

(assert (=> d!40347 m!156701))

(declare-fun m!156703 () Bool)

(assert (=> b!132991 m!156703))

(declare-fun m!156705 () Bool)

(assert (=> b!132991 m!156705))

(assert (=> b!132991 m!156705))

(declare-fun m!156707 () Bool)

(assert (=> b!132991 m!156707))

(assert (=> b!132993 m!156705))

(assert (=> b!132993 m!156705))

(assert (=> b!132993 m!156707))

(assert (=> d!40263 d!40347))

(assert (=> d!40263 d!40195))

(declare-fun d!40349 () Bool)

(declare-fun e!86685 () Bool)

(assert (=> d!40349 e!86685))

(declare-fun res!64047 () Bool)

(assert (=> d!40349 (=> res!64047 e!86685)))

(declare-fun lt!69524 () Bool)

(assert (=> d!40349 (= res!64047 (not lt!69524))))

(declare-fun lt!69521 () Bool)

(assert (=> d!40349 (= lt!69524 lt!69521)))

(declare-fun lt!69523 () Unit!4135)

(declare-fun e!86686 () Unit!4135)

(assert (=> d!40349 (= lt!69523 e!86686)))

(declare-fun c!24595 () Bool)

(assert (=> d!40349 (= c!24595 lt!69521)))

(assert (=> d!40349 (= lt!69521 (containsKey!176 (toList!869 lt!69486) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40349 (= (contains!899 lt!69486 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!69524)))

(declare-fun b!132994 () Bool)

(declare-fun lt!69522 () Unit!4135)

(assert (=> b!132994 (= e!86686 lt!69522)))

(assert (=> b!132994 (= lt!69522 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69486) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!132994 (isDefined!125 (getValueByKey!172 (toList!869 lt!69486) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132995 () Bool)

(declare-fun Unit!4157 () Unit!4135)

(assert (=> b!132995 (= e!86686 Unit!4157)))

(declare-fun b!132996 () Bool)

(assert (=> b!132996 (= e!86685 (isDefined!125 (getValueByKey!172 (toList!869 lt!69486) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!40349 c!24595) b!132994))

(assert (= (and d!40349 (not c!24595)) b!132995))

(assert (= (and d!40349 (not res!64047)) b!132996))

(assert (=> d!40349 m!156163))

(declare-fun m!156709 () Bool)

(assert (=> d!40349 m!156709))

(assert (=> b!132994 m!156163))

(declare-fun m!156711 () Bool)

(assert (=> b!132994 m!156711))

(assert (=> b!132994 m!156163))

(declare-fun m!156713 () Bool)

(assert (=> b!132994 m!156713))

(assert (=> b!132994 m!156713))

(declare-fun m!156715 () Bool)

(assert (=> b!132994 m!156715))

(assert (=> b!132996 m!156163))

(assert (=> b!132996 m!156713))

(assert (=> b!132996 m!156713))

(assert (=> b!132996 m!156715))

(assert (=> b!132945 d!40349))

(declare-fun lt!69527 () Bool)

(declare-fun d!40351 () Bool)

(declare-fun content!133 (List!1716) (InoxSet tuple2!2626))

(assert (=> d!40351 (= lt!69527 (select (content!133 (toList!869 lt!69500)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!86692 () Bool)

(assert (=> d!40351 (= lt!69527 e!86692)))

(declare-fun res!64052 () Bool)

(assert (=> d!40351 (=> (not res!64052) (not e!86692))))

(assert (=> d!40351 (= res!64052 ((_ is Cons!1712) (toList!869 lt!69500)))))

(assert (=> d!40351 (= (contains!902 (toList!869 lt!69500) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69527)))

(declare-fun b!133001 () Bool)

(declare-fun e!86691 () Bool)

(assert (=> b!133001 (= e!86692 e!86691)))

(declare-fun res!64053 () Bool)

(assert (=> b!133001 (=> res!64053 e!86691)))

(assert (=> b!133001 (= res!64053 (= (h!2317 (toList!869 lt!69500)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133002 () Bool)

(assert (=> b!133002 (= e!86691 (contains!902 (t!6167 (toList!869 lt!69500)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40351 res!64052) b!133001))

(assert (= (and b!133001 (not res!64053)) b!133002))

(declare-fun m!156717 () Bool)

(assert (=> d!40351 m!156717))

(declare-fun m!156719 () Bool)

(assert (=> d!40351 m!156719))

(declare-fun m!156721 () Bool)

(assert (=> b!133002 m!156721))

(assert (=> b!132967 d!40351))

(declare-fun d!40353 () Bool)

(assert (=> d!40353 (= (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132948 d!40353))

(assert (=> b!132832 d!40207))

(declare-fun d!40355 () Bool)

(declare-fun e!86693 () Bool)

(assert (=> d!40355 e!86693))

(declare-fun res!64054 () Bool)

(assert (=> d!40355 (=> res!64054 e!86693)))

(declare-fun lt!69531 () Bool)

(assert (=> d!40355 (= res!64054 (not lt!69531))))

(declare-fun lt!69528 () Bool)

(assert (=> d!40355 (= lt!69531 lt!69528)))

(declare-fun lt!69530 () Unit!4135)

(declare-fun e!86694 () Unit!4135)

(assert (=> d!40355 (= lt!69530 e!86694)))

(declare-fun c!24596 () Bool)

(assert (=> d!40355 (= c!24596 lt!69528)))

(assert (=> d!40355 (= lt!69528 (containsKey!176 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))) lt!69409))))

(assert (=> d!40355 (= (contains!899 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403)) lt!69409) lt!69531)))

(declare-fun b!133003 () Bool)

(declare-fun lt!69529 () Unit!4135)

(assert (=> b!133003 (= e!86694 lt!69529)))

(assert (=> b!133003 (= lt!69529 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))) lt!69409))))

(assert (=> b!133003 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))) lt!69409))))

(declare-fun b!133004 () Bool)

(declare-fun Unit!4158 () Unit!4135)

(assert (=> b!133004 (= e!86694 Unit!4158)))

(declare-fun b!133005 () Bool)

(assert (=> b!133005 (= e!86693 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))) lt!69409)))))

(assert (= (and d!40355 c!24596) b!133003))

(assert (= (and d!40355 (not c!24596)) b!133004))

(assert (= (and d!40355 (not res!64054)) b!133005))

(declare-fun m!156723 () Bool)

(assert (=> d!40355 m!156723))

(declare-fun m!156725 () Bool)

(assert (=> b!133003 m!156725))

(declare-fun m!156727 () Bool)

(assert (=> b!133003 m!156727))

(assert (=> b!133003 m!156727))

(declare-fun m!156729 () Bool)

(assert (=> b!133003 m!156729))

(assert (=> b!133005 m!156727))

(assert (=> b!133005 m!156727))

(assert (=> b!133005 m!156729))

(assert (=> b!132832 d!40355))

(declare-fun d!40357 () Bool)

(declare-fun e!86695 () Bool)

(assert (=> d!40357 e!86695))

(declare-fun res!64056 () Bool)

(assert (=> d!40357 (=> (not res!64056) (not e!86695))))

(declare-fun lt!69532 () ListLongMap!1707)

(assert (=> d!40357 (= res!64056 (contains!899 lt!69532 (_1!1324 (tuple2!2627 lt!69406 lt!69403))))))

(declare-fun lt!69534 () List!1716)

(assert (=> d!40357 (= lt!69532 (ListLongMap!1708 lt!69534))))

(declare-fun lt!69535 () Unit!4135)

(declare-fun lt!69533 () Unit!4135)

(assert (=> d!40357 (= lt!69535 lt!69533)))

(assert (=> d!40357 (= (getValueByKey!172 lt!69534 (_1!1324 (tuple2!2627 lt!69406 lt!69403))) (Some!177 (_2!1324 (tuple2!2627 lt!69406 lt!69403))))))

(assert (=> d!40357 (= lt!69533 (lemmaContainsTupThenGetReturnValue!87 lt!69534 (_1!1324 (tuple2!2627 lt!69406 lt!69403)) (_2!1324 (tuple2!2627 lt!69406 lt!69403))))))

(assert (=> d!40357 (= lt!69534 (insertStrictlySorted!90 (toList!869 lt!69407) (_1!1324 (tuple2!2627 lt!69406 lt!69403)) (_2!1324 (tuple2!2627 lt!69406 lt!69403))))))

(assert (=> d!40357 (= (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403)) lt!69532)))

(declare-fun b!133006 () Bool)

(declare-fun res!64055 () Bool)

(assert (=> b!133006 (=> (not res!64055) (not e!86695))))

(assert (=> b!133006 (= res!64055 (= (getValueByKey!172 (toList!869 lt!69532) (_1!1324 (tuple2!2627 lt!69406 lt!69403))) (Some!177 (_2!1324 (tuple2!2627 lt!69406 lt!69403)))))))

(declare-fun b!133007 () Bool)

(assert (=> b!133007 (= e!86695 (contains!902 (toList!869 lt!69532) (tuple2!2627 lt!69406 lt!69403)))))

(assert (= (and d!40357 res!64056) b!133006))

(assert (= (and b!133006 res!64055) b!133007))

(declare-fun m!156731 () Bool)

(assert (=> d!40357 m!156731))

(declare-fun m!156733 () Bool)

(assert (=> d!40357 m!156733))

(declare-fun m!156735 () Bool)

(assert (=> d!40357 m!156735))

(declare-fun m!156737 () Bool)

(assert (=> d!40357 m!156737))

(declare-fun m!156739 () Bool)

(assert (=> b!133006 m!156739))

(declare-fun m!156741 () Bool)

(assert (=> b!133007 m!156741))

(assert (=> b!132832 d!40357))

(declare-fun d!40359 () Bool)

(declare-fun e!86696 () Bool)

(assert (=> d!40359 e!86696))

(declare-fun res!64058 () Bool)

(assert (=> d!40359 (=> (not res!64058) (not e!86696))))

(declare-fun lt!69536 () ListLongMap!1707)

(assert (=> d!40359 (= res!64058 (contains!899 lt!69536 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69538 () List!1716)

(assert (=> d!40359 (= lt!69536 (ListLongMap!1708 lt!69538))))

(declare-fun lt!69539 () Unit!4135)

(declare-fun lt!69537 () Unit!4135)

(assert (=> d!40359 (= lt!69539 lt!69537)))

(assert (=> d!40359 (= (getValueByKey!172 lt!69538 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40359 (= lt!69537 (lemmaContainsTupThenGetReturnValue!87 lt!69538 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40359 (= lt!69538 (insertStrictlySorted!90 (toList!869 call!14650) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40359 (= (+!175 call!14650 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69536)))

(declare-fun b!133008 () Bool)

(declare-fun res!64057 () Bool)

(assert (=> b!133008 (=> (not res!64057) (not e!86696))))

(assert (=> b!133008 (= res!64057 (= (getValueByKey!172 (toList!869 lt!69536) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133009 () Bool)

(assert (=> b!133009 (= e!86696 (contains!902 (toList!869 lt!69536) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40359 res!64058) b!133008))

(assert (= (and b!133008 res!64057) b!133009))

(declare-fun m!156743 () Bool)

(assert (=> d!40359 m!156743))

(declare-fun m!156745 () Bool)

(assert (=> d!40359 m!156745))

(declare-fun m!156747 () Bool)

(assert (=> d!40359 m!156747))

(declare-fun m!156749 () Bool)

(assert (=> d!40359 m!156749))

(declare-fun m!156751 () Bool)

(assert (=> b!133008 m!156751))

(declare-fun m!156753 () Bool)

(assert (=> b!133009 m!156753))

(assert (=> b!132832 d!40359))

(declare-fun d!40361 () Bool)

(assert (=> d!40361 (not (contains!899 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403)) lt!69409))))

(declare-fun lt!69542 () Unit!4135)

(declare-fun choose!826 (ListLongMap!1707 (_ BitVec 64) V!3483 (_ BitVec 64)) Unit!4135)

(assert (=> d!40361 (= lt!69542 (choose!826 lt!69407 lt!69406 lt!69403 lt!69409))))

(declare-fun e!86699 () Bool)

(assert (=> d!40361 e!86699))

(declare-fun res!64061 () Bool)

(assert (=> d!40361 (=> (not res!64061) (not e!86699))))

(assert (=> d!40361 (= res!64061 (not (contains!899 lt!69407 lt!69409)))))

(assert (=> d!40361 (= (addStillNotContains!61 lt!69407 lt!69406 lt!69403 lt!69409) lt!69542)))

(declare-fun b!133013 () Bool)

(assert (=> b!133013 (= e!86699 (not (= lt!69406 lt!69409)))))

(assert (= (and d!40361 res!64061) b!133013))

(assert (=> d!40361 m!156389))

(assert (=> d!40361 m!156389))

(assert (=> d!40361 m!156393))

(declare-fun m!156755 () Bool)

(assert (=> d!40361 m!156755))

(declare-fun m!156757 () Bool)

(assert (=> d!40361 m!156757))

(assert (=> b!132832 d!40361))

(declare-fun b!133014 () Bool)

(declare-fun e!86701 () Bool)

(declare-fun e!86704 () Bool)

(assert (=> b!133014 (= e!86701 e!86704)))

(declare-fun c!24597 () Bool)

(declare-fun e!86706 () Bool)

(assert (=> b!133014 (= c!24597 e!86706)))

(declare-fun res!64065 () Bool)

(assert (=> b!133014 (=> (not res!64065) (not e!86706))))

(assert (=> b!133014 (= res!64065 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133015 () Bool)

(declare-fun e!86705 () Bool)

(declare-fun lt!69548 () ListLongMap!1707)

(assert (=> b!133015 (= e!86705 (isEmpty!410 lt!69548))))

(declare-fun b!133016 () Bool)

(declare-fun lt!69544 () Unit!4135)

(declare-fun lt!69545 () Unit!4135)

(assert (=> b!133016 (= lt!69544 lt!69545)))

(declare-fun lt!69543 () V!3483)

(declare-fun lt!69547 () ListLongMap!1707)

(declare-fun lt!69549 () (_ BitVec 64))

(declare-fun lt!69546 () (_ BitVec 64))

(assert (=> b!133016 (not (contains!899 (+!175 lt!69547 (tuple2!2627 lt!69546 lt!69543)) lt!69549))))

(assert (=> b!133016 (= lt!69545 (addStillNotContains!61 lt!69547 lt!69546 lt!69543 lt!69549))))

(assert (=> b!133016 (= lt!69549 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133016 (= lt!69543 (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133016 (= lt!69546 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!14674 () ListLongMap!1707)

(assert (=> b!133016 (= lt!69547 call!14674)))

(declare-fun e!86703 () ListLongMap!1707)

(assert (=> b!133016 (= e!86703 (+!175 call!14674 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133017 () Bool)

(assert (=> b!133017 (= e!86704 e!86705)))

(declare-fun c!24600 () Bool)

(assert (=> b!133017 (= c!24600 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133018 () Bool)

(assert (=> b!133018 (= e!86706 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133018 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!133019 () Bool)

(declare-fun res!64063 () Bool)

(assert (=> b!133019 (=> (not res!64063) (not e!86701))))

(assert (=> b!133019 (= res!64063 (not (contains!899 lt!69548 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133020 () Bool)

(assert (=> b!133020 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> b!133020 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_values!2848 newMap!16))))))

(declare-fun e!86700 () Bool)

(assert (=> b!133020 (= e!86700 (= (apply!116 lt!69548 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!40363 () Bool)

(assert (=> d!40363 e!86701))

(declare-fun res!64064 () Bool)

(assert (=> d!40363 (=> (not res!64064) (not e!86701))))

(assert (=> d!40363 (= res!64064 (not (contains!899 lt!69548 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!86702 () ListLongMap!1707)

(assert (=> d!40363 (= lt!69548 e!86702)))

(declare-fun c!24598 () Bool)

(assert (=> d!40363 (= c!24598 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!40363 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40363 (= (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69548)))

(declare-fun b!133021 () Bool)

(assert (=> b!133021 (= e!86703 call!14674)))

(declare-fun bm!14671 () Bool)

(assert (=> bm!14671 (= call!14674 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!133022 () Bool)

(assert (=> b!133022 (= e!86704 e!86700)))

(assert (=> b!133022 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64062 () Bool)

(assert (=> b!133022 (= res!64062 (contains!899 lt!69548 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133022 (=> (not res!64062) (not e!86700))))

(declare-fun b!133023 () Bool)

(assert (=> b!133023 (= e!86702 (ListLongMap!1708 Nil!1713))))

(declare-fun b!133024 () Bool)

(assert (=> b!133024 (= e!86705 (= lt!69548 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!133025 () Bool)

(assert (=> b!133025 (= e!86702 e!86703)))

(declare-fun c!24599 () Bool)

(assert (=> b!133025 (= c!24599 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!40363 c!24598) b!133023))

(assert (= (and d!40363 (not c!24598)) b!133025))

(assert (= (and b!133025 c!24599) b!133016))

(assert (= (and b!133025 (not c!24599)) b!133021))

(assert (= (or b!133016 b!133021) bm!14671))

(assert (= (and d!40363 res!64064) b!133019))

(assert (= (and b!133019 res!64063) b!133014))

(assert (= (and b!133014 res!64065) b!133018))

(assert (= (and b!133014 c!24597) b!133022))

(assert (= (and b!133014 (not c!24597)) b!133017))

(assert (= (and b!133022 res!64062) b!133020))

(assert (= (and b!133017 c!24600) b!133024))

(assert (= (and b!133017 (not c!24600)) b!133015))

(declare-fun b_lambda!5919 () Bool)

(assert (=> (not b_lambda!5919) (not b!133016)))

(assert (=> b!133016 t!6176))

(declare-fun b_and!8235 () Bool)

(assert (= b_and!8231 (and (=> t!6176 result!3997) b_and!8235)))

(assert (=> b!133016 t!6178))

(declare-fun b_and!8237 () Bool)

(assert (= b_and!8233 (and (=> t!6178 result!3999) b_and!8237)))

(declare-fun b_lambda!5921 () Bool)

(assert (=> (not b_lambda!5921) (not b!133020)))

(assert (=> b!133020 t!6176))

(declare-fun b_and!8239 () Bool)

(assert (= b_and!8235 (and (=> t!6176 result!3997) b_and!8239)))

(assert (=> b!133020 t!6178))

(declare-fun b_and!8241 () Bool)

(assert (= b_and!8237 (and (=> t!6178 result!3999) b_and!8241)))

(declare-fun m!156759 () Bool)

(assert (=> b!133015 m!156759))

(declare-fun m!156761 () Bool)

(assert (=> d!40363 m!156761))

(assert (=> d!40363 m!156157))

(declare-fun m!156763 () Bool)

(assert (=> b!133019 m!156763))

(assert (=> b!133025 m!156163))

(assert (=> b!133025 m!156163))

(assert (=> b!133025 m!156165))

(assert (=> b!133018 m!156163))

(assert (=> b!133018 m!156163))

(assert (=> b!133018 m!156165))

(assert (=> b!133020 m!156175))

(assert (=> b!133020 m!156173))

(assert (=> b!133020 m!156175))

(assert (=> b!133020 m!156177))

(assert (=> b!133020 m!156173))

(assert (=> b!133020 m!156163))

(declare-fun m!156765 () Bool)

(assert (=> b!133020 m!156765))

(assert (=> b!133020 m!156163))

(assert (=> b!133022 m!156163))

(assert (=> b!133022 m!156163))

(declare-fun m!156767 () Bool)

(assert (=> b!133022 m!156767))

(declare-fun m!156769 () Bool)

(assert (=> b!133024 m!156769))

(assert (=> bm!14671 m!156769))

(assert (=> b!133016 m!156175))

(assert (=> b!133016 m!156173))

(assert (=> b!133016 m!156175))

(assert (=> b!133016 m!156177))

(declare-fun m!156771 () Bool)

(assert (=> b!133016 m!156771))

(declare-fun m!156773 () Bool)

(assert (=> b!133016 m!156773))

(assert (=> b!133016 m!156173))

(declare-fun m!156775 () Bool)

(assert (=> b!133016 m!156775))

(assert (=> b!133016 m!156163))

(assert (=> b!133016 m!156773))

(declare-fun m!156777 () Bool)

(assert (=> b!133016 m!156777))

(assert (=> bm!14630 d!40363))

(declare-fun d!40365 () Bool)

(assert (=> d!40365 (= (inRange!0 (index!3261 lt!69239) (mask!7165 newMap!16)) (and (bvsge (index!3261 lt!69239) #b00000000000000000000000000000000) (bvslt (index!3261 lt!69239) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!132688 d!40365))

(declare-fun d!40367 () Bool)

(assert (=> d!40367 (= (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092)) (not (isEmpty!409 (getValueByKey!172 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092))))))

(declare-fun bs!5495 () Bool)

(assert (= bs!5495 d!40367))

(assert (=> bs!5495 m!156351))

(declare-fun m!156779 () Bool)

(assert (=> bs!5495 m!156779))

(assert (=> b!132803 d!40367))

(declare-fun b!133028 () Bool)

(declare-fun e!86708 () Option!178)

(assert (=> b!133028 (= e!86708 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!69092))))

(declare-fun b!133029 () Bool)

(assert (=> b!133029 (= e!86708 None!176)))

(declare-fun d!40369 () Bool)

(declare-fun c!24601 () Bool)

(assert (=> d!40369 (= c!24601 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69092)))))

(declare-fun e!86707 () Option!178)

(assert (=> d!40369 (= (getValueByKey!172 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092) e!86707)))

(declare-fun b!133026 () Bool)

(assert (=> b!133026 (= e!86707 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))))

(declare-fun b!133027 () Bool)

(assert (=> b!133027 (= e!86707 e!86708)))

(declare-fun c!24602 () Bool)

(assert (=> b!133027 (= c!24602 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69092))))))

(assert (= (and d!40369 c!24601) b!133026))

(assert (= (and d!40369 (not c!24601)) b!133027))

(assert (= (and b!133027 c!24602) b!133028))

(assert (= (and b!133027 (not c!24602)) b!133029))

(declare-fun m!156781 () Bool)

(assert (=> b!133028 m!156781))

(assert (=> b!132803 d!40369))

(declare-fun d!40371 () Bool)

(assert (=> d!40371 (= (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and (not (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132950 d!40371))

(declare-fun d!40373 () Bool)

(assert (=> d!40373 (= (apply!116 lt!69262 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1486 (getValueByKey!172 (toList!869 lt!69262) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5496 () Bool)

(assert (= bs!5496 d!40373))

(assert (=> bs!5496 m!156163))

(declare-fun m!156783 () Bool)

(assert (=> bs!5496 m!156783))

(assert (=> bs!5496 m!156783))

(declare-fun m!156785 () Bool)

(assert (=> bs!5496 m!156785))

(assert (=> b!132712 d!40373))

(declare-fun d!40375 () Bool)

(declare-fun c!24603 () Bool)

(assert (=> d!40375 (= c!24603 ((_ is ValueCellFull!1095) (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!86709 () V!3483)

(assert (=> d!40375 (= (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!86709)))

(declare-fun b!133030 () Bool)

(assert (=> b!133030 (= e!86709 (get!1484 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133031 () Bool)

(assert (=> b!133031 (= e!86709 (get!1485 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40375 c!24603) b!133030))

(assert (= (and d!40375 (not c!24603)) b!133031))

(assert (=> b!133030 m!156173))

(assert (=> b!133030 m!156175))

(declare-fun m!156787 () Bool)

(assert (=> b!133030 m!156787))

(assert (=> b!133031 m!156173))

(assert (=> b!133031 m!156175))

(declare-fun m!156789 () Bool)

(assert (=> b!133031 m!156789))

(assert (=> b!132712 d!40375))

(declare-fun d!40377 () Bool)

(assert (=> d!40377 (= (content!132 Nil!1714) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!40217 d!40377))

(declare-fun d!40379 () Bool)

(assert (not d!40379))

(assert (=> b!132659 d!40379))

(declare-fun d!40381 () Bool)

(declare-fun e!86710 () Bool)

(assert (=> d!40381 e!86710))

(declare-fun res!64067 () Bool)

(assert (=> d!40381 (=> (not res!64067) (not e!86710))))

(declare-fun lt!69550 () ListLongMap!1707)

(assert (=> d!40381 (= res!64067 (contains!899 lt!69550 (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!69552 () List!1716)

(assert (=> d!40381 (= lt!69550 (ListLongMap!1708 lt!69552))))

(declare-fun lt!69553 () Unit!4135)

(declare-fun lt!69551 () Unit!4135)

(assert (=> d!40381 (= lt!69553 lt!69551)))

(assert (=> d!40381 (= (getValueByKey!172 lt!69552 (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40381 (= lt!69551 (lemmaContainsTupThenGetReturnValue!87 lt!69552 (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40381 (= lt!69552 (insertStrictlySorted!90 (toList!869 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634))) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40381 (= (+!175 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634)) (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!69550)))

(declare-fun b!133032 () Bool)

(declare-fun res!64066 () Bool)

(assert (=> b!133032 (=> (not res!64066) (not e!86710))))

(assert (=> b!133032 (= res!64066 (= (getValueByKey!172 (toList!869 lt!69550) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!133033 () Bool)

(assert (=> b!133033 (= e!86710 (contains!902 (toList!869 lt!69550) (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!40381 res!64067) b!133032))

(assert (= (and b!133032 res!64066) b!133033))

(declare-fun m!156791 () Bool)

(assert (=> d!40381 m!156791))

(declare-fun m!156793 () Bool)

(assert (=> d!40381 m!156793))

(declare-fun m!156795 () Bool)

(assert (=> d!40381 m!156795))

(declare-fun m!156797 () Bool)

(assert (=> d!40381 m!156797))

(declare-fun m!156799 () Bool)

(assert (=> b!133032 m!156799))

(declare-fun m!156801 () Bool)

(assert (=> b!133033 m!156801))

(assert (=> bm!14627 d!40381))

(assert (=> d!40269 d!40255))

(assert (=> d!40269 d!40253))

(declare-fun d!40383 () Bool)

(assert (=> d!40383 (contains!899 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69092)))

(assert (=> d!40383 true))

(declare-fun _$35!380 () Unit!4135)

(assert (=> d!40383 (= (choose!823 lt!69093 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69092) _$35!380)))

(declare-fun bs!5497 () Bool)

(assert (= bs!5497 d!40383))

(assert (=> bs!5497 m!155961))

(assert (=> bs!5497 m!155961))

(assert (=> bs!5497 m!155985))

(assert (=> d!40269 d!40383))

(declare-fun d!40385 () Bool)

(declare-fun e!86711 () Bool)

(assert (=> d!40385 e!86711))

(declare-fun res!64068 () Bool)

(assert (=> d!40385 (=> res!64068 e!86711)))

(declare-fun lt!69557 () Bool)

(assert (=> d!40385 (= res!64068 (not lt!69557))))

(declare-fun lt!69554 () Bool)

(assert (=> d!40385 (= lt!69557 lt!69554)))

(declare-fun lt!69556 () Unit!4135)

(declare-fun e!86712 () Unit!4135)

(assert (=> d!40385 (= lt!69556 e!86712)))

(declare-fun c!24604 () Bool)

(assert (=> d!40385 (= c!24604 lt!69554)))

(assert (=> d!40385 (= lt!69554 (containsKey!176 (toList!869 lt!69093) lt!69092))))

(assert (=> d!40385 (= (contains!899 lt!69093 lt!69092) lt!69557)))

(declare-fun b!133035 () Bool)

(declare-fun lt!69555 () Unit!4135)

(assert (=> b!133035 (= e!86712 lt!69555)))

(assert (=> b!133035 (= lt!69555 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69093) lt!69092))))

(assert (=> b!133035 (isDefined!125 (getValueByKey!172 (toList!869 lt!69093) lt!69092))))

(declare-fun b!133036 () Bool)

(declare-fun Unit!4159 () Unit!4135)

(assert (=> b!133036 (= e!86712 Unit!4159)))

(declare-fun b!133037 () Bool)

(assert (=> b!133037 (= e!86711 (isDefined!125 (getValueByKey!172 (toList!869 lt!69093) lt!69092)))))

(assert (= (and d!40385 c!24604) b!133035))

(assert (= (and d!40385 (not c!24604)) b!133036))

(assert (= (and d!40385 (not res!64068)) b!133037))

(declare-fun m!156803 () Bool)

(assert (=> d!40385 m!156803))

(declare-fun m!156805 () Bool)

(assert (=> b!133035 m!156805))

(declare-fun m!156807 () Bool)

(assert (=> b!133035 m!156807))

(assert (=> b!133035 m!156807))

(declare-fun m!156809 () Bool)

(assert (=> b!133035 m!156809))

(assert (=> b!133037 m!156807))

(assert (=> b!133037 m!156807))

(assert (=> b!133037 m!156809))

(assert (=> d!40269 d!40385))

(declare-fun d!40387 () Bool)

(declare-fun res!64069 () Bool)

(declare-fun e!86713 () Bool)

(assert (=> d!40387 (=> res!64069 e!86713)))

(assert (=> d!40387 (= res!64069 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(assert (=> d!40387 (= (containsKey!176 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!86713)))

(declare-fun b!133038 () Bool)

(declare-fun e!86714 () Bool)

(assert (=> b!133038 (= e!86713 e!86714)))

(declare-fun res!64070 () Bool)

(assert (=> b!133038 (=> (not res!64070) (not e!86714))))

(assert (=> b!133038 (= res!64070 (and (or (not ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (bvsle (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))) ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvslt (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun b!133039 () Bool)

(assert (=> b!133039 (= e!86714 (containsKey!176 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (= (and d!40387 (not res!64069)) b!133038))

(assert (= (and b!133038 res!64070) b!133039))

(assert (=> b!133039 m!155869))

(declare-fun m!156811 () Bool)

(assert (=> b!133039 m!156811))

(assert (=> d!40243 d!40387))

(assert (=> b!132709 d!40353))

(declare-fun d!40389 () Bool)

(declare-fun res!64071 () Bool)

(declare-fun e!86715 () Bool)

(assert (=> d!40389 (=> res!64071 e!86715)))

(assert (=> d!40389 (= res!64071 (and ((_ is Cons!1712) (toList!869 call!14619)) (= (_1!1324 (h!2317 (toList!869 call!14619))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(assert (=> d!40389 (= (containsKey!176 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!86715)))

(declare-fun b!133040 () Bool)

(declare-fun e!86716 () Bool)

(assert (=> b!133040 (= e!86715 e!86716)))

(declare-fun res!64072 () Bool)

(assert (=> b!133040 (=> (not res!64072) (not e!86716))))

(assert (=> b!133040 (= res!64072 (and (or (not ((_ is Cons!1712) (toList!869 call!14619))) (bvsle (_1!1324 (h!2317 (toList!869 call!14619))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))) ((_ is Cons!1712) (toList!869 call!14619)) (bvslt (_1!1324 (h!2317 (toList!869 call!14619))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun b!133041 () Bool)

(assert (=> b!133041 (= e!86716 (containsKey!176 (t!6167 (toList!869 call!14619)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (= (and d!40389 (not res!64071)) b!133040))

(assert (= (and b!133040 res!64072) b!133041))

(assert (=> b!133041 m!155869))

(declare-fun m!156813 () Bool)

(assert (=> b!133041 m!156813))

(assert (=> d!40315 d!40389))

(assert (=> b!132851 d!40181))

(declare-fun b!133044 () Bool)

(declare-fun res!64075 () Bool)

(declare-fun e!86717 () Bool)

(assert (=> b!133044 (=> (not res!64075) (not e!86717))))

(assert (=> b!133044 (= res!64075 (= (size!2534 (_2!1325 lt!69179)) (bvadd (_size!598 (_2!1325 lt!69179)) (bvsdiv (bvadd (extraKeys!2630 (_2!1325 lt!69179)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!40391 () Bool)

(declare-fun res!64076 () Bool)

(assert (=> d!40391 (=> (not res!64076) (not e!86717))))

(assert (=> d!40391 (= res!64076 (validMask!0 (mask!7165 (_2!1325 lt!69179))))))

(assert (=> d!40391 (= (simpleValid!92 (_2!1325 lt!69179)) e!86717)))

(declare-fun b!133045 () Bool)

(assert (=> b!133045 (= e!86717 (and (bvsge (extraKeys!2630 (_2!1325 lt!69179)) #b00000000000000000000000000000000) (bvsle (extraKeys!2630 (_2!1325 lt!69179)) #b00000000000000000000000000000011) (bvsge (_vacant!598 (_2!1325 lt!69179)) #b00000000000000000000000000000000)))))

(declare-fun b!133042 () Bool)

(declare-fun res!64074 () Bool)

(assert (=> b!133042 (=> (not res!64074) (not e!86717))))

(assert (=> b!133042 (= res!64074 (and (= (size!2531 (_values!2848 (_2!1325 lt!69179))) (bvadd (mask!7165 (_2!1325 lt!69179)) #b00000000000000000000000000000001)) (= (size!2530 (_keys!4614 (_2!1325 lt!69179))) (size!2531 (_values!2848 (_2!1325 lt!69179)))) (bvsge (_size!598 (_2!1325 lt!69179)) #b00000000000000000000000000000000) (bvsle (_size!598 (_2!1325 lt!69179)) (bvadd (mask!7165 (_2!1325 lt!69179)) #b00000000000000000000000000000001))))))

(declare-fun b!133043 () Bool)

(declare-fun res!64073 () Bool)

(assert (=> b!133043 (=> (not res!64073) (not e!86717))))

(assert (=> b!133043 (= res!64073 (bvsge (size!2534 (_2!1325 lt!69179)) (_size!598 (_2!1325 lt!69179))))))

(assert (= (and d!40391 res!64076) b!133042))

(assert (= (and b!133042 res!64074) b!133043))

(assert (= (and b!133043 res!64073) b!133044))

(assert (= (and b!133044 res!64075) b!133045))

(declare-fun m!156815 () Bool)

(assert (=> b!133044 m!156815))

(declare-fun m!156817 () Bool)

(assert (=> d!40391 m!156817))

(assert (=> b!133043 m!156815))

(assert (=> d!40245 d!40391))

(assert (=> b!132915 d!40353))

(declare-fun lt!69558 () Bool)

(declare-fun d!40393 () Bool)

(assert (=> d!40393 (= lt!69558 (select (content!133 (toList!869 lt!69377)) (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun e!86719 () Bool)

(assert (=> d!40393 (= lt!69558 e!86719)))

(declare-fun res!64077 () Bool)

(assert (=> d!40393 (=> (not res!64077) (not e!86719))))

(assert (=> d!40393 (= res!64077 ((_ is Cons!1712) (toList!869 lt!69377)))))

(assert (=> d!40393 (= (contains!902 (toList!869 lt!69377) (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69558)))

(declare-fun b!133046 () Bool)

(declare-fun e!86718 () Bool)

(assert (=> b!133046 (= e!86719 e!86718)))

(declare-fun res!64078 () Bool)

(assert (=> b!133046 (=> res!64078 e!86718)))

(assert (=> b!133046 (= res!64078 (= (h!2317 (toList!869 lt!69377)) (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133047 () Bool)

(assert (=> b!133047 (= e!86718 (contains!902 (t!6167 (toList!869 lt!69377)) (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!40393 res!64077) b!133046))

(assert (= (and b!133046 (not res!64078)) b!133047))

(declare-fun m!156819 () Bool)

(assert (=> d!40393 m!156819))

(declare-fun m!156821 () Bool)

(assert (=> d!40393 m!156821))

(declare-fun m!156823 () Bool)

(assert (=> b!133047 m!156823))

(assert (=> b!132800 d!40393))

(declare-fun b!133060 () Bool)

(declare-fun e!86727 () SeekEntryResult!275)

(assert (=> b!133060 (= e!86727 (Found!275 (index!3262 lt!69233)))))

(declare-fun b!133061 () Bool)

(declare-fun e!86726 () SeekEntryResult!275)

(assert (=> b!133061 (= e!86726 e!86727)))

(declare-fun c!24611 () Bool)

(declare-fun lt!69563 () (_ BitVec 64))

(assert (=> b!133061 (= c!24611 (= lt!69563 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!40395 () Bool)

(declare-fun lt!69564 () SeekEntryResult!275)

(assert (=> d!40395 (and (or ((_ is Undefined!275) lt!69564) (not ((_ is Found!275) lt!69564)) (and (bvsge (index!3261 lt!69564) #b00000000000000000000000000000000) (bvslt (index!3261 lt!69564) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))) (or ((_ is Undefined!275) lt!69564) ((_ is Found!275) lt!69564) (not ((_ is MissingVacant!275) lt!69564)) (not (= (index!3263 lt!69564) (index!3262 lt!69233))) (and (bvsge (index!3263 lt!69564) #b00000000000000000000000000000000) (bvslt (index!3263 lt!69564) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))) (or ((_ is Undefined!275) lt!69564) (ite ((_ is Found!275) lt!69564) (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3261 lt!69564)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!275) lt!69564) (= (index!3263 lt!69564) (index!3262 lt!69233)) (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3263 lt!69564)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!40395 (= lt!69564 e!86726)))

(declare-fun c!24613 () Bool)

(assert (=> d!40395 (= c!24613 (bvsge (x!15592 lt!69233) #b01111111111111111111111111111110))))

(assert (=> d!40395 (= lt!69563 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!69233)))))

(assert (=> d!40395 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!40395 (= (seekKeyOrZeroReturnVacant!0 (x!15592 lt!69233) (index!3262 lt!69233) (index!3262 lt!69233) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) lt!69564)))

(declare-fun b!133062 () Bool)

(declare-fun e!86728 () SeekEntryResult!275)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!133062 (= e!86728 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15592 lt!69233) #b00000000000000000000000000000001) (nextIndex!0 (index!3262 lt!69233) (x!15592 lt!69233) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!69233) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!133063 () Bool)

(declare-fun c!24612 () Bool)

(assert (=> b!133063 (= c!24612 (= lt!69563 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133063 (= e!86727 e!86728)))

(declare-fun b!133064 () Bool)

(assert (=> b!133064 (= e!86726 Undefined!275)))

(declare-fun b!133065 () Bool)

(assert (=> b!133065 (= e!86728 (MissingVacant!275 (index!3262 lt!69233)))))

(assert (= (and d!40395 c!24613) b!133064))

(assert (= (and d!40395 (not c!24613)) b!133061))

(assert (= (and b!133061 c!24611) b!133060))

(assert (= (and b!133061 (not c!24611)) b!133063))

(assert (= (and b!133063 c!24612) b!133065))

(assert (= (and b!133063 (not c!24612)) b!133062))

(declare-fun m!156825 () Bool)

(assert (=> d!40395 m!156825))

(declare-fun m!156827 () Bool)

(assert (=> d!40395 m!156827))

(assert (=> d!40395 m!156151))

(assert (=> d!40395 m!155867))

(declare-fun m!156829 () Bool)

(assert (=> b!133062 m!156829))

(assert (=> b!133062 m!156829))

(assert (=> b!133062 m!155999))

(declare-fun m!156831 () Bool)

(assert (=> b!133062 m!156831))

(assert (=> b!132683 d!40395))

(declare-fun e!86730 () Option!178)

(declare-fun b!133068 () Bool)

(assert (=> b!133068 (= e!86730 (getValueByKey!172 (t!6167 (toList!869 lt!69209)) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!133069 () Bool)

(assert (=> b!133069 (= e!86730 None!176)))

(declare-fun d!40397 () Bool)

(declare-fun c!24614 () Bool)

(assert (=> d!40397 (= c!24614 (and ((_ is Cons!1712) (toList!869 lt!69209)) (= (_1!1324 (h!2317 (toList!869 lt!69209))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun e!86729 () Option!178)

(assert (=> d!40397 (= (getValueByKey!172 (toList!869 lt!69209) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) e!86729)))

(declare-fun b!133066 () Bool)

(assert (=> b!133066 (= e!86729 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69209)))))))

(declare-fun b!133067 () Bool)

(assert (=> b!133067 (= e!86729 e!86730)))

(declare-fun c!24615 () Bool)

(assert (=> b!133067 (= c!24615 (and ((_ is Cons!1712) (toList!869 lt!69209)) (not (= (_1!1324 (h!2317 (toList!869 lt!69209))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))))

(assert (= (and d!40397 c!24614) b!133066))

(assert (= (and d!40397 (not c!24614)) b!133067))

(assert (= (and b!133067 c!24615) b!133068))

(assert (= (and b!133067 (not c!24615)) b!133069))

(declare-fun m!156833 () Bool)

(assert (=> b!133068 m!156833))

(assert (=> b!132632 d!40397))

(assert (=> d!40303 d!40325))

(assert (=> b!132641 d!40291))

(declare-fun d!40399 () Bool)

(assert (=> d!40399 (= (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69080)) (v!3203 (getValueByKey!172 (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69080)))))

(assert (=> d!40259 d!40399))

(declare-fun e!86732 () Option!178)

(declare-fun b!133072 () Bool)

(assert (=> b!133072 (= e!86732 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!69080))))

(declare-fun b!133073 () Bool)

(assert (=> b!133073 (= e!86732 None!176)))

(declare-fun d!40401 () Bool)

(declare-fun c!24616 () Bool)

(assert (=> d!40401 (= c!24616 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69080)))))

(declare-fun e!86731 () Option!178)

(assert (=> d!40401 (= (getValueByKey!172 (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69080) e!86731)))

(declare-fun b!133070 () Bool)

(assert (=> b!133070 (= e!86731 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))))

(declare-fun b!133071 () Bool)

(assert (=> b!133071 (= e!86731 e!86732)))

(declare-fun c!24617 () Bool)

(assert (=> b!133071 (= c!24617 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69080))))))

(assert (= (and d!40401 c!24616) b!133070))

(assert (= (and d!40401 (not c!24616)) b!133071))

(assert (= (and b!133071 c!24617) b!133072))

(assert (= (and b!133071 (not c!24617)) b!133073))

(declare-fun m!156835 () Bool)

(assert (=> b!133072 m!156835))

(assert (=> d!40259 d!40401))

(declare-fun d!40403 () Bool)

(assert (=> d!40403 (= (inRange!0 (ite c!24545 (index!3261 lt!69340) (ite c!24544 (index!3260 lt!69356) (index!3263 lt!69356))) (mask!7165 newMap!16)) (and (bvsge (ite c!24545 (index!3261 lt!69340) (ite c!24544 (index!3260 lt!69356) (index!3263 lt!69356))) #b00000000000000000000000000000000) (bvslt (ite c!24545 (index!3261 lt!69340) (ite c!24544 (index!3260 lt!69356) (index!3263 lt!69356))) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14643 d!40403))

(declare-fun d!40405 () Bool)

(declare-fun e!86733 () Bool)

(assert (=> d!40405 e!86733))

(declare-fun res!64079 () Bool)

(assert (=> d!40405 (=> res!64079 e!86733)))

(declare-fun lt!69568 () Bool)

(assert (=> d!40405 (= res!64079 (not lt!69568))))

(declare-fun lt!69565 () Bool)

(assert (=> d!40405 (= lt!69568 lt!69565)))

(declare-fun lt!69567 () Unit!4135)

(declare-fun e!86734 () Unit!4135)

(assert (=> d!40405 (= lt!69567 e!86734)))

(declare-fun c!24618 () Bool)

(assert (=> d!40405 (= c!24618 lt!69565)))

(assert (=> d!40405 (= lt!69565 (containsKey!176 (toList!869 lt!69500) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40405 (= (contains!899 lt!69500 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69568)))

(declare-fun b!133074 () Bool)

(declare-fun lt!69566 () Unit!4135)

(assert (=> b!133074 (= e!86734 lt!69566)))

(assert (=> b!133074 (= lt!69566 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69500) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!133074 (isDefined!125 (getValueByKey!172 (toList!869 lt!69500) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133075 () Bool)

(declare-fun Unit!4160 () Unit!4135)

(assert (=> b!133075 (= e!86734 Unit!4160)))

(declare-fun b!133076 () Bool)

(assert (=> b!133076 (= e!86733 (isDefined!125 (getValueByKey!172 (toList!869 lt!69500) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!40405 c!24618) b!133074))

(assert (= (and d!40405 (not c!24618)) b!133075))

(assert (= (and d!40405 (not res!64079)) b!133076))

(declare-fun m!156837 () Bool)

(assert (=> d!40405 m!156837))

(declare-fun m!156839 () Bool)

(assert (=> b!133074 m!156839))

(assert (=> b!133074 m!156657))

(assert (=> b!133074 m!156657))

(declare-fun m!156841 () Bool)

(assert (=> b!133074 m!156841))

(assert (=> b!133076 m!156657))

(assert (=> b!133076 m!156657))

(assert (=> b!133076 m!156841))

(assert (=> d!40321 d!40405))

(declare-fun e!86736 () Option!178)

(declare-fun b!133079 () Bool)

(assert (=> b!133079 (= e!86736 (getValueByKey!172 (t!6167 lt!69502) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133080 () Bool)

(assert (=> b!133080 (= e!86736 None!176)))

(declare-fun d!40407 () Bool)

(declare-fun c!24619 () Bool)

(assert (=> d!40407 (= c!24619 (and ((_ is Cons!1712) lt!69502) (= (_1!1324 (h!2317 lt!69502)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!86735 () Option!178)

(assert (=> d!40407 (= (getValueByKey!172 lt!69502 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!86735)))

(declare-fun b!133077 () Bool)

(assert (=> b!133077 (= e!86735 (Some!177 (_2!1324 (h!2317 lt!69502))))))

(declare-fun b!133078 () Bool)

(assert (=> b!133078 (= e!86735 e!86736)))

(declare-fun c!24620 () Bool)

(assert (=> b!133078 (= c!24620 (and ((_ is Cons!1712) lt!69502) (not (= (_1!1324 (h!2317 lt!69502)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!40407 c!24619) b!133077))

(assert (= (and d!40407 (not c!24619)) b!133078))

(assert (= (and b!133078 c!24620) b!133079))

(assert (= (and b!133078 (not c!24620)) b!133080))

(declare-fun m!156843 () Bool)

(assert (=> b!133079 m!156843))

(assert (=> d!40321 d!40407))

(declare-fun d!40409 () Bool)

(assert (=> d!40409 (= (getValueByKey!172 lt!69502 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69571 () Unit!4135)

(declare-fun choose!827 (List!1716 (_ BitVec 64) V!3483) Unit!4135)

(assert (=> d!40409 (= lt!69571 (choose!827 lt!69502 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!86739 () Bool)

(assert (=> d!40409 e!86739))

(declare-fun res!64084 () Bool)

(assert (=> d!40409 (=> (not res!64084) (not e!86739))))

(assert (=> d!40409 (= res!64084 (isStrictlySorted!322 lt!69502))))

(assert (=> d!40409 (= (lemmaContainsTupThenGetReturnValue!87 lt!69502 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69571)))

(declare-fun b!133085 () Bool)

(declare-fun res!64085 () Bool)

(assert (=> b!133085 (=> (not res!64085) (not e!86739))))

(assert (=> b!133085 (= res!64085 (containsKey!176 lt!69502 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133086 () Bool)

(assert (=> b!133086 (= e!86739 (contains!902 lt!69502 (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!40409 res!64084) b!133085))

(assert (= (and b!133085 res!64085) b!133086))

(assert (=> d!40409 m!156651))

(declare-fun m!156845 () Bool)

(assert (=> d!40409 m!156845))

(declare-fun m!156847 () Bool)

(assert (=> d!40409 m!156847))

(declare-fun m!156849 () Bool)

(assert (=> b!133085 m!156849))

(declare-fun m!156851 () Bool)

(assert (=> b!133086 m!156851))

(assert (=> d!40321 d!40409))

(declare-fun bm!14678 () Bool)

(declare-fun call!14682 () List!1716)

(declare-fun call!14683 () List!1716)

(assert (=> bm!14678 (= call!14682 call!14683)))

(declare-fun d!40411 () Bool)

(declare-fun e!86753 () Bool)

(assert (=> d!40411 e!86753))

(declare-fun res!64091 () Bool)

(assert (=> d!40411 (=> (not res!64091) (not e!86753))))

(declare-fun lt!69574 () List!1716)

(assert (=> d!40411 (= res!64091 (isStrictlySorted!322 lt!69574))))

(declare-fun e!86751 () List!1716)

(assert (=> d!40411 (= lt!69574 e!86751)))

(declare-fun c!24632 () Bool)

(assert (=> d!40411 (= c!24632 (and ((_ is Cons!1712) (toList!869 call!14603)) (bvslt (_1!1324 (h!2317 (toList!869 call!14603))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40411 (isStrictlySorted!322 (toList!869 call!14603))))

(assert (=> d!40411 (= (insertStrictlySorted!90 (toList!869 call!14603) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69574)))

(declare-fun b!133107 () Bool)

(assert (=> b!133107 (= e!86753 (contains!902 lt!69574 (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun c!24630 () Bool)

(declare-fun b!133108 () Bool)

(assert (=> b!133108 (= c!24630 (and ((_ is Cons!1712) (toList!869 call!14603)) (bvsgt (_1!1324 (h!2317 (toList!869 call!14603))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!86752 () List!1716)

(declare-fun e!86754 () List!1716)

(assert (=> b!133108 (= e!86752 e!86754)))

(declare-fun b!133109 () Bool)

(declare-fun e!86750 () List!1716)

(assert (=> b!133109 (= e!86750 (insertStrictlySorted!90 (t!6167 (toList!869 call!14603)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133110 () Bool)

(assert (=> b!133110 (= e!86752 call!14682)))

(declare-fun b!133111 () Bool)

(declare-fun call!14681 () List!1716)

(assert (=> b!133111 (= e!86754 call!14681)))

(declare-fun b!133112 () Bool)

(declare-fun c!24629 () Bool)

(assert (=> b!133112 (= e!86750 (ite c!24629 (t!6167 (toList!869 call!14603)) (ite c!24630 (Cons!1712 (h!2317 (toList!869 call!14603)) (t!6167 (toList!869 call!14603))) Nil!1713)))))

(declare-fun b!133113 () Bool)

(assert (=> b!133113 (= e!86754 call!14681)))

(declare-fun b!133114 () Bool)

(assert (=> b!133114 (= e!86751 call!14683)))

(declare-fun bm!14679 () Bool)

(declare-fun $colon$colon!92 (List!1716 tuple2!2626) List!1716)

(assert (=> bm!14679 (= call!14683 ($colon$colon!92 e!86750 (ite c!24632 (h!2317 (toList!869 call!14603)) (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!24631 () Bool)

(assert (=> bm!14679 (= c!24631 c!24632)))

(declare-fun bm!14680 () Bool)

(assert (=> bm!14680 (= call!14681 call!14682)))

(declare-fun b!133115 () Bool)

(declare-fun res!64090 () Bool)

(assert (=> b!133115 (=> (not res!64090) (not e!86753))))

(assert (=> b!133115 (= res!64090 (containsKey!176 lt!69574 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133116 () Bool)

(assert (=> b!133116 (= e!86751 e!86752)))

(assert (=> b!133116 (= c!24629 (and ((_ is Cons!1712) (toList!869 call!14603)) (= (_1!1324 (h!2317 (toList!869 call!14603))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!40411 c!24632) b!133114))

(assert (= (and d!40411 (not c!24632)) b!133116))

(assert (= (and b!133116 c!24629) b!133110))

(assert (= (and b!133116 (not c!24629)) b!133108))

(assert (= (and b!133108 c!24630) b!133111))

(assert (= (and b!133108 (not c!24630)) b!133113))

(assert (= (or b!133111 b!133113) bm!14680))

(assert (= (or b!133110 bm!14680) bm!14678))

(assert (= (or b!133114 bm!14678) bm!14679))

(assert (= (and bm!14679 c!24631) b!133109))

(assert (= (and bm!14679 (not c!24631)) b!133112))

(assert (= (and d!40411 res!64091) b!133115))

(assert (= (and b!133115 res!64090) b!133107))

(declare-fun m!156853 () Bool)

(assert (=> d!40411 m!156853))

(declare-fun m!156855 () Bool)

(assert (=> d!40411 m!156855))

(declare-fun m!156857 () Bool)

(assert (=> bm!14679 m!156857))

(declare-fun m!156859 () Bool)

(assert (=> b!133109 m!156859))

(declare-fun m!156861 () Bool)

(assert (=> b!133107 m!156861))

(declare-fun m!156863 () Bool)

(assert (=> b!133115 m!156863))

(assert (=> d!40321 d!40411))

(assert (=> d!40219 d!40221))

(declare-fun d!40413 () Bool)

(assert (=> d!40413 (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69106 #b00000000000000000000000000000000)))

(assert (=> d!40413 true))

(declare-fun _$60!363 () Unit!4135)

(assert (=> d!40413 (= (choose!13 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69106 #b00000000000000000000000000000000) _$60!363)))

(declare-fun bs!5498 () Bool)

(assert (= bs!5498 d!40413))

(assert (=> bs!5498 m!156005))

(assert (=> d!40219 d!40413))

(declare-fun d!40415 () Bool)

(declare-fun e!86755 () Bool)

(assert (=> d!40415 e!86755))

(declare-fun res!64092 () Bool)

(assert (=> d!40415 (=> res!64092 e!86755)))

(declare-fun lt!69578 () Bool)

(assert (=> d!40415 (= res!64092 (not lt!69578))))

(declare-fun lt!69575 () Bool)

(assert (=> d!40415 (= lt!69578 lt!69575)))

(declare-fun lt!69577 () Unit!4135)

(declare-fun e!86756 () Unit!4135)

(assert (=> d!40415 (= lt!69577 e!86756)))

(declare-fun c!24633 () Bool)

(assert (=> d!40415 (= c!24633 lt!69575)))

(assert (=> d!40415 (= lt!69575 (containsKey!176 (toList!869 lt!69408) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40415 (= (contains!899 lt!69408 #b1000000000000000000000000000000000000000000000000000000000000000) lt!69578)))

(declare-fun b!133117 () Bool)

(declare-fun lt!69576 () Unit!4135)

(assert (=> b!133117 (= e!86756 lt!69576)))

(assert (=> b!133117 (= lt!69576 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69408) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133117 (isDefined!125 (getValueByKey!172 (toList!869 lt!69408) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133118 () Bool)

(declare-fun Unit!4161 () Unit!4135)

(assert (=> b!133118 (= e!86756 Unit!4161)))

(declare-fun b!133119 () Bool)

(assert (=> b!133119 (= e!86755 (isDefined!125 (getValueByKey!172 (toList!869 lt!69408) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40415 c!24633) b!133117))

(assert (= (and d!40415 (not c!24633)) b!133118))

(assert (= (and d!40415 (not res!64092)) b!133119))

(declare-fun m!156865 () Bool)

(assert (=> d!40415 m!156865))

(declare-fun m!156867 () Bool)

(assert (=> b!133117 m!156867))

(declare-fun m!156869 () Bool)

(assert (=> b!133117 m!156869))

(assert (=> b!133117 m!156869))

(declare-fun m!156871 () Bool)

(assert (=> b!133117 m!156871))

(assert (=> b!133119 m!156869))

(assert (=> b!133119 m!156869))

(assert (=> b!133119 m!156871))

(assert (=> b!132835 d!40415))

(declare-fun d!40417 () Bool)

(declare-fun lt!69579 () Bool)

(assert (=> d!40417 (= lt!69579 (select (content!132 (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!86757 () Bool)

(assert (=> d!40417 (= lt!69579 e!86757)))

(declare-fun res!64093 () Bool)

(assert (=> d!40417 (=> (not res!64093) (not e!86757))))

(assert (=> d!40417 (= res!64093 ((_ is Cons!1713) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)))))

(assert (=> d!40417 (= (contains!901 (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!69579)))

(declare-fun b!133120 () Bool)

(declare-fun e!86758 () Bool)

(assert (=> b!133120 (= e!86757 e!86758)))

(declare-fun res!64094 () Bool)

(assert (=> b!133120 (=> res!64094 e!86758)))

(assert (=> b!133120 (= res!64094 (= (h!2318 (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133121 () Bool)

(assert (=> b!133121 (= e!86758 (contains!901 (t!6168 (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!40417 res!64093) b!133120))

(assert (= (and b!133120 (not res!64094)) b!133121))

(declare-fun m!156873 () Bool)

(assert (=> d!40417 m!156873))

(assert (=> d!40417 m!156619))

(declare-fun m!156875 () Bool)

(assert (=> d!40417 m!156875))

(assert (=> b!133121 m!156619))

(declare-fun m!156877 () Bool)

(assert (=> b!133121 m!156877))

(assert (=> b!132962 d!40417))

(declare-fun d!40419 () Bool)

(declare-fun e!86759 () Bool)

(assert (=> d!40419 e!86759))

(declare-fun res!64095 () Bool)

(assert (=> d!40419 (=> res!64095 e!86759)))

(declare-fun lt!69583 () Bool)

(assert (=> d!40419 (= res!64095 (not lt!69583))))

(declare-fun lt!69580 () Bool)

(assert (=> d!40419 (= lt!69583 lt!69580)))

(declare-fun lt!69582 () Unit!4135)

(declare-fun e!86760 () Unit!4135)

(assert (=> d!40419 (= lt!69582 e!86760)))

(declare-fun c!24634 () Bool)

(assert (=> d!40419 (= c!24634 lt!69580)))

(assert (=> d!40419 (= lt!69580 (containsKey!176 (toList!869 lt!69377) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40419 (= (contains!899 lt!69377 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69583)))

(declare-fun b!133122 () Bool)

(declare-fun lt!69581 () Unit!4135)

(assert (=> b!133122 (= e!86760 lt!69581)))

(assert (=> b!133122 (= lt!69581 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69377) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> b!133122 (isDefined!125 (getValueByKey!172 (toList!869 lt!69377) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133123 () Bool)

(declare-fun Unit!4162 () Unit!4135)

(assert (=> b!133123 (= e!86760 Unit!4162)))

(declare-fun b!133124 () Bool)

(assert (=> b!133124 (= e!86759 (isDefined!125 (getValueByKey!172 (toList!869 lt!69377) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!40419 c!24634) b!133122))

(assert (= (and d!40419 (not c!24634)) b!133123))

(assert (= (and d!40419 (not res!64095)) b!133124))

(declare-fun m!156879 () Bool)

(assert (=> d!40419 m!156879))

(declare-fun m!156881 () Bool)

(assert (=> b!133122 m!156881))

(assert (=> b!133122 m!156343))

(assert (=> b!133122 m!156343))

(declare-fun m!156883 () Bool)

(assert (=> b!133122 m!156883))

(assert (=> b!133124 m!156343))

(assert (=> b!133124 m!156343))

(assert (=> b!133124 m!156883))

(assert (=> d!40253 d!40419))

(declare-fun e!86762 () Option!178)

(declare-fun b!133127 () Bool)

(assert (=> b!133127 (= e!86762 (getValueByKey!172 (t!6167 lt!69379) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133128 () Bool)

(assert (=> b!133128 (= e!86762 None!176)))

(declare-fun d!40421 () Bool)

(declare-fun c!24635 () Bool)

(assert (=> d!40421 (= c!24635 (and ((_ is Cons!1712) lt!69379) (= (_1!1324 (h!2317 lt!69379)) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!86761 () Option!178)

(assert (=> d!40421 (= (getValueByKey!172 lt!69379 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!86761)))

(declare-fun b!133125 () Bool)

(assert (=> b!133125 (= e!86761 (Some!177 (_2!1324 (h!2317 lt!69379))))))

(declare-fun b!133126 () Bool)

(assert (=> b!133126 (= e!86761 e!86762)))

(declare-fun c!24636 () Bool)

(assert (=> b!133126 (= c!24636 (and ((_ is Cons!1712) lt!69379) (not (= (_1!1324 (h!2317 lt!69379)) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!40421 c!24635) b!133125))

(assert (= (and d!40421 (not c!24635)) b!133126))

(assert (= (and b!133126 c!24636) b!133127))

(assert (= (and b!133126 (not c!24636)) b!133128))

(declare-fun m!156885 () Bool)

(assert (=> b!133127 m!156885))

(assert (=> d!40253 d!40421))

(declare-fun d!40423 () Bool)

(assert (=> d!40423 (= (getValueByKey!172 lt!69379 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun lt!69584 () Unit!4135)

(assert (=> d!40423 (= lt!69584 (choose!827 lt!69379 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun e!86763 () Bool)

(assert (=> d!40423 e!86763))

(declare-fun res!64096 () Bool)

(assert (=> d!40423 (=> (not res!64096) (not e!86763))))

(assert (=> d!40423 (= res!64096 (isStrictlySorted!322 lt!69379))))

(assert (=> d!40423 (= (lemmaContainsTupThenGetReturnValue!87 lt!69379 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69584)))

(declare-fun b!133129 () Bool)

(declare-fun res!64097 () Bool)

(assert (=> b!133129 (=> (not res!64097) (not e!86763))))

(assert (=> b!133129 (= res!64097 (containsKey!176 lt!69379 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133130 () Bool)

(assert (=> b!133130 (= e!86763 (contains!902 lt!69379 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!40423 res!64096) b!133129))

(assert (= (and b!133129 res!64097) b!133130))

(assert (=> d!40423 m!156337))

(declare-fun m!156887 () Bool)

(assert (=> d!40423 m!156887))

(declare-fun m!156889 () Bool)

(assert (=> d!40423 m!156889))

(declare-fun m!156891 () Bool)

(assert (=> b!133129 m!156891))

(declare-fun m!156893 () Bool)

(assert (=> b!133130 m!156893))

(assert (=> d!40253 d!40423))

(declare-fun bm!14681 () Bool)

(declare-fun call!14685 () List!1716)

(declare-fun call!14686 () List!1716)

(assert (=> bm!14681 (= call!14685 call!14686)))

(declare-fun d!40425 () Bool)

(declare-fun e!86767 () Bool)

(assert (=> d!40425 e!86767))

(declare-fun res!64099 () Bool)

(assert (=> d!40425 (=> (not res!64099) (not e!86767))))

(declare-fun lt!69585 () List!1716)

(assert (=> d!40425 (= res!64099 (isStrictlySorted!322 lt!69585))))

(declare-fun e!86765 () List!1716)

(assert (=> d!40425 (= lt!69585 e!86765)))

(declare-fun c!24640 () Bool)

(assert (=> d!40425 (= c!24640 (and ((_ is Cons!1712) (toList!869 lt!69093)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69093))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!40425 (isStrictlySorted!322 (toList!869 lt!69093))))

(assert (=> d!40425 (= (insertStrictlySorted!90 (toList!869 lt!69093) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69585)))

(declare-fun b!133131 () Bool)

(assert (=> b!133131 (= e!86767 (contains!902 lt!69585 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun c!24638 () Bool)

(declare-fun b!133132 () Bool)

(assert (=> b!133132 (= c!24638 (and ((_ is Cons!1712) (toList!869 lt!69093)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69093))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!86766 () List!1716)

(declare-fun e!86768 () List!1716)

(assert (=> b!133132 (= e!86766 e!86768)))

(declare-fun b!133133 () Bool)

(declare-fun e!86764 () List!1716)

(assert (=> b!133133 (= e!86764 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69093)) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133134 () Bool)

(assert (=> b!133134 (= e!86766 call!14685)))

(declare-fun b!133135 () Bool)

(declare-fun call!14684 () List!1716)

(assert (=> b!133135 (= e!86768 call!14684)))

(declare-fun b!133136 () Bool)

(declare-fun c!24637 () Bool)

(assert (=> b!133136 (= e!86764 (ite c!24637 (t!6167 (toList!869 lt!69093)) (ite c!24638 (Cons!1712 (h!2317 (toList!869 lt!69093)) (t!6167 (toList!869 lt!69093))) Nil!1713)))))

(declare-fun b!133137 () Bool)

(assert (=> b!133137 (= e!86768 call!14684)))

(declare-fun b!133138 () Bool)

(assert (=> b!133138 (= e!86765 call!14686)))

(declare-fun bm!14682 () Bool)

(assert (=> bm!14682 (= call!14686 ($colon$colon!92 e!86764 (ite c!24640 (h!2317 (toList!869 lt!69093)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun c!24639 () Bool)

(assert (=> bm!14682 (= c!24639 c!24640)))

(declare-fun bm!14683 () Bool)

(assert (=> bm!14683 (= call!14684 call!14685)))

(declare-fun b!133139 () Bool)

(declare-fun res!64098 () Bool)

(assert (=> b!133139 (=> (not res!64098) (not e!86767))))

(assert (=> b!133139 (= res!64098 (containsKey!176 lt!69585 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133140 () Bool)

(assert (=> b!133140 (= e!86765 e!86766)))

(assert (=> b!133140 (= c!24637 (and ((_ is Cons!1712) (toList!869 lt!69093)) (= (_1!1324 (h!2317 (toList!869 lt!69093))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!40425 c!24640) b!133138))

(assert (= (and d!40425 (not c!24640)) b!133140))

(assert (= (and b!133140 c!24637) b!133134))

(assert (= (and b!133140 (not c!24637)) b!133132))

(assert (= (and b!133132 c!24638) b!133135))

(assert (= (and b!133132 (not c!24638)) b!133137))

(assert (= (or b!133135 b!133137) bm!14683))

(assert (= (or b!133134 bm!14683) bm!14681))

(assert (= (or b!133138 bm!14681) bm!14682))

(assert (= (and bm!14682 c!24639) b!133133))

(assert (= (and bm!14682 (not c!24639)) b!133136))

(assert (= (and d!40425 res!64099) b!133139))

(assert (= (and b!133139 res!64098) b!133131))

(declare-fun m!156895 () Bool)

(assert (=> d!40425 m!156895))

(declare-fun m!156897 () Bool)

(assert (=> d!40425 m!156897))

(declare-fun m!156899 () Bool)

(assert (=> bm!14682 m!156899))

(declare-fun m!156901 () Bool)

(assert (=> b!133133 m!156901))

(declare-fun m!156903 () Bool)

(assert (=> b!133131 m!156903))

(declare-fun m!156905 () Bool)

(assert (=> b!133139 m!156905))

(assert (=> d!40253 d!40425))

(declare-fun d!40427 () Bool)

(declare-fun e!86769 () Bool)

(assert (=> d!40427 e!86769))

(declare-fun res!64101 () Bool)

(assert (=> d!40427 (=> (not res!64101) (not e!86769))))

(declare-fun lt!69586 () ListLongMap!1707)

(assert (=> d!40427 (= res!64101 (contains!899 lt!69586 (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))

(declare-fun lt!69588 () List!1716)

(assert (=> d!40427 (= lt!69586 (ListLongMap!1708 lt!69588))))

(declare-fun lt!69589 () Unit!4135)

(declare-fun lt!69587 () Unit!4135)

(assert (=> d!40427 (= lt!69589 lt!69587)))

(assert (=> d!40427 (= (getValueByKey!172 lt!69588 (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))

(assert (=> d!40427 (= lt!69587 (lemmaContainsTupThenGetReturnValue!87 lt!69588 (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))

(assert (=> d!40427 (= lt!69588 (insertStrictlySorted!90 (toList!869 lt!69448) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))

(assert (=> d!40427 (= (+!175 lt!69448 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))) lt!69586)))

(declare-fun b!133141 () Bool)

(declare-fun res!64100 () Bool)

(assert (=> b!133141 (=> (not res!64100) (not e!86769))))

(assert (=> b!133141 (= res!64100 (= (getValueByKey!172 (toList!869 lt!69586) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))))))

(declare-fun b!133142 () Bool)

(assert (=> b!133142 (= e!86769 (contains!902 (toList!869 lt!69586) (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))))

(assert (= (and d!40427 res!64101) b!133141))

(assert (= (and b!133141 res!64100) b!133142))

(declare-fun m!156907 () Bool)

(assert (=> d!40427 m!156907))

(declare-fun m!156909 () Bool)

(assert (=> d!40427 m!156909))

(declare-fun m!156911 () Bool)

(assert (=> d!40427 m!156911))

(declare-fun m!156913 () Bool)

(assert (=> d!40427 m!156913))

(declare-fun m!156915 () Bool)

(assert (=> b!133141 m!156915))

(declare-fun m!156917 () Bool)

(assert (=> b!133142 m!156917))

(assert (=> b!132896 d!40427))

(declare-fun d!40429 () Bool)

(assert (=> d!40429 (= (apply!116 lt!69450 lt!69463) (get!1486 (getValueByKey!172 (toList!869 lt!69450) lt!69463)))))

(declare-fun bs!5499 () Bool)

(assert (= bs!5499 d!40429))

(declare-fun m!156919 () Bool)

(assert (=> bs!5499 m!156919))

(assert (=> bs!5499 m!156919))

(declare-fun m!156921 () Bool)

(assert (=> bs!5499 m!156921))

(assert (=> b!132896 d!40429))

(declare-fun d!40431 () Bool)

(assert (=> d!40431 (= (apply!116 lt!69448 lt!69467) (get!1486 (getValueByKey!172 (toList!869 lt!69448) lt!69467)))))

(declare-fun bs!5500 () Bool)

(assert (= bs!5500 d!40431))

(declare-fun m!156923 () Bool)

(assert (=> bs!5500 m!156923))

(assert (=> bs!5500 m!156923))

(declare-fun m!156925 () Bool)

(assert (=> bs!5500 m!156925))

(assert (=> b!132896 d!40431))

(declare-fun d!40433 () Bool)

(assert (=> d!40433 (contains!899 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))) lt!69461)))

(declare-fun lt!69590 () Unit!4135)

(assert (=> d!40433 (= lt!69590 (choose!823 lt!69462 lt!69456 (zeroValue!2720 newMap!16) lt!69461))))

(assert (=> d!40433 (contains!899 lt!69462 lt!69461)))

(assert (=> d!40433 (= (addStillContains!92 lt!69462 lt!69456 (zeroValue!2720 newMap!16) lt!69461) lt!69590)))

(declare-fun bs!5501 () Bool)

(assert (= bs!5501 d!40433))

(assert (=> bs!5501 m!156527))

(assert (=> bs!5501 m!156527))

(assert (=> bs!5501 m!156551))

(declare-fun m!156927 () Bool)

(assert (=> bs!5501 m!156927))

(declare-fun m!156929 () Bool)

(assert (=> bs!5501 m!156929))

(assert (=> b!132896 d!40433))

(declare-fun d!40435 () Bool)

(assert (=> d!40435 (= (apply!116 (+!175 lt!69450 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))) lt!69463) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69450 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))) lt!69463)))))

(declare-fun bs!5502 () Bool)

(assert (= bs!5502 d!40435))

(declare-fun m!156931 () Bool)

(assert (=> bs!5502 m!156931))

(assert (=> bs!5502 m!156931))

(declare-fun m!156933 () Bool)

(assert (=> bs!5502 m!156933))

(assert (=> b!132896 d!40435))

(declare-fun d!40437 () Bool)

(declare-fun e!86770 () Bool)

(assert (=> d!40437 e!86770))

(declare-fun res!64102 () Bool)

(assert (=> d!40437 (=> res!64102 e!86770)))

(declare-fun lt!69594 () Bool)

(assert (=> d!40437 (= res!64102 (not lt!69594))))

(declare-fun lt!69591 () Bool)

(assert (=> d!40437 (= lt!69594 lt!69591)))

(declare-fun lt!69593 () Unit!4135)

(declare-fun e!86771 () Unit!4135)

(assert (=> d!40437 (= lt!69593 e!86771)))

(declare-fun c!24641 () Bool)

(assert (=> d!40437 (= c!24641 lt!69591)))

(assert (=> d!40437 (= lt!69591 (containsKey!176 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) lt!69461))))

(assert (=> d!40437 (= (contains!899 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))) lt!69461) lt!69594)))

(declare-fun b!133143 () Bool)

(declare-fun lt!69592 () Unit!4135)

(assert (=> b!133143 (= e!86771 lt!69592)))

(assert (=> b!133143 (= lt!69592 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) lt!69461))))

(assert (=> b!133143 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) lt!69461))))

(declare-fun b!133144 () Bool)

(declare-fun Unit!4163 () Unit!4135)

(assert (=> b!133144 (= e!86771 Unit!4163)))

(declare-fun b!133145 () Bool)

(assert (=> b!133145 (= e!86770 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) lt!69461)))))

(assert (= (and d!40437 c!24641) b!133143))

(assert (= (and d!40437 (not c!24641)) b!133144))

(assert (= (and d!40437 (not res!64102)) b!133145))

(declare-fun m!156935 () Bool)

(assert (=> d!40437 m!156935))

(declare-fun m!156937 () Bool)

(assert (=> b!133143 m!156937))

(declare-fun m!156939 () Bool)

(assert (=> b!133143 m!156939))

(assert (=> b!133143 m!156939))

(declare-fun m!156941 () Bool)

(assert (=> b!133143 m!156941))

(assert (=> b!133145 m!156939))

(assert (=> b!133145 m!156939))

(assert (=> b!133145 m!156941))

(assert (=> b!132896 d!40437))

(declare-fun d!40439 () Bool)

(assert (=> d!40439 (= (apply!116 (+!175 lt!69453 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))) lt!69449) (apply!116 lt!69453 lt!69449))))

(declare-fun lt!69595 () Unit!4135)

(assert (=> d!40439 (= lt!69595 (choose!822 lt!69453 lt!69455 (zeroValue!2720 newMap!16) lt!69449))))

(declare-fun e!86772 () Bool)

(assert (=> d!40439 e!86772))

(declare-fun res!64103 () Bool)

(assert (=> d!40439 (=> (not res!64103) (not e!86772))))

(assert (=> d!40439 (= res!64103 (contains!899 lt!69453 lt!69449))))

(assert (=> d!40439 (= (addApplyDifferent!92 lt!69453 lt!69455 (zeroValue!2720 newMap!16) lt!69449) lt!69595)))

(declare-fun b!133146 () Bool)

(assert (=> b!133146 (= e!86772 (not (= lt!69449 lt!69455)))))

(assert (= (and d!40439 res!64103) b!133146))

(declare-fun m!156943 () Bool)

(assert (=> d!40439 m!156943))

(assert (=> d!40439 m!156529))

(assert (=> d!40439 m!156549))

(assert (=> d!40439 m!156529))

(assert (=> d!40439 m!156531))

(declare-fun m!156945 () Bool)

(assert (=> d!40439 m!156945))

(assert (=> b!132896 d!40439))

(declare-fun d!40441 () Bool)

(declare-fun e!86773 () Bool)

(assert (=> d!40441 e!86773))

(declare-fun res!64105 () Bool)

(assert (=> d!40441 (=> (not res!64105) (not e!86773))))

(declare-fun lt!69596 () ListLongMap!1707)

(assert (=> d!40441 (= res!64105 (contains!899 lt!69596 (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!69598 () List!1716)

(assert (=> d!40441 (= lt!69596 (ListLongMap!1708 lt!69598))))

(declare-fun lt!69599 () Unit!4135)

(declare-fun lt!69597 () Unit!4135)

(assert (=> d!40441 (= lt!69599 lt!69597)))

(assert (=> d!40441 (= (getValueByKey!172 lt!69598 (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40441 (= lt!69597 (lemmaContainsTupThenGetReturnValue!87 lt!69598 (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40441 (= lt!69598 (insertStrictlySorted!90 (toList!869 lt!69453) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40441 (= (+!175 lt!69453 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))) lt!69596)))

(declare-fun b!133147 () Bool)

(declare-fun res!64104 () Bool)

(assert (=> b!133147 (=> (not res!64104) (not e!86773))))

(assert (=> b!133147 (= res!64104 (= (getValueByKey!172 (toList!869 lt!69596) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))))))

(declare-fun b!133148 () Bool)

(assert (=> b!133148 (= e!86773 (contains!902 (toList!869 lt!69596) (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))))

(assert (= (and d!40441 res!64105) b!133147))

(assert (= (and b!133147 res!64104) b!133148))

(declare-fun m!156947 () Bool)

(assert (=> d!40441 m!156947))

(declare-fun m!156949 () Bool)

(assert (=> d!40441 m!156949))

(declare-fun m!156951 () Bool)

(assert (=> d!40441 m!156951))

(declare-fun m!156953 () Bool)

(assert (=> d!40441 m!156953))

(declare-fun m!156955 () Bool)

(assert (=> b!133147 m!156955))

(declare-fun m!156957 () Bool)

(assert (=> b!133148 m!156957))

(assert (=> b!132896 d!40441))

(declare-fun d!40443 () Bool)

(declare-fun e!86774 () Bool)

(assert (=> d!40443 e!86774))

(declare-fun res!64107 () Bool)

(assert (=> d!40443 (=> (not res!64107) (not e!86774))))

(declare-fun lt!69600 () ListLongMap!1707)

(assert (=> d!40443 (= res!64107 (contains!899 lt!69600 (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!69602 () List!1716)

(assert (=> d!40443 (= lt!69600 (ListLongMap!1708 lt!69602))))

(declare-fun lt!69603 () Unit!4135)

(declare-fun lt!69601 () Unit!4135)

(assert (=> d!40443 (= lt!69603 lt!69601)))

(assert (=> d!40443 (= (getValueByKey!172 lt!69602 (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40443 (= lt!69601 (lemmaContainsTupThenGetReturnValue!87 lt!69602 (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40443 (= lt!69602 (insertStrictlySorted!90 (toList!869 lt!69462) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40443 (= (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))) lt!69600)))

(declare-fun b!133149 () Bool)

(declare-fun res!64106 () Bool)

(assert (=> b!133149 (=> (not res!64106) (not e!86774))))

(assert (=> b!133149 (= res!64106 (= (getValueByKey!172 (toList!869 lt!69600) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))))))

(declare-fun b!133150 () Bool)

(assert (=> b!133150 (= e!86774 (contains!902 (toList!869 lt!69600) (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))))

(assert (= (and d!40443 res!64107) b!133149))

(assert (= (and b!133149 res!64106) b!133150))

(declare-fun m!156959 () Bool)

(assert (=> d!40443 m!156959))

(declare-fun m!156961 () Bool)

(assert (=> d!40443 m!156961))

(declare-fun m!156963 () Bool)

(assert (=> d!40443 m!156963))

(declare-fun m!156965 () Bool)

(assert (=> d!40443 m!156965))

(declare-fun m!156967 () Bool)

(assert (=> b!133149 m!156967))

(declare-fun m!156969 () Bool)

(assert (=> b!133150 m!156969))

(assert (=> b!132896 d!40443))

(declare-fun d!40445 () Bool)

(declare-fun e!86775 () Bool)

(assert (=> d!40445 e!86775))

(declare-fun res!64109 () Bool)

(assert (=> d!40445 (=> (not res!64109) (not e!86775))))

(declare-fun lt!69604 () ListLongMap!1707)

(assert (=> d!40445 (= res!64109 (contains!899 lt!69604 (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))

(declare-fun lt!69606 () List!1716)

(assert (=> d!40445 (= lt!69604 (ListLongMap!1708 lt!69606))))

(declare-fun lt!69607 () Unit!4135)

(declare-fun lt!69605 () Unit!4135)

(assert (=> d!40445 (= lt!69607 lt!69605)))

(assert (=> d!40445 (= (getValueByKey!172 lt!69606 (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))

(assert (=> d!40445 (= lt!69605 (lemmaContainsTupThenGetReturnValue!87 lt!69606 (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))

(assert (=> d!40445 (= lt!69606 (insertStrictlySorted!90 (toList!869 lt!69450) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))

(assert (=> d!40445 (= (+!175 lt!69450 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))) lt!69604)))

(declare-fun b!133151 () Bool)

(declare-fun res!64108 () Bool)

(assert (=> b!133151 (=> (not res!64108) (not e!86775))))

(assert (=> b!133151 (= res!64108 (= (getValueByKey!172 (toList!869 lt!69604) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))))))

(declare-fun b!133152 () Bool)

(assert (=> b!133152 (= e!86775 (contains!902 (toList!869 lt!69604) (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))))

(assert (= (and d!40445 res!64109) b!133151))

(assert (= (and b!133151 res!64108) b!133152))

(declare-fun m!156971 () Bool)

(assert (=> d!40445 m!156971))

(declare-fun m!156973 () Bool)

(assert (=> d!40445 m!156973))

(declare-fun m!156975 () Bool)

(assert (=> d!40445 m!156975))

(declare-fun m!156977 () Bool)

(assert (=> d!40445 m!156977))

(declare-fun m!156979 () Bool)

(assert (=> b!133151 m!156979))

(declare-fun m!156981 () Bool)

(assert (=> b!133152 m!156981))

(assert (=> b!132896 d!40445))

(declare-fun d!40447 () Bool)

(assert (=> d!40447 (= (apply!116 (+!175 lt!69453 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))) lt!69449) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69453 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))) lt!69449)))))

(declare-fun bs!5503 () Bool)

(assert (= bs!5503 d!40447))

(declare-fun m!156983 () Bool)

(assert (=> bs!5503 m!156983))

(assert (=> bs!5503 m!156983))

(declare-fun m!156985 () Bool)

(assert (=> bs!5503 m!156985))

(assert (=> b!132896 d!40447))

(declare-fun d!40449 () Bool)

(assert (=> d!40449 (= (apply!116 lt!69453 lt!69449) (get!1486 (getValueByKey!172 (toList!869 lt!69453) lt!69449)))))

(declare-fun bs!5504 () Bool)

(assert (= bs!5504 d!40449))

(declare-fun m!156987 () Bool)

(assert (=> bs!5504 m!156987))

(assert (=> bs!5504 m!156987))

(declare-fun m!156989 () Bool)

(assert (=> bs!5504 m!156989))

(assert (=> b!132896 d!40449))

(declare-fun d!40451 () Bool)

(assert (=> d!40451 (= (apply!116 (+!175 lt!69450 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))) lt!69463) (apply!116 lt!69450 lt!69463))))

(declare-fun lt!69608 () Unit!4135)

(assert (=> d!40451 (= lt!69608 (choose!822 lt!69450 lt!69465 (minValue!2720 newMap!16) lt!69463))))

(declare-fun e!86776 () Bool)

(assert (=> d!40451 e!86776))

(declare-fun res!64110 () Bool)

(assert (=> d!40451 (=> (not res!64110) (not e!86776))))

(assert (=> d!40451 (= res!64110 (contains!899 lt!69450 lt!69463))))

(assert (=> d!40451 (= (addApplyDifferent!92 lt!69450 lt!69465 (minValue!2720 newMap!16) lt!69463) lt!69608)))

(declare-fun b!133153 () Bool)

(assert (=> b!133153 (= e!86776 (not (= lt!69463 lt!69465)))))

(assert (= (and d!40451 res!64110) b!133153))

(declare-fun m!156991 () Bool)

(assert (=> d!40451 m!156991))

(assert (=> d!40451 m!156525))

(assert (=> d!40451 m!156541))

(assert (=> d!40451 m!156525))

(assert (=> d!40451 m!156543))

(declare-fun m!156993 () Bool)

(assert (=> d!40451 m!156993))

(assert (=> b!132896 d!40451))

(declare-fun b!133154 () Bool)

(declare-fun e!86778 () Bool)

(declare-fun e!86781 () Bool)

(assert (=> b!133154 (= e!86778 e!86781)))

(declare-fun c!24642 () Bool)

(declare-fun e!86783 () Bool)

(assert (=> b!133154 (= c!24642 e!86783)))

(declare-fun res!64114 () Bool)

(assert (=> b!133154 (=> (not res!64114) (not e!86783))))

(assert (=> b!133154 (= res!64114 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133155 () Bool)

(declare-fun e!86782 () Bool)

(declare-fun lt!69614 () ListLongMap!1707)

(assert (=> b!133155 (= e!86782 (isEmpty!410 lt!69614))))

(declare-fun b!133156 () Bool)

(declare-fun lt!69610 () Unit!4135)

(declare-fun lt!69611 () Unit!4135)

(assert (=> b!133156 (= lt!69610 lt!69611)))

(declare-fun lt!69609 () V!3483)

(declare-fun lt!69612 () (_ BitVec 64))

(declare-fun lt!69613 () ListLongMap!1707)

(declare-fun lt!69615 () (_ BitVec 64))

(assert (=> b!133156 (not (contains!899 (+!175 lt!69613 (tuple2!2627 lt!69612 lt!69609)) lt!69615))))

(assert (=> b!133156 (= lt!69611 (addStillNotContains!61 lt!69613 lt!69612 lt!69609 lt!69615))))

(assert (=> b!133156 (= lt!69615 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133156 (= lt!69609 (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133156 (= lt!69612 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!14687 () ListLongMap!1707)

(assert (=> b!133156 (= lt!69613 call!14687)))

(declare-fun e!86780 () ListLongMap!1707)

(assert (=> b!133156 (= e!86780 (+!175 call!14687 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133157 () Bool)

(assert (=> b!133157 (= e!86781 e!86782)))

(declare-fun c!24645 () Bool)

(assert (=> b!133157 (= c!24645 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133158 () Bool)

(assert (=> b!133158 (= e!86783 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133158 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!133159 () Bool)

(declare-fun res!64112 () Bool)

(assert (=> b!133159 (=> (not res!64112) (not e!86778))))

(assert (=> b!133159 (= res!64112 (not (contains!899 lt!69614 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133160 () Bool)

(assert (=> b!133160 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> b!133160 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))))))))

(declare-fun e!86777 () Bool)

(assert (=> b!133160 (= e!86777 (= (apply!116 lt!69614 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!40453 () Bool)

(assert (=> d!40453 e!86778))

(declare-fun res!64113 () Bool)

(assert (=> d!40453 (=> (not res!64113) (not e!86778))))

(assert (=> d!40453 (= res!64113 (not (contains!899 lt!69614 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!86779 () ListLongMap!1707)

(assert (=> d!40453 (= lt!69614 e!86779)))

(declare-fun c!24643 () Bool)

(assert (=> d!40453 (= c!24643 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!40453 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40453 (= (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69614)))

(declare-fun b!133161 () Bool)

(assert (=> b!133161 (= e!86780 call!14687)))

(declare-fun bm!14684 () Bool)

(assert (=> bm!14684 (= call!14687 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!133162 () Bool)

(assert (=> b!133162 (= e!86781 e!86777)))

(assert (=> b!133162 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64111 () Bool)

(assert (=> b!133162 (= res!64111 (contains!899 lt!69614 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133162 (=> (not res!64111) (not e!86777))))

(declare-fun b!133163 () Bool)

(assert (=> b!133163 (= e!86779 (ListLongMap!1708 Nil!1713))))

(declare-fun b!133164 () Bool)

(assert (=> b!133164 (= e!86782 (= lt!69614 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!133165 () Bool)

(assert (=> b!133165 (= e!86779 e!86780)))

(declare-fun c!24644 () Bool)

(assert (=> b!133165 (= c!24644 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!40453 c!24643) b!133163))

(assert (= (and d!40453 (not c!24643)) b!133165))

(assert (= (and b!133165 c!24644) b!133156))

(assert (= (and b!133165 (not c!24644)) b!133161))

(assert (= (or b!133156 b!133161) bm!14684))

(assert (= (and d!40453 res!64113) b!133159))

(assert (= (and b!133159 res!64112) b!133154))

(assert (= (and b!133154 res!64114) b!133158))

(assert (= (and b!133154 c!24642) b!133162))

(assert (= (and b!133154 (not c!24642)) b!133157))

(assert (= (and b!133162 res!64111) b!133160))

(assert (= (and b!133157 c!24645) b!133164))

(assert (= (and b!133157 (not c!24645)) b!133155))

(declare-fun b_lambda!5923 () Bool)

(assert (=> (not b_lambda!5923) (not b!133156)))

(assert (=> b!133156 t!6176))

(declare-fun b_and!8243 () Bool)

(assert (= b_and!8239 (and (=> t!6176 result!3997) b_and!8243)))

(assert (=> b!133156 t!6178))

(declare-fun b_and!8245 () Bool)

(assert (= b_and!8241 (and (=> t!6178 result!3999) b_and!8245)))

(declare-fun b_lambda!5925 () Bool)

(assert (=> (not b_lambda!5925) (not b!133160)))

(assert (=> b!133160 t!6176))

(declare-fun b_and!8247 () Bool)

(assert (= b_and!8243 (and (=> t!6176 result!3997) b_and!8247)))

(assert (=> b!133160 t!6178))

(declare-fun b_and!8249 () Bool)

(assert (= b_and!8245 (and (=> t!6178 result!3999) b_and!8249)))

(declare-fun m!156995 () Bool)

(assert (=> b!133155 m!156995))

(declare-fun m!156997 () Bool)

(assert (=> d!40453 m!156997))

(assert (=> d!40453 m!156157))

(declare-fun m!156999 () Bool)

(assert (=> b!133159 m!156999))

(assert (=> b!133165 m!156163))

(assert (=> b!133165 m!156163))

(assert (=> b!133165 m!156165))

(assert (=> b!133158 m!156163))

(assert (=> b!133158 m!156163))

(assert (=> b!133158 m!156165))

(assert (=> b!133160 m!156175))

(assert (=> b!133160 m!156515))

(assert (=> b!133160 m!156175))

(assert (=> b!133160 m!156517))

(assert (=> b!133160 m!156515))

(assert (=> b!133160 m!156163))

(declare-fun m!157001 () Bool)

(assert (=> b!133160 m!157001))

(assert (=> b!133160 m!156163))

(assert (=> b!133162 m!156163))

(assert (=> b!133162 m!156163))

(declare-fun m!157003 () Bool)

(assert (=> b!133162 m!157003))

(declare-fun m!157005 () Bool)

(assert (=> b!133164 m!157005))

(assert (=> bm!14684 m!157005))

(assert (=> b!133156 m!156175))

(assert (=> b!133156 m!156515))

(assert (=> b!133156 m!156175))

(assert (=> b!133156 m!156517))

(declare-fun m!157007 () Bool)

(assert (=> b!133156 m!157007))

(declare-fun m!157009 () Bool)

(assert (=> b!133156 m!157009))

(assert (=> b!133156 m!156515))

(declare-fun m!157011 () Bool)

(assert (=> b!133156 m!157011))

(assert (=> b!133156 m!156163))

(assert (=> b!133156 m!157009))

(declare-fun m!157013 () Bool)

(assert (=> b!133156 m!157013))

(assert (=> b!132896 d!40453))

(declare-fun d!40455 () Bool)

(assert (=> d!40455 (= (apply!116 (+!175 lt!69448 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))) lt!69467) (apply!116 lt!69448 lt!69467))))

(declare-fun lt!69616 () Unit!4135)

(assert (=> d!40455 (= lt!69616 (choose!822 lt!69448 lt!69451 (minValue!2720 newMap!16) lt!69467))))

(declare-fun e!86784 () Bool)

(assert (=> d!40455 e!86784))

(declare-fun res!64115 () Bool)

(assert (=> d!40455 (=> (not res!64115) (not e!86784))))

(assert (=> d!40455 (= res!64115 (contains!899 lt!69448 lt!69467))))

(assert (=> d!40455 (= (addApplyDifferent!92 lt!69448 lt!69451 (minValue!2720 newMap!16) lt!69467) lt!69616)))

(declare-fun b!133166 () Bool)

(assert (=> b!133166 (= e!86784 (not (= lt!69467 lt!69451)))))

(assert (= (and d!40455 res!64115) b!133166))

(declare-fun m!157015 () Bool)

(assert (=> d!40455 m!157015))

(assert (=> d!40455 m!156537))

(assert (=> d!40455 m!156535))

(assert (=> d!40455 m!156537))

(assert (=> d!40455 m!156545))

(declare-fun m!157017 () Bool)

(assert (=> d!40455 m!157017))

(assert (=> b!132896 d!40455))

(declare-fun d!40457 () Bool)

(assert (=> d!40457 (= (apply!116 (+!175 lt!69448 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))) lt!69467) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69448 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))) lt!69467)))))

(declare-fun bs!5505 () Bool)

(assert (= bs!5505 d!40457))

(declare-fun m!157019 () Bool)

(assert (=> bs!5505 m!157019))

(assert (=> bs!5505 m!157019))

(declare-fun m!157021 () Bool)

(assert (=> bs!5505 m!157021))

(assert (=> b!132896 d!40457))

(declare-fun d!40459 () Bool)

(declare-fun e!86785 () Bool)

(assert (=> d!40459 e!86785))

(declare-fun res!64116 () Bool)

(assert (=> d!40459 (=> res!64116 e!86785)))

(declare-fun lt!69620 () Bool)

(assert (=> d!40459 (= res!64116 (not lt!69620))))

(declare-fun lt!69617 () Bool)

(assert (=> d!40459 (= lt!69620 lt!69617)))

(declare-fun lt!69619 () Unit!4135)

(declare-fun e!86786 () Unit!4135)

(assert (=> d!40459 (= lt!69619 e!86786)))

(declare-fun c!24646 () Bool)

(assert (=> d!40459 (= c!24646 lt!69617)))

(assert (=> d!40459 (= lt!69617 (containsKey!176 (toList!869 lt!69209) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!40459 (= (contains!899 lt!69209 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!69620)))

(declare-fun b!133167 () Bool)

(declare-fun lt!69618 () Unit!4135)

(assert (=> b!133167 (= e!86786 lt!69618)))

(assert (=> b!133167 (= lt!69618 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69209) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> b!133167 (isDefined!125 (getValueByKey!172 (toList!869 lt!69209) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!133168 () Bool)

(declare-fun Unit!4164 () Unit!4135)

(assert (=> b!133168 (= e!86786 Unit!4164)))

(declare-fun b!133169 () Bool)

(assert (=> b!133169 (= e!86785 (isDefined!125 (getValueByKey!172 (toList!869 lt!69209) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!40459 c!24646) b!133167))

(assert (= (and d!40459 (not c!24646)) b!133168))

(assert (= (and d!40459 (not res!64116)) b!133169))

(declare-fun m!157023 () Bool)

(assert (=> d!40459 m!157023))

(declare-fun m!157025 () Bool)

(assert (=> b!133167 m!157025))

(assert (=> b!133167 m!156103))

(assert (=> b!133167 m!156103))

(declare-fun m!157027 () Bool)

(assert (=> b!133167 m!157027))

(assert (=> b!133169 m!156103))

(assert (=> b!133169 m!156103))

(assert (=> b!133169 m!157027))

(assert (=> d!40199 d!40459))

(declare-fun e!86788 () Option!178)

(declare-fun b!133172 () Bool)

(assert (=> b!133172 (= e!86788 (getValueByKey!172 (t!6167 lt!69211) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!133173 () Bool)

(assert (=> b!133173 (= e!86788 None!176)))

(declare-fun c!24647 () Bool)

(declare-fun d!40461 () Bool)

(assert (=> d!40461 (= c!24647 (and ((_ is Cons!1712) lt!69211) (= (_1!1324 (h!2317 lt!69211)) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun e!86787 () Option!178)

(assert (=> d!40461 (= (getValueByKey!172 lt!69211 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) e!86787)))

(declare-fun b!133170 () Bool)

(assert (=> b!133170 (= e!86787 (Some!177 (_2!1324 (h!2317 lt!69211))))))

(declare-fun b!133171 () Bool)

(assert (=> b!133171 (= e!86787 e!86788)))

(declare-fun c!24648 () Bool)

(assert (=> b!133171 (= c!24648 (and ((_ is Cons!1712) lt!69211) (not (= (_1!1324 (h!2317 lt!69211)) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))))

(assert (= (and d!40461 c!24647) b!133170))

(assert (= (and d!40461 (not c!24647)) b!133171))

(assert (= (and b!133171 c!24648) b!133172))

(assert (= (and b!133171 (not c!24648)) b!133173))

(declare-fun m!157029 () Bool)

(assert (=> b!133172 m!157029))

(assert (=> d!40199 d!40461))

(declare-fun d!40463 () Bool)

(assert (=> d!40463 (= (getValueByKey!172 lt!69211 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) (Some!177 (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun lt!69621 () Unit!4135)

(assert (=> d!40463 (= lt!69621 (choose!827 lt!69211 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!86789 () Bool)

(assert (=> d!40463 e!86789))

(declare-fun res!64117 () Bool)

(assert (=> d!40463 (=> (not res!64117) (not e!86789))))

(assert (=> d!40463 (= res!64117 (isStrictlySorted!322 lt!69211))))

(assert (=> d!40463 (= (lemmaContainsTupThenGetReturnValue!87 lt!69211 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!69621)))

(declare-fun b!133174 () Bool)

(declare-fun res!64118 () Bool)

(assert (=> b!133174 (=> (not res!64118) (not e!86789))))

(assert (=> b!133174 (= res!64118 (containsKey!176 lt!69211 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!133175 () Bool)

(assert (=> b!133175 (= e!86789 (contains!902 lt!69211 (tuple2!2627 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!40463 res!64117) b!133174))

(assert (= (and b!133174 res!64118) b!133175))

(assert (=> d!40463 m!156097))

(declare-fun m!157031 () Bool)

(assert (=> d!40463 m!157031))

(declare-fun m!157033 () Bool)

(assert (=> d!40463 m!157033))

(declare-fun m!157035 () Bool)

(assert (=> b!133174 m!157035))

(declare-fun m!157037 () Bool)

(assert (=> b!133175 m!157037))

(assert (=> d!40199 d!40463))

(declare-fun bm!14685 () Bool)

(declare-fun call!14689 () List!1716)

(declare-fun call!14690 () List!1716)

(assert (=> bm!14685 (= call!14689 call!14690)))

(declare-fun d!40465 () Bool)

(declare-fun e!86793 () Bool)

(assert (=> d!40465 e!86793))

(declare-fun res!64120 () Bool)

(assert (=> d!40465 (=> (not res!64120) (not e!86793))))

(declare-fun lt!69622 () List!1716)

(assert (=> d!40465 (= res!64120 (isStrictlySorted!322 lt!69622))))

(declare-fun e!86791 () List!1716)

(assert (=> d!40465 (= lt!69622 e!86791)))

(declare-fun c!24652 () Bool)

(assert (=> d!40465 (= c!24652 (and ((_ is Cons!1712) (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))) (bvslt (_1!1324 (h!2317 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (=> d!40465 (isStrictlySorted!322 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))))))

(assert (=> d!40465 (= (insertStrictlySorted!90 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!69622)))

(declare-fun b!133176 () Bool)

(assert (=> b!133176 (= e!86793 (contains!902 lt!69622 (tuple2!2627 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun c!24650 () Bool)

(declare-fun b!133177 () Bool)

(assert (=> b!133177 (= c!24650 (and ((_ is Cons!1712) (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))) (bvsgt (_1!1324 (h!2317 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun e!86792 () List!1716)

(declare-fun e!86794 () List!1716)

(assert (=> b!133177 (= e!86792 e!86794)))

(declare-fun b!133178 () Bool)

(declare-fun e!86790 () List!1716)

(assert (=> b!133178 (= e!86790 (insertStrictlySorted!90 (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!133179 () Bool)

(assert (=> b!133179 (= e!86792 call!14689)))

(declare-fun b!133180 () Bool)

(declare-fun call!14688 () List!1716)

(assert (=> b!133180 (= e!86794 call!14688)))

(declare-fun c!24649 () Bool)

(declare-fun b!133181 () Bool)

(assert (=> b!133181 (= e!86790 (ite c!24649 (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))) (ite c!24650 (Cons!1712 (h!2317 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))) (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))))) Nil!1713)))))

(declare-fun b!133182 () Bool)

(assert (=> b!133182 (= e!86794 call!14688)))

(declare-fun b!133183 () Bool)

(assert (=> b!133183 (= e!86791 call!14690)))

(declare-fun bm!14686 () Bool)

(assert (=> bm!14686 (= call!14690 ($colon$colon!92 e!86790 (ite c!24652 (h!2317 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))) (tuple2!2627 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))))

(declare-fun c!24651 () Bool)

(assert (=> bm!14686 (= c!24651 c!24652)))

(declare-fun bm!14687 () Bool)

(assert (=> bm!14687 (= call!14688 call!14689)))

(declare-fun b!133184 () Bool)

(declare-fun res!64119 () Bool)

(assert (=> b!133184 (=> (not res!64119) (not e!86793))))

(assert (=> b!133184 (= res!64119 (containsKey!176 lt!69622 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!133185 () Bool)

(assert (=> b!133185 (= e!86791 e!86792)))

(assert (=> b!133185 (= c!24649 (and ((_ is Cons!1712) (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))) (= (_1!1324 (h!2317 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!40465 c!24652) b!133183))

(assert (= (and d!40465 (not c!24652)) b!133185))

(assert (= (and b!133185 c!24649) b!133179))

(assert (= (and b!133185 (not c!24649)) b!133177))

(assert (= (and b!133177 c!24650) b!133180))

(assert (= (and b!133177 (not c!24650)) b!133182))

(assert (= (or b!133180 b!133182) bm!14687))

(assert (= (or b!133179 bm!14687) bm!14685))

(assert (= (or b!133183 bm!14685) bm!14686))

(assert (= (and bm!14686 c!24651) b!133178))

(assert (= (and bm!14686 (not c!24651)) b!133181))

(assert (= (and d!40465 res!64120) b!133184))

(assert (= (and b!133184 res!64119) b!133176))

(declare-fun m!157039 () Bool)

(assert (=> d!40465 m!157039))

(declare-fun m!157041 () Bool)

(assert (=> d!40465 m!157041))

(declare-fun m!157043 () Bool)

(assert (=> bm!14686 m!157043))

(declare-fun m!157045 () Bool)

(assert (=> b!133178 m!157045))

(declare-fun m!157047 () Bool)

(assert (=> b!133176 m!157047))

(declare-fun m!157049 () Bool)

(assert (=> b!133184 m!157049))

(assert (=> d!40199 d!40465))

(assert (=> d!40225 d!40289))

(declare-fun d!40467 () Bool)

(declare-fun e!86797 () Bool)

(assert (=> d!40467 e!86797))

(declare-fun res!64125 () Bool)

(assert (=> d!40467 (=> (not res!64125) (not e!86797))))

(declare-fun lt!69625 () SeekEntryResult!275)

(assert (=> d!40467 (= res!64125 ((_ is Found!275) lt!69625))))

(assert (=> d!40467 (= lt!69625 (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (=> d!40467 true))

(declare-fun _$33!114 () Unit!4135)

(assert (=> d!40467 (= (choose!818 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)) _$33!114)))

(declare-fun b!133190 () Bool)

(declare-fun res!64126 () Bool)

(assert (=> b!133190 (=> (not res!64126) (not e!86797))))

(assert (=> b!133190 (= res!64126 (inRange!0 (index!3261 lt!69625) (mask!7165 newMap!16)))))

(declare-fun b!133191 () Bool)

(assert (=> b!133191 (= e!86797 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69625)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (= (and d!40467 res!64125) b!133190))

(assert (= (and b!133190 res!64126) b!133191))

(assert (=> d!40467 m!155869))

(assert (=> d!40467 m!156037))

(declare-fun m!157051 () Bool)

(assert (=> b!133190 m!157051))

(declare-fun m!157053 () Bool)

(assert (=> b!133191 m!157053))

(assert (=> d!40225 d!40467))

(assert (=> d!40225 d!40325))

(declare-fun d!40469 () Bool)

(assert (=> d!40469 (= (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69098)) (v!3203 (getValueByKey!172 (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69098)))))

(assert (=> d!40249 d!40469))

(declare-fun e!86799 () Option!178)

(declare-fun b!133194 () Bool)

(assert (=> b!133194 (= e!86799 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!69098))))

(declare-fun b!133195 () Bool)

(assert (=> b!133195 (= e!86799 None!176)))

(declare-fun c!24653 () Bool)

(declare-fun d!40471 () Bool)

(assert (=> d!40471 (= c!24653 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69098)))))

(declare-fun e!86798 () Option!178)

(assert (=> d!40471 (= (getValueByKey!172 (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69098) e!86798)))

(declare-fun b!133192 () Bool)

(assert (=> b!133192 (= e!86798 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))))

(declare-fun b!133193 () Bool)

(assert (=> b!133193 (= e!86798 e!86799)))

(declare-fun c!24654 () Bool)

(assert (=> b!133193 (= c!24654 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69098))))))

(assert (= (and d!40471 c!24653) b!133192))

(assert (= (and d!40471 (not c!24653)) b!133193))

(assert (= (and b!133193 c!24654) b!133194))

(assert (= (and b!133193 (not c!24654)) b!133195))

(declare-fun m!157055 () Bool)

(assert (=> b!133194 m!157055))

(assert (=> d!40249 d!40471))

(declare-fun d!40473 () Bool)

(declare-fun e!86800 () Bool)

(assert (=> d!40473 e!86800))

(declare-fun res!64127 () Bool)

(assert (=> d!40473 (=> res!64127 e!86800)))

(declare-fun lt!69629 () Bool)

(assert (=> d!40473 (= res!64127 (not lt!69629))))

(declare-fun lt!69626 () Bool)

(assert (=> d!40473 (= lt!69629 lt!69626)))

(declare-fun lt!69628 () Unit!4135)

(declare-fun e!86801 () Unit!4135)

(assert (=> d!40473 (= lt!69628 e!86801)))

(declare-fun c!24655 () Bool)

(assert (=> d!40473 (= c!24655 lt!69626)))

(assert (=> d!40473 (= lt!69626 (containsKey!176 (toList!869 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40473 (= (contains!899 lt!69486 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69629)))

(declare-fun b!133196 () Bool)

(declare-fun lt!69627 () Unit!4135)

(assert (=> b!133196 (= e!86801 lt!69627)))

(assert (=> b!133196 (= lt!69627 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133196 (isDefined!125 (getValueByKey!172 (toList!869 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133197 () Bool)

(declare-fun Unit!4165 () Unit!4135)

(assert (=> b!133197 (= e!86801 Unit!4165)))

(declare-fun b!133198 () Bool)

(assert (=> b!133198 (= e!86800 (isDefined!125 (getValueByKey!172 (toList!869 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40473 c!24655) b!133196))

(assert (= (and d!40473 (not c!24655)) b!133197))

(assert (= (and d!40473 (not res!64127)) b!133198))

(declare-fun m!157057 () Bool)

(assert (=> d!40473 m!157057))

(declare-fun m!157059 () Bool)

(assert (=> b!133196 m!157059))

(declare-fun m!157061 () Bool)

(assert (=> b!133196 m!157061))

(assert (=> b!133196 m!157061))

(declare-fun m!157063 () Bool)

(assert (=> b!133196 m!157063))

(assert (=> b!133198 m!157061))

(assert (=> b!133198 m!157061))

(assert (=> b!133198 m!157063))

(assert (=> bm!14661 d!40473))

(assert (=> d!40295 d!40289))

(declare-fun b!133215 () Bool)

(declare-fun e!86810 () Bool)

(declare-fun call!14695 () Bool)

(assert (=> b!133215 (= e!86810 (not call!14695))))

(declare-fun b!133216 () Bool)

(declare-fun res!64136 () Bool)

(declare-fun lt!69632 () SeekEntryResult!275)

(assert (=> b!133216 (= res!64136 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3260 lt!69632)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133216 (=> (not res!64136) (not e!86810))))

(declare-fun d!40475 () Bool)

(declare-fun e!86813 () Bool)

(assert (=> d!40475 e!86813))

(declare-fun c!24660 () Bool)

(assert (=> d!40475 (= c!24660 ((_ is MissingZero!275) lt!69632))))

(assert (=> d!40475 (= lt!69632 (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (=> d!40475 true))

(declare-fun _$34!974 () Unit!4135)

(assert (=> d!40475 (= (choose!825 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (defaultEntry!2865 newMap!16)) _$34!974)))

(declare-fun b!133217 () Bool)

(declare-fun res!64139 () Bool)

(declare-fun e!86812 () Bool)

(assert (=> b!133217 (=> (not res!64139) (not e!86812))))

(assert (=> b!133217 (= res!64139 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3263 lt!69632)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133218 () Bool)

(assert (=> b!133218 (= e!86812 (not call!14695))))

(declare-fun b!133219 () Bool)

(assert (=> b!133219 (= e!86813 e!86810)))

(declare-fun res!64137 () Bool)

(declare-fun call!14696 () Bool)

(assert (=> b!133219 (= res!64137 call!14696)))

(assert (=> b!133219 (=> (not res!64137) (not e!86810))))

(declare-fun b!133220 () Bool)

(declare-fun e!86811 () Bool)

(assert (=> b!133220 (= e!86811 ((_ is Undefined!275) lt!69632))))

(declare-fun bm!14692 () Bool)

(assert (=> bm!14692 (= call!14696 (inRange!0 (ite c!24660 (index!3260 lt!69632) (index!3263 lt!69632)) (mask!7165 newMap!16)))))

(declare-fun bm!14693 () Bool)

(assert (=> bm!14693 (= call!14695 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!133221 () Bool)

(assert (=> b!133221 (= e!86813 e!86811)))

(declare-fun c!24661 () Bool)

(assert (=> b!133221 (= c!24661 ((_ is MissingVacant!275) lt!69632))))

(declare-fun b!133222 () Bool)

(declare-fun res!64138 () Bool)

(assert (=> b!133222 (=> (not res!64138) (not e!86812))))

(assert (=> b!133222 (= res!64138 call!14696)))

(assert (=> b!133222 (= e!86811 e!86812)))

(assert (= (and d!40475 c!24660) b!133219))

(assert (= (and d!40475 (not c!24660)) b!133221))

(assert (= (and b!133219 res!64137) b!133216))

(assert (= (and b!133216 res!64136) b!133215))

(assert (= (and b!133221 c!24661) b!133222))

(assert (= (and b!133221 (not c!24661)) b!133220))

(assert (= (and b!133222 res!64138) b!133217))

(assert (= (and b!133217 res!64139) b!133218))

(assert (= (or b!133219 b!133222) bm!14692))

(assert (= (or b!133215 b!133218) bm!14693))

(declare-fun m!157065 () Bool)

(assert (=> bm!14692 m!157065))

(assert (=> bm!14693 m!155869))

(assert (=> bm!14693 m!156065))

(declare-fun m!157067 () Bool)

(assert (=> b!133216 m!157067))

(assert (=> d!40475 m!155869))

(assert (=> d!40475 m!156037))

(declare-fun m!157069 () Bool)

(assert (=> b!133217 m!157069))

(assert (=> d!40295 d!40475))

(assert (=> d!40295 d!40325))

(declare-fun lt!69633 () Bool)

(declare-fun d!40477 () Bool)

(assert (=> d!40477 (= lt!69633 (select (content!133 (toList!869 lt!69385)) (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun e!86815 () Bool)

(assert (=> d!40477 (= lt!69633 e!86815)))

(declare-fun res!64140 () Bool)

(assert (=> d!40477 (=> (not res!64140) (not e!86815))))

(assert (=> d!40477 (= res!64140 ((_ is Cons!1712) (toList!869 lt!69385)))))

(assert (=> d!40477 (= (contains!902 (toList!869 lt!69385) (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69633)))

(declare-fun b!133223 () Bool)

(declare-fun e!86814 () Bool)

(assert (=> b!133223 (= e!86815 e!86814)))

(declare-fun res!64141 () Bool)

(assert (=> b!133223 (=> res!64141 e!86814)))

(assert (=> b!133223 (= res!64141 (= (h!2317 (toList!869 lt!69385)) (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133224 () Bool)

(assert (=> b!133224 (= e!86814 (contains!902 (t!6167 (toList!869 lt!69385)) (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!40477 res!64140) b!133223))

(assert (= (and b!133223 (not res!64141)) b!133224))

(declare-fun m!157071 () Bool)

(assert (=> d!40477 m!157071))

(declare-fun m!157073 () Bool)

(assert (=> d!40477 m!157073))

(declare-fun m!157075 () Bool)

(assert (=> b!133224 m!157075))

(assert (=> b!132805 d!40477))

(declare-fun d!40479 () Bool)

(assert (=> d!40479 (= (apply!116 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69094) (apply!116 lt!69081 lt!69094))))

(assert (=> d!40479 true))

(declare-fun _$34!975 () Unit!4135)

(assert (=> d!40479 (= (choose!822 lt!69081 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69094) _$34!975)))

(declare-fun bs!5506 () Bool)

(assert (= bs!5506 d!40479))

(assert (=> bs!5506 m!155959))

(assert (=> bs!5506 m!155959))

(assert (=> bs!5506 m!155977))

(assert (=> bs!5506 m!155975))

(assert (=> d!40275 d!40479))

(declare-fun d!40481 () Bool)

(declare-fun e!86816 () Bool)

(assert (=> d!40481 e!86816))

(declare-fun res!64142 () Bool)

(assert (=> d!40481 (=> res!64142 e!86816)))

(declare-fun lt!69637 () Bool)

(assert (=> d!40481 (= res!64142 (not lt!69637))))

(declare-fun lt!69634 () Bool)

(assert (=> d!40481 (= lt!69637 lt!69634)))

(declare-fun lt!69636 () Unit!4135)

(declare-fun e!86817 () Unit!4135)

(assert (=> d!40481 (= lt!69636 e!86817)))

(declare-fun c!24662 () Bool)

(assert (=> d!40481 (= c!24662 lt!69634)))

(assert (=> d!40481 (= lt!69634 (containsKey!176 (toList!869 lt!69081) lt!69094))))

(assert (=> d!40481 (= (contains!899 lt!69081 lt!69094) lt!69637)))

(declare-fun b!133225 () Bool)

(declare-fun lt!69635 () Unit!4135)

(assert (=> b!133225 (= e!86817 lt!69635)))

(assert (=> b!133225 (= lt!69635 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69081) lt!69094))))

(assert (=> b!133225 (isDefined!125 (getValueByKey!172 (toList!869 lt!69081) lt!69094))))

(declare-fun b!133226 () Bool)

(declare-fun Unit!4166 () Unit!4135)

(assert (=> b!133226 (= e!86817 Unit!4166)))

(declare-fun b!133227 () Bool)

(assert (=> b!133227 (= e!86816 (isDefined!125 (getValueByKey!172 (toList!869 lt!69081) lt!69094)))))

(assert (= (and d!40481 c!24662) b!133225))

(assert (= (and d!40481 (not c!24662)) b!133226))

(assert (= (and d!40481 (not res!64142)) b!133227))

(declare-fun m!157077 () Bool)

(assert (=> d!40481 m!157077))

(declare-fun m!157079 () Bool)

(assert (=> b!133225 m!157079))

(assert (=> b!133225 m!156407))

(assert (=> b!133225 m!156407))

(declare-fun m!157081 () Bool)

(assert (=> b!133225 m!157081))

(assert (=> b!133227 m!156407))

(assert (=> b!133227 m!156407))

(assert (=> b!133227 m!157081))

(assert (=> d!40275 d!40481))

(assert (=> d!40275 d!40257))

(assert (=> d!40275 d!40271))

(assert (=> d!40275 d!40273))

(declare-fun d!40483 () Bool)

(declare-fun e!86818 () Bool)

(assert (=> d!40483 e!86818))

(declare-fun res!64144 () Bool)

(assert (=> d!40483 (=> (not res!64144) (not e!86818))))

(declare-fun lt!69638 () ListLongMap!1707)

(assert (=> d!40483 (= res!64144 (contains!899 lt!69638 (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun lt!69640 () List!1716)

(assert (=> d!40483 (= lt!69638 (ListLongMap!1708 lt!69640))))

(declare-fun lt!69641 () Unit!4135)

(declare-fun lt!69639 () Unit!4135)

(assert (=> d!40483 (= lt!69641 lt!69639)))

(assert (=> d!40483 (= (getValueByKey!172 lt!69640 (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) (Some!177 (_2!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!40483 (= lt!69639 (lemmaContainsTupThenGetReturnValue!87 lt!69640 (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!40483 (= lt!69640 (insertStrictlySorted!90 (toList!869 lt!69475) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!40483 (= (+!175 lt!69475 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69638)))

(declare-fun b!133228 () Bool)

(declare-fun res!64143 () Bool)

(assert (=> b!133228 (=> (not res!64143) (not e!86818))))

(assert (=> b!133228 (= res!64143 (= (getValueByKey!172 (toList!869 lt!69638) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) (Some!177 (_2!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun b!133229 () Bool)

(assert (=> b!133229 (= e!86818 (contains!902 (toList!869 lt!69638) (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(assert (= (and d!40483 res!64144) b!133228))

(assert (= (and b!133228 res!64143) b!133229))

(declare-fun m!157083 () Bool)

(assert (=> d!40483 m!157083))

(declare-fun m!157085 () Bool)

(assert (=> d!40483 m!157085))

(declare-fun m!157087 () Bool)

(assert (=> d!40483 m!157087))

(declare-fun m!157089 () Bool)

(assert (=> d!40483 m!157089))

(declare-fun m!157091 () Bool)

(assert (=> b!133228 m!157091))

(declare-fun m!157093 () Bool)

(assert (=> b!133229 m!157093))

(assert (=> b!132929 d!40483))

(declare-fun d!40485 () Bool)

(declare-fun e!86819 () Bool)

(assert (=> d!40485 e!86819))

(declare-fun res!64146 () Bool)

(assert (=> d!40485 (=> (not res!64146) (not e!86819))))

(declare-fun lt!69642 () ListLongMap!1707)

(assert (=> d!40485 (= res!64146 (contains!899 lt!69642 (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun lt!69644 () List!1716)

(assert (=> d!40485 (= lt!69642 (ListLongMap!1708 lt!69644))))

(declare-fun lt!69645 () Unit!4135)

(declare-fun lt!69643 () Unit!4135)

(assert (=> d!40485 (= lt!69645 lt!69643)))

(assert (=> d!40485 (= (getValueByKey!172 lt!69644 (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40485 (= lt!69643 (lemmaContainsTupThenGetReturnValue!87 lt!69644 (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40485 (= lt!69644 (insertStrictlySorted!90 (toList!869 lt!69472) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40485 (= (+!175 lt!69472 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69642)))

(declare-fun b!133230 () Bool)

(declare-fun res!64145 () Bool)

(assert (=> b!133230 (=> (not res!64145) (not e!86819))))

(assert (=> b!133230 (= res!64145 (= (getValueByKey!172 (toList!869 lt!69642) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!133231 () Bool)

(assert (=> b!133231 (= e!86819 (contains!902 (toList!869 lt!69642) (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(assert (= (and d!40485 res!64146) b!133230))

(assert (= (and b!133230 res!64145) b!133231))

(declare-fun m!157095 () Bool)

(assert (=> d!40485 m!157095))

(declare-fun m!157097 () Bool)

(assert (=> d!40485 m!157097))

(declare-fun m!157099 () Bool)

(assert (=> d!40485 m!157099))

(declare-fun m!157101 () Bool)

(assert (=> d!40485 m!157101))

(declare-fun m!157103 () Bool)

(assert (=> b!133230 m!157103))

(declare-fun m!157105 () Bool)

(assert (=> b!133231 m!157105))

(assert (=> b!132929 d!40485))

(declare-fun d!40487 () Bool)

(assert (=> d!40487 (contains!899 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69483)))

(declare-fun lt!69646 () Unit!4135)

(assert (=> d!40487 (= lt!69646 (choose!823 lt!69484 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69483))))

(assert (=> d!40487 (contains!899 lt!69484 lt!69483)))

(assert (=> d!40487 (= (addStillContains!92 lt!69484 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69483) lt!69646)))

(declare-fun bs!5507 () Bool)

(assert (= bs!5507 d!40487))

(assert (=> bs!5507 m!156581))

(assert (=> bs!5507 m!156581))

(assert (=> bs!5507 m!156605))

(declare-fun m!157107 () Bool)

(assert (=> bs!5507 m!157107))

(declare-fun m!157109 () Bool)

(assert (=> bs!5507 m!157109))

(assert (=> b!132929 d!40487))

(declare-fun d!40489 () Bool)

(assert (=> d!40489 (= (apply!116 (+!175 lt!69472 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69485) (apply!116 lt!69472 lt!69485))))

(declare-fun lt!69647 () Unit!4135)

(assert (=> d!40489 (= lt!69647 (choose!822 lt!69472 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69485))))

(declare-fun e!86820 () Bool)

(assert (=> d!40489 e!86820))

(declare-fun res!64147 () Bool)

(assert (=> d!40489 (=> (not res!64147) (not e!86820))))

(assert (=> d!40489 (= res!64147 (contains!899 lt!69472 lt!69485))))

(assert (=> d!40489 (= (addApplyDifferent!92 lt!69472 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69485) lt!69647)))

(declare-fun b!133232 () Bool)

(assert (=> b!133232 (= e!86820 (not (= lt!69485 lt!69487)))))

(assert (= (and d!40489 res!64147) b!133232))

(declare-fun m!157111 () Bool)

(assert (=> d!40489 m!157111))

(assert (=> d!40489 m!156579))

(assert (=> d!40489 m!156595))

(assert (=> d!40489 m!156579))

(assert (=> d!40489 m!156597))

(declare-fun m!157113 () Bool)

(assert (=> d!40489 m!157113))

(assert (=> b!132929 d!40489))

(declare-fun d!40491 () Bool)

(declare-fun e!86821 () Bool)

(assert (=> d!40491 e!86821))

(declare-fun res!64149 () Bool)

(assert (=> d!40491 (=> (not res!64149) (not e!86821))))

(declare-fun lt!69648 () ListLongMap!1707)

(assert (=> d!40491 (= res!64149 (contains!899 lt!69648 (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun lt!69650 () List!1716)

(assert (=> d!40491 (= lt!69648 (ListLongMap!1708 lt!69650))))

(declare-fun lt!69651 () Unit!4135)

(declare-fun lt!69649 () Unit!4135)

(assert (=> d!40491 (= lt!69651 lt!69649)))

(assert (=> d!40491 (= (getValueByKey!172 lt!69650 (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40491 (= lt!69649 (lemmaContainsTupThenGetReturnValue!87 lt!69650 (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40491 (= lt!69650 (insertStrictlySorted!90 (toList!869 lt!69470) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40491 (= (+!175 lt!69470 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69648)))

(declare-fun b!133233 () Bool)

(declare-fun res!64148 () Bool)

(assert (=> b!133233 (=> (not res!64148) (not e!86821))))

(assert (=> b!133233 (= res!64148 (= (getValueByKey!172 (toList!869 lt!69648) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!133234 () Bool)

(assert (=> b!133234 (= e!86821 (contains!902 (toList!869 lt!69648) (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(assert (= (and d!40491 res!64149) b!133233))

(assert (= (and b!133233 res!64148) b!133234))

(declare-fun m!157115 () Bool)

(assert (=> d!40491 m!157115))

(declare-fun m!157117 () Bool)

(assert (=> d!40491 m!157117))

(declare-fun m!157119 () Bool)

(assert (=> d!40491 m!157119))

(declare-fun m!157121 () Bool)

(assert (=> d!40491 m!157121))

(declare-fun m!157123 () Bool)

(assert (=> b!133233 m!157123))

(declare-fun m!157125 () Bool)

(assert (=> b!133234 m!157125))

(assert (=> b!132929 d!40491))

(declare-fun d!40493 () Bool)

(declare-fun e!86822 () Bool)

(assert (=> d!40493 e!86822))

(declare-fun res!64151 () Bool)

(assert (=> d!40493 (=> (not res!64151) (not e!86822))))

(declare-fun lt!69652 () ListLongMap!1707)

(assert (=> d!40493 (= res!64151 (contains!899 lt!69652 (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun lt!69654 () List!1716)

(assert (=> d!40493 (= lt!69652 (ListLongMap!1708 lt!69654))))

(declare-fun lt!69655 () Unit!4135)

(declare-fun lt!69653 () Unit!4135)

(assert (=> d!40493 (= lt!69655 lt!69653)))

(assert (=> d!40493 (= (getValueByKey!172 lt!69654 (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) (Some!177 (_2!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!40493 (= lt!69653 (lemmaContainsTupThenGetReturnValue!87 lt!69654 (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!40493 (= lt!69654 (insertStrictlySorted!90 (toList!869 lt!69484) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!40493 (= (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69652)))

(declare-fun b!133235 () Bool)

(declare-fun res!64150 () Bool)

(assert (=> b!133235 (=> (not res!64150) (not e!86822))))

(assert (=> b!133235 (= res!64150 (= (getValueByKey!172 (toList!869 lt!69652) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) (Some!177 (_2!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun b!133236 () Bool)

(assert (=> b!133236 (= e!86822 (contains!902 (toList!869 lt!69652) (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(assert (= (and d!40493 res!64151) b!133235))

(assert (= (and b!133235 res!64150) b!133236))

(declare-fun m!157127 () Bool)

(assert (=> d!40493 m!157127))

(declare-fun m!157129 () Bool)

(assert (=> d!40493 m!157129))

(declare-fun m!157131 () Bool)

(assert (=> d!40493 m!157131))

(declare-fun m!157133 () Bool)

(assert (=> d!40493 m!157133))

(declare-fun m!157135 () Bool)

(assert (=> b!133235 m!157135))

(declare-fun m!157137 () Bool)

(assert (=> b!133236 m!157137))

(assert (=> b!132929 d!40493))

(declare-fun d!40495 () Bool)

(declare-fun e!86823 () Bool)

(assert (=> d!40495 e!86823))

(declare-fun res!64152 () Bool)

(assert (=> d!40495 (=> res!64152 e!86823)))

(declare-fun lt!69659 () Bool)

(assert (=> d!40495 (= res!64152 (not lt!69659))))

(declare-fun lt!69656 () Bool)

(assert (=> d!40495 (= lt!69659 lt!69656)))

(declare-fun lt!69658 () Unit!4135)

(declare-fun e!86824 () Unit!4135)

(assert (=> d!40495 (= lt!69658 e!86824)))

(declare-fun c!24663 () Bool)

(assert (=> d!40495 (= c!24663 lt!69656)))

(assert (=> d!40495 (= lt!69656 (containsKey!176 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69483))))

(assert (=> d!40495 (= (contains!899 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69483) lt!69659)))

(declare-fun b!133237 () Bool)

(declare-fun lt!69657 () Unit!4135)

(assert (=> b!133237 (= e!86824 lt!69657)))

(assert (=> b!133237 (= lt!69657 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69483))))

(assert (=> b!133237 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69483))))

(declare-fun b!133238 () Bool)

(declare-fun Unit!4167 () Unit!4135)

(assert (=> b!133238 (= e!86824 Unit!4167)))

(declare-fun b!133239 () Bool)

(assert (=> b!133239 (= e!86823 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69483)))))

(assert (= (and d!40495 c!24663) b!133237))

(assert (= (and d!40495 (not c!24663)) b!133238))

(assert (= (and d!40495 (not res!64152)) b!133239))

(declare-fun m!157139 () Bool)

(assert (=> d!40495 m!157139))

(declare-fun m!157141 () Bool)

(assert (=> b!133237 m!157141))

(declare-fun m!157143 () Bool)

(assert (=> b!133237 m!157143))

(assert (=> b!133237 m!157143))

(declare-fun m!157145 () Bool)

(assert (=> b!133237 m!157145))

(assert (=> b!133239 m!157143))

(assert (=> b!133239 m!157143))

(assert (=> b!133239 m!157145))

(assert (=> b!132929 d!40495))

(declare-fun d!40497 () Bool)

(assert (=> d!40497 (= (apply!116 (+!175 lt!69470 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69489) (apply!116 lt!69470 lt!69489))))

(declare-fun lt!69660 () Unit!4135)

(assert (=> d!40497 (= lt!69660 (choose!822 lt!69470 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69489))))

(declare-fun e!86825 () Bool)

(assert (=> d!40497 e!86825))

(declare-fun res!64153 () Bool)

(assert (=> d!40497 (=> (not res!64153) (not e!86825))))

(assert (=> d!40497 (= res!64153 (contains!899 lt!69470 lt!69489))))

(assert (=> d!40497 (= (addApplyDifferent!92 lt!69470 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69489) lt!69660)))

(declare-fun b!133240 () Bool)

(assert (=> b!133240 (= e!86825 (not (= lt!69489 lt!69473)))))

(assert (= (and d!40497 res!64153) b!133240))

(declare-fun m!157147 () Bool)

(assert (=> d!40497 m!157147))

(assert (=> d!40497 m!156591))

(assert (=> d!40497 m!156589))

(assert (=> d!40497 m!156591))

(assert (=> d!40497 m!156599))

(declare-fun m!157149 () Bool)

(assert (=> d!40497 m!157149))

(assert (=> b!132929 d!40497))

(declare-fun d!40499 () Bool)

(assert (=> d!40499 (= (apply!116 (+!175 lt!69470 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69489) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69470 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69489)))))

(declare-fun bs!5508 () Bool)

(assert (= bs!5508 d!40499))

(declare-fun m!157151 () Bool)

(assert (=> bs!5508 m!157151))

(assert (=> bs!5508 m!157151))

(declare-fun m!157153 () Bool)

(assert (=> bs!5508 m!157153))

(assert (=> b!132929 d!40499))

(declare-fun b!133241 () Bool)

(declare-fun e!86827 () Bool)

(declare-fun e!86830 () Bool)

(assert (=> b!133241 (= e!86827 e!86830)))

(declare-fun c!24664 () Bool)

(declare-fun e!86832 () Bool)

(assert (=> b!133241 (= c!24664 e!86832)))

(declare-fun res!64157 () Bool)

(assert (=> b!133241 (=> (not res!64157) (not e!86832))))

(assert (=> b!133241 (= res!64157 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133242 () Bool)

(declare-fun e!86831 () Bool)

(declare-fun lt!69666 () ListLongMap!1707)

(assert (=> b!133242 (= e!86831 (isEmpty!410 lt!69666))))

(declare-fun b!133243 () Bool)

(declare-fun lt!69662 () Unit!4135)

(declare-fun lt!69663 () Unit!4135)

(assert (=> b!133243 (= lt!69662 lt!69663)))

(declare-fun lt!69667 () (_ BitVec 64))

(declare-fun lt!69661 () V!3483)

(declare-fun lt!69665 () ListLongMap!1707)

(declare-fun lt!69664 () (_ BitVec 64))

(assert (=> b!133243 (not (contains!899 (+!175 lt!69665 (tuple2!2627 lt!69664 lt!69661)) lt!69667))))

(assert (=> b!133243 (= lt!69663 (addStillNotContains!61 lt!69665 lt!69664 lt!69661 lt!69667))))

(assert (=> b!133243 (= lt!69667 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133243 (= lt!69661 (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133243 (= lt!69664 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!14697 () ListLongMap!1707)

(assert (=> b!133243 (= lt!69665 call!14697)))

(declare-fun e!86829 () ListLongMap!1707)

(assert (=> b!133243 (= e!86829 (+!175 call!14697 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133244 () Bool)

(assert (=> b!133244 (= e!86830 e!86831)))

(declare-fun c!24667 () Bool)

(assert (=> b!133244 (= c!24667 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133245 () Bool)

(assert (=> b!133245 (= e!86832 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133245 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!133246 () Bool)

(declare-fun res!64155 () Bool)

(assert (=> b!133246 (=> (not res!64155) (not e!86827))))

(assert (=> b!133246 (= res!64155 (not (contains!899 lt!69666 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133247 () Bool)

(assert (=> b!133247 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> b!133247 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190))))))

(declare-fun e!86826 () Bool)

(assert (=> b!133247 (= e!86826 (= (apply!116 lt!69666 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!40501 () Bool)

(assert (=> d!40501 e!86827))

(declare-fun res!64156 () Bool)

(assert (=> d!40501 (=> (not res!64156) (not e!86827))))

(assert (=> d!40501 (= res!64156 (not (contains!899 lt!69666 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!86828 () ListLongMap!1707)

(assert (=> d!40501 (= lt!69666 e!86828)))

(declare-fun c!24665 () Bool)

(assert (=> d!40501 (= c!24665 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!40501 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40501 (= (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190) (mask!7165 newMap!16) (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69666)))

(declare-fun b!133248 () Bool)

(assert (=> b!133248 (= e!86829 call!14697)))

(declare-fun bm!14694 () Bool)

(assert (=> bm!14694 (= call!14697 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190) (mask!7165 newMap!16) (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!133249 () Bool)

(assert (=> b!133249 (= e!86830 e!86826)))

(assert (=> b!133249 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64154 () Bool)

(assert (=> b!133249 (= res!64154 (contains!899 lt!69666 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133249 (=> (not res!64154) (not e!86826))))

(declare-fun b!133250 () Bool)

(assert (=> b!133250 (= e!86828 (ListLongMap!1708 Nil!1713))))

(declare-fun b!133251 () Bool)

(assert (=> b!133251 (= e!86831 (= lt!69666 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190) (mask!7165 newMap!16) (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!133252 () Bool)

(assert (=> b!133252 (= e!86828 e!86829)))

(declare-fun c!24666 () Bool)

(assert (=> b!133252 (= c!24666 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!40501 c!24665) b!133250))

(assert (= (and d!40501 (not c!24665)) b!133252))

(assert (= (and b!133252 c!24666) b!133243))

(assert (= (and b!133252 (not c!24666)) b!133248))

(assert (= (or b!133243 b!133248) bm!14694))

(assert (= (and d!40501 res!64156) b!133246))

(assert (= (and b!133246 res!64155) b!133241))

(assert (= (and b!133241 res!64157) b!133245))

(assert (= (and b!133241 c!24664) b!133249))

(assert (= (and b!133241 (not c!24664)) b!133244))

(assert (= (and b!133249 res!64154) b!133247))

(assert (= (and b!133244 c!24667) b!133251))

(assert (= (and b!133244 (not c!24667)) b!133242))

(declare-fun b_lambda!5927 () Bool)

(assert (=> (not b_lambda!5927) (not b!133243)))

(assert (=> b!133243 t!6176))

(declare-fun b_and!8251 () Bool)

(assert (= b_and!8247 (and (=> t!6176 result!3997) b_and!8251)))

(assert (=> b!133243 t!6178))

(declare-fun b_and!8253 () Bool)

(assert (= b_and!8249 (and (=> t!6178 result!3999) b_and!8253)))

(declare-fun b_lambda!5929 () Bool)

(assert (=> (not b_lambda!5929) (not b!133247)))

(assert (=> b!133247 t!6176))

(declare-fun b_and!8255 () Bool)

(assert (= b_and!8251 (and (=> t!6176 result!3997) b_and!8255)))

(assert (=> b!133247 t!6178))

(declare-fun b_and!8257 () Bool)

(assert (= b_and!8253 (and (=> t!6178 result!3999) b_and!8257)))

(declare-fun m!157155 () Bool)

(assert (=> b!133242 m!157155))

(declare-fun m!157157 () Bool)

(assert (=> d!40501 m!157157))

(assert (=> d!40501 m!156157))

(declare-fun m!157159 () Bool)

(assert (=> b!133246 m!157159))

(assert (=> b!133252 m!156163))

(assert (=> b!133252 m!156163))

(assert (=> b!133252 m!156165))

(assert (=> b!133245 m!156163))

(assert (=> b!133245 m!156163))

(assert (=> b!133245 m!156165))

(assert (=> b!133247 m!156175))

(assert (=> b!133247 m!156569))

(assert (=> b!133247 m!156175))

(assert (=> b!133247 m!156571))

(assert (=> b!133247 m!156569))

(assert (=> b!133247 m!156163))

(declare-fun m!157161 () Bool)

(assert (=> b!133247 m!157161))

(assert (=> b!133247 m!156163))

(assert (=> b!133249 m!156163))

(assert (=> b!133249 m!156163))

(declare-fun m!157163 () Bool)

(assert (=> b!133249 m!157163))

(declare-fun m!157165 () Bool)

(assert (=> b!133251 m!157165))

(assert (=> bm!14694 m!157165))

(assert (=> b!133243 m!156175))

(assert (=> b!133243 m!156569))

(assert (=> b!133243 m!156175))

(assert (=> b!133243 m!156571))

(declare-fun m!157167 () Bool)

(assert (=> b!133243 m!157167))

(declare-fun m!157169 () Bool)

(assert (=> b!133243 m!157169))

(assert (=> b!133243 m!156569))

(declare-fun m!157171 () Bool)

(assert (=> b!133243 m!157171))

(assert (=> b!133243 m!156163))

(assert (=> b!133243 m!157169))

(declare-fun m!157173 () Bool)

(assert (=> b!133243 m!157173))

(assert (=> b!132929 d!40501))

(declare-fun d!40503 () Bool)

(assert (=> d!40503 (= (apply!116 lt!69470 lt!69489) (get!1486 (getValueByKey!172 (toList!869 lt!69470) lt!69489)))))

(declare-fun bs!5509 () Bool)

(assert (= bs!5509 d!40503))

(declare-fun m!157175 () Bool)

(assert (=> bs!5509 m!157175))

(assert (=> bs!5509 m!157175))

(declare-fun m!157177 () Bool)

(assert (=> bs!5509 m!157177))

(assert (=> b!132929 d!40503))

(declare-fun d!40505 () Bool)

(assert (=> d!40505 (= (apply!116 lt!69475 lt!69471) (get!1486 (getValueByKey!172 (toList!869 lt!69475) lt!69471)))))

(declare-fun bs!5510 () Bool)

(assert (= bs!5510 d!40505))

(declare-fun m!157179 () Bool)

(assert (=> bs!5510 m!157179))

(assert (=> bs!5510 m!157179))

(declare-fun m!157181 () Bool)

(assert (=> bs!5510 m!157181))

(assert (=> b!132929 d!40505))

(declare-fun d!40507 () Bool)

(assert (=> d!40507 (= (apply!116 lt!69472 lt!69485) (get!1486 (getValueByKey!172 (toList!869 lt!69472) lt!69485)))))

(declare-fun bs!5511 () Bool)

(assert (= bs!5511 d!40507))

(declare-fun m!157183 () Bool)

(assert (=> bs!5511 m!157183))

(assert (=> bs!5511 m!157183))

(declare-fun m!157185 () Bool)

(assert (=> bs!5511 m!157185))

(assert (=> b!132929 d!40507))

(declare-fun d!40509 () Bool)

(assert (=> d!40509 (= (apply!116 (+!175 lt!69472 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69485) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69472 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69485)))))

(declare-fun bs!5512 () Bool)

(assert (= bs!5512 d!40509))

(declare-fun m!157187 () Bool)

(assert (=> bs!5512 m!157187))

(assert (=> bs!5512 m!157187))

(declare-fun m!157189 () Bool)

(assert (=> bs!5512 m!157189))

(assert (=> b!132929 d!40509))

(declare-fun d!40511 () Bool)

(assert (=> d!40511 (= (apply!116 (+!175 lt!69475 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69471) (apply!116 lt!69475 lt!69471))))

(declare-fun lt!69668 () Unit!4135)

(assert (=> d!40511 (= lt!69668 (choose!822 lt!69475 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69471))))

(declare-fun e!86833 () Bool)

(assert (=> d!40511 e!86833))

(declare-fun res!64158 () Bool)

(assert (=> d!40511 (=> (not res!64158) (not e!86833))))

(assert (=> d!40511 (= res!64158 (contains!899 lt!69475 lt!69471))))

(assert (=> d!40511 (= (addApplyDifferent!92 lt!69475 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69471) lt!69668)))

(declare-fun b!133253 () Bool)

(assert (=> b!133253 (= e!86833 (not (= lt!69471 lt!69477)))))

(assert (= (and d!40511 res!64158) b!133253))

(declare-fun m!157191 () Bool)

(assert (=> d!40511 m!157191))

(assert (=> d!40511 m!156583))

(assert (=> d!40511 m!156603))

(assert (=> d!40511 m!156583))

(assert (=> d!40511 m!156585))

(declare-fun m!157193 () Bool)

(assert (=> d!40511 m!157193))

(assert (=> b!132929 d!40511))

(declare-fun d!40513 () Bool)

(assert (=> d!40513 (= (apply!116 (+!175 lt!69475 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69471) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69475 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69471)))))

(declare-fun bs!5513 () Bool)

(assert (= bs!5513 d!40513))

(declare-fun m!157195 () Bool)

(assert (=> bs!5513 m!157195))

(assert (=> bs!5513 m!157195))

(declare-fun m!157197 () Bool)

(assert (=> bs!5513 m!157197))

(assert (=> b!132929 d!40513))

(declare-fun lt!69669 () Bool)

(declare-fun d!40515 () Bool)

(assert (=> d!40515 (= lt!69669 (select (content!133 (toList!869 lt!69422)) (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!86835 () Bool)

(assert (=> d!40515 (= lt!69669 e!86835)))

(declare-fun res!64159 () Bool)

(assert (=> d!40515 (=> (not res!64159) (not e!86835))))

(assert (=> d!40515 (= res!64159 ((_ is Cons!1712) (toList!869 lt!69422)))))

(assert (=> d!40515 (= (contains!902 (toList!869 lt!69422) (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69669)))

(declare-fun b!133254 () Bool)

(declare-fun e!86834 () Bool)

(assert (=> b!133254 (= e!86835 e!86834)))

(declare-fun res!64160 () Bool)

(assert (=> b!133254 (=> res!64160 e!86834)))

(assert (=> b!133254 (= res!64160 (= (h!2317 (toList!869 lt!69422)) (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133255 () Bool)

(assert (=> b!133255 (= e!86834 (contains!902 (t!6167 (toList!869 lt!69422)) (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!40515 res!64159) b!133254))

(assert (= (and b!133254 (not res!64160)) b!133255))

(declare-fun m!157199 () Bool)

(assert (=> d!40515 m!157199))

(declare-fun m!157201 () Bool)

(assert (=> d!40515 m!157201))

(declare-fun m!157203 () Bool)

(assert (=> b!133255 m!157203))

(assert (=> b!132849 d!40515))

(declare-fun d!40517 () Bool)

(declare-fun e!86836 () Bool)

(assert (=> d!40517 e!86836))

(declare-fun res!64162 () Bool)

(assert (=> d!40517 (=> (not res!64162) (not e!86836))))

(declare-fun lt!69670 () ListLongMap!1707)

(assert (=> d!40517 (= res!64162 (contains!899 lt!69670 (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69672 () List!1716)

(assert (=> d!40517 (= lt!69670 (ListLongMap!1708 lt!69672))))

(declare-fun lt!69673 () Unit!4135)

(declare-fun lt!69671 () Unit!4135)

(assert (=> d!40517 (= lt!69673 lt!69671)))

(assert (=> d!40517 (= (getValueByKey!172 lt!69672 (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40517 (= lt!69671 (lemmaContainsTupThenGetReturnValue!87 lt!69672 (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40517 (= lt!69672 (insertStrictlySorted!90 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40517 (= (+!175 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69670)))

(declare-fun b!133256 () Bool)

(declare-fun res!64161 () Bool)

(assert (=> b!133256 (=> (not res!64161) (not e!86836))))

(assert (=> b!133256 (= res!64161 (= (getValueByKey!172 (toList!869 lt!69670) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133257 () Bool)

(assert (=> b!133257 (= e!86836 (contains!902 (toList!869 lt!69670) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40517 res!64162) b!133256))

(assert (= (and b!133256 res!64161) b!133257))

(declare-fun m!157205 () Bool)

(assert (=> d!40517 m!157205))

(declare-fun m!157207 () Bool)

(assert (=> d!40517 m!157207))

(declare-fun m!157209 () Bool)

(assert (=> d!40517 m!157209))

(declare-fun m!157211 () Bool)

(assert (=> d!40517 m!157211))

(declare-fun m!157213 () Bool)

(assert (=> b!133256 m!157213))

(declare-fun m!157215 () Bool)

(assert (=> b!133257 m!157215))

(assert (=> d!40283 d!40517))

(declare-fun d!40519 () Bool)

(assert (=> d!40519 (= (+!175 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69189 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(assert (=> d!40519 true))

(declare-fun _$7!116 () Unit!4135)

(assert (=> d!40519 (= (choose!824 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69189 (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) (defaultEntry!2865 newMap!16)) _$7!116)))

(declare-fun bs!5514 () Bool)

(assert (= bs!5514 d!40519))

(assert (=> bs!5514 m!155939))

(assert (=> bs!5514 m!155939))

(assert (=> bs!5514 m!156457))

(assert (=> bs!5514 m!155895))

(assert (=> bs!5514 m!156455))

(assert (=> d!40283 d!40519))

(assert (=> d!40283 d!40229))

(declare-fun b!133258 () Bool)

(declare-fun e!86849 () Unit!4135)

(declare-fun lt!69674 () Unit!4135)

(assert (=> b!133258 (= e!86849 lt!69674)))

(declare-fun lt!69690 () ListLongMap!1707)

(assert (=> b!133258 (= lt!69690 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69189 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69684 () (_ BitVec 64))

(assert (=> b!133258 (= lt!69684 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69689 () (_ BitVec 64))

(assert (=> b!133258 (= lt!69689 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69687 () Unit!4135)

(assert (=> b!133258 (= lt!69687 (addStillContains!92 lt!69690 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69689))))

(assert (=> b!133258 (contains!899 (+!175 lt!69690 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69689)))

(declare-fun lt!69694 () Unit!4135)

(assert (=> b!133258 (= lt!69694 lt!69687)))

(declare-fun lt!69676 () ListLongMap!1707)

(assert (=> b!133258 (= lt!69676 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69189 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69679 () (_ BitVec 64))

(assert (=> b!133258 (= lt!69679 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69695 () (_ BitVec 64))

(assert (=> b!133258 (= lt!69695 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69686 () Unit!4135)

(assert (=> b!133258 (= lt!69686 (addApplyDifferent!92 lt!69676 lt!69679 (minValue!2720 newMap!16) lt!69695))))

(assert (=> b!133258 (= (apply!116 (+!175 lt!69676 (tuple2!2627 lt!69679 (minValue!2720 newMap!16))) lt!69695) (apply!116 lt!69676 lt!69695))))

(declare-fun lt!69675 () Unit!4135)

(assert (=> b!133258 (= lt!69675 lt!69686)))

(declare-fun lt!69681 () ListLongMap!1707)

(assert (=> b!133258 (= lt!69681 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69189 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69683 () (_ BitVec 64))

(assert (=> b!133258 (= lt!69683 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69677 () (_ BitVec 64))

(assert (=> b!133258 (= lt!69677 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69680 () Unit!4135)

(assert (=> b!133258 (= lt!69680 (addApplyDifferent!92 lt!69681 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69677))))

(assert (=> b!133258 (= (apply!116 (+!175 lt!69681 (tuple2!2627 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69677) (apply!116 lt!69681 lt!69677))))

(declare-fun lt!69688 () Unit!4135)

(assert (=> b!133258 (= lt!69688 lt!69680)))

(declare-fun lt!69678 () ListLongMap!1707)

(assert (=> b!133258 (= lt!69678 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69189 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69693 () (_ BitVec 64))

(assert (=> b!133258 (= lt!69693 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69691 () (_ BitVec 64))

(assert (=> b!133258 (= lt!69691 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133258 (= lt!69674 (addApplyDifferent!92 lt!69678 lt!69693 (minValue!2720 newMap!16) lt!69691))))

(assert (=> b!133258 (= (apply!116 (+!175 lt!69678 (tuple2!2627 lt!69693 (minValue!2720 newMap!16))) lt!69691) (apply!116 lt!69678 lt!69691))))

(declare-fun b!133259 () Bool)

(declare-fun e!86846 () Bool)

(declare-fun call!14701 () Bool)

(assert (=> b!133259 (= e!86846 (not call!14701))))

(declare-fun b!133260 () Bool)

(declare-fun e!86843 () Bool)

(declare-fun e!86842 () Bool)

(assert (=> b!133260 (= e!86843 e!86842)))

(declare-fun c!24671 () Bool)

(assert (=> b!133260 (= c!24671 (not (= (bvand lt!69189 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133261 () Bool)

(declare-fun e!86847 () ListLongMap!1707)

(declare-fun call!14704 () ListLongMap!1707)

(assert (=> b!133261 (= e!86847 call!14704)))

(declare-fun b!133262 () Bool)

(declare-fun e!86838 () ListLongMap!1707)

(declare-fun call!14698 () ListLongMap!1707)

(assert (=> b!133262 (= e!86838 call!14698)))

(declare-fun b!133263 () Bool)

(declare-fun c!24673 () Bool)

(assert (=> b!133263 (= c!24673 (and (not (= (bvand lt!69189 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!69189 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!133263 (= e!86838 e!86847)))

(declare-fun b!133264 () Bool)

(declare-fun call!14699 () Bool)

(assert (=> b!133264 (= e!86842 (not call!14699))))

(declare-fun d!40521 () Bool)

(assert (=> d!40521 e!86843))

(declare-fun res!64166 () Bool)

(assert (=> d!40521 (=> (not res!64166) (not e!86843))))

(assert (=> d!40521 (= res!64166 (or (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))))

(declare-fun lt!69692 () ListLongMap!1707)

(declare-fun lt!69685 () ListLongMap!1707)

(assert (=> d!40521 (= lt!69692 lt!69685)))

(declare-fun lt!69682 () Unit!4135)

(assert (=> d!40521 (= lt!69682 e!86849)))

(declare-fun c!24669 () Bool)

(declare-fun e!86845 () Bool)

(assert (=> d!40521 (= c!24669 e!86845)))

(declare-fun res!64165 () Bool)

(assert (=> d!40521 (=> (not res!64165) (not e!86845))))

(assert (=> d!40521 (= res!64165 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun e!86840 () ListLongMap!1707)

(assert (=> d!40521 (= lt!69685 e!86840)))

(declare-fun c!24672 () Bool)

(assert (=> d!40521 (= c!24672 (and (not (= (bvand lt!69189 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!69189 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40521 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40521 (= (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69189 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69692)))

(declare-fun b!133265 () Bool)

(declare-fun e!86844 () Bool)

(assert (=> b!133265 (= e!86844 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14695 () Bool)

(assert (=> bm!14695 (= call!14701 (contains!899 lt!69692 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133266 () Bool)

(assert (=> b!133266 (= e!86840 e!86838)))

(declare-fun c!24670 () Bool)

(assert (=> b!133266 (= c!24670 (and (not (= (bvand lt!69189 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!69189 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133267 () Bool)

(declare-fun call!14702 () ListLongMap!1707)

(assert (=> b!133267 (= e!86840 (+!175 call!14702 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun b!133268 () Bool)

(declare-fun e!86837 () Bool)

(assert (=> b!133268 (= e!86837 (= (apply!116 lt!69692 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133268 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_values!2848 newMap!16))))))

(assert (=> b!133268 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun bm!14696 () Bool)

(assert (=> bm!14696 (= call!14699 (contains!899 lt!69692 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133269 () Bool)

(declare-fun res!64167 () Bool)

(assert (=> b!133269 (=> (not res!64167) (not e!86843))))

(assert (=> b!133269 (= res!64167 e!86846)))

(declare-fun c!24668 () Bool)

(assert (=> b!133269 (= c!24668 (not (= (bvand lt!69189 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133270 () Bool)

(declare-fun e!86841 () Bool)

(assert (=> b!133270 (= e!86842 e!86841)))

(declare-fun res!64169 () Bool)

(assert (=> b!133270 (= res!64169 call!14699)))

(assert (=> b!133270 (=> (not res!64169) (not e!86841))))

(declare-fun call!14700 () ListLongMap!1707)

(declare-fun bm!14697 () Bool)

(declare-fun call!14703 () ListLongMap!1707)

(assert (=> bm!14697 (= call!14702 (+!175 (ite c!24672 call!14700 (ite c!24670 call!14703 call!14704)) (ite (or c!24672 c!24670) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!133271 () Bool)

(declare-fun e!86848 () Bool)

(assert (=> b!133271 (= e!86848 (= (apply!116 lt!69692 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!14698 () Bool)

(assert (=> bm!14698 (= call!14698 call!14702)))

(declare-fun b!133272 () Bool)

(assert (=> b!133272 (= e!86846 e!86848)))

(declare-fun res!64164 () Bool)

(assert (=> b!133272 (= res!64164 call!14701)))

(assert (=> b!133272 (=> (not res!64164) (not e!86848))))

(declare-fun bm!14699 () Bool)

(assert (=> bm!14699 (= call!14704 call!14703)))

(declare-fun bm!14700 () Bool)

(assert (=> bm!14700 (= call!14700 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69189 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!133273 () Bool)

(assert (=> b!133273 (= e!86847 call!14698)))

(declare-fun b!133274 () Bool)

(declare-fun e!86839 () Bool)

(assert (=> b!133274 (= e!86839 e!86837)))

(declare-fun res!64168 () Bool)

(assert (=> b!133274 (=> (not res!64168) (not e!86837))))

(assert (=> b!133274 (= res!64168 (contains!899 lt!69692 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133274 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133275 () Bool)

(declare-fun res!64171 () Bool)

(assert (=> b!133275 (=> (not res!64171) (not e!86843))))

(assert (=> b!133275 (= res!64171 e!86839)))

(declare-fun res!64163 () Bool)

(assert (=> b!133275 (=> res!64163 e!86839)))

(assert (=> b!133275 (= res!64163 (not e!86844))))

(declare-fun res!64170 () Bool)

(assert (=> b!133275 (=> (not res!64170) (not e!86844))))

(assert (=> b!133275 (= res!64170 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun bm!14701 () Bool)

(assert (=> bm!14701 (= call!14703 call!14700)))

(declare-fun b!133276 () Bool)

(assert (=> b!133276 (= e!86841 (= (apply!116 lt!69692 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 newMap!16)))))

(declare-fun b!133277 () Bool)

(assert (=> b!133277 (= e!86845 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133278 () Bool)

(declare-fun Unit!4168 () Unit!4135)

(assert (=> b!133278 (= e!86849 Unit!4168)))

(assert (= (and d!40521 c!24672) b!133267))

(assert (= (and d!40521 (not c!24672)) b!133266))

(assert (= (and b!133266 c!24670) b!133262))

(assert (= (and b!133266 (not c!24670)) b!133263))

(assert (= (and b!133263 c!24673) b!133273))

(assert (= (and b!133263 (not c!24673)) b!133261))

(assert (= (or b!133273 b!133261) bm!14699))

(assert (= (or b!133262 bm!14699) bm!14701))

(assert (= (or b!133262 b!133273) bm!14698))

(assert (= (or b!133267 bm!14701) bm!14700))

(assert (= (or b!133267 bm!14698) bm!14697))

(assert (= (and d!40521 res!64165) b!133277))

(assert (= (and d!40521 c!24669) b!133258))

(assert (= (and d!40521 (not c!24669)) b!133278))

(assert (= (and d!40521 res!64166) b!133275))

(assert (= (and b!133275 res!64170) b!133265))

(assert (= (and b!133275 (not res!64163)) b!133274))

(assert (= (and b!133274 res!64168) b!133268))

(assert (= (and b!133275 res!64171) b!133269))

(assert (= (and b!133269 c!24668) b!133272))

(assert (= (and b!133269 (not c!24668)) b!133259))

(assert (= (and b!133272 res!64164) b!133271))

(assert (= (or b!133272 b!133259) bm!14695))

(assert (= (and b!133269 res!64167) b!133260))

(assert (= (and b!133260 c!24671) b!133270))

(assert (= (and b!133260 (not c!24671)) b!133264))

(assert (= (and b!133270 res!64169) b!133276))

(assert (= (or b!133270 b!133264) bm!14696))

(declare-fun b_lambda!5931 () Bool)

(assert (=> (not b_lambda!5931) (not b!133268)))

(assert (=> b!133268 t!6176))

(declare-fun b_and!8259 () Bool)

(assert (= b_and!8255 (and (=> t!6176 result!3997) b_and!8259)))

(assert (=> b!133268 t!6178))

(declare-fun b_and!8261 () Bool)

(assert (= b_and!8257 (and (=> t!6178 result!3999) b_and!8261)))

(assert (=> bm!14700 m!155895))

(declare-fun m!157217 () Bool)

(assert (=> bm!14700 m!157217))

(declare-fun m!157219 () Bool)

(assert (=> bm!14697 m!157219))

(assert (=> b!133268 m!156173))

(assert (=> b!133268 m!156173))

(assert (=> b!133268 m!156175))

(assert (=> b!133268 m!156177))

(assert (=> b!133268 m!156163))

(assert (=> b!133268 m!156175))

(assert (=> b!133268 m!156163))

(declare-fun m!157221 () Bool)

(assert (=> b!133268 m!157221))

(declare-fun m!157223 () Bool)

(assert (=> bm!14695 m!157223))

(declare-fun m!157225 () Bool)

(assert (=> b!133267 m!157225))

(assert (=> b!133277 m!156163))

(assert (=> b!133277 m!156163))

(assert (=> b!133277 m!156165))

(assert (=> d!40521 m!156157))

(declare-fun m!157227 () Bool)

(assert (=> b!133258 m!157227))

(declare-fun m!157229 () Bool)

(assert (=> b!133258 m!157229))

(declare-fun m!157231 () Bool)

(assert (=> b!133258 m!157231))

(declare-fun m!157233 () Bool)

(assert (=> b!133258 m!157233))

(assert (=> b!133258 m!155895))

(assert (=> b!133258 m!157217))

(assert (=> b!133258 m!155895))

(declare-fun m!157235 () Bool)

(assert (=> b!133258 m!157235))

(declare-fun m!157237 () Bool)

(assert (=> b!133258 m!157237))

(declare-fun m!157239 () Bool)

(assert (=> b!133258 m!157239))

(declare-fun m!157241 () Bool)

(assert (=> b!133258 m!157241))

(declare-fun m!157243 () Bool)

(assert (=> b!133258 m!157243))

(assert (=> b!133258 m!157227))

(declare-fun m!157245 () Bool)

(assert (=> b!133258 m!157245))

(assert (=> b!133258 m!157239))

(declare-fun m!157247 () Bool)

(assert (=> b!133258 m!157247))

(assert (=> b!133258 m!157231))

(assert (=> b!133258 m!155895))

(declare-fun m!157249 () Bool)

(assert (=> b!133258 m!157249))

(assert (=> b!133258 m!156163))

(declare-fun m!157251 () Bool)

(assert (=> b!133258 m!157251))

(assert (=> b!133258 m!157229))

(declare-fun m!157253 () Bool)

(assert (=> b!133258 m!157253))

(declare-fun m!157255 () Bool)

(assert (=> b!133258 m!157255))

(declare-fun m!157257 () Bool)

(assert (=> bm!14696 m!157257))

(declare-fun m!157259 () Bool)

(assert (=> b!133271 m!157259))

(declare-fun m!157261 () Bool)

(assert (=> b!133276 m!157261))

(assert (=> b!133274 m!156163))

(assert (=> b!133274 m!156163))

(declare-fun m!157263 () Bool)

(assert (=> b!133274 m!157263))

(assert (=> b!133265 m!156163))

(assert (=> b!133265 m!156163))

(assert (=> b!133265 m!156165))

(assert (=> d!40283 d!40521))

(assert (=> d!40283 d!40325))

(declare-fun d!40523 () Bool)

(assert (=> d!40523 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5515 () Bool)

(assert (= bs!5515 d!40523))

(assert (=> bs!5515 m!156451))

(declare-fun m!157265 () Bool)

(assert (=> bs!5515 m!157265))

(assert (=> b!132867 d!40523))

(declare-fun b!133281 () Bool)

(declare-fun e!86851 () Option!178)

(assert (=> b!133281 (= e!86851 (getValueByKey!172 (t!6167 (toList!869 lt!69095)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133282 () Bool)

(assert (=> b!133282 (= e!86851 None!176)))

(declare-fun d!40525 () Bool)

(declare-fun c!24674 () Bool)

(assert (=> d!40525 (= c!24674 (and ((_ is Cons!1712) (toList!869 lt!69095)) (= (_1!1324 (h!2317 (toList!869 lt!69095))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!86850 () Option!178)

(assert (=> d!40525 (= (getValueByKey!172 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000) e!86850)))

(declare-fun b!133279 () Bool)

(assert (=> b!133279 (= e!86850 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69095)))))))

(declare-fun b!133280 () Bool)

(assert (=> b!133280 (= e!86850 e!86851)))

(declare-fun c!24675 () Bool)

(assert (=> b!133280 (= c!24675 (and ((_ is Cons!1712) (toList!869 lt!69095)) (not (= (_1!1324 (h!2317 (toList!869 lt!69095))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!40525 c!24674) b!133279))

(assert (= (and d!40525 (not c!24674)) b!133280))

(assert (= (and b!133280 c!24675) b!133281))

(assert (= (and b!133280 (not c!24675)) b!133282))

(declare-fun m!157267 () Bool)

(assert (=> b!133281 m!157267))

(assert (=> b!132867 d!40525))

(declare-fun d!40527 () Bool)

(declare-fun e!86852 () Bool)

(assert (=> d!40527 e!86852))

(declare-fun res!64173 () Bool)

(assert (=> d!40527 (=> (not res!64173) (not e!86852))))

(declare-fun lt!69696 () ListLongMap!1707)

(assert (=> d!40527 (= res!64173 (contains!899 lt!69696 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69698 () List!1716)

(assert (=> d!40527 (= lt!69696 (ListLongMap!1708 lt!69698))))

(declare-fun lt!69699 () Unit!4135)

(declare-fun lt!69697 () Unit!4135)

(assert (=> d!40527 (= lt!69699 lt!69697)))

(assert (=> d!40527 (= (getValueByKey!172 lt!69698 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40527 (= lt!69697 (lemmaContainsTupThenGetReturnValue!87 lt!69698 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40527 (= lt!69698 (insertStrictlySorted!90 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40527 (= (+!175 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69696)))

(declare-fun b!133283 () Bool)

(declare-fun res!64172 () Bool)

(assert (=> b!133283 (=> (not res!64172) (not e!86852))))

(assert (=> b!133283 (= res!64172 (= (getValueByKey!172 (toList!869 lt!69696) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133284 () Bool)

(assert (=> b!133284 (= e!86852 (contains!902 (toList!869 lt!69696) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40527 res!64173) b!133283))

(assert (= (and b!133283 res!64172) b!133284))

(declare-fun m!157269 () Bool)

(assert (=> d!40527 m!157269))

(declare-fun m!157271 () Bool)

(assert (=> d!40527 m!157271))

(declare-fun m!157273 () Bool)

(assert (=> d!40527 m!157273))

(declare-fun m!157275 () Bool)

(assert (=> d!40527 m!157275))

(declare-fun m!157277 () Bool)

(assert (=> b!133283 m!157277))

(declare-fun m!157279 () Bool)

(assert (=> b!133284 m!157279))

(assert (=> d!40237 d!40527))

(declare-fun d!40529 () Bool)

(declare-fun e!86855 () Bool)

(assert (=> d!40529 e!86855))

(declare-fun res!64176 () Bool)

(assert (=> d!40529 (=> (not res!64176) (not e!86855))))

(assert (=> d!40529 (= res!64176 (and (bvsge (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000000) (bvslt (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (size!2530 (_keys!4614 newMap!16)))))))

(declare-fun lt!69702 () Unit!4135)

(declare-fun choose!41 (array!4781 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1717) Unit!4135)

(assert (=> d!40529 (= lt!69702 (choose!41 (_keys!4614 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) lt!69339 lt!69335))))

(assert (=> d!40529 (bvslt (size!2530 (_keys!4614 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!40529 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4614 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) lt!69339 lt!69335) lt!69702)))

(declare-fun b!133287 () Bool)

(assert (=> b!133287 (= e!86855 (arrayNoDuplicates!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) lt!69339 lt!69335))))

(assert (= (and d!40529 res!64176) b!133287))

(assert (=> d!40529 m!155869))

(declare-fun m!157281 () Bool)

(assert (=> d!40529 m!157281))

(assert (=> b!133287 m!156281))

(assert (=> b!133287 m!156279))

(assert (=> d!40237 d!40529))

(declare-fun d!40531 () Bool)

(assert (=> d!40531 (= (arrayCountValidKeys!0 lt!69334 (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!69705 () Unit!4135)

(declare-fun choose!2 (array!4781 (_ BitVec 32)) Unit!4135)

(assert (=> d!40531 (= lt!69705 (choose!2 lt!69334 (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))))))

(declare-fun e!86858 () Bool)

(assert (=> d!40531 e!86858))

(declare-fun res!64181 () Bool)

(assert (=> d!40531 (=> (not res!64181) (not e!86858))))

(assert (=> d!40531 (= res!64181 (and (bvsge (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000000) (bvslt (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (size!2530 lt!69334))))))

(assert (=> d!40531 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!69334 (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))) lt!69705)))

(declare-fun b!133292 () Bool)

(declare-fun res!64182 () Bool)

(assert (=> b!133292 (=> (not res!64182) (not e!86858))))

(assert (=> b!133292 (= res!64182 (validKeyInArray!0 (select (arr!2261 lt!69334) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))

(declare-fun b!133293 () Bool)

(assert (=> b!133293 (= e!86858 (bvslt (size!2530 lt!69334) #b01111111111111111111111111111111))))

(assert (= (and d!40531 res!64181) b!133292))

(assert (= (and b!133292 res!64182) b!133293))

(assert (=> d!40531 m!156277))

(declare-fun m!157283 () Bool)

(assert (=> d!40531 m!157283))

(declare-fun m!157285 () Bool)

(assert (=> b!133292 m!157285))

(assert (=> b!133292 m!157285))

(declare-fun m!157287 () Bool)

(assert (=> b!133292 m!157287))

(assert (=> d!40237 d!40531))

(assert (=> d!40237 d!40229))

(declare-fun call!14705 () Bool)

(declare-fun bm!14702 () Bool)

(declare-fun c!24676 () Bool)

(assert (=> bm!14702 (= call!14705 (arrayNoDuplicates!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (bvadd lt!69339 #b00000000000000000000000000000001) (ite c!24676 (Cons!1713 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) lt!69339) lt!69335) lt!69335)))))

(declare-fun b!133294 () Bool)

(declare-fun e!86862 () Bool)

(declare-fun e!86859 () Bool)

(assert (=> b!133294 (= e!86862 e!86859)))

(assert (=> b!133294 (= c!24676 (validKeyInArray!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) lt!69339)))))

(declare-fun e!86860 () Bool)

(declare-fun b!133295 () Bool)

(assert (=> b!133295 (= e!86860 (contains!901 lt!69335 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) lt!69339)))))

(declare-fun b!133296 () Bool)

(assert (=> b!133296 (= e!86859 call!14705)))

(declare-fun b!133297 () Bool)

(declare-fun e!86861 () Bool)

(assert (=> b!133297 (= e!86861 e!86862)))

(declare-fun res!64185 () Bool)

(assert (=> b!133297 (=> (not res!64185) (not e!86862))))

(assert (=> b!133297 (= res!64185 (not e!86860))))

(declare-fun res!64184 () Bool)

(assert (=> b!133297 (=> (not res!64184) (not e!86860))))

(assert (=> b!133297 (= res!64184 (validKeyInArray!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) lt!69339)))))

(declare-fun b!133298 () Bool)

(assert (=> b!133298 (= e!86859 call!14705)))

(declare-fun d!40533 () Bool)

(declare-fun res!64183 () Bool)

(assert (=> d!40533 (=> res!64183 e!86861)))

(assert (=> d!40533 (= res!64183 (bvsge lt!69339 (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(assert (=> d!40533 (= (arrayNoDuplicates!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) lt!69339 lt!69335) e!86861)))

(assert (= (and d!40533 (not res!64183)) b!133297))

(assert (= (and b!133297 res!64184) b!133295))

(assert (= (and b!133297 res!64185) b!133294))

(assert (= (and b!133294 c!24676) b!133296))

(assert (= (and b!133294 (not c!24676)) b!133298))

(assert (= (or b!133296 b!133298) bm!14702))

(declare-fun m!157289 () Bool)

(assert (=> bm!14702 m!157289))

(declare-fun m!157291 () Bool)

(assert (=> bm!14702 m!157291))

(assert (=> b!133294 m!157289))

(assert (=> b!133294 m!157289))

(declare-fun m!157293 () Bool)

(assert (=> b!133294 m!157293))

(assert (=> b!133295 m!157289))

(assert (=> b!133295 m!157289))

(declare-fun m!157295 () Bool)

(assert (=> b!133295 m!157295))

(assert (=> b!133297 m!157289))

(assert (=> b!133297 m!157289))

(assert (=> b!133297 m!157293))

(assert (=> d!40237 d!40533))

(declare-fun d!40535 () Bool)

(declare-fun res!64186 () Bool)

(declare-fun e!86863 () Bool)

(assert (=> d!40535 (=> res!64186 e!86863)))

(assert (=> d!40535 (= res!64186 (= (select (arr!2261 lt!69350) #b00000000000000000000000000000000) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> d!40535 (= (arrayContainsKey!0 lt!69350 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b00000000000000000000000000000000) e!86863)))

(declare-fun b!133299 () Bool)

(declare-fun e!86864 () Bool)

(assert (=> b!133299 (= e!86863 e!86864)))

(declare-fun res!64187 () Bool)

(assert (=> b!133299 (=> (not res!64187) (not e!86864))))

(assert (=> b!133299 (= res!64187 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 lt!69350)))))

(declare-fun b!133300 () Bool)

(assert (=> b!133300 (= e!86864 (arrayContainsKey!0 lt!69350 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40535 (not res!64186)) b!133299))

(assert (= (and b!133299 res!64187) b!133300))

(declare-fun m!157297 () Bool)

(assert (=> d!40535 m!157297))

(assert (=> b!133300 m!155869))

(declare-fun m!157299 () Bool)

(assert (=> b!133300 m!157299))

(assert (=> d!40237 d!40535))

(declare-fun d!40537 () Bool)

(declare-fun e!86865 () Bool)

(assert (=> d!40537 e!86865))

(declare-fun res!64188 () Bool)

(assert (=> d!40537 (=> res!64188 e!86865)))

(declare-fun lt!69709 () Bool)

(assert (=> d!40537 (= res!64188 (not lt!69709))))

(declare-fun lt!69706 () Bool)

(assert (=> d!40537 (= lt!69709 lt!69706)))

(declare-fun lt!69708 () Unit!4135)

(declare-fun e!86866 () Unit!4135)

(assert (=> d!40537 (= lt!69708 e!86866)))

(declare-fun c!24677 () Bool)

(assert (=> d!40537 (= c!24677 lt!69706)))

(assert (=> d!40537 (= lt!69706 (containsKey!176 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))

(assert (=> d!40537 (= (contains!899 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))) lt!69709)))

(declare-fun b!133301 () Bool)

(declare-fun lt!69707 () Unit!4135)

(assert (=> b!133301 (= e!86866 lt!69707)))

(assert (=> b!133301 (= lt!69707 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))

(assert (=> b!133301 (isDefined!125 (getValueByKey!172 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))

(declare-fun b!133302 () Bool)

(declare-fun Unit!4169 () Unit!4135)

(assert (=> b!133302 (= e!86866 Unit!4169)))

(declare-fun b!133303 () Bool)

(assert (=> b!133303 (= e!86865 (isDefined!125 (getValueByKey!172 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))))))))

(assert (= (and d!40537 c!24677) b!133301))

(assert (= (and d!40537 (not c!24677)) b!133302))

(assert (= (and d!40537 (not res!64188)) b!133303))

(assert (=> d!40537 m!156259))

(declare-fun m!157301 () Bool)

(assert (=> d!40537 m!157301))

(assert (=> b!133301 m!156259))

(declare-fun m!157303 () Bool)

(assert (=> b!133301 m!157303))

(assert (=> b!133301 m!156259))

(declare-fun m!157305 () Bool)

(assert (=> b!133301 m!157305))

(assert (=> b!133301 m!157305))

(declare-fun m!157307 () Bool)

(assert (=> b!133301 m!157307))

(assert (=> b!133303 m!156259))

(assert (=> b!133303 m!157305))

(assert (=> b!133303 m!157305))

(assert (=> b!133303 m!157307))

(assert (=> d!40237 d!40537))

(declare-fun b!133304 () Bool)

(declare-fun e!86879 () Unit!4135)

(declare-fun lt!69710 () Unit!4135)

(assert (=> b!133304 (= e!86879 lt!69710)))

(declare-fun lt!69726 () ListLongMap!1707)

(assert (=> b!133304 (= lt!69726 (getCurrentListMapNoExtraKeys!141 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69720 () (_ BitVec 64))

(assert (=> b!133304 (= lt!69720 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69725 () (_ BitVec 64))

(assert (=> b!133304 (= lt!69725 (select (arr!2261 lt!69349) #b00000000000000000000000000000000))))

(declare-fun lt!69723 () Unit!4135)

(assert (=> b!133304 (= lt!69723 (addStillContains!92 lt!69726 lt!69720 (zeroValue!2720 newMap!16) lt!69725))))

(assert (=> b!133304 (contains!899 (+!175 lt!69726 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16))) lt!69725)))

(declare-fun lt!69730 () Unit!4135)

(assert (=> b!133304 (= lt!69730 lt!69723)))

(declare-fun lt!69712 () ListLongMap!1707)

(assert (=> b!133304 (= lt!69712 (getCurrentListMapNoExtraKeys!141 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69715 () (_ BitVec 64))

(assert (=> b!133304 (= lt!69715 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69731 () (_ BitVec 64))

(assert (=> b!133304 (= lt!69731 (select (arr!2261 lt!69349) #b00000000000000000000000000000000))))

(declare-fun lt!69722 () Unit!4135)

(assert (=> b!133304 (= lt!69722 (addApplyDifferent!92 lt!69712 lt!69715 (minValue!2720 newMap!16) lt!69731))))

(assert (=> b!133304 (= (apply!116 (+!175 lt!69712 (tuple2!2627 lt!69715 (minValue!2720 newMap!16))) lt!69731) (apply!116 lt!69712 lt!69731))))

(declare-fun lt!69711 () Unit!4135)

(assert (=> b!133304 (= lt!69711 lt!69722)))

(declare-fun lt!69717 () ListLongMap!1707)

(assert (=> b!133304 (= lt!69717 (getCurrentListMapNoExtraKeys!141 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69719 () (_ BitVec 64))

(assert (=> b!133304 (= lt!69719 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69713 () (_ BitVec 64))

(assert (=> b!133304 (= lt!69713 (select (arr!2261 lt!69349) #b00000000000000000000000000000000))))

(declare-fun lt!69716 () Unit!4135)

(assert (=> b!133304 (= lt!69716 (addApplyDifferent!92 lt!69717 lt!69719 (zeroValue!2720 newMap!16) lt!69713))))

(assert (=> b!133304 (= (apply!116 (+!175 lt!69717 (tuple2!2627 lt!69719 (zeroValue!2720 newMap!16))) lt!69713) (apply!116 lt!69717 lt!69713))))

(declare-fun lt!69724 () Unit!4135)

(assert (=> b!133304 (= lt!69724 lt!69716)))

(declare-fun lt!69714 () ListLongMap!1707)

(assert (=> b!133304 (= lt!69714 (getCurrentListMapNoExtraKeys!141 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69729 () (_ BitVec 64))

(assert (=> b!133304 (= lt!69729 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69727 () (_ BitVec 64))

(assert (=> b!133304 (= lt!69727 (select (arr!2261 lt!69349) #b00000000000000000000000000000000))))

(assert (=> b!133304 (= lt!69710 (addApplyDifferent!92 lt!69714 lt!69729 (minValue!2720 newMap!16) lt!69727))))

(assert (=> b!133304 (= (apply!116 (+!175 lt!69714 (tuple2!2627 lt!69729 (minValue!2720 newMap!16))) lt!69727) (apply!116 lt!69714 lt!69727))))

(declare-fun b!133305 () Bool)

(declare-fun e!86876 () Bool)

(declare-fun call!14709 () Bool)

(assert (=> b!133305 (= e!86876 (not call!14709))))

(declare-fun b!133306 () Bool)

(declare-fun e!86873 () Bool)

(declare-fun e!86872 () Bool)

(assert (=> b!133306 (= e!86873 e!86872)))

(declare-fun c!24681 () Bool)

(assert (=> b!133306 (= c!24681 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133307 () Bool)

(declare-fun e!86877 () ListLongMap!1707)

(declare-fun call!14712 () ListLongMap!1707)

(assert (=> b!133307 (= e!86877 call!14712)))

(declare-fun b!133308 () Bool)

(declare-fun e!86868 () ListLongMap!1707)

(declare-fun call!14706 () ListLongMap!1707)

(assert (=> b!133308 (= e!86868 call!14706)))

(declare-fun b!133309 () Bool)

(declare-fun c!24683 () Bool)

(assert (=> b!133309 (= c!24683 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!133309 (= e!86868 e!86877)))

(declare-fun b!133310 () Bool)

(declare-fun call!14707 () Bool)

(assert (=> b!133310 (= e!86872 (not call!14707))))

(declare-fun d!40539 () Bool)

(assert (=> d!40539 e!86873))

(declare-fun res!64192 () Bool)

(assert (=> d!40539 (=> (not res!64192) (not e!86873))))

(assert (=> d!40539 (= res!64192 (or (bvsge #b00000000000000000000000000000000 (size!2530 lt!69349)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 lt!69349)))))))

(declare-fun lt!69728 () ListLongMap!1707)

(declare-fun lt!69721 () ListLongMap!1707)

(assert (=> d!40539 (= lt!69728 lt!69721)))

(declare-fun lt!69718 () Unit!4135)

(assert (=> d!40539 (= lt!69718 e!86879)))

(declare-fun c!24679 () Bool)

(declare-fun e!86875 () Bool)

(assert (=> d!40539 (= c!24679 e!86875)))

(declare-fun res!64191 () Bool)

(assert (=> d!40539 (=> (not res!64191) (not e!86875))))

(assert (=> d!40539 (= res!64191 (bvslt #b00000000000000000000000000000000 (size!2530 lt!69349)))))

(declare-fun e!86870 () ListLongMap!1707)

(assert (=> d!40539 (= lt!69721 e!86870)))

(declare-fun c!24682 () Bool)

(assert (=> d!40539 (= c!24682 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40539 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40539 (= (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69728)))

(declare-fun b!133311 () Bool)

(declare-fun e!86874 () Bool)

(assert (=> b!133311 (= e!86874 (validKeyInArray!0 (select (arr!2261 lt!69349) #b00000000000000000000000000000000)))))

(declare-fun bm!14703 () Bool)

(assert (=> bm!14703 (= call!14709 (contains!899 lt!69728 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133312 () Bool)

(assert (=> b!133312 (= e!86870 e!86868)))

(declare-fun c!24680 () Bool)

(assert (=> b!133312 (= c!24680 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133313 () Bool)

(declare-fun call!14710 () ListLongMap!1707)

(assert (=> b!133313 (= e!86870 (+!175 call!14710 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun e!86867 () Bool)

(declare-fun b!133314 () Bool)

(assert (=> b!133314 (= e!86867 (= (apply!116 lt!69728 (select (arr!2261 lt!69349) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 lt!69346) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133314 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 lt!69346)))))

(assert (=> b!133314 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 lt!69349)))))

(declare-fun bm!14704 () Bool)

(assert (=> bm!14704 (= call!14707 (contains!899 lt!69728 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133315 () Bool)

(declare-fun res!64193 () Bool)

(assert (=> b!133315 (=> (not res!64193) (not e!86873))))

(assert (=> b!133315 (= res!64193 e!86876)))

(declare-fun c!24678 () Bool)

(assert (=> b!133315 (= c!24678 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133316 () Bool)

(declare-fun e!86871 () Bool)

(assert (=> b!133316 (= e!86872 e!86871)))

(declare-fun res!64195 () Bool)

(assert (=> b!133316 (= res!64195 call!14707)))

(assert (=> b!133316 (=> (not res!64195) (not e!86871))))

(declare-fun call!14711 () ListLongMap!1707)

(declare-fun call!14708 () ListLongMap!1707)

(declare-fun bm!14705 () Bool)

(assert (=> bm!14705 (= call!14710 (+!175 (ite c!24682 call!14708 (ite c!24680 call!14711 call!14712)) (ite (or c!24682 c!24680) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!133317 () Bool)

(declare-fun e!86878 () Bool)

(assert (=> b!133317 (= e!86878 (= (apply!116 lt!69728 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 newMap!16)))))

(declare-fun bm!14706 () Bool)

(assert (=> bm!14706 (= call!14706 call!14710)))

(declare-fun b!133318 () Bool)

(assert (=> b!133318 (= e!86876 e!86878)))

(declare-fun res!64190 () Bool)

(assert (=> b!133318 (= res!64190 call!14709)))

(assert (=> b!133318 (=> (not res!64190) (not e!86878))))

(declare-fun bm!14707 () Bool)

(assert (=> bm!14707 (= call!14712 call!14711)))

(declare-fun bm!14708 () Bool)

(assert (=> bm!14708 (= call!14708 (getCurrentListMapNoExtraKeys!141 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!133319 () Bool)

(assert (=> b!133319 (= e!86877 call!14706)))

(declare-fun b!133320 () Bool)

(declare-fun e!86869 () Bool)

(assert (=> b!133320 (= e!86869 e!86867)))

(declare-fun res!64194 () Bool)

(assert (=> b!133320 (=> (not res!64194) (not e!86867))))

(assert (=> b!133320 (= res!64194 (contains!899 lt!69728 (select (arr!2261 lt!69349) #b00000000000000000000000000000000)))))

(assert (=> b!133320 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 lt!69349)))))

(declare-fun b!133321 () Bool)

(declare-fun res!64197 () Bool)

(assert (=> b!133321 (=> (not res!64197) (not e!86873))))

(assert (=> b!133321 (= res!64197 e!86869)))

(declare-fun res!64189 () Bool)

(assert (=> b!133321 (=> res!64189 e!86869)))

(assert (=> b!133321 (= res!64189 (not e!86874))))

(declare-fun res!64196 () Bool)

(assert (=> b!133321 (=> (not res!64196) (not e!86874))))

(assert (=> b!133321 (= res!64196 (bvslt #b00000000000000000000000000000000 (size!2530 lt!69349)))))

(declare-fun bm!14709 () Bool)

(assert (=> bm!14709 (= call!14711 call!14708)))

(declare-fun b!133322 () Bool)

(assert (=> b!133322 (= e!86871 (= (apply!116 lt!69728 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 newMap!16)))))

(declare-fun b!133323 () Bool)

(assert (=> b!133323 (= e!86875 (validKeyInArray!0 (select (arr!2261 lt!69349) #b00000000000000000000000000000000)))))

(declare-fun b!133324 () Bool)

(declare-fun Unit!4170 () Unit!4135)

(assert (=> b!133324 (= e!86879 Unit!4170)))

(assert (= (and d!40539 c!24682) b!133313))

(assert (= (and d!40539 (not c!24682)) b!133312))

(assert (= (and b!133312 c!24680) b!133308))

(assert (= (and b!133312 (not c!24680)) b!133309))

(assert (= (and b!133309 c!24683) b!133319))

(assert (= (and b!133309 (not c!24683)) b!133307))

(assert (= (or b!133319 b!133307) bm!14707))

(assert (= (or b!133308 bm!14707) bm!14709))

(assert (= (or b!133308 b!133319) bm!14706))

(assert (= (or b!133313 bm!14709) bm!14708))

(assert (= (or b!133313 bm!14706) bm!14705))

(assert (= (and d!40539 res!64191) b!133323))

(assert (= (and d!40539 c!24679) b!133304))

(assert (= (and d!40539 (not c!24679)) b!133324))

(assert (= (and d!40539 res!64192) b!133321))

(assert (= (and b!133321 res!64196) b!133311))

(assert (= (and b!133321 (not res!64189)) b!133320))

(assert (= (and b!133320 res!64194) b!133314))

(assert (= (and b!133321 res!64197) b!133315))

(assert (= (and b!133315 c!24678) b!133318))

(assert (= (and b!133315 (not c!24678)) b!133305))

(assert (= (and b!133318 res!64190) b!133317))

(assert (= (or b!133318 b!133305) bm!14703))

(assert (= (and b!133315 res!64193) b!133306))

(assert (= (and b!133306 c!24681) b!133316))

(assert (= (and b!133306 (not c!24681)) b!133310))

(assert (= (and b!133316 res!64195) b!133322))

(assert (= (or b!133316 b!133310) bm!14704))

(declare-fun b_lambda!5933 () Bool)

(assert (=> (not b_lambda!5933) (not b!133314)))

(assert (=> b!133314 t!6176))

(declare-fun b_and!8263 () Bool)

(assert (= b_and!8259 (and (=> t!6176 result!3997) b_and!8263)))

(assert (=> b!133314 t!6178))

(declare-fun b_and!8265 () Bool)

(assert (= b_and!8261 (and (=> t!6178 result!3999) b_and!8265)))

(declare-fun m!157309 () Bool)

(assert (=> bm!14708 m!157309))

(declare-fun m!157311 () Bool)

(assert (=> bm!14705 m!157311))

(declare-fun m!157313 () Bool)

(assert (=> b!133314 m!157313))

(assert (=> b!133314 m!157313))

(assert (=> b!133314 m!156175))

(declare-fun m!157315 () Bool)

(assert (=> b!133314 m!157315))

(declare-fun m!157317 () Bool)

(assert (=> b!133314 m!157317))

(assert (=> b!133314 m!156175))

(assert (=> b!133314 m!157317))

(declare-fun m!157319 () Bool)

(assert (=> b!133314 m!157319))

(declare-fun m!157321 () Bool)

(assert (=> bm!14703 m!157321))

(declare-fun m!157323 () Bool)

(assert (=> b!133313 m!157323))

(assert (=> b!133323 m!157317))

(assert (=> b!133323 m!157317))

(declare-fun m!157325 () Bool)

(assert (=> b!133323 m!157325))

(assert (=> d!40539 m!156157))

(declare-fun m!157327 () Bool)

(assert (=> b!133304 m!157327))

(declare-fun m!157329 () Bool)

(assert (=> b!133304 m!157329))

(declare-fun m!157331 () Bool)

(assert (=> b!133304 m!157331))

(declare-fun m!157333 () Bool)

(assert (=> b!133304 m!157333))

(assert (=> b!133304 m!157309))

(declare-fun m!157335 () Bool)

(assert (=> b!133304 m!157335))

(declare-fun m!157337 () Bool)

(assert (=> b!133304 m!157337))

(declare-fun m!157339 () Bool)

(assert (=> b!133304 m!157339))

(declare-fun m!157341 () Bool)

(assert (=> b!133304 m!157341))

(declare-fun m!157343 () Bool)

(assert (=> b!133304 m!157343))

(assert (=> b!133304 m!157327))

(declare-fun m!157345 () Bool)

(assert (=> b!133304 m!157345))

(assert (=> b!133304 m!157339))

(declare-fun m!157347 () Bool)

(assert (=> b!133304 m!157347))

(assert (=> b!133304 m!157331))

(declare-fun m!157349 () Bool)

(assert (=> b!133304 m!157349))

(assert (=> b!133304 m!157317))

(declare-fun m!157351 () Bool)

(assert (=> b!133304 m!157351))

(assert (=> b!133304 m!157329))

(declare-fun m!157353 () Bool)

(assert (=> b!133304 m!157353))

(declare-fun m!157355 () Bool)

(assert (=> b!133304 m!157355))

(declare-fun m!157357 () Bool)

(assert (=> bm!14704 m!157357))

(declare-fun m!157359 () Bool)

(assert (=> b!133317 m!157359))

(declare-fun m!157361 () Bool)

(assert (=> b!133322 m!157361))

(assert (=> b!133320 m!157317))

(assert (=> b!133320 m!157317))

(declare-fun m!157363 () Bool)

(assert (=> b!133320 m!157363))

(assert (=> b!133311 m!157317))

(assert (=> b!133311 m!157317))

(assert (=> b!133311 m!157325))

(assert (=> d!40237 d!40539))

(declare-fun call!14713 () Bool)

(declare-fun bm!14710 () Bool)

(assert (=> bm!14710 (= call!14713 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (mask!7165 newMap!16)))))

(declare-fun b!133325 () Bool)

(declare-fun e!86882 () Bool)

(declare-fun e!86880 () Bool)

(assert (=> b!133325 (= e!86882 e!86880)))

(declare-fun c!24684 () Bool)

(assert (=> b!133325 (= c!24684 (validKeyInArray!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!40541 () Bool)

(declare-fun res!64198 () Bool)

(assert (=> d!40541 (=> res!64198 e!86882)))

(assert (=> d!40541 (= res!64198 (bvsge #b00000000000000000000000000000000 (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(assert (=> d!40541 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (mask!7165 newMap!16)) e!86882)))

(declare-fun b!133326 () Bool)

(assert (=> b!133326 (= e!86880 call!14713)))

(declare-fun b!133327 () Bool)

(declare-fun e!86881 () Bool)

(assert (=> b!133327 (= e!86881 call!14713)))

(declare-fun b!133328 () Bool)

(assert (=> b!133328 (= e!86880 e!86881)))

(declare-fun lt!69733 () (_ BitVec 64))

(assert (=> b!133328 (= lt!69733 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!69734 () Unit!4135)

(assert (=> b!133328 (= lt!69734 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) lt!69733 #b00000000000000000000000000000000))))

(assert (=> b!133328 (arrayContainsKey!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) lt!69733 #b00000000000000000000000000000000)))

(declare-fun lt!69732 () Unit!4135)

(assert (=> b!133328 (= lt!69732 lt!69734)))

(declare-fun res!64199 () Bool)

(assert (=> b!133328 (= res!64199 (= (seekEntryOrOpen!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (mask!7165 newMap!16)) (Found!275 #b00000000000000000000000000000000)))))

(assert (=> b!133328 (=> (not res!64199) (not e!86881))))

(assert (= (and d!40541 (not res!64198)) b!133325))

(assert (= (and b!133325 c!24684) b!133328))

(assert (= (and b!133325 (not c!24684)) b!133326))

(assert (= (and b!133328 res!64199) b!133327))

(assert (= (or b!133327 b!133326) bm!14710))

(declare-fun m!157365 () Bool)

(assert (=> bm!14710 m!157365))

(declare-fun m!157367 () Bool)

(assert (=> b!133325 m!157367))

(assert (=> b!133325 m!157367))

(declare-fun m!157369 () Bool)

(assert (=> b!133325 m!157369))

(assert (=> b!133328 m!157367))

(declare-fun m!157371 () Bool)

(assert (=> b!133328 m!157371))

(declare-fun m!157373 () Bool)

(assert (=> b!133328 m!157373))

(assert (=> b!133328 m!157367))

(declare-fun m!157375 () Bool)

(assert (=> b!133328 m!157375))

(assert (=> d!40237 d!40541))

(declare-fun d!40543 () Bool)

(declare-fun e!86883 () Bool)

(assert (=> d!40543 e!86883))

(declare-fun res!64200 () Bool)

(assert (=> d!40543 (=> (not res!64200) (not e!86883))))

(assert (=> d!40543 (= res!64200 (and (bvsge (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000000) (bvslt (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (size!2530 lt!69349))))))

(declare-fun lt!69735 () Unit!4135)

(assert (=> d!40543 (= lt!69735 (choose!820 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40543 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40543 (= (lemmaValidKeyInArrayIsInListMap!122 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (defaultEntry!2865 newMap!16)) lt!69735)))

(declare-fun b!133329 () Bool)

(assert (=> b!133329 (= e!86883 (contains!899 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2261 lt!69349) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))

(assert (= (and d!40543 res!64200) b!133329))

(declare-fun m!157377 () Bool)

(assert (=> d!40543 m!157377))

(assert (=> d!40543 m!156157))

(assert (=> b!133329 m!156257))

(declare-fun m!157379 () Bool)

(assert (=> b!133329 m!157379))

(assert (=> b!133329 m!156257))

(assert (=> b!133329 m!157379))

(declare-fun m!157381 () Bool)

(assert (=> b!133329 m!157381))

(assert (=> d!40237 d!40543))

(assert (=> d!40237 d!40243))

(declare-fun b!133330 () Bool)

(declare-fun e!86885 () (_ BitVec 32))

(declare-fun e!86884 () (_ BitVec 32))

(assert (=> b!133330 (= e!86885 e!86884)))

(declare-fun c!24685 () Bool)

(assert (=> b!133330 (= c!24685 (validKeyInArray!0 (select (arr!2261 lt!69334) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))

(declare-fun b!133331 () Bool)

(declare-fun call!14714 () (_ BitVec 32))

(assert (=> b!133331 (= e!86884 (bvadd #b00000000000000000000000000000001 call!14714))))

(declare-fun b!133332 () Bool)

(assert (=> b!133332 (= e!86884 call!14714)))

(declare-fun d!40545 () Bool)

(declare-fun lt!69736 () (_ BitVec 32))

(assert (=> d!40545 (and (bvsge lt!69736 #b00000000000000000000000000000000) (bvsle lt!69736 (bvsub (size!2530 lt!69334) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))

(assert (=> d!40545 (= lt!69736 e!86885)))

(declare-fun c!24686 () Bool)

(assert (=> d!40545 (= c!24686 (bvsge (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001)))))

(assert (=> d!40545 (and (bvsle (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001)) (bvsge (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001) (size!2530 lt!69334)))))

(assert (=> d!40545 (= (arrayCountValidKeys!0 lt!69334 (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001)) lt!69736)))

(declare-fun b!133333 () Bool)

(assert (=> b!133333 (= e!86885 #b00000000000000000000000000000000)))

(declare-fun bm!14711 () Bool)

(assert (=> bm!14711 (= call!14714 (arrayCountValidKeys!0 lt!69334 (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001) (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001)))))

(assert (= (and d!40545 c!24686) b!133333))

(assert (= (and d!40545 (not c!24686)) b!133330))

(assert (= (and b!133330 c!24685) b!133331))

(assert (= (and b!133330 (not c!24685)) b!133332))

(assert (= (or b!133331 b!133332) bm!14711))

(assert (=> b!133330 m!157285))

(assert (=> b!133330 m!157285))

(assert (=> b!133330 m!157287))

(declare-fun m!157383 () Bool)

(assert (=> bm!14711 m!157383))

(assert (=> d!40237 d!40545))

(assert (=> d!40237 d!40187))

(declare-fun d!40547 () Bool)

(declare-fun e!86888 () Bool)

(assert (=> d!40547 e!86888))

(declare-fun res!64203 () Bool)

(assert (=> d!40547 (=> (not res!64203) (not e!86888))))

(assert (=> d!40547 (= res!64203 (and (bvsge (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000000) (bvslt (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (size!2530 (_keys!4614 newMap!16)))))))

(declare-fun lt!69739 () Unit!4135)

(declare-fun choose!102 ((_ BitVec 64) array!4781 (_ BitVec 32) (_ BitVec 32)) Unit!4135)

(assert (=> d!40547 (= lt!69739 (choose!102 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (mask!7165 newMap!16)))))

(assert (=> d!40547 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40547 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (mask!7165 newMap!16)) lt!69739)))

(declare-fun b!133336 () Bool)

(assert (=> b!133336 (= e!86888 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (mask!7165 newMap!16)))))

(assert (= (and d!40547 res!64203) b!133336))

(assert (=> d!40547 m!155869))

(declare-fun m!157385 () Bool)

(assert (=> d!40547 m!157385))

(assert (=> d!40547 m!156157))

(assert (=> b!133336 m!156281))

(assert (=> b!133336 m!156247))

(assert (=> d!40237 d!40547))

(assert (=> d!40237 d!40299))

(declare-fun b!133346 () Bool)

(declare-fun res!64214 () Bool)

(declare-fun e!86893 () Bool)

(assert (=> b!133346 (=> (not res!64214) (not e!86893))))

(assert (=> b!133346 (= res!64214 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!133347 () Bool)

(assert (=> b!133347 (= e!86893 (bvslt (size!2530 (_keys!4614 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun e!86894 () Bool)

(declare-fun b!133348 () Bool)

(assert (=> b!133348 (= e!86894 (= (arrayCountValidKeys!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4614 newMap!16) #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!133345 () Bool)

(declare-fun res!64212 () Bool)

(assert (=> b!133345 (=> (not res!64212) (not e!86893))))

(assert (=> b!133345 (= res!64212 (not (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))))))))

(declare-fun d!40549 () Bool)

(assert (=> d!40549 e!86894))

(declare-fun res!64213 () Bool)

(assert (=> d!40549 (=> (not res!64213) (not e!86894))))

(assert (=> d!40549 (= res!64213 (and (bvsge (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000000) (bvslt (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (size!2530 (_keys!4614 newMap!16)))))))

(declare-fun lt!69742 () Unit!4135)

(declare-fun choose!1 (array!4781 (_ BitVec 32) (_ BitVec 64)) Unit!4135)

(assert (=> d!40549 (= lt!69742 (choose!1 (_keys!4614 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> d!40549 e!86893))

(declare-fun res!64215 () Bool)

(assert (=> d!40549 (=> (not res!64215) (not e!86893))))

(assert (=> d!40549 (= res!64215 (and (bvsge (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000000) (bvslt (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (size!2530 (_keys!4614 newMap!16)))))))

(assert (=> d!40549 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4614 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) lt!69742)))

(assert (= (and d!40549 res!64215) b!133345))

(assert (= (and b!133345 res!64212) b!133346))

(assert (= (and b!133346 res!64214) b!133347))

(assert (= (and d!40549 res!64213) b!133348))

(assert (=> b!133346 m!155869))

(declare-fun m!157387 () Bool)

(assert (=> b!133346 m!157387))

(assert (=> b!133348 m!156281))

(assert (=> b!133348 m!156267))

(assert (=> b!133348 m!156017))

(declare-fun m!157389 () Bool)

(assert (=> b!133345 m!157389))

(assert (=> b!133345 m!157389))

(declare-fun m!157391 () Bool)

(assert (=> b!133345 m!157391))

(assert (=> d!40549 m!155869))

(declare-fun m!157393 () Bool)

(assert (=> d!40549 m!157393))

(assert (=> d!40237 d!40549))

(declare-fun b!133349 () Bool)

(declare-fun e!86907 () Unit!4135)

(declare-fun lt!69743 () Unit!4135)

(assert (=> b!133349 (= e!86907 lt!69743)))

(declare-fun lt!69759 () ListLongMap!1707)

(assert (=> b!133349 (= lt!69759 (getCurrentListMapNoExtraKeys!141 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69753 () (_ BitVec 64))

(assert (=> b!133349 (= lt!69753 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69758 () (_ BitVec 64))

(assert (=> b!133349 (= lt!69758 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!69756 () Unit!4135)

(assert (=> b!133349 (= lt!69756 (addStillContains!92 lt!69759 lt!69753 (zeroValue!2720 newMap!16) lt!69758))))

(assert (=> b!133349 (contains!899 (+!175 lt!69759 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16))) lt!69758)))

(declare-fun lt!69763 () Unit!4135)

(assert (=> b!133349 (= lt!69763 lt!69756)))

(declare-fun lt!69745 () ListLongMap!1707)

(assert (=> b!133349 (= lt!69745 (getCurrentListMapNoExtraKeys!141 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69748 () (_ BitVec 64))

(assert (=> b!133349 (= lt!69748 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69764 () (_ BitVec 64))

(assert (=> b!133349 (= lt!69764 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!69755 () Unit!4135)

(assert (=> b!133349 (= lt!69755 (addApplyDifferent!92 lt!69745 lt!69748 (minValue!2720 newMap!16) lt!69764))))

(assert (=> b!133349 (= (apply!116 (+!175 lt!69745 (tuple2!2627 lt!69748 (minValue!2720 newMap!16))) lt!69764) (apply!116 lt!69745 lt!69764))))

(declare-fun lt!69744 () Unit!4135)

(assert (=> b!133349 (= lt!69744 lt!69755)))

(declare-fun lt!69750 () ListLongMap!1707)

(assert (=> b!133349 (= lt!69750 (getCurrentListMapNoExtraKeys!141 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69752 () (_ BitVec 64))

(assert (=> b!133349 (= lt!69752 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69746 () (_ BitVec 64))

(assert (=> b!133349 (= lt!69746 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!69749 () Unit!4135)

(assert (=> b!133349 (= lt!69749 (addApplyDifferent!92 lt!69750 lt!69752 (zeroValue!2720 newMap!16) lt!69746))))

(assert (=> b!133349 (= (apply!116 (+!175 lt!69750 (tuple2!2627 lt!69752 (zeroValue!2720 newMap!16))) lt!69746) (apply!116 lt!69750 lt!69746))))

(declare-fun lt!69757 () Unit!4135)

(assert (=> b!133349 (= lt!69757 lt!69749)))

(declare-fun lt!69747 () ListLongMap!1707)

(assert (=> b!133349 (= lt!69747 (getCurrentListMapNoExtraKeys!141 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69762 () (_ BitVec 64))

(assert (=> b!133349 (= lt!69762 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69760 () (_ BitVec 64))

(assert (=> b!133349 (= lt!69760 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!133349 (= lt!69743 (addApplyDifferent!92 lt!69747 lt!69762 (minValue!2720 newMap!16) lt!69760))))

(assert (=> b!133349 (= (apply!116 (+!175 lt!69747 (tuple2!2627 lt!69762 (minValue!2720 newMap!16))) lt!69760) (apply!116 lt!69747 lt!69760))))

(declare-fun b!133350 () Bool)

(declare-fun e!86904 () Bool)

(declare-fun call!14718 () Bool)

(assert (=> b!133350 (= e!86904 (not call!14718))))

(declare-fun b!133351 () Bool)

(declare-fun e!86901 () Bool)

(declare-fun e!86900 () Bool)

(assert (=> b!133351 (= e!86901 e!86900)))

(declare-fun c!24690 () Bool)

(assert (=> b!133351 (= c!24690 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133352 () Bool)

(declare-fun e!86905 () ListLongMap!1707)

(declare-fun call!14721 () ListLongMap!1707)

(assert (=> b!133352 (= e!86905 call!14721)))

(declare-fun b!133353 () Bool)

(declare-fun e!86896 () ListLongMap!1707)

(declare-fun call!14715 () ListLongMap!1707)

(assert (=> b!133353 (= e!86896 call!14715)))

(declare-fun b!133354 () Bool)

(declare-fun c!24692 () Bool)

(assert (=> b!133354 (= c!24692 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!133354 (= e!86896 e!86905)))

(declare-fun b!133355 () Bool)

(declare-fun call!14716 () Bool)

(assert (=> b!133355 (= e!86900 (not call!14716))))

(declare-fun d!40551 () Bool)

(assert (=> d!40551 e!86901))

(declare-fun res!64219 () Bool)

(assert (=> d!40551 (=> (not res!64219) (not e!86901))))

(assert (=> d!40551 (= res!64219 (or (bvsge #b00000000000000000000000000000000 (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))))

(declare-fun lt!69761 () ListLongMap!1707)

(declare-fun lt!69754 () ListLongMap!1707)

(assert (=> d!40551 (= lt!69761 lt!69754)))

(declare-fun lt!69751 () Unit!4135)

(assert (=> d!40551 (= lt!69751 e!86907)))

(declare-fun c!24688 () Bool)

(declare-fun e!86903 () Bool)

(assert (=> d!40551 (= c!24688 e!86903)))

(declare-fun res!64218 () Bool)

(assert (=> d!40551 (=> (not res!64218) (not e!86903))))

(assert (=> d!40551 (= res!64218 (bvslt #b00000000000000000000000000000000 (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(declare-fun e!86898 () ListLongMap!1707)

(assert (=> d!40551 (= lt!69754 e!86898)))

(declare-fun c!24691 () Bool)

(assert (=> d!40551 (= c!24691 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40551 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40551 (= (getCurrentListMap!546 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69761)))

(declare-fun e!86902 () Bool)

(declare-fun b!133356 () Bool)

(assert (=> b!133356 (= e!86902 (validKeyInArray!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!14712 () Bool)

(assert (=> bm!14712 (= call!14718 (contains!899 lt!69761 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133357 () Bool)

(assert (=> b!133357 (= e!86898 e!86896)))

(declare-fun c!24689 () Bool)

(assert (=> b!133357 (= c!24689 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133358 () Bool)

(declare-fun call!14719 () ListLongMap!1707)

(assert (=> b!133358 (= e!86898 (+!175 call!14719 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun b!133359 () Bool)

(declare-fun e!86895 () Bool)

(assert (=> b!133359 (= e!86895 (= (apply!116 lt!69761 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133359 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))))))

(assert (=> b!133359 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(declare-fun bm!14713 () Bool)

(assert (=> bm!14713 (= call!14716 (contains!899 lt!69761 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133360 () Bool)

(declare-fun res!64220 () Bool)

(assert (=> b!133360 (=> (not res!64220) (not e!86901))))

(assert (=> b!133360 (= res!64220 e!86904)))

(declare-fun c!24687 () Bool)

(assert (=> b!133360 (= c!24687 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133361 () Bool)

(declare-fun e!86899 () Bool)

(assert (=> b!133361 (= e!86900 e!86899)))

(declare-fun res!64222 () Bool)

(assert (=> b!133361 (= res!64222 call!14716)))

(assert (=> b!133361 (=> (not res!64222) (not e!86899))))

(declare-fun call!14717 () ListLongMap!1707)

(declare-fun call!14720 () ListLongMap!1707)

(declare-fun bm!14714 () Bool)

(assert (=> bm!14714 (= call!14719 (+!175 (ite c!24691 call!14717 (ite c!24689 call!14720 call!14721)) (ite (or c!24691 c!24689) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!133362 () Bool)

(declare-fun e!86906 () Bool)

(assert (=> b!133362 (= e!86906 (= (apply!116 lt!69761 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 newMap!16)))))

(declare-fun bm!14715 () Bool)

(assert (=> bm!14715 (= call!14715 call!14719)))

(declare-fun b!133363 () Bool)

(assert (=> b!133363 (= e!86904 e!86906)))

(declare-fun res!64217 () Bool)

(assert (=> b!133363 (= res!64217 call!14718)))

(assert (=> b!133363 (=> (not res!64217) (not e!86906))))

(declare-fun bm!14716 () Bool)

(assert (=> bm!14716 (= call!14721 call!14720)))

(declare-fun bm!14717 () Bool)

(assert (=> bm!14717 (= call!14717 (getCurrentListMapNoExtraKeys!141 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!133364 () Bool)

(assert (=> b!133364 (= e!86905 call!14715)))

(declare-fun b!133365 () Bool)

(declare-fun e!86897 () Bool)

(assert (=> b!133365 (= e!86897 e!86895)))

(declare-fun res!64221 () Bool)

(assert (=> b!133365 (=> (not res!64221) (not e!86895))))

(assert (=> b!133365 (= res!64221 (contains!899 lt!69761 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!133365 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(declare-fun b!133366 () Bool)

(declare-fun res!64224 () Bool)

(assert (=> b!133366 (=> (not res!64224) (not e!86901))))

(assert (=> b!133366 (= res!64224 e!86897)))

(declare-fun res!64216 () Bool)

(assert (=> b!133366 (=> res!64216 e!86897)))

(assert (=> b!133366 (= res!64216 (not e!86902))))

(declare-fun res!64223 () Bool)

(assert (=> b!133366 (=> (not res!64223) (not e!86902))))

(assert (=> b!133366 (= res!64223 (bvslt #b00000000000000000000000000000000 (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(declare-fun bm!14718 () Bool)

(assert (=> bm!14718 (= call!14720 call!14717)))

(declare-fun b!133367 () Bool)

(assert (=> b!133367 (= e!86899 (= (apply!116 lt!69761 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 newMap!16)))))

(declare-fun b!133368 () Bool)

(assert (=> b!133368 (= e!86903 (validKeyInArray!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!133369 () Bool)

(declare-fun Unit!4171 () Unit!4135)

(assert (=> b!133369 (= e!86907 Unit!4171)))

(assert (= (and d!40551 c!24691) b!133358))

(assert (= (and d!40551 (not c!24691)) b!133357))

(assert (= (and b!133357 c!24689) b!133353))

(assert (= (and b!133357 (not c!24689)) b!133354))

(assert (= (and b!133354 c!24692) b!133364))

(assert (= (and b!133354 (not c!24692)) b!133352))

(assert (= (or b!133364 b!133352) bm!14716))

(assert (= (or b!133353 bm!14716) bm!14718))

(assert (= (or b!133353 b!133364) bm!14715))

(assert (= (or b!133358 bm!14718) bm!14717))

(assert (= (or b!133358 bm!14715) bm!14714))

(assert (= (and d!40551 res!64218) b!133368))

(assert (= (and d!40551 c!24688) b!133349))

(assert (= (and d!40551 (not c!24688)) b!133369))

(assert (= (and d!40551 res!64219) b!133366))

(assert (= (and b!133366 res!64223) b!133356))

(assert (= (and b!133366 (not res!64216)) b!133365))

(assert (= (and b!133365 res!64221) b!133359))

(assert (= (and b!133366 res!64224) b!133360))

(assert (= (and b!133360 c!24687) b!133363))

(assert (= (and b!133360 (not c!24687)) b!133350))

(assert (= (and b!133363 res!64217) b!133362))

(assert (= (or b!133363 b!133350) bm!14712))

(assert (= (and b!133360 res!64220) b!133351))

(assert (= (and b!133351 c!24690) b!133361))

(assert (= (and b!133351 (not c!24690)) b!133355))

(assert (= (and b!133361 res!64222) b!133367))

(assert (= (or b!133361 b!133355) bm!14713))

(declare-fun b_lambda!5935 () Bool)

(assert (=> (not b_lambda!5935) (not b!133359)))

(assert (=> b!133359 t!6176))

(declare-fun b_and!8267 () Bool)

(assert (= b_and!8263 (and (=> t!6176 result!3997) b_and!8267)))

(assert (=> b!133359 t!6178))

(declare-fun b_and!8269 () Bool)

(assert (= b_and!8265 (and (=> t!6178 result!3999) b_and!8269)))

(declare-fun m!157395 () Bool)

(assert (=> bm!14717 m!157395))

(declare-fun m!157397 () Bool)

(assert (=> bm!14714 m!157397))

(declare-fun m!157399 () Bool)

(assert (=> b!133359 m!157399))

(assert (=> b!133359 m!157399))

(assert (=> b!133359 m!156175))

(declare-fun m!157401 () Bool)

(assert (=> b!133359 m!157401))

(assert (=> b!133359 m!157367))

(assert (=> b!133359 m!156175))

(assert (=> b!133359 m!157367))

(declare-fun m!157403 () Bool)

(assert (=> b!133359 m!157403))

(declare-fun m!157405 () Bool)

(assert (=> bm!14712 m!157405))

(declare-fun m!157407 () Bool)

(assert (=> b!133358 m!157407))

(assert (=> b!133368 m!157367))

(assert (=> b!133368 m!157367))

(assert (=> b!133368 m!157369))

(assert (=> d!40551 m!156157))

(declare-fun m!157409 () Bool)

(assert (=> b!133349 m!157409))

(declare-fun m!157411 () Bool)

(assert (=> b!133349 m!157411))

(declare-fun m!157413 () Bool)

(assert (=> b!133349 m!157413))

(declare-fun m!157415 () Bool)

(assert (=> b!133349 m!157415))

(assert (=> b!133349 m!157395))

(declare-fun m!157417 () Bool)

(assert (=> b!133349 m!157417))

(declare-fun m!157419 () Bool)

(assert (=> b!133349 m!157419))

(declare-fun m!157421 () Bool)

(assert (=> b!133349 m!157421))

(declare-fun m!157423 () Bool)

(assert (=> b!133349 m!157423))

(declare-fun m!157425 () Bool)

(assert (=> b!133349 m!157425))

(assert (=> b!133349 m!157409))

(declare-fun m!157427 () Bool)

(assert (=> b!133349 m!157427))

(assert (=> b!133349 m!157421))

(declare-fun m!157429 () Bool)

(assert (=> b!133349 m!157429))

(assert (=> b!133349 m!157413))

(declare-fun m!157431 () Bool)

(assert (=> b!133349 m!157431))

(assert (=> b!133349 m!157367))

(declare-fun m!157433 () Bool)

(assert (=> b!133349 m!157433))

(assert (=> b!133349 m!157411))

(declare-fun m!157435 () Bool)

(assert (=> b!133349 m!157435))

(declare-fun m!157437 () Bool)

(assert (=> b!133349 m!157437))

(declare-fun m!157439 () Bool)

(assert (=> bm!14713 m!157439))

(declare-fun m!157441 () Bool)

(assert (=> b!133362 m!157441))

(declare-fun m!157443 () Bool)

(assert (=> b!133367 m!157443))

(assert (=> b!133365 m!157367))

(assert (=> b!133365 m!157367))

(declare-fun m!157445 () Bool)

(assert (=> b!133365 m!157445))

(assert (=> b!133356 m!157367))

(assert (=> b!133356 m!157367))

(assert (=> b!133356 m!157369))

(assert (=> d!40237 d!40551))

(declare-fun b!133370 () Bool)

(declare-fun e!86909 () (_ BitVec 32))

(declare-fun e!86908 () (_ BitVec 32))

(assert (=> b!133370 (= e!86909 e!86908)))

(declare-fun c!24693 () Bool)

(assert (=> b!133370 (= c!24693 (validKeyInArray!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!133371 () Bool)

(declare-fun call!14722 () (_ BitVec 32))

(assert (=> b!133371 (= e!86908 (bvadd #b00000000000000000000000000000001 call!14722))))

(declare-fun b!133372 () Bool)

(assert (=> b!133372 (= e!86908 call!14722)))

(declare-fun d!40553 () Bool)

(declare-fun lt!69765 () (_ BitVec 32))

(assert (=> d!40553 (and (bvsge lt!69765 #b00000000000000000000000000000000) (bvsle lt!69765 (bvsub (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!40553 (= lt!69765 e!86909)))

(declare-fun c!24694 () Bool)

(assert (=> d!40553 (= c!24694 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!40553 (and (bvsle #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2530 (_keys!4614 newMap!16)) (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(assert (=> d!40553 (= (arrayCountValidKeys!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) lt!69765)))

(declare-fun b!133373 () Bool)

(assert (=> b!133373 (= e!86909 #b00000000000000000000000000000000)))

(declare-fun bm!14719 () Bool)

(assert (=> bm!14719 (= call!14722 (arrayCountValidKeys!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (= (and d!40553 c!24694) b!133373))

(assert (= (and d!40553 (not c!24694)) b!133370))

(assert (= (and b!133370 c!24693) b!133371))

(assert (= (and b!133370 (not c!24693)) b!133372))

(assert (= (or b!133371 b!133372) bm!14719))

(assert (=> b!133370 m!157367))

(assert (=> b!133370 m!157367))

(assert (=> b!133370 m!157369))

(declare-fun m!157447 () Bool)

(assert (=> bm!14719 m!157447))

(assert (=> d!40237 d!40553))

(assert (=> d!40237 d!40227))

(declare-fun d!40555 () Bool)

(declare-fun e!86912 () Bool)

(assert (=> d!40555 e!86912))

(declare-fun res!64227 () Bool)

(assert (=> d!40555 (=> (not res!64227) (not e!86912))))

(assert (=> d!40555 (= res!64227 (and (bvsge (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000000) (bvslt (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (size!2530 (_keys!4614 newMap!16))) (bvslt (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (size!2531 (_values!2848 newMap!16)))))))

(declare-fun lt!69768 () Unit!4135)

(declare-fun choose!828 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 32) (_ BitVec 64) V!3483 Int) Unit!4135)

(assert (=> d!40555 (= lt!69768 (choose!828 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)))))

(assert (=> d!40555 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40555 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!42 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)) lt!69768)))

(declare-fun b!133376 () Bool)

(assert (=> b!133376 (= e!86912 (= (+!175 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!546 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))))

(assert (= (and d!40555 res!64227) b!133376))

(assert (=> d!40555 m!155869))

(assert (=> d!40555 m!155895))

(declare-fun m!157449 () Bool)

(assert (=> d!40555 m!157449))

(assert (=> d!40555 m!156157))

(assert (=> b!133376 m!155939))

(assert (=> b!133376 m!156269))

(assert (=> b!133376 m!155939))

(assert (=> b!133376 m!156249))

(assert (=> b!133376 m!156253))

(assert (=> b!133376 m!156281))

(assert (=> d!40237 d!40555))

(declare-fun d!40557 () Bool)

(assert (=> d!40557 (arrayContainsKey!0 lt!69350 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!69769 () Unit!4135)

(assert (=> d!40557 (= lt!69769 (choose!13 lt!69350 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))))))

(assert (=> d!40557 (bvsge (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000000)))

(assert (=> d!40557 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!69350 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))) lt!69769)))

(declare-fun bs!5516 () Bool)

(assert (= bs!5516 d!40557))

(assert (=> bs!5516 m!155869))

(assert (=> bs!5516 m!156251))

(assert (=> bs!5516 m!155869))

(declare-fun m!157451 () Bool)

(assert (=> bs!5516 m!157451))

(assert (=> d!40237 d!40557))

(assert (=> b!132957 d!40353))

(declare-fun d!40559 () Bool)

(declare-fun res!64228 () Bool)

(declare-fun e!86913 () Bool)

(assert (=> d!40559 (=> res!64228 e!86913)))

(assert (=> d!40559 (= res!64228 (and ((_ is Cons!1712) (toList!869 lt!69095)) (= (_1!1324 (h!2317 (toList!869 lt!69095))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40559 (= (containsKey!176 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000) e!86913)))

(declare-fun b!133377 () Bool)

(declare-fun e!86914 () Bool)

(assert (=> b!133377 (= e!86913 e!86914)))

(declare-fun res!64229 () Bool)

(assert (=> b!133377 (=> (not res!64229) (not e!86914))))

(assert (=> b!133377 (= res!64229 (and (or (not ((_ is Cons!1712) (toList!869 lt!69095))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69095))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1712) (toList!869 lt!69095)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69095))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133378 () Bool)

(assert (=> b!133378 (= e!86914 (containsKey!176 (t!6167 (toList!869 lt!69095)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40559 (not res!64228)) b!133377))

(assert (= (and b!133377 res!64229) b!133378))

(declare-fun m!157453 () Bool)

(assert (=> b!133378 m!157453))

(assert (=> d!40235 d!40559))

(declare-fun d!40561 () Bool)

(declare-fun e!86915 () Bool)

(assert (=> d!40561 e!86915))

(declare-fun res!64230 () Bool)

(assert (=> d!40561 (=> res!64230 e!86915)))

(declare-fun lt!69773 () Bool)

(assert (=> d!40561 (= res!64230 (not lt!69773))))

(declare-fun lt!69770 () Bool)

(assert (=> d!40561 (= lt!69773 lt!69770)))

(declare-fun lt!69772 () Unit!4135)

(declare-fun e!86916 () Unit!4135)

(assert (=> d!40561 (= lt!69772 e!86916)))

(declare-fun c!24695 () Bool)

(assert (=> d!40561 (= c!24695 lt!69770)))

(assert (=> d!40561 (= lt!69770 (containsKey!176 (toList!869 (map!1409 (_2!1325 lt!69358))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> d!40561 (= (contains!899 (map!1409 (_2!1325 lt!69358)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) lt!69773)))

(declare-fun b!133379 () Bool)

(declare-fun lt!69771 () Unit!4135)

(assert (=> b!133379 (= e!86916 lt!69771)))

(assert (=> b!133379 (= lt!69771 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (map!1409 (_2!1325 lt!69358))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> b!133379 (isDefined!125 (getValueByKey!172 (toList!869 (map!1409 (_2!1325 lt!69358))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!133380 () Bool)

(declare-fun Unit!4172 () Unit!4135)

(assert (=> b!133380 (= e!86916 Unit!4172)))

(declare-fun b!133381 () Bool)

(assert (=> b!133381 (= e!86915 (isDefined!125 (getValueByKey!172 (toList!869 (map!1409 (_2!1325 lt!69358))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(assert (= (and d!40561 c!24695) b!133379))

(assert (= (and d!40561 (not c!24695)) b!133380))

(assert (= (and d!40561 (not res!64230)) b!133381))

(assert (=> d!40561 m!155869))

(declare-fun m!157455 () Bool)

(assert (=> d!40561 m!157455))

(assert (=> b!133379 m!155869))

(declare-fun m!157457 () Bool)

(assert (=> b!133379 m!157457))

(assert (=> b!133379 m!155869))

(declare-fun m!157459 () Bool)

(assert (=> b!133379 m!157459))

(assert (=> b!133379 m!157459))

(declare-fun m!157461 () Bool)

(assert (=> b!133379 m!157461))

(assert (=> b!133381 m!155869))

(assert (=> b!133381 m!157459))

(assert (=> b!133381 m!157459))

(assert (=> b!133381 m!157461))

(assert (=> b!132765 d!40561))

(declare-fun d!40563 () Bool)

(assert (=> d!40563 (= (map!1409 (_2!1325 lt!69358)) (getCurrentListMap!546 (_keys!4614 (_2!1325 lt!69358)) (_values!2848 (_2!1325 lt!69358)) (mask!7165 (_2!1325 lt!69358)) (extraKeys!2630 (_2!1325 lt!69358)) (zeroValue!2720 (_2!1325 lt!69358)) (minValue!2720 (_2!1325 lt!69358)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1325 lt!69358))))))

(declare-fun bs!5517 () Bool)

(assert (= bs!5517 d!40563))

(declare-fun m!157463 () Bool)

(assert (=> bs!5517 m!157463))

(assert (=> b!132765 d!40563))

(declare-fun b!133384 () Bool)

(declare-fun e!86918 () Option!178)

(assert (=> b!133384 (= e!86918 (getValueByKey!172 (t!6167 (toList!869 lt!69500)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133385 () Bool)

(assert (=> b!133385 (= e!86918 None!176)))

(declare-fun d!40565 () Bool)

(declare-fun c!24696 () Bool)

(assert (=> d!40565 (= c!24696 (and ((_ is Cons!1712) (toList!869 lt!69500)) (= (_1!1324 (h!2317 (toList!869 lt!69500))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!86917 () Option!178)

(assert (=> d!40565 (= (getValueByKey!172 (toList!869 lt!69500) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!86917)))

(declare-fun b!133382 () Bool)

(assert (=> b!133382 (= e!86917 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69500)))))))

(declare-fun b!133383 () Bool)

(assert (=> b!133383 (= e!86917 e!86918)))

(declare-fun c!24697 () Bool)

(assert (=> b!133383 (= c!24697 (and ((_ is Cons!1712) (toList!869 lt!69500)) (not (= (_1!1324 (h!2317 (toList!869 lt!69500))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!40565 c!24696) b!133382))

(assert (= (and d!40565 (not c!24696)) b!133383))

(assert (= (and b!133383 c!24697) b!133384))

(assert (= (and b!133383 (not c!24697)) b!133385))

(declare-fun m!157465 () Bool)

(assert (=> b!133384 m!157465))

(assert (=> b!132966 d!40565))

(declare-fun d!40567 () Bool)

(declare-fun isEmpty!411 (List!1716) Bool)

(assert (=> d!40567 (= (isEmpty!410 lt!69408) (isEmpty!411 (toList!869 lt!69408)))))

(declare-fun bs!5518 () Bool)

(assert (= bs!5518 d!40567))

(declare-fun m!157467 () Bool)

(assert (=> bs!5518 m!157467))

(assert (=> b!132831 d!40567))

(declare-fun d!40569 () Bool)

(declare-fun lt!69774 () Bool)

(assert (=> d!40569 (= lt!69774 (select (content!133 (toList!869 lt!69442)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun e!86920 () Bool)

(assert (=> d!40569 (= lt!69774 e!86920)))

(declare-fun res!64231 () Bool)

(assert (=> d!40569 (=> (not res!64231) (not e!86920))))

(assert (=> d!40569 (= res!64231 ((_ is Cons!1712) (toList!869 lt!69442)))))

(assert (=> d!40569 (= (contains!902 (toList!869 lt!69442) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69774)))

(declare-fun b!133386 () Bool)

(declare-fun e!86919 () Bool)

(assert (=> b!133386 (= e!86920 e!86919)))

(declare-fun res!64232 () Bool)

(assert (=> b!133386 (=> res!64232 e!86919)))

(assert (=> b!133386 (= res!64232 (= (h!2317 (toList!869 lt!69442)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133387 () Bool)

(assert (=> b!133387 (= e!86919 (contains!902 (t!6167 (toList!869 lt!69442)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!40569 res!64231) b!133386))

(assert (= (and b!133386 (not res!64232)) b!133387))

(declare-fun m!157469 () Bool)

(assert (=> d!40569 m!157469))

(declare-fun m!157471 () Bool)

(assert (=> d!40569 m!157471))

(declare-fun m!157473 () Bool)

(assert (=> b!133387 m!157473))

(assert (=> b!132893 d!40569))

(declare-fun d!40571 () Bool)

(assert (=> d!40571 (= (apply!116 lt!69486 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5519 () Bool)

(assert (= bs!5519 d!40571))

(declare-fun m!157475 () Bool)

(assert (=> bs!5519 m!157475))

(assert (=> bs!5519 m!157475))

(declare-fun m!157477 () Bool)

(assert (=> bs!5519 m!157477))

(assert (=> b!132947 d!40571))

(declare-fun d!40573 () Bool)

(declare-fun e!86921 () Bool)

(assert (=> d!40573 e!86921))

(declare-fun res!64233 () Bool)

(assert (=> d!40573 (=> res!64233 e!86921)))

(declare-fun lt!69778 () Bool)

(assert (=> d!40573 (= res!64233 (not lt!69778))))

(declare-fun lt!69775 () Bool)

(assert (=> d!40573 (= lt!69778 lt!69775)))

(declare-fun lt!69777 () Unit!4135)

(declare-fun e!86922 () Unit!4135)

(assert (=> d!40573 (= lt!69777 e!86922)))

(declare-fun c!24698 () Bool)

(assert (=> d!40573 (= c!24698 lt!69775)))

(assert (=> d!40573 (= lt!69775 (containsKey!176 (toList!869 lt!69442) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40573 (= (contains!899 lt!69442 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69778)))

(declare-fun b!133388 () Bool)

(declare-fun lt!69776 () Unit!4135)

(assert (=> b!133388 (= e!86922 lt!69776)))

(assert (=> b!133388 (= lt!69776 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69442) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> b!133388 (isDefined!125 (getValueByKey!172 (toList!869 lt!69442) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133389 () Bool)

(declare-fun Unit!4173 () Unit!4135)

(assert (=> b!133389 (= e!86922 Unit!4173)))

(declare-fun b!133390 () Bool)

(assert (=> b!133390 (= e!86921 (isDefined!125 (getValueByKey!172 (toList!869 lt!69442) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!40573 c!24698) b!133388))

(assert (= (and d!40573 (not c!24698)) b!133389))

(assert (= (and d!40573 (not res!64233)) b!133390))

(declare-fun m!157479 () Bool)

(assert (=> d!40573 m!157479))

(declare-fun m!157481 () Bool)

(assert (=> b!133388 m!157481))

(assert (=> b!133388 m!156505))

(assert (=> b!133388 m!156505))

(declare-fun m!157483 () Bool)

(assert (=> b!133388 m!157483))

(assert (=> b!133390 m!156505))

(assert (=> b!133390 m!156505))

(assert (=> b!133390 m!157483))

(assert (=> d!40297 d!40573))

(declare-fun b!133393 () Bool)

(declare-fun e!86924 () Option!178)

(assert (=> b!133393 (= e!86924 (getValueByKey!172 (t!6167 lt!69444) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133394 () Bool)

(assert (=> b!133394 (= e!86924 None!176)))

(declare-fun d!40575 () Bool)

(declare-fun c!24699 () Bool)

(assert (=> d!40575 (= c!24699 (and ((_ is Cons!1712) lt!69444) (= (_1!1324 (h!2317 lt!69444)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!86923 () Option!178)

(assert (=> d!40575 (= (getValueByKey!172 lt!69444 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!86923)))

(declare-fun b!133391 () Bool)

(assert (=> b!133391 (= e!86923 (Some!177 (_2!1324 (h!2317 lt!69444))))))

(declare-fun b!133392 () Bool)

(assert (=> b!133392 (= e!86923 e!86924)))

(declare-fun c!24700 () Bool)

(assert (=> b!133392 (= c!24700 (and ((_ is Cons!1712) lt!69444) (not (= (_1!1324 (h!2317 lt!69444)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!40575 c!24699) b!133391))

(assert (= (and d!40575 (not c!24699)) b!133392))

(assert (= (and b!133392 c!24700) b!133393))

(assert (= (and b!133392 (not c!24700)) b!133394))

(declare-fun m!157485 () Bool)

(assert (=> b!133393 m!157485))

(assert (=> d!40297 d!40575))

(declare-fun d!40577 () Bool)

(assert (=> d!40577 (= (getValueByKey!172 lt!69444 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun lt!69779 () Unit!4135)

(assert (=> d!40577 (= lt!69779 (choose!827 lt!69444 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun e!86925 () Bool)

(assert (=> d!40577 e!86925))

(declare-fun res!64234 () Bool)

(assert (=> d!40577 (=> (not res!64234) (not e!86925))))

(assert (=> d!40577 (= res!64234 (isStrictlySorted!322 lt!69444))))

(assert (=> d!40577 (= (lemmaContainsTupThenGetReturnValue!87 lt!69444 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69779)))

(declare-fun b!133395 () Bool)

(declare-fun res!64235 () Bool)

(assert (=> b!133395 (=> (not res!64235) (not e!86925))))

(assert (=> b!133395 (= res!64235 (containsKey!176 lt!69444 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133396 () Bool)

(assert (=> b!133396 (= e!86925 (contains!902 lt!69444 (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!40577 res!64234) b!133395))

(assert (= (and b!133395 res!64235) b!133396))

(assert (=> d!40577 m!156499))

(declare-fun m!157487 () Bool)

(assert (=> d!40577 m!157487))

(declare-fun m!157489 () Bool)

(assert (=> d!40577 m!157489))

(declare-fun m!157491 () Bool)

(assert (=> b!133395 m!157491))

(declare-fun m!157493 () Bool)

(assert (=> b!133396 m!157493))

(assert (=> d!40297 d!40577))

(declare-fun bm!14720 () Bool)

(declare-fun call!14724 () List!1716)

(declare-fun call!14725 () List!1716)

(assert (=> bm!14720 (= call!14724 call!14725)))

(declare-fun d!40579 () Bool)

(declare-fun e!86929 () Bool)

(assert (=> d!40579 e!86929))

(declare-fun res!64237 () Bool)

(assert (=> d!40579 (=> (not res!64237) (not e!86929))))

(declare-fun lt!69780 () List!1716)

(assert (=> d!40579 (= res!64237 (isStrictlySorted!322 lt!69780))))

(declare-fun e!86927 () List!1716)

(assert (=> d!40579 (= lt!69780 e!86927)))

(declare-fun c!24704 () Bool)

(assert (=> d!40579 (= c!24704 (and ((_ is Cons!1712) (toList!869 call!14544)) (bvslt (_1!1324 (h!2317 (toList!869 call!14544))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!40579 (isStrictlySorted!322 (toList!869 call!14544))))

(assert (=> d!40579 (= (insertStrictlySorted!90 (toList!869 call!14544) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69780)))

(declare-fun b!133397 () Bool)

(assert (=> b!133397 (= e!86929 (contains!902 lt!69780 (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!133398 () Bool)

(declare-fun c!24702 () Bool)

(assert (=> b!133398 (= c!24702 (and ((_ is Cons!1712) (toList!869 call!14544)) (bvsgt (_1!1324 (h!2317 (toList!869 call!14544))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!86928 () List!1716)

(declare-fun e!86930 () List!1716)

(assert (=> b!133398 (= e!86928 e!86930)))

(declare-fun b!133399 () Bool)

(declare-fun e!86926 () List!1716)

(assert (=> b!133399 (= e!86926 (insertStrictlySorted!90 (t!6167 (toList!869 call!14544)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133400 () Bool)

(assert (=> b!133400 (= e!86928 call!14724)))

(declare-fun b!133401 () Bool)

(declare-fun call!14723 () List!1716)

(assert (=> b!133401 (= e!86930 call!14723)))

(declare-fun c!24701 () Bool)

(declare-fun b!133402 () Bool)

(assert (=> b!133402 (= e!86926 (ite c!24701 (t!6167 (toList!869 call!14544)) (ite c!24702 (Cons!1712 (h!2317 (toList!869 call!14544)) (t!6167 (toList!869 call!14544))) Nil!1713)))))

(declare-fun b!133403 () Bool)

(assert (=> b!133403 (= e!86930 call!14723)))

(declare-fun b!133404 () Bool)

(assert (=> b!133404 (= e!86927 call!14725)))

(declare-fun bm!14721 () Bool)

(assert (=> bm!14721 (= call!14725 ($colon$colon!92 e!86926 (ite c!24704 (h!2317 (toList!869 call!14544)) (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun c!24703 () Bool)

(assert (=> bm!14721 (= c!24703 c!24704)))

(declare-fun bm!14722 () Bool)

(assert (=> bm!14722 (= call!14723 call!14724)))

(declare-fun b!133405 () Bool)

(declare-fun res!64236 () Bool)

(assert (=> b!133405 (=> (not res!64236) (not e!86929))))

(assert (=> b!133405 (= res!64236 (containsKey!176 lt!69780 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133406 () Bool)

(assert (=> b!133406 (= e!86927 e!86928)))

(assert (=> b!133406 (= c!24701 (and ((_ is Cons!1712) (toList!869 call!14544)) (= (_1!1324 (h!2317 (toList!869 call!14544))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!40579 c!24704) b!133404))

(assert (= (and d!40579 (not c!24704)) b!133406))

(assert (= (and b!133406 c!24701) b!133400))

(assert (= (and b!133406 (not c!24701)) b!133398))

(assert (= (and b!133398 c!24702) b!133401))

(assert (= (and b!133398 (not c!24702)) b!133403))

(assert (= (or b!133401 b!133403) bm!14722))

(assert (= (or b!133400 bm!14722) bm!14720))

(assert (= (or b!133404 bm!14720) bm!14721))

(assert (= (and bm!14721 c!24703) b!133399))

(assert (= (and bm!14721 (not c!24703)) b!133402))

(assert (= (and d!40579 res!64237) b!133405))

(assert (= (and b!133405 res!64236) b!133397))

(declare-fun m!157495 () Bool)

(assert (=> d!40579 m!157495))

(declare-fun m!157497 () Bool)

(assert (=> d!40579 m!157497))

(declare-fun m!157499 () Bool)

(assert (=> bm!14721 m!157499))

(declare-fun m!157501 () Bool)

(assert (=> b!133399 m!157501))

(declare-fun m!157503 () Bool)

(assert (=> b!133397 m!157503))

(declare-fun m!157505 () Bool)

(assert (=> b!133405 m!157505))

(assert (=> d!40297 d!40579))

(declare-fun d!40581 () Bool)

(assert (=> d!40581 (isDefined!125 (getValueByKey!172 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(declare-fun lt!69781 () Unit!4135)

(assert (=> d!40581 (= lt!69781 (choose!817 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(declare-fun e!86931 () Bool)

(assert (=> d!40581 e!86931))

(declare-fun res!64238 () Bool)

(assert (=> d!40581 (=> (not res!64238) (not e!86931))))

(assert (=> d!40581 (= res!64238 (isStrictlySorted!322 (toList!869 call!14604)))))

(assert (=> d!40581 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))) lt!69781)))

(declare-fun b!133407 () Bool)

(assert (=> b!133407 (= e!86931 (containsKey!176 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(assert (= (and d!40581 res!64238) b!133407))

(assert (=> d!40581 m!156111))

(assert (=> d!40581 m!156111))

(assert (=> d!40581 m!156113))

(declare-fun m!157507 () Bool)

(assert (=> d!40581 m!157507))

(declare-fun m!157509 () Bool)

(assert (=> d!40581 m!157509))

(assert (=> b!133407 m!156107))

(assert (=> b!132634 d!40581))

(declare-fun d!40583 () Bool)

(assert (=> d!40583 (= (isDefined!125 (getValueByKey!172 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))) (not (isEmpty!409 (getValueByKey!172 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))))

(declare-fun bs!5520 () Bool)

(assert (= bs!5520 d!40583))

(assert (=> bs!5520 m!156111))

(declare-fun m!157511 () Bool)

(assert (=> bs!5520 m!157511))

(assert (=> b!132634 d!40583))

(declare-fun e!86933 () Option!178)

(declare-fun b!133410 () Bool)

(assert (=> b!133410 (= e!86933 (getValueByKey!172 (t!6167 (toList!869 call!14604)) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(declare-fun b!133411 () Bool)

(assert (=> b!133411 (= e!86933 None!176)))

(declare-fun d!40585 () Bool)

(declare-fun c!24705 () Bool)

(assert (=> d!40585 (= c!24705 (and ((_ is Cons!1712) (toList!869 call!14604)) (= (_1!1324 (h!2317 (toList!869 call!14604))) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))))

(declare-fun e!86932 () Option!178)

(assert (=> d!40585 (= (getValueByKey!172 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))) e!86932)))

(declare-fun b!133408 () Bool)

(assert (=> b!133408 (= e!86932 (Some!177 (_2!1324 (h!2317 (toList!869 call!14604)))))))

(declare-fun b!133409 () Bool)

(assert (=> b!133409 (= e!86932 e!86933)))

(declare-fun c!24706 () Bool)

(assert (=> b!133409 (= c!24706 (and ((_ is Cons!1712) (toList!869 call!14604)) (not (= (_1!1324 (h!2317 (toList!869 call!14604))) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))))

(assert (= (and d!40585 c!24705) b!133408))

(assert (= (and d!40585 (not c!24705)) b!133409))

(assert (= (and b!133409 c!24706) b!133410))

(assert (= (and b!133409 (not c!24706)) b!133411))

(declare-fun m!157513 () Bool)

(assert (=> b!133410 m!157513))

(assert (=> b!132634 d!40585))

(declare-fun d!40587 () Bool)

(assert (=> d!40587 (= (apply!116 lt!69486 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5521 () Bool)

(assert (= bs!5521 d!40587))

(assert (=> bs!5521 m!157061))

(assert (=> bs!5521 m!157061))

(declare-fun m!157515 () Bool)

(assert (=> bs!5521 m!157515))

(assert (=> b!132942 d!40587))

(declare-fun b!133430 () Bool)

(declare-fun e!86947 () Bool)

(declare-fun e!86946 () Bool)

(assert (=> b!133430 (= e!86947 e!86946)))

(declare-fun res!64245 () Bool)

(declare-fun lt!69787 () SeekEntryResult!275)

(assert (=> b!133430 (= res!64245 (and ((_ is Intermediate!275) lt!69787) (not (undefined!1087 lt!69787)) (bvslt (x!15592 lt!69787) #b01111111111111111111111111111110) (bvsge (x!15592 lt!69787) #b00000000000000000000000000000000) (bvsge (x!15592 lt!69787) #b00000000000000000000000000000000)))))

(assert (=> b!133430 (=> (not res!64245) (not e!86946))))

(declare-fun b!133431 () Bool)

(assert (=> b!133431 (and (bvsge (index!3262 lt!69787) #b00000000000000000000000000000000) (bvslt (index!3262 lt!69787) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64246 () Bool)

(assert (=> b!133431 (= res!64246 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3262 lt!69787)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86944 () Bool)

(assert (=> b!133431 (=> res!64246 e!86944)))

(declare-fun b!133432 () Bool)

(declare-fun e!86948 () SeekEntryResult!275)

(declare-fun e!86945 () SeekEntryResult!275)

(assert (=> b!133432 (= e!86948 e!86945)))

(declare-fun lt!69786 () (_ BitVec 64))

(declare-fun c!24714 () Bool)

(assert (=> b!133432 (= c!24714 (or (= lt!69786 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (= (bvadd lt!69786 lt!69786) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133433 () Bool)

(assert (=> b!133433 (= e!86948 (Intermediate!275 true (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!133434 () Bool)

(assert (=> b!133434 (= e!86947 (bvsge (x!15592 lt!69787) #b01111111111111111111111111111110))))

(declare-fun b!133435 () Bool)

(assert (=> b!133435 (and (bvsge (index!3262 lt!69787) #b00000000000000000000000000000000) (bvslt (index!3262 lt!69787) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64247 () Bool)

(assert (=> b!133435 (= res!64247 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3262 lt!69787)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> b!133435 (=> res!64247 e!86944)))

(assert (=> b!133435 (= e!86946 e!86944)))

(declare-fun d!40589 () Bool)

(assert (=> d!40589 e!86947))

(declare-fun c!24713 () Bool)

(assert (=> d!40589 (= c!24713 (and ((_ is Intermediate!275) lt!69787) (undefined!1087 lt!69787)))))

(assert (=> d!40589 (= lt!69787 e!86948)))

(declare-fun c!24715 () Bool)

(assert (=> d!40589 (= c!24715 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!40589 (= lt!69786 (select (arr!2261 (_keys!4614 newMap!16)) (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (mask!7165 newMap!16))))))

(assert (=> d!40589 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40589 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (mask!7165 newMap!16)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!69787)))

(declare-fun b!133436 () Bool)

(assert (=> b!133436 (and (bvsge (index!3262 lt!69787) #b00000000000000000000000000000000) (bvslt (index!3262 lt!69787) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> b!133436 (= e!86944 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3262 lt!69787)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133437 () Bool)

(assert (=> b!133437 (= e!86945 (Intermediate!275 false (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!133438 () Bool)

(assert (=> b!133438 (= e!86945 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (= (and d!40589 c!24715) b!133433))

(assert (= (and d!40589 (not c!24715)) b!133432))

(assert (= (and b!133432 c!24714) b!133437))

(assert (= (and b!133432 (not c!24714)) b!133438))

(assert (= (and d!40589 c!24713) b!133434))

(assert (= (and d!40589 (not c!24713)) b!133430))

(assert (= (and b!133430 res!64245) b!133435))

(assert (= (and b!133435 (not res!64247)) b!133431))

(assert (= (and b!133431 (not res!64246)) b!133436))

(declare-fun m!157517 () Bool)

(assert (=> b!133435 m!157517))

(assert (=> d!40589 m!156469))

(declare-fun m!157519 () Bool)

(assert (=> d!40589 m!157519))

(assert (=> d!40589 m!156157))

(assert (=> b!133438 m!156469))

(declare-fun m!157521 () Bool)

(assert (=> b!133438 m!157521))

(assert (=> b!133438 m!157521))

(assert (=> b!133438 m!155869))

(declare-fun m!157523 () Bool)

(assert (=> b!133438 m!157523))

(assert (=> b!133436 m!157517))

(assert (=> b!133431 m!157517))

(assert (=> d!40289 d!40589))

(declare-fun d!40591 () Bool)

(declare-fun lt!69793 () (_ BitVec 32))

(declare-fun lt!69792 () (_ BitVec 32))

(assert (=> d!40591 (= lt!69793 (bvmul (bvxor lt!69792 (bvlshr lt!69792 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!40591 (= lt!69792 ((_ extract 31 0) (bvand (bvxor (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (bvlshr (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!40591 (and (bvsge (mask!7165 newMap!16) #b00000000000000000000000000000000) (let ((res!64248 (let ((h!2321 ((_ extract 31 0) (bvand (bvxor (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (bvlshr (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15696 (bvmul (bvxor h!2321 (bvlshr h!2321 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15696 (bvlshr x!15696 #b00000000000000000000000000001101)) (mask!7165 newMap!16)))))) (and (bvslt res!64248 (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001)) (bvsge res!64248 #b00000000000000000000000000000000))))))

(assert (=> d!40591 (= (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (mask!7165 newMap!16)) (bvand (bvxor lt!69793 (bvlshr lt!69793 #b00000000000000000000000000001101)) (mask!7165 newMap!16)))))

(assert (=> d!40289 d!40591))

(assert (=> d!40289 d!40325))

(assert (=> b!132698 d!40353))

(declare-fun d!40593 () Bool)

(declare-fun e!86949 () Bool)

(assert (=> d!40593 e!86949))

(declare-fun res!64249 () Bool)

(assert (=> d!40593 (=> res!64249 e!86949)))

(declare-fun lt!69797 () Bool)

(assert (=> d!40593 (= res!64249 (not lt!69797))))

(declare-fun lt!69794 () Bool)

(assert (=> d!40593 (= lt!69797 lt!69794)))

(declare-fun lt!69796 () Unit!4135)

(declare-fun e!86950 () Unit!4135)

(assert (=> d!40593 (= lt!69796 e!86950)))

(declare-fun c!24716 () Bool)

(assert (=> d!40593 (= c!24716 lt!69794)))

(assert (=> d!40593 (= lt!69794 (containsKey!176 (toList!869 lt!69464) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40593 (= (contains!899 lt!69464 #b1000000000000000000000000000000000000000000000000000000000000000) lt!69797)))

(declare-fun b!133439 () Bool)

(declare-fun lt!69795 () Unit!4135)

(assert (=> b!133439 (= e!86950 lt!69795)))

(assert (=> b!133439 (= lt!69795 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69464) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133439 (isDefined!125 (getValueByKey!172 (toList!869 lt!69464) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133440 () Bool)

(declare-fun Unit!4174 () Unit!4135)

(assert (=> b!133440 (= e!86950 Unit!4174)))

(declare-fun b!133441 () Bool)

(assert (=> b!133441 (= e!86949 (isDefined!125 (getValueByKey!172 (toList!869 lt!69464) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40593 c!24716) b!133439))

(assert (= (and d!40593 (not c!24716)) b!133440))

(assert (= (and d!40593 (not res!64249)) b!133441))

(declare-fun m!157525 () Bool)

(assert (=> d!40593 m!157525))

(declare-fun m!157527 () Bool)

(assert (=> b!133439 m!157527))

(declare-fun m!157529 () Bool)

(assert (=> b!133439 m!157529))

(assert (=> b!133439 m!157529))

(declare-fun m!157531 () Bool)

(assert (=> b!133439 m!157531))

(assert (=> b!133441 m!157529))

(assert (=> b!133441 m!157529))

(assert (=> b!133441 m!157531))

(assert (=> bm!14655 d!40593))

(declare-fun d!40595 () Bool)

(assert (=> d!40595 (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69491 #b00000000000000000000000000000000)))

(declare-fun lt!69798 () Unit!4135)

(assert (=> d!40595 (= lt!69798 (choose!13 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69491 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> d!40595 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!40595 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69491 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!69798)))

(declare-fun bs!5522 () Bool)

(assert (= bs!5522 d!40595))

(assert (=> bs!5522 m!156625))

(declare-fun m!157533 () Bool)

(assert (=> bs!5522 m!157533))

(assert (=> b!132953 d!40595))

(declare-fun d!40597 () Bool)

(declare-fun res!64250 () Bool)

(declare-fun e!86951 () Bool)

(assert (=> d!40597 (=> res!64250 e!86951)))

(assert (=> d!40597 (= res!64250 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) lt!69491))))

(assert (=> d!40597 (= (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69491 #b00000000000000000000000000000000) e!86951)))

(declare-fun b!133442 () Bool)

(declare-fun e!86952 () Bool)

(assert (=> b!133442 (= e!86951 e!86952)))

(declare-fun res!64251 () Bool)

(assert (=> b!133442 (=> (not res!64251) (not e!86952))))

(assert (=> b!133442 (= res!64251 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133443 () Bool)

(assert (=> b!133443 (= e!86952 (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69491 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40597 (not res!64250)) b!133442))

(assert (= (and b!133442 res!64251) b!133443))

(assert (=> d!40597 m!155999))

(declare-fun m!157535 () Bool)

(assert (=> b!133443 m!157535))

(assert (=> b!132953 d!40597))

(declare-fun b!133444 () Bool)

(declare-fun e!86953 () SeekEntryResult!275)

(declare-fun lt!69800 () SeekEntryResult!275)

(assert (=> b!133444 (= e!86953 (Found!275 (index!3262 lt!69800)))))

(declare-fun d!40599 () Bool)

(declare-fun lt!69801 () SeekEntryResult!275)

(assert (=> d!40599 (and (or ((_ is Undefined!275) lt!69801) (not ((_ is Found!275) lt!69801)) (and (bvsge (index!3261 lt!69801) #b00000000000000000000000000000000) (bvslt (index!3261 lt!69801) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))) (or ((_ is Undefined!275) lt!69801) ((_ is Found!275) lt!69801) (not ((_ is MissingZero!275) lt!69801)) (and (bvsge (index!3260 lt!69801) #b00000000000000000000000000000000) (bvslt (index!3260 lt!69801) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))) (or ((_ is Undefined!275) lt!69801) ((_ is Found!275) lt!69801) ((_ is MissingZero!275) lt!69801) (not ((_ is MissingVacant!275) lt!69801)) (and (bvsge (index!3263 lt!69801) #b00000000000000000000000000000000) (bvslt (index!3263 lt!69801) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))) (or ((_ is Undefined!275) lt!69801) (ite ((_ is Found!275) lt!69801) (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3261 lt!69801)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!275) lt!69801) (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3260 lt!69801)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!275) lt!69801) (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3263 lt!69801)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!86954 () SeekEntryResult!275)

(assert (=> d!40599 (= lt!69801 e!86954)))

(declare-fun c!24718 () Bool)

(assert (=> d!40599 (= c!24718 (and ((_ is Intermediate!275) lt!69800) (undefined!1087 lt!69800)))))

(assert (=> d!40599 (= lt!69800 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(assert (=> d!40599 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!40599 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) lt!69801)))

(declare-fun b!133445 () Bool)

(assert (=> b!133445 (= e!86954 e!86953)))

(declare-fun lt!69799 () (_ BitVec 64))

(assert (=> b!133445 (= lt!69799 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!69800)))))

(declare-fun c!24717 () Bool)

(assert (=> b!133445 (= c!24717 (= lt!69799 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133446 () Bool)

(declare-fun e!86955 () SeekEntryResult!275)

(assert (=> b!133446 (= e!86955 (MissingZero!275 (index!3262 lt!69800)))))

(declare-fun b!133447 () Bool)

(declare-fun c!24719 () Bool)

(assert (=> b!133447 (= c!24719 (= lt!69799 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133447 (= e!86953 e!86955)))

(declare-fun b!133448 () Bool)

(assert (=> b!133448 (= e!86954 Undefined!275)))

(declare-fun b!133449 () Bool)

(assert (=> b!133449 (= e!86955 (seekKeyOrZeroReturnVacant!0 (x!15592 lt!69800) (index!3262 lt!69800) (index!3262 lt!69800) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(assert (= (and d!40599 c!24718) b!133448))

(assert (= (and d!40599 (not c!24718)) b!133445))

(assert (= (and b!133445 c!24717) b!133444))

(assert (= (and b!133445 (not c!24717)) b!133447))

(assert (= (and b!133447 c!24719) b!133446))

(assert (= (and b!133447 (not c!24719)) b!133449))

(declare-fun m!157537 () Bool)

(assert (=> d!40599 m!157537))

(declare-fun m!157539 () Bool)

(assert (=> d!40599 m!157539))

(assert (=> d!40599 m!156619))

(declare-fun m!157541 () Bool)

(assert (=> d!40599 m!157541))

(assert (=> d!40599 m!156619))

(assert (=> d!40599 m!157539))

(assert (=> d!40599 m!155867))

(declare-fun m!157543 () Bool)

(assert (=> d!40599 m!157543))

(declare-fun m!157545 () Bool)

(assert (=> d!40599 m!157545))

(declare-fun m!157547 () Bool)

(assert (=> b!133445 m!157547))

(assert (=> b!133449 m!156619))

(declare-fun m!157549 () Bool)

(assert (=> b!133449 m!157549))

(assert (=> b!132953 d!40599))

(declare-fun d!40601 () Bool)

(declare-fun e!86956 () Bool)

(assert (=> d!40601 e!86956))

(declare-fun res!64252 () Bool)

(assert (=> d!40601 (=> res!64252 e!86956)))

(declare-fun lt!69805 () Bool)

(assert (=> d!40601 (= res!64252 (not lt!69805))))

(declare-fun lt!69802 () Bool)

(assert (=> d!40601 (= lt!69805 lt!69802)))

(declare-fun lt!69804 () Unit!4135)

(declare-fun e!86957 () Unit!4135)

(assert (=> d!40601 (= lt!69804 e!86957)))

(declare-fun c!24720 () Bool)

(assert (=> d!40601 (= c!24720 lt!69802)))

(assert (=> d!40601 (= lt!69802 (containsKey!176 (toList!869 lt!69385) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40601 (= (contains!899 lt!69385 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69805)))

(declare-fun b!133450 () Bool)

(declare-fun lt!69803 () Unit!4135)

(assert (=> b!133450 (= e!86957 lt!69803)))

(assert (=> b!133450 (= lt!69803 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69385) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> b!133450 (isDefined!125 (getValueByKey!172 (toList!869 lt!69385) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133451 () Bool)

(declare-fun Unit!4175 () Unit!4135)

(assert (=> b!133451 (= e!86957 Unit!4175)))

(declare-fun b!133452 () Bool)

(assert (=> b!133452 (= e!86956 (isDefined!125 (getValueByKey!172 (toList!869 lt!69385) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!40601 c!24720) b!133450))

(assert (= (and d!40601 (not c!24720)) b!133451))

(assert (= (and d!40601 (not res!64252)) b!133452))

(declare-fun m!157551 () Bool)

(assert (=> d!40601 m!157551))

(declare-fun m!157553 () Bool)

(assert (=> b!133450 m!157553))

(assert (=> b!133450 m!156371))

(assert (=> b!133450 m!156371))

(declare-fun m!157555 () Bool)

(assert (=> b!133450 m!157555))

(assert (=> b!133452 m!156371))

(assert (=> b!133452 m!156371))

(assert (=> b!133452 m!157555))

(assert (=> d!40261 d!40601))

(declare-fun e!86959 () Option!178)

(declare-fun b!133455 () Bool)

(assert (=> b!133455 (= e!86959 (getValueByKey!172 (t!6167 lt!69387) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133456 () Bool)

(assert (=> b!133456 (= e!86959 None!176)))

(declare-fun d!40603 () Bool)

(declare-fun c!24721 () Bool)

(assert (=> d!40603 (= c!24721 (and ((_ is Cons!1712) lt!69387) (= (_1!1324 (h!2317 lt!69387)) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!86958 () Option!178)

(assert (=> d!40603 (= (getValueByKey!172 lt!69387 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!86958)))

(declare-fun b!133453 () Bool)

(assert (=> b!133453 (= e!86958 (Some!177 (_2!1324 (h!2317 lt!69387))))))

(declare-fun b!133454 () Bool)

(assert (=> b!133454 (= e!86958 e!86959)))

(declare-fun c!24722 () Bool)

(assert (=> b!133454 (= c!24722 (and ((_ is Cons!1712) lt!69387) (not (= (_1!1324 (h!2317 lt!69387)) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!40603 c!24721) b!133453))

(assert (= (and d!40603 (not c!24721)) b!133454))

(assert (= (and b!133454 c!24722) b!133455))

(assert (= (and b!133454 (not c!24722)) b!133456))

(declare-fun m!157557 () Bool)

(assert (=> b!133455 m!157557))

(assert (=> d!40261 d!40603))

(declare-fun d!40605 () Bool)

(assert (=> d!40605 (= (getValueByKey!172 lt!69387 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun lt!69806 () Unit!4135)

(assert (=> d!40605 (= lt!69806 (choose!827 lt!69387 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun e!86960 () Bool)

(assert (=> d!40605 e!86960))

(declare-fun res!64253 () Bool)

(assert (=> d!40605 (=> (not res!64253) (not e!86960))))

(assert (=> d!40605 (= res!64253 (isStrictlySorted!322 lt!69387))))

(assert (=> d!40605 (= (lemmaContainsTupThenGetReturnValue!87 lt!69387 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69806)))

(declare-fun b!133457 () Bool)

(declare-fun res!64254 () Bool)

(assert (=> b!133457 (=> (not res!64254) (not e!86960))))

(assert (=> b!133457 (= res!64254 (containsKey!176 lt!69387 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133458 () Bool)

(assert (=> b!133458 (= e!86960 (contains!902 lt!69387 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!40605 res!64253) b!133457))

(assert (= (and b!133457 res!64254) b!133458))

(assert (=> d!40605 m!156365))

(declare-fun m!157559 () Bool)

(assert (=> d!40605 m!157559))

(declare-fun m!157561 () Bool)

(assert (=> d!40605 m!157561))

(declare-fun m!157563 () Bool)

(assert (=> b!133457 m!157563))

(declare-fun m!157565 () Bool)

(assert (=> b!133458 m!157565))

(assert (=> d!40261 d!40605))

(declare-fun bm!14723 () Bool)

(declare-fun call!14727 () List!1716)

(declare-fun call!14728 () List!1716)

(assert (=> bm!14723 (= call!14727 call!14728)))

(declare-fun d!40607 () Bool)

(declare-fun e!86964 () Bool)

(assert (=> d!40607 e!86964))

(declare-fun res!64256 () Bool)

(assert (=> d!40607 (=> (not res!64256) (not e!86964))))

(declare-fun lt!69807 () List!1716)

(assert (=> d!40607 (= res!64256 (isStrictlySorted!322 lt!69807))))

(declare-fun e!86962 () List!1716)

(assert (=> d!40607 (= lt!69807 e!86962)))

(declare-fun c!24726 () Bool)

(assert (=> d!40607 (= c!24726 (and ((_ is Cons!1712) (toList!869 lt!69079)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69079))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!40607 (isStrictlySorted!322 (toList!869 lt!69079))))

(assert (=> d!40607 (= (insertStrictlySorted!90 (toList!869 lt!69079) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69807)))

(declare-fun b!133459 () Bool)

(assert (=> b!133459 (= e!86964 (contains!902 lt!69807 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun c!24724 () Bool)

(declare-fun b!133460 () Bool)

(assert (=> b!133460 (= c!24724 (and ((_ is Cons!1712) (toList!869 lt!69079)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69079))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!86963 () List!1716)

(declare-fun e!86965 () List!1716)

(assert (=> b!133460 (= e!86963 e!86965)))

(declare-fun b!133461 () Bool)

(declare-fun e!86961 () List!1716)

(assert (=> b!133461 (= e!86961 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69079)) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133462 () Bool)

(assert (=> b!133462 (= e!86963 call!14727)))

(declare-fun b!133463 () Bool)

(declare-fun call!14726 () List!1716)

(assert (=> b!133463 (= e!86965 call!14726)))

(declare-fun b!133464 () Bool)

(declare-fun c!24723 () Bool)

(assert (=> b!133464 (= e!86961 (ite c!24723 (t!6167 (toList!869 lt!69079)) (ite c!24724 (Cons!1712 (h!2317 (toList!869 lt!69079)) (t!6167 (toList!869 lt!69079))) Nil!1713)))))

(declare-fun b!133465 () Bool)

(assert (=> b!133465 (= e!86965 call!14726)))

(declare-fun b!133466 () Bool)

(assert (=> b!133466 (= e!86962 call!14728)))

(declare-fun bm!14724 () Bool)

(assert (=> bm!14724 (= call!14728 ($colon$colon!92 e!86961 (ite c!24726 (h!2317 (toList!869 lt!69079)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun c!24725 () Bool)

(assert (=> bm!14724 (= c!24725 c!24726)))

(declare-fun bm!14725 () Bool)

(assert (=> bm!14725 (= call!14726 call!14727)))

(declare-fun b!133467 () Bool)

(declare-fun res!64255 () Bool)

(assert (=> b!133467 (=> (not res!64255) (not e!86964))))

(assert (=> b!133467 (= res!64255 (containsKey!176 lt!69807 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133468 () Bool)

(assert (=> b!133468 (= e!86962 e!86963)))

(assert (=> b!133468 (= c!24723 (and ((_ is Cons!1712) (toList!869 lt!69079)) (= (_1!1324 (h!2317 (toList!869 lt!69079))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!40607 c!24726) b!133466))

(assert (= (and d!40607 (not c!24726)) b!133468))

(assert (= (and b!133468 c!24723) b!133462))

(assert (= (and b!133468 (not c!24723)) b!133460))

(assert (= (and b!133460 c!24724) b!133463))

(assert (= (and b!133460 (not c!24724)) b!133465))

(assert (= (or b!133463 b!133465) bm!14725))

(assert (= (or b!133462 bm!14725) bm!14723))

(assert (= (or b!133466 bm!14723) bm!14724))

(assert (= (and bm!14724 c!24725) b!133461))

(assert (= (and bm!14724 (not c!24725)) b!133464))

(assert (= (and d!40607 res!64256) b!133467))

(assert (= (and b!133467 res!64255) b!133459))

(declare-fun m!157567 () Bool)

(assert (=> d!40607 m!157567))

(declare-fun m!157569 () Bool)

(assert (=> d!40607 m!157569))

(declare-fun m!157571 () Bool)

(assert (=> bm!14724 m!157571))

(declare-fun m!157573 () Bool)

(assert (=> b!133461 m!157573))

(declare-fun m!157575 () Bool)

(assert (=> b!133459 m!157575))

(declare-fun m!157577 () Bool)

(assert (=> b!133467 m!157577))

(assert (=> d!40261 d!40607))

(declare-fun d!40609 () Bool)

(declare-fun res!64257 () Bool)

(declare-fun e!86966 () Bool)

(assert (=> d!40609 (=> (not res!64257) (not e!86966))))

(assert (=> d!40609 (= res!64257 (simpleValid!92 (_2!1325 lt!69358)))))

(assert (=> d!40609 (= (valid!524 (_2!1325 lt!69358)) e!86966)))

(declare-fun b!133469 () Bool)

(declare-fun res!64258 () Bool)

(assert (=> b!133469 (=> (not res!64258) (not e!86966))))

(assert (=> b!133469 (= res!64258 (= (arrayCountValidKeys!0 (_keys!4614 (_2!1325 lt!69358)) #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69358)))) (_size!598 (_2!1325 lt!69358))))))

(declare-fun b!133470 () Bool)

(declare-fun res!64259 () Bool)

(assert (=> b!133470 (=> (not res!64259) (not e!86966))))

(assert (=> b!133470 (= res!64259 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 (_2!1325 lt!69358)) (mask!7165 (_2!1325 lt!69358))))))

(declare-fun b!133471 () Bool)

(assert (=> b!133471 (= e!86966 (arrayNoDuplicates!0 (_keys!4614 (_2!1325 lt!69358)) #b00000000000000000000000000000000 Nil!1714))))

(assert (= (and d!40609 res!64257) b!133469))

(assert (= (and b!133469 res!64258) b!133470))

(assert (= (and b!133470 res!64259) b!133471))

(declare-fun m!157579 () Bool)

(assert (=> d!40609 m!157579))

(declare-fun m!157581 () Bool)

(assert (=> b!133469 m!157581))

(declare-fun m!157583 () Bool)

(assert (=> b!133470 m!157583))

(declare-fun m!157585 () Bool)

(assert (=> b!133471 m!157585))

(assert (=> b!132781 d!40609))

(declare-fun bm!14726 () Bool)

(declare-fun call!14729 () Bool)

(declare-fun c!24727 () Bool)

(assert (=> bm!14726 (= call!14729 (arrayNoDuplicates!0 (_keys!4614 (_2!1325 lt!69179)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24727 (Cons!1713 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)))))

(declare-fun b!133472 () Bool)

(declare-fun e!86970 () Bool)

(declare-fun e!86967 () Bool)

(assert (=> b!133472 (= e!86970 e!86967)))

(assert (=> b!133472 (= c!24727 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(declare-fun b!133473 () Bool)

(declare-fun e!86968 () Bool)

(assert (=> b!133473 (= e!86968 (contains!901 Nil!1714 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(declare-fun b!133474 () Bool)

(assert (=> b!133474 (= e!86967 call!14729)))

(declare-fun b!133475 () Bool)

(declare-fun e!86969 () Bool)

(assert (=> b!133475 (= e!86969 e!86970)))

(declare-fun res!64262 () Bool)

(assert (=> b!133475 (=> (not res!64262) (not e!86970))))

(assert (=> b!133475 (= res!64262 (not e!86968))))

(declare-fun res!64261 () Bool)

(assert (=> b!133475 (=> (not res!64261) (not e!86968))))

(assert (=> b!133475 (= res!64261 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(declare-fun b!133476 () Bool)

(assert (=> b!133476 (= e!86967 call!14729)))

(declare-fun d!40611 () Bool)

(declare-fun res!64260 () Bool)

(assert (=> d!40611 (=> res!64260 e!86969)))

(assert (=> d!40611 (= res!64260 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(assert (=> d!40611 (= (arrayNoDuplicates!0 (_keys!4614 (_2!1325 lt!69179)) #b00000000000000000000000000000000 Nil!1714) e!86969)))

(assert (= (and d!40611 (not res!64260)) b!133475))

(assert (= (and b!133475 res!64261) b!133473))

(assert (= (and b!133475 res!64262) b!133472))

(assert (= (and b!133472 c!24727) b!133474))

(assert (= (and b!133472 (not c!24727)) b!133476))

(assert (= (or b!133474 b!133476) bm!14726))

(declare-fun m!157587 () Bool)

(assert (=> bm!14726 m!157587))

(declare-fun m!157589 () Bool)

(assert (=> bm!14726 m!157589))

(assert (=> b!133472 m!157587))

(assert (=> b!133472 m!157587))

(declare-fun m!157591 () Bool)

(assert (=> b!133472 m!157591))

(assert (=> b!133473 m!157587))

(assert (=> b!133473 m!157587))

(declare-fun m!157593 () Bool)

(assert (=> b!133473 m!157593))

(assert (=> b!133475 m!157587))

(assert (=> b!133475 m!157587))

(assert (=> b!133475 m!157591))

(assert (=> b!132793 d!40611))

(declare-fun b!133479 () Bool)

(declare-fun e!86972 () Option!178)

(assert (=> b!133479 (= e!86972 (getValueByKey!172 (t!6167 (toList!869 lt!69422)) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133480 () Bool)

(assert (=> b!133480 (= e!86972 None!176)))

(declare-fun d!40613 () Bool)

(declare-fun c!24728 () Bool)

(assert (=> d!40613 (= c!24728 (and ((_ is Cons!1712) (toList!869 lt!69422)) (= (_1!1324 (h!2317 (toList!869 lt!69422))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!86971 () Option!178)

(assert (=> d!40613 (= (getValueByKey!172 (toList!869 lt!69422) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!86971)))

(declare-fun b!133477 () Bool)

(assert (=> b!133477 (= e!86971 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69422)))))))

(declare-fun b!133478 () Bool)

(assert (=> b!133478 (= e!86971 e!86972)))

(declare-fun c!24729 () Bool)

(assert (=> b!133478 (= c!24729 (and ((_ is Cons!1712) (toList!869 lt!69422)) (not (= (_1!1324 (h!2317 (toList!869 lt!69422))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(assert (= (and d!40613 c!24728) b!133477))

(assert (= (and d!40613 (not c!24728)) b!133478))

(assert (= (and b!133478 c!24729) b!133479))

(assert (= (and b!133478 (not c!24729)) b!133480))

(declare-fun m!157595 () Bool)

(assert (=> b!133479 m!157595))

(assert (=> b!132848 d!40613))

(assert (=> bm!14666 d!40501))

(declare-fun b!133481 () Bool)

(declare-fun e!86974 () (_ BitVec 32))

(declare-fun e!86973 () (_ BitVec 32))

(assert (=> b!133481 (= e!86974 e!86973)))

(declare-fun c!24730 () Bool)

(assert (=> b!133481 (= c!24730 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!133482 () Bool)

(declare-fun call!14730 () (_ BitVec 32))

(assert (=> b!133482 (= e!86973 (bvadd #b00000000000000000000000000000001 call!14730))))

(declare-fun b!133483 () Bool)

(assert (=> b!133483 (= e!86973 call!14730)))

(declare-fun d!40615 () Bool)

(declare-fun lt!69808 () (_ BitVec 32))

(assert (=> d!40615 (and (bvsge lt!69808 #b00000000000000000000000000000000) (bvsle lt!69808 (bvsub (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!40615 (= lt!69808 e!86974)))

(declare-fun c!24731 () Bool)

(assert (=> d!40615 (= c!24731 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!40615 (and (bvsle #b00000000000000000000000000000000 (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!40615 (= (arrayCountValidKeys!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000000 (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))) lt!69808)))

(declare-fun b!133484 () Bool)

(assert (=> b!133484 (= e!86974 #b00000000000000000000000000000000)))

(declare-fun bm!14727 () Bool)

(assert (=> bm!14727 (= call!14730 (arrayCountValidKeys!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!40615 c!24731) b!133484))

(assert (= (and d!40615 (not c!24731)) b!133481))

(assert (= (and b!133481 c!24730) b!133482))

(assert (= (and b!133481 (not c!24730)) b!133483))

(assert (= (or b!133482 b!133483) bm!14727))

(assert (=> b!133481 m!155999))

(assert (=> b!133481 m!155999))

(assert (=> b!133481 m!156001))

(declare-fun m!157597 () Bool)

(assert (=> bm!14727 m!157597))

(assert (=> b!132850 d!40615))

(declare-fun d!40617 () Bool)

(assert (=> d!40617 (= (get!1486 (getValueByKey!172 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3203 (getValueByKey!172 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!40205 d!40617))

(assert (=> d!40205 d!40329))

(declare-fun d!40619 () Bool)

(assert (=> d!40619 (= (apply!116 lt!69464 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69464) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5523 () Bool)

(assert (= bs!5523 d!40619))

(assert (=> bs!5523 m!157529))

(assert (=> bs!5523 m!157529))

(declare-fun m!157599 () Bool)

(assert (=> bs!5523 m!157599))

(assert (=> b!132914 d!40619))

(declare-fun d!40621 () Bool)

(declare-fun lt!69809 () Bool)

(assert (=> d!40621 (= lt!69809 (select (content!132 Nil!1714) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!86975 () Bool)

(assert (=> d!40621 (= lt!69809 e!86975)))

(declare-fun res!64263 () Bool)

(assert (=> d!40621 (=> (not res!64263) (not e!86975))))

(assert (=> d!40621 (= res!64263 ((_ is Cons!1713) Nil!1714))))

(assert (=> d!40621 (= (contains!901 Nil!1714 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!69809)))

(declare-fun b!133485 () Bool)

(declare-fun e!86976 () Bool)

(assert (=> b!133485 (= e!86975 e!86976)))

(declare-fun res!64264 () Bool)

(assert (=> b!133485 (=> res!64264 e!86976)))

(assert (=> b!133485 (= res!64264 (= (h!2318 Nil!1714) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133486 () Bool)

(assert (=> b!133486 (= e!86976 (contains!901 (t!6168 Nil!1714) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!40621 res!64263) b!133485))

(assert (= (and b!133485 (not res!64264)) b!133486))

(assert (=> d!40621 m!156131))

(assert (=> d!40621 m!156163))

(declare-fun m!157601 () Bool)

(assert (=> d!40621 m!157601))

(assert (=> b!133486 m!156163))

(declare-fun m!157603 () Bool)

(assert (=> b!133486 m!157603))

(assert (=> b!132724 d!40621))

(declare-fun d!40623 () Bool)

(declare-fun e!86977 () Bool)

(assert (=> d!40623 e!86977))

(declare-fun res!64265 () Bool)

(assert (=> d!40623 (=> res!64265 e!86977)))

(declare-fun lt!69813 () Bool)

(assert (=> d!40623 (= res!64265 (not lt!69813))))

(declare-fun lt!69810 () Bool)

(assert (=> d!40623 (= lt!69813 lt!69810)))

(declare-fun lt!69812 () Unit!4135)

(declare-fun e!86978 () Unit!4135)

(assert (=> d!40623 (= lt!69812 e!86978)))

(declare-fun c!24732 () Bool)

(assert (=> d!40623 (= c!24732 lt!69810)))

(assert (=> d!40623 (= lt!69810 (containsKey!176 (toList!869 lt!69408) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!40623 (= (contains!899 lt!69408 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!69813)))

(declare-fun b!133487 () Bool)

(declare-fun lt!69811 () Unit!4135)

(assert (=> b!133487 (= e!86978 lt!69811)))

(assert (=> b!133487 (= lt!69811 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69408) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!133487 (isDefined!125 (getValueByKey!172 (toList!869 lt!69408) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!133488 () Bool)

(declare-fun Unit!4176 () Unit!4135)

(assert (=> b!133488 (= e!86978 Unit!4176)))

(declare-fun b!133489 () Bool)

(assert (=> b!133489 (= e!86977 (isDefined!125 (getValueByKey!172 (toList!869 lt!69408) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!40623 c!24732) b!133487))

(assert (= (and d!40623 (not c!24732)) b!133488))

(assert (= (and d!40623 (not res!64265)) b!133489))

(assert (=> d!40623 m!155949))

(declare-fun m!157605 () Bool)

(assert (=> d!40623 m!157605))

(assert (=> b!133487 m!155949))

(declare-fun m!157607 () Bool)

(assert (=> b!133487 m!157607))

(assert (=> b!133487 m!155949))

(assert (=> b!133487 m!156681))

(assert (=> b!133487 m!156681))

(declare-fun m!157609 () Bool)

(assert (=> b!133487 m!157609))

(assert (=> b!133489 m!155949))

(assert (=> b!133489 m!156681))

(assert (=> b!133489 m!156681))

(assert (=> b!133489 m!157609))

(assert (=> b!132838 d!40623))

(declare-fun d!40625 () Bool)

(declare-fun e!86979 () Bool)

(assert (=> d!40625 e!86979))

(declare-fun res!64266 () Bool)

(assert (=> d!40625 (=> res!64266 e!86979)))

(declare-fun lt!69817 () Bool)

(assert (=> d!40625 (= res!64266 (not lt!69817))))

(declare-fun lt!69814 () Bool)

(assert (=> d!40625 (= lt!69817 lt!69814)))

(declare-fun lt!69816 () Unit!4135)

(declare-fun e!86980 () Unit!4135)

(assert (=> d!40625 (= lt!69816 e!86980)))

(declare-fun c!24733 () Bool)

(assert (=> d!40625 (= c!24733 lt!69814)))

(assert (=> d!40625 (= lt!69814 (containsKey!176 (toList!869 lt!69422) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40625 (= (contains!899 lt!69422 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!69817)))

(declare-fun b!133490 () Bool)

(declare-fun lt!69815 () Unit!4135)

(assert (=> b!133490 (= e!86980 lt!69815)))

(assert (=> b!133490 (= lt!69815 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69422) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!133490 (isDefined!125 (getValueByKey!172 (toList!869 lt!69422) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133491 () Bool)

(declare-fun Unit!4177 () Unit!4135)

(assert (=> b!133491 (= e!86980 Unit!4177)))

(declare-fun b!133492 () Bool)

(assert (=> b!133492 (= e!86979 (isDefined!125 (getValueByKey!172 (toList!869 lt!69422) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!40625 c!24733) b!133490))

(assert (= (and d!40625 (not c!24733)) b!133491))

(assert (= (and d!40625 (not res!64266)) b!133492))

(declare-fun m!157611 () Bool)

(assert (=> d!40625 m!157611))

(declare-fun m!157613 () Bool)

(assert (=> b!133490 m!157613))

(assert (=> b!133490 m!156447))

(assert (=> b!133490 m!156447))

(declare-fun m!157615 () Bool)

(assert (=> b!133490 m!157615))

(assert (=> b!133492 m!156447))

(assert (=> b!133492 m!156447))

(assert (=> b!133492 m!157615))

(assert (=> d!40279 d!40625))

(declare-fun b!133495 () Bool)

(declare-fun e!86982 () Option!178)

(assert (=> b!133495 (= e!86982 (getValueByKey!172 (t!6167 lt!69424) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133496 () Bool)

(assert (=> b!133496 (= e!86982 None!176)))

(declare-fun c!24734 () Bool)

(declare-fun d!40627 () Bool)

(assert (=> d!40627 (= c!24734 (and ((_ is Cons!1712) lt!69424) (= (_1!1324 (h!2317 lt!69424)) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!86981 () Option!178)

(assert (=> d!40627 (= (getValueByKey!172 lt!69424 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!86981)))

(declare-fun b!133493 () Bool)

(assert (=> b!133493 (= e!86981 (Some!177 (_2!1324 (h!2317 lt!69424))))))

(declare-fun b!133494 () Bool)

(assert (=> b!133494 (= e!86981 e!86982)))

(declare-fun c!24735 () Bool)

(assert (=> b!133494 (= c!24735 (and ((_ is Cons!1712) lt!69424) (not (= (_1!1324 (h!2317 lt!69424)) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(assert (= (and d!40627 c!24734) b!133493))

(assert (= (and d!40627 (not c!24734)) b!133494))

(assert (= (and b!133494 c!24735) b!133495))

(assert (= (and b!133494 (not c!24735)) b!133496))

(declare-fun m!157617 () Bool)

(assert (=> b!133495 m!157617))

(assert (=> d!40279 d!40627))

(declare-fun d!40629 () Bool)

(assert (=> d!40629 (= (getValueByKey!172 lt!69424 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!177 (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!69818 () Unit!4135)

(assert (=> d!40629 (= lt!69818 (choose!827 lt!69424 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!86983 () Bool)

(assert (=> d!40629 e!86983))

(declare-fun res!64267 () Bool)

(assert (=> d!40629 (=> (not res!64267) (not e!86983))))

(assert (=> d!40629 (= res!64267 (isStrictlySorted!322 lt!69424))))

(assert (=> d!40629 (= (lemmaContainsTupThenGetReturnValue!87 lt!69424 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!69818)))

(declare-fun b!133497 () Bool)

(declare-fun res!64268 () Bool)

(assert (=> b!133497 (=> (not res!64268) (not e!86983))))

(assert (=> b!133497 (= res!64268 (containsKey!176 lt!69424 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133498 () Bool)

(assert (=> b!133498 (= e!86983 (contains!902 lt!69424 (tuple2!2627 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!40629 res!64267) b!133497))

(assert (= (and b!133497 res!64268) b!133498))

(assert (=> d!40629 m!156441))

(declare-fun m!157619 () Bool)

(assert (=> d!40629 m!157619))

(declare-fun m!157621 () Bool)

(assert (=> d!40629 m!157621))

(declare-fun m!157623 () Bool)

(assert (=> b!133497 m!157623))

(declare-fun m!157625 () Bool)

(assert (=> b!133498 m!157625))

(assert (=> d!40279 d!40629))

(declare-fun bm!14728 () Bool)

(declare-fun call!14732 () List!1716)

(declare-fun call!14733 () List!1716)

(assert (=> bm!14728 (= call!14732 call!14733)))

(declare-fun d!40631 () Bool)

(declare-fun e!86987 () Bool)

(assert (=> d!40631 e!86987))

(declare-fun res!64270 () Bool)

(assert (=> d!40631 (=> (not res!64270) (not e!86987))))

(declare-fun lt!69819 () List!1716)

(assert (=> d!40631 (= res!64270 (isStrictlySorted!322 lt!69819))))

(declare-fun e!86985 () List!1716)

(assert (=> d!40631 (= lt!69819 e!86985)))

(declare-fun c!24739 () Bool)

(assert (=> d!40631 (= c!24739 (and ((_ is Cons!1712) (toList!869 e!86455)) (bvslt (_1!1324 (h!2317 (toList!869 e!86455))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!40631 (isStrictlySorted!322 (toList!869 e!86455))))

(assert (=> d!40631 (= (insertStrictlySorted!90 (toList!869 e!86455) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!69819)))

(declare-fun b!133499 () Bool)

(assert (=> b!133499 (= e!86987 (contains!902 lt!69819 (tuple2!2627 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!133500 () Bool)

(declare-fun c!24737 () Bool)

(assert (=> b!133500 (= c!24737 (and ((_ is Cons!1712) (toList!869 e!86455)) (bvsgt (_1!1324 (h!2317 (toList!869 e!86455))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!86986 () List!1716)

(declare-fun e!86988 () List!1716)

(assert (=> b!133500 (= e!86986 e!86988)))

(declare-fun e!86984 () List!1716)

(declare-fun b!133501 () Bool)

(assert (=> b!133501 (= e!86984 (insertStrictlySorted!90 (t!6167 (toList!869 e!86455)) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133502 () Bool)

(assert (=> b!133502 (= e!86986 call!14732)))

(declare-fun b!133503 () Bool)

(declare-fun call!14731 () List!1716)

(assert (=> b!133503 (= e!86988 call!14731)))

(declare-fun c!24736 () Bool)

(declare-fun b!133504 () Bool)

(assert (=> b!133504 (= e!86984 (ite c!24736 (t!6167 (toList!869 e!86455)) (ite c!24737 (Cons!1712 (h!2317 (toList!869 e!86455)) (t!6167 (toList!869 e!86455))) Nil!1713)))))

(declare-fun b!133505 () Bool)

(assert (=> b!133505 (= e!86988 call!14731)))

(declare-fun b!133506 () Bool)

(assert (=> b!133506 (= e!86985 call!14733)))

(declare-fun bm!14729 () Bool)

(assert (=> bm!14729 (= call!14733 ($colon$colon!92 e!86984 (ite c!24739 (h!2317 (toList!869 e!86455)) (tuple2!2627 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!24738 () Bool)

(assert (=> bm!14729 (= c!24738 c!24739)))

(declare-fun bm!14730 () Bool)

(assert (=> bm!14730 (= call!14731 call!14732)))

(declare-fun b!133507 () Bool)

(declare-fun res!64269 () Bool)

(assert (=> b!133507 (=> (not res!64269) (not e!86987))))

(assert (=> b!133507 (= res!64269 (containsKey!176 lt!69819 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133508 () Bool)

(assert (=> b!133508 (= e!86985 e!86986)))

(assert (=> b!133508 (= c!24736 (and ((_ is Cons!1712) (toList!869 e!86455)) (= (_1!1324 (h!2317 (toList!869 e!86455))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!40631 c!24739) b!133506))

(assert (= (and d!40631 (not c!24739)) b!133508))

(assert (= (and b!133508 c!24736) b!133502))

(assert (= (and b!133508 (not c!24736)) b!133500))

(assert (= (and b!133500 c!24737) b!133503))

(assert (= (and b!133500 (not c!24737)) b!133505))

(assert (= (or b!133503 b!133505) bm!14730))

(assert (= (or b!133502 bm!14730) bm!14728))

(assert (= (or b!133506 bm!14728) bm!14729))

(assert (= (and bm!14729 c!24738) b!133501))

(assert (= (and bm!14729 (not c!24738)) b!133504))

(assert (= (and d!40631 res!64270) b!133507))

(assert (= (and b!133507 res!64269) b!133499))

(declare-fun m!157627 () Bool)

(assert (=> d!40631 m!157627))

(declare-fun m!157629 () Bool)

(assert (=> d!40631 m!157629))

(declare-fun m!157631 () Bool)

(assert (=> bm!14729 m!157631))

(declare-fun m!157633 () Bool)

(assert (=> b!133501 m!157633))

(declare-fun m!157635 () Bool)

(assert (=> b!133499 m!157635))

(declare-fun m!157637 () Bool)

(assert (=> b!133507 m!157637))

(assert (=> d!40279 d!40631))

(declare-fun e!86990 () Option!178)

(declare-fun b!133511 () Bool)

(assert (=> b!133511 (= e!86990 (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69022))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!133512 () Bool)

(assert (=> b!133512 (= e!86990 None!176)))

(declare-fun c!24740 () Bool)

(declare-fun d!40633 () Bool)

(assert (=> d!40633 (= c!24740 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69022))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69022)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun e!86989 () Option!178)

(assert (=> d!40633 (= (getValueByKey!172 (t!6167 (toList!869 lt!69022)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!86989)))

(declare-fun b!133509 () Bool)

(assert (=> b!133509 (= e!86989 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 lt!69022))))))))

(declare-fun b!133510 () Bool)

(assert (=> b!133510 (= e!86989 e!86990)))

(declare-fun c!24741 () Bool)

(assert (=> b!133510 (= c!24741 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69022))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69022)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))))

(assert (= (and d!40633 c!24740) b!133509))

(assert (= (and d!40633 (not c!24740)) b!133510))

(assert (= (and b!133510 c!24741) b!133511))

(assert (= (and b!133510 (not c!24741)) b!133512))

(assert (=> b!133511 m!155869))

(declare-fun m!157639 () Bool)

(assert (=> b!133511 m!157639))

(assert (=> b!132652 d!40633))

(declare-fun d!40635 () Bool)

(declare-fun e!86991 () Bool)

(assert (=> d!40635 e!86991))

(declare-fun res!64271 () Bool)

(assert (=> d!40635 (=> res!64271 e!86991)))

(declare-fun lt!69823 () Bool)

(assert (=> d!40635 (= res!64271 (not lt!69823))))

(declare-fun lt!69820 () Bool)

(assert (=> d!40635 (= lt!69823 lt!69820)))

(declare-fun lt!69822 () Unit!4135)

(declare-fun e!86992 () Unit!4135)

(assert (=> d!40635 (= lt!69822 e!86992)))

(declare-fun c!24742 () Bool)

(assert (=> d!40635 (= c!24742 lt!69820)))

(assert (=> d!40635 (= lt!69820 (containsKey!176 (toList!869 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40635 (= (contains!899 lt!69486 #b1000000000000000000000000000000000000000000000000000000000000000) lt!69823)))

(declare-fun b!133513 () Bool)

(declare-fun lt!69821 () Unit!4135)

(assert (=> b!133513 (= e!86992 lt!69821)))

(assert (=> b!133513 (= lt!69821 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133513 (isDefined!125 (getValueByKey!172 (toList!869 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133514 () Bool)

(declare-fun Unit!4178 () Unit!4135)

(assert (=> b!133514 (= e!86992 Unit!4178)))

(declare-fun b!133515 () Bool)

(assert (=> b!133515 (= e!86991 (isDefined!125 (getValueByKey!172 (toList!869 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40635 c!24742) b!133513))

(assert (= (and d!40635 (not c!24742)) b!133514))

(assert (= (and d!40635 (not res!64271)) b!133515))

(declare-fun m!157641 () Bool)

(assert (=> d!40635 m!157641))

(declare-fun m!157643 () Bool)

(assert (=> b!133513 m!157643))

(assert (=> b!133513 m!157475))

(assert (=> b!133513 m!157475))

(declare-fun m!157645 () Bool)

(assert (=> b!133513 m!157645))

(assert (=> b!133515 m!157475))

(assert (=> b!133515 m!157475))

(assert (=> b!133515 m!157645))

(assert (=> bm!14662 d!40635))

(declare-fun d!40637 () Bool)

(declare-fun e!86993 () Bool)

(assert (=> d!40637 e!86993))

(declare-fun res!64273 () Bool)

(assert (=> d!40637 (=> (not res!64273) (not e!86993))))

(declare-fun lt!69824 () ListLongMap!1707)

(assert (=> d!40637 (= res!64273 (contains!899 lt!69824 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!69826 () List!1716)

(assert (=> d!40637 (= lt!69824 (ListLongMap!1708 lt!69826))))

(declare-fun lt!69827 () Unit!4135)

(declare-fun lt!69825 () Unit!4135)

(assert (=> d!40637 (= lt!69827 lt!69825)))

(assert (=> d!40637 (= (getValueByKey!172 lt!69826 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40637 (= lt!69825 (lemmaContainsTupThenGetReturnValue!87 lt!69826 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40637 (= lt!69826 (insertStrictlySorted!90 (toList!869 call!14632) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40637 (= (+!175 call!14632 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!69824)))

(declare-fun b!133516 () Bool)

(declare-fun res!64272 () Bool)

(assert (=> b!133516 (=> (not res!64272) (not e!86993))))

(assert (=> b!133516 (= res!64272 (= (getValueByKey!172 (toList!869 lt!69824) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!133517 () Bool)

(assert (=> b!133517 (= e!86993 (contains!902 (toList!869 lt!69824) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!40637 res!64273) b!133516))

(assert (= (and b!133516 res!64272) b!133517))

(declare-fun m!157647 () Bool)

(assert (=> d!40637 m!157647))

(declare-fun m!157649 () Bool)

(assert (=> d!40637 m!157649))

(declare-fun m!157651 () Bool)

(assert (=> d!40637 m!157651))

(declare-fun m!157653 () Bool)

(assert (=> d!40637 m!157653))

(declare-fun m!157655 () Bool)

(assert (=> b!133516 m!157655))

(declare-fun m!157657 () Bool)

(assert (=> b!133517 m!157657))

(assert (=> b!132711 d!40637))

(declare-fun d!40639 () Bool)

(declare-fun e!86994 () Bool)

(assert (=> d!40639 e!86994))

(declare-fun res!64274 () Bool)

(assert (=> d!40639 (=> res!64274 e!86994)))

(declare-fun lt!69831 () Bool)

(assert (=> d!40639 (= res!64274 (not lt!69831))))

(declare-fun lt!69828 () Bool)

(assert (=> d!40639 (= lt!69831 lt!69828)))

(declare-fun lt!69830 () Unit!4135)

(declare-fun e!86995 () Unit!4135)

(assert (=> d!40639 (= lt!69830 e!86995)))

(declare-fun c!24743 () Bool)

(assert (=> d!40639 (= c!24743 lt!69828)))

(assert (=> d!40639 (= lt!69828 (containsKey!176 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))

(assert (=> d!40639 (= (contains!899 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))) lt!69831)))

(declare-fun b!133518 () Bool)

(declare-fun lt!69829 () Unit!4135)

(assert (=> b!133518 (= e!86995 lt!69829)))

(assert (=> b!133518 (= lt!69829 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))

(assert (=> b!133518 (isDefined!125 (getValueByKey!172 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))

(declare-fun b!133519 () Bool)

(declare-fun Unit!4179 () Unit!4135)

(assert (=> b!133519 (= e!86995 Unit!4179)))

(declare-fun b!133520 () Bool)

(assert (=> b!133520 (= e!86994 (isDefined!125 (getValueByKey!172 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(assert (= (and d!40639 c!24743) b!133518))

(assert (= (and d!40639 (not c!24743)) b!133519))

(assert (= (and d!40639 (not res!64274)) b!133520))

(assert (=> d!40639 m!156069))

(declare-fun m!157659 () Bool)

(assert (=> d!40639 m!157659))

(assert (=> b!133518 m!156069))

(declare-fun m!157661 () Bool)

(assert (=> b!133518 m!157661))

(assert (=> b!133518 m!156069))

(declare-fun m!157663 () Bool)

(assert (=> b!133518 m!157663))

(assert (=> b!133518 m!157663))

(declare-fun m!157665 () Bool)

(assert (=> b!133518 m!157665))

(assert (=> b!133520 m!156069))

(assert (=> b!133520 m!157663))

(assert (=> b!133520 m!157663))

(assert (=> b!133520 m!157665))

(assert (=> b!132784 d!40639))

(declare-fun b!133521 () Bool)

(declare-fun e!87008 () Unit!4135)

(declare-fun lt!69832 () Unit!4135)

(assert (=> b!133521 (= e!87008 lt!69832)))

(declare-fun lt!69848 () ListLongMap!1707)

(assert (=> b!133521 (= lt!69848 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69842 () (_ BitVec 64))

(assert (=> b!133521 (= lt!69842 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69847 () (_ BitVec 64))

(assert (=> b!133521 (= lt!69847 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69845 () Unit!4135)

(assert (=> b!133521 (= lt!69845 (addStillContains!92 lt!69848 lt!69842 (zeroValue!2720 newMap!16) lt!69847))))

(assert (=> b!133521 (contains!899 (+!175 lt!69848 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16))) lt!69847)))

(declare-fun lt!69852 () Unit!4135)

(assert (=> b!133521 (= lt!69852 lt!69845)))

(declare-fun lt!69834 () ListLongMap!1707)

(assert (=> b!133521 (= lt!69834 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69837 () (_ BitVec 64))

(assert (=> b!133521 (= lt!69837 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69853 () (_ BitVec 64))

(assert (=> b!133521 (= lt!69853 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69844 () Unit!4135)

(assert (=> b!133521 (= lt!69844 (addApplyDifferent!92 lt!69834 lt!69837 (minValue!2720 newMap!16) lt!69853))))

(assert (=> b!133521 (= (apply!116 (+!175 lt!69834 (tuple2!2627 lt!69837 (minValue!2720 newMap!16))) lt!69853) (apply!116 lt!69834 lt!69853))))

(declare-fun lt!69833 () Unit!4135)

(assert (=> b!133521 (= lt!69833 lt!69844)))

(declare-fun lt!69839 () ListLongMap!1707)

(assert (=> b!133521 (= lt!69839 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69841 () (_ BitVec 64))

(assert (=> b!133521 (= lt!69841 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69835 () (_ BitVec 64))

(assert (=> b!133521 (= lt!69835 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69838 () Unit!4135)

(assert (=> b!133521 (= lt!69838 (addApplyDifferent!92 lt!69839 lt!69841 (zeroValue!2720 newMap!16) lt!69835))))

(assert (=> b!133521 (= (apply!116 (+!175 lt!69839 (tuple2!2627 lt!69841 (zeroValue!2720 newMap!16))) lt!69835) (apply!116 lt!69839 lt!69835))))

(declare-fun lt!69846 () Unit!4135)

(assert (=> b!133521 (= lt!69846 lt!69838)))

(declare-fun lt!69836 () ListLongMap!1707)

(assert (=> b!133521 (= lt!69836 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69851 () (_ BitVec 64))

(assert (=> b!133521 (= lt!69851 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69849 () (_ BitVec 64))

(assert (=> b!133521 (= lt!69849 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133521 (= lt!69832 (addApplyDifferent!92 lt!69836 lt!69851 (minValue!2720 newMap!16) lt!69849))))

(assert (=> b!133521 (= (apply!116 (+!175 lt!69836 (tuple2!2627 lt!69851 (minValue!2720 newMap!16))) lt!69849) (apply!116 lt!69836 lt!69849))))

(declare-fun b!133522 () Bool)

(declare-fun e!87005 () Bool)

(declare-fun call!14737 () Bool)

(assert (=> b!133522 (= e!87005 (not call!14737))))

(declare-fun b!133523 () Bool)

(declare-fun e!87002 () Bool)

(declare-fun e!87001 () Bool)

(assert (=> b!133523 (= e!87002 e!87001)))

(declare-fun c!24747 () Bool)

(assert (=> b!133523 (= c!24747 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133524 () Bool)

(declare-fun e!87006 () ListLongMap!1707)

(declare-fun call!14740 () ListLongMap!1707)

(assert (=> b!133524 (= e!87006 call!14740)))

(declare-fun b!133525 () Bool)

(declare-fun e!86997 () ListLongMap!1707)

(declare-fun call!14734 () ListLongMap!1707)

(assert (=> b!133525 (= e!86997 call!14734)))

(declare-fun b!133526 () Bool)

(declare-fun c!24749 () Bool)

(assert (=> b!133526 (= c!24749 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!133526 (= e!86997 e!87006)))

(declare-fun b!133527 () Bool)

(declare-fun call!14735 () Bool)

(assert (=> b!133527 (= e!87001 (not call!14735))))

(declare-fun d!40641 () Bool)

(assert (=> d!40641 e!87002))

(declare-fun res!64278 () Bool)

(assert (=> d!40641 (=> (not res!64278) (not e!87002))))

(assert (=> d!40641 (= res!64278 (or (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))))

(declare-fun lt!69850 () ListLongMap!1707)

(declare-fun lt!69843 () ListLongMap!1707)

(assert (=> d!40641 (= lt!69850 lt!69843)))

(declare-fun lt!69840 () Unit!4135)

(assert (=> d!40641 (= lt!69840 e!87008)))

(declare-fun c!24745 () Bool)

(declare-fun e!87004 () Bool)

(assert (=> d!40641 (= c!24745 e!87004)))

(declare-fun res!64277 () Bool)

(assert (=> d!40641 (=> (not res!64277) (not e!87004))))

(assert (=> d!40641 (= res!64277 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun e!86999 () ListLongMap!1707)

(assert (=> d!40641 (= lt!69843 e!86999)))

(declare-fun c!24748 () Bool)

(assert (=> d!40641 (= c!24748 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40641 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40641 (= (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69850)))

(declare-fun b!133528 () Bool)

(declare-fun e!87003 () Bool)

(assert (=> b!133528 (= e!87003 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14731 () Bool)

(assert (=> bm!14731 (= call!14737 (contains!899 lt!69850 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133529 () Bool)

(assert (=> b!133529 (= e!86999 e!86997)))

(declare-fun c!24746 () Bool)

(assert (=> b!133529 (= c!24746 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133530 () Bool)

(declare-fun call!14738 () ListLongMap!1707)

(assert (=> b!133530 (= e!86999 (+!175 call!14738 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun e!86996 () Bool)

(declare-fun b!133531 () Bool)

(assert (=> b!133531 (= e!86996 (= (apply!116 lt!69850 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 lt!69190) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133531 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 lt!69190)))))

(assert (=> b!133531 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun bm!14732 () Bool)

(assert (=> bm!14732 (= call!14735 (contains!899 lt!69850 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133532 () Bool)

(declare-fun res!64279 () Bool)

(assert (=> b!133532 (=> (not res!64279) (not e!87002))))

(assert (=> b!133532 (= res!64279 e!87005)))

(declare-fun c!24744 () Bool)

(assert (=> b!133532 (= c!24744 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133533 () Bool)

(declare-fun e!87000 () Bool)

(assert (=> b!133533 (= e!87001 e!87000)))

(declare-fun res!64281 () Bool)

(assert (=> b!133533 (= res!64281 call!14735)))

(assert (=> b!133533 (=> (not res!64281) (not e!87000))))

(declare-fun call!14736 () ListLongMap!1707)

(declare-fun bm!14733 () Bool)

(declare-fun call!14739 () ListLongMap!1707)

(assert (=> bm!14733 (= call!14738 (+!175 (ite c!24748 call!14736 (ite c!24746 call!14739 call!14740)) (ite (or c!24748 c!24746) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!133534 () Bool)

(declare-fun e!87007 () Bool)

(assert (=> b!133534 (= e!87007 (= (apply!116 lt!69850 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 newMap!16)))))

(declare-fun bm!14734 () Bool)

(assert (=> bm!14734 (= call!14734 call!14738)))

(declare-fun b!133535 () Bool)

(assert (=> b!133535 (= e!87005 e!87007)))

(declare-fun res!64276 () Bool)

(assert (=> b!133535 (= res!64276 call!14737)))

(assert (=> b!133535 (=> (not res!64276) (not e!87007))))

(declare-fun bm!14735 () Bool)

(assert (=> bm!14735 (= call!14740 call!14739)))

(declare-fun bm!14736 () Bool)

(assert (=> bm!14736 (= call!14736 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!133536 () Bool)

(assert (=> b!133536 (= e!87006 call!14734)))

(declare-fun b!133537 () Bool)

(declare-fun e!86998 () Bool)

(assert (=> b!133537 (= e!86998 e!86996)))

(declare-fun res!64280 () Bool)

(assert (=> b!133537 (=> (not res!64280) (not e!86996))))

(assert (=> b!133537 (= res!64280 (contains!899 lt!69850 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133537 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133538 () Bool)

(declare-fun res!64283 () Bool)

(assert (=> b!133538 (=> (not res!64283) (not e!87002))))

(assert (=> b!133538 (= res!64283 e!86998)))

(declare-fun res!64275 () Bool)

(assert (=> b!133538 (=> res!64275 e!86998)))

(assert (=> b!133538 (= res!64275 (not e!87003))))

(declare-fun res!64282 () Bool)

(assert (=> b!133538 (=> (not res!64282) (not e!87003))))

(assert (=> b!133538 (= res!64282 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun bm!14737 () Bool)

(assert (=> bm!14737 (= call!14739 call!14736)))

(declare-fun b!133539 () Bool)

(assert (=> b!133539 (= e!87000 (= (apply!116 lt!69850 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 newMap!16)))))

(declare-fun b!133540 () Bool)

(assert (=> b!133540 (= e!87004 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133541 () Bool)

(declare-fun Unit!4180 () Unit!4135)

(assert (=> b!133541 (= e!87008 Unit!4180)))

(assert (= (and d!40641 c!24748) b!133530))

(assert (= (and d!40641 (not c!24748)) b!133529))

(assert (= (and b!133529 c!24746) b!133525))

(assert (= (and b!133529 (not c!24746)) b!133526))

(assert (= (and b!133526 c!24749) b!133536))

(assert (= (and b!133526 (not c!24749)) b!133524))

(assert (= (or b!133536 b!133524) bm!14735))

(assert (= (or b!133525 bm!14735) bm!14737))

(assert (= (or b!133525 b!133536) bm!14734))

(assert (= (or b!133530 bm!14737) bm!14736))

(assert (= (or b!133530 bm!14734) bm!14733))

(assert (= (and d!40641 res!64277) b!133540))

(assert (= (and d!40641 c!24745) b!133521))

(assert (= (and d!40641 (not c!24745)) b!133541))

(assert (= (and d!40641 res!64278) b!133538))

(assert (= (and b!133538 res!64282) b!133528))

(assert (= (and b!133538 (not res!64275)) b!133537))

(assert (= (and b!133537 res!64280) b!133531))

(assert (= (and b!133538 res!64283) b!133532))

(assert (= (and b!133532 c!24744) b!133535))

(assert (= (and b!133532 (not c!24744)) b!133522))

(assert (= (and b!133535 res!64276) b!133534))

(assert (= (or b!133535 b!133522) bm!14731))

(assert (= (and b!133532 res!64279) b!133523))

(assert (= (and b!133523 c!24747) b!133533))

(assert (= (and b!133523 (not c!24747)) b!133527))

(assert (= (and b!133533 res!64281) b!133539))

(assert (= (or b!133533 b!133527) bm!14732))

(declare-fun b_lambda!5937 () Bool)

(assert (=> (not b_lambda!5937) (not b!133531)))

(assert (=> b!133531 t!6176))

(declare-fun b_and!8271 () Bool)

(assert (= b_and!8267 (and (=> t!6176 result!3997) b_and!8271)))

(assert (=> b!133531 t!6178))

(declare-fun b_and!8273 () Bool)

(assert (= b_and!8269 (and (=> t!6178 result!3999) b_and!8273)))

(declare-fun m!157667 () Bool)

(assert (=> bm!14736 m!157667))

(declare-fun m!157669 () Bool)

(assert (=> bm!14733 m!157669))

(declare-fun m!157671 () Bool)

(assert (=> b!133531 m!157671))

(assert (=> b!133531 m!157671))

(assert (=> b!133531 m!156175))

(declare-fun m!157673 () Bool)

(assert (=> b!133531 m!157673))

(assert (=> b!133531 m!156163))

(assert (=> b!133531 m!156175))

(assert (=> b!133531 m!156163))

(declare-fun m!157675 () Bool)

(assert (=> b!133531 m!157675))

(declare-fun m!157677 () Bool)

(assert (=> bm!14731 m!157677))

(declare-fun m!157679 () Bool)

(assert (=> b!133530 m!157679))

(assert (=> b!133540 m!156163))

(assert (=> b!133540 m!156163))

(assert (=> b!133540 m!156165))

(assert (=> d!40641 m!156157))

(declare-fun m!157681 () Bool)

(assert (=> b!133521 m!157681))

(declare-fun m!157683 () Bool)

(assert (=> b!133521 m!157683))

(declare-fun m!157685 () Bool)

(assert (=> b!133521 m!157685))

(declare-fun m!157687 () Bool)

(assert (=> b!133521 m!157687))

(assert (=> b!133521 m!157667))

(declare-fun m!157689 () Bool)

(assert (=> b!133521 m!157689))

(declare-fun m!157691 () Bool)

(assert (=> b!133521 m!157691))

(declare-fun m!157693 () Bool)

(assert (=> b!133521 m!157693))

(declare-fun m!157695 () Bool)

(assert (=> b!133521 m!157695))

(declare-fun m!157697 () Bool)

(assert (=> b!133521 m!157697))

(assert (=> b!133521 m!157681))

(declare-fun m!157699 () Bool)

(assert (=> b!133521 m!157699))

(assert (=> b!133521 m!157693))

(declare-fun m!157701 () Bool)

(assert (=> b!133521 m!157701))

(assert (=> b!133521 m!157685))

(declare-fun m!157703 () Bool)

(assert (=> b!133521 m!157703))

(assert (=> b!133521 m!156163))

(declare-fun m!157705 () Bool)

(assert (=> b!133521 m!157705))

(assert (=> b!133521 m!157683))

(declare-fun m!157707 () Bool)

(assert (=> b!133521 m!157707))

(declare-fun m!157709 () Bool)

(assert (=> b!133521 m!157709))

(declare-fun m!157711 () Bool)

(assert (=> bm!14732 m!157711))

(declare-fun m!157713 () Bool)

(assert (=> b!133534 m!157713))

(declare-fun m!157715 () Bool)

(assert (=> b!133539 m!157715))

(assert (=> b!133537 m!156163))

(assert (=> b!133537 m!156163))

(declare-fun m!157717 () Bool)

(assert (=> b!133537 m!157717))

(assert (=> b!133528 m!156163))

(assert (=> b!133528 m!156163))

(assert (=> b!133528 m!156165))

(assert (=> b!132784 d!40641))

(declare-fun d!40643 () Bool)

(assert (=> d!40643 (= (get!1486 (getValueByKey!172 (toList!869 lt!69081) lt!69094)) (v!3203 (getValueByKey!172 (toList!869 lt!69081) lt!69094)))))

(assert (=> d!40271 d!40643))

(declare-fun b!133544 () Bool)

(declare-fun e!87010 () Option!178)

(assert (=> b!133544 (= e!87010 (getValueByKey!172 (t!6167 (toList!869 lt!69081)) lt!69094))))

(declare-fun b!133545 () Bool)

(assert (=> b!133545 (= e!87010 None!176)))

(declare-fun d!40645 () Bool)

(declare-fun c!24750 () Bool)

(assert (=> d!40645 (= c!24750 (and ((_ is Cons!1712) (toList!869 lt!69081)) (= (_1!1324 (h!2317 (toList!869 lt!69081))) lt!69094)))))

(declare-fun e!87009 () Option!178)

(assert (=> d!40645 (= (getValueByKey!172 (toList!869 lt!69081) lt!69094) e!87009)))

(declare-fun b!133542 () Bool)

(assert (=> b!133542 (= e!87009 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69081)))))))

(declare-fun b!133543 () Bool)

(assert (=> b!133543 (= e!87009 e!87010)))

(declare-fun c!24751 () Bool)

(assert (=> b!133543 (= c!24751 (and ((_ is Cons!1712) (toList!869 lt!69081)) (not (= (_1!1324 (h!2317 (toList!869 lt!69081))) lt!69094))))))

(assert (= (and d!40645 c!24750) b!133542))

(assert (= (and d!40645 (not c!24750)) b!133543))

(assert (= (and b!133543 c!24751) b!133544))

(assert (= (and b!133543 (not c!24751)) b!133545))

(declare-fun m!157719 () Bool)

(assert (=> b!133544 m!157719))

(assert (=> d!40271 d!40645))

(declare-fun b!133548 () Bool)

(declare-fun e!87012 () Option!178)

(assert (=> b!133548 (= e!87012 (getValueByKey!172 (t!6167 (toList!869 lt!69377)) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133549 () Bool)

(assert (=> b!133549 (= e!87012 None!176)))

(declare-fun d!40647 () Bool)

(declare-fun c!24752 () Bool)

(assert (=> d!40647 (= c!24752 (and ((_ is Cons!1712) (toList!869 lt!69377)) (= (_1!1324 (h!2317 (toList!869 lt!69377))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87011 () Option!178)

(assert (=> d!40647 (= (getValueByKey!172 (toList!869 lt!69377) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87011)))

(declare-fun b!133546 () Bool)

(assert (=> b!133546 (= e!87011 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69377)))))))

(declare-fun b!133547 () Bool)

(assert (=> b!133547 (= e!87011 e!87012)))

(declare-fun c!24753 () Bool)

(assert (=> b!133547 (= c!24753 (and ((_ is Cons!1712) (toList!869 lt!69377)) (not (= (_1!1324 (h!2317 (toList!869 lt!69377))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!40647 c!24752) b!133546))

(assert (= (and d!40647 (not c!24752)) b!133547))

(assert (= (and b!133547 c!24753) b!133548))

(assert (= (and b!133547 (not c!24753)) b!133549))

(declare-fun m!157721 () Bool)

(assert (=> b!133548 m!157721))

(assert (=> b!132799 d!40647))

(declare-fun d!40649 () Bool)

(declare-fun e!87013 () Bool)

(assert (=> d!40649 e!87013))

(declare-fun res!64284 () Bool)

(assert (=> d!40649 (=> res!64284 e!87013)))

(declare-fun lt!69857 () Bool)

(assert (=> d!40649 (= res!64284 (not lt!69857))))

(declare-fun lt!69854 () Bool)

(assert (=> d!40649 (= lt!69857 lt!69854)))

(declare-fun lt!69856 () Unit!4135)

(declare-fun e!87014 () Unit!4135)

(assert (=> d!40649 (= lt!69856 e!87014)))

(declare-fun c!24754 () Bool)

(assert (=> d!40649 (= c!24754 lt!69854)))

(assert (=> d!40649 (= lt!69854 (containsKey!176 (toList!869 lt!69464) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40649 (= (contains!899 lt!69464 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69857)))

(declare-fun b!133550 () Bool)

(declare-fun lt!69855 () Unit!4135)

(assert (=> b!133550 (= e!87014 lt!69855)))

(assert (=> b!133550 (= lt!69855 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69464) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133550 (isDefined!125 (getValueByKey!172 (toList!869 lt!69464) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133551 () Bool)

(declare-fun Unit!4181 () Unit!4135)

(assert (=> b!133551 (= e!87014 Unit!4181)))

(declare-fun b!133552 () Bool)

(assert (=> b!133552 (= e!87013 (isDefined!125 (getValueByKey!172 (toList!869 lt!69464) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40649 c!24754) b!133550))

(assert (= (and d!40649 (not c!24754)) b!133551))

(assert (= (and d!40649 (not res!64284)) b!133552))

(declare-fun m!157723 () Bool)

(assert (=> d!40649 m!157723))

(declare-fun m!157725 () Bool)

(assert (=> b!133550 m!157725))

(declare-fun m!157727 () Bool)

(assert (=> b!133550 m!157727))

(assert (=> b!133550 m!157727))

(declare-fun m!157729 () Bool)

(assert (=> b!133550 m!157729))

(assert (=> b!133552 m!157727))

(assert (=> b!133552 m!157727))

(assert (=> b!133552 m!157729))

(assert (=> bm!14654 d!40649))

(declare-fun bm!14738 () Bool)

(declare-fun call!14741 () Bool)

(assert (=> bm!14738 (= call!14741 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!133553 () Bool)

(declare-fun e!87017 () Bool)

(declare-fun e!87015 () Bool)

(assert (=> b!133553 (= e!87017 e!87015)))

(declare-fun c!24755 () Bool)

(assert (=> b!133553 (= c!24755 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!40651 () Bool)

(declare-fun res!64285 () Bool)

(assert (=> d!40651 (=> res!64285 e!87017)))

(assert (=> d!40651 (= res!64285 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!40651 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) e!87017)))

(declare-fun b!133554 () Bool)

(assert (=> b!133554 (= e!87015 call!14741)))

(declare-fun b!133555 () Bool)

(declare-fun e!87016 () Bool)

(assert (=> b!133555 (= e!87016 call!14741)))

(declare-fun b!133556 () Bool)

(assert (=> b!133556 (= e!87015 e!87016)))

(declare-fun lt!69859 () (_ BitVec 64))

(assert (=> b!133556 (= lt!69859 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!69860 () Unit!4135)

(assert (=> b!133556 (= lt!69860 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69859 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!133556 (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69859 #b00000000000000000000000000000000)))

(declare-fun lt!69858 () Unit!4135)

(assert (=> b!133556 (= lt!69858 lt!69860)))

(declare-fun res!64286 () Bool)

(assert (=> b!133556 (= res!64286 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (Found!275 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!133556 (=> (not res!64286) (not e!87016))))

(assert (= (and d!40651 (not res!64285)) b!133553))

(assert (= (and b!133553 c!24755) b!133556))

(assert (= (and b!133553 (not c!24755)) b!133554))

(assert (= (and b!133556 res!64286) b!133555))

(assert (= (or b!133555 b!133554) bm!14738))

(declare-fun m!157731 () Bool)

(assert (=> bm!14738 m!157731))

(declare-fun m!157733 () Bool)

(assert (=> b!133553 m!157733))

(assert (=> b!133553 m!157733))

(declare-fun m!157735 () Bool)

(assert (=> b!133553 m!157735))

(assert (=> b!133556 m!157733))

(declare-fun m!157737 () Bool)

(assert (=> b!133556 m!157737))

(declare-fun m!157739 () Bool)

(assert (=> b!133556 m!157739))

(assert (=> b!133556 m!157733))

(declare-fun m!157741 () Bool)

(assert (=> b!133556 m!157741))

(assert (=> bm!14668 d!40651))

(assert (=> bm!14659 d!40453))

(declare-fun e!87019 () Option!178)

(declare-fun b!133559 () Bool)

(assert (=> b!133559 (= e!87019 (getValueByKey!172 (t!6167 (toList!869 lt!69385)) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133560 () Bool)

(assert (=> b!133560 (= e!87019 None!176)))

(declare-fun c!24756 () Bool)

(declare-fun d!40653 () Bool)

(assert (=> d!40653 (= c!24756 (and ((_ is Cons!1712) (toList!869 lt!69385)) (= (_1!1324 (h!2317 (toList!869 lt!69385))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87018 () Option!178)

(assert (=> d!40653 (= (getValueByKey!172 (toList!869 lt!69385) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87018)))

(declare-fun b!133557 () Bool)

(assert (=> b!133557 (= e!87018 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69385)))))))

(declare-fun b!133558 () Bool)

(assert (=> b!133558 (= e!87018 e!87019)))

(declare-fun c!24757 () Bool)

(assert (=> b!133558 (= c!24757 (and ((_ is Cons!1712) (toList!869 lt!69385)) (not (= (_1!1324 (h!2317 (toList!869 lt!69385))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!40653 c!24756) b!133557))

(assert (= (and d!40653 (not c!24756)) b!133558))

(assert (= (and b!133558 c!24757) b!133559))

(assert (= (and b!133558 (not c!24757)) b!133560))

(declare-fun m!157743 () Bool)

(assert (=> b!133559 m!157743))

(assert (=> b!132804 d!40653))

(assert (=> b!132834 d!40311))

(declare-fun d!40655 () Bool)

(declare-fun e!87020 () Bool)

(assert (=> d!40655 e!87020))

(declare-fun res!64287 () Bool)

(assert (=> d!40655 (=> res!64287 e!87020)))

(declare-fun lt!69864 () Bool)

(assert (=> d!40655 (= res!64287 (not lt!69864))))

(declare-fun lt!69861 () Bool)

(assert (=> d!40655 (= lt!69864 lt!69861)))

(declare-fun lt!69863 () Unit!4135)

(declare-fun e!87021 () Unit!4135)

(assert (=> d!40655 (= lt!69863 e!87021)))

(declare-fun c!24758 () Bool)

(assert (=> d!40655 (= c!24758 lt!69861)))

(assert (=> d!40655 (= lt!69861 (containsKey!176 (toList!869 lt!69262) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40655 (= (contains!899 lt!69262 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!69864)))

(declare-fun b!133561 () Bool)

(declare-fun lt!69862 () Unit!4135)

(assert (=> b!133561 (= e!87021 lt!69862)))

(assert (=> b!133561 (= lt!69862 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69262) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133561 (isDefined!125 (getValueByKey!172 (toList!869 lt!69262) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133562 () Bool)

(declare-fun Unit!4182 () Unit!4135)

(assert (=> b!133562 (= e!87021 Unit!4182)))

(declare-fun b!133563 () Bool)

(assert (=> b!133563 (= e!87020 (isDefined!125 (getValueByKey!172 (toList!869 lt!69262) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!40655 c!24758) b!133561))

(assert (= (and d!40655 (not c!24758)) b!133562))

(assert (= (and d!40655 (not res!64287)) b!133563))

(assert (=> d!40655 m!156163))

(declare-fun m!157745 () Bool)

(assert (=> d!40655 m!157745))

(assert (=> b!133561 m!156163))

(declare-fun m!157747 () Bool)

(assert (=> b!133561 m!157747))

(assert (=> b!133561 m!156163))

(assert (=> b!133561 m!156783))

(assert (=> b!133561 m!156783))

(declare-fun m!157749 () Bool)

(assert (=> b!133561 m!157749))

(assert (=> b!133563 m!156163))

(assert (=> b!133563 m!156783))

(assert (=> b!133563 m!156783))

(assert (=> b!133563 m!157749))

(assert (=> b!132718 d!40655))

(assert (=> b!132936 d!40353))

(assert (=> b!132787 d!40527))

(assert (=> b!132787 d!40229))

(declare-fun b!133564 () Bool)

(declare-fun e!87034 () Unit!4135)

(declare-fun lt!69865 () Unit!4135)

(assert (=> b!133564 (= e!87034 lt!69865)))

(declare-fun lt!69881 () ListLongMap!1707)

(assert (=> b!133564 (= lt!69881 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69875 () (_ BitVec 64))

(assert (=> b!133564 (= lt!69875 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69880 () (_ BitVec 64))

(assert (=> b!133564 (= lt!69880 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69878 () Unit!4135)

(assert (=> b!133564 (= lt!69878 (addStillContains!92 lt!69881 lt!69875 (zeroValue!2720 newMap!16) lt!69880))))

(assert (=> b!133564 (contains!899 (+!175 lt!69881 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16))) lt!69880)))

(declare-fun lt!69885 () Unit!4135)

(assert (=> b!133564 (= lt!69885 lt!69878)))

(declare-fun lt!69867 () ListLongMap!1707)

(assert (=> b!133564 (= lt!69867 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69870 () (_ BitVec 64))

(assert (=> b!133564 (= lt!69870 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69886 () (_ BitVec 64))

(assert (=> b!133564 (= lt!69886 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69877 () Unit!4135)

(assert (=> b!133564 (= lt!69877 (addApplyDifferent!92 lt!69867 lt!69870 (minValue!2720 newMap!16) lt!69886))))

(assert (=> b!133564 (= (apply!116 (+!175 lt!69867 (tuple2!2627 lt!69870 (minValue!2720 newMap!16))) lt!69886) (apply!116 lt!69867 lt!69886))))

(declare-fun lt!69866 () Unit!4135)

(assert (=> b!133564 (= lt!69866 lt!69877)))

(declare-fun lt!69872 () ListLongMap!1707)

(assert (=> b!133564 (= lt!69872 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69874 () (_ BitVec 64))

(assert (=> b!133564 (= lt!69874 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69868 () (_ BitVec 64))

(assert (=> b!133564 (= lt!69868 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69871 () Unit!4135)

(assert (=> b!133564 (= lt!69871 (addApplyDifferent!92 lt!69872 lt!69874 (zeroValue!2720 newMap!16) lt!69868))))

(assert (=> b!133564 (= (apply!116 (+!175 lt!69872 (tuple2!2627 lt!69874 (zeroValue!2720 newMap!16))) lt!69868) (apply!116 lt!69872 lt!69868))))

(declare-fun lt!69879 () Unit!4135)

(assert (=> b!133564 (= lt!69879 lt!69871)))

(declare-fun lt!69869 () ListLongMap!1707)

(assert (=> b!133564 (= lt!69869 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69884 () (_ BitVec 64))

(assert (=> b!133564 (= lt!69884 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69882 () (_ BitVec 64))

(assert (=> b!133564 (= lt!69882 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133564 (= lt!69865 (addApplyDifferent!92 lt!69869 lt!69884 (minValue!2720 newMap!16) lt!69882))))

(assert (=> b!133564 (= (apply!116 (+!175 lt!69869 (tuple2!2627 lt!69884 (minValue!2720 newMap!16))) lt!69882) (apply!116 lt!69869 lt!69882))))

(declare-fun b!133565 () Bool)

(declare-fun e!87031 () Bool)

(declare-fun call!14745 () Bool)

(assert (=> b!133565 (= e!87031 (not call!14745))))

(declare-fun b!133566 () Bool)

(declare-fun e!87028 () Bool)

(declare-fun e!87027 () Bool)

(assert (=> b!133566 (= e!87028 e!87027)))

(declare-fun c!24762 () Bool)

(assert (=> b!133566 (= c!24762 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133567 () Bool)

(declare-fun e!87032 () ListLongMap!1707)

(declare-fun call!14748 () ListLongMap!1707)

(assert (=> b!133567 (= e!87032 call!14748)))

(declare-fun b!133568 () Bool)

(declare-fun e!87023 () ListLongMap!1707)

(declare-fun call!14742 () ListLongMap!1707)

(assert (=> b!133568 (= e!87023 call!14742)))

(declare-fun b!133569 () Bool)

(declare-fun c!24764 () Bool)

(assert (=> b!133569 (= c!24764 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!133569 (= e!87023 e!87032)))

(declare-fun b!133570 () Bool)

(declare-fun call!14743 () Bool)

(assert (=> b!133570 (= e!87027 (not call!14743))))

(declare-fun d!40657 () Bool)

(assert (=> d!40657 e!87028))

(declare-fun res!64291 () Bool)

(assert (=> d!40657 (=> (not res!64291) (not e!87028))))

(assert (=> d!40657 (= res!64291 (or (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))))

(declare-fun lt!69883 () ListLongMap!1707)

(declare-fun lt!69876 () ListLongMap!1707)

(assert (=> d!40657 (= lt!69883 lt!69876)))

(declare-fun lt!69873 () Unit!4135)

(assert (=> d!40657 (= lt!69873 e!87034)))

(declare-fun c!24760 () Bool)

(declare-fun e!87030 () Bool)

(assert (=> d!40657 (= c!24760 e!87030)))

(declare-fun res!64290 () Bool)

(assert (=> d!40657 (=> (not res!64290) (not e!87030))))

(assert (=> d!40657 (= res!64290 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun e!87025 () ListLongMap!1707)

(assert (=> d!40657 (= lt!69876 e!87025)))

(declare-fun c!24763 () Bool)

(assert (=> d!40657 (= c!24763 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40657 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40657 (= (getCurrentListMap!546 (_keys!4614 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69883)))

(declare-fun b!133571 () Bool)

(declare-fun e!87029 () Bool)

(assert (=> b!133571 (= e!87029 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14739 () Bool)

(assert (=> bm!14739 (= call!14745 (contains!899 lt!69883 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133572 () Bool)

(assert (=> b!133572 (= e!87025 e!87023)))

(declare-fun c!24761 () Bool)

(assert (=> b!133572 (= c!24761 (and (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133573 () Bool)

(declare-fun call!14746 () ListLongMap!1707)

(assert (=> b!133573 (= e!87025 (+!175 call!14746 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun e!87022 () Bool)

(declare-fun b!133574 () Bool)

(assert (=> b!133574 (= e!87022 (= (apply!116 lt!69883 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133574 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))))))

(assert (=> b!133574 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun bm!14740 () Bool)

(assert (=> bm!14740 (= call!14743 (contains!899 lt!69883 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133575 () Bool)

(declare-fun res!64292 () Bool)

(assert (=> b!133575 (=> (not res!64292) (not e!87028))))

(assert (=> b!133575 (= res!64292 e!87031)))

(declare-fun c!24759 () Bool)

(assert (=> b!133575 (= c!24759 (not (= (bvand (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133576 () Bool)

(declare-fun e!87026 () Bool)

(assert (=> b!133576 (= e!87027 e!87026)))

(declare-fun res!64294 () Bool)

(assert (=> b!133576 (= res!64294 call!14743)))

(assert (=> b!133576 (=> (not res!64294) (not e!87026))))

(declare-fun call!14744 () ListLongMap!1707)

(declare-fun bm!14741 () Bool)

(declare-fun call!14747 () ListLongMap!1707)

(assert (=> bm!14741 (= call!14746 (+!175 (ite c!24763 call!14744 (ite c!24761 call!14747 call!14748)) (ite (or c!24763 c!24761) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!133577 () Bool)

(declare-fun e!87033 () Bool)

(assert (=> b!133577 (= e!87033 (= (apply!116 lt!69883 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 newMap!16)))))

(declare-fun bm!14742 () Bool)

(assert (=> bm!14742 (= call!14742 call!14746)))

(declare-fun b!133578 () Bool)

(assert (=> b!133578 (= e!87031 e!87033)))

(declare-fun res!64289 () Bool)

(assert (=> b!133578 (= res!64289 call!14745)))

(assert (=> b!133578 (=> (not res!64289) (not e!87033))))

(declare-fun bm!14743 () Bool)

(assert (=> bm!14743 (= call!14748 call!14747)))

(declare-fun bm!14744 () Bool)

(assert (=> bm!14744 (= call!14744 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!133579 () Bool)

(assert (=> b!133579 (= e!87032 call!14742)))

(declare-fun b!133580 () Bool)

(declare-fun e!87024 () Bool)

(assert (=> b!133580 (= e!87024 e!87022)))

(declare-fun res!64293 () Bool)

(assert (=> b!133580 (=> (not res!64293) (not e!87022))))

(assert (=> b!133580 (= res!64293 (contains!899 lt!69883 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133580 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133581 () Bool)

(declare-fun res!64296 () Bool)

(assert (=> b!133581 (=> (not res!64296) (not e!87028))))

(assert (=> b!133581 (= res!64296 e!87024)))

(declare-fun res!64288 () Bool)

(assert (=> b!133581 (=> res!64288 e!87024)))

(assert (=> b!133581 (= res!64288 (not e!87029))))

(declare-fun res!64295 () Bool)

(assert (=> b!133581 (=> (not res!64295) (not e!87029))))

(assert (=> b!133581 (= res!64295 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun bm!14745 () Bool)

(assert (=> bm!14745 (= call!14747 call!14744)))

(declare-fun b!133582 () Bool)

(assert (=> b!133582 (= e!87026 (= (apply!116 lt!69883 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 newMap!16)))))

(declare-fun b!133583 () Bool)

(assert (=> b!133583 (= e!87030 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133584 () Bool)

(declare-fun Unit!4183 () Unit!4135)

(assert (=> b!133584 (= e!87034 Unit!4183)))

(assert (= (and d!40657 c!24763) b!133573))

(assert (= (and d!40657 (not c!24763)) b!133572))

(assert (= (and b!133572 c!24761) b!133568))

(assert (= (and b!133572 (not c!24761)) b!133569))

(assert (= (and b!133569 c!24764) b!133579))

(assert (= (and b!133569 (not c!24764)) b!133567))

(assert (= (or b!133579 b!133567) bm!14743))

(assert (= (or b!133568 bm!14743) bm!14745))

(assert (= (or b!133568 b!133579) bm!14742))

(assert (= (or b!133573 bm!14745) bm!14744))

(assert (= (or b!133573 bm!14742) bm!14741))

(assert (= (and d!40657 res!64290) b!133583))

(assert (= (and d!40657 c!24760) b!133564))

(assert (= (and d!40657 (not c!24760)) b!133584))

(assert (= (and d!40657 res!64291) b!133581))

(assert (= (and b!133581 res!64295) b!133571))

(assert (= (and b!133581 (not res!64288)) b!133580))

(assert (= (and b!133580 res!64293) b!133574))

(assert (= (and b!133581 res!64296) b!133575))

(assert (= (and b!133575 c!24759) b!133578))

(assert (= (and b!133575 (not c!24759)) b!133565))

(assert (= (and b!133578 res!64289) b!133577))

(assert (= (or b!133578 b!133565) bm!14739))

(assert (= (and b!133575 res!64292) b!133566))

(assert (= (and b!133566 c!24762) b!133576))

(assert (= (and b!133566 (not c!24762)) b!133570))

(assert (= (and b!133576 res!64294) b!133582))

(assert (= (or b!133576 b!133570) bm!14740))

(declare-fun b_lambda!5939 () Bool)

(assert (=> (not b_lambda!5939) (not b!133574)))

(assert (=> b!133574 t!6176))

(declare-fun b_and!8275 () Bool)

(assert (= b_and!8271 (and (=> t!6176 result!3997) b_and!8275)))

(assert (=> b!133574 t!6178))

(declare-fun b_and!8277 () Bool)

(assert (= b_and!8273 (and (=> t!6178 result!3999) b_and!8277)))

(declare-fun m!157751 () Bool)

(assert (=> bm!14744 m!157751))

(declare-fun m!157753 () Bool)

(assert (=> bm!14741 m!157753))

(declare-fun m!157755 () Bool)

(assert (=> b!133574 m!157755))

(assert (=> b!133574 m!157755))

(assert (=> b!133574 m!156175))

(declare-fun m!157757 () Bool)

(assert (=> b!133574 m!157757))

(assert (=> b!133574 m!156163))

(assert (=> b!133574 m!156175))

(assert (=> b!133574 m!156163))

(declare-fun m!157759 () Bool)

(assert (=> b!133574 m!157759))

(declare-fun m!157761 () Bool)

(assert (=> bm!14739 m!157761))

(declare-fun m!157763 () Bool)

(assert (=> b!133573 m!157763))

(assert (=> b!133583 m!156163))

(assert (=> b!133583 m!156163))

(assert (=> b!133583 m!156165))

(assert (=> d!40657 m!156157))

(declare-fun m!157765 () Bool)

(assert (=> b!133564 m!157765))

(declare-fun m!157767 () Bool)

(assert (=> b!133564 m!157767))

(declare-fun m!157769 () Bool)

(assert (=> b!133564 m!157769))

(declare-fun m!157771 () Bool)

(assert (=> b!133564 m!157771))

(assert (=> b!133564 m!157751))

(declare-fun m!157773 () Bool)

(assert (=> b!133564 m!157773))

(declare-fun m!157775 () Bool)

(assert (=> b!133564 m!157775))

(declare-fun m!157777 () Bool)

(assert (=> b!133564 m!157777))

(declare-fun m!157779 () Bool)

(assert (=> b!133564 m!157779))

(declare-fun m!157781 () Bool)

(assert (=> b!133564 m!157781))

(assert (=> b!133564 m!157765))

(declare-fun m!157783 () Bool)

(assert (=> b!133564 m!157783))

(assert (=> b!133564 m!157777))

(declare-fun m!157785 () Bool)

(assert (=> b!133564 m!157785))

(assert (=> b!133564 m!157769))

(declare-fun m!157787 () Bool)

(assert (=> b!133564 m!157787))

(assert (=> b!133564 m!156163))

(declare-fun m!157789 () Bool)

(assert (=> b!133564 m!157789))

(assert (=> b!133564 m!157767))

(declare-fun m!157791 () Bool)

(assert (=> b!133564 m!157791))

(declare-fun m!157793 () Bool)

(assert (=> b!133564 m!157793))

(declare-fun m!157795 () Bool)

(assert (=> bm!14740 m!157795))

(declare-fun m!157797 () Bool)

(assert (=> b!133577 m!157797))

(declare-fun m!157799 () Bool)

(assert (=> b!133582 m!157799))

(assert (=> b!133580 m!156163))

(assert (=> b!133580 m!156163))

(declare-fun m!157801 () Bool)

(assert (=> b!133580 m!157801))

(assert (=> b!133571 m!156163))

(assert (=> b!133571 m!156163))

(assert (=> b!133571 m!156165))

(assert (=> b!132787 d!40657))

(declare-fun b!133587 () Bool)

(declare-fun res!64299 () Bool)

(declare-fun e!87035 () Bool)

(assert (=> b!133587 (=> (not res!64299) (not e!87035))))

(assert (=> b!133587 (= res!64299 (= (size!2534 (v!3199 (underlying!455 thiss!992))) (bvadd (_size!598 (v!3199 (underlying!455 thiss!992))) (bvsdiv (bvadd (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!40659 () Bool)

(declare-fun res!64300 () Bool)

(assert (=> d!40659 (=> (not res!64300) (not e!87035))))

(assert (=> d!40659 (= res!64300 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(assert (=> d!40659 (= (simpleValid!92 (v!3199 (underlying!455 thiss!992))) e!87035)))

(declare-fun b!133588 () Bool)

(assert (=> b!133588 (= e!87035 (and (bvsge (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!598 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!133585 () Bool)

(declare-fun res!64298 () Bool)

(assert (=> b!133585 (=> (not res!64298) (not e!87035))))

(assert (=> b!133585 (= res!64298 (and (= (size!2531 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000001)) (= (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (size!2531 (_values!2848 (v!3199 (underlying!455 thiss!992))))) (bvsge (_size!598 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!598 (v!3199 (underlying!455 thiss!992))) (bvadd (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!133586 () Bool)

(declare-fun res!64297 () Bool)

(assert (=> b!133586 (=> (not res!64297) (not e!87035))))

(assert (=> b!133586 (= res!64297 (bvsge (size!2534 (v!3199 (underlying!455 thiss!992))) (_size!598 (v!3199 (underlying!455 thiss!992)))))))

(assert (= (and d!40659 res!64300) b!133585))

(assert (= (and b!133585 res!64298) b!133586))

(assert (= (and b!133586 res!64297) b!133587))

(assert (= (and b!133587 res!64299) b!133588))

(declare-fun m!157803 () Bool)

(assert (=> b!133587 m!157803))

(assert (=> d!40659 m!155867))

(assert (=> b!133586 m!157803))

(assert (=> d!40287 d!40659))

(assert (=> d!40305 d!40325))

(declare-fun b!133589 () Bool)

(declare-fun e!87037 () Bool)

(declare-fun e!87040 () Bool)

(assert (=> b!133589 (= e!87037 e!87040)))

(declare-fun c!24765 () Bool)

(declare-fun e!87042 () Bool)

(assert (=> b!133589 (= c!24765 e!87042)))

(declare-fun res!64304 () Bool)

(assert (=> b!133589 (=> (not res!64304) (not e!87042))))

(assert (=> b!133589 (= res!64304 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133590 () Bool)

(declare-fun e!87041 () Bool)

(declare-fun lt!69892 () ListLongMap!1707)

(assert (=> b!133590 (= e!87041 (isEmpty!410 lt!69892))))

(declare-fun b!133591 () Bool)

(declare-fun lt!69888 () Unit!4135)

(declare-fun lt!69889 () Unit!4135)

(assert (=> b!133591 (= lt!69888 lt!69889)))

(declare-fun lt!69890 () (_ BitVec 64))

(declare-fun lt!69891 () ListLongMap!1707)

(declare-fun lt!69887 () V!3483)

(declare-fun lt!69893 () (_ BitVec 64))

(assert (=> b!133591 (not (contains!899 (+!175 lt!69891 (tuple2!2627 lt!69890 lt!69887)) lt!69893))))

(assert (=> b!133591 (= lt!69889 (addStillNotContains!61 lt!69891 lt!69890 lt!69887 lt!69893))))

(assert (=> b!133591 (= lt!69893 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133591 (= lt!69887 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133591 (= lt!69890 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!14749 () ListLongMap!1707)

(assert (=> b!133591 (= lt!69891 call!14749)))

(declare-fun e!87039 () ListLongMap!1707)

(assert (=> b!133591 (= e!87039 (+!175 call!14749 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133592 () Bool)

(assert (=> b!133592 (= e!87040 e!87041)))

(declare-fun c!24768 () Bool)

(assert (=> b!133592 (= c!24768 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133593 () Bool)

(assert (=> b!133593 (= e!87042 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!133593 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!133594 () Bool)

(declare-fun res!64302 () Bool)

(assert (=> b!133594 (=> (not res!64302) (not e!87037))))

(assert (=> b!133594 (= res!64302 (not (contains!899 lt!69892 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133595 () Bool)

(assert (=> b!133595 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> b!133595 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2531 (_values!2848 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun e!87036 () Bool)

(assert (=> b!133595 (= e!87036 (= (apply!116 lt!69892 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!40661 () Bool)

(assert (=> d!40661 e!87037))

(declare-fun res!64303 () Bool)

(assert (=> d!40661 (=> (not res!64303) (not e!87037))))

(assert (=> d!40661 (= res!64303 (not (contains!899 lt!69892 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87038 () ListLongMap!1707)

(assert (=> d!40661 (= lt!69892 e!87038)))

(declare-fun c!24766 () Bool)

(assert (=> d!40661 (= c!24766 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!40661 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!40661 (= (getCurrentListMapNoExtraKeys!141 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992)))) lt!69892)))

(declare-fun b!133596 () Bool)

(assert (=> b!133596 (= e!87039 call!14749)))

(declare-fun bm!14746 () Bool)

(assert (=> bm!14746 (= call!14749 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!133597 () Bool)

(assert (=> b!133597 (= e!87040 e!87036)))

(assert (=> b!133597 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun res!64301 () Bool)

(assert (=> b!133597 (= res!64301 (contains!899 lt!69892 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!133597 (=> (not res!64301) (not e!87036))))

(declare-fun b!133598 () Bool)

(assert (=> b!133598 (= e!87038 (ListLongMap!1708 Nil!1713))))

(declare-fun b!133599 () Bool)

(assert (=> b!133599 (= e!87041 (= lt!69892 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133600 () Bool)

(assert (=> b!133600 (= e!87038 e!87039)))

(declare-fun c!24767 () Bool)

(assert (=> b!133600 (= c!24767 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!40661 c!24766) b!133598))

(assert (= (and d!40661 (not c!24766)) b!133600))

(assert (= (and b!133600 c!24767) b!133591))

(assert (= (and b!133600 (not c!24767)) b!133596))

(assert (= (or b!133591 b!133596) bm!14746))

(assert (= (and d!40661 res!64303) b!133594))

(assert (= (and b!133594 res!64302) b!133589))

(assert (= (and b!133589 res!64304) b!133593))

(assert (= (and b!133589 c!24765) b!133597))

(assert (= (and b!133589 (not c!24765)) b!133592))

(assert (= (and b!133597 res!64301) b!133595))

(assert (= (and b!133592 c!24768) b!133599))

(assert (= (and b!133592 (not c!24768)) b!133590))

(declare-fun b_lambda!5941 () Bool)

(assert (=> (not b_lambda!5941) (not b!133591)))

(assert (=> b!133591 t!6164))

(declare-fun b_and!8279 () Bool)

(assert (= b_and!8275 (and (=> t!6164 result!3983) b_and!8279)))

(assert (=> b!133591 t!6166))

(declare-fun b_and!8281 () Bool)

(assert (= b_and!8277 (and (=> t!6166 result!3987) b_and!8281)))

(declare-fun b_lambda!5943 () Bool)

(assert (=> (not b_lambda!5943) (not b!133595)))

(assert (=> b!133595 t!6164))

(declare-fun b_and!8283 () Bool)

(assert (= b_and!8279 (and (=> t!6164 result!3983) b_and!8283)))

(assert (=> b!133595 t!6166))

(declare-fun b_and!8285 () Bool)

(assert (= b_and!8281 (and (=> t!6166 result!3987) b_and!8285)))

(declare-fun m!157805 () Bool)

(assert (=> b!133590 m!157805))

(declare-fun m!157807 () Bool)

(assert (=> d!40661 m!157807))

(assert (=> d!40661 m!155867))

(declare-fun m!157809 () Bool)

(assert (=> b!133594 m!157809))

(declare-fun m!157811 () Bool)

(assert (=> b!133600 m!157811))

(assert (=> b!133600 m!157811))

(declare-fun m!157813 () Bool)

(assert (=> b!133600 m!157813))

(assert (=> b!133593 m!157811))

(assert (=> b!133593 m!157811))

(assert (=> b!133593 m!157813))

(assert (=> b!133595 m!155893))

(declare-fun m!157815 () Bool)

(assert (=> b!133595 m!157815))

(assert (=> b!133595 m!155893))

(declare-fun m!157817 () Bool)

(assert (=> b!133595 m!157817))

(assert (=> b!133595 m!157815))

(assert (=> b!133595 m!157811))

(declare-fun m!157819 () Bool)

(assert (=> b!133595 m!157819))

(assert (=> b!133595 m!157811))

(assert (=> b!133597 m!157811))

(assert (=> b!133597 m!157811))

(declare-fun m!157821 () Bool)

(assert (=> b!133597 m!157821))

(declare-fun m!157823 () Bool)

(assert (=> b!133599 m!157823))

(assert (=> bm!14746 m!157823))

(assert (=> b!133591 m!155893))

(assert (=> b!133591 m!157815))

(assert (=> b!133591 m!155893))

(assert (=> b!133591 m!157817))

(declare-fun m!157825 () Bool)

(assert (=> b!133591 m!157825))

(declare-fun m!157827 () Bool)

(assert (=> b!133591 m!157827))

(assert (=> b!133591 m!157815))

(declare-fun m!157829 () Bool)

(assert (=> b!133591 m!157829))

(assert (=> b!133591 m!157811))

(assert (=> b!133591 m!157827))

(declare-fun m!157831 () Bool)

(assert (=> b!133591 m!157831))

(assert (=> bm!14647 d!40661))

(assert (=> b!132721 d!40353))

(declare-fun lt!69894 () Bool)

(declare-fun d!40663 () Bool)

(assert (=> d!40663 (= lt!69894 (select (content!133 (toList!869 lt!69413)) (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun e!87044 () Bool)

(assert (=> d!40663 (= lt!69894 e!87044)))

(declare-fun res!64305 () Bool)

(assert (=> d!40663 (=> (not res!64305) (not e!87044))))

(assert (=> d!40663 (= res!64305 ((_ is Cons!1712) (toList!869 lt!69413)))))

(assert (=> d!40663 (= (contains!902 (toList!869 lt!69413) (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69894)))

(declare-fun b!133601 () Bool)

(declare-fun e!87043 () Bool)

(assert (=> b!133601 (= e!87044 e!87043)))

(declare-fun res!64306 () Bool)

(assert (=> b!133601 (=> res!64306 e!87043)))

(assert (=> b!133601 (= res!64306 (= (h!2317 (toList!869 lt!69413)) (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133602 () Bool)

(assert (=> b!133602 (= e!87043 (contains!902 (t!6167 (toList!869 lt!69413)) (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!40663 res!64305) b!133601))

(assert (= (and b!133601 (not res!64306)) b!133602))

(declare-fun m!157833 () Bool)

(assert (=> d!40663 m!157833))

(declare-fun m!157835 () Bool)

(assert (=> d!40663 m!157835))

(declare-fun m!157837 () Bool)

(assert (=> b!133602 m!157837))

(assert (=> b!132844 d!40663))

(declare-fun d!40665 () Bool)

(declare-fun res!64307 () Bool)

(declare-fun e!87045 () Bool)

(assert (=> d!40665 (=> res!64307 e!87045)))

(assert (=> d!40665 (= res!64307 (and ((_ is Cons!1712) (toList!869 call!14604)) (= (_1!1324 (h!2317 (toList!869 call!14604))) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))))

(assert (=> d!40665 (= (containsKey!176 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))) e!87045)))

(declare-fun b!133603 () Bool)

(declare-fun e!87046 () Bool)

(assert (=> b!133603 (= e!87045 e!87046)))

(declare-fun res!64308 () Bool)

(assert (=> b!133603 (=> (not res!64308) (not e!87046))))

(assert (=> b!133603 (= res!64308 (and (or (not ((_ is Cons!1712) (toList!869 call!14604))) (bvsle (_1!1324 (h!2317 (toList!869 call!14604))) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))) ((_ is Cons!1712) (toList!869 call!14604)) (bvslt (_1!1324 (h!2317 (toList!869 call!14604))) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))))

(declare-fun b!133604 () Bool)

(assert (=> b!133604 (= e!87046 (containsKey!176 (t!6167 (toList!869 call!14604)) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(assert (= (and d!40665 (not res!64307)) b!133603))

(assert (= (and b!133603 res!64308) b!133604))

(declare-fun m!157839 () Bool)

(assert (=> b!133604 m!157839))

(assert (=> d!40201 d!40665))

(declare-fun d!40667 () Bool)

(assert (=> d!40667 (contains!899 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))

(declare-fun lt!69897 () Unit!4135)

(declare-fun choose!829 (array!4781 array!4783 (_ BitVec 32) (_ BitVec 32) V!3483 V!3483 (_ BitVec 64) (_ BitVec 32) Int) Unit!4135)

(assert (=> d!40667 (= lt!69897 (choose!829 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(assert (=> d!40667 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40667 (= (lemmaArrayContainsKeyThenInListMap!42 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69897)))

(declare-fun bs!5524 () Bool)

(assert (= bs!5524 d!40667))

(assert (=> bs!5524 m!155939))

(assert (=> bs!5524 m!155939))

(assert (=> bs!5524 m!155869))

(assert (=> bs!5524 m!156047))

(assert (=> bs!5524 m!155869))

(declare-fun m!157841 () Bool)

(assert (=> bs!5524 m!157841))

(assert (=> bs!5524 m!156157))

(assert (=> b!132770 d!40667))

(assert (=> b!132770 d!40243))

(assert (=> b!132770 d!40229))

(declare-fun bm!14747 () Bool)

(declare-fun call!14750 () Bool)

(assert (=> bm!14747 (= call!14750 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!133605 () Bool)

(declare-fun e!87049 () Bool)

(declare-fun e!87047 () Bool)

(assert (=> b!133605 (= e!87049 e!87047)))

(declare-fun c!24769 () Bool)

(assert (=> b!133605 (= c!24769 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!40669 () Bool)

(declare-fun res!64309 () Bool)

(assert (=> d!40669 (=> res!64309 e!87049)))

(assert (=> d!40669 (= res!64309 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!40669 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4614 newMap!16) (mask!7165 newMap!16)) e!87049)))

(declare-fun b!133606 () Bool)

(assert (=> b!133606 (= e!87047 call!14750)))

(declare-fun b!133607 () Bool)

(declare-fun e!87048 () Bool)

(assert (=> b!133607 (= e!87048 call!14750)))

(declare-fun b!133608 () Bool)

(assert (=> b!133608 (= e!87047 e!87048)))

(declare-fun lt!69899 () (_ BitVec 64))

(assert (=> b!133608 (= lt!69899 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!69900 () Unit!4135)

(assert (=> b!133608 (= lt!69900 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 newMap!16) lt!69899 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!133608 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69899 #b00000000000000000000000000000000)))

(declare-fun lt!69898 () Unit!4135)

(assert (=> b!133608 (= lt!69898 lt!69900)))

(declare-fun res!64310 () Bool)

(assert (=> b!133608 (= res!64310 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 newMap!16) (mask!7165 newMap!16)) (Found!275 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!133608 (=> (not res!64310) (not e!87048))))

(assert (= (and d!40669 (not res!64309)) b!133605))

(assert (= (and b!133605 c!24769) b!133608))

(assert (= (and b!133605 (not c!24769)) b!133606))

(assert (= (and b!133608 res!64310) b!133607))

(assert (= (or b!133607 b!133606) bm!14747))

(declare-fun m!157843 () Bool)

(assert (=> bm!14747 m!157843))

(declare-fun m!157845 () Bool)

(assert (=> b!133605 m!157845))

(assert (=> b!133605 m!157845))

(declare-fun m!157847 () Bool)

(assert (=> b!133605 m!157847))

(assert (=> b!133608 m!157845))

(declare-fun m!157849 () Bool)

(assert (=> b!133608 m!157849))

(declare-fun m!157851 () Bool)

(assert (=> b!133608 m!157851))

(assert (=> b!133608 m!157845))

(declare-fun m!157853 () Bool)

(assert (=> b!133608 m!157853))

(assert (=> bm!14669 d!40669))

(declare-fun d!40671 () Bool)

(assert (=> d!40671 (= (isDefined!125 (getValueByKey!172 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))) (not (isEmpty!409 (getValueByKey!172 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))))

(declare-fun bs!5525 () Bool)

(assert (= bs!5525 d!40671))

(assert (=> bs!5525 m!156311))

(declare-fun m!157855 () Bool)

(assert (=> bs!5525 m!157855))

(assert (=> b!132790 d!40671))

(declare-fun e!87051 () Option!178)

(declare-fun b!133611 () Bool)

(assert (=> b!133611 (= e!87051 (getValueByKey!172 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!133612 () Bool)

(assert (=> b!133612 (= e!87051 None!176)))

(declare-fun c!24770 () Bool)

(declare-fun d!40673 () Bool)

(assert (=> d!40673 (= c!24770 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun e!87050 () Option!178)

(assert (=> d!40673 (= (getValueByKey!172 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!87050)))

(declare-fun b!133609 () Bool)

(assert (=> b!133609 (= e!87050 (Some!177 (_2!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))))))

(declare-fun b!133610 () Bool)

(assert (=> b!133610 (= e!87050 e!87051)))

(declare-fun c!24771 () Bool)

(assert (=> b!133610 (= c!24771 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (not (= (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))))

(assert (= (and d!40673 c!24770) b!133609))

(assert (= (and d!40673 (not c!24770)) b!133610))

(assert (= (and b!133610 c!24771) b!133611))

(assert (= (and b!133610 (not c!24771)) b!133612))

(assert (=> b!133611 m!155869))

(declare-fun m!157857 () Bool)

(assert (=> b!133611 m!157857))

(assert (=> b!132790 d!40673))

(declare-fun d!40675 () Bool)

(assert (=> d!40675 (= (+!175 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!546 (_keys!4614 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(assert (=> d!40675 true))

(declare-fun _$5!134 () Unit!4135)

(assert (=> d!40675 (= (choose!821 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3261 lt!69175) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)) _$5!134)))

(declare-fun bs!5526 () Bool)

(assert (= bs!5526 d!40675))

(assert (=> bs!5526 m!155939))

(assert (=> bs!5526 m!155939))

(assert (=> bs!5526 m!156249))

(assert (=> bs!5526 m!156043))

(assert (=> bs!5526 m!156305))

(assert (=> d!40241 d!40675))

(assert (=> d!40241 d!40325))

(declare-fun d!40677 () Bool)

(assert (=> d!40677 (= (apply!116 lt!69464 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69464) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5527 () Bool)

(assert (= bs!5527 d!40677))

(assert (=> bs!5527 m!157727))

(assert (=> bs!5527 m!157727))

(declare-fun m!157859 () Bool)

(assert (=> bs!5527 m!157859))

(assert (=> b!132909 d!40677))

(declare-fun b!133613 () Bool)

(declare-fun e!87064 () Unit!4135)

(declare-fun lt!69901 () Unit!4135)

(assert (=> b!133613 (= e!87064 lt!69901)))

(declare-fun lt!69917 () ListLongMap!1707)

(assert (=> b!133613 (= lt!69917 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (_2!1325 lt!69179)) (_values!2848 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179)) (extraKeys!2630 (_2!1325 lt!69179)) (zeroValue!2720 (_2!1325 lt!69179)) (minValue!2720 (_2!1325 lt!69179)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1325 lt!69179))))))

(declare-fun lt!69911 () (_ BitVec 64))

(assert (=> b!133613 (= lt!69911 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69916 () (_ BitVec 64))

(assert (=> b!133613 (= lt!69916 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000))))

(declare-fun lt!69914 () Unit!4135)

(assert (=> b!133613 (= lt!69914 (addStillContains!92 lt!69917 lt!69911 (zeroValue!2720 (_2!1325 lt!69179)) lt!69916))))

(assert (=> b!133613 (contains!899 (+!175 lt!69917 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179)))) lt!69916)))

(declare-fun lt!69921 () Unit!4135)

(assert (=> b!133613 (= lt!69921 lt!69914)))

(declare-fun lt!69903 () ListLongMap!1707)

(assert (=> b!133613 (= lt!69903 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (_2!1325 lt!69179)) (_values!2848 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179)) (extraKeys!2630 (_2!1325 lt!69179)) (zeroValue!2720 (_2!1325 lt!69179)) (minValue!2720 (_2!1325 lt!69179)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1325 lt!69179))))))

(declare-fun lt!69906 () (_ BitVec 64))

(assert (=> b!133613 (= lt!69906 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69922 () (_ BitVec 64))

(assert (=> b!133613 (= lt!69922 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000))))

(declare-fun lt!69913 () Unit!4135)

(assert (=> b!133613 (= lt!69913 (addApplyDifferent!92 lt!69903 lt!69906 (minValue!2720 (_2!1325 lt!69179)) lt!69922))))

(assert (=> b!133613 (= (apply!116 (+!175 lt!69903 (tuple2!2627 lt!69906 (minValue!2720 (_2!1325 lt!69179)))) lt!69922) (apply!116 lt!69903 lt!69922))))

(declare-fun lt!69902 () Unit!4135)

(assert (=> b!133613 (= lt!69902 lt!69913)))

(declare-fun lt!69908 () ListLongMap!1707)

(assert (=> b!133613 (= lt!69908 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (_2!1325 lt!69179)) (_values!2848 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179)) (extraKeys!2630 (_2!1325 lt!69179)) (zeroValue!2720 (_2!1325 lt!69179)) (minValue!2720 (_2!1325 lt!69179)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1325 lt!69179))))))

(declare-fun lt!69910 () (_ BitVec 64))

(assert (=> b!133613 (= lt!69910 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69904 () (_ BitVec 64))

(assert (=> b!133613 (= lt!69904 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000))))

(declare-fun lt!69907 () Unit!4135)

(assert (=> b!133613 (= lt!69907 (addApplyDifferent!92 lt!69908 lt!69910 (zeroValue!2720 (_2!1325 lt!69179)) lt!69904))))

(assert (=> b!133613 (= (apply!116 (+!175 lt!69908 (tuple2!2627 lt!69910 (zeroValue!2720 (_2!1325 lt!69179)))) lt!69904) (apply!116 lt!69908 lt!69904))))

(declare-fun lt!69915 () Unit!4135)

(assert (=> b!133613 (= lt!69915 lt!69907)))

(declare-fun lt!69905 () ListLongMap!1707)

(assert (=> b!133613 (= lt!69905 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (_2!1325 lt!69179)) (_values!2848 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179)) (extraKeys!2630 (_2!1325 lt!69179)) (zeroValue!2720 (_2!1325 lt!69179)) (minValue!2720 (_2!1325 lt!69179)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1325 lt!69179))))))

(declare-fun lt!69920 () (_ BitVec 64))

(assert (=> b!133613 (= lt!69920 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69918 () (_ BitVec 64))

(assert (=> b!133613 (= lt!69918 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000))))

(assert (=> b!133613 (= lt!69901 (addApplyDifferent!92 lt!69905 lt!69920 (minValue!2720 (_2!1325 lt!69179)) lt!69918))))

(assert (=> b!133613 (= (apply!116 (+!175 lt!69905 (tuple2!2627 lt!69920 (minValue!2720 (_2!1325 lt!69179)))) lt!69918) (apply!116 lt!69905 lt!69918))))

(declare-fun b!133614 () Bool)

(declare-fun e!87061 () Bool)

(declare-fun call!14754 () Bool)

(assert (=> b!133614 (= e!87061 (not call!14754))))

(declare-fun b!133615 () Bool)

(declare-fun e!87058 () Bool)

(declare-fun e!87057 () Bool)

(assert (=> b!133615 (= e!87058 e!87057)))

(declare-fun c!24775 () Bool)

(assert (=> b!133615 (= c!24775 (not (= (bvand (extraKeys!2630 (_2!1325 lt!69179)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133616 () Bool)

(declare-fun e!87062 () ListLongMap!1707)

(declare-fun call!14757 () ListLongMap!1707)

(assert (=> b!133616 (= e!87062 call!14757)))

(declare-fun b!133617 () Bool)

(declare-fun e!87053 () ListLongMap!1707)

(declare-fun call!14751 () ListLongMap!1707)

(assert (=> b!133617 (= e!87053 call!14751)))

(declare-fun b!133618 () Bool)

(declare-fun c!24777 () Bool)

(assert (=> b!133618 (= c!24777 (and (not (= (bvand (extraKeys!2630 (_2!1325 lt!69179)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 (_2!1325 lt!69179)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!133618 (= e!87053 e!87062)))

(declare-fun b!133619 () Bool)

(declare-fun call!14752 () Bool)

(assert (=> b!133619 (= e!87057 (not call!14752))))

(declare-fun d!40679 () Bool)

(assert (=> d!40679 e!87058))

(declare-fun res!64314 () Bool)

(assert (=> d!40679 (=> (not res!64314) (not e!87058))))

(assert (=> d!40679 (= res!64314 (or (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))))

(declare-fun lt!69919 () ListLongMap!1707)

(declare-fun lt!69912 () ListLongMap!1707)

(assert (=> d!40679 (= lt!69919 lt!69912)))

(declare-fun lt!69909 () Unit!4135)

(assert (=> d!40679 (= lt!69909 e!87064)))

(declare-fun c!24773 () Bool)

(declare-fun e!87060 () Bool)

(assert (=> d!40679 (= c!24773 e!87060)))

(declare-fun res!64313 () Bool)

(assert (=> d!40679 (=> (not res!64313) (not e!87060))))

(assert (=> d!40679 (= res!64313 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(declare-fun e!87055 () ListLongMap!1707)

(assert (=> d!40679 (= lt!69912 e!87055)))

(declare-fun c!24776 () Bool)

(assert (=> d!40679 (= c!24776 (and (not (= (bvand (extraKeys!2630 (_2!1325 lt!69179)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 (_2!1325 lt!69179)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40679 (validMask!0 (mask!7165 (_2!1325 lt!69179)))))

(assert (=> d!40679 (= (getCurrentListMap!546 (_keys!4614 (_2!1325 lt!69179)) (_values!2848 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179)) (extraKeys!2630 (_2!1325 lt!69179)) (zeroValue!2720 (_2!1325 lt!69179)) (minValue!2720 (_2!1325 lt!69179)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1325 lt!69179))) lt!69919)))

(declare-fun b!133620 () Bool)

(declare-fun e!87059 () Bool)

(assert (=> b!133620 (= e!87059 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(declare-fun bm!14748 () Bool)

(assert (=> bm!14748 (= call!14754 (contains!899 lt!69919 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133621 () Bool)

(assert (=> b!133621 (= e!87055 e!87053)))

(declare-fun c!24774 () Bool)

(assert (=> b!133621 (= c!24774 (and (not (= (bvand (extraKeys!2630 (_2!1325 lt!69179)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 (_2!1325 lt!69179)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133622 () Bool)

(declare-fun call!14755 () ListLongMap!1707)

(assert (=> b!133622 (= e!87055 (+!175 call!14755 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179)))))))

(declare-fun b!133623 () Bool)

(declare-fun e!87052 () Bool)

(assert (=> b!133623 (= e!87052 (= (apply!116 lt!69919 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (_values!2848 (_2!1325 lt!69179))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1325 lt!69179)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133623 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_values!2848 (_2!1325 lt!69179)))))))

(assert (=> b!133623 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(declare-fun bm!14749 () Bool)

(assert (=> bm!14749 (= call!14752 (contains!899 lt!69919 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133624 () Bool)

(declare-fun res!64315 () Bool)

(assert (=> b!133624 (=> (not res!64315) (not e!87058))))

(assert (=> b!133624 (= res!64315 e!87061)))

(declare-fun c!24772 () Bool)

(assert (=> b!133624 (= c!24772 (not (= (bvand (extraKeys!2630 (_2!1325 lt!69179)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133625 () Bool)

(declare-fun e!87056 () Bool)

(assert (=> b!133625 (= e!87057 e!87056)))

(declare-fun res!64317 () Bool)

(assert (=> b!133625 (= res!64317 call!14752)))

(assert (=> b!133625 (=> (not res!64317) (not e!87056))))

(declare-fun bm!14750 () Bool)

(declare-fun call!14753 () ListLongMap!1707)

(declare-fun call!14756 () ListLongMap!1707)

(assert (=> bm!14750 (= call!14755 (+!175 (ite c!24776 call!14753 (ite c!24774 call!14756 call!14757)) (ite (or c!24776 c!24774) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1325 lt!69179))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179))))))))

(declare-fun b!133626 () Bool)

(declare-fun e!87063 () Bool)

(assert (=> b!133626 (= e!87063 (= (apply!116 lt!69919 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 (_2!1325 lt!69179))))))

(declare-fun bm!14751 () Bool)

(assert (=> bm!14751 (= call!14751 call!14755)))

(declare-fun b!133627 () Bool)

(assert (=> b!133627 (= e!87061 e!87063)))

(declare-fun res!64312 () Bool)

(assert (=> b!133627 (= res!64312 call!14754)))

(assert (=> b!133627 (=> (not res!64312) (not e!87063))))

(declare-fun bm!14752 () Bool)

(assert (=> bm!14752 (= call!14757 call!14756)))

(declare-fun bm!14753 () Bool)

(assert (=> bm!14753 (= call!14753 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (_2!1325 lt!69179)) (_values!2848 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179)) (extraKeys!2630 (_2!1325 lt!69179)) (zeroValue!2720 (_2!1325 lt!69179)) (minValue!2720 (_2!1325 lt!69179)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1325 lt!69179))))))

(declare-fun b!133628 () Bool)

(assert (=> b!133628 (= e!87062 call!14751)))

(declare-fun b!133629 () Bool)

(declare-fun e!87054 () Bool)

(assert (=> b!133629 (= e!87054 e!87052)))

(declare-fun res!64316 () Bool)

(assert (=> b!133629 (=> (not res!64316) (not e!87052))))

(assert (=> b!133629 (= res!64316 (contains!899 lt!69919 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(assert (=> b!133629 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(declare-fun b!133630 () Bool)

(declare-fun res!64319 () Bool)

(assert (=> b!133630 (=> (not res!64319) (not e!87058))))

(assert (=> b!133630 (= res!64319 e!87054)))

(declare-fun res!64311 () Bool)

(assert (=> b!133630 (=> res!64311 e!87054)))

(assert (=> b!133630 (= res!64311 (not e!87059))))

(declare-fun res!64318 () Bool)

(assert (=> b!133630 (=> (not res!64318) (not e!87059))))

(assert (=> b!133630 (= res!64318 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(declare-fun bm!14754 () Bool)

(assert (=> bm!14754 (= call!14756 call!14753)))

(declare-fun b!133631 () Bool)

(assert (=> b!133631 (= e!87056 (= (apply!116 lt!69919 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 (_2!1325 lt!69179))))))

(declare-fun b!133632 () Bool)

(assert (=> b!133632 (= e!87060 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(declare-fun b!133633 () Bool)

(declare-fun Unit!4184 () Unit!4135)

(assert (=> b!133633 (= e!87064 Unit!4184)))

(assert (= (and d!40679 c!24776) b!133622))

(assert (= (and d!40679 (not c!24776)) b!133621))

(assert (= (and b!133621 c!24774) b!133617))

(assert (= (and b!133621 (not c!24774)) b!133618))

(assert (= (and b!133618 c!24777) b!133628))

(assert (= (and b!133618 (not c!24777)) b!133616))

(assert (= (or b!133628 b!133616) bm!14752))

(assert (= (or b!133617 bm!14752) bm!14754))

(assert (= (or b!133617 b!133628) bm!14751))

(assert (= (or b!133622 bm!14754) bm!14753))

(assert (= (or b!133622 bm!14751) bm!14750))

(assert (= (and d!40679 res!64313) b!133632))

(assert (= (and d!40679 c!24773) b!133613))

(assert (= (and d!40679 (not c!24773)) b!133633))

(assert (= (and d!40679 res!64314) b!133630))

(assert (= (and b!133630 res!64318) b!133620))

(assert (= (and b!133630 (not res!64311)) b!133629))

(assert (= (and b!133629 res!64316) b!133623))

(assert (= (and b!133630 res!64319) b!133624))

(assert (= (and b!133624 c!24772) b!133627))

(assert (= (and b!133624 (not c!24772)) b!133614))

(assert (= (and b!133627 res!64312) b!133626))

(assert (= (or b!133627 b!133614) bm!14748))

(assert (= (and b!133624 res!64315) b!133615))

(assert (= (and b!133615 c!24775) b!133625))

(assert (= (and b!133615 (not c!24775)) b!133619))

(assert (= (and b!133625 res!64317) b!133631))

(assert (= (or b!133625 b!133619) bm!14749))

(declare-fun b_lambda!5945 () Bool)

(assert (=> (not b_lambda!5945) (not b!133623)))

(declare-fun t!6180 () Bool)

(declare-fun tb!2425 () Bool)

(assert (=> (and b!132300 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 (_2!1325 lt!69179))) t!6180) tb!2425))

(declare-fun result!4001 () Bool)

(assert (=> tb!2425 (= result!4001 tp_is_empty!2877)))

(assert (=> b!133623 t!6180))

(declare-fun b_and!8287 () Bool)

(assert (= b_and!8283 (and (=> t!6180 result!4001) b_and!8287)))

(declare-fun t!6182 () Bool)

(declare-fun tb!2427 () Bool)

(assert (=> (and b!132303 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (_2!1325 lt!69179))) t!6182) tb!2427))

(declare-fun result!4003 () Bool)

(assert (= result!4003 result!4001))

(assert (=> b!133623 t!6182))

(declare-fun b_and!8289 () Bool)

(assert (= b_and!8285 (and (=> t!6182 result!4003) b_and!8289)))

(declare-fun m!157861 () Bool)

(assert (=> bm!14753 m!157861))

(declare-fun m!157863 () Bool)

(assert (=> bm!14750 m!157863))

(declare-fun m!157865 () Bool)

(assert (=> b!133623 m!157865))

(assert (=> b!133623 m!157865))

(declare-fun m!157867 () Bool)

(assert (=> b!133623 m!157867))

(declare-fun m!157869 () Bool)

(assert (=> b!133623 m!157869))

(assert (=> b!133623 m!157587))

(assert (=> b!133623 m!157867))

(assert (=> b!133623 m!157587))

(declare-fun m!157871 () Bool)

(assert (=> b!133623 m!157871))

(declare-fun m!157873 () Bool)

(assert (=> bm!14748 m!157873))

(declare-fun m!157875 () Bool)

(assert (=> b!133622 m!157875))

(assert (=> b!133632 m!157587))

(assert (=> b!133632 m!157587))

(assert (=> b!133632 m!157591))

(assert (=> d!40679 m!156817))

(declare-fun m!157877 () Bool)

(assert (=> b!133613 m!157877))

(declare-fun m!157879 () Bool)

(assert (=> b!133613 m!157879))

(declare-fun m!157881 () Bool)

(assert (=> b!133613 m!157881))

(declare-fun m!157883 () Bool)

(assert (=> b!133613 m!157883))

(assert (=> b!133613 m!157861))

(declare-fun m!157885 () Bool)

(assert (=> b!133613 m!157885))

(declare-fun m!157887 () Bool)

(assert (=> b!133613 m!157887))

(declare-fun m!157889 () Bool)

(assert (=> b!133613 m!157889))

(declare-fun m!157891 () Bool)

(assert (=> b!133613 m!157891))

(declare-fun m!157893 () Bool)

(assert (=> b!133613 m!157893))

(assert (=> b!133613 m!157877))

(declare-fun m!157895 () Bool)

(assert (=> b!133613 m!157895))

(assert (=> b!133613 m!157889))

(declare-fun m!157897 () Bool)

(assert (=> b!133613 m!157897))

(assert (=> b!133613 m!157881))

(declare-fun m!157899 () Bool)

(assert (=> b!133613 m!157899))

(assert (=> b!133613 m!157587))

(declare-fun m!157901 () Bool)

(assert (=> b!133613 m!157901))

(assert (=> b!133613 m!157879))

(declare-fun m!157903 () Bool)

(assert (=> b!133613 m!157903))

(declare-fun m!157905 () Bool)

(assert (=> b!133613 m!157905))

(declare-fun m!157907 () Bool)

(assert (=> bm!14749 m!157907))

(declare-fun m!157909 () Bool)

(assert (=> b!133626 m!157909))

(declare-fun m!157911 () Bool)

(assert (=> b!133631 m!157911))

(assert (=> b!133629 m!157587))

(assert (=> b!133629 m!157587))

(declare-fun m!157913 () Bool)

(assert (=> b!133629 m!157913))

(assert (=> b!133620 m!157587))

(assert (=> b!133620 m!157587))

(assert (=> b!133620 m!157591))

(assert (=> d!40197 d!40679))

(declare-fun d!40681 () Bool)

(assert (=> d!40681 (= (isDefined!125 (getValueByKey!172 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))) (not (isEmpty!409 (getValueByKey!172 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))))

(declare-fun bs!5528 () Bool)

(assert (= bs!5528 d!40681))

(assert (=> bs!5528 m!156633))

(declare-fun m!157915 () Bool)

(assert (=> bs!5528 m!157915))

(assert (=> b!132956 d!40681))

(declare-fun e!87066 () Option!178)

(declare-fun b!133636 () Bool)

(assert (=> b!133636 (= e!87066 (getValueByKey!172 (t!6167 (toList!869 call!14619)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!133637 () Bool)

(assert (=> b!133637 (= e!87066 None!176)))

(declare-fun d!40683 () Bool)

(declare-fun c!24778 () Bool)

(assert (=> d!40683 (= c!24778 (and ((_ is Cons!1712) (toList!869 call!14619)) (= (_1!1324 (h!2317 (toList!869 call!14619))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun e!87065 () Option!178)

(assert (=> d!40683 (= (getValueByKey!172 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!87065)))

(declare-fun b!133634 () Bool)

(assert (=> b!133634 (= e!87065 (Some!177 (_2!1324 (h!2317 (toList!869 call!14619)))))))

(declare-fun b!133635 () Bool)

(assert (=> b!133635 (= e!87065 e!87066)))

(declare-fun c!24779 () Bool)

(assert (=> b!133635 (= c!24779 (and ((_ is Cons!1712) (toList!869 call!14619)) (not (= (_1!1324 (h!2317 (toList!869 call!14619))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))))

(assert (= (and d!40683 c!24778) b!133634))

(assert (= (and d!40683 (not c!24778)) b!133635))

(assert (= (and b!133635 c!24779) b!133636))

(assert (= (and b!133635 (not c!24779)) b!133637))

(assert (=> b!133636 m!155869))

(declare-fun m!157917 () Bool)

(assert (=> b!133636 m!157917))

(assert (=> b!132956 d!40683))

(declare-fun b!133640 () Bool)

(declare-fun e!87068 () Option!178)

(assert (=> b!133640 (= e!87068 (getValueByKey!172 (t!6167 (toList!869 lt!69442)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133641 () Bool)

(assert (=> b!133641 (= e!87068 None!176)))

(declare-fun d!40685 () Bool)

(declare-fun c!24780 () Bool)

(assert (=> d!40685 (= c!24780 (and ((_ is Cons!1712) (toList!869 lt!69442)) (= (_1!1324 (h!2317 (toList!869 lt!69442))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87067 () Option!178)

(assert (=> d!40685 (= (getValueByKey!172 (toList!869 lt!69442) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87067)))

(declare-fun b!133638 () Bool)

(assert (=> b!133638 (= e!87067 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69442)))))))

(declare-fun b!133639 () Bool)

(assert (=> b!133639 (= e!87067 e!87068)))

(declare-fun c!24781 () Bool)

(assert (=> b!133639 (= c!24781 (and ((_ is Cons!1712) (toList!869 lt!69442)) (not (= (_1!1324 (h!2317 (toList!869 lt!69442))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!40685 c!24780) b!133638))

(assert (= (and d!40685 (not c!24780)) b!133639))

(assert (= (and b!133639 c!24781) b!133640))

(assert (= (and b!133639 (not c!24781)) b!133641))

(declare-fun m!157919 () Bool)

(assert (=> b!133640 m!157919))

(assert (=> b!132892 d!40685))

(declare-fun d!40687 () Bool)

(declare-fun res!64320 () Bool)

(declare-fun e!87069 () Bool)

(assert (=> d!40687 (=> res!64320 e!87069)))

(assert (=> d!40687 (= res!64320 (= (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> d!40687 (= (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!87069)))

(declare-fun b!133642 () Bool)

(declare-fun e!87070 () Bool)

(assert (=> b!133642 (= e!87069 e!87070)))

(declare-fun res!64321 () Bool)

(assert (=> b!133642 (=> (not res!64321) (not e!87070))))

(assert (=> b!133642 (= res!64321 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133643 () Bool)

(assert (=> b!133643 (= e!87070 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!40687 (not res!64320)) b!133642))

(assert (= (and b!133642 res!64321) b!133643))

(assert (=> d!40687 m!157845))

(assert (=> b!133643 m!155869))

(declare-fun m!157921 () Bool)

(assert (=> b!133643 m!157921))

(assert (=> b!132895 d!40687))

(declare-fun d!40689 () Bool)

(assert (=> d!40689 (= (get!1486 (getValueByKey!172 (toList!869 lt!69079) lt!69098)) (v!3203 (getValueByKey!172 (toList!869 lt!69079) lt!69098)))))

(assert (=> d!40265 d!40689))

(declare-fun b!133646 () Bool)

(declare-fun e!87072 () Option!178)

(assert (=> b!133646 (= e!87072 (getValueByKey!172 (t!6167 (toList!869 lt!69079)) lt!69098))))

(declare-fun b!133647 () Bool)

(assert (=> b!133647 (= e!87072 None!176)))

(declare-fun d!40691 () Bool)

(declare-fun c!24782 () Bool)

(assert (=> d!40691 (= c!24782 (and ((_ is Cons!1712) (toList!869 lt!69079)) (= (_1!1324 (h!2317 (toList!869 lt!69079))) lt!69098)))))

(declare-fun e!87071 () Option!178)

(assert (=> d!40691 (= (getValueByKey!172 (toList!869 lt!69079) lt!69098) e!87071)))

(declare-fun b!133644 () Bool)

(assert (=> b!133644 (= e!87071 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69079)))))))

(declare-fun b!133645 () Bool)

(assert (=> b!133645 (= e!87071 e!87072)))

(declare-fun c!24783 () Bool)

(assert (=> b!133645 (= c!24783 (and ((_ is Cons!1712) (toList!869 lt!69079)) (not (= (_1!1324 (h!2317 (toList!869 lt!69079))) lt!69098))))))

(assert (= (and d!40691 c!24782) b!133644))

(assert (= (and d!40691 (not c!24782)) b!133645))

(assert (= (and b!133645 c!24783) b!133646))

(assert (= (and b!133645 (not c!24783)) b!133647))

(declare-fun m!157923 () Bool)

(assert (=> b!133646 m!157923))

(assert (=> d!40265 d!40691))

(declare-fun d!40693 () Bool)

(assert (=> d!40693 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69498 #b00000000000000000000000000000000)))

(declare-fun lt!69923 () Unit!4135)

(assert (=> d!40693 (= lt!69923 (choose!13 (_keys!4614 newMap!16) lt!69498 #b00000000000000000000000000000000))))

(assert (=> d!40693 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!40693 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 newMap!16) lt!69498 #b00000000000000000000000000000000) lt!69923)))

(declare-fun bs!5529 () Bool)

(assert (= bs!5529 d!40693))

(assert (=> bs!5529 m!156641))

(declare-fun m!157925 () Bool)

(assert (=> bs!5529 m!157925))

(assert (=> b!132960 d!40693))

(declare-fun d!40695 () Bool)

(declare-fun res!64322 () Bool)

(declare-fun e!87073 () Bool)

(assert (=> d!40695 (=> res!64322 e!87073)))

(assert (=> d!40695 (= res!64322 (= (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) lt!69498))))

(assert (=> d!40695 (= (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69498 #b00000000000000000000000000000000) e!87073)))

(declare-fun b!133648 () Bool)

(declare-fun e!87074 () Bool)

(assert (=> b!133648 (= e!87073 e!87074)))

(declare-fun res!64323 () Bool)

(assert (=> b!133648 (=> (not res!64323) (not e!87074))))

(assert (=> b!133648 (= res!64323 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133649 () Bool)

(assert (=> b!133649 (= e!87074 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69498 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40695 (not res!64322)) b!133648))

(assert (= (and b!133648 res!64323) b!133649))

(assert (=> d!40695 m!156163))

(declare-fun m!157927 () Bool)

(assert (=> b!133649 m!157927))

(assert (=> b!132960 d!40695))

(declare-fun b!133650 () Bool)

(declare-fun e!87075 () SeekEntryResult!275)

(declare-fun lt!69925 () SeekEntryResult!275)

(assert (=> b!133650 (= e!87075 (Found!275 (index!3262 lt!69925)))))

(declare-fun d!40697 () Bool)

(declare-fun lt!69926 () SeekEntryResult!275)

(assert (=> d!40697 (and (or ((_ is Undefined!275) lt!69926) (not ((_ is Found!275) lt!69926)) (and (bvsge (index!3261 lt!69926) #b00000000000000000000000000000000) (bvslt (index!3261 lt!69926) (size!2530 (_keys!4614 newMap!16))))) (or ((_ is Undefined!275) lt!69926) ((_ is Found!275) lt!69926) (not ((_ is MissingZero!275) lt!69926)) (and (bvsge (index!3260 lt!69926) #b00000000000000000000000000000000) (bvslt (index!3260 lt!69926) (size!2530 (_keys!4614 newMap!16))))) (or ((_ is Undefined!275) lt!69926) ((_ is Found!275) lt!69926) ((_ is MissingZero!275) lt!69926) (not ((_ is MissingVacant!275) lt!69926)) (and (bvsge (index!3263 lt!69926) #b00000000000000000000000000000000) (bvslt (index!3263 lt!69926) (size!2530 (_keys!4614 newMap!16))))) (or ((_ is Undefined!275) lt!69926) (ite ((_ is Found!275) lt!69926) (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69926)) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!275) lt!69926) (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3260 lt!69926)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!275) lt!69926) (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3263 lt!69926)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87076 () SeekEntryResult!275)

(assert (=> d!40697 (= lt!69926 e!87076)))

(declare-fun c!24785 () Bool)

(assert (=> d!40697 (= c!24785 (and ((_ is Intermediate!275) lt!69925) (undefined!1087 lt!69925)))))

(assert (=> d!40697 (= lt!69925 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (mask!7165 newMap!16)) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (=> d!40697 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40697 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!69926)))

(declare-fun b!133651 () Bool)

(assert (=> b!133651 (= e!87076 e!87075)))

(declare-fun lt!69924 () (_ BitVec 64))

(assert (=> b!133651 (= lt!69924 (select (arr!2261 (_keys!4614 newMap!16)) (index!3262 lt!69925)))))

(declare-fun c!24784 () Bool)

(assert (=> b!133651 (= c!24784 (= lt!69924 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133652 () Bool)

(declare-fun e!87077 () SeekEntryResult!275)

(assert (=> b!133652 (= e!87077 (MissingZero!275 (index!3262 lt!69925)))))

(declare-fun b!133653 () Bool)

(declare-fun c!24786 () Bool)

(assert (=> b!133653 (= c!24786 (= lt!69924 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133653 (= e!87075 e!87077)))

(declare-fun b!133654 () Bool)

(assert (=> b!133654 (= e!87076 Undefined!275)))

(declare-fun b!133655 () Bool)

(assert (=> b!133655 (= e!87077 (seekKeyOrZeroReturnVacant!0 (x!15592 lt!69925) (index!3262 lt!69925) (index!3262 lt!69925) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (= (and d!40697 c!24785) b!133654))

(assert (= (and d!40697 (not c!24785)) b!133651))

(assert (= (and b!133651 c!24784) b!133650))

(assert (= (and b!133651 (not c!24784)) b!133653))

(assert (= (and b!133653 c!24786) b!133652))

(assert (= (and b!133653 (not c!24786)) b!133655))

(declare-fun m!157929 () Bool)

(assert (=> d!40697 m!157929))

(declare-fun m!157931 () Bool)

(assert (=> d!40697 m!157931))

(assert (=> d!40697 m!156163))

(declare-fun m!157933 () Bool)

(assert (=> d!40697 m!157933))

(assert (=> d!40697 m!156163))

(assert (=> d!40697 m!157931))

(assert (=> d!40697 m!156157))

(declare-fun m!157935 () Bool)

(assert (=> d!40697 m!157935))

(declare-fun m!157937 () Bool)

(assert (=> d!40697 m!157937))

(declare-fun m!157939 () Bool)

(assert (=> b!133651 m!157939))

(assert (=> b!133655 m!156163))

(declare-fun m!157941 () Bool)

(assert (=> b!133655 m!157941))

(assert (=> b!132960 d!40697))

(declare-fun b!133656 () Bool)

(declare-fun e!87079 () (_ BitVec 32))

(declare-fun e!87078 () (_ BitVec 32))

(assert (=> b!133656 (= e!87079 e!87078)))

(declare-fun c!24787 () Bool)

(assert (=> b!133656 (= c!24787 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133657 () Bool)

(declare-fun call!14758 () (_ BitVec 32))

(assert (=> b!133657 (= e!87078 (bvadd #b00000000000000000000000000000001 call!14758))))

(declare-fun b!133658 () Bool)

(assert (=> b!133658 (= e!87078 call!14758)))

(declare-fun d!40699 () Bool)

(declare-fun lt!69927 () (_ BitVec 32))

(assert (=> d!40699 (and (bvsge lt!69927 #b00000000000000000000000000000000) (bvsle lt!69927 (bvsub (size!2530 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!40699 (= lt!69927 e!87079)))

(declare-fun c!24788 () Bool)

(assert (=> d!40699 (= c!24788 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!40699 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2530 (_keys!4614 newMap!16)) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!40699 (= (arrayCountValidKeys!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))) lt!69927)))

(declare-fun b!133659 () Bool)

(assert (=> b!133659 (= e!87079 #b00000000000000000000000000000000)))

(declare-fun bm!14755 () Bool)

(assert (=> bm!14755 (= call!14758 (arrayCountValidKeys!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (= (and d!40699 c!24788) b!133659))

(assert (= (and d!40699 (not c!24788)) b!133656))

(assert (= (and b!133656 c!24787) b!133657))

(assert (= (and b!133656 (not c!24787)) b!133658))

(assert (= (or b!133657 b!133658) bm!14755))

(assert (=> b!133656 m!157845))

(assert (=> b!133656 m!157845))

(assert (=> b!133656 m!157847))

(declare-fun m!157943 () Bool)

(assert (=> bm!14755 m!157943))

(assert (=> bm!14624 d!40699))

(assert (=> b!132961 d!40371))

(declare-fun d!40701 () Bool)

(assert (=> d!40701 (isDefined!125 (getValueByKey!172 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!69928 () Unit!4135)

(assert (=> d!40701 (= lt!69928 (choose!817 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!87080 () Bool)

(assert (=> d!40701 e!87080))

(declare-fun res!64324 () Bool)

(assert (=> d!40701 (=> (not res!64324) (not e!87080))))

(assert (=> d!40701 (= res!64324 (isStrictlySorted!322 (toList!869 lt!69095)))))

(assert (=> d!40701 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!69928)))

(declare-fun b!133660 () Bool)

(assert (=> b!133660 (= e!87080 (containsKey!176 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!40701 res!64324) b!133660))

(assert (=> d!40701 m!155949))

(assert (=> d!40701 m!156115))

(assert (=> d!40701 m!156115))

(assert (=> d!40701 m!156665))

(assert (=> d!40701 m!155949))

(declare-fun m!157945 () Bool)

(assert (=> d!40701 m!157945))

(assert (=> d!40701 m!156687))

(assert (=> b!133660 m!155949))

(assert (=> b!133660 m!156661))

(assert (=> b!132968 d!40701))

(assert (=> b!132968 d!40327))

(assert (=> b!132968 d!40329))

(declare-fun d!40703 () Bool)

(assert (=> d!40703 (= (inRange!0 (ite c!24569 (index!3260 lt!69440) (index!3263 lt!69440)) (mask!7165 newMap!16)) (and (bvsge (ite c!24569 (index!3260 lt!69440) (index!3263 lt!69440)) #b00000000000000000000000000000000) (bvslt (ite c!24569 (index!3260 lt!69440) (index!3263 lt!69440)) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14653 d!40703))

(declare-fun bm!14756 () Bool)

(declare-fun call!14759 () Bool)

(assert (=> bm!14756 (= call!14759 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4614 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179))))))

(declare-fun b!133661 () Bool)

(declare-fun e!87083 () Bool)

(declare-fun e!87081 () Bool)

(assert (=> b!133661 (= e!87083 e!87081)))

(declare-fun c!24789 () Bool)

(assert (=> b!133661 (= c!24789 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(declare-fun d!40705 () Bool)

(declare-fun res!64325 () Bool)

(assert (=> d!40705 (=> res!64325 e!87083)))

(assert (=> d!40705 (= res!64325 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(assert (=> d!40705 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179))) e!87083)))

(declare-fun b!133662 () Bool)

(assert (=> b!133662 (= e!87081 call!14759)))

(declare-fun b!133663 () Bool)

(declare-fun e!87082 () Bool)

(assert (=> b!133663 (= e!87082 call!14759)))

(declare-fun b!133664 () Bool)

(assert (=> b!133664 (= e!87081 e!87082)))

(declare-fun lt!69930 () (_ BitVec 64))

(assert (=> b!133664 (= lt!69930 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000))))

(declare-fun lt!69931 () Unit!4135)

(assert (=> b!133664 (= lt!69931 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (_2!1325 lt!69179)) lt!69930 #b00000000000000000000000000000000))))

(assert (=> b!133664 (arrayContainsKey!0 (_keys!4614 (_2!1325 lt!69179)) lt!69930 #b00000000000000000000000000000000)))

(declare-fun lt!69929 () Unit!4135)

(assert (=> b!133664 (= lt!69929 lt!69931)))

(declare-fun res!64326 () Bool)

(assert (=> b!133664 (= res!64326 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000) (_keys!4614 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179))) (Found!275 #b00000000000000000000000000000000)))))

(assert (=> b!133664 (=> (not res!64326) (not e!87082))))

(assert (= (and d!40705 (not res!64325)) b!133661))

(assert (= (and b!133661 c!24789) b!133664))

(assert (= (and b!133661 (not c!24789)) b!133662))

(assert (= (and b!133664 res!64326) b!133663))

(assert (= (or b!133663 b!133662) bm!14756))

(declare-fun m!157947 () Bool)

(assert (=> bm!14756 m!157947))

(assert (=> b!133661 m!157587))

(assert (=> b!133661 m!157587))

(assert (=> b!133661 m!157591))

(assert (=> b!133664 m!157587))

(declare-fun m!157949 () Bool)

(assert (=> b!133664 m!157949))

(declare-fun m!157951 () Bool)

(assert (=> b!133664 m!157951))

(assert (=> b!133664 m!157587))

(declare-fun m!157953 () Bool)

(assert (=> b!133664 m!157953))

(assert (=> b!132792 d!40705))

(declare-fun d!40707 () Bool)

(assert (=> d!40707 (= (size!2534 newMap!16) (bvadd (_size!598 newMap!16) (bvsdiv (bvadd (extraKeys!2630 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!132927 d!40707))

(declare-fun d!40709 () Bool)

(declare-fun res!64327 () Bool)

(declare-fun e!87084 () Bool)

(assert (=> d!40709 (=> res!64327 e!87084)))

(assert (=> d!40709 (= res!64327 (and ((_ is Cons!1712) (toList!869 lt!69095)) (= (_1!1324 (h!2317 (toList!869 lt!69095))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!40709 (= (containsKey!176 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!87084)))

(declare-fun b!133665 () Bool)

(declare-fun e!87085 () Bool)

(assert (=> b!133665 (= e!87084 e!87085)))

(declare-fun res!64328 () Bool)

(assert (=> b!133665 (=> (not res!64328) (not e!87085))))

(assert (=> b!133665 (= res!64328 (and (or (not ((_ is Cons!1712) (toList!869 lt!69095))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69095))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1712) (toList!869 lt!69095)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69095))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!133666 () Bool)

(assert (=> b!133666 (= e!87085 (containsKey!176 (t!6167 (toList!869 lt!69095)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!40709 (not res!64327)) b!133665))

(assert (= (and b!133665 res!64328) b!133666))

(assert (=> b!133666 m!155949))

(declare-fun m!157955 () Bool)

(assert (=> b!133666 m!157955))

(assert (=> d!40323 d!40709))

(declare-fun d!40711 () Bool)

(assert (=> d!40711 (= (apply!116 lt!69464 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1486 (getValueByKey!172 (toList!869 lt!69464) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5530 () Bool)

(assert (= bs!5530 d!40711))

(assert (=> bs!5530 m!156163))

(assert (=> bs!5530 m!156697))

(assert (=> bs!5530 m!156697))

(declare-fun m!157957 () Bool)

(assert (=> bs!5530 m!157957))

(assert (=> b!132906 d!40711))

(declare-fun c!24790 () Bool)

(declare-fun d!40713 () Bool)

(assert (=> d!40713 (= c!24790 ((_ is ValueCellFull!1095) (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!87086 () V!3483)

(assert (=> d!40713 (= (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87086)))

(declare-fun b!133667 () Bool)

(assert (=> b!133667 (= e!87086 (get!1484 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133668 () Bool)

(assert (=> b!133668 (= e!87086 (get!1485 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40713 c!24790) b!133667))

(assert (= (and d!40713 (not c!24790)) b!133668))

(assert (=> b!133667 m!156515))

(assert (=> b!133667 m!156175))

(declare-fun m!157959 () Bool)

(assert (=> b!133667 m!157959))

(assert (=> b!133668 m!156515))

(assert (=> b!133668 m!156175))

(declare-fun m!157961 () Bool)

(assert (=> b!133668 m!157961))

(assert (=> b!132906 d!40713))

(declare-fun d!40715 () Bool)

(assert (=> d!40715 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092))))

(declare-fun lt!69932 () Unit!4135)

(assert (=> d!40715 (= lt!69932 (choose!817 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092))))

(declare-fun e!87087 () Bool)

(assert (=> d!40715 e!87087))

(declare-fun res!64329 () Bool)

(assert (=> d!40715 (=> (not res!64329) (not e!87087))))

(assert (=> d!40715 (= res!64329 (isStrictlySorted!322 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!40715 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092) lt!69932)))

(declare-fun b!133669 () Bool)

(assert (=> b!133669 (= e!87087 (containsKey!176 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092))))

(assert (= (and d!40715 res!64329) b!133669))

(assert (=> d!40715 m!156351))

(assert (=> d!40715 m!156351))

(assert (=> d!40715 m!156353))

(declare-fun m!157963 () Bool)

(assert (=> d!40715 m!157963))

(declare-fun m!157965 () Bool)

(assert (=> d!40715 m!157965))

(assert (=> b!133669 m!156347))

(assert (=> b!132801 d!40715))

(assert (=> b!132801 d!40367))

(assert (=> b!132801 d!40369))

(declare-fun d!40717 () Bool)

(assert (=> d!40717 (= (apply!116 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69080) (apply!116 lt!69084 lt!69080))))

(assert (=> d!40717 true))

(declare-fun _$34!976 () Unit!4135)

(assert (=> d!40717 (= (choose!822 lt!69084 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) lt!69080) _$34!976)))

(declare-fun bs!5531 () Bool)

(assert (= bs!5531 d!40717))

(assert (=> bs!5531 m!155963))

(assert (=> bs!5531 m!155963))

(assert (=> bs!5531 m!155965))

(assert (=> bs!5531 m!155983))

(assert (=> d!40251 d!40717))

(assert (=> d!40251 d!40267))

(declare-fun d!40719 () Bool)

(declare-fun e!87088 () Bool)

(assert (=> d!40719 e!87088))

(declare-fun res!64330 () Bool)

(assert (=> d!40719 (=> res!64330 e!87088)))

(declare-fun lt!69936 () Bool)

(assert (=> d!40719 (= res!64330 (not lt!69936))))

(declare-fun lt!69933 () Bool)

(assert (=> d!40719 (= lt!69936 lt!69933)))

(declare-fun lt!69935 () Unit!4135)

(declare-fun e!87089 () Unit!4135)

(assert (=> d!40719 (= lt!69935 e!87089)))

(declare-fun c!24791 () Bool)

(assert (=> d!40719 (= c!24791 lt!69933)))

(assert (=> d!40719 (= lt!69933 (containsKey!176 (toList!869 lt!69084) lt!69080))))

(assert (=> d!40719 (= (contains!899 lt!69084 lt!69080) lt!69936)))

(declare-fun b!133670 () Bool)

(declare-fun lt!69934 () Unit!4135)

(assert (=> b!133670 (= e!87089 lt!69934)))

(assert (=> b!133670 (= lt!69934 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69084) lt!69080))))

(assert (=> b!133670 (isDefined!125 (getValueByKey!172 (toList!869 lt!69084) lt!69080))))

(declare-fun b!133671 () Bool)

(declare-fun Unit!4185 () Unit!4135)

(assert (=> b!133671 (= e!87089 Unit!4185)))

(declare-fun b!133672 () Bool)

(assert (=> b!133672 (= e!87088 (isDefined!125 (getValueByKey!172 (toList!869 lt!69084) lt!69080)))))

(assert (= (and d!40719 c!24791) b!133670))

(assert (= (and d!40719 (not c!24791)) b!133671))

(assert (= (and d!40719 (not res!64330)) b!133672))

(declare-fun m!157967 () Bool)

(assert (=> d!40719 m!157967))

(declare-fun m!157969 () Bool)

(assert (=> b!133670 m!157969))

(assert (=> b!133670 m!156399))

(assert (=> b!133670 m!156399))

(declare-fun m!157971 () Bool)

(assert (=> b!133670 m!157971))

(assert (=> b!133672 m!156399))

(assert (=> b!133672 m!156399))

(assert (=> b!133672 m!157971))

(assert (=> d!40251 d!40719))

(assert (=> d!40251 d!40277))

(assert (=> d!40251 d!40259))

(declare-fun d!40721 () Bool)

(declare-fun e!87090 () Bool)

(assert (=> d!40721 e!87090))

(declare-fun res!64331 () Bool)

(assert (=> d!40721 (=> res!64331 e!87090)))

(declare-fun lt!69940 () Bool)

(assert (=> d!40721 (= res!64331 (not lt!69940))))

(declare-fun lt!69937 () Bool)

(assert (=> d!40721 (= lt!69940 lt!69937)))

(declare-fun lt!69939 () Unit!4135)

(declare-fun e!87091 () Unit!4135)

(assert (=> d!40721 (= lt!69939 e!87091)))

(declare-fun c!24792 () Bool)

(assert (=> d!40721 (= c!24792 lt!69937)))

(assert (=> d!40721 (= lt!69937 (containsKey!176 (toList!869 lt!69413) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40721 (= (contains!899 lt!69413 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69940)))

(declare-fun b!133673 () Bool)

(declare-fun lt!69938 () Unit!4135)

(assert (=> b!133673 (= e!87091 lt!69938)))

(assert (=> b!133673 (= lt!69938 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69413) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> b!133673 (isDefined!125 (getValueByKey!172 (toList!869 lt!69413) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133674 () Bool)

(declare-fun Unit!4186 () Unit!4135)

(assert (=> b!133674 (= e!87091 Unit!4186)))

(declare-fun b!133675 () Bool)

(assert (=> b!133675 (= e!87090 (isDefined!125 (getValueByKey!172 (toList!869 lt!69413) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!40721 c!24792) b!133673))

(assert (= (and d!40721 (not c!24792)) b!133674))

(assert (= (and d!40721 (not res!64331)) b!133675))

(declare-fun m!157973 () Bool)

(assert (=> d!40721 m!157973))

(declare-fun m!157975 () Bool)

(assert (=> b!133673 m!157975))

(assert (=> b!133673 m!156419))

(assert (=> b!133673 m!156419))

(declare-fun m!157977 () Bool)

(assert (=> b!133673 m!157977))

(assert (=> b!133675 m!156419))

(assert (=> b!133675 m!156419))

(assert (=> b!133675 m!157977))

(assert (=> d!40273 d!40721))

(declare-fun e!87093 () Option!178)

(declare-fun b!133678 () Bool)

(assert (=> b!133678 (= e!87093 (getValueByKey!172 (t!6167 lt!69415) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133679 () Bool)

(assert (=> b!133679 (= e!87093 None!176)))

(declare-fun d!40723 () Bool)

(declare-fun c!24793 () Bool)

(assert (=> d!40723 (= c!24793 (and ((_ is Cons!1712) lt!69415) (= (_1!1324 (h!2317 lt!69415)) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87092 () Option!178)

(assert (=> d!40723 (= (getValueByKey!172 lt!69415 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87092)))

(declare-fun b!133676 () Bool)

(assert (=> b!133676 (= e!87092 (Some!177 (_2!1324 (h!2317 lt!69415))))))

(declare-fun b!133677 () Bool)

(assert (=> b!133677 (= e!87092 e!87093)))

(declare-fun c!24794 () Bool)

(assert (=> b!133677 (= c!24794 (and ((_ is Cons!1712) lt!69415) (not (= (_1!1324 (h!2317 lt!69415)) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!40723 c!24793) b!133676))

(assert (= (and d!40723 (not c!24793)) b!133677))

(assert (= (and b!133677 c!24794) b!133678))

(assert (= (and b!133677 (not c!24794)) b!133679))

(declare-fun m!157979 () Bool)

(assert (=> b!133678 m!157979))

(assert (=> d!40273 d!40723))

(declare-fun d!40725 () Bool)

(assert (=> d!40725 (= (getValueByKey!172 lt!69415 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun lt!69941 () Unit!4135)

(assert (=> d!40725 (= lt!69941 (choose!827 lt!69415 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun e!87094 () Bool)

(assert (=> d!40725 e!87094))

(declare-fun res!64332 () Bool)

(assert (=> d!40725 (=> (not res!64332) (not e!87094))))

(assert (=> d!40725 (= res!64332 (isStrictlySorted!322 lt!69415))))

(assert (=> d!40725 (= (lemmaContainsTupThenGetReturnValue!87 lt!69415 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69941)))

(declare-fun b!133680 () Bool)

(declare-fun res!64333 () Bool)

(assert (=> b!133680 (=> (not res!64333) (not e!87094))))

(assert (=> b!133680 (= res!64333 (containsKey!176 lt!69415 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133681 () Bool)

(assert (=> b!133681 (= e!87094 (contains!902 lt!69415 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!40725 res!64332) b!133680))

(assert (= (and b!133680 res!64333) b!133681))

(assert (=> d!40725 m!156413))

(declare-fun m!157981 () Bool)

(assert (=> d!40725 m!157981))

(declare-fun m!157983 () Bool)

(assert (=> d!40725 m!157983))

(declare-fun m!157985 () Bool)

(assert (=> b!133680 m!157985))

(declare-fun m!157987 () Bool)

(assert (=> b!133681 m!157987))

(assert (=> d!40273 d!40725))

(declare-fun bm!14757 () Bool)

(declare-fun call!14761 () List!1716)

(declare-fun call!14762 () List!1716)

(assert (=> bm!14757 (= call!14761 call!14762)))

(declare-fun d!40727 () Bool)

(declare-fun e!87098 () Bool)

(assert (=> d!40727 e!87098))

(declare-fun res!64335 () Bool)

(assert (=> d!40727 (=> (not res!64335) (not e!87098))))

(declare-fun lt!69942 () List!1716)

(assert (=> d!40727 (= res!64335 (isStrictlySorted!322 lt!69942))))

(declare-fun e!87096 () List!1716)

(assert (=> d!40727 (= lt!69942 e!87096)))

(declare-fun c!24798 () Bool)

(assert (=> d!40727 (= c!24798 (and ((_ is Cons!1712) (toList!869 lt!69081)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69081))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!40727 (isStrictlySorted!322 (toList!869 lt!69081))))

(assert (=> d!40727 (= (insertStrictlySorted!90 (toList!869 lt!69081) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69942)))

(declare-fun b!133682 () Bool)

(assert (=> b!133682 (= e!87098 (contains!902 lt!69942 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun c!24796 () Bool)

(declare-fun b!133683 () Bool)

(assert (=> b!133683 (= c!24796 (and ((_ is Cons!1712) (toList!869 lt!69081)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69081))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87097 () List!1716)

(declare-fun e!87099 () List!1716)

(assert (=> b!133683 (= e!87097 e!87099)))

(declare-fun e!87095 () List!1716)

(declare-fun b!133684 () Bool)

(assert (=> b!133684 (= e!87095 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69081)) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133685 () Bool)

(assert (=> b!133685 (= e!87097 call!14761)))

(declare-fun b!133686 () Bool)

(declare-fun call!14760 () List!1716)

(assert (=> b!133686 (= e!87099 call!14760)))

(declare-fun c!24795 () Bool)

(declare-fun b!133687 () Bool)

(assert (=> b!133687 (= e!87095 (ite c!24795 (t!6167 (toList!869 lt!69081)) (ite c!24796 (Cons!1712 (h!2317 (toList!869 lt!69081)) (t!6167 (toList!869 lt!69081))) Nil!1713)))))

(declare-fun b!133688 () Bool)

(assert (=> b!133688 (= e!87099 call!14760)))

(declare-fun b!133689 () Bool)

(assert (=> b!133689 (= e!87096 call!14762)))

(declare-fun bm!14758 () Bool)

(assert (=> bm!14758 (= call!14762 ($colon$colon!92 e!87095 (ite c!24798 (h!2317 (toList!869 lt!69081)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun c!24797 () Bool)

(assert (=> bm!14758 (= c!24797 c!24798)))

(declare-fun bm!14759 () Bool)

(assert (=> bm!14759 (= call!14760 call!14761)))

(declare-fun b!133690 () Bool)

(declare-fun res!64334 () Bool)

(assert (=> b!133690 (=> (not res!64334) (not e!87098))))

(assert (=> b!133690 (= res!64334 (containsKey!176 lt!69942 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133691 () Bool)

(assert (=> b!133691 (= e!87096 e!87097)))

(assert (=> b!133691 (= c!24795 (and ((_ is Cons!1712) (toList!869 lt!69081)) (= (_1!1324 (h!2317 (toList!869 lt!69081))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!40727 c!24798) b!133689))

(assert (= (and d!40727 (not c!24798)) b!133691))

(assert (= (and b!133691 c!24795) b!133685))

(assert (= (and b!133691 (not c!24795)) b!133683))

(assert (= (and b!133683 c!24796) b!133686))

(assert (= (and b!133683 (not c!24796)) b!133688))

(assert (= (or b!133686 b!133688) bm!14759))

(assert (= (or b!133685 bm!14759) bm!14757))

(assert (= (or b!133689 bm!14757) bm!14758))

(assert (= (and bm!14758 c!24797) b!133684))

(assert (= (and bm!14758 (not c!24797)) b!133687))

(assert (= (and d!40727 res!64335) b!133690))

(assert (= (and b!133690 res!64334) b!133682))

(declare-fun m!157989 () Bool)

(assert (=> d!40727 m!157989))

(declare-fun m!157991 () Bool)

(assert (=> d!40727 m!157991))

(declare-fun m!157993 () Bool)

(assert (=> bm!14758 m!157993))

(declare-fun m!157995 () Bool)

(assert (=> b!133684 m!157995))

(declare-fun m!157997 () Bool)

(assert (=> b!133682 m!157997))

(declare-fun m!157999 () Bool)

(assert (=> b!133690 m!157999))

(assert (=> d!40273 d!40727))

(declare-fun d!40729 () Bool)

(declare-fun e!87100 () Bool)

(assert (=> d!40729 e!87100))

(declare-fun res!64337 () Bool)

(assert (=> d!40729 (=> (not res!64337) (not e!87100))))

(declare-fun lt!69943 () ListLongMap!1707)

(assert (=> d!40729 (= res!64337 (contains!899 lt!69943 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69945 () List!1716)

(assert (=> d!40729 (= lt!69943 (ListLongMap!1708 lt!69945))))

(declare-fun lt!69946 () Unit!4135)

(declare-fun lt!69944 () Unit!4135)

(assert (=> d!40729 (= lt!69946 lt!69944)))

(assert (=> d!40729 (= (getValueByKey!172 lt!69945 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40729 (= lt!69944 (lemmaContainsTupThenGetReturnValue!87 lt!69945 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40729 (= lt!69945 (insertStrictlySorted!90 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40729 (= (+!175 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69943)))

(declare-fun b!133692 () Bool)

(declare-fun res!64336 () Bool)

(assert (=> b!133692 (=> (not res!64336) (not e!87100))))

(assert (=> b!133692 (= res!64336 (= (getValueByKey!172 (toList!869 lt!69943) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133693 () Bool)

(assert (=> b!133693 (= e!87100 (contains!902 (toList!869 lt!69943) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40729 res!64337) b!133692))

(assert (= (and b!133692 res!64336) b!133693))

(declare-fun m!158001 () Bool)

(assert (=> d!40729 m!158001))

(declare-fun m!158003 () Bool)

(assert (=> d!40729 m!158003))

(declare-fun m!158005 () Bool)

(assert (=> d!40729 m!158005))

(declare-fun m!158007 () Bool)

(assert (=> d!40729 m!158007))

(declare-fun m!158009 () Bool)

(assert (=> b!133692 m!158009))

(declare-fun m!158011 () Bool)

(assert (=> b!133693 m!158011))

(assert (=> d!40231 d!40729))

(assert (=> d!40231 d!40229))

(declare-fun b!133694 () Bool)

(declare-fun e!87113 () Unit!4135)

(declare-fun lt!69947 () Unit!4135)

(assert (=> b!133694 (= e!87113 lt!69947)))

(declare-fun lt!69963 () ListLongMap!1707)

(assert (=> b!133694 (= lt!69963 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69180 (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69957 () (_ BitVec 64))

(assert (=> b!133694 (= lt!69957 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69962 () (_ BitVec 64))

(assert (=> b!133694 (= lt!69962 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69960 () Unit!4135)

(assert (=> b!133694 (= lt!69960 (addStillContains!92 lt!69963 lt!69957 (zeroValue!2720 newMap!16) lt!69962))))

(assert (=> b!133694 (contains!899 (+!175 lt!69963 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16))) lt!69962)))

(declare-fun lt!69967 () Unit!4135)

(assert (=> b!133694 (= lt!69967 lt!69960)))

(declare-fun lt!69949 () ListLongMap!1707)

(assert (=> b!133694 (= lt!69949 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69180 (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69952 () (_ BitVec 64))

(assert (=> b!133694 (= lt!69952 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69968 () (_ BitVec 64))

(assert (=> b!133694 (= lt!69968 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69959 () Unit!4135)

(assert (=> b!133694 (= lt!69959 (addApplyDifferent!92 lt!69949 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69968))))

(assert (=> b!133694 (= (apply!116 (+!175 lt!69949 (tuple2!2627 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69968) (apply!116 lt!69949 lt!69968))))

(declare-fun lt!69948 () Unit!4135)

(assert (=> b!133694 (= lt!69948 lt!69959)))

(declare-fun lt!69954 () ListLongMap!1707)

(assert (=> b!133694 (= lt!69954 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69180 (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69956 () (_ BitVec 64))

(assert (=> b!133694 (= lt!69956 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69950 () (_ BitVec 64))

(assert (=> b!133694 (= lt!69950 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69953 () Unit!4135)

(assert (=> b!133694 (= lt!69953 (addApplyDifferent!92 lt!69954 lt!69956 (zeroValue!2720 newMap!16) lt!69950))))

(assert (=> b!133694 (= (apply!116 (+!175 lt!69954 (tuple2!2627 lt!69956 (zeroValue!2720 newMap!16))) lt!69950) (apply!116 lt!69954 lt!69950))))

(declare-fun lt!69961 () Unit!4135)

(assert (=> b!133694 (= lt!69961 lt!69953)))

(declare-fun lt!69951 () ListLongMap!1707)

(assert (=> b!133694 (= lt!69951 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69180 (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun lt!69966 () (_ BitVec 64))

(assert (=> b!133694 (= lt!69966 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69964 () (_ BitVec 64))

(assert (=> b!133694 (= lt!69964 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133694 (= lt!69947 (addApplyDifferent!92 lt!69951 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69964))))

(assert (=> b!133694 (= (apply!116 (+!175 lt!69951 (tuple2!2627 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69964) (apply!116 lt!69951 lt!69964))))

(declare-fun b!133695 () Bool)

(declare-fun e!87110 () Bool)

(declare-fun call!14766 () Bool)

(assert (=> b!133695 (= e!87110 (not call!14766))))

(declare-fun b!133696 () Bool)

(declare-fun e!87107 () Bool)

(declare-fun e!87106 () Bool)

(assert (=> b!133696 (= e!87107 e!87106)))

(declare-fun c!24802 () Bool)

(assert (=> b!133696 (= c!24802 (not (= (bvand lt!69180 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133697 () Bool)

(declare-fun e!87111 () ListLongMap!1707)

(declare-fun call!14769 () ListLongMap!1707)

(assert (=> b!133697 (= e!87111 call!14769)))

(declare-fun b!133698 () Bool)

(declare-fun e!87102 () ListLongMap!1707)

(declare-fun call!14763 () ListLongMap!1707)

(assert (=> b!133698 (= e!87102 call!14763)))

(declare-fun b!133699 () Bool)

(declare-fun c!24804 () Bool)

(assert (=> b!133699 (= c!24804 (and (not (= (bvand lt!69180 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!69180 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!133699 (= e!87102 e!87111)))

(declare-fun b!133700 () Bool)

(declare-fun call!14764 () Bool)

(assert (=> b!133700 (= e!87106 (not call!14764))))

(declare-fun d!40731 () Bool)

(assert (=> d!40731 e!87107))

(declare-fun res!64341 () Bool)

(assert (=> d!40731 (=> (not res!64341) (not e!87107))))

(assert (=> d!40731 (= res!64341 (or (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))))

(declare-fun lt!69965 () ListLongMap!1707)

(declare-fun lt!69958 () ListLongMap!1707)

(assert (=> d!40731 (= lt!69965 lt!69958)))

(declare-fun lt!69955 () Unit!4135)

(assert (=> d!40731 (= lt!69955 e!87113)))

(declare-fun c!24800 () Bool)

(declare-fun e!87109 () Bool)

(assert (=> d!40731 (= c!24800 e!87109)))

(declare-fun res!64340 () Bool)

(assert (=> d!40731 (=> (not res!64340) (not e!87109))))

(assert (=> d!40731 (= res!64340 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun e!87104 () ListLongMap!1707)

(assert (=> d!40731 (= lt!69958 e!87104)))

(declare-fun c!24803 () Bool)

(assert (=> d!40731 (= c!24803 (and (not (= (bvand lt!69180 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!69180 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40731 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40731 (= (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69180 (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!69965)))

(declare-fun b!133701 () Bool)

(declare-fun e!87108 () Bool)

(assert (=> b!133701 (= e!87108 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14760 () Bool)

(assert (=> bm!14760 (= call!14766 (contains!899 lt!69965 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133702 () Bool)

(assert (=> b!133702 (= e!87104 e!87102)))

(declare-fun c!24801 () Bool)

(assert (=> b!133702 (= c!24801 (and (not (= (bvand lt!69180 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!69180 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133703 () Bool)

(declare-fun call!14767 () ListLongMap!1707)

(assert (=> b!133703 (= e!87104 (+!175 call!14767 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133704 () Bool)

(declare-fun e!87101 () Bool)

(assert (=> b!133704 (= e!87101 (= (apply!116 lt!69965 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133704 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_values!2848 newMap!16))))))

(assert (=> b!133704 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun bm!14761 () Bool)

(assert (=> bm!14761 (= call!14764 (contains!899 lt!69965 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133705 () Bool)

(declare-fun res!64342 () Bool)

(assert (=> b!133705 (=> (not res!64342) (not e!87107))))

(assert (=> b!133705 (= res!64342 e!87110)))

(declare-fun c!24799 () Bool)

(assert (=> b!133705 (= c!24799 (not (= (bvand lt!69180 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133706 () Bool)

(declare-fun e!87105 () Bool)

(assert (=> b!133706 (= e!87106 e!87105)))

(declare-fun res!64344 () Bool)

(assert (=> b!133706 (= res!64344 call!14764)))

(assert (=> b!133706 (=> (not res!64344) (not e!87105))))

(declare-fun call!14765 () ListLongMap!1707)

(declare-fun bm!14762 () Bool)

(declare-fun call!14768 () ListLongMap!1707)

(assert (=> bm!14762 (= call!14767 (+!175 (ite c!24803 call!14765 (ite c!24801 call!14768 call!14769)) (ite (or c!24803 c!24801) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133707 () Bool)

(declare-fun e!87112 () Bool)

(assert (=> b!133707 (= e!87112 (= (apply!116 lt!69965 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 newMap!16)))))

(declare-fun bm!14763 () Bool)

(assert (=> bm!14763 (= call!14763 call!14767)))

(declare-fun b!133708 () Bool)

(assert (=> b!133708 (= e!87110 e!87112)))

(declare-fun res!64339 () Bool)

(assert (=> b!133708 (= res!64339 call!14766)))

(assert (=> b!133708 (=> (not res!64339) (not e!87112))))

(declare-fun bm!14764 () Bool)

(assert (=> bm!14764 (= call!14769 call!14768)))

(declare-fun bm!14765 () Bool)

(assert (=> bm!14765 (= call!14765 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69180 (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(declare-fun b!133709 () Bool)

(assert (=> b!133709 (= e!87111 call!14763)))

(declare-fun b!133710 () Bool)

(declare-fun e!87103 () Bool)

(assert (=> b!133710 (= e!87103 e!87101)))

(declare-fun res!64343 () Bool)

(assert (=> b!133710 (=> (not res!64343) (not e!87101))))

(assert (=> b!133710 (= res!64343 (contains!899 lt!69965 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133710 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133711 () Bool)

(declare-fun res!64346 () Bool)

(assert (=> b!133711 (=> (not res!64346) (not e!87107))))

(assert (=> b!133711 (= res!64346 e!87103)))

(declare-fun res!64338 () Bool)

(assert (=> b!133711 (=> res!64338 e!87103)))

(assert (=> b!133711 (= res!64338 (not e!87108))))

(declare-fun res!64345 () Bool)

(assert (=> b!133711 (=> (not res!64345) (not e!87108))))

(assert (=> b!133711 (= res!64345 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun bm!14766 () Bool)

(assert (=> bm!14766 (= call!14768 call!14765)))

(declare-fun b!133712 () Bool)

(assert (=> b!133712 (= e!87105 (= (apply!116 lt!69965 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133713 () Bool)

(assert (=> b!133713 (= e!87109 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133714 () Bool)

(declare-fun Unit!4187 () Unit!4135)

(assert (=> b!133714 (= e!87113 Unit!4187)))

(assert (= (and d!40731 c!24803) b!133703))

(assert (= (and d!40731 (not c!24803)) b!133702))

(assert (= (and b!133702 c!24801) b!133698))

(assert (= (and b!133702 (not c!24801)) b!133699))

(assert (= (and b!133699 c!24804) b!133709))

(assert (= (and b!133699 (not c!24804)) b!133697))

(assert (= (or b!133709 b!133697) bm!14764))

(assert (= (or b!133698 bm!14764) bm!14766))

(assert (= (or b!133698 b!133709) bm!14763))

(assert (= (or b!133703 bm!14766) bm!14765))

(assert (= (or b!133703 bm!14763) bm!14762))

(assert (= (and d!40731 res!64340) b!133713))

(assert (= (and d!40731 c!24800) b!133694))

(assert (= (and d!40731 (not c!24800)) b!133714))

(assert (= (and d!40731 res!64341) b!133711))

(assert (= (and b!133711 res!64345) b!133701))

(assert (= (and b!133711 (not res!64338)) b!133710))

(assert (= (and b!133710 res!64343) b!133704))

(assert (= (and b!133711 res!64346) b!133705))

(assert (= (and b!133705 c!24799) b!133708))

(assert (= (and b!133705 (not c!24799)) b!133695))

(assert (= (and b!133708 res!64339) b!133707))

(assert (= (or b!133708 b!133695) bm!14760))

(assert (= (and b!133705 res!64342) b!133696))

(assert (= (and b!133696 c!24802) b!133706))

(assert (= (and b!133696 (not c!24802)) b!133700))

(assert (= (and b!133706 res!64344) b!133712))

(assert (= (or b!133706 b!133700) bm!14761))

(declare-fun b_lambda!5947 () Bool)

(assert (=> (not b_lambda!5947) (not b!133704)))

(assert (=> b!133704 t!6176))

(declare-fun b_and!8291 () Bool)

(assert (= b_and!8287 (and (=> t!6176 result!3997) b_and!8291)))

(assert (=> b!133704 t!6178))

(declare-fun b_and!8293 () Bool)

(assert (= b_and!8289 (and (=> t!6178 result!3999) b_and!8293)))

(assert (=> bm!14765 m!155895))

(declare-fun m!158013 () Bool)

(assert (=> bm!14765 m!158013))

(declare-fun m!158015 () Bool)

(assert (=> bm!14762 m!158015))

(assert (=> b!133704 m!156173))

(assert (=> b!133704 m!156173))

(assert (=> b!133704 m!156175))

(assert (=> b!133704 m!156177))

(assert (=> b!133704 m!156163))

(assert (=> b!133704 m!156175))

(assert (=> b!133704 m!156163))

(declare-fun m!158017 () Bool)

(assert (=> b!133704 m!158017))

(declare-fun m!158019 () Bool)

(assert (=> bm!14760 m!158019))

(declare-fun m!158021 () Bool)

(assert (=> b!133703 m!158021))

(assert (=> b!133713 m!156163))

(assert (=> b!133713 m!156163))

(assert (=> b!133713 m!156165))

(assert (=> d!40731 m!156157))

(declare-fun m!158023 () Bool)

(assert (=> b!133694 m!158023))

(declare-fun m!158025 () Bool)

(assert (=> b!133694 m!158025))

(declare-fun m!158027 () Bool)

(assert (=> b!133694 m!158027))

(declare-fun m!158029 () Bool)

(assert (=> b!133694 m!158029))

(assert (=> b!133694 m!155895))

(assert (=> b!133694 m!158013))

(declare-fun m!158031 () Bool)

(assert (=> b!133694 m!158031))

(declare-fun m!158033 () Bool)

(assert (=> b!133694 m!158033))

(declare-fun m!158035 () Bool)

(assert (=> b!133694 m!158035))

(assert (=> b!133694 m!155895))

(declare-fun m!158037 () Bool)

(assert (=> b!133694 m!158037))

(declare-fun m!158039 () Bool)

(assert (=> b!133694 m!158039))

(assert (=> b!133694 m!158023))

(declare-fun m!158041 () Bool)

(assert (=> b!133694 m!158041))

(assert (=> b!133694 m!158035))

(declare-fun m!158043 () Bool)

(assert (=> b!133694 m!158043))

(assert (=> b!133694 m!158027))

(declare-fun m!158045 () Bool)

(assert (=> b!133694 m!158045))

(assert (=> b!133694 m!156163))

(declare-fun m!158047 () Bool)

(assert (=> b!133694 m!158047))

(assert (=> b!133694 m!158025))

(declare-fun m!158049 () Bool)

(assert (=> b!133694 m!158049))

(assert (=> b!133694 m!155895))

(declare-fun m!158051 () Bool)

(assert (=> b!133694 m!158051))

(declare-fun m!158053 () Bool)

(assert (=> bm!14761 m!158053))

(declare-fun m!158055 () Bool)

(assert (=> b!133707 m!158055))

(declare-fun m!158057 () Bool)

(assert (=> b!133712 m!158057))

(assert (=> b!133710 m!156163))

(assert (=> b!133710 m!156163))

(declare-fun m!158059 () Bool)

(assert (=> b!133710 m!158059))

(assert (=> b!133701 m!156163))

(assert (=> b!133701 m!156163))

(assert (=> b!133701 m!156165))

(assert (=> d!40231 d!40731))

(declare-fun d!40733 () Bool)

(assert (=> d!40733 (= (+!175 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69180 (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(assert (=> d!40733 true))

(declare-fun _$8!118 () Unit!4135)

(assert (=> d!40733 (= (choose!819 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) lt!69180 (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)) _$8!118)))

(declare-fun bs!5532 () Bool)

(assert (= bs!5532 d!40733))

(assert (=> bs!5532 m!155939))

(assert (=> bs!5532 m!155939))

(assert (=> bs!5532 m!156225))

(assert (=> bs!5532 m!155895))

(assert (=> bs!5532 m!156227))

(assert (=> d!40231 d!40733))

(assert (=> d!40231 d!40325))

(declare-fun d!40735 () Bool)

(assert (=> d!40735 (= (isEmpty!409 (getValueByKey!172 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))) (not ((_ is Some!177) (getValueByKey!172 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))))

(assert (=> d!40213 d!40735))

(declare-fun d!40737 () Bool)

(declare-fun lt!69969 () Bool)

(assert (=> d!40737 (= lt!69969 (select (content!133 (toList!869 lt!69418)) (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun e!87115 () Bool)

(assert (=> d!40737 (= lt!69969 e!87115)))

(declare-fun res!64347 () Bool)

(assert (=> d!40737 (=> (not res!64347) (not e!87115))))

(assert (=> d!40737 (= res!64347 ((_ is Cons!1712) (toList!869 lt!69418)))))

(assert (=> d!40737 (= (contains!902 (toList!869 lt!69418) (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!69969)))

(declare-fun b!133715 () Bool)

(declare-fun e!87114 () Bool)

(assert (=> b!133715 (= e!87115 e!87114)))

(declare-fun res!64348 () Bool)

(assert (=> b!133715 (=> res!64348 e!87114)))

(assert (=> b!133715 (= res!64348 (= (h!2317 (toList!869 lt!69418)) (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133716 () Bool)

(assert (=> b!133716 (= e!87114 (contains!902 (t!6167 (toList!869 lt!69418)) (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!40737 res!64347) b!133715))

(assert (= (and b!133715 (not res!64348)) b!133716))

(declare-fun m!158061 () Bool)

(assert (=> d!40737 m!158061))

(declare-fun m!158063 () Bool)

(assert (=> d!40737 m!158063))

(declare-fun m!158065 () Bool)

(assert (=> b!133716 m!158065))

(assert (=> b!132847 d!40737))

(assert (=> b!132723 d!40353))

(declare-fun d!40739 () Bool)

(assert (=> d!40739 (= (apply!116 lt!69486 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1486 (getValueByKey!172 (toList!869 lt!69486) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5533 () Bool)

(assert (= bs!5533 d!40739))

(assert (=> bs!5533 m!156163))

(assert (=> bs!5533 m!156713))

(assert (=> bs!5533 m!156713))

(declare-fun m!158067 () Bool)

(assert (=> bs!5533 m!158067))

(assert (=> b!132939 d!40739))

(declare-fun c!24805 () Bool)

(declare-fun d!40741 () Bool)

(assert (=> d!40741 (= c!24805 ((_ is ValueCellFull!1095) (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000)))))

(declare-fun e!87116 () V!3483)

(assert (=> d!40741 (= (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87116)))

(declare-fun b!133717 () Bool)

(assert (=> b!133717 (= e!87116 (get!1484 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133718 () Bool)

(assert (=> b!133718 (= e!87116 (get!1485 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40741 c!24805) b!133717))

(assert (= (and d!40741 (not c!24805)) b!133718))

(assert (=> b!133717 m!156569))

(assert (=> b!133717 m!156175))

(declare-fun m!158069 () Bool)

(assert (=> b!133717 m!158069))

(assert (=> b!133718 m!156569))

(assert (=> b!133718 m!156175))

(declare-fun m!158071 () Bool)

(assert (=> b!133718 m!158071))

(assert (=> b!132939 d!40741))

(assert (=> d!40229 d!40325))

(assert (=> b!132730 d!40341))

(assert (=> b!132730 d!40343))

(assert (=> b!132903 d!40353))

(declare-fun d!40743 () Bool)

(assert (=> d!40743 (contains!899 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))

(assert (=> d!40743 true))

(declare-fun _$16!151 () Unit!4135)

(assert (=> d!40743 (= (choose!820 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (index!3261 lt!69175) (defaultEntry!2865 newMap!16)) _$16!151)))

(declare-fun bs!5534 () Bool)

(assert (= bs!5534 d!40743))

(assert (=> bs!5534 m!156299))

(assert (=> bs!5534 m!156069))

(assert (=> bs!5534 m!156299))

(assert (=> bs!5534 m!156069))

(assert (=> bs!5534 m!156301))

(assert (=> d!40239 d!40743))

(assert (=> d!40239 d!40325))

(assert (=> b!132841 d!40311))

(declare-fun d!40745 () Bool)

(declare-fun e!87117 () Bool)

(assert (=> d!40745 e!87117))

(declare-fun res!64350 () Bool)

(assert (=> d!40745 (=> (not res!64350) (not e!87117))))

(declare-fun lt!69970 () ListLongMap!1707)

(assert (=> d!40745 (= res!64350 (contains!899 lt!69970 (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun lt!69972 () List!1716)

(assert (=> d!40745 (= lt!69970 (ListLongMap!1708 lt!69972))))

(declare-fun lt!69973 () Unit!4135)

(declare-fun lt!69971 () Unit!4135)

(assert (=> d!40745 (= lt!69973 lt!69971)))

(assert (=> d!40745 (= (getValueByKey!172 lt!69972 (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) (Some!177 (_2!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!40745 (= lt!69971 (lemmaContainsTupThenGetReturnValue!87 lt!69972 (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!40745 (= lt!69972 (insertStrictlySorted!90 (toList!869 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670))) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!40745 (= (+!175 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670)) (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69970)))

(declare-fun b!133719 () Bool)

(declare-fun res!64349 () Bool)

(assert (=> b!133719 (=> (not res!64349) (not e!87117))))

(assert (=> b!133719 (= res!64349 (= (getValueByKey!172 (toList!869 lt!69970) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) (Some!177 (_2!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun b!133720 () Bool)

(assert (=> b!133720 (= e!87117 (contains!902 (toList!869 lt!69970) (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (= (and d!40745 res!64350) b!133719))

(assert (= (and b!133719 res!64349) b!133720))

(declare-fun m!158073 () Bool)

(assert (=> d!40745 m!158073))

(declare-fun m!158075 () Bool)

(assert (=> d!40745 m!158075))

(declare-fun m!158077 () Bool)

(assert (=> d!40745 m!158077))

(declare-fun m!158079 () Bool)

(assert (=> d!40745 m!158079))

(declare-fun m!158081 () Bool)

(assert (=> b!133719 m!158081))

(declare-fun m!158083 () Bool)

(assert (=> b!133720 m!158083))

(assert (=> bm!14663 d!40745))

(declare-fun d!40747 () Bool)

(assert (=> d!40747 (= (get!1485 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132638 d!40747))

(declare-fun d!40749 () Bool)

(assert (=> d!40749 (= (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69094)) (v!3203 (getValueByKey!172 (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69094)))))

(assert (=> d!40257 d!40749))

(declare-fun b!133723 () Bool)

(declare-fun e!87119 () Option!178)

(assert (=> b!133723 (= e!87119 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!69094))))

(declare-fun b!133724 () Bool)

(assert (=> b!133724 (= e!87119 None!176)))

(declare-fun c!24806 () Bool)

(declare-fun d!40751 () Bool)

(assert (=> d!40751 (= c!24806 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69094)))))

(declare-fun e!87118 () Option!178)

(assert (=> d!40751 (= (getValueByKey!172 (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69094) e!87118)))

(declare-fun b!133721 () Bool)

(assert (=> b!133721 (= e!87118 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))))

(declare-fun b!133722 () Bool)

(assert (=> b!133722 (= e!87118 e!87119)))

(declare-fun c!24807 () Bool)

(assert (=> b!133722 (= c!24807 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69094))))))

(assert (= (and d!40751 c!24806) b!133721))

(assert (= (and d!40751 (not c!24806)) b!133722))

(assert (= (and b!133722 c!24807) b!133723))

(assert (= (and b!133722 (not c!24807)) b!133724))

(declare-fun m!158085 () Bool)

(assert (=> b!133723 m!158085))

(assert (=> d!40257 d!40751))

(assert (=> bm!14642 d!40299))

(declare-fun d!40753 () Bool)

(declare-fun res!64351 () Bool)

(declare-fun e!87120 () Bool)

(assert (=> d!40753 (=> res!64351 e!87120)))

(assert (=> d!40753 (= res!64351 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69092)))))

(assert (=> d!40753 (= (containsKey!176 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092) e!87120)))

(declare-fun b!133725 () Bool)

(declare-fun e!87121 () Bool)

(assert (=> b!133725 (= e!87120 e!87121)))

(declare-fun res!64352 () Bool)

(assert (=> b!133725 (=> (not res!64352) (not e!87121))))

(assert (=> b!133725 (= res!64352 (and (or (not ((_ is Cons!1712) (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (bvsle (_1!1324 (h!2317 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69092)) ((_ is Cons!1712) (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) (bvslt (_1!1324 (h!2317 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69092)))))

(declare-fun b!133726 () Bool)

(assert (=> b!133726 (= e!87121 (containsKey!176 (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!69092))))

(assert (= (and d!40753 (not res!64351)) b!133725))

(assert (= (and b!133725 res!64352) b!133726))

(declare-fun m!158087 () Bool)

(assert (=> b!133726 m!158087))

(assert (=> d!40255 d!40753))

(assert (=> b!132964 d!40371))

(declare-fun e!87123 () Option!178)

(declare-fun b!133729 () Bool)

(assert (=> b!133729 (= e!87123 (getValueByKey!172 (t!6167 (toList!869 lt!69413)) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133730 () Bool)

(assert (=> b!133730 (= e!87123 None!176)))

(declare-fun d!40755 () Bool)

(declare-fun c!24808 () Bool)

(assert (=> d!40755 (= c!24808 (and ((_ is Cons!1712) (toList!869 lt!69413)) (= (_1!1324 (h!2317 (toList!869 lt!69413))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87122 () Option!178)

(assert (=> d!40755 (= (getValueByKey!172 (toList!869 lt!69413) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87122)))

(declare-fun b!133727 () Bool)

(assert (=> b!133727 (= e!87122 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69413)))))))

(declare-fun b!133728 () Bool)

(assert (=> b!133728 (= e!87122 e!87123)))

(declare-fun c!24809 () Bool)

(assert (=> b!133728 (= c!24809 (and ((_ is Cons!1712) (toList!869 lt!69413)) (not (= (_1!1324 (h!2317 (toList!869 lt!69413))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!40755 c!24808) b!133727))

(assert (= (and d!40755 (not c!24808)) b!133728))

(assert (= (and b!133728 c!24809) b!133729))

(assert (= (and b!133728 (not c!24809)) b!133730))

(declare-fun m!158089 () Bool)

(assert (=> b!133729 m!158089))

(assert (=> b!132843 d!40755))

(declare-fun d!40757 () Bool)

(declare-fun res!64353 () Bool)

(declare-fun e!87124 () Bool)

(assert (=> d!40757 (=> res!64353 e!87124)))

(assert (=> d!40757 (= res!64353 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69022))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69022)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(assert (=> d!40757 (= (containsKey!176 (t!6167 (toList!869 lt!69022)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!87124)))

(declare-fun b!133731 () Bool)

(declare-fun e!87125 () Bool)

(assert (=> b!133731 (= e!87124 e!87125)))

(declare-fun res!64354 () Bool)

(assert (=> b!133731 (=> (not res!64354) (not e!87125))))

(assert (=> b!133731 (= res!64354 (and (or (not ((_ is Cons!1712) (t!6167 (toList!869 lt!69022)))) (bvsle (_1!1324 (h!2317 (t!6167 (toList!869 lt!69022)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))) ((_ is Cons!1712) (t!6167 (toList!869 lt!69022))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 lt!69022)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun b!133732 () Bool)

(assert (=> b!133732 (= e!87125 (containsKey!176 (t!6167 (t!6167 (toList!869 lt!69022))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (= (and d!40757 (not res!64353)) b!133731))

(assert (= (and b!133731 res!64354) b!133732))

(assert (=> b!133732 m!155869))

(declare-fun m!158091 () Bool)

(assert (=> b!133732 m!158091))

(assert (=> b!132864 d!40757))

(declare-fun d!40759 () Bool)

(declare-fun e!87126 () Bool)

(assert (=> d!40759 e!87126))

(declare-fun res!64356 () Bool)

(assert (=> d!40759 (=> (not res!64356) (not e!87126))))

(declare-fun lt!69974 () ListLongMap!1707)

(assert (=> d!40759 (= res!64356 (contains!899 lt!69974 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun lt!69976 () List!1716)

(assert (=> d!40759 (= lt!69974 (ListLongMap!1708 lt!69976))))

(declare-fun lt!69977 () Unit!4135)

(declare-fun lt!69975 () Unit!4135)

(assert (=> d!40759 (= lt!69977 lt!69975)))

(assert (=> d!40759 (= (getValueByKey!172 lt!69976 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40759 (= lt!69975 (lemmaContainsTupThenGetReturnValue!87 lt!69976 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40759 (= lt!69976 (insertStrictlySorted!90 (toList!869 call!14668) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!40759 (= (+!175 call!14668 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69974)))

(declare-fun b!133733 () Bool)

(declare-fun res!64355 () Bool)

(assert (=> b!133733 (=> (not res!64355) (not e!87126))))

(assert (=> b!133733 (= res!64355 (= (getValueByKey!172 (toList!869 lt!69974) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!133734 () Bool)

(assert (=> b!133734 (= e!87126 (contains!902 (toList!869 lt!69974) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(assert (= (and d!40759 res!64356) b!133733))

(assert (= (and b!133733 res!64355) b!133734))

(declare-fun m!158093 () Bool)

(assert (=> d!40759 m!158093))

(declare-fun m!158095 () Bool)

(assert (=> d!40759 m!158095))

(declare-fun m!158097 () Bool)

(assert (=> d!40759 m!158097))

(declare-fun m!158099 () Bool)

(assert (=> d!40759 m!158099))

(declare-fun m!158101 () Bool)

(assert (=> b!133733 m!158101))

(declare-fun m!158103 () Bool)

(assert (=> b!133734 m!158103))

(assert (=> b!132938 d!40759))

(declare-fun d!40761 () Bool)

(assert (=> d!40761 (= (apply!116 lt!69262 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69262) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5535 () Bool)

(assert (= bs!5535 d!40761))

(declare-fun m!158105 () Bool)

(assert (=> bs!5535 m!158105))

(assert (=> bs!5535 m!158105))

(declare-fun m!158107 () Bool)

(assert (=> bs!5535 m!158107))

(assert (=> b!132720 d!40761))

(declare-fun d!40763 () Bool)

(declare-fun e!87127 () Bool)

(assert (=> d!40763 e!87127))

(declare-fun res!64358 () Bool)

(assert (=> d!40763 (=> (not res!64358) (not e!87127))))

(declare-fun lt!69978 () ListLongMap!1707)

(assert (=> d!40763 (= res!64358 (contains!899 lt!69978 (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!69980 () List!1716)

(assert (=> d!40763 (= lt!69978 (ListLongMap!1708 lt!69980))))

(declare-fun lt!69981 () Unit!4135)

(declare-fun lt!69979 () Unit!4135)

(assert (=> d!40763 (= lt!69981 lt!69979)))

(assert (=> d!40763 (= (getValueByKey!172 lt!69980 (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40763 (= lt!69979 (lemmaContainsTupThenGetReturnValue!87 lt!69980 (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40763 (= lt!69980 (insertStrictlySorted!90 (toList!869 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663))) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40763 (= (+!175 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663)) (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!69978)))

(declare-fun b!133735 () Bool)

(declare-fun res!64357 () Bool)

(assert (=> b!133735 (=> (not res!64357) (not e!87127))))

(assert (=> b!133735 (= res!64357 (= (getValueByKey!172 (toList!869 lt!69978) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!133736 () Bool)

(assert (=> b!133736 (= e!87127 (contains!902 (toList!869 lt!69978) (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!40763 res!64358) b!133735))

(assert (= (and b!133735 res!64357) b!133736))

(declare-fun m!158109 () Bool)

(assert (=> d!40763 m!158109))

(declare-fun m!158111 () Bool)

(assert (=> d!40763 m!158111))

(declare-fun m!158113 () Bool)

(assert (=> d!40763 m!158113))

(declare-fun m!158115 () Bool)

(assert (=> d!40763 m!158115))

(declare-fun m!158117 () Bool)

(assert (=> b!133735 m!158117))

(declare-fun m!158119 () Bool)

(assert (=> b!133736 m!158119))

(assert (=> bm!14656 d!40763))

(declare-fun d!40765 () Bool)

(assert (=> d!40765 (isDefined!125 (getValueByKey!172 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!69982 () Unit!4135)

(assert (=> d!40765 (= lt!69982 (choose!817 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87128 () Bool)

(assert (=> d!40765 e!87128))

(declare-fun res!64359 () Bool)

(assert (=> d!40765 (=> (not res!64359) (not e!87128))))

(assert (=> d!40765 (= res!64359 (isStrictlySorted!322 (toList!869 lt!69095)))))

(assert (=> d!40765 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000) lt!69982)))

(declare-fun b!133737 () Bool)

(assert (=> b!133737 (= e!87128 (containsKey!176 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40765 res!64359) b!133737))

(assert (=> d!40765 m!156451))

(assert (=> d!40765 m!156451))

(assert (=> d!40765 m!156487))

(declare-fun m!158121 () Bool)

(assert (=> d!40765 m!158121))

(assert (=> d!40765 m!156687))

(assert (=> b!133737 m!156483))

(assert (=> b!132865 d!40765))

(assert (=> b!132865 d!40523))

(assert (=> b!132865 d!40525))

(declare-fun d!40767 () Bool)

(declare-fun res!64360 () Bool)

(declare-fun e!87129 () Bool)

(assert (=> d!40767 (=> res!64360 e!87129)))

(assert (=> d!40767 (= res!64360 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!69106))))

(assert (=> d!40767 (= (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69106 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!87129)))

(declare-fun b!133738 () Bool)

(declare-fun e!87130 () Bool)

(assert (=> b!133738 (= e!87129 e!87130)))

(declare-fun res!64361 () Bool)

(assert (=> b!133738 (=> (not res!64361) (not e!87130))))

(assert (=> b!133738 (= res!64361 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133739 () Bool)

(assert (=> b!133739 (= e!87130 (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69106 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!40767 (not res!64360)) b!133738))

(assert (= (and b!133738 res!64361) b!133739))

(assert (=> d!40767 m!156619))

(declare-fun m!158123 () Bool)

(assert (=> b!133739 m!158123))

(assert (=> b!132665 d!40767))

(declare-fun d!40769 () Bool)

(assert (=> d!40769 (= (get!1486 (getValueByKey!172 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!172 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40285 d!40769))

(assert (=> d!40285 d!40343))

(declare-fun b!133740 () Bool)

(declare-fun e!87134 () Bool)

(declare-fun e!87133 () Bool)

(assert (=> b!133740 (= e!87134 e!87133)))

(declare-fun res!64362 () Bool)

(declare-fun lt!69984 () SeekEntryResult!275)

(assert (=> b!133740 (= res!64362 (and ((_ is Intermediate!275) lt!69984) (not (undefined!1087 lt!69984)) (bvslt (x!15592 lt!69984) #b01111111111111111111111111111110) (bvsge (x!15592 lt!69984) #b00000000000000000000000000000000) (bvsge (x!15592 lt!69984) #b00000000000000000000000000000000)))))

(assert (=> b!133740 (=> (not res!64362) (not e!87133))))

(declare-fun b!133741 () Bool)

(assert (=> b!133741 (and (bvsge (index!3262 lt!69984) #b00000000000000000000000000000000) (bvslt (index!3262 lt!69984) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun res!64363 () Bool)

(assert (=> b!133741 (= res!64363 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!69984)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87131 () Bool)

(assert (=> b!133741 (=> res!64363 e!87131)))

(declare-fun b!133742 () Bool)

(declare-fun e!87135 () SeekEntryResult!275)

(declare-fun e!87132 () SeekEntryResult!275)

(assert (=> b!133742 (= e!87135 e!87132)))

(declare-fun c!24811 () Bool)

(declare-fun lt!69983 () (_ BitVec 64))

(assert (=> b!133742 (= c!24811 (or (= lt!69983 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)) (= (bvadd lt!69983 lt!69983) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133743 () Bool)

(assert (=> b!133743 (= e!87135 (Intermediate!275 true (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!133744 () Bool)

(assert (=> b!133744 (= e!87134 (bvsge (x!15592 lt!69984) #b01111111111111111111111111111110))))

(declare-fun b!133745 () Bool)

(assert (=> b!133745 (and (bvsge (index!3262 lt!69984) #b00000000000000000000000000000000) (bvslt (index!3262 lt!69984) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun res!64364 () Bool)

(assert (=> b!133745 (= res!64364 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!69984)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> b!133745 (=> res!64364 e!87131)))

(assert (=> b!133745 (= e!87133 e!87131)))

(declare-fun d!40771 () Bool)

(assert (=> d!40771 e!87134))

(declare-fun c!24810 () Bool)

(assert (=> d!40771 (= c!24810 (and ((_ is Intermediate!275) lt!69984) (undefined!1087 lt!69984)))))

(assert (=> d!40771 (= lt!69984 e!87135)))

(declare-fun c!24812 () Bool)

(assert (=> d!40771 (= c!24812 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!40771 (= lt!69983 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!40771 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!40771 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) lt!69984)))

(declare-fun b!133746 () Bool)

(assert (=> b!133746 (and (bvsge (index!3262 lt!69984) #b00000000000000000000000000000000) (bvslt (index!3262 lt!69984) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> b!133746 (= e!87131 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!69984)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133747 () Bool)

(assert (=> b!133747 (= e!87132 (Intermediate!275 false (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!133748 () Bool)

(assert (=> b!133748 (= e!87132 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3199 (underlying!455 thiss!992)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(assert (= (and d!40771 c!24812) b!133743))

(assert (= (and d!40771 (not c!24812)) b!133742))

(assert (= (and b!133742 c!24811) b!133747))

(assert (= (and b!133742 (not c!24811)) b!133748))

(assert (= (and d!40771 c!24810) b!133744))

(assert (= (and d!40771 (not c!24810)) b!133740))

(assert (= (and b!133740 res!64362) b!133745))

(assert (= (and b!133745 (not res!64364)) b!133741))

(assert (= (and b!133741 (not res!64363)) b!133746))

(declare-fun m!158125 () Bool)

(assert (=> b!133745 m!158125))

(assert (=> d!40771 m!156143))

(declare-fun m!158127 () Bool)

(assert (=> d!40771 m!158127))

(assert (=> d!40771 m!155867))

(assert (=> b!133748 m!156143))

(declare-fun m!158129 () Bool)

(assert (=> b!133748 m!158129))

(assert (=> b!133748 m!158129))

(assert (=> b!133748 m!155999))

(declare-fun m!158131 () Bool)

(assert (=> b!133748 m!158131))

(assert (=> b!133746 m!158125))

(assert (=> b!133741 m!158125))

(assert (=> d!40223 d!40771))

(declare-fun d!40773 () Bool)

(declare-fun lt!69986 () (_ BitVec 32))

(declare-fun lt!69985 () (_ BitVec 32))

(assert (=> d!40773 (= lt!69986 (bvmul (bvxor lt!69985 (bvlshr lt!69985 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!40773 (= lt!69985 ((_ extract 31 0) (bvand (bvxor (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (bvlshr (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!40773 (and (bvsge (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000000) (let ((res!64248 (let ((h!2321 ((_ extract 31 0) (bvand (bvxor (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (bvlshr (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15696 (bvmul (bvxor h!2321 (bvlshr h!2321 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15696 (bvlshr x!15696 #b00000000000000000000000000001101)) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))) (and (bvslt res!64248 (bvadd (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000001)) (bvsge res!64248 #b00000000000000000000000000000000))))))

(assert (=> d!40773 (= (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (bvand (bvxor lt!69986 (bvlshr lt!69986 #b00000000000000000000000000001101)) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(assert (=> d!40223 d!40773))

(assert (=> d!40223 d!40195))

(declare-fun bm!14767 () Bool)

(declare-fun call!14770 () Bool)

(declare-fun c!24813 () Bool)

(assert (=> bm!14767 (= call!14770 (arrayNoDuplicates!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24813 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))) (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)))))))

(declare-fun b!133749 () Bool)

(declare-fun e!87139 () Bool)

(declare-fun e!87136 () Bool)

(assert (=> b!133749 (= e!87139 e!87136)))

(assert (=> b!133749 (= c!24813 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun e!87137 () Bool)

(declare-fun b!133750 () Bool)

(assert (=> b!133750 (= e!87137 (contains!901 (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!133751 () Bool)

(assert (=> b!133751 (= e!87136 call!14770)))

(declare-fun b!133752 () Bool)

(declare-fun e!87138 () Bool)

(assert (=> b!133752 (= e!87138 e!87139)))

(declare-fun res!64367 () Bool)

(assert (=> b!133752 (=> (not res!64367) (not e!87139))))

(assert (=> b!133752 (= res!64367 (not e!87137))))

(declare-fun res!64366 () Bool)

(assert (=> b!133752 (=> (not res!64366) (not e!87137))))

(assert (=> b!133752 (= res!64366 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!133753 () Bool)

(assert (=> b!133753 (= e!87136 call!14770)))

(declare-fun d!40775 () Bool)

(declare-fun res!64365 () Bool)

(assert (=> d!40775 (=> res!64365 e!87138)))

(assert (=> d!40775 (= res!64365 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!40775 (= (arrayNoDuplicates!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))) e!87138)))

(assert (= (and d!40775 (not res!64365)) b!133752))

(assert (= (and b!133752 res!64366) b!133750))

(assert (= (and b!133752 res!64367) b!133749))

(assert (= (and b!133749 c!24813) b!133751))

(assert (= (and b!133749 (not c!24813)) b!133753))

(assert (= (or b!133751 b!133753) bm!14767))

(assert (=> bm!14767 m!157733))

(declare-fun m!158133 () Bool)

(assert (=> bm!14767 m!158133))

(assert (=> b!133749 m!157733))

(assert (=> b!133749 m!157733))

(assert (=> b!133749 m!157735))

(assert (=> b!133750 m!157733))

(assert (=> b!133750 m!157733))

(declare-fun m!158135 () Bool)

(assert (=> b!133750 m!158135))

(assert (=> b!133752 m!157733))

(assert (=> b!133752 m!157733))

(assert (=> b!133752 m!157735))

(assert (=> bm!14670 d!40775))

(declare-fun d!40777 () Bool)

(assert (=> d!40777 (= (apply!116 (+!175 lt!69248 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))) lt!69261) (apply!116 lt!69248 lt!69261))))

(declare-fun lt!69987 () Unit!4135)

(assert (=> d!40777 (= lt!69987 (choose!822 lt!69248 lt!69263 (minValue!2720 newMap!16) lt!69261))))

(declare-fun e!87140 () Bool)

(assert (=> d!40777 e!87140))

(declare-fun res!64368 () Bool)

(assert (=> d!40777 (=> (not res!64368) (not e!87140))))

(assert (=> d!40777 (= res!64368 (contains!899 lt!69248 lt!69261))))

(assert (=> d!40777 (= (addApplyDifferent!92 lt!69248 lt!69263 (minValue!2720 newMap!16) lt!69261) lt!69987)))

(declare-fun b!133754 () Bool)

(assert (=> b!133754 (= e!87140 (not (= lt!69261 lt!69263)))))

(assert (= (and d!40777 res!64368) b!133754))

(declare-fun m!158137 () Bool)

(assert (=> d!40777 m!158137))

(assert (=> d!40777 m!156185))

(assert (=> d!40777 m!156201))

(assert (=> d!40777 m!156185))

(assert (=> d!40777 m!156203))

(declare-fun m!158139 () Bool)

(assert (=> d!40777 m!158139))

(assert (=> b!132702 d!40777))

(declare-fun d!40779 () Bool)

(declare-fun e!87141 () Bool)

(assert (=> d!40779 e!87141))

(declare-fun res!64370 () Bool)

(assert (=> d!40779 (=> (not res!64370) (not e!87141))))

(declare-fun lt!69988 () ListLongMap!1707)

(assert (=> d!40779 (= res!64370 (contains!899 lt!69988 (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))

(declare-fun lt!69990 () List!1716)

(assert (=> d!40779 (= lt!69988 (ListLongMap!1708 lt!69990))))

(declare-fun lt!69991 () Unit!4135)

(declare-fun lt!69989 () Unit!4135)

(assert (=> d!40779 (= lt!69991 lt!69989)))

(assert (=> d!40779 (= (getValueByKey!172 lt!69990 (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))

(assert (=> d!40779 (= lt!69989 (lemmaContainsTupThenGetReturnValue!87 lt!69990 (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))

(assert (=> d!40779 (= lt!69990 (insertStrictlySorted!90 (toList!869 lt!69248) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))

(assert (=> d!40779 (= (+!175 lt!69248 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))) lt!69988)))

(declare-fun b!133755 () Bool)

(declare-fun res!64369 () Bool)

(assert (=> b!133755 (=> (not res!64369) (not e!87141))))

(assert (=> b!133755 (= res!64369 (= (getValueByKey!172 (toList!869 lt!69988) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))))))

(declare-fun b!133756 () Bool)

(assert (=> b!133756 (= e!87141 (contains!902 (toList!869 lt!69988) (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))))

(assert (= (and d!40779 res!64370) b!133755))

(assert (= (and b!133755 res!64369) b!133756))

(declare-fun m!158141 () Bool)

(assert (=> d!40779 m!158141))

(declare-fun m!158143 () Bool)

(assert (=> d!40779 m!158143))

(declare-fun m!158145 () Bool)

(assert (=> d!40779 m!158145))

(declare-fun m!158147 () Bool)

(assert (=> d!40779 m!158147))

(declare-fun m!158149 () Bool)

(assert (=> b!133755 m!158149))

(declare-fun m!158151 () Bool)

(assert (=> b!133756 m!158151))

(assert (=> b!132702 d!40779))

(declare-fun d!40781 () Bool)

(assert (=> d!40781 (= (apply!116 (+!175 lt!69251 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))) lt!69247) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69251 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))) lt!69247)))))

(declare-fun bs!5536 () Bool)

(assert (= bs!5536 d!40781))

(declare-fun m!158153 () Bool)

(assert (=> bs!5536 m!158153))

(assert (=> bs!5536 m!158153))

(declare-fun m!158155 () Bool)

(assert (=> bs!5536 m!158155))

(assert (=> b!132702 d!40781))

(declare-fun d!40783 () Bool)

(declare-fun e!87142 () Bool)

(assert (=> d!40783 e!87142))

(declare-fun res!64372 () Bool)

(assert (=> d!40783 (=> (not res!64372) (not e!87142))))

(declare-fun lt!69992 () ListLongMap!1707)

(assert (=> d!40783 (= res!64372 (contains!899 lt!69992 (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!69994 () List!1716)

(assert (=> d!40783 (= lt!69992 (ListLongMap!1708 lt!69994))))

(declare-fun lt!69995 () Unit!4135)

(declare-fun lt!69993 () Unit!4135)

(assert (=> d!40783 (= lt!69995 lt!69993)))

(assert (=> d!40783 (= (getValueByKey!172 lt!69994 (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40783 (= lt!69993 (lemmaContainsTupThenGetReturnValue!87 lt!69994 (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40783 (= lt!69994 (insertStrictlySorted!90 (toList!869 lt!69260) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40783 (= (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))) lt!69992)))

(declare-fun b!133757 () Bool)

(declare-fun res!64371 () Bool)

(assert (=> b!133757 (=> (not res!64371) (not e!87142))))

(assert (=> b!133757 (= res!64371 (= (getValueByKey!172 (toList!869 lt!69992) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))))))

(declare-fun b!133758 () Bool)

(assert (=> b!133758 (= e!87142 (contains!902 (toList!869 lt!69992) (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))))

(assert (= (and d!40783 res!64372) b!133757))

(assert (= (and b!133757 res!64371) b!133758))

(declare-fun m!158157 () Bool)

(assert (=> d!40783 m!158157))

(declare-fun m!158159 () Bool)

(assert (=> d!40783 m!158159))

(declare-fun m!158161 () Bool)

(assert (=> d!40783 m!158161))

(declare-fun m!158163 () Bool)

(assert (=> d!40783 m!158163))

(declare-fun m!158165 () Bool)

(assert (=> b!133757 m!158165))

(declare-fun m!158167 () Bool)

(assert (=> b!133758 m!158167))

(assert (=> b!132702 d!40783))

(declare-fun d!40785 () Bool)

(assert (=> d!40785 (= (apply!116 lt!69251 lt!69247) (get!1486 (getValueByKey!172 (toList!869 lt!69251) lt!69247)))))

(declare-fun bs!5537 () Bool)

(assert (= bs!5537 d!40785))

(declare-fun m!158169 () Bool)

(assert (=> bs!5537 m!158169))

(assert (=> bs!5537 m!158169))

(declare-fun m!158171 () Bool)

(assert (=> bs!5537 m!158171))

(assert (=> b!132702 d!40785))

(declare-fun d!40787 () Bool)

(assert (=> d!40787 (= (apply!116 (+!175 lt!69248 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))) lt!69261) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69248 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))) lt!69261)))))

(declare-fun bs!5538 () Bool)

(assert (= bs!5538 d!40787))

(declare-fun m!158173 () Bool)

(assert (=> bs!5538 m!158173))

(assert (=> bs!5538 m!158173))

(declare-fun m!158175 () Bool)

(assert (=> bs!5538 m!158175))

(assert (=> b!132702 d!40787))

(declare-fun d!40789 () Bool)

(assert (=> d!40789 (= (apply!116 lt!69248 lt!69261) (get!1486 (getValueByKey!172 (toList!869 lt!69248) lt!69261)))))

(declare-fun bs!5539 () Bool)

(assert (= bs!5539 d!40789))

(declare-fun m!158177 () Bool)

(assert (=> bs!5539 m!158177))

(assert (=> bs!5539 m!158177))

(declare-fun m!158179 () Bool)

(assert (=> bs!5539 m!158179))

(assert (=> b!132702 d!40789))

(declare-fun d!40791 () Bool)

(declare-fun e!87143 () Bool)

(assert (=> d!40791 e!87143))

(declare-fun res!64374 () Bool)

(assert (=> d!40791 (=> (not res!64374) (not e!87143))))

(declare-fun lt!69996 () ListLongMap!1707)

(assert (=> d!40791 (= res!64374 (contains!899 lt!69996 (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!69998 () List!1716)

(assert (=> d!40791 (= lt!69996 (ListLongMap!1708 lt!69998))))

(declare-fun lt!69999 () Unit!4135)

(declare-fun lt!69997 () Unit!4135)

(assert (=> d!40791 (= lt!69999 lt!69997)))

(assert (=> d!40791 (= (getValueByKey!172 lt!69998 (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40791 (= lt!69997 (lemmaContainsTupThenGetReturnValue!87 lt!69998 (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40791 (= lt!69998 (insertStrictlySorted!90 (toList!869 lt!69251) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40791 (= (+!175 lt!69251 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))) lt!69996)))

(declare-fun b!133759 () Bool)

(declare-fun res!64373 () Bool)

(assert (=> b!133759 (=> (not res!64373) (not e!87143))))

(assert (=> b!133759 (= res!64373 (= (getValueByKey!172 (toList!869 lt!69996) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))))))

(declare-fun b!133760 () Bool)

(assert (=> b!133760 (= e!87143 (contains!902 (toList!869 lt!69996) (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))))

(assert (= (and d!40791 res!64374) b!133759))

(assert (= (and b!133759 res!64373) b!133760))

(declare-fun m!158181 () Bool)

(assert (=> d!40791 m!158181))

(declare-fun m!158183 () Bool)

(assert (=> d!40791 m!158183))

(declare-fun m!158185 () Bool)

(assert (=> d!40791 m!158185))

(declare-fun m!158187 () Bool)

(assert (=> d!40791 m!158187))

(declare-fun m!158189 () Bool)

(assert (=> b!133759 m!158189))

(declare-fun m!158191 () Bool)

(assert (=> b!133760 m!158191))

(assert (=> b!132702 d!40791))

(declare-fun d!40793 () Bool)

(assert (=> d!40793 (= (apply!116 (+!175 lt!69246 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))) lt!69265) (apply!116 lt!69246 lt!69265))))

(declare-fun lt!70000 () Unit!4135)

(assert (=> d!40793 (= lt!70000 (choose!822 lt!69246 lt!69249 (minValue!2720 newMap!16) lt!69265))))

(declare-fun e!87144 () Bool)

(assert (=> d!40793 e!87144))

(declare-fun res!64375 () Bool)

(assert (=> d!40793 (=> (not res!64375) (not e!87144))))

(assert (=> d!40793 (= res!64375 (contains!899 lt!69246 lt!69265))))

(assert (=> d!40793 (= (addApplyDifferent!92 lt!69246 lt!69249 (minValue!2720 newMap!16) lt!69265) lt!70000)))

(declare-fun b!133761 () Bool)

(assert (=> b!133761 (= e!87144 (not (= lt!69265 lt!69249)))))

(assert (= (and d!40793 res!64375) b!133761))

(declare-fun m!158193 () Bool)

(assert (=> d!40793 m!158193))

(assert (=> d!40793 m!156197))

(assert (=> d!40793 m!156195))

(assert (=> d!40793 m!156197))

(assert (=> d!40793 m!156205))

(declare-fun m!158195 () Bool)

(assert (=> d!40793 m!158195))

(assert (=> b!132702 d!40793))

(declare-fun d!40795 () Bool)

(assert (=> d!40795 (= (apply!116 (+!175 lt!69246 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))) lt!69265) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69246 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))) lt!69265)))))

(declare-fun bs!5540 () Bool)

(assert (= bs!5540 d!40795))

(declare-fun m!158197 () Bool)

(assert (=> bs!5540 m!158197))

(assert (=> bs!5540 m!158197))

(declare-fun m!158199 () Bool)

(assert (=> bs!5540 m!158199))

(assert (=> b!132702 d!40795))

(assert (=> b!132702 d!40363))

(declare-fun d!40797 () Bool)

(assert (=> d!40797 (= (apply!116 lt!69246 lt!69265) (get!1486 (getValueByKey!172 (toList!869 lt!69246) lt!69265)))))

(declare-fun bs!5541 () Bool)

(assert (= bs!5541 d!40797))

(declare-fun m!158201 () Bool)

(assert (=> bs!5541 m!158201))

(assert (=> bs!5541 m!158201))

(declare-fun m!158203 () Bool)

(assert (=> bs!5541 m!158203))

(assert (=> b!132702 d!40797))

(declare-fun d!40799 () Bool)

(assert (=> d!40799 (contains!899 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))) lt!69259)))

(declare-fun lt!70001 () Unit!4135)

(assert (=> d!40799 (= lt!70001 (choose!823 lt!69260 lt!69254 (zeroValue!2720 newMap!16) lt!69259))))

(assert (=> d!40799 (contains!899 lt!69260 lt!69259)))

(assert (=> d!40799 (= (addStillContains!92 lt!69260 lt!69254 (zeroValue!2720 newMap!16) lt!69259) lt!70001)))

(declare-fun bs!5542 () Bool)

(assert (= bs!5542 d!40799))

(assert (=> bs!5542 m!156187))

(assert (=> bs!5542 m!156187))

(assert (=> bs!5542 m!156211))

(declare-fun m!158205 () Bool)

(assert (=> bs!5542 m!158205))

(declare-fun m!158207 () Bool)

(assert (=> bs!5542 m!158207))

(assert (=> b!132702 d!40799))

(declare-fun d!40801 () Bool)

(assert (=> d!40801 (= (apply!116 (+!175 lt!69251 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))) lt!69247) (apply!116 lt!69251 lt!69247))))

(declare-fun lt!70002 () Unit!4135)

(assert (=> d!40801 (= lt!70002 (choose!822 lt!69251 lt!69253 (zeroValue!2720 newMap!16) lt!69247))))

(declare-fun e!87145 () Bool)

(assert (=> d!40801 e!87145))

(declare-fun res!64376 () Bool)

(assert (=> d!40801 (=> (not res!64376) (not e!87145))))

(assert (=> d!40801 (= res!64376 (contains!899 lt!69251 lt!69247))))

(assert (=> d!40801 (= (addApplyDifferent!92 lt!69251 lt!69253 (zeroValue!2720 newMap!16) lt!69247) lt!70002)))

(declare-fun b!133762 () Bool)

(assert (=> b!133762 (= e!87145 (not (= lt!69247 lt!69253)))))

(assert (= (and d!40801 res!64376) b!133762))

(declare-fun m!158209 () Bool)

(assert (=> d!40801 m!158209))

(assert (=> d!40801 m!156189))

(assert (=> d!40801 m!156209))

(assert (=> d!40801 m!156189))

(assert (=> d!40801 m!156191))

(declare-fun m!158211 () Bool)

(assert (=> d!40801 m!158211))

(assert (=> b!132702 d!40801))

(declare-fun d!40803 () Bool)

(declare-fun e!87146 () Bool)

(assert (=> d!40803 e!87146))

(declare-fun res!64378 () Bool)

(assert (=> d!40803 (=> (not res!64378) (not e!87146))))

(declare-fun lt!70003 () ListLongMap!1707)

(assert (=> d!40803 (= res!64378 (contains!899 lt!70003 (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))

(declare-fun lt!70005 () List!1716)

(assert (=> d!40803 (= lt!70003 (ListLongMap!1708 lt!70005))))

(declare-fun lt!70006 () Unit!4135)

(declare-fun lt!70004 () Unit!4135)

(assert (=> d!40803 (= lt!70006 lt!70004)))

(assert (=> d!40803 (= (getValueByKey!172 lt!70005 (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))

(assert (=> d!40803 (= lt!70004 (lemmaContainsTupThenGetReturnValue!87 lt!70005 (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))

(assert (=> d!40803 (= lt!70005 (insertStrictlySorted!90 (toList!869 lt!69246) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))

(assert (=> d!40803 (= (+!175 lt!69246 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))) lt!70003)))

(declare-fun b!133763 () Bool)

(declare-fun res!64377 () Bool)

(assert (=> b!133763 (=> (not res!64377) (not e!87146))))

(assert (=> b!133763 (= res!64377 (= (getValueByKey!172 (toList!869 lt!70003) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))))))

(declare-fun b!133764 () Bool)

(assert (=> b!133764 (= e!87146 (contains!902 (toList!869 lt!70003) (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))))

(assert (= (and d!40803 res!64378) b!133763))

(assert (= (and b!133763 res!64377) b!133764))

(declare-fun m!158213 () Bool)

(assert (=> d!40803 m!158213))

(declare-fun m!158215 () Bool)

(assert (=> d!40803 m!158215))

(declare-fun m!158217 () Bool)

(assert (=> d!40803 m!158217))

(declare-fun m!158219 () Bool)

(assert (=> d!40803 m!158219))

(declare-fun m!158221 () Bool)

(assert (=> b!133763 m!158221))

(declare-fun m!158223 () Bool)

(assert (=> b!133764 m!158223))

(assert (=> b!132702 d!40803))

(declare-fun d!40805 () Bool)

(declare-fun e!87147 () Bool)

(assert (=> d!40805 e!87147))

(declare-fun res!64379 () Bool)

(assert (=> d!40805 (=> res!64379 e!87147)))

(declare-fun lt!70010 () Bool)

(assert (=> d!40805 (= res!64379 (not lt!70010))))

(declare-fun lt!70007 () Bool)

(assert (=> d!40805 (= lt!70010 lt!70007)))

(declare-fun lt!70009 () Unit!4135)

(declare-fun e!87148 () Unit!4135)

(assert (=> d!40805 (= lt!70009 e!87148)))

(declare-fun c!24814 () Bool)

(assert (=> d!40805 (= c!24814 lt!70007)))

(assert (=> d!40805 (= lt!70007 (containsKey!176 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) lt!69259))))

(assert (=> d!40805 (= (contains!899 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))) lt!69259) lt!70010)))

(declare-fun b!133765 () Bool)

(declare-fun lt!70008 () Unit!4135)

(assert (=> b!133765 (= e!87148 lt!70008)))

(assert (=> b!133765 (= lt!70008 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) lt!69259))))

(assert (=> b!133765 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) lt!69259))))

(declare-fun b!133766 () Bool)

(declare-fun Unit!4188 () Unit!4135)

(assert (=> b!133766 (= e!87148 Unit!4188)))

(declare-fun b!133767 () Bool)

(assert (=> b!133767 (= e!87147 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) lt!69259)))))

(assert (= (and d!40805 c!24814) b!133765))

(assert (= (and d!40805 (not c!24814)) b!133766))

(assert (= (and d!40805 (not res!64379)) b!133767))

(declare-fun m!158225 () Bool)

(assert (=> d!40805 m!158225))

(declare-fun m!158227 () Bool)

(assert (=> b!133765 m!158227))

(declare-fun m!158229 () Bool)

(assert (=> b!133765 m!158229))

(assert (=> b!133765 m!158229))

(declare-fun m!158231 () Bool)

(assert (=> b!133765 m!158231))

(assert (=> b!133767 m!158229))

(assert (=> b!133767 m!158229))

(assert (=> b!133767 m!158231))

(assert (=> b!132702 d!40805))

(declare-fun b!133768 () Bool)

(declare-fun e!87150 () (_ BitVec 32))

(declare-fun e!87149 () (_ BitVec 32))

(assert (=> b!133768 (= e!87150 e!87149)))

(declare-fun c!24815 () Bool)

(assert (=> b!133768 (= c!24815 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(declare-fun b!133769 () Bool)

(declare-fun call!14771 () (_ BitVec 32))

(assert (=> b!133769 (= e!87149 (bvadd #b00000000000000000000000000000001 call!14771))))

(declare-fun b!133770 () Bool)

(assert (=> b!133770 (= e!87149 call!14771)))

(declare-fun d!40807 () Bool)

(declare-fun lt!70011 () (_ BitVec 32))

(assert (=> d!40807 (and (bvsge lt!70011 #b00000000000000000000000000000000) (bvsle lt!70011 (bvsub (size!2530 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(assert (=> d!40807 (= lt!70011 e!87150)))

(declare-fun c!24816 () Bool)

(assert (=> d!40807 (= c!24816 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(assert (=> d!40807 (and (bvsle #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2530 (_keys!4614 (_2!1325 lt!69179))) (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(assert (=> d!40807 (= (arrayCountValidKeys!0 (_keys!4614 (_2!1325 lt!69179)) #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))) lt!70011)))

(declare-fun b!133771 () Bool)

(assert (=> b!133771 (= e!87150 #b00000000000000000000000000000000)))

(declare-fun bm!14768 () Bool)

(assert (=> bm!14768 (= call!14771 (arrayCountValidKeys!0 (_keys!4614 (_2!1325 lt!69179)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(assert (= (and d!40807 c!24816) b!133771))

(assert (= (and d!40807 (not c!24816)) b!133768))

(assert (= (and b!133768 c!24815) b!133769))

(assert (= (and b!133768 (not c!24815)) b!133770))

(assert (= (or b!133769 b!133770) bm!14768))

(assert (=> b!133768 m!157587))

(assert (=> b!133768 m!157587))

(assert (=> b!133768 m!157591))

(declare-fun m!158233 () Bool)

(assert (=> bm!14768 m!158233))

(assert (=> b!132791 d!40807))

(declare-fun d!40809 () Bool)

(declare-fun e!87151 () Bool)

(assert (=> d!40809 e!87151))

(declare-fun res!64380 () Bool)

(assert (=> d!40809 (=> res!64380 e!87151)))

(declare-fun lt!70015 () Bool)

(assert (=> d!40809 (= res!64380 (not lt!70015))))

(declare-fun lt!70012 () Bool)

(assert (=> d!40809 (= lt!70015 lt!70012)))

(declare-fun lt!70014 () Unit!4135)

(declare-fun e!87152 () Unit!4135)

(assert (=> d!40809 (= lt!70014 e!87152)))

(declare-fun c!24817 () Bool)

(assert (=> d!40809 (= c!24817 lt!70012)))

(assert (=> d!40809 (= lt!70012 (containsKey!176 (toList!869 lt!69262) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40809 (= (contains!899 lt!69262 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70015)))

(declare-fun b!133772 () Bool)

(declare-fun lt!70013 () Unit!4135)

(assert (=> b!133772 (= e!87152 lt!70013)))

(assert (=> b!133772 (= lt!70013 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69262) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133772 (isDefined!125 (getValueByKey!172 (toList!869 lt!69262) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133773 () Bool)

(declare-fun Unit!4189 () Unit!4135)

(assert (=> b!133773 (= e!87152 Unit!4189)))

(declare-fun b!133774 () Bool)

(assert (=> b!133774 (= e!87151 (isDefined!125 (getValueByKey!172 (toList!869 lt!69262) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40809 c!24817) b!133772))

(assert (= (and d!40809 (not c!24817)) b!133773))

(assert (= (and d!40809 (not res!64380)) b!133774))

(declare-fun m!158235 () Bool)

(assert (=> d!40809 m!158235))

(declare-fun m!158237 () Bool)

(assert (=> b!133772 m!158237))

(assert (=> b!133772 m!158105))

(assert (=> b!133772 m!158105))

(declare-fun m!158239 () Bool)

(assert (=> b!133772 m!158239))

(assert (=> b!133774 m!158105))

(assert (=> b!133774 m!158105))

(assert (=> b!133774 m!158239))

(assert (=> bm!14626 d!40809))

(declare-fun d!40811 () Bool)

(declare-fun e!87153 () Bool)

(assert (=> d!40811 e!87153))

(declare-fun res!64382 () Bool)

(assert (=> d!40811 (=> (not res!64382) (not e!87153))))

(declare-fun lt!70016 () ListLongMap!1707)

(assert (=> d!40811 (= res!64382 (contains!899 lt!70016 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70018 () List!1716)

(assert (=> d!40811 (= lt!70016 (ListLongMap!1708 lt!70018))))

(declare-fun lt!70019 () Unit!4135)

(declare-fun lt!70017 () Unit!4135)

(assert (=> d!40811 (= lt!70019 lt!70017)))

(assert (=> d!40811 (= (getValueByKey!172 lt!70018 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40811 (= lt!70017 (lemmaContainsTupThenGetReturnValue!87 lt!70018 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40811 (= lt!70018 (insertStrictlySorted!90 (toList!869 call!14661) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!40811 (= (+!175 call!14661 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70016)))

(declare-fun b!133775 () Bool)

(declare-fun res!64381 () Bool)

(assert (=> b!133775 (=> (not res!64381) (not e!87153))))

(assert (=> b!133775 (= res!64381 (= (getValueByKey!172 (toList!869 lt!70016) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!133776 () Bool)

(assert (=> b!133776 (= e!87153 (contains!902 (toList!869 lt!70016) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!40811 res!64382) b!133775))

(assert (= (and b!133775 res!64381) b!133776))

(declare-fun m!158241 () Bool)

(assert (=> d!40811 m!158241))

(declare-fun m!158243 () Bool)

(assert (=> d!40811 m!158243))

(declare-fun m!158245 () Bool)

(assert (=> d!40811 m!158245))

(declare-fun m!158247 () Bool)

(assert (=> d!40811 m!158247))

(declare-fun m!158249 () Bool)

(assert (=> b!133775 m!158249))

(declare-fun m!158251 () Bool)

(assert (=> b!133776 m!158251))

(assert (=> b!132905 d!40811))

(assert (=> bm!14652 d!40299))

(declare-fun b!133779 () Bool)

(declare-fun e!87155 () Option!178)

(assert (=> b!133779 (= e!87155 (getValueByKey!172 (t!6167 (toList!869 lt!69418)) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133780 () Bool)

(assert (=> b!133780 (= e!87155 None!176)))

(declare-fun d!40813 () Bool)

(declare-fun c!24818 () Bool)

(assert (=> d!40813 (= c!24818 (and ((_ is Cons!1712) (toList!869 lt!69418)) (= (_1!1324 (h!2317 (toList!869 lt!69418))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87154 () Option!178)

(assert (=> d!40813 (= (getValueByKey!172 (toList!869 lt!69418) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87154)))

(declare-fun b!133777 () Bool)

(assert (=> b!133777 (= e!87154 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69418)))))))

(declare-fun b!133778 () Bool)

(assert (=> b!133778 (= e!87154 e!87155)))

(declare-fun c!24819 () Bool)

(assert (=> b!133778 (= c!24819 (and ((_ is Cons!1712) (toList!869 lt!69418)) (not (= (_1!1324 (h!2317 (toList!869 lt!69418))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!40813 c!24818) b!133777))

(assert (= (and d!40813 (not c!24818)) b!133778))

(assert (= (and b!133778 c!24819) b!133779))

(assert (= (and b!133778 (not c!24819)) b!133780))

(declare-fun m!158253 () Bool)

(assert (=> b!133779 m!158253))

(assert (=> b!132846 d!40813))

(declare-fun d!40815 () Bool)

(assert (=> d!40815 (isDefined!125 (getValueByKey!172 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun lt!70020 () Unit!4135)

(assert (=> d!40815 (= lt!70020 (choose!817 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun e!87156 () Bool)

(assert (=> d!40815 e!87156))

(declare-fun res!64383 () Bool)

(assert (=> d!40815 (=> (not res!64383) (not e!87156))))

(assert (=> d!40815 (= res!64383 (isStrictlySorted!322 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))))

(assert (=> d!40815 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) lt!70020)))

(declare-fun b!133781 () Bool)

(assert (=> b!133781 (= e!87156 (containsKey!176 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (= (and d!40815 res!64383) b!133781))

(assert (=> d!40815 m!155869))

(assert (=> d!40815 m!156311))

(assert (=> d!40815 m!156311))

(assert (=> d!40815 m!156313))

(assert (=> d!40815 m!155869))

(declare-fun m!158255 () Bool)

(assert (=> d!40815 m!158255))

(declare-fun m!158257 () Bool)

(assert (=> d!40815 m!158257))

(assert (=> b!133781 m!155869))

(assert (=> b!133781 m!156307))

(assert (=> b!132788 d!40815))

(assert (=> b!132788 d!40671))

(assert (=> b!132788 d!40673))

(declare-fun d!40817 () Bool)

(assert (=> d!40817 (= (apply!116 lt!69262 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69262) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5543 () Bool)

(assert (= bs!5543 d!40817))

(declare-fun m!158259 () Bool)

(assert (=> bs!5543 m!158259))

(assert (=> bs!5543 m!158259))

(declare-fun m!158261 () Bool)

(assert (=> bs!5543 m!158261))

(assert (=> b!132715 d!40817))

(assert (=> d!40211 d!40213))

(assert (=> d!40211 d!40215))

(declare-fun d!40819 () Bool)

(assert (=> d!40819 (isDefined!125 (getValueByKey!172 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> d!40819 true))

(declare-fun _$12!399 () Unit!4135)

(assert (=> d!40819 (= (choose!817 (toList!869 lt!69022) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) _$12!399)))

(declare-fun bs!5544 () Bool)

(assert (= bs!5544 d!40819))

(assert (=> bs!5544 m!155869))

(assert (=> bs!5544 m!156027))

(assert (=> bs!5544 m!156027))

(assert (=> bs!5544 m!156029))

(assert (=> d!40211 d!40819))

(declare-fun d!40821 () Bool)

(declare-fun res!64388 () Bool)

(declare-fun e!87161 () Bool)

(assert (=> d!40821 (=> res!64388 e!87161)))

(assert (=> d!40821 (= res!64388 (or ((_ is Nil!1713) (toList!869 lt!69022)) ((_ is Nil!1713) (t!6167 (toList!869 lt!69022)))))))

(assert (=> d!40821 (= (isStrictlySorted!322 (toList!869 lt!69022)) e!87161)))

(declare-fun b!133786 () Bool)

(declare-fun e!87162 () Bool)

(assert (=> b!133786 (= e!87161 e!87162)))

(declare-fun res!64389 () Bool)

(assert (=> b!133786 (=> (not res!64389) (not e!87162))))

(assert (=> b!133786 (= res!64389 (bvslt (_1!1324 (h!2317 (toList!869 lt!69022))) (_1!1324 (h!2317 (t!6167 (toList!869 lt!69022))))))))

(declare-fun b!133787 () Bool)

(assert (=> b!133787 (= e!87162 (isStrictlySorted!322 (t!6167 (toList!869 lt!69022))))))

(assert (= (and d!40821 (not res!64388)) b!133786))

(assert (= (and b!133786 res!64389) b!133787))

(declare-fun m!158263 () Bool)

(assert (=> b!133787 m!158263))

(assert (=> d!40211 d!40821))

(declare-fun d!40823 () Bool)

(assert (=> d!40823 (isDefined!125 (getValueByKey!172 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun lt!70021 () Unit!4135)

(assert (=> d!40823 (= lt!70021 (choose!817 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun e!87163 () Bool)

(assert (=> d!40823 e!87163))

(declare-fun res!64390 () Bool)

(assert (=> d!40823 (=> (not res!64390) (not e!87163))))

(assert (=> d!40823 (= res!64390 (isStrictlySorted!322 (toList!869 call!14619)))))

(assert (=> d!40823 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) lt!70021)))

(declare-fun b!133788 () Bool)

(assert (=> b!133788 (= e!87163 (containsKey!176 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (= (and d!40823 res!64390) b!133788))

(assert (=> d!40823 m!155869))

(assert (=> d!40823 m!156633))

(assert (=> d!40823 m!156633))

(assert (=> d!40823 m!156635))

(assert (=> d!40823 m!155869))

(declare-fun m!158265 () Bool)

(assert (=> d!40823 m!158265))

(declare-fun m!158267 () Bool)

(assert (=> d!40823 m!158267))

(assert (=> b!133788 m!155869))

(assert (=> b!133788 m!156629))

(assert (=> b!132954 d!40823))

(assert (=> b!132954 d!40681))

(assert (=> b!132954 d!40683))

(assert (=> b!132636 d!40583))

(assert (=> b!132636 d!40585))

(declare-fun d!40825 () Bool)

(assert (=> d!40825 (= (get!1486 (getValueByKey!172 (toList!869 lt!69084) lt!69080)) (v!3203 (getValueByKey!172 (toList!869 lt!69084) lt!69080)))))

(assert (=> d!40267 d!40825))

(declare-fun b!133791 () Bool)

(declare-fun e!87165 () Option!178)

(assert (=> b!133791 (= e!87165 (getValueByKey!172 (t!6167 (toList!869 lt!69084)) lt!69080))))

(declare-fun b!133792 () Bool)

(assert (=> b!133792 (= e!87165 None!176)))

(declare-fun d!40827 () Bool)

(declare-fun c!24820 () Bool)

(assert (=> d!40827 (= c!24820 (and ((_ is Cons!1712) (toList!869 lt!69084)) (= (_1!1324 (h!2317 (toList!869 lt!69084))) lt!69080)))))

(declare-fun e!87164 () Option!178)

(assert (=> d!40827 (= (getValueByKey!172 (toList!869 lt!69084) lt!69080) e!87164)))

(declare-fun b!133789 () Bool)

(assert (=> b!133789 (= e!87164 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69084)))))))

(declare-fun b!133790 () Bool)

(assert (=> b!133790 (= e!87164 e!87165)))

(declare-fun c!24821 () Bool)

(assert (=> b!133790 (= c!24821 (and ((_ is Cons!1712) (toList!869 lt!69084)) (not (= (_1!1324 (h!2317 (toList!869 lt!69084))) lt!69080))))))

(assert (= (and d!40827 c!24820) b!133789))

(assert (= (and d!40827 (not c!24820)) b!133790))

(assert (= (and b!133790 c!24821) b!133791))

(assert (= (and b!133790 (not c!24821)) b!133792))

(declare-fun m!158269 () Bool)

(assert (=> b!133791 m!158269))

(assert (=> d!40267 d!40827))

(assert (=> b!132840 d!40661))

(declare-fun d!40829 () Bool)

(declare-fun e!87166 () Bool)

(assert (=> d!40829 e!87166))

(declare-fun res!64391 () Bool)

(assert (=> d!40829 (=> res!64391 e!87166)))

(declare-fun lt!70025 () Bool)

(assert (=> d!40829 (= res!64391 (not lt!70025))))

(declare-fun lt!70022 () Bool)

(assert (=> d!40829 (= lt!70025 lt!70022)))

(declare-fun lt!70024 () Unit!4135)

(declare-fun e!87167 () Unit!4135)

(assert (=> d!40829 (= lt!70024 e!87167)))

(declare-fun c!24822 () Bool)

(assert (=> d!40829 (= c!24822 lt!70022)))

(assert (=> d!40829 (= lt!70022 (containsKey!176 (toList!869 lt!69418) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!40829 (= (contains!899 lt!69418 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!70025)))

(declare-fun b!133793 () Bool)

(declare-fun lt!70023 () Unit!4135)

(assert (=> b!133793 (= e!87167 lt!70023)))

(assert (=> b!133793 (= lt!70023 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69418) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> b!133793 (isDefined!125 (getValueByKey!172 (toList!869 lt!69418) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133794 () Bool)

(declare-fun Unit!4190 () Unit!4135)

(assert (=> b!133794 (= e!87167 Unit!4190)))

(declare-fun b!133795 () Bool)

(assert (=> b!133795 (= e!87166 (isDefined!125 (getValueByKey!172 (toList!869 lt!69418) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!40829 c!24822) b!133793))

(assert (= (and d!40829 (not c!24822)) b!133794))

(assert (= (and d!40829 (not res!64391)) b!133795))

(declare-fun m!158271 () Bool)

(assert (=> d!40829 m!158271))

(declare-fun m!158273 () Bool)

(assert (=> b!133793 m!158273))

(assert (=> b!133793 m!156435))

(assert (=> b!133793 m!156435))

(declare-fun m!158275 () Bool)

(assert (=> b!133793 m!158275))

(assert (=> b!133795 m!156435))

(assert (=> b!133795 m!156435))

(assert (=> b!133795 m!158275))

(assert (=> d!40277 d!40829))

(declare-fun b!133798 () Bool)

(declare-fun e!87169 () Option!178)

(assert (=> b!133798 (= e!87169 (getValueByKey!172 (t!6167 lt!69420) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133799 () Bool)

(assert (=> b!133799 (= e!87169 None!176)))

(declare-fun c!24823 () Bool)

(declare-fun d!40831 () Bool)

(assert (=> d!40831 (= c!24823 (and ((_ is Cons!1712) lt!69420) (= (_1!1324 (h!2317 lt!69420)) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87168 () Option!178)

(assert (=> d!40831 (= (getValueByKey!172 lt!69420 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87168)))

(declare-fun b!133796 () Bool)

(assert (=> b!133796 (= e!87168 (Some!177 (_2!1324 (h!2317 lt!69420))))))

(declare-fun b!133797 () Bool)

(assert (=> b!133797 (= e!87168 e!87169)))

(declare-fun c!24824 () Bool)

(assert (=> b!133797 (= c!24824 (and ((_ is Cons!1712) lt!69420) (not (= (_1!1324 (h!2317 lt!69420)) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!40831 c!24823) b!133796))

(assert (= (and d!40831 (not c!24823)) b!133797))

(assert (= (and b!133797 c!24824) b!133798))

(assert (= (and b!133797 (not c!24824)) b!133799))

(declare-fun m!158277 () Bool)

(assert (=> b!133798 m!158277))

(assert (=> d!40277 d!40831))

(declare-fun d!40833 () Bool)

(assert (=> d!40833 (= (getValueByKey!172 lt!69420 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun lt!70026 () Unit!4135)

(assert (=> d!40833 (= lt!70026 (choose!827 lt!69420 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun e!87170 () Bool)

(assert (=> d!40833 e!87170))

(declare-fun res!64392 () Bool)

(assert (=> d!40833 (=> (not res!64392) (not e!87170))))

(assert (=> d!40833 (= res!64392 (isStrictlySorted!322 lt!69420))))

(assert (=> d!40833 (= (lemmaContainsTupThenGetReturnValue!87 lt!69420 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!70026)))

(declare-fun b!133800 () Bool)

(declare-fun res!64393 () Bool)

(assert (=> b!133800 (=> (not res!64393) (not e!87170))))

(assert (=> b!133800 (= res!64393 (containsKey!176 lt!69420 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133801 () Bool)

(assert (=> b!133801 (= e!87170 (contains!902 lt!69420 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!40833 res!64392) b!133800))

(assert (= (and b!133800 res!64393) b!133801))

(assert (=> d!40833 m!156429))

(declare-fun m!158279 () Bool)

(assert (=> d!40833 m!158279))

(declare-fun m!158281 () Bool)

(assert (=> d!40833 m!158281))

(declare-fun m!158283 () Bool)

(assert (=> b!133800 m!158283))

(declare-fun m!158285 () Bool)

(assert (=> b!133801 m!158285))

(assert (=> d!40277 d!40833))

(declare-fun bm!14769 () Bool)

(declare-fun call!14773 () List!1716)

(declare-fun call!14774 () List!1716)

(assert (=> bm!14769 (= call!14773 call!14774)))

(declare-fun d!40835 () Bool)

(declare-fun e!87174 () Bool)

(assert (=> d!40835 e!87174))

(declare-fun res!64395 () Bool)

(assert (=> d!40835 (=> (not res!64395) (not e!87174))))

(declare-fun lt!70027 () List!1716)

(assert (=> d!40835 (= res!64395 (isStrictlySorted!322 lt!70027))))

(declare-fun e!87172 () List!1716)

(assert (=> d!40835 (= lt!70027 e!87172)))

(declare-fun c!24828 () Bool)

(assert (=> d!40835 (= c!24828 (and ((_ is Cons!1712) (toList!869 lt!69084)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69084))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!40835 (isStrictlySorted!322 (toList!869 lt!69084))))

(assert (=> d!40835 (= (insertStrictlySorted!90 (toList!869 lt!69084) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!70027)))

(declare-fun b!133802 () Bool)

(assert (=> b!133802 (= e!87174 (contains!902 lt!70027 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!133803 () Bool)

(declare-fun c!24826 () Bool)

(assert (=> b!133803 (= c!24826 (and ((_ is Cons!1712) (toList!869 lt!69084)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69084))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87173 () List!1716)

(declare-fun e!87175 () List!1716)

(assert (=> b!133803 (= e!87173 e!87175)))

(declare-fun e!87171 () List!1716)

(declare-fun b!133804 () Bool)

(assert (=> b!133804 (= e!87171 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69084)) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133805 () Bool)

(assert (=> b!133805 (= e!87173 call!14773)))

(declare-fun b!133806 () Bool)

(declare-fun call!14772 () List!1716)

(assert (=> b!133806 (= e!87175 call!14772)))

(declare-fun b!133807 () Bool)

(declare-fun c!24825 () Bool)

(assert (=> b!133807 (= e!87171 (ite c!24825 (t!6167 (toList!869 lt!69084)) (ite c!24826 (Cons!1712 (h!2317 (toList!869 lt!69084)) (t!6167 (toList!869 lt!69084))) Nil!1713)))))

(declare-fun b!133808 () Bool)

(assert (=> b!133808 (= e!87175 call!14772)))

(declare-fun b!133809 () Bool)

(assert (=> b!133809 (= e!87172 call!14774)))

(declare-fun bm!14770 () Bool)

(assert (=> bm!14770 (= call!14774 ($colon$colon!92 e!87171 (ite c!24828 (h!2317 (toList!869 lt!69084)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun c!24827 () Bool)

(assert (=> bm!14770 (= c!24827 c!24828)))

(declare-fun bm!14771 () Bool)

(assert (=> bm!14771 (= call!14772 call!14773)))

(declare-fun b!133810 () Bool)

(declare-fun res!64394 () Bool)

(assert (=> b!133810 (=> (not res!64394) (not e!87174))))

(assert (=> b!133810 (= res!64394 (containsKey!176 lt!70027 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133811 () Bool)

(assert (=> b!133811 (= e!87172 e!87173)))

(assert (=> b!133811 (= c!24825 (and ((_ is Cons!1712) (toList!869 lt!69084)) (= (_1!1324 (h!2317 (toList!869 lt!69084))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!40835 c!24828) b!133809))

(assert (= (and d!40835 (not c!24828)) b!133811))

(assert (= (and b!133811 c!24825) b!133805))

(assert (= (and b!133811 (not c!24825)) b!133803))

(assert (= (and b!133803 c!24826) b!133806))

(assert (= (and b!133803 (not c!24826)) b!133808))

(assert (= (or b!133806 b!133808) bm!14771))

(assert (= (or b!133805 bm!14771) bm!14769))

(assert (= (or b!133809 bm!14769) bm!14770))

(assert (= (and bm!14770 c!24827) b!133804))

(assert (= (and bm!14770 (not c!24827)) b!133807))

(assert (= (and d!40835 res!64395) b!133810))

(assert (= (and b!133810 res!64394) b!133802))

(declare-fun m!158287 () Bool)

(assert (=> d!40835 m!158287))

(declare-fun m!158289 () Bool)

(assert (=> d!40835 m!158289))

(declare-fun m!158291 () Bool)

(assert (=> bm!14770 m!158291))

(declare-fun m!158293 () Bool)

(assert (=> b!133804 m!158293))

(declare-fun m!158295 () Bool)

(assert (=> b!133802 m!158295))

(declare-fun m!158297 () Bool)

(assert (=> b!133810 m!158297))

(assert (=> d!40277 d!40835))

(declare-fun d!40837 () Bool)

(declare-fun e!87176 () Bool)

(assert (=> d!40837 e!87176))

(declare-fun res!64396 () Bool)

(assert (=> d!40837 (=> res!64396 e!87176)))

(declare-fun lt!70031 () Bool)

(assert (=> d!40837 (= res!64396 (not lt!70031))))

(declare-fun lt!70028 () Bool)

(assert (=> d!40837 (= lt!70031 lt!70028)))

(declare-fun lt!70030 () Unit!4135)

(declare-fun e!87177 () Unit!4135)

(assert (=> d!40837 (= lt!70030 e!87177)))

(declare-fun c!24829 () Bool)

(assert (=> d!40837 (= c!24829 lt!70028)))

(assert (=> d!40837 (= lt!70028 (containsKey!176 (toList!869 lt!69262) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40837 (= (contains!899 lt!69262 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70031)))

(declare-fun b!133812 () Bool)

(declare-fun lt!70029 () Unit!4135)

(assert (=> b!133812 (= e!87177 lt!70029)))

(assert (=> b!133812 (= lt!70029 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69262) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133812 (isDefined!125 (getValueByKey!172 (toList!869 lt!69262) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133813 () Bool)

(declare-fun Unit!4191 () Unit!4135)

(assert (=> b!133813 (= e!87177 Unit!4191)))

(declare-fun b!133814 () Bool)

(assert (=> b!133814 (= e!87176 (isDefined!125 (getValueByKey!172 (toList!869 lt!69262) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40837 c!24829) b!133812))

(assert (= (and d!40837 (not c!24829)) b!133813))

(assert (= (and d!40837 (not res!64396)) b!133814))

(declare-fun m!158299 () Bool)

(assert (=> d!40837 m!158299))

(declare-fun m!158301 () Bool)

(assert (=> b!133812 m!158301))

(assert (=> b!133812 m!158259))

(assert (=> b!133812 m!158259))

(declare-fun m!158303 () Bool)

(assert (=> b!133812 m!158303))

(assert (=> b!133814 m!158259))

(assert (=> b!133814 m!158259))

(assert (=> b!133814 m!158303))

(assert (=> bm!14625 d!40837))

(assert (=> b!132773 d!40295))

(declare-fun call!14775 () Bool)

(declare-fun bm!14772 () Bool)

(declare-fun c!24830 () Bool)

(assert (=> bm!14772 (= call!14775 (arrayNoDuplicates!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24830 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714))))))

(declare-fun b!133815 () Bool)

(declare-fun e!87181 () Bool)

(declare-fun e!87178 () Bool)

(assert (=> b!133815 (= e!87181 e!87178)))

(assert (=> b!133815 (= c!24830 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133816 () Bool)

(declare-fun e!87179 () Bool)

(assert (=> b!133816 (= e!87179 (contains!901 (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714) (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133817 () Bool)

(assert (=> b!133817 (= e!87178 call!14775)))

(declare-fun b!133818 () Bool)

(declare-fun e!87180 () Bool)

(assert (=> b!133818 (= e!87180 e!87181)))

(declare-fun res!64399 () Bool)

(assert (=> b!133818 (=> (not res!64399) (not e!87181))))

(assert (=> b!133818 (= res!64399 (not e!87179))))

(declare-fun res!64398 () Bool)

(assert (=> b!133818 (=> (not res!64398) (not e!87179))))

(assert (=> b!133818 (= res!64398 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133819 () Bool)

(assert (=> b!133819 (= e!87178 call!14775)))

(declare-fun d!40839 () Bool)

(declare-fun res!64397 () Bool)

(assert (=> d!40839 (=> res!64397 e!87180)))

(assert (=> d!40839 (= res!64397 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!40839 (= (arrayNoDuplicates!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) e!87180)))

(assert (= (and d!40839 (not res!64397)) b!133818))

(assert (= (and b!133818 res!64398) b!133816))

(assert (= (and b!133818 res!64399) b!133815))

(assert (= (and b!133815 c!24830) b!133817))

(assert (= (and b!133815 (not c!24830)) b!133819))

(assert (= (or b!133817 b!133819) bm!14772))

(assert (=> bm!14772 m!157845))

(declare-fun m!158305 () Bool)

(assert (=> bm!14772 m!158305))

(assert (=> b!133815 m!157845))

(assert (=> b!133815 m!157845))

(assert (=> b!133815 m!157847))

(assert (=> b!133816 m!157845))

(assert (=> b!133816 m!157845))

(declare-fun m!158307 () Bool)

(assert (=> b!133816 m!158307))

(assert (=> b!133818 m!157845))

(assert (=> b!133818 m!157845))

(assert (=> b!133818 m!157847))

(assert (=> bm!14632 d!40839))

(declare-fun d!40841 () Bool)

(declare-fun res!64400 () Bool)

(declare-fun e!87182 () Bool)

(assert (=> d!40841 (=> res!64400 e!87182)))

(assert (=> d!40841 (= res!64400 (and ((_ is Cons!1712) (toList!869 lt!69095)) (= (_1!1324 (h!2317 (toList!869 lt!69095))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40841 (= (containsKey!176 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000) e!87182)))

(declare-fun b!133820 () Bool)

(declare-fun e!87183 () Bool)

(assert (=> b!133820 (= e!87182 e!87183)))

(declare-fun res!64401 () Bool)

(assert (=> b!133820 (=> (not res!64401) (not e!87183))))

(assert (=> b!133820 (= res!64401 (and (or (not ((_ is Cons!1712) (toList!869 lt!69095))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69095))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1712) (toList!869 lt!69095)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69095))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133821 () Bool)

(assert (=> b!133821 (= e!87183 (containsKey!176 (t!6167 (toList!869 lt!69095)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40841 (not res!64400)) b!133820))

(assert (= (and b!133820 res!64401) b!133821))

(declare-fun m!158309 () Bool)

(assert (=> b!133821 m!158309))

(assert (=> d!40293 d!40841))

(declare-fun d!40843 () Bool)

(assert (=> d!40843 (= (get!1486 (getValueByKey!172 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!172 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40281 d!40843))

(assert (=> d!40281 d!40525))

(assert (=> b!132776 d!40563))

(declare-fun d!40845 () Bool)

(declare-fun e!87184 () Bool)

(assert (=> d!40845 e!87184))

(declare-fun res!64403 () Bool)

(assert (=> d!40845 (=> (not res!64403) (not e!87184))))

(declare-fun lt!70032 () ListLongMap!1707)

(assert (=> d!40845 (= res!64403 (contains!899 lt!70032 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70034 () List!1716)

(assert (=> d!40845 (= lt!70032 (ListLongMap!1708 lt!70034))))

(declare-fun lt!70035 () Unit!4135)

(declare-fun lt!70033 () Unit!4135)

(assert (=> d!40845 (= lt!70035 lt!70033)))

(assert (=> d!40845 (= (getValueByKey!172 lt!70034 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40845 (= lt!70033 (lemmaContainsTupThenGetReturnValue!87 lt!70034 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40845 (= lt!70034 (insertStrictlySorted!90 (toList!869 (map!1409 newMap!16)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40845 (= (+!175 (map!1409 newMap!16) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70032)))

(declare-fun b!133822 () Bool)

(declare-fun res!64402 () Bool)

(assert (=> b!133822 (=> (not res!64402) (not e!87184))))

(assert (=> b!133822 (= res!64402 (= (getValueByKey!172 (toList!869 lt!70032) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133823 () Bool)

(assert (=> b!133823 (= e!87184 (contains!902 (toList!869 lt!70032) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40845 res!64403) b!133822))

(assert (= (and b!133822 res!64402) b!133823))

(declare-fun m!158311 () Bool)

(assert (=> d!40845 m!158311))

(declare-fun m!158313 () Bool)

(assert (=> d!40845 m!158313))

(declare-fun m!158315 () Bool)

(assert (=> d!40845 m!158315))

(declare-fun m!158317 () Bool)

(assert (=> d!40845 m!158317))

(declare-fun m!158319 () Bool)

(assert (=> b!133822 m!158319))

(declare-fun m!158321 () Bool)

(assert (=> b!133823 m!158321))

(assert (=> b!132776 d!40845))

(assert (=> b!132776 d!40177))

(assert (=> b!132726 d!40353))

(declare-fun d!40847 () Bool)

(declare-fun lt!70036 () Bool)

(assert (=> d!40847 (= lt!70036 (select (content!133 (toList!869 lt!69209)) (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun e!87186 () Bool)

(assert (=> d!40847 (= lt!70036 e!87186)))

(declare-fun res!64404 () Bool)

(assert (=> d!40847 (=> (not res!64404) (not e!87186))))

(assert (=> d!40847 (= res!64404 ((_ is Cons!1712) (toList!869 lt!69209)))))

(assert (=> d!40847 (= (contains!902 (toList!869 lt!69209) (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!70036)))

(declare-fun b!133824 () Bool)

(declare-fun e!87185 () Bool)

(assert (=> b!133824 (= e!87186 e!87185)))

(declare-fun res!64405 () Bool)

(assert (=> b!133824 (=> res!64405 e!87185)))

(assert (=> b!133824 (= res!64405 (= (h!2317 (toList!869 lt!69209)) (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133825 () Bool)

(assert (=> b!133825 (= e!87185 (contains!902 (t!6167 (toList!869 lt!69209)) (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!40847 res!64404) b!133824))

(assert (= (and b!133824 (not res!64405)) b!133825))

(declare-fun m!158323 () Bool)

(assert (=> d!40847 m!158323))

(declare-fun m!158325 () Bool)

(assert (=> d!40847 m!158325))

(declare-fun m!158327 () Bool)

(assert (=> b!133825 m!158327))

(assert (=> b!132633 d!40847))

(assert (=> b!132852 d!40183))

(declare-fun b!133826 () Bool)

(declare-fun e!87188 () SeekEntryResult!275)

(assert (=> b!133826 (= e!87188 (Found!275 (index!3262 lt!69430)))))

(declare-fun b!133827 () Bool)

(declare-fun e!87187 () SeekEntryResult!275)

(assert (=> b!133827 (= e!87187 e!87188)))

(declare-fun lt!70037 () (_ BitVec 64))

(declare-fun c!24831 () Bool)

(assert (=> b!133827 (= c!24831 (= lt!70037 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun lt!70038 () SeekEntryResult!275)

(declare-fun d!40849 () Bool)

(assert (=> d!40849 (and (or ((_ is Undefined!275) lt!70038) (not ((_ is Found!275) lt!70038)) (and (bvsge (index!3261 lt!70038) #b00000000000000000000000000000000) (bvslt (index!3261 lt!70038) (size!2530 (_keys!4614 newMap!16))))) (or ((_ is Undefined!275) lt!70038) ((_ is Found!275) lt!70038) (not ((_ is MissingVacant!275) lt!70038)) (not (= (index!3263 lt!70038) (index!3262 lt!69430))) (and (bvsge (index!3263 lt!70038) #b00000000000000000000000000000000) (bvslt (index!3263 lt!70038) (size!2530 (_keys!4614 newMap!16))))) (or ((_ is Undefined!275) lt!70038) (ite ((_ is Found!275) lt!70038) (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!70038)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (and ((_ is MissingVacant!275) lt!70038) (= (index!3263 lt!70038) (index!3262 lt!69430)) (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3263 lt!70038)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!40849 (= lt!70038 e!87187)))

(declare-fun c!24833 () Bool)

(assert (=> d!40849 (= c!24833 (bvsge (x!15592 lt!69430) #b01111111111111111111111111111110))))

(assert (=> d!40849 (= lt!70037 (select (arr!2261 (_keys!4614 newMap!16)) (index!3262 lt!69430)))))

(assert (=> d!40849 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40849 (= (seekKeyOrZeroReturnVacant!0 (x!15592 lt!69430) (index!3262 lt!69430) (index!3262 lt!69430) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!70038)))

(declare-fun e!87189 () SeekEntryResult!275)

(declare-fun b!133828 () Bool)

(assert (=> b!133828 (= e!87189 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15592 lt!69430) #b00000000000000000000000000000001) (nextIndex!0 (index!3262 lt!69430) (x!15592 lt!69430) (mask!7165 newMap!16)) (index!3262 lt!69430) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!133829 () Bool)

(declare-fun c!24832 () Bool)

(assert (=> b!133829 (= c!24832 (= lt!70037 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133829 (= e!87188 e!87189)))

(declare-fun b!133830 () Bool)

(assert (=> b!133830 (= e!87187 Undefined!275)))

(declare-fun b!133831 () Bool)

(assert (=> b!133831 (= e!87189 (MissingVacant!275 (index!3262 lt!69430)))))

(assert (= (and d!40849 c!24833) b!133830))

(assert (= (and d!40849 (not c!24833)) b!133827))

(assert (= (and b!133827 c!24831) b!133826))

(assert (= (and b!133827 (not c!24831)) b!133829))

(assert (= (and b!133829 c!24832) b!133831))

(assert (= (and b!133829 (not c!24832)) b!133828))

(declare-fun m!158329 () Bool)

(assert (=> d!40849 m!158329))

(declare-fun m!158331 () Bool)

(assert (=> d!40849 m!158331))

(assert (=> d!40849 m!156477))

(assert (=> d!40849 m!156157))

(declare-fun m!158333 () Bool)

(assert (=> b!133828 m!158333))

(assert (=> b!133828 m!158333))

(assert (=> b!133828 m!155869))

(declare-fun m!158335 () Bool)

(assert (=> b!133828 m!158335))

(assert (=> b!132858 d!40849))

(assert (=> b!132926 d!40707))

(declare-fun b!133833 () Bool)

(declare-fun e!87191 () Bool)

(assert (=> b!133833 (= e!87191 tp_is_empty!2877)))

(declare-fun mapNonEmpty!4657 () Bool)

(declare-fun mapRes!4657 () Bool)

(declare-fun tp!11227 () Bool)

(declare-fun e!87190 () Bool)

(assert (=> mapNonEmpty!4657 (= mapRes!4657 (and tp!11227 e!87190))))

(declare-fun mapKey!4657 () (_ BitVec 32))

(declare-fun mapValue!4657 () ValueCell!1095)

(declare-fun mapRest!4657 () (Array (_ BitVec 32) ValueCell!1095))

(assert (=> mapNonEmpty!4657 (= mapRest!4656 (store mapRest!4657 mapKey!4657 mapValue!4657))))

(declare-fun condMapEmpty!4657 () Bool)

(declare-fun mapDefault!4657 () ValueCell!1095)

(assert (=> mapNonEmpty!4656 (= condMapEmpty!4657 (= mapRest!4656 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4657)))))

(assert (=> mapNonEmpty!4656 (= tp!11226 (and e!87191 mapRes!4657))))

(declare-fun mapIsEmpty!4657 () Bool)

(assert (=> mapIsEmpty!4657 mapRes!4657))

(declare-fun b!133832 () Bool)

(assert (=> b!133832 (= e!87190 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4656 condMapEmpty!4657) mapIsEmpty!4657))

(assert (= (and mapNonEmpty!4656 (not condMapEmpty!4657)) mapNonEmpty!4657))

(assert (= (and mapNonEmpty!4657 ((_ is ValueCellFull!1095) mapValue!4657)) b!133832))

(assert (= (and mapNonEmpty!4656 ((_ is ValueCellFull!1095) mapDefault!4657)) b!133833))

(declare-fun m!158337 () Bool)

(assert (=> mapNonEmpty!4657 m!158337))

(declare-fun b!133835 () Bool)

(declare-fun e!87193 () Bool)

(assert (=> b!133835 (= e!87193 tp_is_empty!2877)))

(declare-fun mapNonEmpty!4658 () Bool)

(declare-fun mapRes!4658 () Bool)

(declare-fun tp!11228 () Bool)

(declare-fun e!87192 () Bool)

(assert (=> mapNonEmpty!4658 (= mapRes!4658 (and tp!11228 e!87192))))

(declare-fun mapRest!4658 () (Array (_ BitVec 32) ValueCell!1095))

(declare-fun mapKey!4658 () (_ BitVec 32))

(declare-fun mapValue!4658 () ValueCell!1095)

(assert (=> mapNonEmpty!4658 (= mapRest!4655 (store mapRest!4658 mapKey!4658 mapValue!4658))))

(declare-fun condMapEmpty!4658 () Bool)

(declare-fun mapDefault!4658 () ValueCell!1095)

(assert (=> mapNonEmpty!4655 (= condMapEmpty!4658 (= mapRest!4655 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4658)))))

(assert (=> mapNonEmpty!4655 (= tp!11225 (and e!87193 mapRes!4658))))

(declare-fun mapIsEmpty!4658 () Bool)

(assert (=> mapIsEmpty!4658 mapRes!4658))

(declare-fun b!133834 () Bool)

(assert (=> b!133834 (= e!87192 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4655 condMapEmpty!4658) mapIsEmpty!4658))

(assert (= (and mapNonEmpty!4655 (not condMapEmpty!4658)) mapNonEmpty!4658))

(assert (= (and mapNonEmpty!4658 ((_ is ValueCellFull!1095) mapValue!4658)) b!133834))

(assert (= (and mapNonEmpty!4655 ((_ is ValueCellFull!1095) mapDefault!4658)) b!133835))

(declare-fun m!158339 () Bool)

(assert (=> mapNonEmpty!4658 m!158339))

(declare-fun b_lambda!5949 () Bool)

(assert (= b_lambda!5921 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!5949)))

(declare-fun b_lambda!5951 () Bool)

(assert (= b_lambda!5925 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!5951)))

(declare-fun b_lambda!5953 () Bool)

(assert (= b_lambda!5923 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!5953)))

(declare-fun b_lambda!5955 () Bool)

(assert (= b_lambda!5931 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!5955)))

(declare-fun b_lambda!5957 () Bool)

(assert (= b_lambda!5927 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!5957)))

(declare-fun b_lambda!5959 () Bool)

(assert (= b_lambda!5947 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!5959)))

(declare-fun b_lambda!5961 () Bool)

(assert (= b_lambda!5941 (or (and b!132300 b_free!2921) (and b!132303 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))))) b_lambda!5961)))

(declare-fun b_lambda!5963 () Bool)

(assert (= b_lambda!5935 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!5963)))

(declare-fun b_lambda!5965 () Bool)

(assert (= b_lambda!5929 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!5965)))

(declare-fun b_lambda!5967 () Bool)

(assert (= b_lambda!5919 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!5967)))

(declare-fun b_lambda!5969 () Bool)

(assert (= b_lambda!5939 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!5969)))

(declare-fun b_lambda!5971 () Bool)

(assert (= b_lambda!5933 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!5971)))

(declare-fun b_lambda!5973 () Bool)

(assert (= b_lambda!5943 (or (and b!132300 b_free!2921) (and b!132303 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))))) b_lambda!5973)))

(declare-fun b_lambda!5975 () Bool)

(assert (= b_lambda!5937 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!5975)))

(check-sat (not d!40477) (not b!133025) (not b!133303) (not d!40451) (not b!133230) (not b!133802) (not d!40677) (not bm!14756) (not b!133719) (not b!133169) (not b!133068) (not b!133294) (not bm!14714) (not b!133246) (not d!40595) (not bm!14731) (not b!133381) (not b!133563) (not b!133194) (not b!133300) (not b!133472) (not b!133818) (not b!133115) (not b_lambda!5897) (not d!40491) (not b!133292) (not b!133109) (not b!133196) (not b!133122) (not bm!14768) (not b!133314) (not b!133236) (not d!40625) (not b!133158) (not d!40413) (not b!132980) (not bm!14755) (not d!40569) (not b!133458) (not bm!14679) (not d!40577) (not d!40359) (not b!132986) (not d!40799) (not d!40373) (not d!40349) (not mapNonEmpty!4658) (not b!133755) (not b!133636) (not bm!14712) (not b!133379) (not b!133461) (not b!133556) (not b!133597) (not d!40791) (not b!133528) (not b_lambda!5951) (not b!133167) (not d!40801) (not b!133062) (not d!40797) (not d!40589) (not d!40355) (not b!132996) (not bm!14684) (not b!133801) (not b!132994) (not d!40335) (not b!133681) (not b!133544) (not d!40521) (not d!40439) (not b!133583) (not b!133694) (not d!40715) (not b!133693) (not bm!14719) (not b!133590) (not bm!14710) (not b!133467) (not d!40529) (not d!40549) (not b!133459) (not d!40475) (not b!133608) (not bm!14686) (not b!133767) (not b!133074) (not b!133346) (not d!40777) (not b_lambda!5949) (not b!133330) (not d!40437) (not b!133297) (not b!133750) (not b!133701) (not b!133748) (not d!40725) (not b_next!2923) (not b!133495) (not b!133791) (not b!133800) (not d!40363) (not b!133449) (not b!133593) (not b!133024) (not d!40849) (not b!133274) (not b!133582) (not d!40447) (not b!133320) (not d!40449) (not d!40483) (not b!133155) (not b!133793) (not b!133692) (not bm!14702) (not b!133395) (not b!133443) (not b!133611) (not b!133255) (not b_lambda!5965) (not b!133594) (not d!40427) (not b!133007) (not b!133251) (not d!40415) (not b!133668) (not d!40417) (not bm!14697) (not b!133591) (not b!133673) (not d!40621) (not b!133518) (not d!40579) (not b!133507) (not b!133515) (not b!133388) (not b!133737) (not b!133368) (not d!40607) (not b!133119) (not d!40745) (not b!133656) (not d!40495) (not b!133774) (not d!40675) (not b!133733) (not d!40765) (not b!133561) (not b!133781) (not d!40697) (not b!133704) (not b!133823) (not b!133345) (not d!40787) (not b!133713) (not b!133553) (not b!133530) (not d!40391) (not b!133763) (not b!133828) (not b!133175) (not b!133139) (not d!40567) (not bm!14703) (not d!40367) (not d!40395) (not b!133020) (not d!40601) (not d!40639) (not d!40789) (not b!133265) (not d!40527) (not d!40531) (not b!133190) (not d!40837) (not d!40731) (not b!133660) (not bm!14705) (not d!40783) (not b!133370) (not b!133156) (not b!133729) (not d!40829) (not d!40679) (not b!133710) (not b!133076) (not b!133821) (not b!133735) (not b!133393) (not bm!14724) (not b!133148) (not b!133033) (not b!133159) (not d!40459) (not d!40511) (not b!133501) (not b!133577) (not b!133604) (not b!133348) (not d!40357) (not b!133378) (not b!133574) (not d!40381) (not d!40539) (not b!133145) (not b!133164) (not b!133284) (not b!133726) (not d!40441) (not b!133039) (not b!133716) (not d!40557) (not b!133471) (not bm!14765) (not b!133405) (not d!40817) (not b!133160) (not b!133257) (not bm!14671) (not b!133184) (not d!40465) (not b!133684) (not d!40581) (not b!133815) (not bm!14767) (not bm!14749) (not b!133703) (not b!133732) (not d!40555) (not b!133035) (not bm!14762) (not bm!14738) (not b!133365) (not d!40793) (not d!40409) (not b!133249) (not b!133032) (not d!40453) (not d!40779) (not b!133613) (not b!133150) (not b!133469) (not d!40347) (not d!40523) (not b!133776) (not d!40419) (not bm!14708) (not b!133252) (not d!40505) (not d!40547) (not b!133313) (not b!133002) (not d!40663) (not d!40423) (not bm!14726) (not d!40795) (not b!133788) (not bm!14694) (not b!133410) (not b_lambda!5909) (not b!133237) (not d!40629) (not d!40785) (not b_lambda!5953) (not d!40455) (not d!40489) (not bm!14711) (not b!133396) (not b!133481) (not b_lambda!5955) (not d!40513) (not b!133016) (not b!133107) (not d!40667) (not b_lambda!5975) (not b!133086) (not d!40519) (not b_lambda!5963) (not b!133455) (not d!40385) (not b!133629) (not d!40517) (not d!40681) (not b!133233) (not d!40737) (not b!133322) (not bm!14750) (not d!40457) (not b!133516) (not b!133044) (not d!40721) (not b!133768) (not b!133680) (not b!133390) b_and!8291 (not b!133295) (not b!133816) (not b!133559) (not b!133756) (not bm!14761) (not d!40351) (not b!133760) (not b!133470) tp_is_empty!2877 (not d!40503) (not b!133736) (not b!133580) (not b!133329) (not d!40429) (not d!40759) (not b!133141) (not b!133749) (not d!40583) (not bm!14736) (not b!133242) (not bm!14682) (not bm!14713) (not b!133328) (not d!40631) (not d!40641) (not b!133457) (not b!133277) (not b!133795) (not b!133124) (not b!133717) (not b!133513) (not b!133450) (not bm!14741) (not b!133121) (not b!133521) (not b!133142) (not d!40487) (not d!40361) (not b!133174) (not b!133622) (not b!133043) (not b!133178) (not b!132983) (not d!40571) (not d!40537) (not b!133599) (not b!132993) (not b!133690) (not d!40727) (not d!40729) (not b!133227) (not b!133258) (not d!40809) (not d!40743) (not b!133387) (not d!40515) (not b!133664) (not b!133172) (not d!40331) (not d!40711) (not b!133008) (not b!133407) (not b!133304) (not d!40563) (not b!133646) (not bm!14747) (not d!40509) (not b!133268) (not d!40819) (not d!40823) (not b!133675) (not bm!14696) (not d!40619) (not b!133564) (not b!133283) (not bm!14740) (not b!133667) (not b!133234) (not d!40815) (not d!40345) (not b!133772) (not bm!14700) (not b!133006) (not d!40499) (not b_lambda!5971) (not b!133367) (not b!133757) (not b!133397) (not b!133540) (not b!133231) (not d!40333) (not b!133030) (not d!40719) (not b!133779) (not bm!14692) (not b!133666) (not b!133018) b_and!8293 (not b!133623) (not b!133586) (not d!40701) (not b!133198) (not b!133707) (not b!133655) (not b!133537) (not b!133281) (not b_lambda!5893) (not b!133152) (not b!133133) (not d!40835) (not d!40657) (not d!40435) (not b!133804) (not b!133439) (not d!40605) (not b!133356) (not bm!14739) (not b!133271) (not b!133640) (not d!40411) (not b!133649) (not bm!14717) (not b!133661) (not b!133669) (not b!133151) (not bm!14748) (not bm!14760) (not d!40507) (not b!133239) (not d!40763) (not bm!14693) (not b!133005) (not b!133131) (not b!133399) (not d!40473) (not b!133489) (not d!40341) (not bm!14733) (not b!132982) (not b!133548) (not d!40635) (not b!133149) (not b!133810) (not b!133531) (not b!132977) (not d!40551) (not d!40425) (not b!133127) (not bm!14744) (not d!40599) (not b!133587) (not b!133072) (not bm!14729) (not b!133009) (not d!40493) (not b!133245) (not d!40655) (not d!40501) (not b!133620) (not d!40481) (not b!133228) (not d!40771) (not b!133787) (not d!40573) (not b!133267) (not bm!14704) (not b_lambda!5961) (not d!40445) (not d!40805) (not b!133176) (not b!133605) (not bm!14772) (not d!40717) (not b!133243) (not d!40393) (not b!133130) (not b!133359) (not b!133814) (not b!133015) (not b!133739) (not b!133734) (not b!133028) (not b!133573) (not b!133041) (not d!40327) (not d!40693) (not b!133822) (not b!133600) (not b!133003) (not b!133276) (not b!133235) (not b!133224) (not d!40593) (not b!133325) (not b!133441) (not b!133487) (not b!133349) (not b!133682) (not b!133550) (not d!40561) (not b!133479) (not b!133720) (not d!40609) (not b!133825) (not b!133499) (not b!133631) (not b!133311) (not b!133752) (not b!133498) (not d!40485) (not d!40623) (not b!133336) (not b!133022) (not d!40845) (not b!133358) (not b!133552) (not bm!14732) (not d!40497) (not d!40761) (not b!133129) (not b!133764) (not b!133765) (not mapNonEmpty!4657) (not b_lambda!5959) (not b!133534) (not d!40733) (not b!133143) (not b!133452) (not d!40649) (not b_lambda!5917) (not d!40431) (not b!133490) (not d!40811) (not b!133595) (not b!133247) (not d!40383) (not d!40433) (not b!133712) (not b!133497) (not b!133517) (not b!133256) (not b!133632) (not b!133323) (not b_lambda!5969) (not b!133085) (not b!133539) (not b_lambda!5913) (not b!133438) (not b!133723) (not b!133718) (not b!133602) (not b!132991) (not b_lambda!5915) (not b!133798) (not b_lambda!5957) (not b!133031) (not b!133670) (not b!133520) (not d!40339) (not b!133812) (not b!133376) (not b_lambda!5911) (not b!133079) (not b!133301) (not b!133147) (not b_lambda!5973) (not b!133511) (not d!40803) (not b!133678) (not b!133165) (not b!133672) (not b!133643) (not b!133019) (not b!133473) (not b_lambda!5945) (not b_next!2921) (not d!40405) (not b!133486) (not b!133117) (not bm!14753) (not b!133317) (not d!40661) (not d!40587) (not b!133037) (not b!133384) (not d!40781) (not bm!14721) (not b!133626) (not b!133492) (not b_lambda!5967) (not d!40659) (not d!40463) (not b!133571) (not b!133775) (not d!40637) (not b!133758) (not d!40739) (not d!40467) (not b!133362) (not d!40543) (not b!132988) (not bm!14727) (not b!133162) (not bm!14695) (not b!132990) (not d!40479) (not b!133287) (not d!40847) (not bm!14770) (not b!133229) (not b!133047) (not bm!14746) (not d!40833) (not d!40443) (not b!133225) (not d!40671) (not b!133759) (not bm!14758) (not b!133475))
(check-sat b_and!8291 b_and!8293 (not b_next!2921) (not b_next!2923))
(get-model)

(declare-fun d!40851 () Bool)

(assert (=> d!40851 (= (inRange!0 (ite c!24660 (index!3260 lt!69632) (index!3263 lt!69632)) (mask!7165 newMap!16)) (and (bvsge (ite c!24660 (index!3260 lt!69632) (index!3263 lt!69632)) #b00000000000000000000000000000000) (bvslt (ite c!24660 (index!3260 lt!69632) (index!3263 lt!69632)) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14692 d!40851))

(declare-fun d!40853 () Bool)

(declare-fun res!64406 () Bool)

(declare-fun e!87194 () Bool)

(assert (=> d!40853 (=> res!64406 e!87194)))

(assert (=> d!40853 (= res!64406 (and ((_ is Cons!1712) (toList!869 lt!69385)) (= (_1!1324 (h!2317 (toList!869 lt!69385))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!40853 (= (containsKey!176 (toList!869 lt!69385) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87194)))

(declare-fun b!133836 () Bool)

(declare-fun e!87195 () Bool)

(assert (=> b!133836 (= e!87194 e!87195)))

(declare-fun res!64407 () Bool)

(assert (=> b!133836 (=> (not res!64407) (not e!87195))))

(assert (=> b!133836 (= res!64407 (and (or (not ((_ is Cons!1712) (toList!869 lt!69385))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69385))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Cons!1712) (toList!869 lt!69385)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69385))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!133837 () Bool)

(assert (=> b!133837 (= e!87195 (containsKey!176 (t!6167 (toList!869 lt!69385)) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!40853 (not res!64406)) b!133836))

(assert (= (and b!133836 res!64407) b!133837))

(declare-fun m!158341 () Bool)

(assert (=> b!133837 m!158341))

(assert (=> d!40601 d!40853))

(declare-fun d!40855 () Bool)

(assert (=> d!40855 (= (get!1486 (getValueByKey!172 (toList!869 lt!69464) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!172 (toList!869 lt!69464) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40677 d!40855))

(declare-fun b!133840 () Bool)

(declare-fun e!87197 () Option!178)

(assert (=> b!133840 (= e!87197 (getValueByKey!172 (t!6167 (toList!869 lt!69464)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133841 () Bool)

(assert (=> b!133841 (= e!87197 None!176)))

(declare-fun d!40857 () Bool)

(declare-fun c!24834 () Bool)

(assert (=> d!40857 (= c!24834 (and ((_ is Cons!1712) (toList!869 lt!69464)) (= (_1!1324 (h!2317 (toList!869 lt!69464))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87196 () Option!178)

(assert (=> d!40857 (= (getValueByKey!172 (toList!869 lt!69464) #b0000000000000000000000000000000000000000000000000000000000000000) e!87196)))

(declare-fun b!133838 () Bool)

(assert (=> b!133838 (= e!87196 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69464)))))))

(declare-fun b!133839 () Bool)

(assert (=> b!133839 (= e!87196 e!87197)))

(declare-fun c!24835 () Bool)

(assert (=> b!133839 (= c!24835 (and ((_ is Cons!1712) (toList!869 lt!69464)) (not (= (_1!1324 (h!2317 (toList!869 lt!69464))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!40857 c!24834) b!133838))

(assert (= (and d!40857 (not c!24834)) b!133839))

(assert (= (and b!133839 c!24835) b!133840))

(assert (= (and b!133839 (not c!24835)) b!133841))

(declare-fun m!158343 () Bool)

(assert (=> b!133840 m!158343))

(assert (=> d!40677 d!40857))

(declare-fun d!40859 () Bool)

(assert (=> d!40859 (= (get!1486 (getValueByKey!172 (toList!869 lt!69408) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3203 (getValueByKey!172 (toList!869 lt!69408) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!40335 d!40859))

(declare-fun e!87199 () Option!178)

(declare-fun b!133844 () Bool)

(assert (=> b!133844 (= e!87199 (getValueByKey!172 (t!6167 (toList!869 lt!69408)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!133845 () Bool)

(assert (=> b!133845 (= e!87199 None!176)))

(declare-fun c!24836 () Bool)

(declare-fun d!40861 () Bool)

(assert (=> d!40861 (= c!24836 (and ((_ is Cons!1712) (toList!869 lt!69408)) (= (_1!1324 (h!2317 (toList!869 lt!69408))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!87198 () Option!178)

(assert (=> d!40861 (= (getValueByKey!172 (toList!869 lt!69408) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!87198)))

(declare-fun b!133842 () Bool)

(assert (=> b!133842 (= e!87198 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69408)))))))

(declare-fun b!133843 () Bool)

(assert (=> b!133843 (= e!87198 e!87199)))

(declare-fun c!24837 () Bool)

(assert (=> b!133843 (= c!24837 (and ((_ is Cons!1712) (toList!869 lt!69408)) (not (= (_1!1324 (h!2317 (toList!869 lt!69408))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!40861 c!24836) b!133842))

(assert (= (and d!40861 (not c!24836)) b!133843))

(assert (= (and b!133843 c!24837) b!133844))

(assert (= (and b!133843 (not c!24837)) b!133845))

(assert (=> b!133844 m!155949))

(declare-fun m!158345 () Bool)

(assert (=> b!133844 m!158345))

(assert (=> d!40335 d!40861))

(assert (=> b!133701 d!40353))

(declare-fun d!40863 () Bool)

(assert (=> d!40863 (= (validKeyInArray!0 (select (arr!2261 lt!69334) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))) (and (not (= (select (arr!2261 lt!69334) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2261 lt!69334) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133330 d!40863))

(declare-fun d!40865 () Bool)

(assert (=> d!40865 (= ($colon$colon!92 e!86790 (ite c!24652 (h!2317 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))) (tuple2!2627 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))) (Cons!1712 (ite c!24652 (h!2317 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))) (tuple2!2627 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) e!86790))))

(assert (=> bm!14686 d!40865))

(declare-fun b!133846 () Bool)

(declare-fun e!87201 () Bool)

(declare-fun e!87204 () Bool)

(assert (=> b!133846 (= e!87201 e!87204)))

(declare-fun c!24838 () Bool)

(declare-fun e!87206 () Bool)

(assert (=> b!133846 (= c!24838 e!87206)))

(declare-fun res!64411 () Bool)

(assert (=> b!133846 (=> (not res!64411) (not e!87206))))

(assert (=> b!133846 (= res!64411 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133847 () Bool)

(declare-fun e!87205 () Bool)

(declare-fun lt!70044 () ListLongMap!1707)

(assert (=> b!133847 (= e!87205 (isEmpty!410 lt!70044))))

(declare-fun b!133848 () Bool)

(declare-fun lt!70040 () Unit!4135)

(declare-fun lt!70041 () Unit!4135)

(assert (=> b!133848 (= lt!70040 lt!70041)))

(declare-fun lt!70043 () ListLongMap!1707)

(declare-fun lt!70045 () (_ BitVec 64))

(declare-fun lt!70039 () V!3483)

(declare-fun lt!70042 () (_ BitVec 64))

(assert (=> b!133848 (not (contains!899 (+!175 lt!70043 (tuple2!2627 lt!70042 lt!70039)) lt!70045))))

(assert (=> b!133848 (= lt!70041 (addStillNotContains!61 lt!70043 lt!70042 lt!70039 lt!70045))))

(assert (=> b!133848 (= lt!70045 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133848 (= lt!70039 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133848 (= lt!70042 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!14776 () ListLongMap!1707)

(assert (=> b!133848 (= lt!70043 call!14776)))

(declare-fun e!87203 () ListLongMap!1707)

(assert (=> b!133848 (= e!87203 (+!175 call!14776 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133849 () Bool)

(assert (=> b!133849 (= e!87204 e!87205)))

(declare-fun c!24841 () Bool)

(assert (=> b!133849 (= c!24841 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133850 () Bool)

(assert (=> b!133850 (= e!87206 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!133850 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!133851 () Bool)

(declare-fun res!64409 () Bool)

(assert (=> b!133851 (=> (not res!64409) (not e!87201))))

(assert (=> b!133851 (= res!64409 (not (contains!899 lt!70044 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133852 () Bool)

(assert (=> b!133852 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> b!133852 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2531 (_values!2848 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun e!87200 () Bool)

(assert (=> b!133852 (= e!87200 (= (apply!116 lt!70044 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!40867 () Bool)

(assert (=> d!40867 e!87201))

(declare-fun res!64410 () Bool)

(assert (=> d!40867 (=> (not res!64410) (not e!87201))))

(assert (=> d!40867 (= res!64410 (not (contains!899 lt!70044 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87202 () ListLongMap!1707)

(assert (=> d!40867 (= lt!70044 e!87202)))

(declare-fun c!24839 () Bool)

(assert (=> d!40867 (= c!24839 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!40867 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!40867 (= (getCurrentListMapNoExtraKeys!141 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992)))) lt!70044)))

(declare-fun b!133853 () Bool)

(assert (=> b!133853 (= e!87203 call!14776)))

(declare-fun bm!14773 () Bool)

(assert (=> bm!14773 (= call!14776 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!133854 () Bool)

(assert (=> b!133854 (= e!87204 e!87200)))

(assert (=> b!133854 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun res!64408 () Bool)

(assert (=> b!133854 (= res!64408 (contains!899 lt!70044 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!133854 (=> (not res!64408) (not e!87200))))

(declare-fun b!133855 () Bool)

(assert (=> b!133855 (= e!87202 (ListLongMap!1708 Nil!1713))))

(declare-fun b!133856 () Bool)

(assert (=> b!133856 (= e!87205 (= lt!70044 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (_values!2848 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992))) (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) (zeroValue!2720 (v!3199 (underlying!455 thiss!992))) (minValue!2720 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133857 () Bool)

(assert (=> b!133857 (= e!87202 e!87203)))

(declare-fun c!24840 () Bool)

(assert (=> b!133857 (= c!24840 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!40867 c!24839) b!133855))

(assert (= (and d!40867 (not c!24839)) b!133857))

(assert (= (and b!133857 c!24840) b!133848))

(assert (= (and b!133857 (not c!24840)) b!133853))

(assert (= (or b!133848 b!133853) bm!14773))

(assert (= (and d!40867 res!64410) b!133851))

(assert (= (and b!133851 res!64409) b!133846))

(assert (= (and b!133846 res!64411) b!133850))

(assert (= (and b!133846 c!24838) b!133854))

(assert (= (and b!133846 (not c!24838)) b!133849))

(assert (= (and b!133854 res!64408) b!133852))

(assert (= (and b!133849 c!24841) b!133856))

(assert (= (and b!133849 (not c!24841)) b!133847))

(declare-fun b_lambda!5977 () Bool)

(assert (=> (not b_lambda!5977) (not b!133848)))

(assert (=> b!133848 t!6164))

(declare-fun b_and!8295 () Bool)

(assert (= b_and!8291 (and (=> t!6164 result!3983) b_and!8295)))

(assert (=> b!133848 t!6166))

(declare-fun b_and!8297 () Bool)

(assert (= b_and!8293 (and (=> t!6166 result!3987) b_and!8297)))

(declare-fun b_lambda!5979 () Bool)

(assert (=> (not b_lambda!5979) (not b!133852)))

(assert (=> b!133852 t!6164))

(declare-fun b_and!8299 () Bool)

(assert (= b_and!8295 (and (=> t!6164 result!3983) b_and!8299)))

(assert (=> b!133852 t!6166))

(declare-fun b_and!8301 () Bool)

(assert (= b_and!8297 (and (=> t!6166 result!3987) b_and!8301)))

(declare-fun m!158347 () Bool)

(assert (=> b!133847 m!158347))

(declare-fun m!158349 () Bool)

(assert (=> d!40867 m!158349))

(assert (=> d!40867 m!155867))

(declare-fun m!158351 () Bool)

(assert (=> b!133851 m!158351))

(declare-fun m!158353 () Bool)

(assert (=> b!133857 m!158353))

(assert (=> b!133857 m!158353))

(declare-fun m!158355 () Bool)

(assert (=> b!133857 m!158355))

(assert (=> b!133850 m!158353))

(assert (=> b!133850 m!158353))

(assert (=> b!133850 m!158355))

(assert (=> b!133852 m!155893))

(declare-fun m!158357 () Bool)

(assert (=> b!133852 m!158357))

(assert (=> b!133852 m!155893))

(declare-fun m!158359 () Bool)

(assert (=> b!133852 m!158359))

(assert (=> b!133852 m!158357))

(assert (=> b!133852 m!158353))

(declare-fun m!158361 () Bool)

(assert (=> b!133852 m!158361))

(assert (=> b!133852 m!158353))

(assert (=> b!133854 m!158353))

(assert (=> b!133854 m!158353))

(declare-fun m!158363 () Bool)

(assert (=> b!133854 m!158363))

(declare-fun m!158365 () Bool)

(assert (=> b!133856 m!158365))

(assert (=> bm!14773 m!158365))

(assert (=> b!133848 m!155893))

(assert (=> b!133848 m!158357))

(assert (=> b!133848 m!155893))

(assert (=> b!133848 m!158359))

(declare-fun m!158367 () Bool)

(assert (=> b!133848 m!158367))

(declare-fun m!158369 () Bool)

(assert (=> b!133848 m!158369))

(assert (=> b!133848 m!158357))

(declare-fun m!158371 () Bool)

(assert (=> b!133848 m!158371))

(assert (=> b!133848 m!158353))

(assert (=> b!133848 m!158369))

(declare-fun m!158373 () Bool)

(assert (=> b!133848 m!158373))

(assert (=> b!133599 d!40867))

(declare-fun e!87208 () Option!178)

(declare-fun b!133860 () Bool)

(assert (=> b!133860 (= e!87208 (getValueByKey!172 (t!6167 (t!6167 lt!69415)) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!133861 () Bool)

(assert (=> b!133861 (= e!87208 None!176)))

(declare-fun c!24842 () Bool)

(declare-fun d!40869 () Bool)

(assert (=> d!40869 (= c!24842 (and ((_ is Cons!1712) (t!6167 lt!69415)) (= (_1!1324 (h!2317 (t!6167 lt!69415))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87207 () Option!178)

(assert (=> d!40869 (= (getValueByKey!172 (t!6167 lt!69415) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87207)))

(declare-fun b!133858 () Bool)

(assert (=> b!133858 (= e!87207 (Some!177 (_2!1324 (h!2317 (t!6167 lt!69415)))))))

(declare-fun b!133859 () Bool)

(assert (=> b!133859 (= e!87207 e!87208)))

(declare-fun c!24843 () Bool)

(assert (=> b!133859 (= c!24843 (and ((_ is Cons!1712) (t!6167 lt!69415)) (not (= (_1!1324 (h!2317 (t!6167 lt!69415))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!40869 c!24842) b!133858))

(assert (= (and d!40869 (not c!24842)) b!133859))

(assert (= (and b!133859 c!24843) b!133860))

(assert (= (and b!133859 (not c!24843)) b!133861))

(declare-fun m!158375 () Bool)

(assert (=> b!133860 m!158375))

(assert (=> b!133678 d!40869))

(declare-fun d!40871 () Bool)

(declare-fun res!64412 () Bool)

(declare-fun e!87209 () Bool)

(assert (=> d!40871 (=> res!64412 e!87209)))

(assert (=> d!40871 (= res!64412 (and ((_ is Cons!1712) (toList!869 lt!69500)) (= (_1!1324 (h!2317 (toList!869 lt!69500))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40871 (= (containsKey!176 (toList!869 lt!69500) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87209)))

(declare-fun b!133862 () Bool)

(declare-fun e!87210 () Bool)

(assert (=> b!133862 (= e!87209 e!87210)))

(declare-fun res!64413 () Bool)

(assert (=> b!133862 (=> (not res!64413) (not e!87210))))

(assert (=> b!133862 (= res!64413 (and (or (not ((_ is Cons!1712) (toList!869 lt!69500))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69500))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1712) (toList!869 lt!69500)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69500))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133863 () Bool)

(assert (=> b!133863 (= e!87210 (containsKey!176 (t!6167 (toList!869 lt!69500)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!40871 (not res!64412)) b!133862))

(assert (= (and b!133862 res!64413) b!133863))

(declare-fun m!158377 () Bool)

(assert (=> b!133863 m!158377))

(assert (=> d!40405 d!40871))

(declare-fun b!133864 () Bool)

(declare-fun e!87212 () SeekEntryResult!275)

(assert (=> b!133864 (= e!87212 (Found!275 (nextIndex!0 (index!3262 lt!69430) (x!15592 lt!69430) (mask!7165 newMap!16))))))

(declare-fun b!133865 () Bool)

(declare-fun e!87211 () SeekEntryResult!275)

(assert (=> b!133865 (= e!87211 e!87212)))

(declare-fun c!24844 () Bool)

(declare-fun lt!70046 () (_ BitVec 64))

(assert (=> b!133865 (= c!24844 (= lt!70046 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun lt!70047 () SeekEntryResult!275)

(declare-fun d!40873 () Bool)

(assert (=> d!40873 (and (or ((_ is Undefined!275) lt!70047) (not ((_ is Found!275) lt!70047)) (and (bvsge (index!3261 lt!70047) #b00000000000000000000000000000000) (bvslt (index!3261 lt!70047) (size!2530 (_keys!4614 newMap!16))))) (or ((_ is Undefined!275) lt!70047) ((_ is Found!275) lt!70047) (not ((_ is MissingVacant!275) lt!70047)) (not (= (index!3263 lt!70047) (index!3262 lt!69430))) (and (bvsge (index!3263 lt!70047) #b00000000000000000000000000000000) (bvslt (index!3263 lt!70047) (size!2530 (_keys!4614 newMap!16))))) (or ((_ is Undefined!275) lt!70047) (ite ((_ is Found!275) lt!70047) (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!70047)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (and ((_ is MissingVacant!275) lt!70047) (= (index!3263 lt!70047) (index!3262 lt!69430)) (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3263 lt!70047)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!40873 (= lt!70047 e!87211)))

(declare-fun c!24846 () Bool)

(assert (=> d!40873 (= c!24846 (bvsge (bvadd (x!15592 lt!69430) #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(assert (=> d!40873 (= lt!70046 (select (arr!2261 (_keys!4614 newMap!16)) (nextIndex!0 (index!3262 lt!69430) (x!15592 lt!69430) (mask!7165 newMap!16))))))

(assert (=> d!40873 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40873 (= (seekKeyOrZeroReturnVacant!0 (bvadd (x!15592 lt!69430) #b00000000000000000000000000000001) (nextIndex!0 (index!3262 lt!69430) (x!15592 lt!69430) (mask!7165 newMap!16)) (index!3262 lt!69430) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!70047)))

(declare-fun b!133866 () Bool)

(declare-fun e!87213 () SeekEntryResult!275)

(assert (=> b!133866 (= e!87213 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15592 lt!69430) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (index!3262 lt!69430) (x!15592 lt!69430) (mask!7165 newMap!16)) (bvadd (x!15592 lt!69430) #b00000000000000000000000000000001) (mask!7165 newMap!16)) (index!3262 lt!69430) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!133867 () Bool)

(declare-fun c!24845 () Bool)

(assert (=> b!133867 (= c!24845 (= lt!70046 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133867 (= e!87212 e!87213)))

(declare-fun b!133868 () Bool)

(assert (=> b!133868 (= e!87211 Undefined!275)))

(declare-fun b!133869 () Bool)

(assert (=> b!133869 (= e!87213 (MissingVacant!275 (index!3262 lt!69430)))))

(assert (= (and d!40873 c!24846) b!133868))

(assert (= (and d!40873 (not c!24846)) b!133865))

(assert (= (and b!133865 c!24844) b!133864))

(assert (= (and b!133865 (not c!24844)) b!133867))

(assert (= (and b!133867 c!24845) b!133869))

(assert (= (and b!133867 (not c!24845)) b!133866))

(declare-fun m!158379 () Bool)

(assert (=> d!40873 m!158379))

(declare-fun m!158381 () Bool)

(assert (=> d!40873 m!158381))

(assert (=> d!40873 m!158333))

(declare-fun m!158383 () Bool)

(assert (=> d!40873 m!158383))

(assert (=> d!40873 m!156157))

(assert (=> b!133866 m!158333))

(declare-fun m!158385 () Bool)

(assert (=> b!133866 m!158385))

(assert (=> b!133866 m!158385))

(assert (=> b!133866 m!155869))

(declare-fun m!158387 () Bool)

(assert (=> b!133866 m!158387))

(assert (=> b!133828 d!40873))

(declare-fun d!40875 () Bool)

(declare-fun lt!70050 () (_ BitVec 32))

(assert (=> d!40875 (and (bvsge lt!70050 #b00000000000000000000000000000000) (bvslt lt!70050 (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001)))))

(declare-fun choose!52 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!40875 (= lt!70050 (choose!52 (index!3262 lt!69430) (x!15592 lt!69430) (mask!7165 newMap!16)))))

(assert (=> d!40875 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40875 (= (nextIndex!0 (index!3262 lt!69430) (x!15592 lt!69430) (mask!7165 newMap!16)) lt!70050)))

(declare-fun bs!5545 () Bool)

(assert (= bs!5545 d!40875))

(declare-fun m!158389 () Bool)

(assert (=> bs!5545 m!158389))

(assert (=> bs!5545 m!156157))

(assert (=> b!133828 d!40875))

(declare-fun d!40877 () Bool)

(declare-fun e!87214 () Bool)

(assert (=> d!40877 e!87214))

(declare-fun res!64415 () Bool)

(assert (=> d!40877 (=> (not res!64415) (not e!87214))))

(declare-fun lt!70051 () ListLongMap!1707)

(assert (=> d!40877 (= res!64415 (contains!899 lt!70051 (_1!1324 (ite (or c!24691 c!24689) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!70053 () List!1716)

(assert (=> d!40877 (= lt!70051 (ListLongMap!1708 lt!70053))))

(declare-fun lt!70054 () Unit!4135)

(declare-fun lt!70052 () Unit!4135)

(assert (=> d!40877 (= lt!70054 lt!70052)))

(assert (=> d!40877 (= (getValueByKey!172 lt!70053 (_1!1324 (ite (or c!24691 c!24689) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24691 c!24689) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40877 (= lt!70052 (lemmaContainsTupThenGetReturnValue!87 lt!70053 (_1!1324 (ite (or c!24691 c!24689) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24691 c!24689) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40877 (= lt!70053 (insertStrictlySorted!90 (toList!869 (ite c!24691 call!14717 (ite c!24689 call!14720 call!14721))) (_1!1324 (ite (or c!24691 c!24689) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24691 c!24689) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!40877 (= (+!175 (ite c!24691 call!14717 (ite c!24689 call!14720 call!14721)) (ite (or c!24691 c!24689) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70051)))

(declare-fun b!133870 () Bool)

(declare-fun res!64414 () Bool)

(assert (=> b!133870 (=> (not res!64414) (not e!87214))))

(assert (=> b!133870 (= res!64414 (= (getValueByKey!172 (toList!869 lt!70051) (_1!1324 (ite (or c!24691 c!24689) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24691 c!24689) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!133871 () Bool)

(assert (=> b!133871 (= e!87214 (contains!902 (toList!869 lt!70051) (ite (or c!24691 c!24689) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!40877 res!64415) b!133870))

(assert (= (and b!133870 res!64414) b!133871))

(declare-fun m!158391 () Bool)

(assert (=> d!40877 m!158391))

(declare-fun m!158393 () Bool)

(assert (=> d!40877 m!158393))

(declare-fun m!158395 () Bool)

(assert (=> d!40877 m!158395))

(declare-fun m!158397 () Bool)

(assert (=> d!40877 m!158397))

(declare-fun m!158399 () Bool)

(assert (=> b!133870 m!158399))

(declare-fun m!158401 () Bool)

(assert (=> b!133871 m!158401))

(assert (=> bm!14714 d!40877))

(declare-fun d!40879 () Bool)

(declare-fun lt!70055 () Bool)

(assert (=> d!40879 (= lt!70055 (select (content!133 (toList!869 lt!69670)) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87216 () Bool)

(assert (=> d!40879 (= lt!70055 e!87216)))

(declare-fun res!64416 () Bool)

(assert (=> d!40879 (=> (not res!64416) (not e!87216))))

(assert (=> d!40879 (= res!64416 ((_ is Cons!1712) (toList!869 lt!69670)))))

(assert (=> d!40879 (= (contains!902 (toList!869 lt!69670) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70055)))

(declare-fun b!133872 () Bool)

(declare-fun e!87215 () Bool)

(assert (=> b!133872 (= e!87216 e!87215)))

(declare-fun res!64417 () Bool)

(assert (=> b!133872 (=> res!64417 e!87215)))

(assert (=> b!133872 (= res!64417 (= (h!2317 (toList!869 lt!69670)) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133873 () Bool)

(assert (=> b!133873 (= e!87215 (contains!902 (t!6167 (toList!869 lt!69670)) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40879 res!64416) b!133872))

(assert (= (and b!133872 (not res!64417)) b!133873))

(declare-fun m!158403 () Bool)

(assert (=> d!40879 m!158403))

(declare-fun m!158405 () Bool)

(assert (=> d!40879 m!158405))

(declare-fun m!158407 () Bool)

(assert (=> b!133873 m!158407))

(assert (=> b!133257 d!40879))

(declare-fun d!40881 () Bool)

(assert (=> d!40881 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69084) lt!69080)) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69084) lt!69080))))))

(declare-fun bs!5546 () Bool)

(assert (= bs!5546 d!40881))

(assert (=> bs!5546 m!156399))

(declare-fun m!158409 () Bool)

(assert (=> bs!5546 m!158409))

(assert (=> b!133672 d!40881))

(assert (=> b!133672 d!40827))

(assert (=> d!40531 d!40545))

(declare-fun d!40883 () Bool)

(assert (=> d!40883 (= (arrayCountValidKeys!0 lt!69334 (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(assert (=> d!40883 true))

(declare-fun _$85!12 () Unit!4135)

(assert (=> d!40883 (= (choose!2 lt!69334 (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))) _$85!12)))

(declare-fun bs!5547 () Bool)

(assert (= bs!5547 d!40883))

(assert (=> bs!5547 m!156277))

(assert (=> d!40531 d!40883))

(declare-fun lt!70056 () Bool)

(declare-fun d!40885 () Bool)

(assert (=> d!40885 (= lt!70056 (select (content!133 (t!6167 (toList!869 lt!69413))) (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun e!87218 () Bool)

(assert (=> d!40885 (= lt!70056 e!87218)))

(declare-fun res!64418 () Bool)

(assert (=> d!40885 (=> (not res!64418) (not e!87218))))

(assert (=> d!40885 (= res!64418 ((_ is Cons!1712) (t!6167 (toList!869 lt!69413))))))

(assert (=> d!40885 (= (contains!902 (t!6167 (toList!869 lt!69413)) (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!70056)))

(declare-fun b!133874 () Bool)

(declare-fun e!87217 () Bool)

(assert (=> b!133874 (= e!87218 e!87217)))

(declare-fun res!64419 () Bool)

(assert (=> b!133874 (=> res!64419 e!87217)))

(assert (=> b!133874 (= res!64419 (= (h!2317 (t!6167 (toList!869 lt!69413))) (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133875 () Bool)

(assert (=> b!133875 (= e!87217 (contains!902 (t!6167 (t!6167 (toList!869 lt!69413))) (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!40885 res!64418) b!133874))

(assert (= (and b!133874 (not res!64419)) b!133875))

(declare-fun m!158411 () Bool)

(assert (=> d!40885 m!158411))

(declare-fun m!158413 () Bool)

(assert (=> d!40885 m!158413))

(declare-fun m!158415 () Bool)

(assert (=> b!133875 m!158415))

(assert (=> b!133602 d!40885))

(declare-fun d!40887 () Bool)

(assert (=> d!40887 (= (isEmpty!410 lt!69614) (isEmpty!411 (toList!869 lt!69614)))))

(declare-fun bs!5548 () Bool)

(assert (= bs!5548 d!40887))

(declare-fun m!158417 () Bool)

(assert (=> bs!5548 m!158417))

(assert (=> b!133155 d!40887))

(declare-fun d!40889 () Bool)

(assert (=> d!40889 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69483))))

(declare-fun lt!70057 () Unit!4135)

(assert (=> d!40889 (= lt!70057 (choose!817 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69483))))

(declare-fun e!87219 () Bool)

(assert (=> d!40889 e!87219))

(declare-fun res!64420 () Bool)

(assert (=> d!40889 (=> (not res!64420) (not e!87219))))

(assert (=> d!40889 (= res!64420 (isStrictlySorted!322 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (=> d!40889 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69483) lt!70057)))

(declare-fun b!133876 () Bool)

(assert (=> b!133876 (= e!87219 (containsKey!176 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69483))))

(assert (= (and d!40889 res!64420) b!133876))

(assert (=> d!40889 m!157143))

(assert (=> d!40889 m!157143))

(assert (=> d!40889 m!157145))

(declare-fun m!158419 () Bool)

(assert (=> d!40889 m!158419))

(declare-fun m!158421 () Bool)

(assert (=> d!40889 m!158421))

(assert (=> b!133876 m!157139))

(assert (=> b!133237 d!40889))

(declare-fun d!40891 () Bool)

(assert (=> d!40891 (= (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69483)) (not (isEmpty!409 (getValueByKey!172 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69483))))))

(declare-fun bs!5549 () Bool)

(assert (= bs!5549 d!40891))

(assert (=> bs!5549 m!157143))

(declare-fun m!158423 () Bool)

(assert (=> bs!5549 m!158423))

(assert (=> b!133237 d!40891))

(declare-fun b!133879 () Bool)

(declare-fun e!87221 () Option!178)

(assert (=> b!133879 (= e!87221 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) lt!69483))))

(declare-fun b!133880 () Bool)

(assert (=> b!133880 (= e!87221 None!176)))

(declare-fun c!24847 () Bool)

(declare-fun d!40893 () Bool)

(assert (=> d!40893 (= c!24847 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) lt!69483)))))

(declare-fun e!87220 () Option!178)

(assert (=> d!40893 (= (getValueByKey!172 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69483) e!87220)))

(declare-fun b!133877 () Bool)

(assert (=> b!133877 (= e!87220 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))))

(declare-fun b!133878 () Bool)

(assert (=> b!133878 (= e!87220 e!87221)))

(declare-fun c!24848 () Bool)

(assert (=> b!133878 (= c!24848 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) lt!69483))))))

(assert (= (and d!40893 c!24847) b!133877))

(assert (= (and d!40893 (not c!24847)) b!133878))

(assert (= (and b!133878 c!24848) b!133879))

(assert (= (and b!133878 (not c!24848)) b!133880))

(declare-fun m!158425 () Bool)

(assert (=> b!133879 m!158425))

(assert (=> b!133237 d!40893))

(declare-fun d!40895 () Bool)

(declare-fun lt!70058 () Bool)

(assert (=> d!40895 (= lt!70058 (select (content!133 (t!6167 (toList!869 lt!69442))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun e!87223 () Bool)

(assert (=> d!40895 (= lt!70058 e!87223)))

(declare-fun res!64421 () Bool)

(assert (=> d!40895 (=> (not res!64421) (not e!87223))))

(assert (=> d!40895 (= res!64421 ((_ is Cons!1712) (t!6167 (toList!869 lt!69442))))))

(assert (=> d!40895 (= (contains!902 (t!6167 (toList!869 lt!69442)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!70058)))

(declare-fun b!133881 () Bool)

(declare-fun e!87222 () Bool)

(assert (=> b!133881 (= e!87223 e!87222)))

(declare-fun res!64422 () Bool)

(assert (=> b!133881 (=> res!64422 e!87222)))

(assert (=> b!133881 (= res!64422 (= (h!2317 (t!6167 (toList!869 lt!69442))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133882 () Bool)

(assert (=> b!133882 (= e!87222 (contains!902 (t!6167 (t!6167 (toList!869 lt!69442))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!40895 res!64421) b!133881))

(assert (= (and b!133881 (not res!64422)) b!133882))

(declare-fun m!158427 () Bool)

(assert (=> d!40895 m!158427))

(declare-fun m!158429 () Bool)

(assert (=> d!40895 m!158429))

(declare-fun m!158431 () Bool)

(assert (=> b!133882 m!158431))

(assert (=> b!133387 d!40895))

(declare-fun d!40897 () Bool)

(declare-fun res!64423 () Bool)

(declare-fun e!87224 () Bool)

(assert (=> d!40897 (=> res!64423 e!87224)))

(assert (=> d!40897 (= res!64423 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))))))))

(assert (=> d!40897 (= (containsKey!176 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))) e!87224)))

(declare-fun b!133883 () Bool)

(declare-fun e!87225 () Bool)

(assert (=> b!133883 (= e!87224 e!87225)))

(declare-fun res!64424 () Bool)

(assert (=> b!133883 (=> (not res!64424) (not e!87225))))

(assert (=> b!133883 (= res!64424 (and (or (not ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (bvsle (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))))) ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvslt (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))))))))

(declare-fun b!133884 () Bool)

(assert (=> b!133884 (= e!87225 (containsKey!176 (t!6167 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))

(assert (= (and d!40897 (not res!64423)) b!133883))

(assert (= (and b!133883 res!64424) b!133884))

(assert (=> b!133884 m!156259))

(declare-fun m!158433 () Bool)

(assert (=> b!133884 m!158433))

(assert (=> d!40537 d!40897))

(declare-fun d!40899 () Bool)

(declare-fun res!64425 () Bool)

(declare-fun e!87226 () Bool)

(assert (=> d!40899 (=> res!64425 e!87226)))

(assert (=> d!40899 (= res!64425 (and ((_ is Cons!1712) (toList!869 lt!69262)) (= (_1!1324 (h!2317 (toList!869 lt!69262))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40899 (= (containsKey!176 (toList!869 lt!69262) #b0000000000000000000000000000000000000000000000000000000000000000) e!87226)))

(declare-fun b!133885 () Bool)

(declare-fun e!87227 () Bool)

(assert (=> b!133885 (= e!87226 e!87227)))

(declare-fun res!64426 () Bool)

(assert (=> b!133885 (=> (not res!64426) (not e!87227))))

(assert (=> b!133885 (= res!64426 (and (or (not ((_ is Cons!1712) (toList!869 lt!69262))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69262))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1712) (toList!869 lt!69262)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69262))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133886 () Bool)

(assert (=> b!133886 (= e!87227 (containsKey!176 (t!6167 (toList!869 lt!69262)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40899 (not res!64425)) b!133885))

(assert (= (and b!133885 res!64426) b!133886))

(declare-fun m!158435 () Bool)

(assert (=> b!133886 m!158435))

(assert (=> d!40837 d!40899))

(assert (=> d!40467 d!40289))

(declare-fun d!40901 () Bool)

(declare-fun lt!70059 () Bool)

(assert (=> d!40901 (= lt!70059 (select (content!133 (t!6167 (toList!869 lt!69422))) (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87229 () Bool)

(assert (=> d!40901 (= lt!70059 e!87229)))

(declare-fun res!64427 () Bool)

(assert (=> d!40901 (=> (not res!64427) (not e!87229))))

(assert (=> d!40901 (= res!64427 ((_ is Cons!1712) (t!6167 (toList!869 lt!69422))))))

(assert (=> d!40901 (= (contains!902 (t!6167 (toList!869 lt!69422)) (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70059)))

(declare-fun b!133887 () Bool)

(declare-fun e!87228 () Bool)

(assert (=> b!133887 (= e!87229 e!87228)))

(declare-fun res!64428 () Bool)

(assert (=> b!133887 (=> res!64428 e!87228)))

(assert (=> b!133887 (= res!64428 (= (h!2317 (t!6167 (toList!869 lt!69422))) (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133888 () Bool)

(assert (=> b!133888 (= e!87228 (contains!902 (t!6167 (t!6167 (toList!869 lt!69422))) (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!40901 res!64427) b!133887))

(assert (= (and b!133887 (not res!64428)) b!133888))

(declare-fun m!158437 () Bool)

(assert (=> d!40901 m!158437))

(declare-fun m!158439 () Bool)

(assert (=> d!40901 m!158439))

(declare-fun m!158441 () Bool)

(assert (=> b!133888 m!158441))

(assert (=> b!133255 d!40901))

(declare-fun d!40903 () Bool)

(assert (=> d!40903 (isDefined!125 (getValueByKey!172 (toList!869 lt!69413) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun lt!70060 () Unit!4135)

(assert (=> d!40903 (= lt!70060 (choose!817 (toList!869 lt!69413) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun e!87230 () Bool)

(assert (=> d!40903 e!87230))

(declare-fun res!64429 () Bool)

(assert (=> d!40903 (=> (not res!64429) (not e!87230))))

(assert (=> d!40903 (= res!64429 (isStrictlySorted!322 (toList!869 lt!69413)))))

(assert (=> d!40903 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69413) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!70060)))

(declare-fun b!133889 () Bool)

(assert (=> b!133889 (= e!87230 (containsKey!176 (toList!869 lt!69413) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!40903 res!64429) b!133889))

(assert (=> d!40903 m!156419))

(assert (=> d!40903 m!156419))

(assert (=> d!40903 m!157977))

(declare-fun m!158443 () Bool)

(assert (=> d!40903 m!158443))

(declare-fun m!158445 () Bool)

(assert (=> d!40903 m!158445))

(assert (=> b!133889 m!157973))

(assert (=> b!133673 d!40903))

(declare-fun d!40905 () Bool)

(assert (=> d!40905 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69413) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69413) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun bs!5550 () Bool)

(assert (= bs!5550 d!40905))

(assert (=> bs!5550 m!156419))

(declare-fun m!158447 () Bool)

(assert (=> bs!5550 m!158447))

(assert (=> b!133673 d!40905))

(assert (=> b!133673 d!40755))

(declare-fun d!40907 () Bool)

(declare-fun lt!70061 () Bool)

(assert (=> d!40907 (= lt!70061 (select (content!133 (t!6167 (toList!869 lt!69377))) (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun e!87232 () Bool)

(assert (=> d!40907 (= lt!70061 e!87232)))

(declare-fun res!64430 () Bool)

(assert (=> d!40907 (=> (not res!64430) (not e!87232))))

(assert (=> d!40907 (= res!64430 ((_ is Cons!1712) (t!6167 (toList!869 lt!69377))))))

(assert (=> d!40907 (= (contains!902 (t!6167 (toList!869 lt!69377)) (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!70061)))

(declare-fun b!133890 () Bool)

(declare-fun e!87231 () Bool)

(assert (=> b!133890 (= e!87232 e!87231)))

(declare-fun res!64431 () Bool)

(assert (=> b!133890 (=> res!64431 e!87231)))

(assert (=> b!133890 (= res!64431 (= (h!2317 (t!6167 (toList!869 lt!69377))) (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!133891 () Bool)

(assert (=> b!133891 (= e!87231 (contains!902 (t!6167 (t!6167 (toList!869 lt!69377))) (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!40907 res!64430) b!133890))

(assert (= (and b!133890 (not res!64431)) b!133891))

(declare-fun m!158449 () Bool)

(assert (=> d!40907 m!158449))

(declare-fun m!158451 () Bool)

(assert (=> d!40907 m!158451))

(declare-fun m!158453 () Bool)

(assert (=> b!133891 m!158453))

(assert (=> b!133047 d!40907))

(declare-fun d!40909 () Bool)

(assert (=> d!40909 (= (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133472 d!40909))

(assert (=> d!40765 d!40523))

(assert (=> d!40765 d!40525))

(declare-fun d!40911 () Bool)

(assert (=> d!40911 (isDefined!125 (getValueByKey!172 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40911 true))

(declare-fun _$12!400 () Unit!4135)

(assert (=> d!40911 (= (choose!817 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000) _$12!400)))

(declare-fun bs!5551 () Bool)

(assert (= bs!5551 d!40911))

(assert (=> bs!5551 m!156451))

(assert (=> bs!5551 m!156451))

(assert (=> bs!5551 m!156487))

(assert (=> d!40765 d!40911))

(declare-fun d!40913 () Bool)

(declare-fun res!64432 () Bool)

(declare-fun e!87233 () Bool)

(assert (=> d!40913 (=> res!64432 e!87233)))

(assert (=> d!40913 (= res!64432 (or ((_ is Nil!1713) (toList!869 lt!69095)) ((_ is Nil!1713) (t!6167 (toList!869 lt!69095)))))))

(assert (=> d!40913 (= (isStrictlySorted!322 (toList!869 lt!69095)) e!87233)))

(declare-fun b!133892 () Bool)

(declare-fun e!87234 () Bool)

(assert (=> b!133892 (= e!87233 e!87234)))

(declare-fun res!64433 () Bool)

(assert (=> b!133892 (=> (not res!64433) (not e!87234))))

(assert (=> b!133892 (= res!64433 (bvslt (_1!1324 (h!2317 (toList!869 lt!69095))) (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095))))))))

(declare-fun b!133893 () Bool)

(assert (=> b!133893 (= e!87234 (isStrictlySorted!322 (t!6167 (toList!869 lt!69095))))))

(assert (= (and d!40913 (not res!64432)) b!133892))

(assert (= (and b!133892 res!64433) b!133893))

(declare-fun m!158455 () Bool)

(assert (=> b!133893 m!158455))

(assert (=> d!40765 d!40913))

(declare-fun lt!70062 () Bool)

(declare-fun d!40915 () Bool)

(assert (=> d!40915 (= lt!70062 (select (content!133 (toList!869 lt!70003)) (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))))

(declare-fun e!87236 () Bool)

(assert (=> d!40915 (= lt!70062 e!87236)))

(declare-fun res!64434 () Bool)

(assert (=> d!40915 (=> (not res!64434) (not e!87236))))

(assert (=> d!40915 (= res!64434 ((_ is Cons!1712) (toList!869 lt!70003)))))

(assert (=> d!40915 (= (contains!902 (toList!869 lt!70003) (tuple2!2627 lt!69249 (minValue!2720 newMap!16))) lt!70062)))

(declare-fun b!133894 () Bool)

(declare-fun e!87235 () Bool)

(assert (=> b!133894 (= e!87236 e!87235)))

(declare-fun res!64435 () Bool)

(assert (=> b!133894 (=> res!64435 e!87235)))

(assert (=> b!133894 (= res!64435 (= (h!2317 (toList!869 lt!70003)) (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))))

(declare-fun b!133895 () Bool)

(assert (=> b!133895 (= e!87235 (contains!902 (t!6167 (toList!869 lt!70003)) (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))))

(assert (= (and d!40915 res!64434) b!133894))

(assert (= (and b!133894 (not res!64435)) b!133895))

(declare-fun m!158457 () Bool)

(assert (=> d!40915 m!158457))

(declare-fun m!158459 () Bool)

(assert (=> d!40915 m!158459))

(declare-fun m!158461 () Bool)

(assert (=> b!133895 m!158461))

(assert (=> b!133764 d!40915))

(declare-fun d!40917 () Bool)

(assert (=> d!40917 (contains!899 (+!175 lt!69848 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16))) lt!69847)))

(declare-fun lt!70063 () Unit!4135)

(assert (=> d!40917 (= lt!70063 (choose!823 lt!69848 lt!69842 (zeroValue!2720 newMap!16) lt!69847))))

(assert (=> d!40917 (contains!899 lt!69848 lt!69847)))

(assert (=> d!40917 (= (addStillContains!92 lt!69848 lt!69842 (zeroValue!2720 newMap!16) lt!69847) lt!70063)))

(declare-fun bs!5552 () Bool)

(assert (= bs!5552 d!40917))

(assert (=> bs!5552 m!157683))

(assert (=> bs!5552 m!157683))

(assert (=> bs!5552 m!157707))

(declare-fun m!158463 () Bool)

(assert (=> bs!5552 m!158463))

(declare-fun m!158465 () Bool)

(assert (=> bs!5552 m!158465))

(assert (=> b!133521 d!40917))

(declare-fun d!40919 () Bool)

(declare-fun e!87237 () Bool)

(assert (=> d!40919 e!87237))

(declare-fun res!64437 () Bool)

(assert (=> d!40919 (=> (not res!64437) (not e!87237))))

(declare-fun lt!70064 () ListLongMap!1707)

(assert (=> d!40919 (= res!64437 (contains!899 lt!70064 (_1!1324 (tuple2!2627 lt!69841 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70066 () List!1716)

(assert (=> d!40919 (= lt!70064 (ListLongMap!1708 lt!70066))))

(declare-fun lt!70067 () Unit!4135)

(declare-fun lt!70065 () Unit!4135)

(assert (=> d!40919 (= lt!70067 lt!70065)))

(assert (=> d!40919 (= (getValueByKey!172 lt!70066 (_1!1324 (tuple2!2627 lt!69841 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69841 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40919 (= lt!70065 (lemmaContainsTupThenGetReturnValue!87 lt!70066 (_1!1324 (tuple2!2627 lt!69841 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69841 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40919 (= lt!70066 (insertStrictlySorted!90 (toList!869 lt!69839) (_1!1324 (tuple2!2627 lt!69841 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69841 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40919 (= (+!175 lt!69839 (tuple2!2627 lt!69841 (zeroValue!2720 newMap!16))) lt!70064)))

(declare-fun b!133896 () Bool)

(declare-fun res!64436 () Bool)

(assert (=> b!133896 (=> (not res!64436) (not e!87237))))

(assert (=> b!133896 (= res!64436 (= (getValueByKey!172 (toList!869 lt!70064) (_1!1324 (tuple2!2627 lt!69841 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69841 (zeroValue!2720 newMap!16))))))))

(declare-fun b!133897 () Bool)

(assert (=> b!133897 (= e!87237 (contains!902 (toList!869 lt!70064) (tuple2!2627 lt!69841 (zeroValue!2720 newMap!16))))))

(assert (= (and d!40919 res!64437) b!133896))

(assert (= (and b!133896 res!64436) b!133897))

(declare-fun m!158467 () Bool)

(assert (=> d!40919 m!158467))

(declare-fun m!158469 () Bool)

(assert (=> d!40919 m!158469))

(declare-fun m!158471 () Bool)

(assert (=> d!40919 m!158471))

(declare-fun m!158473 () Bool)

(assert (=> d!40919 m!158473))

(declare-fun m!158475 () Bool)

(assert (=> b!133896 m!158475))

(declare-fun m!158477 () Bool)

(assert (=> b!133897 m!158477))

(assert (=> b!133521 d!40919))

(declare-fun d!40921 () Bool)

(assert (=> d!40921 (= (apply!116 (+!175 lt!69836 (tuple2!2627 lt!69851 (minValue!2720 newMap!16))) lt!69849) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69836 (tuple2!2627 lt!69851 (minValue!2720 newMap!16)))) lt!69849)))))

(declare-fun bs!5553 () Bool)

(assert (= bs!5553 d!40921))

(declare-fun m!158479 () Bool)

(assert (=> bs!5553 m!158479))

(assert (=> bs!5553 m!158479))

(declare-fun m!158481 () Bool)

(assert (=> bs!5553 m!158481))

(assert (=> b!133521 d!40921))

(declare-fun d!40923 () Bool)

(declare-fun e!87238 () Bool)

(assert (=> d!40923 e!87238))

(declare-fun res!64439 () Bool)

(assert (=> d!40923 (=> (not res!64439) (not e!87238))))

(declare-fun lt!70068 () ListLongMap!1707)

(assert (=> d!40923 (= res!64439 (contains!899 lt!70068 (_1!1324 (tuple2!2627 lt!69837 (minValue!2720 newMap!16)))))))

(declare-fun lt!70070 () List!1716)

(assert (=> d!40923 (= lt!70068 (ListLongMap!1708 lt!70070))))

(declare-fun lt!70071 () Unit!4135)

(declare-fun lt!70069 () Unit!4135)

(assert (=> d!40923 (= lt!70071 lt!70069)))

(assert (=> d!40923 (= (getValueByKey!172 lt!70070 (_1!1324 (tuple2!2627 lt!69837 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69837 (minValue!2720 newMap!16)))))))

(assert (=> d!40923 (= lt!70069 (lemmaContainsTupThenGetReturnValue!87 lt!70070 (_1!1324 (tuple2!2627 lt!69837 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69837 (minValue!2720 newMap!16)))))))

(assert (=> d!40923 (= lt!70070 (insertStrictlySorted!90 (toList!869 lt!69834) (_1!1324 (tuple2!2627 lt!69837 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69837 (minValue!2720 newMap!16)))))))

(assert (=> d!40923 (= (+!175 lt!69834 (tuple2!2627 lt!69837 (minValue!2720 newMap!16))) lt!70068)))

(declare-fun b!133898 () Bool)

(declare-fun res!64438 () Bool)

(assert (=> b!133898 (=> (not res!64438) (not e!87238))))

(assert (=> b!133898 (= res!64438 (= (getValueByKey!172 (toList!869 lt!70068) (_1!1324 (tuple2!2627 lt!69837 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69837 (minValue!2720 newMap!16))))))))

(declare-fun b!133899 () Bool)

(assert (=> b!133899 (= e!87238 (contains!902 (toList!869 lt!70068) (tuple2!2627 lt!69837 (minValue!2720 newMap!16))))))

(assert (= (and d!40923 res!64439) b!133898))

(assert (= (and b!133898 res!64438) b!133899))

(declare-fun m!158483 () Bool)

(assert (=> d!40923 m!158483))

(declare-fun m!158485 () Bool)

(assert (=> d!40923 m!158485))

(declare-fun m!158487 () Bool)

(assert (=> d!40923 m!158487))

(declare-fun m!158489 () Bool)

(assert (=> d!40923 m!158489))

(declare-fun m!158491 () Bool)

(assert (=> b!133898 m!158491))

(declare-fun m!158493 () Bool)

(assert (=> b!133899 m!158493))

(assert (=> b!133521 d!40923))

(declare-fun d!40925 () Bool)

(assert (=> d!40925 (= (apply!116 (+!175 lt!69834 (tuple2!2627 lt!69837 (minValue!2720 newMap!16))) lt!69853) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69834 (tuple2!2627 lt!69837 (minValue!2720 newMap!16)))) lt!69853)))))

(declare-fun bs!5554 () Bool)

(assert (= bs!5554 d!40925))

(declare-fun m!158495 () Bool)

(assert (=> bs!5554 m!158495))

(assert (=> bs!5554 m!158495))

(declare-fun m!158497 () Bool)

(assert (=> bs!5554 m!158497))

(assert (=> b!133521 d!40925))

(declare-fun d!40927 () Bool)

(assert (=> d!40927 (= (apply!116 lt!69834 lt!69853) (get!1486 (getValueByKey!172 (toList!869 lt!69834) lt!69853)))))

(declare-fun bs!5555 () Bool)

(assert (= bs!5555 d!40927))

(declare-fun m!158499 () Bool)

(assert (=> bs!5555 m!158499))

(assert (=> bs!5555 m!158499))

(declare-fun m!158501 () Bool)

(assert (=> bs!5555 m!158501))

(assert (=> b!133521 d!40927))

(declare-fun d!40929 () Bool)

(assert (=> d!40929 (= (apply!116 (+!175 lt!69839 (tuple2!2627 lt!69841 (zeroValue!2720 newMap!16))) lt!69835) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69839 (tuple2!2627 lt!69841 (zeroValue!2720 newMap!16)))) lt!69835)))))

(declare-fun bs!5556 () Bool)

(assert (= bs!5556 d!40929))

(declare-fun m!158503 () Bool)

(assert (=> bs!5556 m!158503))

(assert (=> bs!5556 m!158503))

(declare-fun m!158505 () Bool)

(assert (=> bs!5556 m!158505))

(assert (=> b!133521 d!40929))

(declare-fun b!133900 () Bool)

(declare-fun e!87240 () Bool)

(declare-fun e!87243 () Bool)

(assert (=> b!133900 (= e!87240 e!87243)))

(declare-fun c!24849 () Bool)

(declare-fun e!87245 () Bool)

(assert (=> b!133900 (= c!24849 e!87245)))

(declare-fun res!64443 () Bool)

(assert (=> b!133900 (=> (not res!64443) (not e!87245))))

(assert (=> b!133900 (= res!64443 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133901 () Bool)

(declare-fun e!87244 () Bool)

(declare-fun lt!70077 () ListLongMap!1707)

(assert (=> b!133901 (= e!87244 (isEmpty!410 lt!70077))))

(declare-fun b!133902 () Bool)

(declare-fun lt!70073 () Unit!4135)

(declare-fun lt!70074 () Unit!4135)

(assert (=> b!133902 (= lt!70073 lt!70074)))

(declare-fun lt!70076 () ListLongMap!1707)

(declare-fun lt!70075 () (_ BitVec 64))

(declare-fun lt!70072 () V!3483)

(declare-fun lt!70078 () (_ BitVec 64))

(assert (=> b!133902 (not (contains!899 (+!175 lt!70076 (tuple2!2627 lt!70075 lt!70072)) lt!70078))))

(assert (=> b!133902 (= lt!70074 (addStillNotContains!61 lt!70076 lt!70075 lt!70072 lt!70078))))

(assert (=> b!133902 (= lt!70078 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133902 (= lt!70072 (get!1482 (select (arr!2262 lt!69190) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133902 (= lt!70075 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!14777 () ListLongMap!1707)

(assert (=> b!133902 (= lt!70076 call!14777)))

(declare-fun e!87242 () ListLongMap!1707)

(assert (=> b!133902 (= e!87242 (+!175 call!14777 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 lt!69190) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133903 () Bool)

(assert (=> b!133903 (= e!87243 e!87244)))

(declare-fun c!24852 () Bool)

(assert (=> b!133903 (= c!24852 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133904 () Bool)

(assert (=> b!133904 (= e!87245 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133904 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!133905 () Bool)

(declare-fun res!64441 () Bool)

(assert (=> b!133905 (=> (not res!64441) (not e!87240))))

(assert (=> b!133905 (= res!64441 (not (contains!899 lt!70077 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133906 () Bool)

(assert (=> b!133906 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> b!133906 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 lt!69190)))))

(declare-fun e!87239 () Bool)

(assert (=> b!133906 (= e!87239 (= (apply!116 lt!70077 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 lt!69190) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!40931 () Bool)

(assert (=> d!40931 e!87240))

(declare-fun res!64442 () Bool)

(assert (=> d!40931 (=> (not res!64442) (not e!87240))))

(assert (=> d!40931 (= res!64442 (not (contains!899 lt!70077 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87241 () ListLongMap!1707)

(assert (=> d!40931 (= lt!70077 e!87241)))

(declare-fun c!24850 () Bool)

(assert (=> d!40931 (= c!24850 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!40931 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40931 (= (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!70077)))

(declare-fun b!133907 () Bool)

(assert (=> b!133907 (= e!87242 call!14777)))

(declare-fun bm!14774 () Bool)

(assert (=> bm!14774 (= call!14777 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!133908 () Bool)

(assert (=> b!133908 (= e!87243 e!87239)))

(assert (=> b!133908 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64440 () Bool)

(assert (=> b!133908 (= res!64440 (contains!899 lt!70077 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133908 (=> (not res!64440) (not e!87239))))

(declare-fun b!133909 () Bool)

(assert (=> b!133909 (= e!87241 (ListLongMap!1708 Nil!1713))))

(declare-fun b!133910 () Bool)

(assert (=> b!133910 (= e!87244 (= lt!70077 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!133911 () Bool)

(assert (=> b!133911 (= e!87241 e!87242)))

(declare-fun c!24851 () Bool)

(assert (=> b!133911 (= c!24851 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!40931 c!24850) b!133909))

(assert (= (and d!40931 (not c!24850)) b!133911))

(assert (= (and b!133911 c!24851) b!133902))

(assert (= (and b!133911 (not c!24851)) b!133907))

(assert (= (or b!133902 b!133907) bm!14774))

(assert (= (and d!40931 res!64442) b!133905))

(assert (= (and b!133905 res!64441) b!133900))

(assert (= (and b!133900 res!64443) b!133904))

(assert (= (and b!133900 c!24849) b!133908))

(assert (= (and b!133900 (not c!24849)) b!133903))

(assert (= (and b!133908 res!64440) b!133906))

(assert (= (and b!133903 c!24852) b!133910))

(assert (= (and b!133903 (not c!24852)) b!133901))

(declare-fun b_lambda!5981 () Bool)

(assert (=> (not b_lambda!5981) (not b!133902)))

(assert (=> b!133902 t!6176))

(declare-fun b_and!8303 () Bool)

(assert (= b_and!8299 (and (=> t!6176 result!3997) b_and!8303)))

(assert (=> b!133902 t!6178))

(declare-fun b_and!8305 () Bool)

(assert (= b_and!8301 (and (=> t!6178 result!3999) b_and!8305)))

(declare-fun b_lambda!5983 () Bool)

(assert (=> (not b_lambda!5983) (not b!133906)))

(assert (=> b!133906 t!6176))

(declare-fun b_and!8307 () Bool)

(assert (= b_and!8303 (and (=> t!6176 result!3997) b_and!8307)))

(assert (=> b!133906 t!6178))

(declare-fun b_and!8309 () Bool)

(assert (= b_and!8305 (and (=> t!6178 result!3999) b_and!8309)))

(declare-fun m!158507 () Bool)

(assert (=> b!133901 m!158507))

(declare-fun m!158509 () Bool)

(assert (=> d!40931 m!158509))

(assert (=> d!40931 m!156157))

(declare-fun m!158511 () Bool)

(assert (=> b!133905 m!158511))

(assert (=> b!133911 m!156163))

(assert (=> b!133911 m!156163))

(assert (=> b!133911 m!156165))

(assert (=> b!133904 m!156163))

(assert (=> b!133904 m!156163))

(assert (=> b!133904 m!156165))

(assert (=> b!133906 m!156175))

(assert (=> b!133906 m!157671))

(assert (=> b!133906 m!156175))

(assert (=> b!133906 m!157673))

(assert (=> b!133906 m!157671))

(assert (=> b!133906 m!156163))

(declare-fun m!158513 () Bool)

(assert (=> b!133906 m!158513))

(assert (=> b!133906 m!156163))

(assert (=> b!133908 m!156163))

(assert (=> b!133908 m!156163))

(declare-fun m!158515 () Bool)

(assert (=> b!133908 m!158515))

(declare-fun m!158517 () Bool)

(assert (=> b!133910 m!158517))

(assert (=> bm!14774 m!158517))

(assert (=> b!133902 m!156175))

(assert (=> b!133902 m!157671))

(assert (=> b!133902 m!156175))

(assert (=> b!133902 m!157673))

(declare-fun m!158519 () Bool)

(assert (=> b!133902 m!158519))

(declare-fun m!158521 () Bool)

(assert (=> b!133902 m!158521))

(assert (=> b!133902 m!157671))

(declare-fun m!158523 () Bool)

(assert (=> b!133902 m!158523))

(assert (=> b!133902 m!156163))

(assert (=> b!133902 m!158521))

(declare-fun m!158525 () Bool)

(assert (=> b!133902 m!158525))

(assert (=> b!133521 d!40931))

(declare-fun d!40933 () Bool)

(assert (=> d!40933 (= (apply!116 lt!69836 lt!69849) (get!1486 (getValueByKey!172 (toList!869 lt!69836) lt!69849)))))

(declare-fun bs!5557 () Bool)

(assert (= bs!5557 d!40933))

(declare-fun m!158527 () Bool)

(assert (=> bs!5557 m!158527))

(assert (=> bs!5557 m!158527))

(declare-fun m!158529 () Bool)

(assert (=> bs!5557 m!158529))

(assert (=> b!133521 d!40933))

(declare-fun d!40935 () Bool)

(declare-fun e!87246 () Bool)

(assert (=> d!40935 e!87246))

(declare-fun res!64445 () Bool)

(assert (=> d!40935 (=> (not res!64445) (not e!87246))))

(declare-fun lt!70079 () ListLongMap!1707)

(assert (=> d!40935 (= res!64445 (contains!899 lt!70079 (_1!1324 (tuple2!2627 lt!69851 (minValue!2720 newMap!16)))))))

(declare-fun lt!70081 () List!1716)

(assert (=> d!40935 (= lt!70079 (ListLongMap!1708 lt!70081))))

(declare-fun lt!70082 () Unit!4135)

(declare-fun lt!70080 () Unit!4135)

(assert (=> d!40935 (= lt!70082 lt!70080)))

(assert (=> d!40935 (= (getValueByKey!172 lt!70081 (_1!1324 (tuple2!2627 lt!69851 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69851 (minValue!2720 newMap!16)))))))

(assert (=> d!40935 (= lt!70080 (lemmaContainsTupThenGetReturnValue!87 lt!70081 (_1!1324 (tuple2!2627 lt!69851 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69851 (minValue!2720 newMap!16)))))))

(assert (=> d!40935 (= lt!70081 (insertStrictlySorted!90 (toList!869 lt!69836) (_1!1324 (tuple2!2627 lt!69851 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69851 (minValue!2720 newMap!16)))))))

(assert (=> d!40935 (= (+!175 lt!69836 (tuple2!2627 lt!69851 (minValue!2720 newMap!16))) lt!70079)))

(declare-fun b!133912 () Bool)

(declare-fun res!64444 () Bool)

(assert (=> b!133912 (=> (not res!64444) (not e!87246))))

(assert (=> b!133912 (= res!64444 (= (getValueByKey!172 (toList!869 lt!70079) (_1!1324 (tuple2!2627 lt!69851 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69851 (minValue!2720 newMap!16))))))))

(declare-fun b!133913 () Bool)

(assert (=> b!133913 (= e!87246 (contains!902 (toList!869 lt!70079) (tuple2!2627 lt!69851 (minValue!2720 newMap!16))))))

(assert (= (and d!40935 res!64445) b!133912))

(assert (= (and b!133912 res!64444) b!133913))

(declare-fun m!158531 () Bool)

(assert (=> d!40935 m!158531))

(declare-fun m!158533 () Bool)

(assert (=> d!40935 m!158533))

(declare-fun m!158535 () Bool)

(assert (=> d!40935 m!158535))

(declare-fun m!158537 () Bool)

(assert (=> d!40935 m!158537))

(declare-fun m!158539 () Bool)

(assert (=> b!133912 m!158539))

(declare-fun m!158541 () Bool)

(assert (=> b!133913 m!158541))

(assert (=> b!133521 d!40935))

(declare-fun d!40937 () Bool)

(assert (=> d!40937 (= (apply!116 (+!175 lt!69834 (tuple2!2627 lt!69837 (minValue!2720 newMap!16))) lt!69853) (apply!116 lt!69834 lt!69853))))

(declare-fun lt!70083 () Unit!4135)

(assert (=> d!40937 (= lt!70083 (choose!822 lt!69834 lt!69837 (minValue!2720 newMap!16) lt!69853))))

(declare-fun e!87247 () Bool)

(assert (=> d!40937 e!87247))

(declare-fun res!64446 () Bool)

(assert (=> d!40937 (=> (not res!64446) (not e!87247))))

(assert (=> d!40937 (= res!64446 (contains!899 lt!69834 lt!69853))))

(assert (=> d!40937 (= (addApplyDifferent!92 lt!69834 lt!69837 (minValue!2720 newMap!16) lt!69853) lt!70083)))

(declare-fun b!133914 () Bool)

(assert (=> b!133914 (= e!87247 (not (= lt!69853 lt!69837)))))

(assert (= (and d!40937 res!64446) b!133914))

(declare-fun m!158543 () Bool)

(assert (=> d!40937 m!158543))

(assert (=> d!40937 m!157693))

(assert (=> d!40937 m!157691))

(assert (=> d!40937 m!157693))

(assert (=> d!40937 m!157701))

(declare-fun m!158545 () Bool)

(assert (=> d!40937 m!158545))

(assert (=> b!133521 d!40937))

(declare-fun d!40939 () Bool)

(assert (=> d!40939 (= (apply!116 lt!69839 lt!69835) (get!1486 (getValueByKey!172 (toList!869 lt!69839) lt!69835)))))

(declare-fun bs!5558 () Bool)

(assert (= bs!5558 d!40939))

(declare-fun m!158547 () Bool)

(assert (=> bs!5558 m!158547))

(assert (=> bs!5558 m!158547))

(declare-fun m!158549 () Bool)

(assert (=> bs!5558 m!158549))

(assert (=> b!133521 d!40939))

(declare-fun d!40941 () Bool)

(assert (=> d!40941 (= (apply!116 (+!175 lt!69836 (tuple2!2627 lt!69851 (minValue!2720 newMap!16))) lt!69849) (apply!116 lt!69836 lt!69849))))

(declare-fun lt!70084 () Unit!4135)

(assert (=> d!40941 (= lt!70084 (choose!822 lt!69836 lt!69851 (minValue!2720 newMap!16) lt!69849))))

(declare-fun e!87248 () Bool)

(assert (=> d!40941 e!87248))

(declare-fun res!64447 () Bool)

(assert (=> d!40941 (=> (not res!64447) (not e!87248))))

(assert (=> d!40941 (= res!64447 (contains!899 lt!69836 lt!69849))))

(assert (=> d!40941 (= (addApplyDifferent!92 lt!69836 lt!69851 (minValue!2720 newMap!16) lt!69849) lt!70084)))

(declare-fun b!133915 () Bool)

(assert (=> b!133915 (= e!87248 (not (= lt!69849 lt!69851)))))

(assert (= (and d!40941 res!64447) b!133915))

(declare-fun m!158551 () Bool)

(assert (=> d!40941 m!158551))

(assert (=> d!40941 m!157681))

(assert (=> d!40941 m!157697))

(assert (=> d!40941 m!157681))

(assert (=> d!40941 m!157699))

(declare-fun m!158553 () Bool)

(assert (=> d!40941 m!158553))

(assert (=> b!133521 d!40941))

(declare-fun d!40943 () Bool)

(declare-fun e!87249 () Bool)

(assert (=> d!40943 e!87249))

(declare-fun res!64448 () Bool)

(assert (=> d!40943 (=> res!64448 e!87249)))

(declare-fun lt!70088 () Bool)

(assert (=> d!40943 (= res!64448 (not lt!70088))))

(declare-fun lt!70085 () Bool)

(assert (=> d!40943 (= lt!70088 lt!70085)))

(declare-fun lt!70087 () Unit!4135)

(declare-fun e!87250 () Unit!4135)

(assert (=> d!40943 (= lt!70087 e!87250)))

(declare-fun c!24853 () Bool)

(assert (=> d!40943 (= c!24853 lt!70085)))

(assert (=> d!40943 (= lt!70085 (containsKey!176 (toList!869 (+!175 lt!69848 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16)))) lt!69847))))

(assert (=> d!40943 (= (contains!899 (+!175 lt!69848 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16))) lt!69847) lt!70088)))

(declare-fun b!133916 () Bool)

(declare-fun lt!70086 () Unit!4135)

(assert (=> b!133916 (= e!87250 lt!70086)))

(assert (=> b!133916 (= lt!70086 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69848 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16)))) lt!69847))))

(assert (=> b!133916 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69848 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16)))) lt!69847))))

(declare-fun b!133917 () Bool)

(declare-fun Unit!4192 () Unit!4135)

(assert (=> b!133917 (= e!87250 Unit!4192)))

(declare-fun b!133918 () Bool)

(assert (=> b!133918 (= e!87249 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69848 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16)))) lt!69847)))))

(assert (= (and d!40943 c!24853) b!133916))

(assert (= (and d!40943 (not c!24853)) b!133917))

(assert (= (and d!40943 (not res!64448)) b!133918))

(declare-fun m!158555 () Bool)

(assert (=> d!40943 m!158555))

(declare-fun m!158557 () Bool)

(assert (=> b!133916 m!158557))

(declare-fun m!158559 () Bool)

(assert (=> b!133916 m!158559))

(assert (=> b!133916 m!158559))

(declare-fun m!158561 () Bool)

(assert (=> b!133916 m!158561))

(assert (=> b!133918 m!158559))

(assert (=> b!133918 m!158559))

(assert (=> b!133918 m!158561))

(assert (=> b!133521 d!40943))

(declare-fun d!40945 () Bool)

(assert (=> d!40945 (= (apply!116 (+!175 lt!69839 (tuple2!2627 lt!69841 (zeroValue!2720 newMap!16))) lt!69835) (apply!116 lt!69839 lt!69835))))

(declare-fun lt!70089 () Unit!4135)

(assert (=> d!40945 (= lt!70089 (choose!822 lt!69839 lt!69841 (zeroValue!2720 newMap!16) lt!69835))))

(declare-fun e!87251 () Bool)

(assert (=> d!40945 e!87251))

(declare-fun res!64449 () Bool)

(assert (=> d!40945 (=> (not res!64449) (not e!87251))))

(assert (=> d!40945 (= res!64449 (contains!899 lt!69839 lt!69835))))

(assert (=> d!40945 (= (addApplyDifferent!92 lt!69839 lt!69841 (zeroValue!2720 newMap!16) lt!69835) lt!70089)))

(declare-fun b!133919 () Bool)

(assert (=> b!133919 (= e!87251 (not (= lt!69835 lt!69841)))))

(assert (= (and d!40945 res!64449) b!133919))

(declare-fun m!158563 () Bool)

(assert (=> d!40945 m!158563))

(assert (=> d!40945 m!157685))

(assert (=> d!40945 m!157705))

(assert (=> d!40945 m!157685))

(assert (=> d!40945 m!157687))

(declare-fun m!158565 () Bool)

(assert (=> d!40945 m!158565))

(assert (=> b!133521 d!40945))

(declare-fun d!40947 () Bool)

(declare-fun e!87252 () Bool)

(assert (=> d!40947 e!87252))

(declare-fun res!64451 () Bool)

(assert (=> d!40947 (=> (not res!64451) (not e!87252))))

(declare-fun lt!70090 () ListLongMap!1707)

(assert (=> d!40947 (= res!64451 (contains!899 lt!70090 (_1!1324 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70092 () List!1716)

(assert (=> d!40947 (= lt!70090 (ListLongMap!1708 lt!70092))))

(declare-fun lt!70093 () Unit!4135)

(declare-fun lt!70091 () Unit!4135)

(assert (=> d!40947 (= lt!70093 lt!70091)))

(assert (=> d!40947 (= (getValueByKey!172 lt!70092 (_1!1324 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40947 (= lt!70091 (lemmaContainsTupThenGetReturnValue!87 lt!70092 (_1!1324 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40947 (= lt!70092 (insertStrictlySorted!90 (toList!869 lt!69848) (_1!1324 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40947 (= (+!175 lt!69848 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16))) lt!70090)))

(declare-fun b!133920 () Bool)

(declare-fun res!64450 () Bool)

(assert (=> b!133920 (=> (not res!64450) (not e!87252))))

(assert (=> b!133920 (= res!64450 (= (getValueByKey!172 (toList!869 lt!70090) (_1!1324 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16))))))))

(declare-fun b!133921 () Bool)

(assert (=> b!133921 (= e!87252 (contains!902 (toList!869 lt!70090) (tuple2!2627 lt!69842 (zeroValue!2720 newMap!16))))))

(assert (= (and d!40947 res!64451) b!133920))

(assert (= (and b!133920 res!64450) b!133921))

(declare-fun m!158567 () Bool)

(assert (=> d!40947 m!158567))

(declare-fun m!158569 () Bool)

(assert (=> d!40947 m!158569))

(declare-fun m!158571 () Bool)

(assert (=> d!40947 m!158571))

(declare-fun m!158573 () Bool)

(assert (=> d!40947 m!158573))

(declare-fun m!158575 () Bool)

(assert (=> b!133920 m!158575))

(declare-fun m!158577 () Bool)

(assert (=> b!133921 m!158577))

(assert (=> b!133521 d!40947))

(declare-fun e!87254 () Option!178)

(declare-fun b!133924 () Bool)

(assert (=> b!133924 (= e!87254 (getValueByKey!172 (t!6167 (toList!869 lt!69670)) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133925 () Bool)

(assert (=> b!133925 (= e!87254 None!176)))

(declare-fun c!24854 () Bool)

(declare-fun d!40949 () Bool)

(assert (=> d!40949 (= c!24854 (and ((_ is Cons!1712) (toList!869 lt!69670)) (= (_1!1324 (h!2317 (toList!869 lt!69670))) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87253 () Option!178)

(assert (=> d!40949 (= (getValueByKey!172 (toList!869 lt!69670) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87253)))

(declare-fun b!133922 () Bool)

(assert (=> b!133922 (= e!87253 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69670)))))))

(declare-fun b!133923 () Bool)

(assert (=> b!133923 (= e!87253 e!87254)))

(declare-fun c!24855 () Bool)

(assert (=> b!133923 (= c!24855 (and ((_ is Cons!1712) (toList!869 lt!69670)) (not (= (_1!1324 (h!2317 (toList!869 lt!69670))) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!40949 c!24854) b!133922))

(assert (= (and d!40949 (not c!24854)) b!133923))

(assert (= (and b!133923 c!24855) b!133924))

(assert (= (and b!133923 (not c!24855)) b!133925))

(declare-fun m!158579 () Bool)

(assert (=> b!133924 m!158579))

(assert (=> b!133256 d!40949))

(declare-fun d!40951 () Bool)

(assert (=> d!40951 (= ($colon$colon!92 e!87171 (ite c!24828 (h!2317 (toList!869 lt!69084)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (Cons!1712 (ite c!24828 (h!2317 (toList!869 lt!69084)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) e!87171))))

(assert (=> bm!14770 d!40951))

(declare-fun d!40953 () Bool)

(declare-fun res!64452 () Bool)

(declare-fun e!87255 () Bool)

(assert (=> d!40953 (=> res!64452 e!87255)))

(assert (=> d!40953 (= res!64452 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403)))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))))) lt!69409)))))

(assert (=> d!40953 (= (containsKey!176 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))) lt!69409) e!87255)))

(declare-fun b!133926 () Bool)

(declare-fun e!87256 () Bool)

(assert (=> b!133926 (= e!87255 e!87256)))

(declare-fun res!64453 () Bool)

(assert (=> b!133926 (=> (not res!64453) (not e!87256))))

(assert (=> b!133926 (= res!64453 (and (or (not ((_ is Cons!1712) (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))))) (bvsle (_1!1324 (h!2317 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))))) lt!69409)) ((_ is Cons!1712) (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403)))) (bvslt (_1!1324 (h!2317 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))))) lt!69409)))))

(declare-fun b!133927 () Bool)

(assert (=> b!133927 (= e!87256 (containsKey!176 (t!6167 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403)))) lt!69409))))

(assert (= (and d!40953 (not res!64452)) b!133926))

(assert (= (and b!133926 res!64453) b!133927))

(declare-fun m!158581 () Bool)

(assert (=> b!133927 m!158581))

(assert (=> d!40355 d!40953))

(declare-fun d!40955 () Bool)

(declare-fun e!87257 () Bool)

(assert (=> d!40955 e!87257))

(declare-fun res!64454 () Bool)

(assert (=> d!40955 (=> res!64454 e!87257)))

(declare-fun lt!70097 () Bool)

(assert (=> d!40955 (= res!64454 (not lt!70097))))

(declare-fun lt!70094 () Bool)

(assert (=> d!40955 (= lt!70097 lt!70094)))

(declare-fun lt!70096 () Unit!4135)

(declare-fun e!87258 () Unit!4135)

(assert (=> d!40955 (= lt!70096 e!87258)))

(declare-fun c!24856 () Bool)

(assert (=> d!40955 (= c!24856 lt!70094)))

(assert (=> d!40955 (= lt!70094 (containsKey!176 (toList!869 lt!69596) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40955 (= (contains!899 lt!69596 (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))) lt!70097)))

(declare-fun b!133928 () Bool)

(declare-fun lt!70095 () Unit!4135)

(assert (=> b!133928 (= e!87258 lt!70095)))

(assert (=> b!133928 (= lt!70095 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69596) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))

(assert (=> b!133928 (isDefined!125 (getValueByKey!172 (toList!869 lt!69596) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))

(declare-fun b!133929 () Bool)

(declare-fun Unit!4193 () Unit!4135)

(assert (=> b!133929 (= e!87258 Unit!4193)))

(declare-fun b!133930 () Bool)

(assert (=> b!133930 (= e!87257 (isDefined!125 (getValueByKey!172 (toList!869 lt!69596) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!40955 c!24856) b!133928))

(assert (= (and d!40955 (not c!24856)) b!133929))

(assert (= (and d!40955 (not res!64454)) b!133930))

(declare-fun m!158583 () Bool)

(assert (=> d!40955 m!158583))

(declare-fun m!158585 () Bool)

(assert (=> b!133928 m!158585))

(assert (=> b!133928 m!156955))

(assert (=> b!133928 m!156955))

(declare-fun m!158587 () Bool)

(assert (=> b!133928 m!158587))

(assert (=> b!133930 m!156955))

(assert (=> b!133930 m!156955))

(assert (=> b!133930 m!158587))

(assert (=> d!40441 d!40955))

(declare-fun e!87260 () Option!178)

(declare-fun b!133933 () Bool)

(assert (=> b!133933 (= e!87260 (getValueByKey!172 (t!6167 lt!69598) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))

(declare-fun b!133934 () Bool)

(assert (=> b!133934 (= e!87260 None!176)))

(declare-fun c!24857 () Bool)

(declare-fun d!40957 () Bool)

(assert (=> d!40957 (= c!24857 (and ((_ is Cons!1712) lt!69598) (= (_1!1324 (h!2317 lt!69598)) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))))))

(declare-fun e!87259 () Option!178)

(assert (=> d!40957 (= (getValueByKey!172 lt!69598 (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))) e!87259)))

(declare-fun b!133931 () Bool)

(assert (=> b!133931 (= e!87259 (Some!177 (_2!1324 (h!2317 lt!69598))))))

(declare-fun b!133932 () Bool)

(assert (=> b!133932 (= e!87259 e!87260)))

(declare-fun c!24858 () Bool)

(assert (=> b!133932 (= c!24858 (and ((_ is Cons!1712) lt!69598) (not (= (_1!1324 (h!2317 lt!69598)) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!40957 c!24857) b!133931))

(assert (= (and d!40957 (not c!24857)) b!133932))

(assert (= (and b!133932 c!24858) b!133933))

(assert (= (and b!133932 (not c!24858)) b!133934))

(declare-fun m!158589 () Bool)

(assert (=> b!133933 m!158589))

(assert (=> d!40441 d!40957))

(declare-fun d!40959 () Bool)

(assert (=> d!40959 (= (getValueByKey!172 lt!69598 (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70098 () Unit!4135)

(assert (=> d!40959 (= lt!70098 (choose!827 lt!69598 (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))

(declare-fun e!87261 () Bool)

(assert (=> d!40959 e!87261))

(declare-fun res!64455 () Bool)

(assert (=> d!40959 (=> (not res!64455) (not e!87261))))

(assert (=> d!40959 (= res!64455 (isStrictlySorted!322 lt!69598))))

(assert (=> d!40959 (= (lemmaContainsTupThenGetReturnValue!87 lt!69598 (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))) lt!70098)))

(declare-fun b!133935 () Bool)

(declare-fun res!64456 () Bool)

(assert (=> b!133935 (=> (not res!64456) (not e!87261))))

(assert (=> b!133935 (= res!64456 (containsKey!176 lt!69598 (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))

(declare-fun b!133936 () Bool)

(assert (=> b!133936 (= e!87261 (contains!902 lt!69598 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!40959 res!64455) b!133935))

(assert (= (and b!133935 res!64456) b!133936))

(assert (=> d!40959 m!156949))

(declare-fun m!158591 () Bool)

(assert (=> d!40959 m!158591))

(declare-fun m!158593 () Bool)

(assert (=> d!40959 m!158593))

(declare-fun m!158595 () Bool)

(assert (=> b!133935 m!158595))

(declare-fun m!158597 () Bool)

(assert (=> b!133936 m!158597))

(assert (=> d!40441 d!40959))

(declare-fun bm!14775 () Bool)

(declare-fun call!14779 () List!1716)

(declare-fun call!14780 () List!1716)

(assert (=> bm!14775 (= call!14779 call!14780)))

(declare-fun d!40961 () Bool)

(declare-fun e!87265 () Bool)

(assert (=> d!40961 e!87265))

(declare-fun res!64458 () Bool)

(assert (=> d!40961 (=> (not res!64458) (not e!87265))))

(declare-fun lt!70099 () List!1716)

(assert (=> d!40961 (= res!64458 (isStrictlySorted!322 lt!70099))))

(declare-fun e!87263 () List!1716)

(assert (=> d!40961 (= lt!70099 e!87263)))

(declare-fun c!24862 () Bool)

(assert (=> d!40961 (= c!24862 (and ((_ is Cons!1712) (toList!869 lt!69453)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69453))) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))))))

(assert (=> d!40961 (isStrictlySorted!322 (toList!869 lt!69453))))

(assert (=> d!40961 (= (insertStrictlySorted!90 (toList!869 lt!69453) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))) lt!70099)))

(declare-fun b!133937 () Bool)

(assert (=> b!133937 (= e!87265 (contains!902 lt!70099 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))))))

(declare-fun b!133938 () Bool)

(declare-fun c!24860 () Bool)

(assert (=> b!133938 (= c!24860 (and ((_ is Cons!1712) (toList!869 lt!69453)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69453))) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))))))

(declare-fun e!87264 () List!1716)

(declare-fun e!87266 () List!1716)

(assert (=> b!133938 (= e!87264 e!87266)))

(declare-fun e!87262 () List!1716)

(declare-fun b!133939 () Bool)

(assert (=> b!133939 (= e!87262 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69453)) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))

(declare-fun b!133940 () Bool)

(assert (=> b!133940 (= e!87264 call!14779)))

(declare-fun b!133941 () Bool)

(declare-fun call!14778 () List!1716)

(assert (=> b!133941 (= e!87266 call!14778)))

(declare-fun b!133942 () Bool)

(declare-fun c!24859 () Bool)

(assert (=> b!133942 (= e!87262 (ite c!24859 (t!6167 (toList!869 lt!69453)) (ite c!24860 (Cons!1712 (h!2317 (toList!869 lt!69453)) (t!6167 (toList!869 lt!69453))) Nil!1713)))))

(declare-fun b!133943 () Bool)

(assert (=> b!133943 (= e!87266 call!14778)))

(declare-fun b!133944 () Bool)

(assert (=> b!133944 (= e!87263 call!14780)))

(declare-fun bm!14776 () Bool)

(assert (=> bm!14776 (= call!14780 ($colon$colon!92 e!87262 (ite c!24862 (h!2317 (toList!869 lt!69453)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))))

(declare-fun c!24861 () Bool)

(assert (=> bm!14776 (= c!24861 c!24862)))

(declare-fun bm!14777 () Bool)

(assert (=> bm!14777 (= call!14778 call!14779)))

(declare-fun b!133945 () Bool)

(declare-fun res!64457 () Bool)

(assert (=> b!133945 (=> (not res!64457) (not e!87265))))

(assert (=> b!133945 (= res!64457 (containsKey!176 lt!70099 (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))

(declare-fun b!133946 () Bool)

(assert (=> b!133946 (= e!87263 e!87264)))

(assert (=> b!133946 (= c!24859 (and ((_ is Cons!1712) (toList!869 lt!69453)) (= (_1!1324 (h!2317 (toList!869 lt!69453))) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!40961 c!24862) b!133944))

(assert (= (and d!40961 (not c!24862)) b!133946))

(assert (= (and b!133946 c!24859) b!133940))

(assert (= (and b!133946 (not c!24859)) b!133938))

(assert (= (and b!133938 c!24860) b!133941))

(assert (= (and b!133938 (not c!24860)) b!133943))

(assert (= (or b!133941 b!133943) bm!14777))

(assert (= (or b!133940 bm!14777) bm!14775))

(assert (= (or b!133944 bm!14775) bm!14776))

(assert (= (and bm!14776 c!24861) b!133939))

(assert (= (and bm!14776 (not c!24861)) b!133942))

(assert (= (and d!40961 res!64458) b!133945))

(assert (= (and b!133945 res!64457) b!133937))

(declare-fun m!158599 () Bool)

(assert (=> d!40961 m!158599))

(declare-fun m!158601 () Bool)

(assert (=> d!40961 m!158601))

(declare-fun m!158603 () Bool)

(assert (=> bm!14776 m!158603))

(declare-fun m!158605 () Bool)

(assert (=> b!133939 m!158605))

(declare-fun m!158607 () Bool)

(assert (=> b!133937 m!158607))

(declare-fun m!158609 () Bool)

(assert (=> b!133945 m!158609))

(assert (=> d!40441 d!40961))

(declare-fun b!133949 () Bool)

(declare-fun e!87268 () Option!178)

(assert (=> b!133949 (= e!87268 (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69095))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133950 () Bool)

(assert (=> b!133950 (= e!87268 None!176)))

(declare-fun d!40963 () Bool)

(declare-fun c!24863 () Bool)

(assert (=> d!40963 (= c!24863 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69095))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87267 () Option!178)

(assert (=> d!40963 (= (getValueByKey!172 (t!6167 (toList!869 lt!69095)) #b1000000000000000000000000000000000000000000000000000000000000000) e!87267)))

(declare-fun b!133947 () Bool)

(assert (=> b!133947 (= e!87267 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 lt!69095))))))))

(declare-fun b!133948 () Bool)

(assert (=> b!133948 (= e!87267 e!87268)))

(declare-fun c!24864 () Bool)

(assert (=> b!133948 (= c!24864 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69095))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095)))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!40963 c!24863) b!133947))

(assert (= (and d!40963 (not c!24863)) b!133948))

(assert (= (and b!133948 c!24864) b!133949))

(assert (= (and b!133948 (not c!24864)) b!133950))

(declare-fun m!158611 () Bool)

(assert (=> b!133949 m!158611))

(assert (=> b!133281 d!40963))

(declare-fun d!40965 () Bool)

(assert (=> d!40965 (= (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and (not (= (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133818 d!40965))

(declare-fun d!40967 () Bool)

(assert (=> d!40967 (= (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (and (not (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133749 d!40967))

(declare-fun d!40969 () Bool)

(assert (=> d!40969 (= (apply!116 lt!69692 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1486 (getValueByKey!172 (toList!869 lt!69692) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5559 () Bool)

(assert (= bs!5559 d!40969))

(assert (=> bs!5559 m!156163))

(declare-fun m!158613 () Bool)

(assert (=> bs!5559 m!158613))

(assert (=> bs!5559 m!158613))

(declare-fun m!158615 () Bool)

(assert (=> bs!5559 m!158615))

(assert (=> b!133268 d!40969))

(assert (=> b!133268 d!40375))

(assert (=> d!40361 d!40355))

(assert (=> d!40361 d!40357))

(declare-fun d!40971 () Bool)

(assert (=> d!40971 (not (contains!899 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403)) lt!69409))))

(assert (=> d!40971 true))

(declare-fun _$36!333 () Unit!4135)

(assert (=> d!40971 (= (choose!826 lt!69407 lt!69406 lt!69403 lt!69409) _$36!333)))

(declare-fun bs!5560 () Bool)

(assert (= bs!5560 d!40971))

(assert (=> bs!5560 m!156389))

(assert (=> bs!5560 m!156389))

(assert (=> bs!5560 m!156393))

(assert (=> d!40361 d!40971))

(declare-fun d!40973 () Bool)

(declare-fun e!87269 () Bool)

(assert (=> d!40973 e!87269))

(declare-fun res!64459 () Bool)

(assert (=> d!40973 (=> res!64459 e!87269)))

(declare-fun lt!70103 () Bool)

(assert (=> d!40973 (= res!64459 (not lt!70103))))

(declare-fun lt!70100 () Bool)

(assert (=> d!40973 (= lt!70103 lt!70100)))

(declare-fun lt!70102 () Unit!4135)

(declare-fun e!87270 () Unit!4135)

(assert (=> d!40973 (= lt!70102 e!87270)))

(declare-fun c!24865 () Bool)

(assert (=> d!40973 (= c!24865 lt!70100)))

(assert (=> d!40973 (= lt!70100 (containsKey!176 (toList!869 lt!69407) lt!69409))))

(assert (=> d!40973 (= (contains!899 lt!69407 lt!69409) lt!70103)))

(declare-fun b!133952 () Bool)

(declare-fun lt!70101 () Unit!4135)

(assert (=> b!133952 (= e!87270 lt!70101)))

(assert (=> b!133952 (= lt!70101 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69407) lt!69409))))

(assert (=> b!133952 (isDefined!125 (getValueByKey!172 (toList!869 lt!69407) lt!69409))))

(declare-fun b!133953 () Bool)

(declare-fun Unit!4194 () Unit!4135)

(assert (=> b!133953 (= e!87270 Unit!4194)))

(declare-fun b!133954 () Bool)

(assert (=> b!133954 (= e!87269 (isDefined!125 (getValueByKey!172 (toList!869 lt!69407) lt!69409)))))

(assert (= (and d!40973 c!24865) b!133952))

(assert (= (and d!40973 (not c!24865)) b!133953))

(assert (= (and d!40973 (not res!64459)) b!133954))

(declare-fun m!158617 () Bool)

(assert (=> d!40973 m!158617))

(declare-fun m!158619 () Bool)

(assert (=> b!133952 m!158619))

(declare-fun m!158621 () Bool)

(assert (=> b!133952 m!158621))

(assert (=> b!133952 m!158621))

(declare-fun m!158623 () Bool)

(assert (=> b!133952 m!158623))

(assert (=> b!133954 m!158621))

(assert (=> b!133954 m!158621))

(assert (=> b!133954 m!158623))

(assert (=> d!40361 d!40973))

(declare-fun d!40975 () Bool)

(assert (=> d!40975 (= (apply!116 (+!175 lt!69867 (tuple2!2627 lt!69870 (minValue!2720 newMap!16))) lt!69886) (apply!116 lt!69867 lt!69886))))

(declare-fun lt!70104 () Unit!4135)

(assert (=> d!40975 (= lt!70104 (choose!822 lt!69867 lt!69870 (minValue!2720 newMap!16) lt!69886))))

(declare-fun e!87271 () Bool)

(assert (=> d!40975 e!87271))

(declare-fun res!64460 () Bool)

(assert (=> d!40975 (=> (not res!64460) (not e!87271))))

(assert (=> d!40975 (= res!64460 (contains!899 lt!69867 lt!69886))))

(assert (=> d!40975 (= (addApplyDifferent!92 lt!69867 lt!69870 (minValue!2720 newMap!16) lt!69886) lt!70104)))

(declare-fun b!133955 () Bool)

(assert (=> b!133955 (= e!87271 (not (= lt!69886 lt!69870)))))

(assert (= (and d!40975 res!64460) b!133955))

(declare-fun m!158625 () Bool)

(assert (=> d!40975 m!158625))

(assert (=> d!40975 m!157777))

(assert (=> d!40975 m!157775))

(assert (=> d!40975 m!157777))

(assert (=> d!40975 m!157785))

(declare-fun m!158627 () Bool)

(assert (=> d!40975 m!158627))

(assert (=> b!133564 d!40975))

(declare-fun d!40977 () Bool)

(declare-fun e!87272 () Bool)

(assert (=> d!40977 e!87272))

(declare-fun res!64461 () Bool)

(assert (=> d!40977 (=> res!64461 e!87272)))

(declare-fun lt!70108 () Bool)

(assert (=> d!40977 (= res!64461 (not lt!70108))))

(declare-fun lt!70105 () Bool)

(assert (=> d!40977 (= lt!70108 lt!70105)))

(declare-fun lt!70107 () Unit!4135)

(declare-fun e!87273 () Unit!4135)

(assert (=> d!40977 (= lt!70107 e!87273)))

(declare-fun c!24866 () Bool)

(assert (=> d!40977 (= c!24866 lt!70105)))

(assert (=> d!40977 (= lt!70105 (containsKey!176 (toList!869 (+!175 lt!69881 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16)))) lt!69880))))

(assert (=> d!40977 (= (contains!899 (+!175 lt!69881 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16))) lt!69880) lt!70108)))

(declare-fun b!133956 () Bool)

(declare-fun lt!70106 () Unit!4135)

(assert (=> b!133956 (= e!87273 lt!70106)))

(assert (=> b!133956 (= lt!70106 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69881 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16)))) lt!69880))))

(assert (=> b!133956 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69881 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16)))) lt!69880))))

(declare-fun b!133957 () Bool)

(declare-fun Unit!4195 () Unit!4135)

(assert (=> b!133957 (= e!87273 Unit!4195)))

(declare-fun b!133958 () Bool)

(assert (=> b!133958 (= e!87272 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69881 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16)))) lt!69880)))))

(assert (= (and d!40977 c!24866) b!133956))

(assert (= (and d!40977 (not c!24866)) b!133957))

(assert (= (and d!40977 (not res!64461)) b!133958))

(declare-fun m!158629 () Bool)

(assert (=> d!40977 m!158629))

(declare-fun m!158631 () Bool)

(assert (=> b!133956 m!158631))

(declare-fun m!158633 () Bool)

(assert (=> b!133956 m!158633))

(assert (=> b!133956 m!158633))

(declare-fun m!158635 () Bool)

(assert (=> b!133956 m!158635))

(assert (=> b!133958 m!158633))

(assert (=> b!133958 m!158633))

(assert (=> b!133958 m!158635))

(assert (=> b!133564 d!40977))

(declare-fun d!40979 () Bool)

(assert (=> d!40979 (= (apply!116 lt!69872 lt!69868) (get!1486 (getValueByKey!172 (toList!869 lt!69872) lt!69868)))))

(declare-fun bs!5561 () Bool)

(assert (= bs!5561 d!40979))

(declare-fun m!158637 () Bool)

(assert (=> bs!5561 m!158637))

(assert (=> bs!5561 m!158637))

(declare-fun m!158639 () Bool)

(assert (=> bs!5561 m!158639))

(assert (=> b!133564 d!40979))

(declare-fun d!40981 () Bool)

(assert (=> d!40981 (= (apply!116 lt!69869 lt!69882) (get!1486 (getValueByKey!172 (toList!869 lt!69869) lt!69882)))))

(declare-fun bs!5562 () Bool)

(assert (= bs!5562 d!40981))

(declare-fun m!158641 () Bool)

(assert (=> bs!5562 m!158641))

(assert (=> bs!5562 m!158641))

(declare-fun m!158643 () Bool)

(assert (=> bs!5562 m!158643))

(assert (=> b!133564 d!40981))

(declare-fun d!40983 () Bool)

(assert (=> d!40983 (= (apply!116 (+!175 lt!69869 (tuple2!2627 lt!69884 (minValue!2720 newMap!16))) lt!69882) (apply!116 lt!69869 lt!69882))))

(declare-fun lt!70109 () Unit!4135)

(assert (=> d!40983 (= lt!70109 (choose!822 lt!69869 lt!69884 (minValue!2720 newMap!16) lt!69882))))

(declare-fun e!87274 () Bool)

(assert (=> d!40983 e!87274))

(declare-fun res!64462 () Bool)

(assert (=> d!40983 (=> (not res!64462) (not e!87274))))

(assert (=> d!40983 (= res!64462 (contains!899 lt!69869 lt!69882))))

(assert (=> d!40983 (= (addApplyDifferent!92 lt!69869 lt!69884 (minValue!2720 newMap!16) lt!69882) lt!70109)))

(declare-fun b!133959 () Bool)

(assert (=> b!133959 (= e!87274 (not (= lt!69882 lt!69884)))))

(assert (= (and d!40983 res!64462) b!133959))

(declare-fun m!158645 () Bool)

(assert (=> d!40983 m!158645))

(assert (=> d!40983 m!157765))

(assert (=> d!40983 m!157781))

(assert (=> d!40983 m!157765))

(assert (=> d!40983 m!157783))

(declare-fun m!158647 () Bool)

(assert (=> d!40983 m!158647))

(assert (=> b!133564 d!40983))

(declare-fun d!40985 () Bool)

(assert (=> d!40985 (= (apply!116 (+!175 lt!69872 (tuple2!2627 lt!69874 (zeroValue!2720 newMap!16))) lt!69868) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69872 (tuple2!2627 lt!69874 (zeroValue!2720 newMap!16)))) lt!69868)))))

(declare-fun bs!5563 () Bool)

(assert (= bs!5563 d!40985))

(declare-fun m!158649 () Bool)

(assert (=> bs!5563 m!158649))

(assert (=> bs!5563 m!158649))

(declare-fun m!158651 () Bool)

(assert (=> bs!5563 m!158651))

(assert (=> b!133564 d!40985))

(declare-fun d!40987 () Bool)

(assert (=> d!40987 (contains!899 (+!175 lt!69881 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16))) lt!69880)))

(declare-fun lt!70110 () Unit!4135)

(assert (=> d!40987 (= lt!70110 (choose!823 lt!69881 lt!69875 (zeroValue!2720 newMap!16) lt!69880))))

(assert (=> d!40987 (contains!899 lt!69881 lt!69880)))

(assert (=> d!40987 (= (addStillContains!92 lt!69881 lt!69875 (zeroValue!2720 newMap!16) lt!69880) lt!70110)))

(declare-fun bs!5564 () Bool)

(assert (= bs!5564 d!40987))

(assert (=> bs!5564 m!157767))

(assert (=> bs!5564 m!157767))

(assert (=> bs!5564 m!157791))

(declare-fun m!158653 () Bool)

(assert (=> bs!5564 m!158653))

(declare-fun m!158655 () Bool)

(assert (=> bs!5564 m!158655))

(assert (=> b!133564 d!40987))

(declare-fun d!40989 () Bool)

(assert (=> d!40989 (= (apply!116 (+!175 lt!69872 (tuple2!2627 lt!69874 (zeroValue!2720 newMap!16))) lt!69868) (apply!116 lt!69872 lt!69868))))

(declare-fun lt!70111 () Unit!4135)

(assert (=> d!40989 (= lt!70111 (choose!822 lt!69872 lt!69874 (zeroValue!2720 newMap!16) lt!69868))))

(declare-fun e!87275 () Bool)

(assert (=> d!40989 e!87275))

(declare-fun res!64463 () Bool)

(assert (=> d!40989 (=> (not res!64463) (not e!87275))))

(assert (=> d!40989 (= res!64463 (contains!899 lt!69872 lt!69868))))

(assert (=> d!40989 (= (addApplyDifferent!92 lt!69872 lt!69874 (zeroValue!2720 newMap!16) lt!69868) lt!70111)))

(declare-fun b!133960 () Bool)

(assert (=> b!133960 (= e!87275 (not (= lt!69868 lt!69874)))))

(assert (= (and d!40989 res!64463) b!133960))

(declare-fun m!158657 () Bool)

(assert (=> d!40989 m!158657))

(assert (=> d!40989 m!157769))

(assert (=> d!40989 m!157789))

(assert (=> d!40989 m!157769))

(assert (=> d!40989 m!157771))

(declare-fun m!158659 () Bool)

(assert (=> d!40989 m!158659))

(assert (=> b!133564 d!40989))

(declare-fun b!133961 () Bool)

(declare-fun e!87277 () Bool)

(declare-fun e!87280 () Bool)

(assert (=> b!133961 (= e!87277 e!87280)))

(declare-fun c!24867 () Bool)

(declare-fun e!87282 () Bool)

(assert (=> b!133961 (= c!24867 e!87282)))

(declare-fun res!64467 () Bool)

(assert (=> b!133961 (=> (not res!64467) (not e!87282))))

(assert (=> b!133961 (= res!64467 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133962 () Bool)

(declare-fun e!87281 () Bool)

(declare-fun lt!70117 () ListLongMap!1707)

(assert (=> b!133962 (= e!87281 (isEmpty!410 lt!70117))))

(declare-fun b!133963 () Bool)

(declare-fun lt!70113 () Unit!4135)

(declare-fun lt!70114 () Unit!4135)

(assert (=> b!133963 (= lt!70113 lt!70114)))

(declare-fun lt!70112 () V!3483)

(declare-fun lt!70116 () ListLongMap!1707)

(declare-fun lt!70115 () (_ BitVec 64))

(declare-fun lt!70118 () (_ BitVec 64))

(assert (=> b!133963 (not (contains!899 (+!175 lt!70116 (tuple2!2627 lt!70115 lt!70112)) lt!70118))))

(assert (=> b!133963 (= lt!70114 (addStillNotContains!61 lt!70116 lt!70115 lt!70112 lt!70118))))

(assert (=> b!133963 (= lt!70118 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133963 (= lt!70112 (get!1482 (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133963 (= lt!70115 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!14781 () ListLongMap!1707)

(assert (=> b!133963 (= lt!70116 call!14781)))

(declare-fun e!87279 () ListLongMap!1707)

(assert (=> b!133963 (= e!87279 (+!175 call!14781 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133964 () Bool)

(assert (=> b!133964 (= e!87280 e!87281)))

(declare-fun c!24870 () Bool)

(assert (=> b!133964 (= c!24870 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!133965 () Bool)

(assert (=> b!133965 (= e!87282 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133965 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!133966 () Bool)

(declare-fun res!64465 () Bool)

(assert (=> b!133966 (=> (not res!64465) (not e!87277))))

(assert (=> b!133966 (= res!64465 (not (contains!899 lt!70117 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133967 () Bool)

(assert (=> b!133967 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> b!133967 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))))))

(declare-fun e!87276 () Bool)

(assert (=> b!133967 (= e!87276 (= (apply!116 lt!70117 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!40991 () Bool)

(assert (=> d!40991 e!87277))

(declare-fun res!64466 () Bool)

(assert (=> d!40991 (=> (not res!64466) (not e!87277))))

(assert (=> d!40991 (= res!64466 (not (contains!899 lt!70117 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87278 () ListLongMap!1707)

(assert (=> d!40991 (= lt!70117 e!87278)))

(declare-fun c!24868 () Bool)

(assert (=> d!40991 (= c!24868 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!40991 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!40991 (= (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!70117)))

(declare-fun b!133968 () Bool)

(assert (=> b!133968 (= e!87279 call!14781)))

(declare-fun bm!14778 () Bool)

(assert (=> bm!14778 (= call!14781 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!133969 () Bool)

(assert (=> b!133969 (= e!87280 e!87276)))

(assert (=> b!133969 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64464 () Bool)

(assert (=> b!133969 (= res!64464 (contains!899 lt!70117 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133969 (=> (not res!64464) (not e!87276))))

(declare-fun b!133970 () Bool)

(assert (=> b!133970 (= e!87278 (ListLongMap!1708 Nil!1713))))

(declare-fun b!133971 () Bool)

(assert (=> b!133971 (= e!87281 (= lt!70117 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!133972 () Bool)

(assert (=> b!133972 (= e!87278 e!87279)))

(declare-fun c!24869 () Bool)

(assert (=> b!133972 (= c!24869 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!40991 c!24868) b!133970))

(assert (= (and d!40991 (not c!24868)) b!133972))

(assert (= (and b!133972 c!24869) b!133963))

(assert (= (and b!133972 (not c!24869)) b!133968))

(assert (= (or b!133963 b!133968) bm!14778))

(assert (= (and d!40991 res!64466) b!133966))

(assert (= (and b!133966 res!64465) b!133961))

(assert (= (and b!133961 res!64467) b!133965))

(assert (= (and b!133961 c!24867) b!133969))

(assert (= (and b!133961 (not c!24867)) b!133964))

(assert (= (and b!133969 res!64464) b!133967))

(assert (= (and b!133964 c!24870) b!133971))

(assert (= (and b!133964 (not c!24870)) b!133962))

(declare-fun b_lambda!5985 () Bool)

(assert (=> (not b_lambda!5985) (not b!133963)))

(assert (=> b!133963 t!6176))

(declare-fun b_and!8311 () Bool)

(assert (= b_and!8307 (and (=> t!6176 result!3997) b_and!8311)))

(assert (=> b!133963 t!6178))

(declare-fun b_and!8313 () Bool)

(assert (= b_and!8309 (and (=> t!6178 result!3999) b_and!8313)))

(declare-fun b_lambda!5987 () Bool)

(assert (=> (not b_lambda!5987) (not b!133967)))

(assert (=> b!133967 t!6176))

(declare-fun b_and!8315 () Bool)

(assert (= b_and!8311 (and (=> t!6176 result!3997) b_and!8315)))

(assert (=> b!133967 t!6178))

(declare-fun b_and!8317 () Bool)

(assert (= b_and!8313 (and (=> t!6178 result!3999) b_and!8317)))

(declare-fun m!158661 () Bool)

(assert (=> b!133962 m!158661))

(declare-fun m!158663 () Bool)

(assert (=> d!40991 m!158663))

(assert (=> d!40991 m!156157))

(declare-fun m!158665 () Bool)

(assert (=> b!133966 m!158665))

(assert (=> b!133972 m!156163))

(assert (=> b!133972 m!156163))

(assert (=> b!133972 m!156165))

(assert (=> b!133965 m!156163))

(assert (=> b!133965 m!156163))

(assert (=> b!133965 m!156165))

(assert (=> b!133967 m!156175))

(assert (=> b!133967 m!157755))

(assert (=> b!133967 m!156175))

(assert (=> b!133967 m!157757))

(assert (=> b!133967 m!157755))

(assert (=> b!133967 m!156163))

(declare-fun m!158667 () Bool)

(assert (=> b!133967 m!158667))

(assert (=> b!133967 m!156163))

(assert (=> b!133969 m!156163))

(assert (=> b!133969 m!156163))

(declare-fun m!158669 () Bool)

(assert (=> b!133969 m!158669))

(declare-fun m!158671 () Bool)

(assert (=> b!133971 m!158671))

(assert (=> bm!14778 m!158671))

(assert (=> b!133963 m!156175))

(assert (=> b!133963 m!157755))

(assert (=> b!133963 m!156175))

(assert (=> b!133963 m!157757))

(declare-fun m!158673 () Bool)

(assert (=> b!133963 m!158673))

(declare-fun m!158675 () Bool)

(assert (=> b!133963 m!158675))

(assert (=> b!133963 m!157755))

(declare-fun m!158677 () Bool)

(assert (=> b!133963 m!158677))

(assert (=> b!133963 m!156163))

(assert (=> b!133963 m!158675))

(declare-fun m!158679 () Bool)

(assert (=> b!133963 m!158679))

(assert (=> b!133564 d!40991))

(declare-fun d!40993 () Bool)

(declare-fun e!87283 () Bool)

(assert (=> d!40993 e!87283))

(declare-fun res!64469 () Bool)

(assert (=> d!40993 (=> (not res!64469) (not e!87283))))

(declare-fun lt!70119 () ListLongMap!1707)

(assert (=> d!40993 (= res!64469 (contains!899 lt!70119 (_1!1324 (tuple2!2627 lt!69884 (minValue!2720 newMap!16)))))))

(declare-fun lt!70121 () List!1716)

(assert (=> d!40993 (= lt!70119 (ListLongMap!1708 lt!70121))))

(declare-fun lt!70122 () Unit!4135)

(declare-fun lt!70120 () Unit!4135)

(assert (=> d!40993 (= lt!70122 lt!70120)))

(assert (=> d!40993 (= (getValueByKey!172 lt!70121 (_1!1324 (tuple2!2627 lt!69884 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69884 (minValue!2720 newMap!16)))))))

(assert (=> d!40993 (= lt!70120 (lemmaContainsTupThenGetReturnValue!87 lt!70121 (_1!1324 (tuple2!2627 lt!69884 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69884 (minValue!2720 newMap!16)))))))

(assert (=> d!40993 (= lt!70121 (insertStrictlySorted!90 (toList!869 lt!69869) (_1!1324 (tuple2!2627 lt!69884 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69884 (minValue!2720 newMap!16)))))))

(assert (=> d!40993 (= (+!175 lt!69869 (tuple2!2627 lt!69884 (minValue!2720 newMap!16))) lt!70119)))

(declare-fun b!133973 () Bool)

(declare-fun res!64468 () Bool)

(assert (=> b!133973 (=> (not res!64468) (not e!87283))))

(assert (=> b!133973 (= res!64468 (= (getValueByKey!172 (toList!869 lt!70119) (_1!1324 (tuple2!2627 lt!69884 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69884 (minValue!2720 newMap!16))))))))

(declare-fun b!133974 () Bool)

(assert (=> b!133974 (= e!87283 (contains!902 (toList!869 lt!70119) (tuple2!2627 lt!69884 (minValue!2720 newMap!16))))))

(assert (= (and d!40993 res!64469) b!133973))

(assert (= (and b!133973 res!64468) b!133974))

(declare-fun m!158681 () Bool)

(assert (=> d!40993 m!158681))

(declare-fun m!158683 () Bool)

(assert (=> d!40993 m!158683))

(declare-fun m!158685 () Bool)

(assert (=> d!40993 m!158685))

(declare-fun m!158687 () Bool)

(assert (=> d!40993 m!158687))

(declare-fun m!158689 () Bool)

(assert (=> b!133973 m!158689))

(declare-fun m!158691 () Bool)

(assert (=> b!133974 m!158691))

(assert (=> b!133564 d!40993))

(declare-fun d!40995 () Bool)

(assert (=> d!40995 (= (apply!116 lt!69867 lt!69886) (get!1486 (getValueByKey!172 (toList!869 lt!69867) lt!69886)))))

(declare-fun bs!5565 () Bool)

(assert (= bs!5565 d!40995))

(declare-fun m!158693 () Bool)

(assert (=> bs!5565 m!158693))

(assert (=> bs!5565 m!158693))

(declare-fun m!158695 () Bool)

(assert (=> bs!5565 m!158695))

(assert (=> b!133564 d!40995))

(declare-fun d!40997 () Bool)

(declare-fun e!87284 () Bool)

(assert (=> d!40997 e!87284))

(declare-fun res!64471 () Bool)

(assert (=> d!40997 (=> (not res!64471) (not e!87284))))

(declare-fun lt!70123 () ListLongMap!1707)

(assert (=> d!40997 (= res!64471 (contains!899 lt!70123 (_1!1324 (tuple2!2627 lt!69874 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70125 () List!1716)

(assert (=> d!40997 (= lt!70123 (ListLongMap!1708 lt!70125))))

(declare-fun lt!70126 () Unit!4135)

(declare-fun lt!70124 () Unit!4135)

(assert (=> d!40997 (= lt!70126 lt!70124)))

(assert (=> d!40997 (= (getValueByKey!172 lt!70125 (_1!1324 (tuple2!2627 lt!69874 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69874 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40997 (= lt!70124 (lemmaContainsTupThenGetReturnValue!87 lt!70125 (_1!1324 (tuple2!2627 lt!69874 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69874 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40997 (= lt!70125 (insertStrictlySorted!90 (toList!869 lt!69872) (_1!1324 (tuple2!2627 lt!69874 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69874 (zeroValue!2720 newMap!16)))))))

(assert (=> d!40997 (= (+!175 lt!69872 (tuple2!2627 lt!69874 (zeroValue!2720 newMap!16))) lt!70123)))

(declare-fun b!133975 () Bool)

(declare-fun res!64470 () Bool)

(assert (=> b!133975 (=> (not res!64470) (not e!87284))))

(assert (=> b!133975 (= res!64470 (= (getValueByKey!172 (toList!869 lt!70123) (_1!1324 (tuple2!2627 lt!69874 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69874 (zeroValue!2720 newMap!16))))))))

(declare-fun b!133976 () Bool)

(assert (=> b!133976 (= e!87284 (contains!902 (toList!869 lt!70123) (tuple2!2627 lt!69874 (zeroValue!2720 newMap!16))))))

(assert (= (and d!40997 res!64471) b!133975))

(assert (= (and b!133975 res!64470) b!133976))

(declare-fun m!158697 () Bool)

(assert (=> d!40997 m!158697))

(declare-fun m!158699 () Bool)

(assert (=> d!40997 m!158699))

(declare-fun m!158701 () Bool)

(assert (=> d!40997 m!158701))

(declare-fun m!158703 () Bool)

(assert (=> d!40997 m!158703))

(declare-fun m!158705 () Bool)

(assert (=> b!133975 m!158705))

(declare-fun m!158707 () Bool)

(assert (=> b!133976 m!158707))

(assert (=> b!133564 d!40997))

(declare-fun d!40999 () Bool)

(assert (=> d!40999 (= (apply!116 (+!175 lt!69867 (tuple2!2627 lt!69870 (minValue!2720 newMap!16))) lt!69886) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69867 (tuple2!2627 lt!69870 (minValue!2720 newMap!16)))) lt!69886)))))

(declare-fun bs!5566 () Bool)

(assert (= bs!5566 d!40999))

(declare-fun m!158709 () Bool)

(assert (=> bs!5566 m!158709))

(assert (=> bs!5566 m!158709))

(declare-fun m!158711 () Bool)

(assert (=> bs!5566 m!158711))

(assert (=> b!133564 d!40999))

(declare-fun d!41001 () Bool)

(declare-fun e!87285 () Bool)

(assert (=> d!41001 e!87285))

(declare-fun res!64473 () Bool)

(assert (=> d!41001 (=> (not res!64473) (not e!87285))))

(declare-fun lt!70127 () ListLongMap!1707)

(assert (=> d!41001 (= res!64473 (contains!899 lt!70127 (_1!1324 (tuple2!2627 lt!69870 (minValue!2720 newMap!16)))))))

(declare-fun lt!70129 () List!1716)

(assert (=> d!41001 (= lt!70127 (ListLongMap!1708 lt!70129))))

(declare-fun lt!70130 () Unit!4135)

(declare-fun lt!70128 () Unit!4135)

(assert (=> d!41001 (= lt!70130 lt!70128)))

(assert (=> d!41001 (= (getValueByKey!172 lt!70129 (_1!1324 (tuple2!2627 lt!69870 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69870 (minValue!2720 newMap!16)))))))

(assert (=> d!41001 (= lt!70128 (lemmaContainsTupThenGetReturnValue!87 lt!70129 (_1!1324 (tuple2!2627 lt!69870 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69870 (minValue!2720 newMap!16)))))))

(assert (=> d!41001 (= lt!70129 (insertStrictlySorted!90 (toList!869 lt!69867) (_1!1324 (tuple2!2627 lt!69870 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69870 (minValue!2720 newMap!16)))))))

(assert (=> d!41001 (= (+!175 lt!69867 (tuple2!2627 lt!69870 (minValue!2720 newMap!16))) lt!70127)))

(declare-fun b!133977 () Bool)

(declare-fun res!64472 () Bool)

(assert (=> b!133977 (=> (not res!64472) (not e!87285))))

(assert (=> b!133977 (= res!64472 (= (getValueByKey!172 (toList!869 lt!70127) (_1!1324 (tuple2!2627 lt!69870 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69870 (minValue!2720 newMap!16))))))))

(declare-fun b!133978 () Bool)

(assert (=> b!133978 (= e!87285 (contains!902 (toList!869 lt!70127) (tuple2!2627 lt!69870 (minValue!2720 newMap!16))))))

(assert (= (and d!41001 res!64473) b!133977))

(assert (= (and b!133977 res!64472) b!133978))

(declare-fun m!158713 () Bool)

(assert (=> d!41001 m!158713))

(declare-fun m!158715 () Bool)

(assert (=> d!41001 m!158715))

(declare-fun m!158717 () Bool)

(assert (=> d!41001 m!158717))

(declare-fun m!158719 () Bool)

(assert (=> d!41001 m!158719))

(declare-fun m!158721 () Bool)

(assert (=> b!133977 m!158721))

(declare-fun m!158723 () Bool)

(assert (=> b!133978 m!158723))

(assert (=> b!133564 d!41001))

(declare-fun d!41003 () Bool)

(assert (=> d!41003 (= (apply!116 (+!175 lt!69869 (tuple2!2627 lt!69884 (minValue!2720 newMap!16))) lt!69882) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69869 (tuple2!2627 lt!69884 (minValue!2720 newMap!16)))) lt!69882)))))

(declare-fun bs!5567 () Bool)

(assert (= bs!5567 d!41003))

(declare-fun m!158725 () Bool)

(assert (=> bs!5567 m!158725))

(assert (=> bs!5567 m!158725))

(declare-fun m!158727 () Bool)

(assert (=> bs!5567 m!158727))

(assert (=> b!133564 d!41003))

(declare-fun d!41005 () Bool)

(declare-fun e!87286 () Bool)

(assert (=> d!41005 e!87286))

(declare-fun res!64475 () Bool)

(assert (=> d!41005 (=> (not res!64475) (not e!87286))))

(declare-fun lt!70131 () ListLongMap!1707)

(assert (=> d!41005 (= res!64475 (contains!899 lt!70131 (_1!1324 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70133 () List!1716)

(assert (=> d!41005 (= lt!70131 (ListLongMap!1708 lt!70133))))

(declare-fun lt!70134 () Unit!4135)

(declare-fun lt!70132 () Unit!4135)

(assert (=> d!41005 (= lt!70134 lt!70132)))

(assert (=> d!41005 (= (getValueByKey!172 lt!70133 (_1!1324 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41005 (= lt!70132 (lemmaContainsTupThenGetReturnValue!87 lt!70133 (_1!1324 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41005 (= lt!70133 (insertStrictlySorted!90 (toList!869 lt!69881) (_1!1324 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41005 (= (+!175 lt!69881 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16))) lt!70131)))

(declare-fun b!133979 () Bool)

(declare-fun res!64474 () Bool)

(assert (=> b!133979 (=> (not res!64474) (not e!87286))))

(assert (=> b!133979 (= res!64474 (= (getValueByKey!172 (toList!869 lt!70131) (_1!1324 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16))))))))

(declare-fun b!133980 () Bool)

(assert (=> b!133980 (= e!87286 (contains!902 (toList!869 lt!70131) (tuple2!2627 lt!69875 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41005 res!64475) b!133979))

(assert (= (and b!133979 res!64474) b!133980))

(declare-fun m!158729 () Bool)

(assert (=> d!41005 m!158729))

(declare-fun m!158731 () Bool)

(assert (=> d!41005 m!158731))

(declare-fun m!158733 () Bool)

(assert (=> d!41005 m!158733))

(declare-fun m!158735 () Bool)

(assert (=> d!41005 m!158735))

(declare-fun m!158737 () Bool)

(assert (=> b!133979 m!158737))

(declare-fun m!158739 () Bool)

(assert (=> b!133980 m!158739))

(assert (=> b!133564 d!41005))

(declare-fun lt!70135 () Bool)

(declare-fun d!41007 () Bool)

(assert (=> d!41007 (= lt!70135 (select (content!133 lt!69424) (tuple2!2627 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!87288 () Bool)

(assert (=> d!41007 (= lt!70135 e!87288)))

(declare-fun res!64476 () Bool)

(assert (=> d!41007 (=> (not res!64476) (not e!87288))))

(assert (=> d!41007 (= res!64476 ((_ is Cons!1712) lt!69424))))

(assert (=> d!41007 (= (contains!902 lt!69424 (tuple2!2627 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!70135)))

(declare-fun b!133981 () Bool)

(declare-fun e!87287 () Bool)

(assert (=> b!133981 (= e!87288 e!87287)))

(declare-fun res!64477 () Bool)

(assert (=> b!133981 (=> res!64477 e!87287)))

(assert (=> b!133981 (= res!64477 (= (h!2317 lt!69424) (tuple2!2627 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!133982 () Bool)

(assert (=> b!133982 (= e!87287 (contains!902 (t!6167 lt!69424) (tuple2!2627 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!41007 res!64476) b!133981))

(assert (= (and b!133981 (not res!64477)) b!133982))

(declare-fun m!158741 () Bool)

(assert (=> d!41007 m!158741))

(declare-fun m!158743 () Bool)

(assert (=> d!41007 m!158743))

(declare-fun m!158745 () Bool)

(assert (=> b!133982 m!158745))

(assert (=> b!133498 d!41007))

(declare-fun lt!70136 () Bool)

(declare-fun d!41009 () Bool)

(assert (=> d!41009 (= lt!70136 (select (content!133 lt!69379) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87290 () Bool)

(assert (=> d!41009 (= lt!70136 e!87290)))

(declare-fun res!64478 () Bool)

(assert (=> d!41009 (=> (not res!64478) (not e!87290))))

(assert (=> d!41009 (= res!64478 ((_ is Cons!1712) lt!69379))))

(assert (=> d!41009 (= (contains!902 lt!69379 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!70136)))

(declare-fun b!133983 () Bool)

(declare-fun e!87289 () Bool)

(assert (=> b!133983 (= e!87290 e!87289)))

(declare-fun res!64479 () Bool)

(assert (=> b!133983 (=> res!64479 e!87289)))

(assert (=> b!133983 (= res!64479 (= (h!2317 lt!69379) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!133984 () Bool)

(assert (=> b!133984 (= e!87289 (contains!902 (t!6167 lt!69379) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!41009 res!64478) b!133983))

(assert (= (and b!133983 (not res!64479)) b!133984))

(declare-fun m!158747 () Bool)

(assert (=> d!41009 m!158747))

(declare-fun m!158749 () Bool)

(assert (=> d!41009 m!158749))

(declare-fun m!158751 () Bool)

(assert (=> b!133984 m!158751))

(assert (=> b!133130 d!41009))

(assert (=> b!133481 d!40203))

(declare-fun d!41011 () Bool)

(declare-fun e!87291 () Bool)

(assert (=> d!41011 e!87291))

(declare-fun res!64480 () Bool)

(assert (=> d!41011 (=> res!64480 e!87291)))

(declare-fun lt!70140 () Bool)

(assert (=> d!41011 (= res!64480 (not lt!70140))))

(declare-fun lt!70137 () Bool)

(assert (=> d!41011 (= lt!70140 lt!70137)))

(declare-fun lt!70139 () Unit!4135)

(declare-fun e!87292 () Unit!4135)

(assert (=> d!41011 (= lt!70139 e!87292)))

(declare-fun c!24871 () Bool)

(assert (=> d!41011 (= c!24871 lt!70137)))

(assert (=> d!41011 (= lt!70137 (containsKey!176 (toList!869 lt!69992) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41011 (= (contains!899 lt!69992 (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) lt!70140)))

(declare-fun b!133985 () Bool)

(declare-fun lt!70138 () Unit!4135)

(assert (=> b!133985 (= e!87292 lt!70138)))

(assert (=> b!133985 (= lt!70138 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69992) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))

(assert (=> b!133985 (isDefined!125 (getValueByKey!172 (toList!869 lt!69992) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))

(declare-fun b!133986 () Bool)

(declare-fun Unit!4196 () Unit!4135)

(assert (=> b!133986 (= e!87292 Unit!4196)))

(declare-fun b!133987 () Bool)

(assert (=> b!133987 (= e!87291 (isDefined!125 (getValueByKey!172 (toList!869 lt!69992) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!41011 c!24871) b!133985))

(assert (= (and d!41011 (not c!24871)) b!133986))

(assert (= (and d!41011 (not res!64480)) b!133987))

(declare-fun m!158753 () Bool)

(assert (=> d!41011 m!158753))

(declare-fun m!158755 () Bool)

(assert (=> b!133985 m!158755))

(assert (=> b!133985 m!158165))

(assert (=> b!133985 m!158165))

(declare-fun m!158757 () Bool)

(assert (=> b!133985 m!158757))

(assert (=> b!133987 m!158165))

(assert (=> b!133987 m!158165))

(assert (=> b!133987 m!158757))

(assert (=> d!40783 d!41011))

(declare-fun b!133990 () Bool)

(declare-fun e!87294 () Option!178)

(assert (=> b!133990 (= e!87294 (getValueByKey!172 (t!6167 lt!69994) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))

(declare-fun b!133991 () Bool)

(assert (=> b!133991 (= e!87294 None!176)))

(declare-fun d!41013 () Bool)

(declare-fun c!24872 () Bool)

(assert (=> d!41013 (= c!24872 (and ((_ is Cons!1712) lt!69994) (= (_1!1324 (h!2317 lt!69994)) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))))))

(declare-fun e!87293 () Option!178)

(assert (=> d!41013 (= (getValueByKey!172 lt!69994 (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) e!87293)))

(declare-fun b!133988 () Bool)

(assert (=> b!133988 (= e!87293 (Some!177 (_2!1324 (h!2317 lt!69994))))))

(declare-fun b!133989 () Bool)

(assert (=> b!133989 (= e!87293 e!87294)))

(declare-fun c!24873 () Bool)

(assert (=> b!133989 (= c!24873 (and ((_ is Cons!1712) lt!69994) (not (= (_1!1324 (h!2317 lt!69994)) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!41013 c!24872) b!133988))

(assert (= (and d!41013 (not c!24872)) b!133989))

(assert (= (and b!133989 c!24873) b!133990))

(assert (= (and b!133989 (not c!24873)) b!133991))

(declare-fun m!158759 () Bool)

(assert (=> b!133990 m!158759))

(assert (=> d!40783 d!41013))

(declare-fun d!41015 () Bool)

(assert (=> d!41015 (= (getValueByKey!172 lt!69994 (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70141 () Unit!4135)

(assert (=> d!41015 (= lt!70141 (choose!827 lt!69994 (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))

(declare-fun e!87295 () Bool)

(assert (=> d!41015 e!87295))

(declare-fun res!64481 () Bool)

(assert (=> d!41015 (=> (not res!64481) (not e!87295))))

(assert (=> d!41015 (= res!64481 (isStrictlySorted!322 lt!69994))))

(assert (=> d!41015 (= (lemmaContainsTupThenGetReturnValue!87 lt!69994 (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) lt!70141)))

(declare-fun b!133992 () Bool)

(declare-fun res!64482 () Bool)

(assert (=> b!133992 (=> (not res!64482) (not e!87295))))

(assert (=> b!133992 (= res!64482 (containsKey!176 lt!69994 (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))

(declare-fun b!133993 () Bool)

(assert (=> b!133993 (= e!87295 (contains!902 lt!69994 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!41015 res!64481) b!133992))

(assert (= (and b!133992 res!64482) b!133993))

(assert (=> d!41015 m!158159))

(declare-fun m!158761 () Bool)

(assert (=> d!41015 m!158761))

(declare-fun m!158763 () Bool)

(assert (=> d!41015 m!158763))

(declare-fun m!158765 () Bool)

(assert (=> b!133992 m!158765))

(declare-fun m!158767 () Bool)

(assert (=> b!133993 m!158767))

(assert (=> d!40783 d!41015))

(declare-fun bm!14779 () Bool)

(declare-fun call!14783 () List!1716)

(declare-fun call!14784 () List!1716)

(assert (=> bm!14779 (= call!14783 call!14784)))

(declare-fun d!41017 () Bool)

(declare-fun e!87299 () Bool)

(assert (=> d!41017 e!87299))

(declare-fun res!64484 () Bool)

(assert (=> d!41017 (=> (not res!64484) (not e!87299))))

(declare-fun lt!70142 () List!1716)

(assert (=> d!41017 (= res!64484 (isStrictlySorted!322 lt!70142))))

(declare-fun e!87297 () List!1716)

(assert (=> d!41017 (= lt!70142 e!87297)))

(declare-fun c!24877 () Bool)

(assert (=> d!41017 (= c!24877 (and ((_ is Cons!1712) (toList!869 lt!69260)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69260))) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))))))

(assert (=> d!41017 (isStrictlySorted!322 (toList!869 lt!69260))))

(assert (=> d!41017 (= (insertStrictlySorted!90 (toList!869 lt!69260) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) lt!70142)))

(declare-fun b!133994 () Bool)

(assert (=> b!133994 (= e!87299 (contains!902 lt!70142 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))))))

(declare-fun b!133995 () Bool)

(declare-fun c!24875 () Bool)

(assert (=> b!133995 (= c!24875 (and ((_ is Cons!1712) (toList!869 lt!69260)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69260))) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))))))

(declare-fun e!87298 () List!1716)

(declare-fun e!87300 () List!1716)

(assert (=> b!133995 (= e!87298 e!87300)))

(declare-fun b!133996 () Bool)

(declare-fun e!87296 () List!1716)

(assert (=> b!133996 (= e!87296 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69260)) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))

(declare-fun b!133997 () Bool)

(assert (=> b!133997 (= e!87298 call!14783)))

(declare-fun b!133998 () Bool)

(declare-fun call!14782 () List!1716)

(assert (=> b!133998 (= e!87300 call!14782)))

(declare-fun c!24874 () Bool)

(declare-fun b!133999 () Bool)

(assert (=> b!133999 (= e!87296 (ite c!24874 (t!6167 (toList!869 lt!69260)) (ite c!24875 (Cons!1712 (h!2317 (toList!869 lt!69260)) (t!6167 (toList!869 lt!69260))) Nil!1713)))))

(declare-fun b!134000 () Bool)

(assert (=> b!134000 (= e!87300 call!14782)))

(declare-fun b!134001 () Bool)

(assert (=> b!134001 (= e!87297 call!14784)))

(declare-fun bm!14780 () Bool)

(assert (=> bm!14780 (= call!14784 ($colon$colon!92 e!87296 (ite c!24877 (h!2317 (toList!869 lt!69260)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))))

(declare-fun c!24876 () Bool)

(assert (=> bm!14780 (= c!24876 c!24877)))

(declare-fun bm!14781 () Bool)

(assert (=> bm!14781 (= call!14782 call!14783)))

(declare-fun b!134002 () Bool)

(declare-fun res!64483 () Bool)

(assert (=> b!134002 (=> (not res!64483) (not e!87299))))

(assert (=> b!134002 (= res!64483 (containsKey!176 lt!70142 (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))

(declare-fun b!134003 () Bool)

(assert (=> b!134003 (= e!87297 e!87298)))

(assert (=> b!134003 (= c!24874 (and ((_ is Cons!1712) (toList!869 lt!69260)) (= (_1!1324 (h!2317 (toList!869 lt!69260))) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!41017 c!24877) b!134001))

(assert (= (and d!41017 (not c!24877)) b!134003))

(assert (= (and b!134003 c!24874) b!133997))

(assert (= (and b!134003 (not c!24874)) b!133995))

(assert (= (and b!133995 c!24875) b!133998))

(assert (= (and b!133995 (not c!24875)) b!134000))

(assert (= (or b!133998 b!134000) bm!14781))

(assert (= (or b!133997 bm!14781) bm!14779))

(assert (= (or b!134001 bm!14779) bm!14780))

(assert (= (and bm!14780 c!24876) b!133996))

(assert (= (and bm!14780 (not c!24876)) b!133999))

(assert (= (and d!41017 res!64484) b!134002))

(assert (= (and b!134002 res!64483) b!133994))

(declare-fun m!158769 () Bool)

(assert (=> d!41017 m!158769))

(declare-fun m!158771 () Bool)

(assert (=> d!41017 m!158771))

(declare-fun m!158773 () Bool)

(assert (=> bm!14780 m!158773))

(declare-fun m!158775 () Bool)

(assert (=> b!133996 m!158775))

(declare-fun m!158777 () Bool)

(assert (=> b!133994 m!158777))

(declare-fun m!158779 () Bool)

(assert (=> b!134002 m!158779))

(assert (=> d!40783 d!41017))

(assert (=> d!40413 d!40221))

(declare-fun b!134004 () Bool)

(declare-fun e!87302 () (_ BitVec 32))

(declare-fun e!87301 () (_ BitVec 32))

(assert (=> b!134004 (= e!87302 e!87301)))

(declare-fun c!24878 () Bool)

(assert (=> b!134004 (= c!24878 (validKeyInArray!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134005 () Bool)

(declare-fun call!14785 () (_ BitVec 32))

(assert (=> b!134005 (= e!87301 (bvadd #b00000000000000000000000000000001 call!14785))))

(declare-fun b!134006 () Bool)

(assert (=> b!134006 (= e!87301 call!14785)))

(declare-fun d!41019 () Bool)

(declare-fun lt!70143 () (_ BitVec 32))

(assert (=> d!41019 (and (bvsge lt!70143 #b00000000000000000000000000000000) (bvsle lt!70143 (bvsub (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!41019 (= lt!70143 e!87302)))

(declare-fun c!24879 () Bool)

(assert (=> d!41019 (= c!24879 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!41019 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2530 (_keys!4614 newMap!16)) (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(assert (=> d!41019 (= (arrayCountValidKeys!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))) lt!70143)))

(declare-fun b!134007 () Bool)

(assert (=> b!134007 (= e!87302 #b00000000000000000000000000000000)))

(declare-fun bm!14782 () Bool)

(assert (=> bm!14782 (= call!14785 (arrayCountValidKeys!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (= (and d!41019 c!24879) b!134007))

(assert (= (and d!41019 (not c!24879)) b!134004))

(assert (= (and b!134004 c!24878) b!134005))

(assert (= (and b!134004 (not c!24878)) b!134006))

(assert (= (or b!134005 b!134006) bm!14782))

(declare-fun m!158781 () Bool)

(assert (=> b!134004 m!158781))

(assert (=> b!134004 m!158781))

(declare-fun m!158783 () Bool)

(assert (=> b!134004 m!158783))

(declare-fun m!158785 () Bool)

(assert (=> bm!14782 m!158785))

(assert (=> bm!14719 d!41019))

(declare-fun d!41021 () Bool)

(assert (=> d!41021 (isDefined!125 (getValueByKey!172 (toList!869 lt!69408) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70144 () Unit!4135)

(assert (=> d!41021 (= lt!70144 (choose!817 (toList!869 lt!69408) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87303 () Bool)

(assert (=> d!41021 e!87303))

(declare-fun res!64485 () Bool)

(assert (=> d!41021 (=> (not res!64485) (not e!87303))))

(assert (=> d!41021 (= res!64485 (isStrictlySorted!322 (toList!869 lt!69408)))))

(assert (=> d!41021 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69408) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70144)))

(declare-fun b!134008 () Bool)

(assert (=> b!134008 (= e!87303 (containsKey!176 (toList!869 lt!69408) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41021 res!64485) b!134008))

(assert (=> d!41021 m!156705))

(assert (=> d!41021 m!156705))

(assert (=> d!41021 m!156707))

(declare-fun m!158787 () Bool)

(assert (=> d!41021 m!158787))

(declare-fun m!158789 () Bool)

(assert (=> d!41021 m!158789))

(assert (=> b!134008 m!156701))

(assert (=> b!132991 d!41021))

(declare-fun d!41023 () Bool)

(assert (=> d!41023 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69408) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69408) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5568 () Bool)

(assert (= bs!5568 d!41023))

(assert (=> bs!5568 m!156705))

(declare-fun m!158791 () Bool)

(assert (=> bs!5568 m!158791))

(assert (=> b!132991 d!41023))

(declare-fun b!134011 () Bool)

(declare-fun e!87305 () Option!178)

(assert (=> b!134011 (= e!87305 (getValueByKey!172 (t!6167 (toList!869 lt!69408)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134012 () Bool)

(assert (=> b!134012 (= e!87305 None!176)))

(declare-fun d!41025 () Bool)

(declare-fun c!24880 () Bool)

(assert (=> d!41025 (= c!24880 (and ((_ is Cons!1712) (toList!869 lt!69408)) (= (_1!1324 (h!2317 (toList!869 lt!69408))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87304 () Option!178)

(assert (=> d!41025 (= (getValueByKey!172 (toList!869 lt!69408) #b0000000000000000000000000000000000000000000000000000000000000000) e!87304)))

(declare-fun b!134009 () Bool)

(assert (=> b!134009 (= e!87304 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69408)))))))

(declare-fun b!134010 () Bool)

(assert (=> b!134010 (= e!87304 e!87305)))

(declare-fun c!24881 () Bool)

(assert (=> b!134010 (= c!24881 (and ((_ is Cons!1712) (toList!869 lt!69408)) (not (= (_1!1324 (h!2317 (toList!869 lt!69408))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!41025 c!24880) b!134009))

(assert (= (and d!41025 (not c!24880)) b!134010))

(assert (= (and b!134010 c!24881) b!134011))

(assert (= (and b!134010 (not c!24881)) b!134012))

(declare-fun m!158793 () Bool)

(assert (=> b!134011 m!158793))

(assert (=> b!132991 d!41025))

(declare-fun bm!14783 () Bool)

(declare-fun call!14787 () List!1716)

(declare-fun call!14788 () List!1716)

(assert (=> bm!14783 (= call!14787 call!14788)))

(declare-fun d!41027 () Bool)

(declare-fun e!87309 () Bool)

(assert (=> d!41027 e!87309))

(declare-fun res!64487 () Bool)

(assert (=> d!41027 (=> (not res!64487) (not e!87309))))

(declare-fun lt!70145 () List!1716)

(assert (=> d!41027 (= res!64487 (isStrictlySorted!322 lt!70145))))

(declare-fun e!87307 () List!1716)

(assert (=> d!41027 (= lt!70145 e!87307)))

(declare-fun c!24885 () Bool)

(assert (=> d!41027 (= c!24885 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69079))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 lt!69079)))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41027 (isStrictlySorted!322 (t!6167 (toList!869 lt!69079)))))

(assert (=> d!41027 (= (insertStrictlySorted!90 (t!6167 (toList!869 lt!69079)) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!70145)))

(declare-fun b!134013 () Bool)

(assert (=> b!134013 (= e!87309 (contains!902 lt!70145 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134014 () Bool)

(declare-fun c!24883 () Bool)

(assert (=> b!134014 (= c!24883 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69079))) (bvsgt (_1!1324 (h!2317 (t!6167 (toList!869 lt!69079)))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87308 () List!1716)

(declare-fun e!87310 () List!1716)

(assert (=> b!134014 (= e!87308 e!87310)))

(declare-fun b!134015 () Bool)

(declare-fun e!87306 () List!1716)

(assert (=> b!134015 (= e!87306 (insertStrictlySorted!90 (t!6167 (t!6167 (toList!869 lt!69079))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!134016 () Bool)

(assert (=> b!134016 (= e!87308 call!14787)))

(declare-fun b!134017 () Bool)

(declare-fun call!14786 () List!1716)

(assert (=> b!134017 (= e!87310 call!14786)))

(declare-fun b!134018 () Bool)

(declare-fun c!24882 () Bool)

(assert (=> b!134018 (= e!87306 (ite c!24882 (t!6167 (t!6167 (toList!869 lt!69079))) (ite c!24883 (Cons!1712 (h!2317 (t!6167 (toList!869 lt!69079))) (t!6167 (t!6167 (toList!869 lt!69079)))) Nil!1713)))))

(declare-fun b!134019 () Bool)

(assert (=> b!134019 (= e!87310 call!14786)))

(declare-fun b!134020 () Bool)

(assert (=> b!134020 (= e!87307 call!14788)))

(declare-fun bm!14784 () Bool)

(assert (=> bm!14784 (= call!14788 ($colon$colon!92 e!87306 (ite c!24885 (h!2317 (t!6167 (toList!869 lt!69079))) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun c!24884 () Bool)

(assert (=> bm!14784 (= c!24884 c!24885)))

(declare-fun bm!14785 () Bool)

(assert (=> bm!14785 (= call!14786 call!14787)))

(declare-fun b!134021 () Bool)

(declare-fun res!64486 () Bool)

(assert (=> b!134021 (=> (not res!64486) (not e!87309))))

(assert (=> b!134021 (= res!64486 (containsKey!176 lt!70145 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!134022 () Bool)

(assert (=> b!134022 (= e!87307 e!87308)))

(assert (=> b!134022 (= c!24882 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69079))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69079)))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!41027 c!24885) b!134020))

(assert (= (and d!41027 (not c!24885)) b!134022))

(assert (= (and b!134022 c!24882) b!134016))

(assert (= (and b!134022 (not c!24882)) b!134014))

(assert (= (and b!134014 c!24883) b!134017))

(assert (= (and b!134014 (not c!24883)) b!134019))

(assert (= (or b!134017 b!134019) bm!14785))

(assert (= (or b!134016 bm!14785) bm!14783))

(assert (= (or b!134020 bm!14783) bm!14784))

(assert (= (and bm!14784 c!24884) b!134015))

(assert (= (and bm!14784 (not c!24884)) b!134018))

(assert (= (and d!41027 res!64487) b!134021))

(assert (= (and b!134021 res!64486) b!134013))

(declare-fun m!158795 () Bool)

(assert (=> d!41027 m!158795))

(declare-fun m!158797 () Bool)

(assert (=> d!41027 m!158797))

(declare-fun m!158799 () Bool)

(assert (=> bm!14784 m!158799))

(declare-fun m!158801 () Bool)

(assert (=> b!134015 m!158801))

(declare-fun m!158803 () Bool)

(assert (=> b!134013 m!158803))

(declare-fun m!158805 () Bool)

(assert (=> b!134021 m!158805))

(assert (=> b!133461 d!41027))

(declare-fun d!41029 () Bool)

(assert (=> d!41029 (= (get!1486 (getValueByKey!172 (toList!869 lt!69246) lt!69265)) (v!3203 (getValueByKey!172 (toList!869 lt!69246) lt!69265)))))

(assert (=> d!40797 d!41029))

(declare-fun b!134025 () Bool)

(declare-fun e!87312 () Option!178)

(assert (=> b!134025 (= e!87312 (getValueByKey!172 (t!6167 (toList!869 lt!69246)) lt!69265))))

(declare-fun b!134026 () Bool)

(assert (=> b!134026 (= e!87312 None!176)))

(declare-fun d!41031 () Bool)

(declare-fun c!24886 () Bool)

(assert (=> d!41031 (= c!24886 (and ((_ is Cons!1712) (toList!869 lt!69246)) (= (_1!1324 (h!2317 (toList!869 lt!69246))) lt!69265)))))

(declare-fun e!87311 () Option!178)

(assert (=> d!41031 (= (getValueByKey!172 (toList!869 lt!69246) lt!69265) e!87311)))

(declare-fun b!134023 () Bool)

(assert (=> b!134023 (= e!87311 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69246)))))))

(declare-fun b!134024 () Bool)

(assert (=> b!134024 (= e!87311 e!87312)))

(declare-fun c!24887 () Bool)

(assert (=> b!134024 (= c!24887 (and ((_ is Cons!1712) (toList!869 lt!69246)) (not (= (_1!1324 (h!2317 (toList!869 lt!69246))) lt!69265))))))

(assert (= (and d!41031 c!24886) b!134023))

(assert (= (and d!41031 (not c!24886)) b!134024))

(assert (= (and b!134024 c!24887) b!134025))

(assert (= (and b!134024 (not c!24887)) b!134026))

(declare-fun m!158807 () Bool)

(assert (=> b!134025 m!158807))

(assert (=> d!40797 d!41031))

(assert (=> d!40451 d!40429))

(declare-fun d!41033 () Bool)

(declare-fun e!87313 () Bool)

(assert (=> d!41033 e!87313))

(declare-fun res!64488 () Bool)

(assert (=> d!41033 (=> res!64488 e!87313)))

(declare-fun lt!70149 () Bool)

(assert (=> d!41033 (= res!64488 (not lt!70149))))

(declare-fun lt!70146 () Bool)

(assert (=> d!41033 (= lt!70149 lt!70146)))

(declare-fun lt!70148 () Unit!4135)

(declare-fun e!87314 () Unit!4135)

(assert (=> d!41033 (= lt!70148 e!87314)))

(declare-fun c!24888 () Bool)

(assert (=> d!41033 (= c!24888 lt!70146)))

(assert (=> d!41033 (= lt!70146 (containsKey!176 (toList!869 lt!69450) lt!69463))))

(assert (=> d!41033 (= (contains!899 lt!69450 lt!69463) lt!70149)))

(declare-fun b!134027 () Bool)

(declare-fun lt!70147 () Unit!4135)

(assert (=> b!134027 (= e!87314 lt!70147)))

(assert (=> b!134027 (= lt!70147 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69450) lt!69463))))

(assert (=> b!134027 (isDefined!125 (getValueByKey!172 (toList!869 lt!69450) lt!69463))))

(declare-fun b!134028 () Bool)

(declare-fun Unit!4197 () Unit!4135)

(assert (=> b!134028 (= e!87314 Unit!4197)))

(declare-fun b!134029 () Bool)

(assert (=> b!134029 (= e!87313 (isDefined!125 (getValueByKey!172 (toList!869 lt!69450) lt!69463)))))

(assert (= (and d!41033 c!24888) b!134027))

(assert (= (and d!41033 (not c!24888)) b!134028))

(assert (= (and d!41033 (not res!64488)) b!134029))

(declare-fun m!158809 () Bool)

(assert (=> d!41033 m!158809))

(declare-fun m!158811 () Bool)

(assert (=> b!134027 m!158811))

(assert (=> b!134027 m!156919))

(assert (=> b!134027 m!156919))

(declare-fun m!158813 () Bool)

(assert (=> b!134027 m!158813))

(assert (=> b!134029 m!156919))

(assert (=> b!134029 m!156919))

(assert (=> b!134029 m!158813))

(assert (=> d!40451 d!41033))

(assert (=> d!40451 d!40435))

(declare-fun d!41035 () Bool)

(assert (=> d!41035 (= (apply!116 (+!175 lt!69450 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))) lt!69463) (apply!116 lt!69450 lt!69463))))

(assert (=> d!41035 true))

(declare-fun _$34!977 () Unit!4135)

(assert (=> d!41035 (= (choose!822 lt!69450 lt!69465 (minValue!2720 newMap!16) lt!69463) _$34!977)))

(declare-fun bs!5569 () Bool)

(assert (= bs!5569 d!41035))

(assert (=> bs!5569 m!156525))

(assert (=> bs!5569 m!156525))

(assert (=> bs!5569 m!156543))

(assert (=> bs!5569 m!156541))

(assert (=> d!40451 d!41035))

(assert (=> d!40451 d!40445))

(declare-fun b!134030 () Bool)

(declare-fun e!87316 () Bool)

(declare-fun e!87319 () Bool)

(assert (=> b!134030 (= e!87316 e!87319)))

(declare-fun c!24889 () Bool)

(declare-fun e!87321 () Bool)

(assert (=> b!134030 (= c!24889 e!87321)))

(declare-fun res!64492 () Bool)

(assert (=> b!134030 (=> (not res!64492) (not e!87321))))

(assert (=> b!134030 (= res!64492 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(declare-fun b!134031 () Bool)

(declare-fun e!87320 () Bool)

(declare-fun lt!70155 () ListLongMap!1707)

(assert (=> b!134031 (= e!87320 (isEmpty!410 lt!70155))))

(declare-fun b!134032 () Bool)

(declare-fun lt!70151 () Unit!4135)

(declare-fun lt!70152 () Unit!4135)

(assert (=> b!134032 (= lt!70151 lt!70152)))

(declare-fun lt!70154 () ListLongMap!1707)

(declare-fun lt!70156 () (_ BitVec 64))

(declare-fun lt!70150 () V!3483)

(declare-fun lt!70153 () (_ BitVec 64))

(assert (=> b!134032 (not (contains!899 (+!175 lt!70154 (tuple2!2627 lt!70153 lt!70150)) lt!70156))))

(assert (=> b!134032 (= lt!70152 (addStillNotContains!61 lt!70154 lt!70153 lt!70150 lt!70156))))

(assert (=> b!134032 (= lt!70156 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134032 (= lt!70150 (get!1482 (select (arr!2262 (_values!2848 (_2!1325 lt!69179))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1325 lt!69179)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134032 (= lt!70153 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000))))

(declare-fun call!14789 () ListLongMap!1707)

(assert (=> b!134032 (= lt!70154 call!14789)))

(declare-fun e!87318 () ListLongMap!1707)

(assert (=> b!134032 (= e!87318 (+!175 call!14789 (tuple2!2627 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 (_2!1325 lt!69179))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1325 lt!69179)) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134033 () Bool)

(assert (=> b!134033 (= e!87319 e!87320)))

(declare-fun c!24892 () Bool)

(assert (=> b!134033 (= c!24892 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(declare-fun b!134034 () Bool)

(assert (=> b!134034 (= e!87321 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(assert (=> b!134034 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134035 () Bool)

(declare-fun res!64490 () Bool)

(assert (=> b!134035 (=> (not res!64490) (not e!87316))))

(assert (=> b!134035 (= res!64490 (not (contains!899 lt!70155 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134036 () Bool)

(assert (=> b!134036 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(assert (=> b!134036 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_values!2848 (_2!1325 lt!69179)))))))

(declare-fun e!87315 () Bool)

(assert (=> b!134036 (= e!87315 (= (apply!116 lt!70155 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (_values!2848 (_2!1325 lt!69179))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1325 lt!69179)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41037 () Bool)

(assert (=> d!41037 e!87316))

(declare-fun res!64491 () Bool)

(assert (=> d!41037 (=> (not res!64491) (not e!87316))))

(assert (=> d!41037 (= res!64491 (not (contains!899 lt!70155 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87317 () ListLongMap!1707)

(assert (=> d!41037 (= lt!70155 e!87317)))

(declare-fun c!24890 () Bool)

(assert (=> d!41037 (= c!24890 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(assert (=> d!41037 (validMask!0 (mask!7165 (_2!1325 lt!69179)))))

(assert (=> d!41037 (= (getCurrentListMapNoExtraKeys!141 (_keys!4614 (_2!1325 lt!69179)) (_values!2848 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179)) (extraKeys!2630 (_2!1325 lt!69179)) (zeroValue!2720 (_2!1325 lt!69179)) (minValue!2720 (_2!1325 lt!69179)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1325 lt!69179))) lt!70155)))

(declare-fun b!134037 () Bool)

(assert (=> b!134037 (= e!87318 call!14789)))

(declare-fun bm!14786 () Bool)

(assert (=> bm!14786 (= call!14789 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (_2!1325 lt!69179)) (_values!2848 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179)) (extraKeys!2630 (_2!1325 lt!69179)) (zeroValue!2720 (_2!1325 lt!69179)) (minValue!2720 (_2!1325 lt!69179)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 (_2!1325 lt!69179))))))

(declare-fun b!134038 () Bool)

(assert (=> b!134038 (= e!87319 e!87315)))

(assert (=> b!134038 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(declare-fun res!64489 () Bool)

(assert (=> b!134038 (= res!64489 (contains!899 lt!70155 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(assert (=> b!134038 (=> (not res!64489) (not e!87315))))

(declare-fun b!134039 () Bool)

(assert (=> b!134039 (= e!87317 (ListLongMap!1708 Nil!1713))))

(declare-fun b!134040 () Bool)

(assert (=> b!134040 (= e!87320 (= lt!70155 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (_2!1325 lt!69179)) (_values!2848 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179)) (extraKeys!2630 (_2!1325 lt!69179)) (zeroValue!2720 (_2!1325 lt!69179)) (minValue!2720 (_2!1325 lt!69179)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 (_2!1325 lt!69179)))))))

(declare-fun b!134041 () Bool)

(assert (=> b!134041 (= e!87317 e!87318)))

(declare-fun c!24891 () Bool)

(assert (=> b!134041 (= c!24891 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(assert (= (and d!41037 c!24890) b!134039))

(assert (= (and d!41037 (not c!24890)) b!134041))

(assert (= (and b!134041 c!24891) b!134032))

(assert (= (and b!134041 (not c!24891)) b!134037))

(assert (= (or b!134032 b!134037) bm!14786))

(assert (= (and d!41037 res!64491) b!134035))

(assert (= (and b!134035 res!64490) b!134030))

(assert (= (and b!134030 res!64492) b!134034))

(assert (= (and b!134030 c!24889) b!134038))

(assert (= (and b!134030 (not c!24889)) b!134033))

(assert (= (and b!134038 res!64489) b!134036))

(assert (= (and b!134033 c!24892) b!134040))

(assert (= (and b!134033 (not c!24892)) b!134031))

(declare-fun b_lambda!5989 () Bool)

(assert (=> (not b_lambda!5989) (not b!134032)))

(assert (=> b!134032 t!6180))

(declare-fun b_and!8319 () Bool)

(assert (= b_and!8315 (and (=> t!6180 result!4001) b_and!8319)))

(assert (=> b!134032 t!6182))

(declare-fun b_and!8321 () Bool)

(assert (= b_and!8317 (and (=> t!6182 result!4003) b_and!8321)))

(declare-fun b_lambda!5991 () Bool)

(assert (=> (not b_lambda!5991) (not b!134036)))

(assert (=> b!134036 t!6180))

(declare-fun b_and!8323 () Bool)

(assert (= b_and!8319 (and (=> t!6180 result!4001) b_and!8323)))

(assert (=> b!134036 t!6182))

(declare-fun b_and!8325 () Bool)

(assert (= b_and!8321 (and (=> t!6182 result!4003) b_and!8325)))

(declare-fun m!158815 () Bool)

(assert (=> b!134031 m!158815))

(declare-fun m!158817 () Bool)

(assert (=> d!41037 m!158817))

(assert (=> d!41037 m!156817))

(declare-fun m!158819 () Bool)

(assert (=> b!134035 m!158819))

(assert (=> b!134041 m!157587))

(assert (=> b!134041 m!157587))

(assert (=> b!134041 m!157591))

(assert (=> b!134034 m!157587))

(assert (=> b!134034 m!157587))

(assert (=> b!134034 m!157591))

(assert (=> b!134036 m!157867))

(assert (=> b!134036 m!157865))

(assert (=> b!134036 m!157867))

(assert (=> b!134036 m!157869))

(assert (=> b!134036 m!157865))

(assert (=> b!134036 m!157587))

(declare-fun m!158821 () Bool)

(assert (=> b!134036 m!158821))

(assert (=> b!134036 m!157587))

(assert (=> b!134038 m!157587))

(assert (=> b!134038 m!157587))

(declare-fun m!158823 () Bool)

(assert (=> b!134038 m!158823))

(declare-fun m!158825 () Bool)

(assert (=> b!134040 m!158825))

(assert (=> bm!14786 m!158825))

(assert (=> b!134032 m!157867))

(assert (=> b!134032 m!157865))

(assert (=> b!134032 m!157867))

(assert (=> b!134032 m!157869))

(declare-fun m!158827 () Bool)

(assert (=> b!134032 m!158827))

(declare-fun m!158829 () Bool)

(assert (=> b!134032 m!158829))

(assert (=> b!134032 m!157865))

(declare-fun m!158831 () Bool)

(assert (=> b!134032 m!158831))

(assert (=> b!134032 m!157587))

(assert (=> b!134032 m!158829))

(declare-fun m!158833 () Bool)

(assert (=> b!134032 m!158833))

(assert (=> bm!14753 d!41037))

(declare-fun d!41039 () Bool)

(declare-fun res!64493 () Bool)

(declare-fun e!87322 () Bool)

(assert (=> d!41039 (=> res!64493 e!87322)))

(assert (=> d!41039 (= res!64493 (and ((_ is Cons!1712) (toList!869 lt!69262)) (= (_1!1324 (h!2317 (toList!869 lt!69262))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41039 (= (containsKey!176 (toList!869 lt!69262) #b1000000000000000000000000000000000000000000000000000000000000000) e!87322)))

(declare-fun b!134042 () Bool)

(declare-fun e!87323 () Bool)

(assert (=> b!134042 (= e!87322 e!87323)))

(declare-fun res!64494 () Bool)

(assert (=> b!134042 (=> (not res!64494) (not e!87323))))

(assert (=> b!134042 (= res!64494 (and (or (not ((_ is Cons!1712) (toList!869 lt!69262))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69262))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1712) (toList!869 lt!69262)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69262))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134043 () Bool)

(assert (=> b!134043 (= e!87323 (containsKey!176 (t!6167 (toList!869 lt!69262)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41039 (not res!64493)) b!134042))

(assert (= (and b!134042 res!64494) b!134043))

(declare-fun m!158835 () Bool)

(assert (=> b!134043 m!158835))

(assert (=> d!40809 d!41039))

(declare-fun d!41041 () Bool)

(assert (=> d!41041 (= (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (and (not (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133346 d!41041))

(declare-fun d!41043 () Bool)

(declare-fun e!87324 () Bool)

(assert (=> d!41043 e!87324))

(declare-fun res!64495 () Bool)

(assert (=> d!41043 (=> res!64495 e!87324)))

(declare-fun lt!70160 () Bool)

(assert (=> d!41043 (= res!64495 (not lt!70160))))

(declare-fun lt!70157 () Bool)

(assert (=> d!41043 (= lt!70160 lt!70157)))

(declare-fun lt!70159 () Unit!4135)

(declare-fun e!87325 () Unit!4135)

(assert (=> d!41043 (= lt!70159 e!87325)))

(declare-fun c!24893 () Bool)

(assert (=> d!41043 (= c!24893 lt!70157)))

(assert (=> d!41043 (= lt!70157 (containsKey!176 (toList!869 lt!69892) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41043 (= (contains!899 lt!69892 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70160)))

(declare-fun b!134044 () Bool)

(declare-fun lt!70158 () Unit!4135)

(assert (=> b!134044 (= e!87325 lt!70158)))

(assert (=> b!134044 (= lt!70158 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69892) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134044 (isDefined!125 (getValueByKey!172 (toList!869 lt!69892) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134045 () Bool)

(declare-fun Unit!4198 () Unit!4135)

(assert (=> b!134045 (= e!87325 Unit!4198)))

(declare-fun b!134046 () Bool)

(assert (=> b!134046 (= e!87324 (isDefined!125 (getValueByKey!172 (toList!869 lt!69892) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41043 c!24893) b!134044))

(assert (= (and d!41043 (not c!24893)) b!134045))

(assert (= (and d!41043 (not res!64495)) b!134046))

(declare-fun m!158837 () Bool)

(assert (=> d!41043 m!158837))

(declare-fun m!158839 () Bool)

(assert (=> b!134044 m!158839))

(declare-fun m!158841 () Bool)

(assert (=> b!134044 m!158841))

(assert (=> b!134044 m!158841))

(declare-fun m!158843 () Bool)

(assert (=> b!134044 m!158843))

(assert (=> b!134046 m!158841))

(assert (=> b!134046 m!158841))

(assert (=> b!134046 m!158843))

(assert (=> d!40661 d!41043))

(assert (=> d!40661 d!40195))

(declare-fun d!41045 () Bool)

(declare-fun e!87326 () Bool)

(assert (=> d!41045 e!87326))

(declare-fun res!64496 () Bool)

(assert (=> d!41045 (=> res!64496 e!87326)))

(declare-fun lt!70164 () Bool)

(assert (=> d!41045 (= res!64496 (not lt!70164))))

(declare-fun lt!70161 () Bool)

(assert (=> d!41045 (= lt!70164 lt!70161)))

(declare-fun lt!70163 () Unit!4135)

(declare-fun e!87327 () Unit!4135)

(assert (=> d!41045 (= lt!70163 e!87327)))

(declare-fun c!24894 () Bool)

(assert (=> d!41045 (= c!24894 lt!70161)))

(assert (=> d!41045 (= lt!70161 (containsKey!176 (toList!869 (+!175 lt!69547 (tuple2!2627 lt!69546 lt!69543))) lt!69549))))

(assert (=> d!41045 (= (contains!899 (+!175 lt!69547 (tuple2!2627 lt!69546 lt!69543)) lt!69549) lt!70164)))

(declare-fun b!134047 () Bool)

(declare-fun lt!70162 () Unit!4135)

(assert (=> b!134047 (= e!87327 lt!70162)))

(assert (=> b!134047 (= lt!70162 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69547 (tuple2!2627 lt!69546 lt!69543))) lt!69549))))

(assert (=> b!134047 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69547 (tuple2!2627 lt!69546 lt!69543))) lt!69549))))

(declare-fun b!134048 () Bool)

(declare-fun Unit!4199 () Unit!4135)

(assert (=> b!134048 (= e!87327 Unit!4199)))

(declare-fun b!134049 () Bool)

(assert (=> b!134049 (= e!87326 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69547 (tuple2!2627 lt!69546 lt!69543))) lt!69549)))))

(assert (= (and d!41045 c!24894) b!134047))

(assert (= (and d!41045 (not c!24894)) b!134048))

(assert (= (and d!41045 (not res!64496)) b!134049))

(declare-fun m!158845 () Bool)

(assert (=> d!41045 m!158845))

(declare-fun m!158847 () Bool)

(assert (=> b!134047 m!158847))

(declare-fun m!158849 () Bool)

(assert (=> b!134047 m!158849))

(assert (=> b!134047 m!158849))

(declare-fun m!158851 () Bool)

(assert (=> b!134047 m!158851))

(assert (=> b!134049 m!158849))

(assert (=> b!134049 m!158849))

(assert (=> b!134049 m!158851))

(assert (=> b!133016 d!41045))

(assert (=> b!133016 d!40375))

(declare-fun d!41047 () Bool)

(assert (=> d!41047 (not (contains!899 (+!175 lt!69547 (tuple2!2627 lt!69546 lt!69543)) lt!69549))))

(declare-fun lt!70165 () Unit!4135)

(assert (=> d!41047 (= lt!70165 (choose!826 lt!69547 lt!69546 lt!69543 lt!69549))))

(declare-fun e!87328 () Bool)

(assert (=> d!41047 e!87328))

(declare-fun res!64497 () Bool)

(assert (=> d!41047 (=> (not res!64497) (not e!87328))))

(assert (=> d!41047 (= res!64497 (not (contains!899 lt!69547 lt!69549)))))

(assert (=> d!41047 (= (addStillNotContains!61 lt!69547 lt!69546 lt!69543 lt!69549) lt!70165)))

(declare-fun b!134050 () Bool)

(assert (=> b!134050 (= e!87328 (not (= lt!69546 lt!69549)))))

(assert (= (and d!41047 res!64497) b!134050))

(assert (=> d!41047 m!156773))

(assert (=> d!41047 m!156773))

(assert (=> d!41047 m!156777))

(declare-fun m!158853 () Bool)

(assert (=> d!41047 m!158853))

(declare-fun m!158855 () Bool)

(assert (=> d!41047 m!158855))

(assert (=> b!133016 d!41047))

(declare-fun d!41049 () Bool)

(declare-fun e!87329 () Bool)

(assert (=> d!41049 e!87329))

(declare-fun res!64499 () Bool)

(assert (=> d!41049 (=> (not res!64499) (not e!87329))))

(declare-fun lt!70166 () ListLongMap!1707)

(assert (=> d!41049 (= res!64499 (contains!899 lt!70166 (_1!1324 (tuple2!2627 lt!69546 lt!69543))))))

(declare-fun lt!70168 () List!1716)

(assert (=> d!41049 (= lt!70166 (ListLongMap!1708 lt!70168))))

(declare-fun lt!70169 () Unit!4135)

(declare-fun lt!70167 () Unit!4135)

(assert (=> d!41049 (= lt!70169 lt!70167)))

(assert (=> d!41049 (= (getValueByKey!172 lt!70168 (_1!1324 (tuple2!2627 lt!69546 lt!69543))) (Some!177 (_2!1324 (tuple2!2627 lt!69546 lt!69543))))))

(assert (=> d!41049 (= lt!70167 (lemmaContainsTupThenGetReturnValue!87 lt!70168 (_1!1324 (tuple2!2627 lt!69546 lt!69543)) (_2!1324 (tuple2!2627 lt!69546 lt!69543))))))

(assert (=> d!41049 (= lt!70168 (insertStrictlySorted!90 (toList!869 lt!69547) (_1!1324 (tuple2!2627 lt!69546 lt!69543)) (_2!1324 (tuple2!2627 lt!69546 lt!69543))))))

(assert (=> d!41049 (= (+!175 lt!69547 (tuple2!2627 lt!69546 lt!69543)) lt!70166)))

(declare-fun b!134051 () Bool)

(declare-fun res!64498 () Bool)

(assert (=> b!134051 (=> (not res!64498) (not e!87329))))

(assert (=> b!134051 (= res!64498 (= (getValueByKey!172 (toList!869 lt!70166) (_1!1324 (tuple2!2627 lt!69546 lt!69543))) (Some!177 (_2!1324 (tuple2!2627 lt!69546 lt!69543)))))))

(declare-fun b!134052 () Bool)

(assert (=> b!134052 (= e!87329 (contains!902 (toList!869 lt!70166) (tuple2!2627 lt!69546 lt!69543)))))

(assert (= (and d!41049 res!64499) b!134051))

(assert (= (and b!134051 res!64498) b!134052))

(declare-fun m!158857 () Bool)

(assert (=> d!41049 m!158857))

(declare-fun m!158859 () Bool)

(assert (=> d!41049 m!158859))

(declare-fun m!158861 () Bool)

(assert (=> d!41049 m!158861))

(declare-fun m!158863 () Bool)

(assert (=> d!41049 m!158863))

(declare-fun m!158865 () Bool)

(assert (=> b!134051 m!158865))

(declare-fun m!158867 () Bool)

(assert (=> b!134052 m!158867))

(assert (=> b!133016 d!41049))

(declare-fun d!41051 () Bool)

(declare-fun e!87330 () Bool)

(assert (=> d!41051 e!87330))

(declare-fun res!64501 () Bool)

(assert (=> d!41051 (=> (not res!64501) (not e!87330))))

(declare-fun lt!70170 () ListLongMap!1707)

(assert (=> d!41051 (= res!64501 (contains!899 lt!70170 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70172 () List!1716)

(assert (=> d!41051 (= lt!70170 (ListLongMap!1708 lt!70172))))

(declare-fun lt!70173 () Unit!4135)

(declare-fun lt!70171 () Unit!4135)

(assert (=> d!41051 (= lt!70173 lt!70171)))

(assert (=> d!41051 (= (getValueByKey!172 lt!70172 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41051 (= lt!70171 (lemmaContainsTupThenGetReturnValue!87 lt!70172 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41051 (= lt!70172 (insertStrictlySorted!90 (toList!869 call!14674) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41051 (= (+!175 call!14674 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70170)))

(declare-fun b!134053 () Bool)

(declare-fun res!64500 () Bool)

(assert (=> b!134053 (=> (not res!64500) (not e!87330))))

(assert (=> b!134053 (= res!64500 (= (getValueByKey!172 (toList!869 lt!70170) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134054 () Bool)

(assert (=> b!134054 (= e!87330 (contains!902 (toList!869 lt!70170) (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41051 res!64501) b!134053))

(assert (= (and b!134053 res!64500) b!134054))

(declare-fun m!158869 () Bool)

(assert (=> d!41051 m!158869))

(declare-fun m!158871 () Bool)

(assert (=> d!41051 m!158871))

(declare-fun m!158873 () Bool)

(assert (=> d!41051 m!158873))

(declare-fun m!158875 () Bool)

(assert (=> d!41051 m!158875))

(declare-fun m!158877 () Bool)

(assert (=> b!134053 m!158877))

(declare-fun m!158879 () Bool)

(assert (=> b!134054 m!158879))

(assert (=> b!133016 d!41051))

(declare-fun d!41053 () Bool)

(declare-fun res!64502 () Bool)

(declare-fun e!87331 () Bool)

(assert (=> d!41053 (=> res!64502 e!87331)))

(assert (=> d!41053 (= res!64502 (and ((_ is Cons!1712) (toList!869 lt!69464)) (= (_1!1324 (h!2317 (toList!869 lt!69464))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41053 (= (containsKey!176 (toList!869 lt!69464) #b1000000000000000000000000000000000000000000000000000000000000000) e!87331)))

(declare-fun b!134055 () Bool)

(declare-fun e!87332 () Bool)

(assert (=> b!134055 (= e!87331 e!87332)))

(declare-fun res!64503 () Bool)

(assert (=> b!134055 (=> (not res!64503) (not e!87332))))

(assert (=> b!134055 (= res!64503 (and (or (not ((_ is Cons!1712) (toList!869 lt!69464))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69464))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1712) (toList!869 lt!69464)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69464))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134056 () Bool)

(assert (=> b!134056 (= e!87332 (containsKey!176 (t!6167 (toList!869 lt!69464)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41053 (not res!64502)) b!134055))

(assert (= (and b!134055 res!64503) b!134056))

(declare-fun m!158881 () Bool)

(assert (=> b!134056 m!158881))

(assert (=> d!40593 d!41053))

(assert (=> d!40693 d!40695))

(declare-fun d!41055 () Bool)

(assert (=> d!41055 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69498 #b00000000000000000000000000000000)))

(assert (=> d!41055 true))

(declare-fun _$60!364 () Unit!4135)

(assert (=> d!41055 (= (choose!13 (_keys!4614 newMap!16) lt!69498 #b00000000000000000000000000000000) _$60!364)))

(declare-fun bs!5570 () Bool)

(assert (= bs!5570 d!41055))

(assert (=> bs!5570 m!156641))

(assert (=> d!40693 d!41055))

(declare-fun d!41057 () Bool)

(declare-fun e!87333 () Bool)

(assert (=> d!41057 e!87333))

(declare-fun res!64504 () Bool)

(assert (=> d!41057 (=> res!64504 e!87333)))

(declare-fun lt!70177 () Bool)

(assert (=> d!41057 (= res!64504 (not lt!70177))))

(declare-fun lt!70174 () Bool)

(assert (=> d!41057 (= lt!70177 lt!70174)))

(declare-fun lt!70176 () Unit!4135)

(declare-fun e!87334 () Unit!4135)

(assert (=> d!41057 (= lt!70176 e!87334)))

(declare-fun c!24895 () Bool)

(assert (=> d!41057 (= c!24895 lt!70174)))

(assert (=> d!41057 (= lt!70174 (containsKey!176 (toList!869 lt!69246) lt!69265))))

(assert (=> d!41057 (= (contains!899 lt!69246 lt!69265) lt!70177)))

(declare-fun b!134057 () Bool)

(declare-fun lt!70175 () Unit!4135)

(assert (=> b!134057 (= e!87334 lt!70175)))

(assert (=> b!134057 (= lt!70175 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69246) lt!69265))))

(assert (=> b!134057 (isDefined!125 (getValueByKey!172 (toList!869 lt!69246) lt!69265))))

(declare-fun b!134058 () Bool)

(declare-fun Unit!4200 () Unit!4135)

(assert (=> b!134058 (= e!87334 Unit!4200)))

(declare-fun b!134059 () Bool)

(assert (=> b!134059 (= e!87333 (isDefined!125 (getValueByKey!172 (toList!869 lt!69246) lt!69265)))))

(assert (= (and d!41057 c!24895) b!134057))

(assert (= (and d!41057 (not c!24895)) b!134058))

(assert (= (and d!41057 (not res!64504)) b!134059))

(declare-fun m!158883 () Bool)

(assert (=> d!41057 m!158883))

(declare-fun m!158885 () Bool)

(assert (=> b!134057 m!158885))

(assert (=> b!134057 m!158201))

(assert (=> b!134057 m!158201))

(declare-fun m!158887 () Bool)

(assert (=> b!134057 m!158887))

(assert (=> b!134059 m!158201))

(assert (=> b!134059 m!158201))

(assert (=> b!134059 m!158887))

(assert (=> d!40793 d!41057))

(declare-fun d!41059 () Bool)

(assert (=> d!41059 (= (apply!116 (+!175 lt!69246 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))) lt!69265) (apply!116 lt!69246 lt!69265))))

(assert (=> d!41059 true))

(declare-fun _$34!978 () Unit!4135)

(assert (=> d!41059 (= (choose!822 lt!69246 lt!69249 (minValue!2720 newMap!16) lt!69265) _$34!978)))

(declare-fun bs!5571 () Bool)

(assert (= bs!5571 d!41059))

(assert (=> bs!5571 m!156197))

(assert (=> bs!5571 m!156197))

(assert (=> bs!5571 m!156205))

(assert (=> bs!5571 m!156195))

(assert (=> d!40793 d!41059))

(assert (=> d!40793 d!40797))

(assert (=> d!40793 d!40795))

(assert (=> d!40793 d!40803))

(assert (=> d!40675 d!40527))

(assert (=> d!40675 d!40229))

(assert (=> d!40675 d!40657))

(assert (=> b!133661 d!40909))

(declare-fun d!41061 () Bool)

(assert (=> d!41061 (= (isDefined!125 (getValueByKey!172 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))) (not (isEmpty!409 (getValueByKey!172 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))))

(declare-fun bs!5572 () Bool)

(assert (= bs!5572 d!41061))

(assert (=> bs!5572 m!157663))

(declare-fun m!158889 () Bool)

(assert (=> bs!5572 m!158889))

(assert (=> b!133520 d!41061))

(declare-fun b!134062 () Bool)

(declare-fun e!87336 () Option!178)

(assert (=> b!134062 (= e!87336 (getValueByKey!172 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))

(declare-fun b!134063 () Bool)

(assert (=> b!134063 (= e!87336 None!176)))

(declare-fun c!24896 () Bool)

(declare-fun d!41063 () Bool)

(assert (=> d!41063 (= c!24896 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(declare-fun e!87335 () Option!178)

(assert (=> d!41063 (= (getValueByKey!172 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))) e!87335)))

(declare-fun b!134060 () Bool)

(assert (=> b!134060 (= e!87335 (Some!177 (_2!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))))))

(declare-fun b!134061 () Bool)

(assert (=> b!134061 (= e!87335 e!87336)))

(declare-fun c!24897 () Bool)

(assert (=> b!134061 (= c!24897 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (not (= (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))))

(assert (= (and d!41063 c!24896) b!134060))

(assert (= (and d!41063 (not c!24896)) b!134061))

(assert (= (and b!134061 c!24897) b!134062))

(assert (= (and b!134061 (not c!24897)) b!134063))

(assert (=> b!134062 m!156069))

(declare-fun m!158891 () Bool)

(assert (=> b!134062 m!158891))

(assert (=> b!133520 d!41063))

(assert (=> b!133605 d!40965))

(declare-fun d!41065 () Bool)

(declare-fun lt!70178 () Bool)

(assert (=> d!41065 (= lt!70178 (select (content!133 lt!69211) (tuple2!2627 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun e!87338 () Bool)

(assert (=> d!41065 (= lt!70178 e!87338)))

(declare-fun res!64505 () Bool)

(assert (=> d!41065 (=> (not res!64505) (not e!87338))))

(assert (=> d!41065 (= res!64505 ((_ is Cons!1712) lt!69211))))

(assert (=> d!41065 (= (contains!902 lt!69211 (tuple2!2627 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!70178)))

(declare-fun b!134064 () Bool)

(declare-fun e!87337 () Bool)

(assert (=> b!134064 (= e!87338 e!87337)))

(declare-fun res!64506 () Bool)

(assert (=> b!134064 (=> res!64506 e!87337)))

(assert (=> b!134064 (= res!64506 (= (h!2317 lt!69211) (tuple2!2627 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun b!134065 () Bool)

(assert (=> b!134065 (= e!87337 (contains!902 (t!6167 lt!69211) (tuple2!2627 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!41065 res!64505) b!134064))

(assert (= (and b!134064 (not res!64506)) b!134065))

(declare-fun m!158893 () Bool)

(assert (=> d!41065 m!158893))

(declare-fun m!158895 () Bool)

(assert (=> d!41065 m!158895))

(declare-fun m!158897 () Bool)

(assert (=> b!134065 m!158897))

(assert (=> b!133175 d!41065))

(declare-fun d!41067 () Bool)

(assert (=> d!41067 (= (get!1486 (getValueByKey!172 (toList!869 lt!69470) lt!69489)) (v!3203 (getValueByKey!172 (toList!869 lt!69470) lt!69489)))))

(assert (=> d!40503 d!41067))

(declare-fun b!134068 () Bool)

(declare-fun e!87340 () Option!178)

(assert (=> b!134068 (= e!87340 (getValueByKey!172 (t!6167 (toList!869 lt!69470)) lt!69489))))

(declare-fun b!134069 () Bool)

(assert (=> b!134069 (= e!87340 None!176)))

(declare-fun d!41069 () Bool)

(declare-fun c!24898 () Bool)

(assert (=> d!41069 (= c!24898 (and ((_ is Cons!1712) (toList!869 lt!69470)) (= (_1!1324 (h!2317 (toList!869 lt!69470))) lt!69489)))))

(declare-fun e!87339 () Option!178)

(assert (=> d!41069 (= (getValueByKey!172 (toList!869 lt!69470) lt!69489) e!87339)))

(declare-fun b!134066 () Bool)

(assert (=> b!134066 (= e!87339 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69470)))))))

(declare-fun b!134067 () Bool)

(assert (=> b!134067 (= e!87339 e!87340)))

(declare-fun c!24899 () Bool)

(assert (=> b!134067 (= c!24899 (and ((_ is Cons!1712) (toList!869 lt!69470)) (not (= (_1!1324 (h!2317 (toList!869 lt!69470))) lt!69489))))))

(assert (= (and d!41069 c!24898) b!134066))

(assert (= (and d!41069 (not c!24898)) b!134067))

(assert (= (and b!134067 c!24899) b!134068))

(assert (= (and b!134067 (not c!24899)) b!134069))

(declare-fun m!158899 () Bool)

(assert (=> b!134068 m!158899))

(assert (=> d!40503 d!41069))

(declare-fun b!134072 () Bool)

(declare-fun e!87342 () Option!178)

(assert (=> b!134072 (= e!87342 (getValueByKey!172 (t!6167 (toList!869 lt!70003)) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))

(declare-fun b!134073 () Bool)

(assert (=> b!134073 (= e!87342 None!176)))

(declare-fun d!41071 () Bool)

(declare-fun c!24900 () Bool)

(assert (=> d!41071 (= c!24900 (and ((_ is Cons!1712) (toList!869 lt!70003)) (= (_1!1324 (h!2317 (toList!869 lt!70003))) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))))))

(declare-fun e!87341 () Option!178)

(assert (=> d!41071 (= (getValueByKey!172 (toList!869 lt!70003) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))) e!87341)))

(declare-fun b!134070 () Bool)

(assert (=> b!134070 (= e!87341 (Some!177 (_2!1324 (h!2317 (toList!869 lt!70003)))))))

(declare-fun b!134071 () Bool)

(assert (=> b!134071 (= e!87341 e!87342)))

(declare-fun c!24901 () Bool)

(assert (=> b!134071 (= c!24901 (and ((_ is Cons!1712) (toList!869 lt!70003)) (not (= (_1!1324 (h!2317 (toList!869 lt!70003))) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41071 c!24900) b!134070))

(assert (= (and d!41071 (not c!24900)) b!134071))

(assert (= (and b!134071 c!24901) b!134072))

(assert (= (and b!134071 (not c!24901)) b!134073))

(declare-fun m!158901 () Bool)

(assert (=> b!134072 m!158901))

(assert (=> b!133763 d!41071))

(declare-fun b!134074 () Bool)

(declare-fun e!87344 () Bool)

(declare-fun e!87347 () Bool)

(assert (=> b!134074 (= e!87344 e!87347)))

(declare-fun c!24902 () Bool)

(declare-fun e!87349 () Bool)

(assert (=> b!134074 (= c!24902 e!87349)))

(declare-fun res!64510 () Bool)

(assert (=> b!134074 (=> (not res!64510) (not e!87349))))

(assert (=> b!134074 (= res!64510 (bvslt #b00000000000000000000000000000000 (size!2530 lt!69349)))))

(declare-fun b!134075 () Bool)

(declare-fun e!87348 () Bool)

(declare-fun lt!70184 () ListLongMap!1707)

(assert (=> b!134075 (= e!87348 (isEmpty!410 lt!70184))))

(declare-fun b!134076 () Bool)

(declare-fun lt!70180 () Unit!4135)

(declare-fun lt!70181 () Unit!4135)

(assert (=> b!134076 (= lt!70180 lt!70181)))

(declare-fun lt!70185 () (_ BitVec 64))

(declare-fun lt!70182 () (_ BitVec 64))

(declare-fun lt!70183 () ListLongMap!1707)

(declare-fun lt!70179 () V!3483)

(assert (=> b!134076 (not (contains!899 (+!175 lt!70183 (tuple2!2627 lt!70182 lt!70179)) lt!70185))))

(assert (=> b!134076 (= lt!70181 (addStillNotContains!61 lt!70183 lt!70182 lt!70179 lt!70185))))

(assert (=> b!134076 (= lt!70185 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134076 (= lt!70179 (get!1482 (select (arr!2262 lt!69346) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134076 (= lt!70182 (select (arr!2261 lt!69349) #b00000000000000000000000000000000))))

(declare-fun call!14790 () ListLongMap!1707)

(assert (=> b!134076 (= lt!70183 call!14790)))

(declare-fun e!87346 () ListLongMap!1707)

(assert (=> b!134076 (= e!87346 (+!175 call!14790 (tuple2!2627 (select (arr!2261 lt!69349) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 lt!69346) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134077 () Bool)

(assert (=> b!134077 (= e!87347 e!87348)))

(declare-fun c!24905 () Bool)

(assert (=> b!134077 (= c!24905 (bvslt #b00000000000000000000000000000000 (size!2530 lt!69349)))))

(declare-fun b!134078 () Bool)

(assert (=> b!134078 (= e!87349 (validKeyInArray!0 (select (arr!2261 lt!69349) #b00000000000000000000000000000000)))))

(assert (=> b!134078 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134079 () Bool)

(declare-fun res!64508 () Bool)

(assert (=> b!134079 (=> (not res!64508) (not e!87344))))

(assert (=> b!134079 (= res!64508 (not (contains!899 lt!70184 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134080 () Bool)

(assert (=> b!134080 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 lt!69349)))))

(assert (=> b!134080 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 lt!69346)))))

(declare-fun e!87343 () Bool)

(assert (=> b!134080 (= e!87343 (= (apply!116 lt!70184 (select (arr!2261 lt!69349) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 lt!69346) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41073 () Bool)

(assert (=> d!41073 e!87344))

(declare-fun res!64509 () Bool)

(assert (=> d!41073 (=> (not res!64509) (not e!87344))))

(assert (=> d!41073 (= res!64509 (not (contains!899 lt!70184 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87345 () ListLongMap!1707)

(assert (=> d!41073 (= lt!70184 e!87345)))

(declare-fun c!24903 () Bool)

(assert (=> d!41073 (= c!24903 (bvsge #b00000000000000000000000000000000 (size!2530 lt!69349)))))

(assert (=> d!41073 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41073 (= (getCurrentListMapNoExtraKeys!141 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!70184)))

(declare-fun b!134081 () Bool)

(assert (=> b!134081 (= e!87346 call!14790)))

(declare-fun bm!14787 () Bool)

(assert (=> bm!14787 (= call!14790 (getCurrentListMapNoExtraKeys!141 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!134082 () Bool)

(assert (=> b!134082 (= e!87347 e!87343)))

(assert (=> b!134082 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 lt!69349)))))

(declare-fun res!64507 () Bool)

(assert (=> b!134082 (= res!64507 (contains!899 lt!70184 (select (arr!2261 lt!69349) #b00000000000000000000000000000000)))))

(assert (=> b!134082 (=> (not res!64507) (not e!87343))))

(declare-fun b!134083 () Bool)

(assert (=> b!134083 (= e!87345 (ListLongMap!1708 Nil!1713))))

(declare-fun b!134084 () Bool)

(assert (=> b!134084 (= e!87348 (= lt!70184 (getCurrentListMapNoExtraKeys!141 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!134085 () Bool)

(assert (=> b!134085 (= e!87345 e!87346)))

(declare-fun c!24904 () Bool)

(assert (=> b!134085 (= c!24904 (validKeyInArray!0 (select (arr!2261 lt!69349) #b00000000000000000000000000000000)))))

(assert (= (and d!41073 c!24903) b!134083))

(assert (= (and d!41073 (not c!24903)) b!134085))

(assert (= (and b!134085 c!24904) b!134076))

(assert (= (and b!134085 (not c!24904)) b!134081))

(assert (= (or b!134076 b!134081) bm!14787))

(assert (= (and d!41073 res!64509) b!134079))

(assert (= (and b!134079 res!64508) b!134074))

(assert (= (and b!134074 res!64510) b!134078))

(assert (= (and b!134074 c!24902) b!134082))

(assert (= (and b!134074 (not c!24902)) b!134077))

(assert (= (and b!134082 res!64507) b!134080))

(assert (= (and b!134077 c!24905) b!134084))

(assert (= (and b!134077 (not c!24905)) b!134075))

(declare-fun b_lambda!5993 () Bool)

(assert (=> (not b_lambda!5993) (not b!134076)))

(assert (=> b!134076 t!6176))

(declare-fun b_and!8327 () Bool)

(assert (= b_and!8323 (and (=> t!6176 result!3997) b_and!8327)))

(assert (=> b!134076 t!6178))

(declare-fun b_and!8329 () Bool)

(assert (= b_and!8325 (and (=> t!6178 result!3999) b_and!8329)))

(declare-fun b_lambda!5995 () Bool)

(assert (=> (not b_lambda!5995) (not b!134080)))

(assert (=> b!134080 t!6176))

(declare-fun b_and!8331 () Bool)

(assert (= b_and!8327 (and (=> t!6176 result!3997) b_and!8331)))

(assert (=> b!134080 t!6178))

(declare-fun b_and!8333 () Bool)

(assert (= b_and!8329 (and (=> t!6178 result!3999) b_and!8333)))

(declare-fun m!158903 () Bool)

(assert (=> b!134075 m!158903))

(declare-fun m!158905 () Bool)

(assert (=> d!41073 m!158905))

(assert (=> d!41073 m!156157))

(declare-fun m!158907 () Bool)

(assert (=> b!134079 m!158907))

(assert (=> b!134085 m!157317))

(assert (=> b!134085 m!157317))

(assert (=> b!134085 m!157325))

(assert (=> b!134078 m!157317))

(assert (=> b!134078 m!157317))

(assert (=> b!134078 m!157325))

(assert (=> b!134080 m!156175))

(assert (=> b!134080 m!157313))

(assert (=> b!134080 m!156175))

(assert (=> b!134080 m!157315))

(assert (=> b!134080 m!157313))

(assert (=> b!134080 m!157317))

(declare-fun m!158909 () Bool)

(assert (=> b!134080 m!158909))

(assert (=> b!134080 m!157317))

(assert (=> b!134082 m!157317))

(assert (=> b!134082 m!157317))

(declare-fun m!158911 () Bool)

(assert (=> b!134082 m!158911))

(declare-fun m!158913 () Bool)

(assert (=> b!134084 m!158913))

(assert (=> bm!14787 m!158913))

(assert (=> b!134076 m!156175))

(assert (=> b!134076 m!157313))

(assert (=> b!134076 m!156175))

(assert (=> b!134076 m!157315))

(declare-fun m!158915 () Bool)

(assert (=> b!134076 m!158915))

(declare-fun m!158917 () Bool)

(assert (=> b!134076 m!158917))

(assert (=> b!134076 m!157313))

(declare-fun m!158919 () Bool)

(assert (=> b!134076 m!158919))

(assert (=> b!134076 m!157317))

(assert (=> b!134076 m!158917))

(declare-fun m!158921 () Bool)

(assert (=> b!134076 m!158921))

(assert (=> bm!14708 d!41073))

(declare-fun d!41075 () Bool)

(declare-fun res!64511 () Bool)

(declare-fun e!87350 () Bool)

(assert (=> d!41075 (=> res!64511 e!87350)))

(assert (=> d!41075 (= res!64511 (and ((_ is Cons!1712) (toList!869 lt!69442)) (= (_1!1324 (h!2317 (toList!869 lt!69442))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41075 (= (containsKey!176 (toList!869 lt!69442) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87350)))

(declare-fun b!134086 () Bool)

(declare-fun e!87351 () Bool)

(assert (=> b!134086 (= e!87350 e!87351)))

(declare-fun res!64512 () Bool)

(assert (=> b!134086 (=> (not res!64512) (not e!87351))))

(assert (=> b!134086 (= res!64512 (and (or (not ((_ is Cons!1712) (toList!869 lt!69442))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69442))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Cons!1712) (toList!869 lt!69442)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69442))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134087 () Bool)

(assert (=> b!134087 (= e!87351 (containsKey!176 (t!6167 (toList!869 lt!69442)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!41075 (not res!64511)) b!134086))

(assert (= (and b!134086 res!64512) b!134087))

(declare-fun m!158923 () Bool)

(assert (=> b!134087 m!158923))

(assert (=> d!40573 d!41075))

(assert (=> d!40557 d!40535))

(declare-fun d!41077 () Bool)

(assert (=> d!41077 (arrayContainsKey!0 lt!69350 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!41077 true))

(declare-fun _$60!365 () Unit!4135)

(assert (=> d!41077 (= (choose!13 lt!69350 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))) _$60!365)))

(declare-fun bs!5573 () Bool)

(assert (= bs!5573 d!41077))

(assert (=> bs!5573 m!155869))

(assert (=> bs!5573 m!156251))

(assert (=> d!40557 d!41077))

(declare-fun d!41079 () Bool)

(assert (=> d!41079 (isDefined!125 (getValueByKey!172 (toList!869 lt!69262) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!70186 () Unit!4135)

(assert (=> d!41079 (= lt!70186 (choose!817 (toList!869 lt!69262) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!87352 () Bool)

(assert (=> d!41079 e!87352))

(declare-fun res!64513 () Bool)

(assert (=> d!41079 (=> (not res!64513) (not e!87352))))

(assert (=> d!41079 (= res!64513 (isStrictlySorted!322 (toList!869 lt!69262)))))

(assert (=> d!41079 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69262) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70186)))

(declare-fun b!134088 () Bool)

(assert (=> b!134088 (= e!87352 (containsKey!176 (toList!869 lt!69262) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41079 res!64513) b!134088))

(assert (=> d!41079 m!156163))

(assert (=> d!41079 m!156783))

(assert (=> d!41079 m!156783))

(assert (=> d!41079 m!157749))

(assert (=> d!41079 m!156163))

(declare-fun m!158925 () Bool)

(assert (=> d!41079 m!158925))

(declare-fun m!158927 () Bool)

(assert (=> d!41079 m!158927))

(assert (=> b!134088 m!156163))

(assert (=> b!134088 m!157745))

(assert (=> b!133561 d!41079))

(declare-fun d!41081 () Bool)

(assert (=> d!41081 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69262) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69262) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5574 () Bool)

(assert (= bs!5574 d!41081))

(assert (=> bs!5574 m!156783))

(declare-fun m!158929 () Bool)

(assert (=> bs!5574 m!158929))

(assert (=> b!133561 d!41081))

(declare-fun b!134091 () Bool)

(declare-fun e!87354 () Option!178)

(assert (=> b!134091 (= e!87354 (getValueByKey!172 (t!6167 (toList!869 lt!69262)) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134092 () Bool)

(assert (=> b!134092 (= e!87354 None!176)))

(declare-fun d!41083 () Bool)

(declare-fun c!24906 () Bool)

(assert (=> d!41083 (= c!24906 (and ((_ is Cons!1712) (toList!869 lt!69262)) (= (_1!1324 (h!2317 (toList!869 lt!69262))) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun e!87353 () Option!178)

(assert (=> d!41083 (= (getValueByKey!172 (toList!869 lt!69262) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) e!87353)))

(declare-fun b!134089 () Bool)

(assert (=> b!134089 (= e!87353 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69262)))))))

(declare-fun b!134090 () Bool)

(assert (=> b!134090 (= e!87353 e!87354)))

(declare-fun c!24907 () Bool)

(assert (=> b!134090 (= c!24907 (and ((_ is Cons!1712) (toList!869 lt!69262)) (not (= (_1!1324 (h!2317 (toList!869 lt!69262))) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))))

(assert (= (and d!41083 c!24906) b!134089))

(assert (= (and d!41083 (not c!24906)) b!134090))

(assert (= (and b!134090 c!24907) b!134091))

(assert (= (and b!134090 (not c!24907)) b!134092))

(assert (=> b!134091 m!156163))

(declare-fun m!158931 () Bool)

(assert (=> b!134091 m!158931))

(assert (=> b!133561 d!41083))

(declare-fun d!41085 () Bool)

(assert (=> d!41085 (= (isEmpty!409 (getValueByKey!172 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))) (not ((_ is Some!177) (getValueByKey!172 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))))

(assert (=> d!40671 d!41085))

(declare-fun e!87356 () Option!178)

(declare-fun b!134095 () Bool)

(assert (=> b!134095 (= e!87356 (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69413))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!134096 () Bool)

(assert (=> b!134096 (= e!87356 None!176)))

(declare-fun c!24908 () Bool)

(declare-fun d!41087 () Bool)

(assert (=> d!41087 (= c!24908 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69413))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69413)))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87355 () Option!178)

(assert (=> d!41087 (= (getValueByKey!172 (t!6167 (toList!869 lt!69413)) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87355)))

(declare-fun b!134093 () Bool)

(assert (=> b!134093 (= e!87355 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 lt!69413))))))))

(declare-fun b!134094 () Bool)

(assert (=> b!134094 (= e!87355 e!87356)))

(declare-fun c!24909 () Bool)

(assert (=> b!134094 (= c!24909 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69413))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69413)))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!41087 c!24908) b!134093))

(assert (= (and d!41087 (not c!24908)) b!134094))

(assert (= (and b!134094 c!24909) b!134095))

(assert (= (and b!134094 (not c!24909)) b!134096))

(declare-fun m!158933 () Bool)

(assert (=> b!134095 m!158933))

(assert (=> b!133729 d!41087))

(declare-fun d!41089 () Bool)

(declare-fun c!24912 () Bool)

(assert (=> d!41089 (= c!24912 ((_ is Nil!1713) (toList!869 lt!69500)))))

(declare-fun e!87359 () (InoxSet tuple2!2626))

(assert (=> d!41089 (= (content!133 (toList!869 lt!69500)) e!87359)))

(declare-fun b!134101 () Bool)

(assert (=> b!134101 (= e!87359 ((as const (Array tuple2!2626 Bool)) false))))

(declare-fun b!134102 () Bool)

(assert (=> b!134102 (= e!87359 ((_ map or) (store ((as const (Array tuple2!2626 Bool)) false) (h!2317 (toList!869 lt!69500)) true) (content!133 (t!6167 (toList!869 lt!69500)))))))

(assert (= (and d!41089 c!24912) b!134101))

(assert (= (and d!41089 (not c!24912)) b!134102))

(declare-fun m!158935 () Bool)

(assert (=> b!134102 m!158935))

(declare-fun m!158937 () Bool)

(assert (=> b!134102 m!158937))

(assert (=> d!40351 d!41089))

(declare-fun d!41091 () Bool)

(assert (=> d!41091 (= (apply!116 lt!69883 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69883) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5575 () Bool)

(assert (= bs!5575 d!41091))

(declare-fun m!158939 () Bool)

(assert (=> bs!5575 m!158939))

(assert (=> bs!5575 m!158939))

(declare-fun m!158941 () Bool)

(assert (=> bs!5575 m!158941))

(assert (=> b!133577 d!41091))

(declare-fun d!41093 () Bool)

(declare-fun e!87360 () Bool)

(assert (=> d!41093 e!87360))

(declare-fun res!64514 () Bool)

(assert (=> d!41093 (=> res!64514 e!87360)))

(declare-fun lt!70190 () Bool)

(assert (=> d!41093 (= res!64514 (not lt!70190))))

(declare-fun lt!70187 () Bool)

(assert (=> d!41093 (= lt!70190 lt!70187)))

(declare-fun lt!70189 () Unit!4135)

(declare-fun e!87361 () Unit!4135)

(assert (=> d!41093 (= lt!70189 e!87361)))

(declare-fun c!24913 () Bool)

(assert (=> d!41093 (= c!24913 lt!70187)))

(assert (=> d!41093 (= lt!70187 (containsKey!176 (toList!869 lt!69892) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!41093 (= (contains!899 lt!69892 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!70190)))

(declare-fun b!134103 () Bool)

(declare-fun lt!70188 () Unit!4135)

(assert (=> b!134103 (= e!87361 lt!70188)))

(assert (=> b!134103 (= lt!70188 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69892) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!134103 (isDefined!125 (getValueByKey!172 (toList!869 lt!69892) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!134104 () Bool)

(declare-fun Unit!4201 () Unit!4135)

(assert (=> b!134104 (= e!87361 Unit!4201)))

(declare-fun b!134105 () Bool)

(assert (=> b!134105 (= e!87360 (isDefined!125 (getValueByKey!172 (toList!869 lt!69892) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!41093 c!24913) b!134103))

(assert (= (and d!41093 (not c!24913)) b!134104))

(assert (= (and d!41093 (not res!64514)) b!134105))

(assert (=> d!41093 m!157811))

(declare-fun m!158943 () Bool)

(assert (=> d!41093 m!158943))

(assert (=> b!134103 m!157811))

(declare-fun m!158945 () Bool)

(assert (=> b!134103 m!158945))

(assert (=> b!134103 m!157811))

(declare-fun m!158947 () Bool)

(assert (=> b!134103 m!158947))

(assert (=> b!134103 m!158947))

(declare-fun m!158949 () Bool)

(assert (=> b!134103 m!158949))

(assert (=> b!134105 m!157811))

(assert (=> b!134105 m!158947))

(assert (=> b!134105 m!158947))

(assert (=> b!134105 m!158949))

(assert (=> b!133597 d!41093))

(declare-fun d!41095 () Bool)

(assert (=> d!41095 (= ($colon$colon!92 e!86750 (ite c!24632 (h!2317 (toList!869 call!14603)) (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (Cons!1712 (ite c!24632 (h!2317 (toList!869 call!14603)) (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!86750))))

(assert (=> bm!14679 d!41095))

(declare-fun d!41097 () Bool)

(declare-fun e!87362 () Bool)

(assert (=> d!41097 e!87362))

(declare-fun res!64515 () Bool)

(assert (=> d!41097 (=> res!64515 e!87362)))

(declare-fun lt!70194 () Bool)

(assert (=> d!41097 (= res!64515 (not lt!70194))))

(declare-fun lt!70191 () Bool)

(assert (=> d!41097 (= lt!70194 lt!70191)))

(declare-fun lt!70193 () Unit!4135)

(declare-fun e!87363 () Unit!4135)

(assert (=> d!41097 (= lt!70193 e!87363)))

(declare-fun c!24914 () Bool)

(assert (=> d!41097 (= c!24914 lt!70191)))

(assert (=> d!41097 (= lt!70191 (containsKey!176 (toList!869 lt!69638) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!41097 (= (contains!899 lt!69638 (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!70194)))

(declare-fun b!134106 () Bool)

(declare-fun lt!70192 () Unit!4135)

(assert (=> b!134106 (= e!87363 lt!70192)))

(assert (=> b!134106 (= lt!70192 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69638) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> b!134106 (isDefined!125 (getValueByKey!172 (toList!869 lt!69638) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!134107 () Bool)

(declare-fun Unit!4202 () Unit!4135)

(assert (=> b!134107 (= e!87363 Unit!4202)))

(declare-fun b!134108 () Bool)

(assert (=> b!134108 (= e!87362 (isDefined!125 (getValueByKey!172 (toList!869 lt!69638) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!41097 c!24914) b!134106))

(assert (= (and d!41097 (not c!24914)) b!134107))

(assert (= (and d!41097 (not res!64515)) b!134108))

(declare-fun m!158951 () Bool)

(assert (=> d!41097 m!158951))

(declare-fun m!158953 () Bool)

(assert (=> b!134106 m!158953))

(assert (=> b!134106 m!157091))

(assert (=> b!134106 m!157091))

(declare-fun m!158955 () Bool)

(assert (=> b!134106 m!158955))

(assert (=> b!134108 m!157091))

(assert (=> b!134108 m!157091))

(assert (=> b!134108 m!158955))

(assert (=> d!40483 d!41097))

(declare-fun e!87365 () Option!178)

(declare-fun b!134111 () Bool)

(assert (=> b!134111 (= e!87365 (getValueByKey!172 (t!6167 lt!69640) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!134112 () Bool)

(assert (=> b!134112 (= e!87365 None!176)))

(declare-fun c!24915 () Bool)

(declare-fun d!41099 () Bool)

(assert (=> d!41099 (= c!24915 (and ((_ is Cons!1712) lt!69640) (= (_1!1324 (h!2317 lt!69640)) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun e!87364 () Option!178)

(assert (=> d!41099 (= (getValueByKey!172 lt!69640 (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) e!87364)))

(declare-fun b!134109 () Bool)

(assert (=> b!134109 (= e!87364 (Some!177 (_2!1324 (h!2317 lt!69640))))))

(declare-fun b!134110 () Bool)

(assert (=> b!134110 (= e!87364 e!87365)))

(declare-fun c!24916 () Bool)

(assert (=> b!134110 (= c!24916 (and ((_ is Cons!1712) lt!69640) (not (= (_1!1324 (h!2317 lt!69640)) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))))

(assert (= (and d!41099 c!24915) b!134109))

(assert (= (and d!41099 (not c!24915)) b!134110))

(assert (= (and b!134110 c!24916) b!134111))

(assert (= (and b!134110 (not c!24916)) b!134112))

(declare-fun m!158957 () Bool)

(assert (=> b!134111 m!158957))

(assert (=> d!40483 d!41099))

(declare-fun d!41101 () Bool)

(assert (=> d!41101 (= (getValueByKey!172 lt!69640 (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) (Some!177 (_2!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun lt!70195 () Unit!4135)

(assert (=> d!41101 (= lt!70195 (choose!827 lt!69640 (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun e!87366 () Bool)

(assert (=> d!41101 e!87366))

(declare-fun res!64516 () Bool)

(assert (=> d!41101 (=> (not res!64516) (not e!87366))))

(assert (=> d!41101 (= res!64516 (isStrictlySorted!322 lt!69640))))

(assert (=> d!41101 (= (lemmaContainsTupThenGetReturnValue!87 lt!69640 (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!70195)))

(declare-fun b!134113 () Bool)

(declare-fun res!64517 () Bool)

(assert (=> b!134113 (=> (not res!64517) (not e!87366))))

(assert (=> b!134113 (= res!64517 (containsKey!176 lt!69640 (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!134114 () Bool)

(assert (=> b!134114 (= e!87366 (contains!902 lt!69640 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!41101 res!64516) b!134113))

(assert (= (and b!134113 res!64517) b!134114))

(assert (=> d!41101 m!157085))

(declare-fun m!158959 () Bool)

(assert (=> d!41101 m!158959))

(declare-fun m!158961 () Bool)

(assert (=> d!41101 m!158961))

(declare-fun m!158963 () Bool)

(assert (=> b!134113 m!158963))

(declare-fun m!158965 () Bool)

(assert (=> b!134114 m!158965))

(assert (=> d!40483 d!41101))

(declare-fun bm!14788 () Bool)

(declare-fun call!14792 () List!1716)

(declare-fun call!14793 () List!1716)

(assert (=> bm!14788 (= call!14792 call!14793)))

(declare-fun d!41103 () Bool)

(declare-fun e!87370 () Bool)

(assert (=> d!41103 e!87370))

(declare-fun res!64519 () Bool)

(assert (=> d!41103 (=> (not res!64519) (not e!87370))))

(declare-fun lt!70196 () List!1716)

(assert (=> d!41103 (= res!64519 (isStrictlySorted!322 lt!70196))))

(declare-fun e!87368 () List!1716)

(assert (=> d!41103 (= lt!70196 e!87368)))

(declare-fun c!24920 () Bool)

(assert (=> d!41103 (= c!24920 (and ((_ is Cons!1712) (toList!869 lt!69475)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69475))) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (=> d!41103 (isStrictlySorted!322 (toList!869 lt!69475))))

(assert (=> d!41103 (= (insertStrictlySorted!90 (toList!869 lt!69475) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!70196)))

(declare-fun b!134115 () Bool)

(assert (=> b!134115 (= e!87370 (contains!902 lt!70196 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun c!24918 () Bool)

(declare-fun b!134116 () Bool)

(assert (=> b!134116 (= c!24918 (and ((_ is Cons!1712) (toList!869 lt!69475)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69475))) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun e!87369 () List!1716)

(declare-fun e!87371 () List!1716)

(assert (=> b!134116 (= e!87369 e!87371)))

(declare-fun b!134117 () Bool)

(declare-fun e!87367 () List!1716)

(assert (=> b!134117 (= e!87367 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69475)) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!134118 () Bool)

(assert (=> b!134118 (= e!87369 call!14792)))

(declare-fun b!134119 () Bool)

(declare-fun call!14791 () List!1716)

(assert (=> b!134119 (= e!87371 call!14791)))

(declare-fun b!134120 () Bool)

(declare-fun c!24917 () Bool)

(assert (=> b!134120 (= e!87367 (ite c!24917 (t!6167 (toList!869 lt!69475)) (ite c!24918 (Cons!1712 (h!2317 (toList!869 lt!69475)) (t!6167 (toList!869 lt!69475))) Nil!1713)))))

(declare-fun b!134121 () Bool)

(assert (=> b!134121 (= e!87371 call!14791)))

(declare-fun b!134122 () Bool)

(assert (=> b!134122 (= e!87368 call!14793)))

(declare-fun bm!14789 () Bool)

(assert (=> bm!14789 (= call!14793 ($colon$colon!92 e!87367 (ite c!24920 (h!2317 (toList!869 lt!69475)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))))

(declare-fun c!24919 () Bool)

(assert (=> bm!14789 (= c!24919 c!24920)))

(declare-fun bm!14790 () Bool)

(assert (=> bm!14790 (= call!14791 call!14792)))

(declare-fun b!134123 () Bool)

(declare-fun res!64518 () Bool)

(assert (=> b!134123 (=> (not res!64518) (not e!87370))))

(assert (=> b!134123 (= res!64518 (containsKey!176 lt!70196 (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!134124 () Bool)

(assert (=> b!134124 (= e!87368 e!87369)))

(assert (=> b!134124 (= c!24917 (and ((_ is Cons!1712) (toList!869 lt!69475)) (= (_1!1324 (h!2317 (toList!869 lt!69475))) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!41103 c!24920) b!134122))

(assert (= (and d!41103 (not c!24920)) b!134124))

(assert (= (and b!134124 c!24917) b!134118))

(assert (= (and b!134124 (not c!24917)) b!134116))

(assert (= (and b!134116 c!24918) b!134119))

(assert (= (and b!134116 (not c!24918)) b!134121))

(assert (= (or b!134119 b!134121) bm!14790))

(assert (= (or b!134118 bm!14790) bm!14788))

(assert (= (or b!134122 bm!14788) bm!14789))

(assert (= (and bm!14789 c!24919) b!134117))

(assert (= (and bm!14789 (not c!24919)) b!134120))

(assert (= (and d!41103 res!64519) b!134123))

(assert (= (and b!134123 res!64518) b!134115))

(declare-fun m!158967 () Bool)

(assert (=> d!41103 m!158967))

(declare-fun m!158969 () Bool)

(assert (=> d!41103 m!158969))

(declare-fun m!158971 () Bool)

(assert (=> bm!14789 m!158971))

(declare-fun m!158973 () Bool)

(assert (=> b!134117 m!158973))

(declare-fun m!158975 () Bool)

(assert (=> b!134115 m!158975))

(declare-fun m!158977 () Bool)

(assert (=> b!134123 m!158977))

(assert (=> d!40483 d!41103))

(declare-fun d!41105 () Bool)

(declare-fun lt!70197 () Bool)

(assert (=> d!41105 (= lt!70197 (select (content!133 lt!69420) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87373 () Bool)

(assert (=> d!41105 (= lt!70197 e!87373)))

(declare-fun res!64520 () Bool)

(assert (=> d!41105 (=> (not res!64520) (not e!87373))))

(assert (=> d!41105 (= res!64520 ((_ is Cons!1712) lt!69420))))

(assert (=> d!41105 (= (contains!902 lt!69420 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!70197)))

(declare-fun b!134125 () Bool)

(declare-fun e!87372 () Bool)

(assert (=> b!134125 (= e!87373 e!87372)))

(declare-fun res!64521 () Bool)

(assert (=> b!134125 (=> res!64521 e!87372)))

(assert (=> b!134125 (= res!64521 (= (h!2317 lt!69420) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134126 () Bool)

(assert (=> b!134126 (= e!87372 (contains!902 (t!6167 lt!69420) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!41105 res!64520) b!134125))

(assert (= (and b!134125 (not res!64521)) b!134126))

(declare-fun m!158979 () Bool)

(assert (=> d!41105 m!158979))

(declare-fun m!158981 () Bool)

(assert (=> d!41105 m!158981))

(declare-fun m!158983 () Bool)

(assert (=> b!134126 m!158983))

(assert (=> b!133801 d!41105))

(declare-fun d!41107 () Bool)

(declare-fun res!64522 () Bool)

(declare-fun e!87374 () Bool)

(assert (=> d!41107 (=> res!64522 e!87374)))

(assert (=> d!41107 (= res!64522 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!69491))))

(assert (=> d!41107 (= (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69491 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!87374)))

(declare-fun b!134127 () Bool)

(declare-fun e!87375 () Bool)

(assert (=> b!134127 (= e!87374 e!87375)))

(declare-fun res!64523 () Bool)

(assert (=> b!134127 (=> (not res!64523) (not e!87375))))

(assert (=> b!134127 (= res!64523 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!134128 () Bool)

(assert (=> b!134128 (= e!87375 (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69491 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!41107 (not res!64522)) b!134127))

(assert (= (and b!134127 res!64523) b!134128))

(assert (=> d!41107 m!156619))

(declare-fun m!158985 () Bool)

(assert (=> b!134128 m!158985))

(assert (=> b!133443 d!41107))

(declare-fun d!41109 () Bool)

(declare-fun e!87376 () Bool)

(assert (=> d!41109 e!87376))

(declare-fun res!64524 () Bool)

(assert (=> d!41109 (=> res!64524 e!87376)))

(declare-fun lt!70201 () Bool)

(assert (=> d!41109 (= res!64524 (not lt!70201))))

(declare-fun lt!70198 () Bool)

(assert (=> d!41109 (= lt!70201 lt!70198)))

(declare-fun lt!70200 () Unit!4135)

(declare-fun e!87377 () Unit!4135)

(assert (=> d!41109 (= lt!70200 e!87377)))

(declare-fun c!24921 () Bool)

(assert (=> d!41109 (= c!24921 lt!70198)))

(assert (=> d!41109 (= lt!70198 (containsKey!176 (toList!869 lt!69965) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41109 (= (contains!899 lt!69965 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70201)))

(declare-fun b!134129 () Bool)

(declare-fun lt!70199 () Unit!4135)

(assert (=> b!134129 (= e!87377 lt!70199)))

(assert (=> b!134129 (= lt!70199 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69965) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134129 (isDefined!125 (getValueByKey!172 (toList!869 lt!69965) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134130 () Bool)

(declare-fun Unit!4203 () Unit!4135)

(assert (=> b!134130 (= e!87377 Unit!4203)))

(declare-fun b!134131 () Bool)

(assert (=> b!134131 (= e!87376 (isDefined!125 (getValueByKey!172 (toList!869 lt!69965) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41109 c!24921) b!134129))

(assert (= (and d!41109 (not c!24921)) b!134130))

(assert (= (and d!41109 (not res!64524)) b!134131))

(assert (=> d!41109 m!156163))

(declare-fun m!158987 () Bool)

(assert (=> d!41109 m!158987))

(assert (=> b!134129 m!156163))

(declare-fun m!158989 () Bool)

(assert (=> b!134129 m!158989))

(assert (=> b!134129 m!156163))

(declare-fun m!158991 () Bool)

(assert (=> b!134129 m!158991))

(assert (=> b!134129 m!158991))

(declare-fun m!158993 () Bool)

(assert (=> b!134129 m!158993))

(assert (=> b!134131 m!156163))

(assert (=> b!134131 m!158991))

(assert (=> b!134131 m!158991))

(assert (=> b!134131 m!158993))

(assert (=> b!133710 d!41109))

(declare-fun d!41111 () Bool)

(declare-fun e!87378 () Bool)

(assert (=> d!41111 e!87378))

(declare-fun res!64526 () Bool)

(assert (=> d!41111 (=> (not res!64526) (not e!87378))))

(declare-fun lt!70202 () ListLongMap!1707)

(assert (=> d!41111 (= res!64526 (contains!899 lt!70202 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70204 () List!1716)

(assert (=> d!41111 (= lt!70202 (ListLongMap!1708 lt!70204))))

(declare-fun lt!70205 () Unit!4135)

(declare-fun lt!70203 () Unit!4135)

(assert (=> d!41111 (= lt!70205 lt!70203)))

(assert (=> d!41111 (= (getValueByKey!172 lt!70204 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41111 (= lt!70203 (lemmaContainsTupThenGetReturnValue!87 lt!70204 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41111 (= lt!70204 (insertStrictlySorted!90 (toList!869 call!14702) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41111 (= (+!175 call!14702 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70202)))

(declare-fun b!134132 () Bool)

(declare-fun res!64525 () Bool)

(assert (=> b!134132 (=> (not res!64525) (not e!87378))))

(assert (=> b!134132 (= res!64525 (= (getValueByKey!172 (toList!869 lt!70202) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134133 () Bool)

(assert (=> b!134133 (= e!87378 (contains!902 (toList!869 lt!70202) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!41111 res!64526) b!134132))

(assert (= (and b!134132 res!64525) b!134133))

(declare-fun m!158995 () Bool)

(assert (=> d!41111 m!158995))

(declare-fun m!158997 () Bool)

(assert (=> d!41111 m!158997))

(declare-fun m!158999 () Bool)

(assert (=> d!41111 m!158999))

(declare-fun m!159001 () Bool)

(assert (=> d!41111 m!159001))

(declare-fun m!159003 () Bool)

(assert (=> b!134132 m!159003))

(declare-fun m!159005 () Bool)

(assert (=> b!134133 m!159005))

(assert (=> b!133267 d!41111))

(declare-fun d!41113 () Bool)

(assert (=> d!41113 (= (apply!116 lt!69850 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69850) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5576 () Bool)

(assert (= bs!5576 d!41113))

(declare-fun m!159007 () Bool)

(assert (=> bs!5576 m!159007))

(assert (=> bs!5576 m!159007))

(declare-fun m!159009 () Bool)

(assert (=> bs!5576 m!159009))

(assert (=> b!133534 d!41113))

(declare-fun bm!14791 () Bool)

(declare-fun c!24922 () Bool)

(declare-fun call!14794 () Bool)

(assert (=> bm!14791 (= call!14794 (arrayNoDuplicates!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24922 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24813 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))) (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)))) (ite c!24813 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))) (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))))))))

(declare-fun b!134134 () Bool)

(declare-fun e!87382 () Bool)

(declare-fun e!87379 () Bool)

(assert (=> b!134134 (= e!87382 e!87379)))

(assert (=> b!134134 (= c!24922 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun e!87380 () Bool)

(declare-fun b!134135 () Bool)

(assert (=> b!134135 (= e!87380 (contains!901 (ite c!24813 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))) (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134136 () Bool)

(assert (=> b!134136 (= e!87379 call!14794)))

(declare-fun b!134137 () Bool)

(declare-fun e!87381 () Bool)

(assert (=> b!134137 (= e!87381 e!87382)))

(declare-fun res!64529 () Bool)

(assert (=> b!134137 (=> (not res!64529) (not e!87382))))

(assert (=> b!134137 (= res!64529 (not e!87380))))

(declare-fun res!64528 () Bool)

(assert (=> b!134137 (=> (not res!64528) (not e!87380))))

(assert (=> b!134137 (= res!64528 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134138 () Bool)

(assert (=> b!134138 (= e!87379 call!14794)))

(declare-fun d!41115 () Bool)

(declare-fun res!64527 () Bool)

(assert (=> d!41115 (=> res!64527 e!87381)))

(assert (=> d!41115 (= res!64527 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!41115 (= (arrayNoDuplicates!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24813 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))) (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)))) e!87381)))

(assert (= (and d!41115 (not res!64527)) b!134137))

(assert (= (and b!134137 res!64528) b!134135))

(assert (= (and b!134137 res!64529) b!134134))

(assert (= (and b!134134 c!24922) b!134136))

(assert (= (and b!134134 (not c!24922)) b!134138))

(assert (= (or b!134136 b!134138) bm!14791))

(declare-fun m!159011 () Bool)

(assert (=> bm!14791 m!159011))

(declare-fun m!159013 () Bool)

(assert (=> bm!14791 m!159013))

(assert (=> b!134134 m!159011))

(assert (=> b!134134 m!159011))

(declare-fun m!159015 () Bool)

(assert (=> b!134134 m!159015))

(assert (=> b!134135 m!159011))

(assert (=> b!134135 m!159011))

(declare-fun m!159017 () Bool)

(assert (=> b!134135 m!159017))

(assert (=> b!134137 m!159011))

(assert (=> b!134137 m!159011))

(assert (=> b!134137 m!159015))

(assert (=> bm!14767 d!41115))

(declare-fun bm!14792 () Bool)

(declare-fun c!24923 () Bool)

(declare-fun call!14795 () Bool)

(assert (=> bm!14792 (= call!14795 (arrayNoDuplicates!0 (_keys!4614 (_2!1325 lt!69179)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24923 (Cons!1713 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24727 (Cons!1713 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24727 (Cons!1713 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))))))

(declare-fun b!134139 () Bool)

(declare-fun e!87386 () Bool)

(declare-fun e!87383 () Bool)

(assert (=> b!134139 (= e!87386 e!87383)))

(assert (=> b!134139 (= c!24923 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134140 () Bool)

(declare-fun e!87384 () Bool)

(assert (=> b!134140 (= e!87384 (contains!901 (ite c!24727 (Cons!1713 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000) Nil!1714) Nil!1714) (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134141 () Bool)

(assert (=> b!134141 (= e!87383 call!14795)))

(declare-fun b!134142 () Bool)

(declare-fun e!87385 () Bool)

(assert (=> b!134142 (= e!87385 e!87386)))

(declare-fun res!64532 () Bool)

(assert (=> b!134142 (=> (not res!64532) (not e!87386))))

(assert (=> b!134142 (= res!64532 (not e!87384))))

(declare-fun res!64531 () Bool)

(assert (=> b!134142 (=> (not res!64531) (not e!87384))))

(assert (=> b!134142 (= res!64531 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134143 () Bool)

(assert (=> b!134143 (= e!87383 call!14795)))

(declare-fun d!41117 () Bool)

(declare-fun res!64530 () Bool)

(assert (=> d!41117 (=> res!64530 e!87385)))

(assert (=> d!41117 (= res!64530 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(assert (=> d!41117 (= (arrayNoDuplicates!0 (_keys!4614 (_2!1325 lt!69179)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24727 (Cons!1713 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) e!87385)))

(assert (= (and d!41117 (not res!64530)) b!134142))

(assert (= (and b!134142 res!64531) b!134140))

(assert (= (and b!134142 res!64532) b!134139))

(assert (= (and b!134139 c!24923) b!134141))

(assert (= (and b!134139 (not c!24923)) b!134143))

(assert (= (or b!134141 b!134143) bm!14792))

(declare-fun m!159019 () Bool)

(assert (=> bm!14792 m!159019))

(declare-fun m!159021 () Bool)

(assert (=> bm!14792 m!159021))

(assert (=> b!134139 m!159019))

(assert (=> b!134139 m!159019))

(declare-fun m!159023 () Bool)

(assert (=> b!134139 m!159023))

(assert (=> b!134140 m!159019))

(assert (=> b!134140 m!159019))

(declare-fun m!159025 () Bool)

(assert (=> b!134140 m!159025))

(assert (=> b!134142 m!159019))

(assert (=> b!134142 m!159019))

(assert (=> b!134142 m!159023))

(assert (=> bm!14726 d!41117))

(declare-fun d!41119 () Bool)

(assert (=> d!41119 (isDefined!125 (getValueByKey!172 (toList!869 lt!69408) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70206 () Unit!4135)

(assert (=> d!41119 (= lt!70206 (choose!817 (toList!869 lt!69408) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87387 () Bool)

(assert (=> d!41119 e!87387))

(declare-fun res!64533 () Bool)

(assert (=> d!41119 (=> (not res!64533) (not e!87387))))

(assert (=> d!41119 (= res!64533 (isStrictlySorted!322 (toList!869 lt!69408)))))

(assert (=> d!41119 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69408) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70206)))

(declare-fun b!134144 () Bool)

(assert (=> b!134144 (= e!87387 (containsKey!176 (toList!869 lt!69408) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41119 res!64533) b!134144))

(assert (=> d!41119 m!156869))

(assert (=> d!41119 m!156869))

(assert (=> d!41119 m!156871))

(declare-fun m!159027 () Bool)

(assert (=> d!41119 m!159027))

(assert (=> d!41119 m!158789))

(assert (=> b!134144 m!156865))

(assert (=> b!133117 d!41119))

(declare-fun d!41121 () Bool)

(assert (=> d!41121 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69408) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69408) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5577 () Bool)

(assert (= bs!5577 d!41121))

(assert (=> bs!5577 m!156869))

(declare-fun m!159029 () Bool)

(assert (=> bs!5577 m!159029))

(assert (=> b!133117 d!41121))

(declare-fun b!134147 () Bool)

(declare-fun e!87389 () Option!178)

(assert (=> b!134147 (= e!87389 (getValueByKey!172 (t!6167 (toList!869 lt!69408)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134148 () Bool)

(assert (=> b!134148 (= e!87389 None!176)))

(declare-fun d!41123 () Bool)

(declare-fun c!24924 () Bool)

(assert (=> d!41123 (= c!24924 (and ((_ is Cons!1712) (toList!869 lt!69408)) (= (_1!1324 (h!2317 (toList!869 lt!69408))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87388 () Option!178)

(assert (=> d!41123 (= (getValueByKey!172 (toList!869 lt!69408) #b1000000000000000000000000000000000000000000000000000000000000000) e!87388)))

(declare-fun b!134145 () Bool)

(assert (=> b!134145 (= e!87388 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69408)))))))

(declare-fun b!134146 () Bool)

(assert (=> b!134146 (= e!87388 e!87389)))

(declare-fun c!24925 () Bool)

(assert (=> b!134146 (= c!24925 (and ((_ is Cons!1712) (toList!869 lt!69408)) (not (= (_1!1324 (h!2317 (toList!869 lt!69408))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!41123 c!24924) b!134145))

(assert (= (and d!41123 (not c!24924)) b!134146))

(assert (= (and b!134146 c!24925) b!134147))

(assert (= (and b!134146 (not c!24925)) b!134148))

(declare-fun m!159031 () Bool)

(assert (=> b!134147 m!159031))

(assert (=> b!133117 d!41123))

(assert (=> d!40731 d!40325))

(declare-fun d!41125 () Bool)

(assert (=> d!41125 (= (isEmpty!411 (toList!869 lt!69408)) ((_ is Nil!1713) (toList!869 lt!69408)))))

(assert (=> d!40567 d!41125))

(declare-fun d!41127 () Bool)

(declare-fun lt!70207 () Bool)

(assert (=> d!41127 (= lt!70207 (select (content!133 (toList!869 lt!69978)) (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun e!87391 () Bool)

(assert (=> d!41127 (= lt!70207 e!87391)))

(declare-fun res!64534 () Bool)

(assert (=> d!41127 (=> (not res!64534) (not e!87391))))

(assert (=> d!41127 (= res!64534 ((_ is Cons!1712) (toList!869 lt!69978)))))

(assert (=> d!41127 (= (contains!902 (toList!869 lt!69978) (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70207)))

(declare-fun b!134149 () Bool)

(declare-fun e!87390 () Bool)

(assert (=> b!134149 (= e!87391 e!87390)))

(declare-fun res!64535 () Bool)

(assert (=> b!134149 (=> res!64535 e!87390)))

(assert (=> b!134149 (= res!64535 (= (h!2317 (toList!869 lt!69978)) (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134150 () Bool)

(assert (=> b!134150 (= e!87390 (contains!902 (t!6167 (toList!869 lt!69978)) (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!41127 res!64534) b!134149))

(assert (= (and b!134149 (not res!64535)) b!134150))

(declare-fun m!159033 () Bool)

(assert (=> d!41127 m!159033))

(declare-fun m!159035 () Bool)

(assert (=> d!41127 m!159035))

(declare-fun m!159037 () Bool)

(assert (=> b!134150 m!159037))

(assert (=> b!133736 d!41127))

(declare-fun d!41129 () Bool)

(declare-fun res!64536 () Bool)

(declare-fun e!87392 () Bool)

(assert (=> d!41129 (=> res!64536 e!87392)))

(assert (=> d!41129 (= res!64536 (and ((_ is Cons!1712) lt!69622) (= (_1!1324 (h!2317 lt!69622)) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (=> d!41129 (= (containsKey!176 lt!69622 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) e!87392)))

(declare-fun b!134151 () Bool)

(declare-fun e!87393 () Bool)

(assert (=> b!134151 (= e!87392 e!87393)))

(declare-fun res!64537 () Bool)

(assert (=> b!134151 (=> (not res!64537) (not e!87393))))

(assert (=> b!134151 (= res!64537 (and (or (not ((_ is Cons!1712) lt!69622)) (bvsle (_1!1324 (h!2317 lt!69622)) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) ((_ is Cons!1712) lt!69622) (bvslt (_1!1324 (h!2317 lt!69622)) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun b!134152 () Bool)

(assert (=> b!134152 (= e!87393 (containsKey!176 (t!6167 lt!69622) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!41129 (not res!64536)) b!134151))

(assert (= (and b!134151 res!64537) b!134152))

(declare-fun m!159039 () Bool)

(assert (=> b!134152 m!159039))

(assert (=> b!133184 d!41129))

(assert (=> b!133713 d!40353))

(declare-fun d!41131 () Bool)

(assert (=> d!41131 (= (get!1485 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133668 d!41131))

(declare-fun d!41133 () Bool)

(declare-fun res!64538 () Bool)

(declare-fun e!87394 () Bool)

(assert (=> d!41133 (=> res!64538 e!87394)))

(assert (=> d!41133 (= res!64538 (and ((_ is Cons!1712) lt!69819) (= (_1!1324 (h!2317 lt!69819)) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!41133 (= (containsKey!176 lt!69819 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!87394)))

(declare-fun b!134153 () Bool)

(declare-fun e!87395 () Bool)

(assert (=> b!134153 (= e!87394 e!87395)))

(declare-fun res!64539 () Bool)

(assert (=> b!134153 (=> (not res!64539) (not e!87395))))

(assert (=> b!134153 (= res!64539 (and (or (not ((_ is Cons!1712) lt!69819)) (bvsle (_1!1324 (h!2317 lt!69819)) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1712) lt!69819) (bvslt (_1!1324 (h!2317 lt!69819)) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134154 () Bool)

(assert (=> b!134154 (= e!87395 (containsKey!176 (t!6167 lt!69819) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41133 (not res!64538)) b!134153))

(assert (= (and b!134153 res!64539) b!134154))

(declare-fun m!159041 () Bool)

(assert (=> b!134154 m!159041))

(assert (=> b!133507 d!41133))

(declare-fun d!41135 () Bool)

(declare-fun res!64540 () Bool)

(declare-fun e!87396 () Bool)

(assert (=> d!41135 (=> res!64540 e!87396)))

(assert (=> d!41135 (= res!64540 (and ((_ is Cons!1712) (toList!869 lt!69464)) (= (_1!1324 (h!2317 (toList!869 lt!69464))) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!41135 (= (containsKey!176 (toList!869 lt!69464) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) e!87396)))

(declare-fun b!134155 () Bool)

(declare-fun e!87397 () Bool)

(assert (=> b!134155 (= e!87396 e!87397)))

(declare-fun res!64541 () Bool)

(assert (=> b!134155 (=> (not res!64541) (not e!87397))))

(assert (=> b!134155 (= res!64541 (and (or (not ((_ is Cons!1712) (toList!869 lt!69464))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69464))) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1712) (toList!869 lt!69464)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69464))) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!134156 () Bool)

(assert (=> b!134156 (= e!87397 (containsKey!176 (t!6167 (toList!869 lt!69464)) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41135 (not res!64540)) b!134155))

(assert (= (and b!134155 res!64541) b!134156))

(assert (=> b!134156 m!156163))

(declare-fun m!159043 () Bool)

(assert (=> b!134156 m!159043))

(assert (=> d!40345 d!41135))

(declare-fun d!41137 () Bool)

(assert (=> d!41137 (= (size!2534 (_2!1325 lt!69179)) (bvadd (_size!598 (_2!1325 lt!69179)) (bvsdiv (bvadd (extraKeys!2630 (_2!1325 lt!69179)) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!133044 d!41137))

(declare-fun d!41139 () Bool)

(assert (=> d!41139 (isDefined!125 (getValueByKey!172 (toList!869 lt!69408) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!70208 () Unit!4135)

(assert (=> d!41139 (= lt!70208 (choose!817 (toList!869 lt!69408) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!87398 () Bool)

(assert (=> d!41139 e!87398))

(declare-fun res!64542 () Bool)

(assert (=> d!41139 (=> (not res!64542) (not e!87398))))

(assert (=> d!41139 (= res!64542 (isStrictlySorted!322 (toList!869 lt!69408)))))

(assert (=> d!41139 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69408) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!70208)))

(declare-fun b!134157 () Bool)

(assert (=> b!134157 (= e!87398 (containsKey!176 (toList!869 lt!69408) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!41139 res!64542) b!134157))

(assert (=> d!41139 m!155949))

(assert (=> d!41139 m!156681))

(assert (=> d!41139 m!156681))

(assert (=> d!41139 m!157609))

(assert (=> d!41139 m!155949))

(declare-fun m!159045 () Bool)

(assert (=> d!41139 m!159045))

(assert (=> d!41139 m!158789))

(assert (=> b!134157 m!155949))

(assert (=> b!134157 m!157605))

(assert (=> b!133487 d!41139))

(declare-fun d!41141 () Bool)

(assert (=> d!41141 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69408) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69408) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5578 () Bool)

(assert (= bs!5578 d!41141))

(assert (=> bs!5578 m!156681))

(declare-fun m!159047 () Bool)

(assert (=> bs!5578 m!159047))

(assert (=> b!133487 d!41141))

(assert (=> b!133487 d!40861))

(declare-fun d!41143 () Bool)

(assert (=> d!41143 (arrayContainsKey!0 (_keys!4614 (_2!1325 lt!69179)) lt!69930 #b00000000000000000000000000000000)))

(declare-fun lt!70209 () Unit!4135)

(assert (=> d!41143 (= lt!70209 (choose!13 (_keys!4614 (_2!1325 lt!69179)) lt!69930 #b00000000000000000000000000000000))))

(assert (=> d!41143 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!41143 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (_2!1325 lt!69179)) lt!69930 #b00000000000000000000000000000000) lt!70209)))

(declare-fun bs!5579 () Bool)

(assert (= bs!5579 d!41143))

(assert (=> bs!5579 m!157951))

(declare-fun m!159049 () Bool)

(assert (=> bs!5579 m!159049))

(assert (=> b!133664 d!41143))

(declare-fun d!41145 () Bool)

(declare-fun res!64543 () Bool)

(declare-fun e!87399 () Bool)

(assert (=> d!41145 (=> res!64543 e!87399)))

(assert (=> d!41145 (= res!64543 (= (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000) lt!69930))))

(assert (=> d!41145 (= (arrayContainsKey!0 (_keys!4614 (_2!1325 lt!69179)) lt!69930 #b00000000000000000000000000000000) e!87399)))

(declare-fun b!134158 () Bool)

(declare-fun e!87400 () Bool)

(assert (=> b!134158 (= e!87399 e!87400)))

(declare-fun res!64544 () Bool)

(assert (=> b!134158 (=> (not res!64544) (not e!87400))))

(assert (=> b!134158 (= res!64544 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(declare-fun b!134159 () Bool)

(assert (=> b!134159 (= e!87400 (arrayContainsKey!0 (_keys!4614 (_2!1325 lt!69179)) lt!69930 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!41145 (not res!64543)) b!134158))

(assert (= (and b!134158 res!64544) b!134159))

(assert (=> d!41145 m!157587))

(declare-fun m!159051 () Bool)

(assert (=> b!134159 m!159051))

(assert (=> b!133664 d!41145))

(declare-fun b!134160 () Bool)

(declare-fun e!87401 () SeekEntryResult!275)

(declare-fun lt!70211 () SeekEntryResult!275)

(assert (=> b!134160 (= e!87401 (Found!275 (index!3262 lt!70211)))))

(declare-fun d!41147 () Bool)

(declare-fun lt!70212 () SeekEntryResult!275)

(assert (=> d!41147 (and (or ((_ is Undefined!275) lt!70212) (not ((_ is Found!275) lt!70212)) (and (bvsge (index!3261 lt!70212) #b00000000000000000000000000000000) (bvslt (index!3261 lt!70212) (size!2530 (_keys!4614 (_2!1325 lt!69179)))))) (or ((_ is Undefined!275) lt!70212) ((_ is Found!275) lt!70212) (not ((_ is MissingZero!275) lt!70212)) (and (bvsge (index!3260 lt!70212) #b00000000000000000000000000000000) (bvslt (index!3260 lt!70212) (size!2530 (_keys!4614 (_2!1325 lt!69179)))))) (or ((_ is Undefined!275) lt!70212) ((_ is Found!275) lt!70212) ((_ is MissingZero!275) lt!70212) (not ((_ is MissingVacant!275) lt!70212)) (and (bvsge (index!3263 lt!70212) #b00000000000000000000000000000000) (bvslt (index!3263 lt!70212) (size!2530 (_keys!4614 (_2!1325 lt!69179)))))) (or ((_ is Undefined!275) lt!70212) (ite ((_ is Found!275) lt!70212) (= (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) (index!3261 lt!70212)) (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!275) lt!70212) (= (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) (index!3260 lt!70212)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!275) lt!70212) (= (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) (index!3263 lt!70212)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87402 () SeekEntryResult!275)

(assert (=> d!41147 (= lt!70212 e!87402)))

(declare-fun c!24927 () Bool)

(assert (=> d!41147 (= c!24927 (and ((_ is Intermediate!275) lt!70211) (undefined!1087 lt!70211)))))

(assert (=> d!41147 (= lt!70211 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000) (mask!7165 (_2!1325 lt!69179))) (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000) (_keys!4614 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179))))))

(assert (=> d!41147 (validMask!0 (mask!7165 (_2!1325 lt!69179)))))

(assert (=> d!41147 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000) (_keys!4614 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179))) lt!70212)))

(declare-fun b!134161 () Bool)

(assert (=> b!134161 (= e!87402 e!87401)))

(declare-fun lt!70210 () (_ BitVec 64))

(assert (=> b!134161 (= lt!70210 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) (index!3262 lt!70211)))))

(declare-fun c!24926 () Bool)

(assert (=> b!134161 (= c!24926 (= lt!70210 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(declare-fun b!134162 () Bool)

(declare-fun e!87403 () SeekEntryResult!275)

(assert (=> b!134162 (= e!87403 (MissingZero!275 (index!3262 lt!70211)))))

(declare-fun b!134163 () Bool)

(declare-fun c!24928 () Bool)

(assert (=> b!134163 (= c!24928 (= lt!70210 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134163 (= e!87401 e!87403)))

(declare-fun b!134164 () Bool)

(assert (=> b!134164 (= e!87402 Undefined!275)))

(declare-fun b!134165 () Bool)

(assert (=> b!134165 (= e!87403 (seekKeyOrZeroReturnVacant!0 (x!15592 lt!70211) (index!3262 lt!70211) (index!3262 lt!70211) (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000) (_keys!4614 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179))))))

(assert (= (and d!41147 c!24927) b!134164))

(assert (= (and d!41147 (not c!24927)) b!134161))

(assert (= (and b!134161 c!24926) b!134160))

(assert (= (and b!134161 (not c!24926)) b!134163))

(assert (= (and b!134163 c!24928) b!134162))

(assert (= (and b!134163 (not c!24928)) b!134165))

(declare-fun m!159053 () Bool)

(assert (=> d!41147 m!159053))

(declare-fun m!159055 () Bool)

(assert (=> d!41147 m!159055))

(assert (=> d!41147 m!157587))

(declare-fun m!159057 () Bool)

(assert (=> d!41147 m!159057))

(assert (=> d!41147 m!157587))

(assert (=> d!41147 m!159055))

(assert (=> d!41147 m!156817))

(declare-fun m!159059 () Bool)

(assert (=> d!41147 m!159059))

(declare-fun m!159061 () Bool)

(assert (=> d!41147 m!159061))

(declare-fun m!159063 () Bool)

(assert (=> b!134161 m!159063))

(assert (=> b!134165 m!157587))

(declare-fun m!159065 () Bool)

(assert (=> b!134165 m!159065))

(assert (=> b!133664 d!41147))

(declare-fun d!41149 () Bool)

(assert (=> d!41149 (= (isEmpty!409 (getValueByKey!172 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not ((_ is Some!177) (getValueByKey!172 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (=> d!40327 d!41149))

(declare-fun d!41151 () Bool)

(declare-fun lt!70213 () Bool)

(assert (=> d!41151 (= lt!70213 (select (content!133 (toList!869 lt!69536)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87405 () Bool)

(assert (=> d!41151 (= lt!70213 e!87405)))

(declare-fun res!64545 () Bool)

(assert (=> d!41151 (=> (not res!64545) (not e!87405))))

(assert (=> d!41151 (= res!64545 ((_ is Cons!1712) (toList!869 lt!69536)))))

(assert (=> d!41151 (= (contains!902 (toList!869 lt!69536) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70213)))

(declare-fun b!134166 () Bool)

(declare-fun e!87404 () Bool)

(assert (=> b!134166 (= e!87405 e!87404)))

(declare-fun res!64546 () Bool)

(assert (=> b!134166 (=> res!64546 e!87404)))

(assert (=> b!134166 (= res!64546 (= (h!2317 (toList!869 lt!69536)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134167 () Bool)

(assert (=> b!134167 (= e!87404 (contains!902 (t!6167 (toList!869 lt!69536)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41151 res!64545) b!134166))

(assert (= (and b!134166 (not res!64546)) b!134167))

(declare-fun m!159067 () Bool)

(assert (=> d!41151 m!159067))

(declare-fun m!159069 () Bool)

(assert (=> d!41151 m!159069))

(declare-fun m!159071 () Bool)

(assert (=> b!134167 m!159071))

(assert (=> b!133009 d!41151))

(assert (=> d!40489 d!40485))

(declare-fun d!41153 () Bool)

(assert (=> d!41153 (= (apply!116 (+!175 lt!69472 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69485) (apply!116 lt!69472 lt!69485))))

(assert (=> d!41153 true))

(declare-fun _$34!979 () Unit!4135)

(assert (=> d!41153 (= (choose!822 lt!69472 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69485) _$34!979)))

(declare-fun bs!5580 () Bool)

(assert (= bs!5580 d!41153))

(assert (=> bs!5580 m!156579))

(assert (=> bs!5580 m!156579))

(assert (=> bs!5580 m!156597))

(assert (=> bs!5580 m!156595))

(assert (=> d!40489 d!41153))

(declare-fun d!41155 () Bool)

(declare-fun e!87406 () Bool)

(assert (=> d!41155 e!87406))

(declare-fun res!64547 () Bool)

(assert (=> d!41155 (=> res!64547 e!87406)))

(declare-fun lt!70217 () Bool)

(assert (=> d!41155 (= res!64547 (not lt!70217))))

(declare-fun lt!70214 () Bool)

(assert (=> d!41155 (= lt!70217 lt!70214)))

(declare-fun lt!70216 () Unit!4135)

(declare-fun e!87407 () Unit!4135)

(assert (=> d!41155 (= lt!70216 e!87407)))

(declare-fun c!24929 () Bool)

(assert (=> d!41155 (= c!24929 lt!70214)))

(assert (=> d!41155 (= lt!70214 (containsKey!176 (toList!869 lt!69472) lt!69485))))

(assert (=> d!41155 (= (contains!899 lt!69472 lt!69485) lt!70217)))

(declare-fun b!134168 () Bool)

(declare-fun lt!70215 () Unit!4135)

(assert (=> b!134168 (= e!87407 lt!70215)))

(assert (=> b!134168 (= lt!70215 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69472) lt!69485))))

(assert (=> b!134168 (isDefined!125 (getValueByKey!172 (toList!869 lt!69472) lt!69485))))

(declare-fun b!134169 () Bool)

(declare-fun Unit!4204 () Unit!4135)

(assert (=> b!134169 (= e!87407 Unit!4204)))

(declare-fun b!134170 () Bool)

(assert (=> b!134170 (= e!87406 (isDefined!125 (getValueByKey!172 (toList!869 lt!69472) lt!69485)))))

(assert (= (and d!41155 c!24929) b!134168))

(assert (= (and d!41155 (not c!24929)) b!134169))

(assert (= (and d!41155 (not res!64547)) b!134170))

(declare-fun m!159073 () Bool)

(assert (=> d!41155 m!159073))

(declare-fun m!159075 () Bool)

(assert (=> b!134168 m!159075))

(assert (=> b!134168 m!157183))

(assert (=> b!134168 m!157183))

(declare-fun m!159077 () Bool)

(assert (=> b!134168 m!159077))

(assert (=> b!134170 m!157183))

(assert (=> b!134170 m!157183))

(assert (=> b!134170 m!159077))

(assert (=> d!40489 d!41155))

(assert (=> d!40489 d!40507))

(assert (=> d!40489 d!40509))

(declare-fun d!41157 () Bool)

(declare-fun e!87408 () Bool)

(assert (=> d!41157 e!87408))

(declare-fun res!64548 () Bool)

(assert (=> d!41157 (=> res!64548 e!87408)))

(declare-fun lt!70221 () Bool)

(assert (=> d!41157 (= res!64548 (not lt!70221))))

(declare-fun lt!70218 () Bool)

(assert (=> d!41157 (= lt!70221 lt!70218)))

(declare-fun lt!70220 () Unit!4135)

(declare-fun e!87409 () Unit!4135)

(assert (=> d!41157 (= lt!70220 e!87409)))

(declare-fun c!24930 () Bool)

(assert (=> d!41157 (= c!24930 lt!70218)))

(assert (=> d!41157 (= lt!70218 (containsKey!176 (toList!869 lt!69550) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41157 (= (contains!899 lt!69550 (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) lt!70221)))

(declare-fun b!134171 () Bool)

(declare-fun lt!70219 () Unit!4135)

(assert (=> b!134171 (= e!87409 lt!70219)))

(assert (=> b!134171 (= lt!70219 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69550) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> b!134171 (isDefined!125 (getValueByKey!172 (toList!869 lt!69550) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134172 () Bool)

(declare-fun Unit!4205 () Unit!4135)

(assert (=> b!134172 (= e!87409 Unit!4205)))

(declare-fun b!134173 () Bool)

(assert (=> b!134173 (= e!87408 (isDefined!125 (getValueByKey!172 (toList!869 lt!69550) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41157 c!24930) b!134171))

(assert (= (and d!41157 (not c!24930)) b!134172))

(assert (= (and d!41157 (not res!64548)) b!134173))

(declare-fun m!159079 () Bool)

(assert (=> d!41157 m!159079))

(declare-fun m!159081 () Bool)

(assert (=> b!134171 m!159081))

(assert (=> b!134171 m!156799))

(assert (=> b!134171 m!156799))

(declare-fun m!159083 () Bool)

(assert (=> b!134171 m!159083))

(assert (=> b!134173 m!156799))

(assert (=> b!134173 m!156799))

(assert (=> b!134173 m!159083))

(assert (=> d!40381 d!41157))

(declare-fun b!134176 () Bool)

(declare-fun e!87411 () Option!178)

(assert (=> b!134176 (= e!87411 (getValueByKey!172 (t!6167 lt!69552) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134177 () Bool)

(assert (=> b!134177 (= e!87411 None!176)))

(declare-fun c!24931 () Bool)

(declare-fun d!41159 () Bool)

(assert (=> d!41159 (= c!24931 (and ((_ is Cons!1712) lt!69552) (= (_1!1324 (h!2317 lt!69552)) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun e!87410 () Option!178)

(assert (=> d!41159 (= (getValueByKey!172 lt!69552 (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) e!87410)))

(declare-fun b!134174 () Bool)

(assert (=> b!134174 (= e!87410 (Some!177 (_2!1324 (h!2317 lt!69552))))))

(declare-fun b!134175 () Bool)

(assert (=> b!134175 (= e!87410 e!87411)))

(declare-fun c!24932 () Bool)

(assert (=> b!134175 (= c!24932 (and ((_ is Cons!1712) lt!69552) (not (= (_1!1324 (h!2317 lt!69552)) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))))

(assert (= (and d!41159 c!24931) b!134174))

(assert (= (and d!41159 (not c!24931)) b!134175))

(assert (= (and b!134175 c!24932) b!134176))

(assert (= (and b!134175 (not c!24932)) b!134177))

(declare-fun m!159085 () Bool)

(assert (=> b!134176 m!159085))

(assert (=> d!40381 d!41159))

(declare-fun d!41161 () Bool)

(assert (=> d!41161 (= (getValueByKey!172 lt!69552 (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!70222 () Unit!4135)

(assert (=> d!41161 (= lt!70222 (choose!827 lt!69552 (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun e!87412 () Bool)

(assert (=> d!41161 e!87412))

(declare-fun res!64549 () Bool)

(assert (=> d!41161 (=> (not res!64549) (not e!87412))))

(assert (=> d!41161 (= res!64549 (isStrictlySorted!322 lt!69552))))

(assert (=> d!41161 (= (lemmaContainsTupThenGetReturnValue!87 lt!69552 (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) lt!70222)))

(declare-fun b!134178 () Bool)

(declare-fun res!64550 () Bool)

(assert (=> b!134178 (=> (not res!64550) (not e!87412))))

(assert (=> b!134178 (= res!64550 (containsKey!176 lt!69552 (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134179 () Bool)

(assert (=> b!134179 (= e!87412 (contains!902 lt!69552 (tuple2!2627 (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41161 res!64549) b!134178))

(assert (= (and b!134178 res!64550) b!134179))

(assert (=> d!41161 m!156793))

(declare-fun m!159087 () Bool)

(assert (=> d!41161 m!159087))

(declare-fun m!159089 () Bool)

(assert (=> d!41161 m!159089))

(declare-fun m!159091 () Bool)

(assert (=> b!134178 m!159091))

(declare-fun m!159093 () Bool)

(assert (=> b!134179 m!159093))

(assert (=> d!40381 d!41161))

(declare-fun bm!14793 () Bool)

(declare-fun call!14797 () List!1716)

(declare-fun call!14798 () List!1716)

(assert (=> bm!14793 (= call!14797 call!14798)))

(declare-fun d!41163 () Bool)

(declare-fun e!87416 () Bool)

(assert (=> d!41163 e!87416))

(declare-fun res!64552 () Bool)

(assert (=> d!41163 (=> (not res!64552) (not e!87416))))

(declare-fun lt!70223 () List!1716)

(assert (=> d!41163 (= res!64552 (isStrictlySorted!322 lt!70223))))

(declare-fun e!87414 () List!1716)

(assert (=> d!41163 (= lt!70223 e!87414)))

(declare-fun c!24936 () Bool)

(assert (=> d!41163 (= c!24936 (and ((_ is Cons!1712) (toList!869 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634)))) (bvslt (_1!1324 (h!2317 (toList!869 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634))))) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (=> d!41163 (isStrictlySorted!322 (toList!869 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634))))))

(assert (=> d!41163 (= (insertStrictlySorted!90 (toList!869 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634))) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) lt!70223)))

(declare-fun b!134180 () Bool)

(assert (=> b!134180 (= e!87416 (contains!902 lt!70223 (tuple2!2627 (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun c!24934 () Bool)

(declare-fun b!134181 () Bool)

(assert (=> b!134181 (= c!24934 (and ((_ is Cons!1712) (toList!869 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634)))) (bvsgt (_1!1324 (h!2317 (toList!869 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634))))) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun e!87415 () List!1716)

(declare-fun e!87417 () List!1716)

(assert (=> b!134181 (= e!87415 e!87417)))

(declare-fun b!134182 () Bool)

(declare-fun e!87413 () List!1716)

(assert (=> b!134182 (= e!87413 (insertStrictlySorted!90 (t!6167 (toList!869 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634)))) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134183 () Bool)

(assert (=> b!134183 (= e!87415 call!14797)))

(declare-fun b!134184 () Bool)

(declare-fun call!14796 () List!1716)

(assert (=> b!134184 (= e!87417 call!14796)))

(declare-fun b!134185 () Bool)

(declare-fun c!24933 () Bool)

(assert (=> b!134185 (= e!87413 (ite c!24933 (t!6167 (toList!869 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634)))) (ite c!24934 (Cons!1712 (h!2317 (toList!869 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634)))) (t!6167 (toList!869 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634))))) Nil!1713)))))

(declare-fun b!134186 () Bool)

(assert (=> b!134186 (= e!87417 call!14796)))

(declare-fun b!134187 () Bool)

(assert (=> b!134187 (= e!87414 call!14798)))

(declare-fun bm!14794 () Bool)

(assert (=> bm!14794 (= call!14798 ($colon$colon!92 e!87413 (ite c!24936 (h!2317 (toList!869 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634)))) (tuple2!2627 (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))))

(declare-fun c!24935 () Bool)

(assert (=> bm!14794 (= c!24935 c!24936)))

(declare-fun bm!14795 () Bool)

(assert (=> bm!14795 (= call!14796 call!14797)))

(declare-fun b!134188 () Bool)

(declare-fun res!64551 () Bool)

(assert (=> b!134188 (=> (not res!64551) (not e!87416))))

(assert (=> b!134188 (= res!64551 (containsKey!176 lt!70223 (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134189 () Bool)

(assert (=> b!134189 (= e!87414 e!87415)))

(assert (=> b!134189 (= c!24933 (and ((_ is Cons!1712) (toList!869 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634)))) (= (_1!1324 (h!2317 (toList!869 (ite c!24531 call!14630 (ite c!24529 call!14633 call!14634))))) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41163 c!24936) b!134187))

(assert (= (and d!41163 (not c!24936)) b!134189))

(assert (= (and b!134189 c!24933) b!134183))

(assert (= (and b!134189 (not c!24933)) b!134181))

(assert (= (and b!134181 c!24934) b!134184))

(assert (= (and b!134181 (not c!24934)) b!134186))

(assert (= (or b!134184 b!134186) bm!14795))

(assert (= (or b!134183 bm!14795) bm!14793))

(assert (= (or b!134187 bm!14793) bm!14794))

(assert (= (and bm!14794 c!24935) b!134182))

(assert (= (and bm!14794 (not c!24935)) b!134185))

(assert (= (and d!41163 res!64552) b!134188))

(assert (= (and b!134188 res!64551) b!134180))

(declare-fun m!159095 () Bool)

(assert (=> d!41163 m!159095))

(declare-fun m!159097 () Bool)

(assert (=> d!41163 m!159097))

(declare-fun m!159099 () Bool)

(assert (=> bm!14794 m!159099))

(declare-fun m!159101 () Bool)

(assert (=> b!134182 m!159101))

(declare-fun m!159103 () Bool)

(assert (=> b!134180 m!159103))

(declare-fun m!159105 () Bool)

(assert (=> b!134188 m!159105))

(assert (=> d!40381 d!41163))

(assert (=> b!133675 d!40905))

(assert (=> b!133675 d!40755))

(declare-fun d!41165 () Bool)

(declare-fun res!64553 () Bool)

(declare-fun e!87418 () Bool)

(assert (=> d!41165 (=> res!64553 e!87418)))

(assert (=> d!41165 (= res!64553 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))) lt!69461)))))

(assert (=> d!41165 (= (containsKey!176 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) lt!69461) e!87418)))

(declare-fun b!134190 () Bool)

(declare-fun e!87419 () Bool)

(assert (=> b!134190 (= e!87418 e!87419)))

(declare-fun res!64554 () Bool)

(assert (=> b!134190 (=> (not res!64554) (not e!87419))))

(assert (=> b!134190 (= res!64554 (and (or (not ((_ is Cons!1712) (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))) (bvsle (_1!1324 (h!2317 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))) lt!69461)) ((_ is Cons!1712) (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))) (bvslt (_1!1324 (h!2317 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))) lt!69461)))))

(declare-fun b!134191 () Bool)

(assert (=> b!134191 (= e!87419 (containsKey!176 (t!6167 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))) lt!69461))))

(assert (= (and d!41165 (not res!64553)) b!134190))

(assert (= (and b!134190 res!64554) b!134191))

(declare-fun m!159107 () Bool)

(assert (=> b!134191 m!159107))

(assert (=> d!40437 d!41165))

(declare-fun d!41167 () Bool)

(declare-fun e!87420 () Bool)

(assert (=> d!41167 e!87420))

(declare-fun res!64555 () Bool)

(assert (=> d!41167 (=> res!64555 e!87420)))

(declare-fun lt!70227 () Bool)

(assert (=> d!41167 (= res!64555 (not lt!70227))))

(declare-fun lt!70224 () Bool)

(assert (=> d!41167 (= lt!70227 lt!70224)))

(declare-fun lt!70226 () Unit!4135)

(declare-fun e!87421 () Unit!4135)

(assert (=> d!41167 (= lt!70226 e!87421)))

(declare-fun c!24937 () Bool)

(assert (=> d!41167 (= c!24937 lt!70224)))

(assert (=> d!41167 (= lt!70224 (containsKey!176 (toList!869 lt!69548) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41167 (= (contains!899 lt!69548 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70227)))

(declare-fun b!134192 () Bool)

(declare-fun lt!70225 () Unit!4135)

(assert (=> b!134192 (= e!87421 lt!70225)))

(assert (=> b!134192 (= lt!70225 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69548) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134192 (isDefined!125 (getValueByKey!172 (toList!869 lt!69548) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134193 () Bool)

(declare-fun Unit!4206 () Unit!4135)

(assert (=> b!134193 (= e!87421 Unit!4206)))

(declare-fun b!134194 () Bool)

(assert (=> b!134194 (= e!87420 (isDefined!125 (getValueByKey!172 (toList!869 lt!69548) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41167 c!24937) b!134192))

(assert (= (and d!41167 (not c!24937)) b!134193))

(assert (= (and d!41167 (not res!64555)) b!134194))

(declare-fun m!159109 () Bool)

(assert (=> d!41167 m!159109))

(declare-fun m!159111 () Bool)

(assert (=> b!134192 m!159111))

(declare-fun m!159113 () Bool)

(assert (=> b!134192 m!159113))

(assert (=> b!134192 m!159113))

(declare-fun m!159115 () Bool)

(assert (=> b!134192 m!159115))

(assert (=> b!134194 m!159113))

(assert (=> b!134194 m!159113))

(assert (=> b!134194 m!159115))

(assert (=> b!133019 d!41167))

(declare-fun d!41169 () Bool)

(assert (=> d!41169 (= (validKeyInArray!0 (select (arr!2261 lt!69349) #b00000000000000000000000000000000)) (and (not (= (select (arr!2261 lt!69349) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2261 lt!69349) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133311 d!41169))

(declare-fun lt!70228 () Bool)

(declare-fun d!41171 () Bool)

(assert (=> d!41171 (= lt!70228 (select (content!133 (toList!869 lt!69970)) (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun e!87423 () Bool)

(assert (=> d!41171 (= lt!70228 e!87423)))

(declare-fun res!64556 () Bool)

(assert (=> d!41171 (=> (not res!64556) (not e!87423))))

(assert (=> d!41171 (= res!64556 ((_ is Cons!1712) (toList!869 lt!69970)))))

(assert (=> d!41171 (= (contains!902 (toList!869 lt!69970) (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70228)))

(declare-fun b!134195 () Bool)

(declare-fun e!87422 () Bool)

(assert (=> b!134195 (= e!87423 e!87422)))

(declare-fun res!64557 () Bool)

(assert (=> b!134195 (=> res!64557 e!87422)))

(assert (=> b!134195 (= res!64557 (= (h!2317 (toList!869 lt!69970)) (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134196 () Bool)

(assert (=> b!134196 (= e!87422 (contains!902 (t!6167 (toList!869 lt!69970)) (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (= (and d!41171 res!64556) b!134195))

(assert (= (and b!134195 (not res!64557)) b!134196))

(declare-fun m!159117 () Bool)

(assert (=> d!41171 m!159117))

(declare-fun m!159119 () Bool)

(assert (=> d!41171 m!159119))

(declare-fun m!159121 () Bool)

(assert (=> b!134196 m!159121))

(assert (=> b!133720 d!41171))

(declare-fun d!41173 () Bool)

(assert (=> d!41173 (= (isEmpty!409 (getValueByKey!172 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!177) (getValueByKey!172 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!40341 d!41173))

(assert (=> b!133239 d!40891))

(assert (=> b!133239 d!40893))

(declare-fun d!41175 () Bool)

(assert (=> d!41175 (= (apply!116 lt!69750 lt!69746) (get!1486 (getValueByKey!172 (toList!869 lt!69750) lt!69746)))))

(declare-fun bs!5581 () Bool)

(assert (= bs!5581 d!41175))

(declare-fun m!159123 () Bool)

(assert (=> bs!5581 m!159123))

(assert (=> bs!5581 m!159123))

(declare-fun m!159125 () Bool)

(assert (=> bs!5581 m!159125))

(assert (=> b!133349 d!41175))

(declare-fun d!41177 () Bool)

(assert (=> d!41177 (= (apply!116 (+!175 lt!69750 (tuple2!2627 lt!69752 (zeroValue!2720 newMap!16))) lt!69746) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69750 (tuple2!2627 lt!69752 (zeroValue!2720 newMap!16)))) lt!69746)))))

(declare-fun bs!5582 () Bool)

(assert (= bs!5582 d!41177))

(declare-fun m!159127 () Bool)

(assert (=> bs!5582 m!159127))

(assert (=> bs!5582 m!159127))

(declare-fun m!159129 () Bool)

(assert (=> bs!5582 m!159129))

(assert (=> b!133349 d!41177))

(declare-fun d!41179 () Bool)

(declare-fun e!87424 () Bool)

(assert (=> d!41179 e!87424))

(declare-fun res!64559 () Bool)

(assert (=> d!41179 (=> (not res!64559) (not e!87424))))

(declare-fun lt!70229 () ListLongMap!1707)

(assert (=> d!41179 (= res!64559 (contains!899 lt!70229 (_1!1324 (tuple2!2627 lt!69762 (minValue!2720 newMap!16)))))))

(declare-fun lt!70231 () List!1716)

(assert (=> d!41179 (= lt!70229 (ListLongMap!1708 lt!70231))))

(declare-fun lt!70232 () Unit!4135)

(declare-fun lt!70230 () Unit!4135)

(assert (=> d!41179 (= lt!70232 lt!70230)))

(assert (=> d!41179 (= (getValueByKey!172 lt!70231 (_1!1324 (tuple2!2627 lt!69762 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69762 (minValue!2720 newMap!16)))))))

(assert (=> d!41179 (= lt!70230 (lemmaContainsTupThenGetReturnValue!87 lt!70231 (_1!1324 (tuple2!2627 lt!69762 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69762 (minValue!2720 newMap!16)))))))

(assert (=> d!41179 (= lt!70231 (insertStrictlySorted!90 (toList!869 lt!69747) (_1!1324 (tuple2!2627 lt!69762 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69762 (minValue!2720 newMap!16)))))))

(assert (=> d!41179 (= (+!175 lt!69747 (tuple2!2627 lt!69762 (minValue!2720 newMap!16))) lt!70229)))

(declare-fun b!134197 () Bool)

(declare-fun res!64558 () Bool)

(assert (=> b!134197 (=> (not res!64558) (not e!87424))))

(assert (=> b!134197 (= res!64558 (= (getValueByKey!172 (toList!869 lt!70229) (_1!1324 (tuple2!2627 lt!69762 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69762 (minValue!2720 newMap!16))))))))

(declare-fun b!134198 () Bool)

(assert (=> b!134198 (= e!87424 (contains!902 (toList!869 lt!70229) (tuple2!2627 lt!69762 (minValue!2720 newMap!16))))))

(assert (= (and d!41179 res!64559) b!134197))

(assert (= (and b!134197 res!64558) b!134198))

(declare-fun m!159131 () Bool)

(assert (=> d!41179 m!159131))

(declare-fun m!159133 () Bool)

(assert (=> d!41179 m!159133))

(declare-fun m!159135 () Bool)

(assert (=> d!41179 m!159135))

(declare-fun m!159137 () Bool)

(assert (=> d!41179 m!159137))

(declare-fun m!159139 () Bool)

(assert (=> b!134197 m!159139))

(declare-fun m!159141 () Bool)

(assert (=> b!134198 m!159141))

(assert (=> b!133349 d!41179))

(declare-fun d!41181 () Bool)

(declare-fun e!87425 () Bool)

(assert (=> d!41181 e!87425))

(declare-fun res!64561 () Bool)

(assert (=> d!41181 (=> (not res!64561) (not e!87425))))

(declare-fun lt!70233 () ListLongMap!1707)

(assert (=> d!41181 (= res!64561 (contains!899 lt!70233 (_1!1324 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70235 () List!1716)

(assert (=> d!41181 (= lt!70233 (ListLongMap!1708 lt!70235))))

(declare-fun lt!70236 () Unit!4135)

(declare-fun lt!70234 () Unit!4135)

(assert (=> d!41181 (= lt!70236 lt!70234)))

(assert (=> d!41181 (= (getValueByKey!172 lt!70235 (_1!1324 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41181 (= lt!70234 (lemmaContainsTupThenGetReturnValue!87 lt!70235 (_1!1324 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41181 (= lt!70235 (insertStrictlySorted!90 (toList!869 lt!69759) (_1!1324 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41181 (= (+!175 lt!69759 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16))) lt!70233)))

(declare-fun b!134199 () Bool)

(declare-fun res!64560 () Bool)

(assert (=> b!134199 (=> (not res!64560) (not e!87425))))

(assert (=> b!134199 (= res!64560 (= (getValueByKey!172 (toList!869 lt!70233) (_1!1324 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16))))))))

(declare-fun b!134200 () Bool)

(assert (=> b!134200 (= e!87425 (contains!902 (toList!869 lt!70233) (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41181 res!64561) b!134199))

(assert (= (and b!134199 res!64560) b!134200))

(declare-fun m!159143 () Bool)

(assert (=> d!41181 m!159143))

(declare-fun m!159145 () Bool)

(assert (=> d!41181 m!159145))

(declare-fun m!159147 () Bool)

(assert (=> d!41181 m!159147))

(declare-fun m!159149 () Bool)

(assert (=> d!41181 m!159149))

(declare-fun m!159151 () Bool)

(assert (=> b!134199 m!159151))

(declare-fun m!159153 () Bool)

(assert (=> b!134200 m!159153))

(assert (=> b!133349 d!41181))

(declare-fun d!41183 () Bool)

(assert (=> d!41183 (= (apply!116 (+!175 lt!69745 (tuple2!2627 lt!69748 (minValue!2720 newMap!16))) lt!69764) (apply!116 lt!69745 lt!69764))))

(declare-fun lt!70237 () Unit!4135)

(assert (=> d!41183 (= lt!70237 (choose!822 lt!69745 lt!69748 (minValue!2720 newMap!16) lt!69764))))

(declare-fun e!87426 () Bool)

(assert (=> d!41183 e!87426))

(declare-fun res!64562 () Bool)

(assert (=> d!41183 (=> (not res!64562) (not e!87426))))

(assert (=> d!41183 (= res!64562 (contains!899 lt!69745 lt!69764))))

(assert (=> d!41183 (= (addApplyDifferent!92 lt!69745 lt!69748 (minValue!2720 newMap!16) lt!69764) lt!70237)))

(declare-fun b!134201 () Bool)

(assert (=> b!134201 (= e!87426 (not (= lt!69764 lt!69748)))))

(assert (= (and d!41183 res!64562) b!134201))

(declare-fun m!159155 () Bool)

(assert (=> d!41183 m!159155))

(assert (=> d!41183 m!157421))

(assert (=> d!41183 m!157419))

(assert (=> d!41183 m!157421))

(assert (=> d!41183 m!157429))

(declare-fun m!159157 () Bool)

(assert (=> d!41183 m!159157))

(assert (=> b!133349 d!41183))

(declare-fun d!41185 () Bool)

(assert (=> d!41185 (= (apply!116 (+!175 lt!69745 (tuple2!2627 lt!69748 (minValue!2720 newMap!16))) lt!69764) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69745 (tuple2!2627 lt!69748 (minValue!2720 newMap!16)))) lt!69764)))))

(declare-fun bs!5583 () Bool)

(assert (= bs!5583 d!41185))

(declare-fun m!159159 () Bool)

(assert (=> bs!5583 m!159159))

(assert (=> bs!5583 m!159159))

(declare-fun m!159161 () Bool)

(assert (=> bs!5583 m!159161))

(assert (=> b!133349 d!41185))

(declare-fun d!41187 () Bool)

(assert (=> d!41187 (= (apply!116 (+!175 lt!69747 (tuple2!2627 lt!69762 (minValue!2720 newMap!16))) lt!69760) (apply!116 lt!69747 lt!69760))))

(declare-fun lt!70238 () Unit!4135)

(assert (=> d!41187 (= lt!70238 (choose!822 lt!69747 lt!69762 (minValue!2720 newMap!16) lt!69760))))

(declare-fun e!87427 () Bool)

(assert (=> d!41187 e!87427))

(declare-fun res!64563 () Bool)

(assert (=> d!41187 (=> (not res!64563) (not e!87427))))

(assert (=> d!41187 (= res!64563 (contains!899 lt!69747 lt!69760))))

(assert (=> d!41187 (= (addApplyDifferent!92 lt!69747 lt!69762 (minValue!2720 newMap!16) lt!69760) lt!70238)))

(declare-fun b!134202 () Bool)

(assert (=> b!134202 (= e!87427 (not (= lt!69760 lt!69762)))))

(assert (= (and d!41187 res!64563) b!134202))

(declare-fun m!159163 () Bool)

(assert (=> d!41187 m!159163))

(assert (=> d!41187 m!157409))

(assert (=> d!41187 m!157425))

(assert (=> d!41187 m!157409))

(assert (=> d!41187 m!157427))

(declare-fun m!159165 () Bool)

(assert (=> d!41187 m!159165))

(assert (=> b!133349 d!41187))

(declare-fun d!41189 () Bool)

(assert (=> d!41189 (= (apply!116 (+!175 lt!69750 (tuple2!2627 lt!69752 (zeroValue!2720 newMap!16))) lt!69746) (apply!116 lt!69750 lt!69746))))

(declare-fun lt!70239 () Unit!4135)

(assert (=> d!41189 (= lt!70239 (choose!822 lt!69750 lt!69752 (zeroValue!2720 newMap!16) lt!69746))))

(declare-fun e!87428 () Bool)

(assert (=> d!41189 e!87428))

(declare-fun res!64564 () Bool)

(assert (=> d!41189 (=> (not res!64564) (not e!87428))))

(assert (=> d!41189 (= res!64564 (contains!899 lt!69750 lt!69746))))

(assert (=> d!41189 (= (addApplyDifferent!92 lt!69750 lt!69752 (zeroValue!2720 newMap!16) lt!69746) lt!70239)))

(declare-fun b!134203 () Bool)

(assert (=> b!134203 (= e!87428 (not (= lt!69746 lt!69752)))))

(assert (= (and d!41189 res!64564) b!134203))

(declare-fun m!159167 () Bool)

(assert (=> d!41189 m!159167))

(assert (=> d!41189 m!157413))

(assert (=> d!41189 m!157433))

(assert (=> d!41189 m!157413))

(assert (=> d!41189 m!157415))

(declare-fun m!159169 () Bool)

(assert (=> d!41189 m!159169))

(assert (=> b!133349 d!41189))

(declare-fun d!41191 () Bool)

(assert (=> d!41191 (= (apply!116 lt!69747 lt!69760) (get!1486 (getValueByKey!172 (toList!869 lt!69747) lt!69760)))))

(declare-fun bs!5584 () Bool)

(assert (= bs!5584 d!41191))

(declare-fun m!159171 () Bool)

(assert (=> bs!5584 m!159171))

(assert (=> bs!5584 m!159171))

(declare-fun m!159173 () Bool)

(assert (=> bs!5584 m!159173))

(assert (=> b!133349 d!41191))

(declare-fun d!41193 () Bool)

(declare-fun e!87429 () Bool)

(assert (=> d!41193 e!87429))

(declare-fun res!64565 () Bool)

(assert (=> d!41193 (=> res!64565 e!87429)))

(declare-fun lt!70243 () Bool)

(assert (=> d!41193 (= res!64565 (not lt!70243))))

(declare-fun lt!70240 () Bool)

(assert (=> d!41193 (= lt!70243 lt!70240)))

(declare-fun lt!70242 () Unit!4135)

(declare-fun e!87430 () Unit!4135)

(assert (=> d!41193 (= lt!70242 e!87430)))

(declare-fun c!24938 () Bool)

(assert (=> d!41193 (= c!24938 lt!70240)))

(assert (=> d!41193 (= lt!70240 (containsKey!176 (toList!869 (+!175 lt!69759 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16)))) lt!69758))))

(assert (=> d!41193 (= (contains!899 (+!175 lt!69759 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16))) lt!69758) lt!70243)))

(declare-fun b!134204 () Bool)

(declare-fun lt!70241 () Unit!4135)

(assert (=> b!134204 (= e!87430 lt!70241)))

(assert (=> b!134204 (= lt!70241 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69759 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16)))) lt!69758))))

(assert (=> b!134204 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69759 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16)))) lt!69758))))

(declare-fun b!134205 () Bool)

(declare-fun Unit!4207 () Unit!4135)

(assert (=> b!134205 (= e!87430 Unit!4207)))

(declare-fun b!134206 () Bool)

(assert (=> b!134206 (= e!87429 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69759 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16)))) lt!69758)))))

(assert (= (and d!41193 c!24938) b!134204))

(assert (= (and d!41193 (not c!24938)) b!134205))

(assert (= (and d!41193 (not res!64565)) b!134206))

(declare-fun m!159175 () Bool)

(assert (=> d!41193 m!159175))

(declare-fun m!159177 () Bool)

(assert (=> b!134204 m!159177))

(declare-fun m!159179 () Bool)

(assert (=> b!134204 m!159179))

(assert (=> b!134204 m!159179))

(declare-fun m!159181 () Bool)

(assert (=> b!134204 m!159181))

(assert (=> b!134206 m!159179))

(assert (=> b!134206 m!159179))

(assert (=> b!134206 m!159181))

(assert (=> b!133349 d!41193))

(declare-fun d!41195 () Bool)

(assert (=> d!41195 (= (apply!116 lt!69745 lt!69764) (get!1486 (getValueByKey!172 (toList!869 lt!69745) lt!69764)))))

(declare-fun bs!5585 () Bool)

(assert (= bs!5585 d!41195))

(declare-fun m!159183 () Bool)

(assert (=> bs!5585 m!159183))

(assert (=> bs!5585 m!159183))

(declare-fun m!159185 () Bool)

(assert (=> bs!5585 m!159185))

(assert (=> b!133349 d!41195))

(declare-fun d!41197 () Bool)

(declare-fun e!87431 () Bool)

(assert (=> d!41197 e!87431))

(declare-fun res!64567 () Bool)

(assert (=> d!41197 (=> (not res!64567) (not e!87431))))

(declare-fun lt!70244 () ListLongMap!1707)

(assert (=> d!41197 (= res!64567 (contains!899 lt!70244 (_1!1324 (tuple2!2627 lt!69748 (minValue!2720 newMap!16)))))))

(declare-fun lt!70246 () List!1716)

(assert (=> d!41197 (= lt!70244 (ListLongMap!1708 lt!70246))))

(declare-fun lt!70247 () Unit!4135)

(declare-fun lt!70245 () Unit!4135)

(assert (=> d!41197 (= lt!70247 lt!70245)))

(assert (=> d!41197 (= (getValueByKey!172 lt!70246 (_1!1324 (tuple2!2627 lt!69748 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69748 (minValue!2720 newMap!16)))))))

(assert (=> d!41197 (= lt!70245 (lemmaContainsTupThenGetReturnValue!87 lt!70246 (_1!1324 (tuple2!2627 lt!69748 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69748 (minValue!2720 newMap!16)))))))

(assert (=> d!41197 (= lt!70246 (insertStrictlySorted!90 (toList!869 lt!69745) (_1!1324 (tuple2!2627 lt!69748 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69748 (minValue!2720 newMap!16)))))))

(assert (=> d!41197 (= (+!175 lt!69745 (tuple2!2627 lt!69748 (minValue!2720 newMap!16))) lt!70244)))

(declare-fun b!134207 () Bool)

(declare-fun res!64566 () Bool)

(assert (=> b!134207 (=> (not res!64566) (not e!87431))))

(assert (=> b!134207 (= res!64566 (= (getValueByKey!172 (toList!869 lt!70244) (_1!1324 (tuple2!2627 lt!69748 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69748 (minValue!2720 newMap!16))))))))

(declare-fun b!134208 () Bool)

(assert (=> b!134208 (= e!87431 (contains!902 (toList!869 lt!70244) (tuple2!2627 lt!69748 (minValue!2720 newMap!16))))))

(assert (= (and d!41197 res!64567) b!134207))

(assert (= (and b!134207 res!64566) b!134208))

(declare-fun m!159187 () Bool)

(assert (=> d!41197 m!159187))

(declare-fun m!159189 () Bool)

(assert (=> d!41197 m!159189))

(declare-fun m!159191 () Bool)

(assert (=> d!41197 m!159191))

(declare-fun m!159193 () Bool)

(assert (=> d!41197 m!159193))

(declare-fun m!159195 () Bool)

(assert (=> b!134207 m!159195))

(declare-fun m!159197 () Bool)

(assert (=> b!134208 m!159197))

(assert (=> b!133349 d!41197))

(declare-fun d!41199 () Bool)

(assert (=> d!41199 (contains!899 (+!175 lt!69759 (tuple2!2627 lt!69753 (zeroValue!2720 newMap!16))) lt!69758)))

(declare-fun lt!70248 () Unit!4135)

(assert (=> d!41199 (= lt!70248 (choose!823 lt!69759 lt!69753 (zeroValue!2720 newMap!16) lt!69758))))

(assert (=> d!41199 (contains!899 lt!69759 lt!69758)))

(assert (=> d!41199 (= (addStillContains!92 lt!69759 lt!69753 (zeroValue!2720 newMap!16) lt!69758) lt!70248)))

(declare-fun bs!5586 () Bool)

(assert (= bs!5586 d!41199))

(assert (=> bs!5586 m!157411))

(assert (=> bs!5586 m!157411))

(assert (=> bs!5586 m!157435))

(declare-fun m!159199 () Bool)

(assert (=> bs!5586 m!159199))

(declare-fun m!159201 () Bool)

(assert (=> bs!5586 m!159201))

(assert (=> b!133349 d!41199))

(declare-fun d!41201 () Bool)

(assert (=> d!41201 (= (apply!116 (+!175 lt!69747 (tuple2!2627 lt!69762 (minValue!2720 newMap!16))) lt!69760) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69747 (tuple2!2627 lt!69762 (minValue!2720 newMap!16)))) lt!69760)))))

(declare-fun bs!5587 () Bool)

(assert (= bs!5587 d!41201))

(declare-fun m!159203 () Bool)

(assert (=> bs!5587 m!159203))

(assert (=> bs!5587 m!159203))

(declare-fun m!159205 () Bool)

(assert (=> bs!5587 m!159205))

(assert (=> b!133349 d!41201))

(declare-fun b!134209 () Bool)

(declare-fun e!87433 () Bool)

(declare-fun e!87436 () Bool)

(assert (=> b!134209 (= e!87433 e!87436)))

(declare-fun c!24939 () Bool)

(declare-fun e!87438 () Bool)

(assert (=> b!134209 (= c!24939 e!87438)))

(declare-fun res!64571 () Bool)

(assert (=> b!134209 (=> (not res!64571) (not e!87438))))

(assert (=> b!134209 (= res!64571 (bvslt #b00000000000000000000000000000000 (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(declare-fun b!134210 () Bool)

(declare-fun e!87437 () Bool)

(declare-fun lt!70254 () ListLongMap!1707)

(assert (=> b!134210 (= e!87437 (isEmpty!410 lt!70254))))

(declare-fun b!134211 () Bool)

(declare-fun lt!70250 () Unit!4135)

(declare-fun lt!70251 () Unit!4135)

(assert (=> b!134211 (= lt!70250 lt!70251)))

(declare-fun lt!70249 () V!3483)

(declare-fun lt!70253 () ListLongMap!1707)

(declare-fun lt!70252 () (_ BitVec 64))

(declare-fun lt!70255 () (_ BitVec 64))

(assert (=> b!134211 (not (contains!899 (+!175 lt!70253 (tuple2!2627 lt!70252 lt!70249)) lt!70255))))

(assert (=> b!134211 (= lt!70251 (addStillNotContains!61 lt!70253 lt!70252 lt!70249 lt!70255))))

(assert (=> b!134211 (= lt!70255 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134211 (= lt!70249 (get!1482 (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134211 (= lt!70252 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun call!14799 () ListLongMap!1707)

(assert (=> b!134211 (= lt!70253 call!14799)))

(declare-fun e!87435 () ListLongMap!1707)

(assert (=> b!134211 (= e!87435 (+!175 call!14799 (tuple2!2627 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134212 () Bool)

(assert (=> b!134212 (= e!87436 e!87437)))

(declare-fun c!24942 () Bool)

(assert (=> b!134212 (= c!24942 (bvslt #b00000000000000000000000000000000 (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(declare-fun b!134213 () Bool)

(assert (=> b!134213 (= e!87438 (validKeyInArray!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!134213 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134214 () Bool)

(declare-fun res!64569 () Bool)

(assert (=> b!134214 (=> (not res!64569) (not e!87433))))

(assert (=> b!134214 (= res!64569 (not (contains!899 lt!70254 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134215 () Bool)

(assert (=> b!134215 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(assert (=> b!134215 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))))))

(declare-fun e!87432 () Bool)

(assert (=> b!134215 (= e!87432 (= (apply!116 lt!70254 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41203 () Bool)

(assert (=> d!41203 e!87433))

(declare-fun res!64570 () Bool)

(assert (=> d!41203 (=> (not res!64570) (not e!87433))))

(assert (=> d!41203 (= res!64570 (not (contains!899 lt!70254 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87434 () ListLongMap!1707)

(assert (=> d!41203 (= lt!70254 e!87434)))

(declare-fun c!24940 () Bool)

(assert (=> d!41203 (= c!24940 (bvsge #b00000000000000000000000000000000 (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(assert (=> d!41203 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41203 (= (getCurrentListMapNoExtraKeys!141 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!70254)))

(declare-fun b!134216 () Bool)

(assert (=> b!134216 (= e!87435 call!14799)))

(declare-fun bm!14796 () Bool)

(assert (=> bm!14796 (= call!14799 (getCurrentListMapNoExtraKeys!141 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!134217 () Bool)

(assert (=> b!134217 (= e!87436 e!87432)))

(assert (=> b!134217 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(declare-fun res!64568 () Bool)

(assert (=> b!134217 (= res!64568 (contains!899 lt!70254 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!134217 (=> (not res!64568) (not e!87432))))

(declare-fun b!134218 () Bool)

(assert (=> b!134218 (= e!87434 (ListLongMap!1708 Nil!1713))))

(declare-fun b!134219 () Bool)

(assert (=> b!134219 (= e!87437 (= lt!70254 (getCurrentListMapNoExtraKeys!141 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!134220 () Bool)

(assert (=> b!134220 (= e!87434 e!87435)))

(declare-fun c!24941 () Bool)

(assert (=> b!134220 (= c!24941 (validKeyInArray!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!41203 c!24940) b!134218))

(assert (= (and d!41203 (not c!24940)) b!134220))

(assert (= (and b!134220 c!24941) b!134211))

(assert (= (and b!134220 (not c!24941)) b!134216))

(assert (= (or b!134211 b!134216) bm!14796))

(assert (= (and d!41203 res!64570) b!134214))

(assert (= (and b!134214 res!64569) b!134209))

(assert (= (and b!134209 res!64571) b!134213))

(assert (= (and b!134209 c!24939) b!134217))

(assert (= (and b!134209 (not c!24939)) b!134212))

(assert (= (and b!134217 res!64568) b!134215))

(assert (= (and b!134212 c!24942) b!134219))

(assert (= (and b!134212 (not c!24942)) b!134210))

(declare-fun b_lambda!5997 () Bool)

(assert (=> (not b_lambda!5997) (not b!134211)))

(assert (=> b!134211 t!6176))

(declare-fun b_and!8335 () Bool)

(assert (= b_and!8331 (and (=> t!6176 result!3997) b_and!8335)))

(assert (=> b!134211 t!6178))

(declare-fun b_and!8337 () Bool)

(assert (= b_and!8333 (and (=> t!6178 result!3999) b_and!8337)))

(declare-fun b_lambda!5999 () Bool)

(assert (=> (not b_lambda!5999) (not b!134215)))

(assert (=> b!134215 t!6176))

(declare-fun b_and!8339 () Bool)

(assert (= b_and!8335 (and (=> t!6176 result!3997) b_and!8339)))

(assert (=> b!134215 t!6178))

(declare-fun b_and!8341 () Bool)

(assert (= b_and!8337 (and (=> t!6178 result!3999) b_and!8341)))

(declare-fun m!159207 () Bool)

(assert (=> b!134210 m!159207))

(declare-fun m!159209 () Bool)

(assert (=> d!41203 m!159209))

(assert (=> d!41203 m!156157))

(declare-fun m!159211 () Bool)

(assert (=> b!134214 m!159211))

(assert (=> b!134220 m!157367))

(assert (=> b!134220 m!157367))

(assert (=> b!134220 m!157369))

(assert (=> b!134213 m!157367))

(assert (=> b!134213 m!157367))

(assert (=> b!134213 m!157369))

(assert (=> b!134215 m!156175))

(assert (=> b!134215 m!157399))

(assert (=> b!134215 m!156175))

(assert (=> b!134215 m!157401))

(assert (=> b!134215 m!157399))

(assert (=> b!134215 m!157367))

(declare-fun m!159213 () Bool)

(assert (=> b!134215 m!159213))

(assert (=> b!134215 m!157367))

(assert (=> b!134217 m!157367))

(assert (=> b!134217 m!157367))

(declare-fun m!159215 () Bool)

(assert (=> b!134217 m!159215))

(declare-fun m!159217 () Bool)

(assert (=> b!134219 m!159217))

(assert (=> bm!14796 m!159217))

(assert (=> b!134211 m!156175))

(assert (=> b!134211 m!157399))

(assert (=> b!134211 m!156175))

(assert (=> b!134211 m!157401))

(declare-fun m!159219 () Bool)

(assert (=> b!134211 m!159219))

(declare-fun m!159221 () Bool)

(assert (=> b!134211 m!159221))

(assert (=> b!134211 m!157399))

(declare-fun m!159223 () Bool)

(assert (=> b!134211 m!159223))

(assert (=> b!134211 m!157367))

(assert (=> b!134211 m!159221))

(declare-fun m!159225 () Bool)

(assert (=> b!134211 m!159225))

(assert (=> b!133349 d!41203))

(declare-fun d!41205 () Bool)

(declare-fun e!87439 () Bool)

(assert (=> d!41205 e!87439))

(declare-fun res!64573 () Bool)

(assert (=> d!41205 (=> (not res!64573) (not e!87439))))

(declare-fun lt!70256 () ListLongMap!1707)

(assert (=> d!41205 (= res!64573 (contains!899 lt!70256 (_1!1324 (tuple2!2627 lt!69752 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70258 () List!1716)

(assert (=> d!41205 (= lt!70256 (ListLongMap!1708 lt!70258))))

(declare-fun lt!70259 () Unit!4135)

(declare-fun lt!70257 () Unit!4135)

(assert (=> d!41205 (= lt!70259 lt!70257)))

(assert (=> d!41205 (= (getValueByKey!172 lt!70258 (_1!1324 (tuple2!2627 lt!69752 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69752 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41205 (= lt!70257 (lemmaContainsTupThenGetReturnValue!87 lt!70258 (_1!1324 (tuple2!2627 lt!69752 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69752 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41205 (= lt!70258 (insertStrictlySorted!90 (toList!869 lt!69750) (_1!1324 (tuple2!2627 lt!69752 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69752 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41205 (= (+!175 lt!69750 (tuple2!2627 lt!69752 (zeroValue!2720 newMap!16))) lt!70256)))

(declare-fun b!134221 () Bool)

(declare-fun res!64572 () Bool)

(assert (=> b!134221 (=> (not res!64572) (not e!87439))))

(assert (=> b!134221 (= res!64572 (= (getValueByKey!172 (toList!869 lt!70256) (_1!1324 (tuple2!2627 lt!69752 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69752 (zeroValue!2720 newMap!16))))))))

(declare-fun b!134222 () Bool)

(assert (=> b!134222 (= e!87439 (contains!902 (toList!869 lt!70256) (tuple2!2627 lt!69752 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41205 res!64573) b!134221))

(assert (= (and b!134221 res!64572) b!134222))

(declare-fun m!159227 () Bool)

(assert (=> d!41205 m!159227))

(declare-fun m!159229 () Bool)

(assert (=> d!41205 m!159229))

(declare-fun m!159231 () Bool)

(assert (=> d!41205 m!159231))

(declare-fun m!159233 () Bool)

(assert (=> d!41205 m!159233))

(declare-fun m!159235 () Bool)

(assert (=> b!134221 m!159235))

(declare-fun m!159237 () Bool)

(assert (=> b!134222 m!159237))

(assert (=> b!133349 d!41205))

(declare-fun d!41207 () Bool)

(declare-fun lt!70260 () Bool)

(assert (=> d!41207 (= lt!70260 (select (content!133 (toList!869 lt!69996)) (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))))

(declare-fun e!87441 () Bool)

(assert (=> d!41207 (= lt!70260 e!87441)))

(declare-fun res!64574 () Bool)

(assert (=> d!41207 (=> (not res!64574) (not e!87441))))

(assert (=> d!41207 (= res!64574 ((_ is Cons!1712) (toList!869 lt!69996)))))

(assert (=> d!41207 (= (contains!902 (toList!869 lt!69996) (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))) lt!70260)))

(declare-fun b!134223 () Bool)

(declare-fun e!87440 () Bool)

(assert (=> b!134223 (= e!87441 e!87440)))

(declare-fun res!64575 () Bool)

(assert (=> b!134223 (=> res!64575 e!87440)))

(assert (=> b!134223 (= res!64575 (= (h!2317 (toList!869 lt!69996)) (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))))

(declare-fun b!134224 () Bool)

(assert (=> b!134224 (= e!87440 (contains!902 (t!6167 (toList!869 lt!69996)) (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41207 res!64574) b!134223))

(assert (= (and b!134223 (not res!64575)) b!134224))

(declare-fun m!159239 () Bool)

(assert (=> d!41207 m!159239))

(declare-fun m!159241 () Bool)

(assert (=> d!41207 m!159241))

(declare-fun m!159243 () Bool)

(assert (=> b!134224 m!159243))

(assert (=> b!133760 d!41207))

(declare-fun d!41209 () Bool)

(assert (=> d!41209 (= (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69453 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))) lt!69449)) (v!3203 (getValueByKey!172 (toList!869 (+!175 lt!69453 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))) lt!69449)))))

(assert (=> d!40447 d!41209))

(declare-fun e!87443 () Option!178)

(declare-fun b!134227 () Bool)

(assert (=> b!134227 (= e!87443 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69453 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))) lt!69449))))

(declare-fun b!134228 () Bool)

(assert (=> b!134228 (= e!87443 None!176)))

(declare-fun c!24943 () Bool)

(declare-fun d!41211 () Bool)

(assert (=> d!41211 (= c!24943 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69453 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69453 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))) lt!69449)))))

(declare-fun e!87442 () Option!178)

(assert (=> d!41211 (= (getValueByKey!172 (toList!869 (+!175 lt!69453 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))) lt!69449) e!87442)))

(declare-fun b!134225 () Bool)

(assert (=> b!134225 (= e!87442 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69453 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))))))))

(declare-fun b!134226 () Bool)

(assert (=> b!134226 (= e!87442 e!87443)))

(declare-fun c!24944 () Bool)

(assert (=> b!134226 (= c!24944 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69453 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69453 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))) lt!69449))))))

(assert (= (and d!41211 c!24943) b!134225))

(assert (= (and d!41211 (not c!24943)) b!134226))

(assert (= (and b!134226 c!24944) b!134227))

(assert (= (and b!134226 (not c!24944)) b!134228))

(declare-fun m!159245 () Bool)

(assert (=> b!134227 m!159245))

(assert (=> d!40447 d!41211))

(declare-fun d!41213 () Bool)

(declare-fun res!64576 () Bool)

(declare-fun e!87444 () Bool)

(assert (=> d!41213 (=> res!64576 e!87444)))

(assert (=> d!41213 (= res!64576 (and ((_ is Cons!1712) lt!70027) (= (_1!1324 (h!2317 lt!70027)) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41213 (= (containsKey!176 lt!70027 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87444)))

(declare-fun b!134229 () Bool)

(declare-fun e!87445 () Bool)

(assert (=> b!134229 (= e!87444 e!87445)))

(declare-fun res!64577 () Bool)

(assert (=> b!134229 (=> (not res!64577) (not e!87445))))

(assert (=> b!134229 (= res!64577 (and (or (not ((_ is Cons!1712) lt!70027)) (bvsle (_1!1324 (h!2317 lt!70027)) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Cons!1712) lt!70027) (bvslt (_1!1324 (h!2317 lt!70027)) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134230 () Bool)

(assert (=> b!134230 (= e!87445 (containsKey!176 (t!6167 lt!70027) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!41213 (not res!64576)) b!134229))

(assert (= (and b!134229 res!64577) b!134230))

(declare-fun m!159247 () Bool)

(assert (=> b!134230 m!159247))

(assert (=> b!133810 d!41213))

(assert (=> d!40589 d!40325))

(declare-fun d!41215 () Bool)

(assert (=> d!41215 (= (apply!116 lt!69965 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69965) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5588 () Bool)

(assert (= bs!5588 d!41215))

(declare-fun m!159249 () Bool)

(assert (=> bs!5588 m!159249))

(assert (=> bs!5588 m!159249))

(declare-fun m!159251 () Bool)

(assert (=> bs!5588 m!159251))

(assert (=> b!133712 d!41215))

(declare-fun e!87447 () Option!178)

(declare-fun b!134233 () Bool)

(assert (=> b!134233 (= e!87447 (getValueByKey!172 (t!6167 (toList!869 lt!69978)) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134234 () Bool)

(assert (=> b!134234 (= e!87447 None!176)))

(declare-fun d!41217 () Bool)

(declare-fun c!24945 () Bool)

(assert (=> d!41217 (= c!24945 (and ((_ is Cons!1712) (toList!869 lt!69978)) (= (_1!1324 (h!2317 (toList!869 lt!69978))) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun e!87446 () Option!178)

(assert (=> d!41217 (= (getValueByKey!172 (toList!869 lt!69978) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) e!87446)))

(declare-fun b!134231 () Bool)

(assert (=> b!134231 (= e!87446 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69978)))))))

(declare-fun b!134232 () Bool)

(assert (=> b!134232 (= e!87446 e!87447)))

(declare-fun c!24946 () Bool)

(assert (=> b!134232 (= c!24946 (and ((_ is Cons!1712) (toList!869 lt!69978)) (not (= (_1!1324 (h!2317 (toList!869 lt!69978))) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))))

(assert (= (and d!41217 c!24945) b!134231))

(assert (= (and d!41217 (not c!24945)) b!134232))

(assert (= (and b!134232 c!24946) b!134233))

(assert (= (and b!134232 (not c!24946)) b!134234))

(declare-fun m!159253 () Bool)

(assert (=> b!134233 m!159253))

(assert (=> b!133735 d!41217))

(declare-fun d!41219 () Bool)

(assert (=> d!41219 (= (get!1484 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3198 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000)))))

(assert (=> b!133667 d!41219))

(declare-fun d!41221 () Bool)

(declare-fun e!87448 () Bool)

(assert (=> d!41221 e!87448))

(declare-fun res!64578 () Bool)

(assert (=> d!41221 (=> res!64578 e!87448)))

(declare-fun lt!70264 () Bool)

(assert (=> d!41221 (= res!64578 (not lt!70264))))

(declare-fun lt!70261 () Bool)

(assert (=> d!41221 (= lt!70264 lt!70261)))

(declare-fun lt!70263 () Unit!4135)

(declare-fun e!87449 () Unit!4135)

(assert (=> d!41221 (= lt!70263 e!87449)))

(declare-fun c!24947 () Bool)

(assert (=> d!41221 (= c!24947 lt!70261)))

(assert (=> d!41221 (= lt!70261 (containsKey!176 (toList!869 lt!70016) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41221 (= (contains!899 lt!70016 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70264)))

(declare-fun b!134235 () Bool)

(declare-fun lt!70262 () Unit!4135)

(assert (=> b!134235 (= e!87449 lt!70262)))

(assert (=> b!134235 (= lt!70262 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70016) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> b!134235 (isDefined!125 (getValueByKey!172 (toList!869 lt!70016) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134236 () Bool)

(declare-fun Unit!4208 () Unit!4135)

(assert (=> b!134236 (= e!87449 Unit!4208)))

(declare-fun b!134237 () Bool)

(assert (=> b!134237 (= e!87448 (isDefined!125 (getValueByKey!172 (toList!869 lt!70016) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (= (and d!41221 c!24947) b!134235))

(assert (= (and d!41221 (not c!24947)) b!134236))

(assert (= (and d!41221 (not res!64578)) b!134237))

(declare-fun m!159255 () Bool)

(assert (=> d!41221 m!159255))

(declare-fun m!159257 () Bool)

(assert (=> b!134235 m!159257))

(assert (=> b!134235 m!158249))

(assert (=> b!134235 m!158249))

(declare-fun m!159259 () Bool)

(assert (=> b!134235 m!159259))

(assert (=> b!134237 m!158249))

(assert (=> b!134237 m!158249))

(assert (=> b!134237 m!159259))

(assert (=> d!40811 d!41221))

(declare-fun b!134240 () Bool)

(declare-fun e!87451 () Option!178)

(assert (=> b!134240 (= e!87451 (getValueByKey!172 (t!6167 lt!70018) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134241 () Bool)

(assert (=> b!134241 (= e!87451 None!176)))

(declare-fun d!41223 () Bool)

(declare-fun c!24948 () Bool)

(assert (=> d!41223 (= c!24948 (and ((_ is Cons!1712) lt!70018) (= (_1!1324 (h!2317 lt!70018)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun e!87450 () Option!178)

(assert (=> d!41223 (= (getValueByKey!172 lt!70018 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) e!87450)))

(declare-fun b!134238 () Bool)

(assert (=> b!134238 (= e!87450 (Some!177 (_2!1324 (h!2317 lt!70018))))))

(declare-fun b!134239 () Bool)

(assert (=> b!134239 (= e!87450 e!87451)))

(declare-fun c!24949 () Bool)

(assert (=> b!134239 (= c!24949 (and ((_ is Cons!1712) lt!70018) (not (= (_1!1324 (h!2317 lt!70018)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41223 c!24948) b!134238))

(assert (= (and d!41223 (not c!24948)) b!134239))

(assert (= (and b!134239 c!24949) b!134240))

(assert (= (and b!134239 (not c!24949)) b!134241))

(declare-fun m!159261 () Bool)

(assert (=> b!134240 m!159261))

(assert (=> d!40811 d!41223))

(declare-fun d!41225 () Bool)

(assert (=> d!41225 (= (getValueByKey!172 lt!70018 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70265 () Unit!4135)

(assert (=> d!41225 (= lt!70265 (choose!827 lt!70018 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun e!87452 () Bool)

(assert (=> d!41225 e!87452))

(declare-fun res!64579 () Bool)

(assert (=> d!41225 (=> (not res!64579) (not e!87452))))

(assert (=> d!41225 (= res!64579 (isStrictlySorted!322 lt!70018))))

(assert (=> d!41225 (= (lemmaContainsTupThenGetReturnValue!87 lt!70018 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70265)))

(declare-fun b!134242 () Bool)

(declare-fun res!64580 () Bool)

(assert (=> b!134242 (=> (not res!64580) (not e!87452))))

(assert (=> b!134242 (= res!64580 (containsKey!176 lt!70018 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134243 () Bool)

(assert (=> b!134243 (= e!87452 (contains!902 lt!70018 (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (= (and d!41225 res!64579) b!134242))

(assert (= (and b!134242 res!64580) b!134243))

(assert (=> d!41225 m!158243))

(declare-fun m!159263 () Bool)

(assert (=> d!41225 m!159263))

(declare-fun m!159265 () Bool)

(assert (=> d!41225 m!159265))

(declare-fun m!159267 () Bool)

(assert (=> b!134242 m!159267))

(declare-fun m!159269 () Bool)

(assert (=> b!134243 m!159269))

(assert (=> d!40811 d!41225))

(declare-fun bm!14797 () Bool)

(declare-fun call!14801 () List!1716)

(declare-fun call!14802 () List!1716)

(assert (=> bm!14797 (= call!14801 call!14802)))

(declare-fun d!41227 () Bool)

(declare-fun e!87456 () Bool)

(assert (=> d!41227 e!87456))

(declare-fun res!64582 () Bool)

(assert (=> d!41227 (=> (not res!64582) (not e!87456))))

(declare-fun lt!70266 () List!1716)

(assert (=> d!41227 (= res!64582 (isStrictlySorted!322 lt!70266))))

(declare-fun e!87454 () List!1716)

(assert (=> d!41227 (= lt!70266 e!87454)))

(declare-fun c!24953 () Bool)

(assert (=> d!41227 (= c!24953 (and ((_ is Cons!1712) (toList!869 call!14661)) (bvslt (_1!1324 (h!2317 (toList!869 call!14661))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41227 (isStrictlySorted!322 (toList!869 call!14661))))

(assert (=> d!41227 (= (insertStrictlySorted!90 (toList!869 call!14661) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70266)))

(declare-fun b!134244 () Bool)

(assert (=> b!134244 (= e!87456 (contains!902 lt!70266 (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134245 () Bool)

(declare-fun c!24951 () Bool)

(assert (=> b!134245 (= c!24951 (and ((_ is Cons!1712) (toList!869 call!14661)) (bvsgt (_1!1324 (h!2317 (toList!869 call!14661))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun e!87455 () List!1716)

(declare-fun e!87457 () List!1716)

(assert (=> b!134245 (= e!87455 e!87457)))

(declare-fun b!134246 () Bool)

(declare-fun e!87453 () List!1716)

(assert (=> b!134246 (= e!87453 (insertStrictlySorted!90 (t!6167 (toList!869 call!14661)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134247 () Bool)

(assert (=> b!134247 (= e!87455 call!14801)))

(declare-fun b!134248 () Bool)

(declare-fun call!14800 () List!1716)

(assert (=> b!134248 (= e!87457 call!14800)))

(declare-fun b!134249 () Bool)

(declare-fun c!24950 () Bool)

(assert (=> b!134249 (= e!87453 (ite c!24950 (t!6167 (toList!869 call!14661)) (ite c!24951 (Cons!1712 (h!2317 (toList!869 call!14661)) (t!6167 (toList!869 call!14661))) Nil!1713)))))

(declare-fun b!134250 () Bool)

(assert (=> b!134250 (= e!87457 call!14800)))

(declare-fun b!134251 () Bool)

(assert (=> b!134251 (= e!87454 call!14802)))

(declare-fun bm!14798 () Bool)

(assert (=> bm!14798 (= call!14802 ($colon$colon!92 e!87453 (ite c!24953 (h!2317 (toList!869 call!14661)) (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun c!24952 () Bool)

(assert (=> bm!14798 (= c!24952 c!24953)))

(declare-fun bm!14799 () Bool)

(assert (=> bm!14799 (= call!14800 call!14801)))

(declare-fun b!134252 () Bool)

(declare-fun res!64581 () Bool)

(assert (=> b!134252 (=> (not res!64581) (not e!87456))))

(assert (=> b!134252 (= res!64581 (containsKey!176 lt!70266 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134253 () Bool)

(assert (=> b!134253 (= e!87454 e!87455)))

(assert (=> b!134253 (= c!24950 (and ((_ is Cons!1712) (toList!869 call!14661)) (= (_1!1324 (h!2317 (toList!869 call!14661))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (= (and d!41227 c!24953) b!134251))

(assert (= (and d!41227 (not c!24953)) b!134253))

(assert (= (and b!134253 c!24950) b!134247))

(assert (= (and b!134253 (not c!24950)) b!134245))

(assert (= (and b!134245 c!24951) b!134248))

(assert (= (and b!134245 (not c!24951)) b!134250))

(assert (= (or b!134248 b!134250) bm!14799))

(assert (= (or b!134247 bm!14799) bm!14797))

(assert (= (or b!134251 bm!14797) bm!14798))

(assert (= (and bm!14798 c!24952) b!134246))

(assert (= (and bm!14798 (not c!24952)) b!134249))

(assert (= (and d!41227 res!64582) b!134252))

(assert (= (and b!134252 res!64581) b!134244))

(declare-fun m!159271 () Bool)

(assert (=> d!41227 m!159271))

(declare-fun m!159273 () Bool)

(assert (=> d!41227 m!159273))

(declare-fun m!159275 () Bool)

(assert (=> bm!14798 m!159275))

(declare-fun m!159277 () Bool)

(assert (=> b!134246 m!159277))

(declare-fun m!159279 () Bool)

(assert (=> b!134244 m!159279))

(declare-fun m!159281 () Bool)

(assert (=> b!134252 m!159281))

(assert (=> d!40811 d!41227))

(declare-fun d!41229 () Bool)

(declare-fun lt!70267 () Bool)

(assert (=> d!41229 (= lt!70267 (select (content!133 lt!69444) (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87459 () Bool)

(assert (=> d!41229 (= lt!70267 e!87459)))

(declare-fun res!64583 () Bool)

(assert (=> d!41229 (=> (not res!64583) (not e!87459))))

(assert (=> d!41229 (= res!64583 ((_ is Cons!1712) lt!69444))))

(assert (=> d!41229 (= (contains!902 lt!69444 (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!70267)))

(declare-fun b!134254 () Bool)

(declare-fun e!87458 () Bool)

(assert (=> b!134254 (= e!87459 e!87458)))

(declare-fun res!64584 () Bool)

(assert (=> b!134254 (=> res!64584 e!87458)))

(assert (=> b!134254 (= res!64584 (= (h!2317 lt!69444) (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134255 () Bool)

(assert (=> b!134255 (= e!87458 (contains!902 (t!6167 lt!69444) (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!41229 res!64583) b!134254))

(assert (= (and b!134254 (not res!64584)) b!134255))

(declare-fun m!159283 () Bool)

(assert (=> d!41229 m!159283))

(declare-fun m!159285 () Bool)

(assert (=> d!41229 m!159285))

(declare-fun m!159287 () Bool)

(assert (=> b!134255 m!159287))

(assert (=> b!133396 d!41229))

(declare-fun e!87461 () Option!178)

(declare-fun b!134258 () Bool)

(assert (=> b!134258 (= e!87461 (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69385))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!134259 () Bool)

(assert (=> b!134259 (= e!87461 None!176)))

(declare-fun c!24954 () Bool)

(declare-fun d!41231 () Bool)

(assert (=> d!41231 (= c!24954 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69385))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69385)))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87460 () Option!178)

(assert (=> d!41231 (= (getValueByKey!172 (t!6167 (toList!869 lt!69385)) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87460)))

(declare-fun b!134256 () Bool)

(assert (=> b!134256 (= e!87460 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 lt!69385))))))))

(declare-fun b!134257 () Bool)

(assert (=> b!134257 (= e!87460 e!87461)))

(declare-fun c!24955 () Bool)

(assert (=> b!134257 (= c!24955 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69385))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69385)))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!41231 c!24954) b!134256))

(assert (= (and d!41231 (not c!24954)) b!134257))

(assert (= (and b!134257 c!24955) b!134258))

(assert (= (and b!134257 (not c!24955)) b!134259))

(declare-fun m!159289 () Bool)

(assert (=> b!134258 m!159289))

(assert (=> b!133559 d!41231))

(declare-fun d!41233 () Bool)

(declare-fun e!87462 () Bool)

(assert (=> d!41233 e!87462))

(declare-fun res!64585 () Bool)

(assert (=> d!41233 (=> res!64585 e!87462)))

(declare-fun lt!70271 () Bool)

(assert (=> d!41233 (= res!64585 (not lt!70271))))

(declare-fun lt!70268 () Bool)

(assert (=> d!41233 (= lt!70271 lt!70268)))

(declare-fun lt!70270 () Unit!4135)

(declare-fun e!87463 () Unit!4135)

(assert (=> d!41233 (= lt!70270 e!87463)))

(declare-fun c!24956 () Bool)

(assert (=> d!41233 (= c!24956 lt!70268)))

(assert (=> d!41233 (= lt!70268 (containsKey!176 (toList!869 lt!69652) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> d!41233 (= (contains!899 lt!69652 (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!70271)))

(declare-fun b!134260 () Bool)

(declare-fun lt!70269 () Unit!4135)

(assert (=> b!134260 (= e!87463 lt!70269)))

(assert (=> b!134260 (= lt!70269 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69652) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(assert (=> b!134260 (isDefined!125 (getValueByKey!172 (toList!869 lt!69652) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!134261 () Bool)

(declare-fun Unit!4209 () Unit!4135)

(assert (=> b!134261 (= e!87463 Unit!4209)))

(declare-fun b!134262 () Bool)

(assert (=> b!134262 (= e!87462 (isDefined!125 (getValueByKey!172 (toList!869 lt!69652) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!41233 c!24956) b!134260))

(assert (= (and d!41233 (not c!24956)) b!134261))

(assert (= (and d!41233 (not res!64585)) b!134262))

(declare-fun m!159291 () Bool)

(assert (=> d!41233 m!159291))

(declare-fun m!159293 () Bool)

(assert (=> b!134260 m!159293))

(assert (=> b!134260 m!157135))

(assert (=> b!134260 m!157135))

(declare-fun m!159295 () Bool)

(assert (=> b!134260 m!159295))

(assert (=> b!134262 m!157135))

(assert (=> b!134262 m!157135))

(assert (=> b!134262 m!159295))

(assert (=> d!40493 d!41233))

(declare-fun b!134265 () Bool)

(declare-fun e!87465 () Option!178)

(assert (=> b!134265 (= e!87465 (getValueByKey!172 (t!6167 lt!69654) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!134266 () Bool)

(assert (=> b!134266 (= e!87465 None!176)))

(declare-fun c!24957 () Bool)

(declare-fun d!41235 () Bool)

(assert (=> d!41235 (= c!24957 (and ((_ is Cons!1712) lt!69654) (= (_1!1324 (h!2317 lt!69654)) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun e!87464 () Option!178)

(assert (=> d!41235 (= (getValueByKey!172 lt!69654 (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) e!87464)))

(declare-fun b!134263 () Bool)

(assert (=> b!134263 (= e!87464 (Some!177 (_2!1324 (h!2317 lt!69654))))))

(declare-fun b!134264 () Bool)

(assert (=> b!134264 (= e!87464 e!87465)))

(declare-fun c!24958 () Bool)

(assert (=> b!134264 (= c!24958 (and ((_ is Cons!1712) lt!69654) (not (= (_1!1324 (h!2317 lt!69654)) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))))

(assert (= (and d!41235 c!24957) b!134263))

(assert (= (and d!41235 (not c!24957)) b!134264))

(assert (= (and b!134264 c!24958) b!134265))

(assert (= (and b!134264 (not c!24958)) b!134266))

(declare-fun m!159297 () Bool)

(assert (=> b!134265 m!159297))

(assert (=> d!40493 d!41235))

(declare-fun d!41237 () Bool)

(assert (=> d!41237 (= (getValueByKey!172 lt!69654 (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) (Some!177 (_2!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun lt!70272 () Unit!4135)

(assert (=> d!41237 (= lt!70272 (choose!827 lt!69654 (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun e!87466 () Bool)

(assert (=> d!41237 e!87466))

(declare-fun res!64586 () Bool)

(assert (=> d!41237 (=> (not res!64586) (not e!87466))))

(assert (=> d!41237 (= res!64586 (isStrictlySorted!322 lt!69654))))

(assert (=> d!41237 (= (lemmaContainsTupThenGetReturnValue!87 lt!69654 (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!70272)))

(declare-fun b!134267 () Bool)

(declare-fun res!64587 () Bool)

(assert (=> b!134267 (=> (not res!64587) (not e!87466))))

(assert (=> b!134267 (= res!64587 (containsKey!176 lt!69654 (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!134268 () Bool)

(assert (=> b!134268 (= e!87466 (contains!902 lt!69654 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!41237 res!64586) b!134267))

(assert (= (and b!134267 res!64587) b!134268))

(assert (=> d!41237 m!157129))

(declare-fun m!159299 () Bool)

(assert (=> d!41237 m!159299))

(declare-fun m!159301 () Bool)

(assert (=> d!41237 m!159301))

(declare-fun m!159303 () Bool)

(assert (=> b!134267 m!159303))

(declare-fun m!159305 () Bool)

(assert (=> b!134268 m!159305))

(assert (=> d!40493 d!41237))

(declare-fun bm!14800 () Bool)

(declare-fun call!14804 () List!1716)

(declare-fun call!14805 () List!1716)

(assert (=> bm!14800 (= call!14804 call!14805)))

(declare-fun d!41239 () Bool)

(declare-fun e!87470 () Bool)

(assert (=> d!41239 e!87470))

(declare-fun res!64589 () Bool)

(assert (=> d!41239 (=> (not res!64589) (not e!87470))))

(declare-fun lt!70273 () List!1716)

(assert (=> d!41239 (= res!64589 (isStrictlySorted!322 lt!70273))))

(declare-fun e!87468 () List!1716)

(assert (=> d!41239 (= lt!70273 e!87468)))

(declare-fun c!24962 () Bool)

(assert (=> d!41239 (= c!24962 (and ((_ is Cons!1712) (toList!869 lt!69484)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69484))) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (=> d!41239 (isStrictlySorted!322 (toList!869 lt!69484))))

(assert (=> d!41239 (= (insertStrictlySorted!90 (toList!869 lt!69484) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!70273)))

(declare-fun b!134269 () Bool)

(assert (=> b!134269 (= e!87470 (contains!902 lt!70273 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun b!134270 () Bool)

(declare-fun c!24960 () Bool)

(assert (=> b!134270 (= c!24960 (and ((_ is Cons!1712) (toList!869 lt!69484)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69484))) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun e!87469 () List!1716)

(declare-fun e!87471 () List!1716)

(assert (=> b!134270 (= e!87469 e!87471)))

(declare-fun e!87467 () List!1716)

(declare-fun b!134271 () Bool)

(assert (=> b!134271 (= e!87467 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69484)) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!134272 () Bool)

(assert (=> b!134272 (= e!87469 call!14804)))

(declare-fun b!134273 () Bool)

(declare-fun call!14803 () List!1716)

(assert (=> b!134273 (= e!87471 call!14803)))

(declare-fun b!134274 () Bool)

(declare-fun c!24959 () Bool)

(assert (=> b!134274 (= e!87467 (ite c!24959 (t!6167 (toList!869 lt!69484)) (ite c!24960 (Cons!1712 (h!2317 (toList!869 lt!69484)) (t!6167 (toList!869 lt!69484))) Nil!1713)))))

(declare-fun b!134275 () Bool)

(assert (=> b!134275 (= e!87471 call!14803)))

(declare-fun b!134276 () Bool)

(assert (=> b!134276 (= e!87468 call!14805)))

(declare-fun bm!14801 () Bool)

(assert (=> bm!14801 (= call!14805 ($colon$colon!92 e!87467 (ite c!24962 (h!2317 (toList!869 lt!69484)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))))

(declare-fun c!24961 () Bool)

(assert (=> bm!14801 (= c!24961 c!24962)))

(declare-fun bm!14802 () Bool)

(assert (=> bm!14802 (= call!14803 call!14804)))

(declare-fun b!134277 () Bool)

(declare-fun res!64588 () Bool)

(assert (=> b!134277 (=> (not res!64588) (not e!87470))))

(assert (=> b!134277 (= res!64588 (containsKey!176 lt!70273 (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!134278 () Bool)

(assert (=> b!134278 (= e!87468 e!87469)))

(assert (=> b!134278 (= c!24959 (and ((_ is Cons!1712) (toList!869 lt!69484)) (= (_1!1324 (h!2317 (toList!869 lt!69484))) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!41239 c!24962) b!134276))

(assert (= (and d!41239 (not c!24962)) b!134278))

(assert (= (and b!134278 c!24959) b!134272))

(assert (= (and b!134278 (not c!24959)) b!134270))

(assert (= (and b!134270 c!24960) b!134273))

(assert (= (and b!134270 (not c!24960)) b!134275))

(assert (= (or b!134273 b!134275) bm!14802))

(assert (= (or b!134272 bm!14802) bm!14800))

(assert (= (or b!134276 bm!14800) bm!14801))

(assert (= (and bm!14801 c!24961) b!134271))

(assert (= (and bm!14801 (not c!24961)) b!134274))

(assert (= (and d!41239 res!64589) b!134277))

(assert (= (and b!134277 res!64588) b!134269))

(declare-fun m!159307 () Bool)

(assert (=> d!41239 m!159307))

(declare-fun m!159309 () Bool)

(assert (=> d!41239 m!159309))

(declare-fun m!159311 () Bool)

(assert (=> bm!14801 m!159311))

(declare-fun m!159313 () Bool)

(assert (=> b!134271 m!159313))

(declare-fun m!159315 () Bool)

(assert (=> b!134269 m!159315))

(declare-fun m!159317 () Bool)

(assert (=> b!134277 m!159317))

(assert (=> d!40493 d!41239))

(declare-fun d!41241 () Bool)

(assert (=> d!41241 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69899 #b00000000000000000000000000000000)))

(declare-fun lt!70274 () Unit!4135)

(assert (=> d!41241 (= lt!70274 (choose!13 (_keys!4614 newMap!16) lt!69899 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> d!41241 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!41241 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 newMap!16) lt!69899 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!70274)))

(declare-fun bs!5589 () Bool)

(assert (= bs!5589 d!41241))

(assert (=> bs!5589 m!157851))

(declare-fun m!159319 () Bool)

(assert (=> bs!5589 m!159319))

(assert (=> b!133608 d!41241))

(declare-fun d!41243 () Bool)

(declare-fun res!64590 () Bool)

(declare-fun e!87472 () Bool)

(assert (=> d!41243 (=> res!64590 e!87472)))

(assert (=> d!41243 (= res!64590 (= (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) lt!69899))))

(assert (=> d!41243 (= (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69899 #b00000000000000000000000000000000) e!87472)))

(declare-fun b!134279 () Bool)

(declare-fun e!87473 () Bool)

(assert (=> b!134279 (= e!87472 e!87473)))

(declare-fun res!64591 () Bool)

(assert (=> b!134279 (=> (not res!64591) (not e!87473))))

(assert (=> b!134279 (= res!64591 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!134280 () Bool)

(assert (=> b!134280 (= e!87473 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69899 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!41243 (not res!64590)) b!134279))

(assert (= (and b!134279 res!64591) b!134280))

(assert (=> d!41243 m!156163))

(declare-fun m!159321 () Bool)

(assert (=> b!134280 m!159321))

(assert (=> b!133608 d!41243))

(declare-fun b!134281 () Bool)

(declare-fun e!87474 () SeekEntryResult!275)

(declare-fun lt!70276 () SeekEntryResult!275)

(assert (=> b!134281 (= e!87474 (Found!275 (index!3262 lt!70276)))))

(declare-fun d!41245 () Bool)

(declare-fun lt!70277 () SeekEntryResult!275)

(assert (=> d!41245 (and (or ((_ is Undefined!275) lt!70277) (not ((_ is Found!275) lt!70277)) (and (bvsge (index!3261 lt!70277) #b00000000000000000000000000000000) (bvslt (index!3261 lt!70277) (size!2530 (_keys!4614 newMap!16))))) (or ((_ is Undefined!275) lt!70277) ((_ is Found!275) lt!70277) (not ((_ is MissingZero!275) lt!70277)) (and (bvsge (index!3260 lt!70277) #b00000000000000000000000000000000) (bvslt (index!3260 lt!70277) (size!2530 (_keys!4614 newMap!16))))) (or ((_ is Undefined!275) lt!70277) ((_ is Found!275) lt!70277) ((_ is MissingZero!275) lt!70277) (not ((_ is MissingVacant!275) lt!70277)) (and (bvsge (index!3263 lt!70277) #b00000000000000000000000000000000) (bvslt (index!3263 lt!70277) (size!2530 (_keys!4614 newMap!16))))) (or ((_ is Undefined!275) lt!70277) (ite ((_ is Found!275) lt!70277) (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!70277)) (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!275) lt!70277) (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3260 lt!70277)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!275) lt!70277) (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3263 lt!70277)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87475 () SeekEntryResult!275)

(assert (=> d!41245 (= lt!70277 e!87475)))

(declare-fun c!24964 () Bool)

(assert (=> d!41245 (= c!24964 (and ((_ is Intermediate!275) lt!70276) (undefined!1087 lt!70276)))))

(assert (=> d!41245 (= lt!70276 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 newMap!16)) (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (=> d!41245 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41245 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!70277)))

(declare-fun b!134282 () Bool)

(assert (=> b!134282 (= e!87475 e!87474)))

(declare-fun lt!70275 () (_ BitVec 64))

(assert (=> b!134282 (= lt!70275 (select (arr!2261 (_keys!4614 newMap!16)) (index!3262 lt!70276)))))

(declare-fun c!24963 () Bool)

(assert (=> b!134282 (= c!24963 (= lt!70275 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134283 () Bool)

(declare-fun e!87476 () SeekEntryResult!275)

(assert (=> b!134283 (= e!87476 (MissingZero!275 (index!3262 lt!70276)))))

(declare-fun b!134284 () Bool)

(declare-fun c!24965 () Bool)

(assert (=> b!134284 (= c!24965 (= lt!70275 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134284 (= e!87474 e!87476)))

(declare-fun b!134285 () Bool)

(assert (=> b!134285 (= e!87475 Undefined!275)))

(declare-fun b!134286 () Bool)

(assert (=> b!134286 (= e!87476 (seekKeyOrZeroReturnVacant!0 (x!15592 lt!70276) (index!3262 lt!70276) (index!3262 lt!70276) (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (= (and d!41245 c!24964) b!134285))

(assert (= (and d!41245 (not c!24964)) b!134282))

(assert (= (and b!134282 c!24963) b!134281))

(assert (= (and b!134282 (not c!24963)) b!134284))

(assert (= (and b!134284 c!24965) b!134283))

(assert (= (and b!134284 (not c!24965)) b!134286))

(declare-fun m!159323 () Bool)

(assert (=> d!41245 m!159323))

(declare-fun m!159325 () Bool)

(assert (=> d!41245 m!159325))

(assert (=> d!41245 m!157845))

(declare-fun m!159327 () Bool)

(assert (=> d!41245 m!159327))

(assert (=> d!41245 m!157845))

(assert (=> d!41245 m!159325))

(assert (=> d!41245 m!156157))

(declare-fun m!159329 () Bool)

(assert (=> d!41245 m!159329))

(declare-fun m!159331 () Bool)

(assert (=> d!41245 m!159331))

(declare-fun m!159333 () Bool)

(assert (=> b!134282 m!159333))

(assert (=> b!134286 m!157845))

(declare-fun m!159335 () Bool)

(assert (=> b!134286 m!159335))

(assert (=> b!133608 d!41245))

(declare-fun b!134287 () Bool)

(declare-fun e!87489 () Unit!4135)

(declare-fun lt!70278 () Unit!4135)

(assert (=> b!134287 (= e!87489 lt!70278)))

(declare-fun lt!70294 () ListLongMap!1707)

(assert (=> b!134287 (= lt!70294 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (_2!1325 lt!69358)) (_values!2848 (_2!1325 lt!69358)) (mask!7165 (_2!1325 lt!69358)) (extraKeys!2630 (_2!1325 lt!69358)) (zeroValue!2720 (_2!1325 lt!69358)) (minValue!2720 (_2!1325 lt!69358)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1325 lt!69358))))))

(declare-fun lt!70288 () (_ BitVec 64))

(assert (=> b!134287 (= lt!70288 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70293 () (_ BitVec 64))

(assert (=> b!134287 (= lt!70293 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000))))

(declare-fun lt!70291 () Unit!4135)

(assert (=> b!134287 (= lt!70291 (addStillContains!92 lt!70294 lt!70288 (zeroValue!2720 (_2!1325 lt!69358)) lt!70293))))

(assert (=> b!134287 (contains!899 (+!175 lt!70294 (tuple2!2627 lt!70288 (zeroValue!2720 (_2!1325 lt!69358)))) lt!70293)))

(declare-fun lt!70298 () Unit!4135)

(assert (=> b!134287 (= lt!70298 lt!70291)))

(declare-fun lt!70280 () ListLongMap!1707)

(assert (=> b!134287 (= lt!70280 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (_2!1325 lt!69358)) (_values!2848 (_2!1325 lt!69358)) (mask!7165 (_2!1325 lt!69358)) (extraKeys!2630 (_2!1325 lt!69358)) (zeroValue!2720 (_2!1325 lt!69358)) (minValue!2720 (_2!1325 lt!69358)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1325 lt!69358))))))

(declare-fun lt!70283 () (_ BitVec 64))

(assert (=> b!134287 (= lt!70283 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70299 () (_ BitVec 64))

(assert (=> b!134287 (= lt!70299 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000))))

(declare-fun lt!70290 () Unit!4135)

(assert (=> b!134287 (= lt!70290 (addApplyDifferent!92 lt!70280 lt!70283 (minValue!2720 (_2!1325 lt!69358)) lt!70299))))

(assert (=> b!134287 (= (apply!116 (+!175 lt!70280 (tuple2!2627 lt!70283 (minValue!2720 (_2!1325 lt!69358)))) lt!70299) (apply!116 lt!70280 lt!70299))))

(declare-fun lt!70279 () Unit!4135)

(assert (=> b!134287 (= lt!70279 lt!70290)))

(declare-fun lt!70285 () ListLongMap!1707)

(assert (=> b!134287 (= lt!70285 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (_2!1325 lt!69358)) (_values!2848 (_2!1325 lt!69358)) (mask!7165 (_2!1325 lt!69358)) (extraKeys!2630 (_2!1325 lt!69358)) (zeroValue!2720 (_2!1325 lt!69358)) (minValue!2720 (_2!1325 lt!69358)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1325 lt!69358))))))

(declare-fun lt!70287 () (_ BitVec 64))

(assert (=> b!134287 (= lt!70287 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70281 () (_ BitVec 64))

(assert (=> b!134287 (= lt!70281 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000))))

(declare-fun lt!70284 () Unit!4135)

(assert (=> b!134287 (= lt!70284 (addApplyDifferent!92 lt!70285 lt!70287 (zeroValue!2720 (_2!1325 lt!69358)) lt!70281))))

(assert (=> b!134287 (= (apply!116 (+!175 lt!70285 (tuple2!2627 lt!70287 (zeroValue!2720 (_2!1325 lt!69358)))) lt!70281) (apply!116 lt!70285 lt!70281))))

(declare-fun lt!70292 () Unit!4135)

(assert (=> b!134287 (= lt!70292 lt!70284)))

(declare-fun lt!70282 () ListLongMap!1707)

(assert (=> b!134287 (= lt!70282 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (_2!1325 lt!69358)) (_values!2848 (_2!1325 lt!69358)) (mask!7165 (_2!1325 lt!69358)) (extraKeys!2630 (_2!1325 lt!69358)) (zeroValue!2720 (_2!1325 lt!69358)) (minValue!2720 (_2!1325 lt!69358)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1325 lt!69358))))))

(declare-fun lt!70297 () (_ BitVec 64))

(assert (=> b!134287 (= lt!70297 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70295 () (_ BitVec 64))

(assert (=> b!134287 (= lt!70295 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000))))

(assert (=> b!134287 (= lt!70278 (addApplyDifferent!92 lt!70282 lt!70297 (minValue!2720 (_2!1325 lt!69358)) lt!70295))))

(assert (=> b!134287 (= (apply!116 (+!175 lt!70282 (tuple2!2627 lt!70297 (minValue!2720 (_2!1325 lt!69358)))) lt!70295) (apply!116 lt!70282 lt!70295))))

(declare-fun b!134288 () Bool)

(declare-fun e!87486 () Bool)

(declare-fun call!14809 () Bool)

(assert (=> b!134288 (= e!87486 (not call!14809))))

(declare-fun b!134289 () Bool)

(declare-fun e!87483 () Bool)

(declare-fun e!87482 () Bool)

(assert (=> b!134289 (= e!87483 e!87482)))

(declare-fun c!24969 () Bool)

(assert (=> b!134289 (= c!24969 (not (= (bvand (extraKeys!2630 (_2!1325 lt!69358)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!134290 () Bool)

(declare-fun e!87487 () ListLongMap!1707)

(declare-fun call!14812 () ListLongMap!1707)

(assert (=> b!134290 (= e!87487 call!14812)))

(declare-fun b!134291 () Bool)

(declare-fun e!87478 () ListLongMap!1707)

(declare-fun call!14806 () ListLongMap!1707)

(assert (=> b!134291 (= e!87478 call!14806)))

(declare-fun b!134292 () Bool)

(declare-fun c!24971 () Bool)

(assert (=> b!134292 (= c!24971 (and (not (= (bvand (extraKeys!2630 (_2!1325 lt!69358)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 (_2!1325 lt!69358)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!134292 (= e!87478 e!87487)))

(declare-fun b!134293 () Bool)

(declare-fun call!14807 () Bool)

(assert (=> b!134293 (= e!87482 (not call!14807))))

(declare-fun d!41247 () Bool)

(assert (=> d!41247 e!87483))

(declare-fun res!64595 () Bool)

(assert (=> d!41247 (=> (not res!64595) (not e!87483))))

(assert (=> d!41247 (= res!64595 (or (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69358)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69358)))))))))

(declare-fun lt!70296 () ListLongMap!1707)

(declare-fun lt!70289 () ListLongMap!1707)

(assert (=> d!41247 (= lt!70296 lt!70289)))

(declare-fun lt!70286 () Unit!4135)

(assert (=> d!41247 (= lt!70286 e!87489)))

(declare-fun c!24967 () Bool)

(declare-fun e!87485 () Bool)

(assert (=> d!41247 (= c!24967 e!87485)))

(declare-fun res!64594 () Bool)

(assert (=> d!41247 (=> (not res!64594) (not e!87485))))

(assert (=> d!41247 (= res!64594 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69358)))))))

(declare-fun e!87480 () ListLongMap!1707)

(assert (=> d!41247 (= lt!70289 e!87480)))

(declare-fun c!24970 () Bool)

(assert (=> d!41247 (= c!24970 (and (not (= (bvand (extraKeys!2630 (_2!1325 lt!69358)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2630 (_2!1325 lt!69358)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!41247 (validMask!0 (mask!7165 (_2!1325 lt!69358)))))

(assert (=> d!41247 (= (getCurrentListMap!546 (_keys!4614 (_2!1325 lt!69358)) (_values!2848 (_2!1325 lt!69358)) (mask!7165 (_2!1325 lt!69358)) (extraKeys!2630 (_2!1325 lt!69358)) (zeroValue!2720 (_2!1325 lt!69358)) (minValue!2720 (_2!1325 lt!69358)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1325 lt!69358))) lt!70296)))

(declare-fun b!134294 () Bool)

(declare-fun e!87484 () Bool)

(assert (=> b!134294 (= e!87484 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000)))))

(declare-fun bm!14803 () Bool)

(assert (=> bm!14803 (= call!14809 (contains!899 lt!70296 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134295 () Bool)

(assert (=> b!134295 (= e!87480 e!87478)))

(declare-fun c!24968 () Bool)

(assert (=> b!134295 (= c!24968 (and (not (= (bvand (extraKeys!2630 (_2!1325 lt!69358)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2630 (_2!1325 lt!69358)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!134296 () Bool)

(declare-fun call!14810 () ListLongMap!1707)

(assert (=> b!134296 (= e!87480 (+!175 call!14810 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69358)))))))

(declare-fun b!134297 () Bool)

(declare-fun e!87477 () Bool)

(assert (=> b!134297 (= e!87477 (= (apply!116 lt!70296 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (_values!2848 (_2!1325 lt!69358))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1325 lt!69358)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!134297 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_values!2848 (_2!1325 lt!69358)))))))

(assert (=> b!134297 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69358)))))))

(declare-fun bm!14804 () Bool)

(assert (=> bm!14804 (= call!14807 (contains!899 lt!70296 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134298 () Bool)

(declare-fun res!64596 () Bool)

(assert (=> b!134298 (=> (not res!64596) (not e!87483))))

(assert (=> b!134298 (= res!64596 e!87486)))

(declare-fun c!24966 () Bool)

(assert (=> b!134298 (= c!24966 (not (= (bvand (extraKeys!2630 (_2!1325 lt!69358)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!134299 () Bool)

(declare-fun e!87481 () Bool)

(assert (=> b!134299 (= e!87482 e!87481)))

(declare-fun res!64598 () Bool)

(assert (=> b!134299 (= res!64598 call!14807)))

(assert (=> b!134299 (=> (not res!64598) (not e!87481))))

(declare-fun call!14808 () ListLongMap!1707)

(declare-fun call!14811 () ListLongMap!1707)

(declare-fun bm!14805 () Bool)

(assert (=> bm!14805 (= call!14810 (+!175 (ite c!24970 call!14808 (ite c!24968 call!14811 call!14812)) (ite (or c!24970 c!24968) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1325 lt!69358))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69358))))))))

(declare-fun b!134300 () Bool)

(declare-fun e!87488 () Bool)

(assert (=> b!134300 (= e!87488 (= (apply!116 lt!70296 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2720 (_2!1325 lt!69358))))))

(declare-fun bm!14806 () Bool)

(assert (=> bm!14806 (= call!14806 call!14810)))

(declare-fun b!134301 () Bool)

(assert (=> b!134301 (= e!87486 e!87488)))

(declare-fun res!64593 () Bool)

(assert (=> b!134301 (= res!64593 call!14809)))

(assert (=> b!134301 (=> (not res!64593) (not e!87488))))

(declare-fun bm!14807 () Bool)

(assert (=> bm!14807 (= call!14812 call!14811)))

(declare-fun bm!14808 () Bool)

(assert (=> bm!14808 (= call!14808 (getCurrentListMapNoExtraKeys!141 (_keys!4614 (_2!1325 lt!69358)) (_values!2848 (_2!1325 lt!69358)) (mask!7165 (_2!1325 lt!69358)) (extraKeys!2630 (_2!1325 lt!69358)) (zeroValue!2720 (_2!1325 lt!69358)) (minValue!2720 (_2!1325 lt!69358)) #b00000000000000000000000000000000 (defaultEntry!2865 (_2!1325 lt!69358))))))

(declare-fun b!134302 () Bool)

(assert (=> b!134302 (= e!87487 call!14806)))

(declare-fun b!134303 () Bool)

(declare-fun e!87479 () Bool)

(assert (=> b!134303 (= e!87479 e!87477)))

(declare-fun res!64597 () Bool)

(assert (=> b!134303 (=> (not res!64597) (not e!87477))))

(assert (=> b!134303 (= res!64597 (contains!899 lt!70296 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000)))))

(assert (=> b!134303 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69358)))))))

(declare-fun b!134304 () Bool)

(declare-fun res!64600 () Bool)

(assert (=> b!134304 (=> (not res!64600) (not e!87483))))

(assert (=> b!134304 (= res!64600 e!87479)))

(declare-fun res!64592 () Bool)

(assert (=> b!134304 (=> res!64592 e!87479)))

(assert (=> b!134304 (= res!64592 (not e!87484))))

(declare-fun res!64599 () Bool)

(assert (=> b!134304 (=> (not res!64599) (not e!87484))))

(assert (=> b!134304 (= res!64599 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69358)))))))

(declare-fun bm!14809 () Bool)

(assert (=> bm!14809 (= call!14811 call!14808)))

(declare-fun b!134305 () Bool)

(assert (=> b!134305 (= e!87481 (= (apply!116 lt!70296 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2720 (_2!1325 lt!69358))))))

(declare-fun b!134306 () Bool)

(assert (=> b!134306 (= e!87485 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000)))))

(declare-fun b!134307 () Bool)

(declare-fun Unit!4210 () Unit!4135)

(assert (=> b!134307 (= e!87489 Unit!4210)))

(assert (= (and d!41247 c!24970) b!134296))

(assert (= (and d!41247 (not c!24970)) b!134295))

(assert (= (and b!134295 c!24968) b!134291))

(assert (= (and b!134295 (not c!24968)) b!134292))

(assert (= (and b!134292 c!24971) b!134302))

(assert (= (and b!134292 (not c!24971)) b!134290))

(assert (= (or b!134302 b!134290) bm!14807))

(assert (= (or b!134291 bm!14807) bm!14809))

(assert (= (or b!134291 b!134302) bm!14806))

(assert (= (or b!134296 bm!14809) bm!14808))

(assert (= (or b!134296 bm!14806) bm!14805))

(assert (= (and d!41247 res!64594) b!134306))

(assert (= (and d!41247 c!24967) b!134287))

(assert (= (and d!41247 (not c!24967)) b!134307))

(assert (= (and d!41247 res!64595) b!134304))

(assert (= (and b!134304 res!64599) b!134294))

(assert (= (and b!134304 (not res!64592)) b!134303))

(assert (= (and b!134303 res!64597) b!134297))

(assert (= (and b!134304 res!64600) b!134298))

(assert (= (and b!134298 c!24966) b!134301))

(assert (= (and b!134298 (not c!24966)) b!134288))

(assert (= (and b!134301 res!64593) b!134300))

(assert (= (or b!134301 b!134288) bm!14803))

(assert (= (and b!134298 res!64596) b!134289))

(assert (= (and b!134289 c!24969) b!134299))

(assert (= (and b!134289 (not c!24969)) b!134293))

(assert (= (and b!134299 res!64598) b!134305))

(assert (= (or b!134299 b!134293) bm!14804))

(declare-fun b_lambda!6001 () Bool)

(assert (=> (not b_lambda!6001) (not b!134297)))

(declare-fun t!6185 () Bool)

(declare-fun tb!2429 () Bool)

(assert (=> (and b!132300 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 (_2!1325 lt!69358))) t!6185) tb!2429))

(declare-fun result!4005 () Bool)

(assert (=> tb!2429 (= result!4005 tp_is_empty!2877)))

(assert (=> b!134297 t!6185))

(declare-fun b_and!8343 () Bool)

(assert (= b_and!8339 (and (=> t!6185 result!4005) b_and!8343)))

(declare-fun tb!2431 () Bool)

(declare-fun t!6187 () Bool)

(assert (=> (and b!132303 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (_2!1325 lt!69358))) t!6187) tb!2431))

(declare-fun result!4007 () Bool)

(assert (= result!4007 result!4005))

(assert (=> b!134297 t!6187))

(declare-fun b_and!8345 () Bool)

(assert (= b_and!8341 (and (=> t!6187 result!4007) b_and!8345)))

(declare-fun m!159337 () Bool)

(assert (=> bm!14808 m!159337))

(declare-fun m!159339 () Bool)

(assert (=> bm!14805 m!159339))

(declare-fun m!159341 () Bool)

(assert (=> b!134297 m!159341))

(assert (=> b!134297 m!159341))

(declare-fun m!159343 () Bool)

(assert (=> b!134297 m!159343))

(declare-fun m!159345 () Bool)

(assert (=> b!134297 m!159345))

(declare-fun m!159347 () Bool)

(assert (=> b!134297 m!159347))

(assert (=> b!134297 m!159343))

(assert (=> b!134297 m!159347))

(declare-fun m!159349 () Bool)

(assert (=> b!134297 m!159349))

(declare-fun m!159351 () Bool)

(assert (=> bm!14803 m!159351))

(declare-fun m!159353 () Bool)

(assert (=> b!134296 m!159353))

(assert (=> b!134306 m!159347))

(assert (=> b!134306 m!159347))

(declare-fun m!159355 () Bool)

(assert (=> b!134306 m!159355))

(declare-fun m!159357 () Bool)

(assert (=> d!41247 m!159357))

(declare-fun m!159359 () Bool)

(assert (=> b!134287 m!159359))

(declare-fun m!159361 () Bool)

(assert (=> b!134287 m!159361))

(declare-fun m!159363 () Bool)

(assert (=> b!134287 m!159363))

(declare-fun m!159365 () Bool)

(assert (=> b!134287 m!159365))

(assert (=> b!134287 m!159337))

(declare-fun m!159367 () Bool)

(assert (=> b!134287 m!159367))

(declare-fun m!159369 () Bool)

(assert (=> b!134287 m!159369))

(declare-fun m!159371 () Bool)

(assert (=> b!134287 m!159371))

(declare-fun m!159373 () Bool)

(assert (=> b!134287 m!159373))

(declare-fun m!159375 () Bool)

(assert (=> b!134287 m!159375))

(assert (=> b!134287 m!159359))

(declare-fun m!159377 () Bool)

(assert (=> b!134287 m!159377))

(assert (=> b!134287 m!159371))

(declare-fun m!159379 () Bool)

(assert (=> b!134287 m!159379))

(assert (=> b!134287 m!159363))

(declare-fun m!159381 () Bool)

(assert (=> b!134287 m!159381))

(assert (=> b!134287 m!159347))

(declare-fun m!159383 () Bool)

(assert (=> b!134287 m!159383))

(assert (=> b!134287 m!159361))

(declare-fun m!159385 () Bool)

(assert (=> b!134287 m!159385))

(declare-fun m!159387 () Bool)

(assert (=> b!134287 m!159387))

(declare-fun m!159389 () Bool)

(assert (=> bm!14804 m!159389))

(declare-fun m!159391 () Bool)

(assert (=> b!134300 m!159391))

(declare-fun m!159393 () Bool)

(assert (=> b!134305 m!159393))

(assert (=> b!134303 m!159347))

(assert (=> b!134303 m!159347))

(declare-fun m!159395 () Bool)

(assert (=> b!134303 m!159395))

(assert (=> b!134294 m!159347))

(assert (=> b!134294 m!159347))

(assert (=> b!134294 m!159355))

(assert (=> d!40563 d!41247))

(declare-fun d!41249 () Bool)

(declare-fun e!87490 () Bool)

(assert (=> d!41249 e!87490))

(declare-fun res!64601 () Bool)

(assert (=> d!41249 (=> res!64601 e!87490)))

(declare-fun lt!70303 () Bool)

(assert (=> d!41249 (= res!64601 (not lt!70303))))

(declare-fun lt!70300 () Bool)

(assert (=> d!41249 (= lt!70303 lt!70300)))

(declare-fun lt!70302 () Unit!4135)

(declare-fun e!87491 () Unit!4135)

(assert (=> d!41249 (= lt!70302 e!87491)))

(declare-fun c!24972 () Bool)

(assert (=> d!41249 (= c!24972 lt!70300)))

(assert (=> d!41249 (= lt!70300 (containsKey!176 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 lt!69349) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))

(assert (=> d!41249 (= (contains!899 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2261 lt!69349) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))) lt!70303)))

(declare-fun b!134308 () Bool)

(declare-fun lt!70301 () Unit!4135)

(assert (=> b!134308 (= e!87491 lt!70301)))

(assert (=> b!134308 (= lt!70301 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 lt!69349) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))

(assert (=> b!134308 (isDefined!125 (getValueByKey!172 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 lt!69349) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))

(declare-fun b!134309 () Bool)

(declare-fun Unit!4211 () Unit!4135)

(assert (=> b!134309 (= e!87491 Unit!4211)))

(declare-fun b!134310 () Bool)

(assert (=> b!134310 (= e!87490 (isDefined!125 (getValueByKey!172 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 lt!69349) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))))))))

(assert (= (and d!41249 c!24972) b!134308))

(assert (= (and d!41249 (not c!24972)) b!134309))

(assert (= (and d!41249 (not res!64601)) b!134310))

(assert (=> d!41249 m!157379))

(declare-fun m!159397 () Bool)

(assert (=> d!41249 m!159397))

(assert (=> b!134308 m!157379))

(declare-fun m!159399 () Bool)

(assert (=> b!134308 m!159399))

(assert (=> b!134308 m!157379))

(declare-fun m!159401 () Bool)

(assert (=> b!134308 m!159401))

(assert (=> b!134308 m!159401))

(declare-fun m!159403 () Bool)

(assert (=> b!134308 m!159403))

(assert (=> b!134310 m!157379))

(assert (=> b!134310 m!159401))

(assert (=> b!134310 m!159401))

(assert (=> b!134310 m!159403))

(assert (=> b!133329 d!41249))

(assert (=> b!133329 d!40539))

(declare-fun d!41251 () Bool)

(declare-fun e!87492 () Bool)

(assert (=> d!41251 e!87492))

(declare-fun res!64602 () Bool)

(assert (=> d!41251 (=> res!64602 e!87492)))

(declare-fun lt!70307 () Bool)

(assert (=> d!41251 (= res!64602 (not lt!70307))))

(declare-fun lt!70304 () Bool)

(assert (=> d!41251 (= lt!70307 lt!70304)))

(declare-fun lt!70306 () Unit!4135)

(declare-fun e!87493 () Unit!4135)

(assert (=> d!41251 (= lt!70306 e!87493)))

(declare-fun c!24973 () Bool)

(assert (=> d!41251 (= c!24973 lt!70304)))

(assert (=> d!41251 (= lt!70304 (containsKey!176 (toList!869 lt!70032) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41251 (= (contains!899 lt!70032 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70307)))

(declare-fun b!134311 () Bool)

(declare-fun lt!70305 () Unit!4135)

(assert (=> b!134311 (= e!87493 lt!70305)))

(assert (=> b!134311 (= lt!70305 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70032) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!134311 (isDefined!125 (getValueByKey!172 (toList!869 lt!70032) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134312 () Bool)

(declare-fun Unit!4212 () Unit!4135)

(assert (=> b!134312 (= e!87493 Unit!4212)))

(declare-fun b!134313 () Bool)

(assert (=> b!134313 (= e!87492 (isDefined!125 (getValueByKey!172 (toList!869 lt!70032) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41251 c!24973) b!134311))

(assert (= (and d!41251 (not c!24973)) b!134312))

(assert (= (and d!41251 (not res!64602)) b!134313))

(declare-fun m!159405 () Bool)

(assert (=> d!41251 m!159405))

(declare-fun m!159407 () Bool)

(assert (=> b!134311 m!159407))

(assert (=> b!134311 m!158319))

(assert (=> b!134311 m!158319))

(declare-fun m!159409 () Bool)

(assert (=> b!134311 m!159409))

(assert (=> b!134313 m!158319))

(assert (=> b!134313 m!158319))

(assert (=> b!134313 m!159409))

(assert (=> d!40845 d!41251))

(declare-fun e!87495 () Option!178)

(declare-fun b!134316 () Bool)

(assert (=> b!134316 (= e!87495 (getValueByKey!172 (t!6167 lt!70034) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134317 () Bool)

(assert (=> b!134317 (= e!87495 None!176)))

(declare-fun c!24974 () Bool)

(declare-fun d!41253 () Bool)

(assert (=> d!41253 (= c!24974 (and ((_ is Cons!1712) lt!70034) (= (_1!1324 (h!2317 lt!70034)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87494 () Option!178)

(assert (=> d!41253 (= (getValueByKey!172 lt!70034 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87494)))

(declare-fun b!134314 () Bool)

(assert (=> b!134314 (= e!87494 (Some!177 (_2!1324 (h!2317 lt!70034))))))

(declare-fun b!134315 () Bool)

(assert (=> b!134315 (= e!87494 e!87495)))

(declare-fun c!24975 () Bool)

(assert (=> b!134315 (= c!24975 (and ((_ is Cons!1712) lt!70034) (not (= (_1!1324 (h!2317 lt!70034)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!41253 c!24974) b!134314))

(assert (= (and d!41253 (not c!24974)) b!134315))

(assert (= (and b!134315 c!24975) b!134316))

(assert (= (and b!134315 (not c!24975)) b!134317))

(declare-fun m!159411 () Bool)

(assert (=> b!134316 m!159411))

(assert (=> d!40845 d!41253))

(declare-fun d!41255 () Bool)

(assert (=> d!41255 (= (getValueByKey!172 lt!70034 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70308 () Unit!4135)

(assert (=> d!41255 (= lt!70308 (choose!827 lt!70034 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87496 () Bool)

(assert (=> d!41255 e!87496))

(declare-fun res!64603 () Bool)

(assert (=> d!41255 (=> (not res!64603) (not e!87496))))

(assert (=> d!41255 (= res!64603 (isStrictlySorted!322 lt!70034))))

(assert (=> d!41255 (= (lemmaContainsTupThenGetReturnValue!87 lt!70034 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70308)))

(declare-fun b!134318 () Bool)

(declare-fun res!64604 () Bool)

(assert (=> b!134318 (=> (not res!64604) (not e!87496))))

(assert (=> b!134318 (= res!64604 (containsKey!176 lt!70034 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134319 () Bool)

(assert (=> b!134319 (= e!87496 (contains!902 lt!70034 (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41255 res!64603) b!134318))

(assert (= (and b!134318 res!64604) b!134319))

(assert (=> d!41255 m!158313))

(declare-fun m!159413 () Bool)

(assert (=> d!41255 m!159413))

(declare-fun m!159415 () Bool)

(assert (=> d!41255 m!159415))

(declare-fun m!159417 () Bool)

(assert (=> b!134318 m!159417))

(declare-fun m!159419 () Bool)

(assert (=> b!134319 m!159419))

(assert (=> d!40845 d!41255))

(declare-fun bm!14810 () Bool)

(declare-fun call!14814 () List!1716)

(declare-fun call!14815 () List!1716)

(assert (=> bm!14810 (= call!14814 call!14815)))

(declare-fun d!41257 () Bool)

(declare-fun e!87500 () Bool)

(assert (=> d!41257 e!87500))

(declare-fun res!64606 () Bool)

(assert (=> d!41257 (=> (not res!64606) (not e!87500))))

(declare-fun lt!70309 () List!1716)

(assert (=> d!41257 (= res!64606 (isStrictlySorted!322 lt!70309))))

(declare-fun e!87498 () List!1716)

(assert (=> d!41257 (= lt!70309 e!87498)))

(declare-fun c!24979 () Bool)

(assert (=> d!41257 (= c!24979 (and ((_ is Cons!1712) (toList!869 (map!1409 newMap!16))) (bvslt (_1!1324 (h!2317 (toList!869 (map!1409 newMap!16)))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41257 (isStrictlySorted!322 (toList!869 (map!1409 newMap!16)))))

(assert (=> d!41257 (= (insertStrictlySorted!90 (toList!869 (map!1409 newMap!16)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70309)))

(declare-fun b!134320 () Bool)

(assert (=> b!134320 (= e!87500 (contains!902 lt!70309 (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134321 () Bool)

(declare-fun c!24977 () Bool)

(assert (=> b!134321 (= c!24977 (and ((_ is Cons!1712) (toList!869 (map!1409 newMap!16))) (bvsgt (_1!1324 (h!2317 (toList!869 (map!1409 newMap!16)))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87499 () List!1716)

(declare-fun e!87501 () List!1716)

(assert (=> b!134321 (= e!87499 e!87501)))

(declare-fun e!87497 () List!1716)

(declare-fun b!134322 () Bool)

(assert (=> b!134322 (= e!87497 (insertStrictlySorted!90 (t!6167 (toList!869 (map!1409 newMap!16))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134323 () Bool)

(assert (=> b!134323 (= e!87499 call!14814)))

(declare-fun b!134324 () Bool)

(declare-fun call!14813 () List!1716)

(assert (=> b!134324 (= e!87501 call!14813)))

(declare-fun c!24976 () Bool)

(declare-fun b!134325 () Bool)

(assert (=> b!134325 (= e!87497 (ite c!24976 (t!6167 (toList!869 (map!1409 newMap!16))) (ite c!24977 (Cons!1712 (h!2317 (toList!869 (map!1409 newMap!16))) (t!6167 (toList!869 (map!1409 newMap!16)))) Nil!1713)))))

(declare-fun b!134326 () Bool)

(assert (=> b!134326 (= e!87501 call!14813)))

(declare-fun b!134327 () Bool)

(assert (=> b!134327 (= e!87498 call!14815)))

(declare-fun bm!14811 () Bool)

(assert (=> bm!14811 (= call!14815 ($colon$colon!92 e!87497 (ite c!24979 (h!2317 (toList!869 (map!1409 newMap!16))) (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!24978 () Bool)

(assert (=> bm!14811 (= c!24978 c!24979)))

(declare-fun bm!14812 () Bool)

(assert (=> bm!14812 (= call!14813 call!14814)))

(declare-fun b!134328 () Bool)

(declare-fun res!64605 () Bool)

(assert (=> b!134328 (=> (not res!64605) (not e!87500))))

(assert (=> b!134328 (= res!64605 (containsKey!176 lt!70309 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134329 () Bool)

(assert (=> b!134329 (= e!87498 e!87499)))

(assert (=> b!134329 (= c!24976 (and ((_ is Cons!1712) (toList!869 (map!1409 newMap!16))) (= (_1!1324 (h!2317 (toList!869 (map!1409 newMap!16)))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41257 c!24979) b!134327))

(assert (= (and d!41257 (not c!24979)) b!134329))

(assert (= (and b!134329 c!24976) b!134323))

(assert (= (and b!134329 (not c!24976)) b!134321))

(assert (= (and b!134321 c!24977) b!134324))

(assert (= (and b!134321 (not c!24977)) b!134326))

(assert (= (or b!134324 b!134326) bm!14812))

(assert (= (or b!134323 bm!14812) bm!14810))

(assert (= (or b!134327 bm!14810) bm!14811))

(assert (= (and bm!14811 c!24978) b!134322))

(assert (= (and bm!14811 (not c!24978)) b!134325))

(assert (= (and d!41257 res!64606) b!134328))

(assert (= (and b!134328 res!64605) b!134320))

(declare-fun m!159421 () Bool)

(assert (=> d!41257 m!159421))

(declare-fun m!159423 () Bool)

(assert (=> d!41257 m!159423))

(declare-fun m!159425 () Bool)

(assert (=> bm!14811 m!159425))

(declare-fun m!159427 () Bool)

(assert (=> b!134322 m!159427))

(declare-fun m!159429 () Bool)

(assert (=> b!134320 m!159429))

(declare-fun m!159431 () Bool)

(assert (=> b!134328 m!159431))

(assert (=> d!40845 d!41257))

(assert (=> d!40717 d!40259))

(assert (=> d!40717 d!40277))

(assert (=> d!40717 d!40267))

(declare-fun d!41259 () Bool)

(declare-fun e!87502 () Bool)

(assert (=> d!41259 e!87502))

(declare-fun res!64607 () Bool)

(assert (=> d!41259 (=> res!64607 e!87502)))

(declare-fun lt!70313 () Bool)

(assert (=> d!41259 (= res!64607 (not lt!70313))))

(declare-fun lt!70310 () Bool)

(assert (=> d!41259 (= lt!70313 lt!70310)))

(declare-fun lt!70312 () Unit!4135)

(declare-fun e!87503 () Unit!4135)

(assert (=> d!41259 (= lt!70312 e!87503)))

(declare-fun c!24980 () Bool)

(assert (=> d!41259 (= c!24980 lt!70310)))

(assert (=> d!41259 (= lt!70310 (containsKey!176 (toList!869 lt!69965) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41259 (= (contains!899 lt!69965 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70313)))

(declare-fun b!134330 () Bool)

(declare-fun lt!70311 () Unit!4135)

(assert (=> b!134330 (= e!87503 lt!70311)))

(assert (=> b!134330 (= lt!70311 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69965) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134330 (isDefined!125 (getValueByKey!172 (toList!869 lt!69965) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134331 () Bool)

(declare-fun Unit!4213 () Unit!4135)

(assert (=> b!134331 (= e!87503 Unit!4213)))

(declare-fun b!134332 () Bool)

(assert (=> b!134332 (= e!87502 (isDefined!125 (getValueByKey!172 (toList!869 lt!69965) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41259 c!24980) b!134330))

(assert (= (and d!41259 (not c!24980)) b!134331))

(assert (= (and d!41259 (not res!64607)) b!134332))

(declare-fun m!159433 () Bool)

(assert (=> d!41259 m!159433))

(declare-fun m!159435 () Bool)

(assert (=> b!134330 m!159435))

(declare-fun m!159437 () Bool)

(assert (=> b!134330 m!159437))

(assert (=> b!134330 m!159437))

(declare-fun m!159439 () Bool)

(assert (=> b!134330 m!159439))

(assert (=> b!134332 m!159437))

(assert (=> b!134332 m!159437))

(assert (=> b!134332 m!159439))

(assert (=> bm!14760 d!41259))

(assert (=> bm!14693 d!40299))

(declare-fun d!41261 () Bool)

(declare-fun e!87504 () Bool)

(assert (=> d!41261 e!87504))

(declare-fun res!64608 () Bool)

(assert (=> d!41261 (=> res!64608 e!87504)))

(declare-fun lt!70317 () Bool)

(assert (=> d!41261 (= res!64608 (not lt!70317))))

(declare-fun lt!70314 () Bool)

(assert (=> d!41261 (= lt!70317 lt!70314)))

(declare-fun lt!70316 () Unit!4135)

(declare-fun e!87505 () Unit!4135)

(assert (=> d!41261 (= lt!70316 e!87505)))

(declare-fun c!24981 () Bool)

(assert (=> d!41261 (= c!24981 lt!70314)))

(assert (=> d!41261 (= lt!70314 (containsKey!176 (toList!869 lt!69919) (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(assert (=> d!41261 (= (contains!899 lt!69919 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)) lt!70317)))

(declare-fun b!134333 () Bool)

(declare-fun lt!70315 () Unit!4135)

(assert (=> b!134333 (= e!87505 lt!70315)))

(assert (=> b!134333 (= lt!70315 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69919) (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(assert (=> b!134333 (isDefined!125 (getValueByKey!172 (toList!869 lt!69919) (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(declare-fun b!134334 () Bool)

(declare-fun Unit!4214 () Unit!4135)

(assert (=> b!134334 (= e!87505 Unit!4214)))

(declare-fun b!134335 () Bool)

(assert (=> b!134335 (= e!87504 (isDefined!125 (getValueByKey!172 (toList!869 lt!69919) (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000))))))

(assert (= (and d!41261 c!24981) b!134333))

(assert (= (and d!41261 (not c!24981)) b!134334))

(assert (= (and d!41261 (not res!64608)) b!134335))

(assert (=> d!41261 m!157587))

(declare-fun m!159441 () Bool)

(assert (=> d!41261 m!159441))

(assert (=> b!134333 m!157587))

(declare-fun m!159443 () Bool)

(assert (=> b!134333 m!159443))

(assert (=> b!134333 m!157587))

(declare-fun m!159445 () Bool)

(assert (=> b!134333 m!159445))

(assert (=> b!134333 m!159445))

(declare-fun m!159447 () Bool)

(assert (=> b!134333 m!159447))

(assert (=> b!134335 m!157587))

(assert (=> b!134335 m!159445))

(assert (=> b!134335 m!159445))

(assert (=> b!134335 m!159447))

(assert (=> b!133629 d!41261))

(declare-fun d!41263 () Bool)

(assert (=> d!41263 (= (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133600 d!41263))

(declare-fun e!87507 () Option!178)

(declare-fun b!134338 () Bool)

(assert (=> b!134338 (= e!87507 (getValueByKey!172 (t!6167 (toList!869 lt!69536)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134339 () Bool)

(assert (=> b!134339 (= e!87507 None!176)))

(declare-fun d!41265 () Bool)

(declare-fun c!24982 () Bool)

(assert (=> d!41265 (= c!24982 (and ((_ is Cons!1712) (toList!869 lt!69536)) (= (_1!1324 (h!2317 (toList!869 lt!69536))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87506 () Option!178)

(assert (=> d!41265 (= (getValueByKey!172 (toList!869 lt!69536) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87506)))

(declare-fun b!134336 () Bool)

(assert (=> b!134336 (= e!87506 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69536)))))))

(declare-fun b!134337 () Bool)

(assert (=> b!134337 (= e!87506 e!87507)))

(declare-fun c!24983 () Bool)

(assert (=> b!134337 (= c!24983 (and ((_ is Cons!1712) (toList!869 lt!69536)) (not (= (_1!1324 (h!2317 (toList!869 lt!69536))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!41265 c!24982) b!134336))

(assert (= (and d!41265 (not c!24982)) b!134337))

(assert (= (and b!134337 c!24983) b!134338))

(assert (= (and b!134337 (not c!24983)) b!134339))

(declare-fun m!159449 () Bool)

(assert (=> b!134338 m!159449))

(assert (=> b!133008 d!41265))

(assert (=> b!133043 d!41137))

(declare-fun d!41267 () Bool)

(declare-fun lt!70318 () Bool)

(assert (=> d!41267 (= lt!70318 (select (content!133 (t!6167 (toList!869 lt!69385))) (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun e!87509 () Bool)

(assert (=> d!41267 (= lt!70318 e!87509)))

(declare-fun res!64609 () Bool)

(assert (=> d!41267 (=> (not res!64609) (not e!87509))))

(assert (=> d!41267 (= res!64609 ((_ is Cons!1712) (t!6167 (toList!869 lt!69385))))))

(assert (=> d!41267 (= (contains!902 (t!6167 (toList!869 lt!69385)) (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!70318)))

(declare-fun b!134340 () Bool)

(declare-fun e!87508 () Bool)

(assert (=> b!134340 (= e!87509 e!87508)))

(declare-fun res!64610 () Bool)

(assert (=> b!134340 (=> res!64610 e!87508)))

(assert (=> b!134340 (= res!64610 (= (h!2317 (t!6167 (toList!869 lt!69385))) (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!134341 () Bool)

(assert (=> b!134341 (= e!87508 (contains!902 (t!6167 (t!6167 (toList!869 lt!69385))) (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!41267 res!64609) b!134340))

(assert (= (and b!134340 (not res!64610)) b!134341))

(declare-fun m!159451 () Bool)

(assert (=> d!41267 m!159451))

(declare-fun m!159453 () Bool)

(assert (=> d!41267 m!159453))

(declare-fun m!159455 () Bool)

(assert (=> b!134341 m!159455))

(assert (=> b!133224 d!41267))

(declare-fun d!41269 () Bool)

(assert (=> d!41269 (not (contains!899 (+!175 lt!69613 (tuple2!2627 lt!69612 lt!69609)) lt!69615))))

(declare-fun lt!70319 () Unit!4135)

(assert (=> d!41269 (= lt!70319 (choose!826 lt!69613 lt!69612 lt!69609 lt!69615))))

(declare-fun e!87510 () Bool)

(assert (=> d!41269 e!87510))

(declare-fun res!64611 () Bool)

(assert (=> d!41269 (=> (not res!64611) (not e!87510))))

(assert (=> d!41269 (= res!64611 (not (contains!899 lt!69613 lt!69615)))))

(assert (=> d!41269 (= (addStillNotContains!61 lt!69613 lt!69612 lt!69609 lt!69615) lt!70319)))

(declare-fun b!134342 () Bool)

(assert (=> b!134342 (= e!87510 (not (= lt!69612 lt!69615)))))

(assert (= (and d!41269 res!64611) b!134342))

(assert (=> d!41269 m!157009))

(assert (=> d!41269 m!157009))

(assert (=> d!41269 m!157013))

(declare-fun m!159457 () Bool)

(assert (=> d!41269 m!159457))

(declare-fun m!159459 () Bool)

(assert (=> d!41269 m!159459))

(assert (=> b!133156 d!41269))

(assert (=> b!133156 d!40713))

(declare-fun d!41271 () Bool)

(declare-fun e!87511 () Bool)

(assert (=> d!41271 e!87511))

(declare-fun res!64613 () Bool)

(assert (=> d!41271 (=> (not res!64613) (not e!87511))))

(declare-fun lt!70320 () ListLongMap!1707)

(assert (=> d!41271 (= res!64613 (contains!899 lt!70320 (_1!1324 (tuple2!2627 lt!69612 lt!69609))))))

(declare-fun lt!70322 () List!1716)

(assert (=> d!41271 (= lt!70320 (ListLongMap!1708 lt!70322))))

(declare-fun lt!70323 () Unit!4135)

(declare-fun lt!70321 () Unit!4135)

(assert (=> d!41271 (= lt!70323 lt!70321)))

(assert (=> d!41271 (= (getValueByKey!172 lt!70322 (_1!1324 (tuple2!2627 lt!69612 lt!69609))) (Some!177 (_2!1324 (tuple2!2627 lt!69612 lt!69609))))))

(assert (=> d!41271 (= lt!70321 (lemmaContainsTupThenGetReturnValue!87 lt!70322 (_1!1324 (tuple2!2627 lt!69612 lt!69609)) (_2!1324 (tuple2!2627 lt!69612 lt!69609))))))

(assert (=> d!41271 (= lt!70322 (insertStrictlySorted!90 (toList!869 lt!69613) (_1!1324 (tuple2!2627 lt!69612 lt!69609)) (_2!1324 (tuple2!2627 lt!69612 lt!69609))))))

(assert (=> d!41271 (= (+!175 lt!69613 (tuple2!2627 lt!69612 lt!69609)) lt!70320)))

(declare-fun b!134343 () Bool)

(declare-fun res!64612 () Bool)

(assert (=> b!134343 (=> (not res!64612) (not e!87511))))

(assert (=> b!134343 (= res!64612 (= (getValueByKey!172 (toList!869 lt!70320) (_1!1324 (tuple2!2627 lt!69612 lt!69609))) (Some!177 (_2!1324 (tuple2!2627 lt!69612 lt!69609)))))))

(declare-fun b!134344 () Bool)

(assert (=> b!134344 (= e!87511 (contains!902 (toList!869 lt!70320) (tuple2!2627 lt!69612 lt!69609)))))

(assert (= (and d!41271 res!64613) b!134343))

(assert (= (and b!134343 res!64612) b!134344))

(declare-fun m!159461 () Bool)

(assert (=> d!41271 m!159461))

(declare-fun m!159463 () Bool)

(assert (=> d!41271 m!159463))

(declare-fun m!159465 () Bool)

(assert (=> d!41271 m!159465))

(declare-fun m!159467 () Bool)

(assert (=> d!41271 m!159467))

(declare-fun m!159469 () Bool)

(assert (=> b!134343 m!159469))

(declare-fun m!159471 () Bool)

(assert (=> b!134344 m!159471))

(assert (=> b!133156 d!41271))

(declare-fun d!41273 () Bool)

(declare-fun e!87512 () Bool)

(assert (=> d!41273 e!87512))

(declare-fun res!64615 () Bool)

(assert (=> d!41273 (=> (not res!64615) (not e!87512))))

(declare-fun lt!70324 () ListLongMap!1707)

(assert (=> d!41273 (= res!64615 (contains!899 lt!70324 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70326 () List!1716)

(assert (=> d!41273 (= lt!70324 (ListLongMap!1708 lt!70326))))

(declare-fun lt!70327 () Unit!4135)

(declare-fun lt!70325 () Unit!4135)

(assert (=> d!41273 (= lt!70327 lt!70325)))

(assert (=> d!41273 (= (getValueByKey!172 lt!70326 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41273 (= lt!70325 (lemmaContainsTupThenGetReturnValue!87 lt!70326 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41273 (= lt!70326 (insertStrictlySorted!90 (toList!869 call!14687) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41273 (= (+!175 call!14687 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70324)))

(declare-fun b!134345 () Bool)

(declare-fun res!64614 () Bool)

(assert (=> b!134345 (=> (not res!64614) (not e!87512))))

(assert (=> b!134345 (= res!64614 (= (getValueByKey!172 (toList!869 lt!70324) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134346 () Bool)

(assert (=> b!134346 (= e!87512 (contains!902 (toList!869 lt!70324) (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41273 res!64615) b!134345))

(assert (= (and b!134345 res!64614) b!134346))

(declare-fun m!159473 () Bool)

(assert (=> d!41273 m!159473))

(declare-fun m!159475 () Bool)

(assert (=> d!41273 m!159475))

(declare-fun m!159477 () Bool)

(assert (=> d!41273 m!159477))

(declare-fun m!159479 () Bool)

(assert (=> d!41273 m!159479))

(declare-fun m!159481 () Bool)

(assert (=> b!134345 m!159481))

(declare-fun m!159483 () Bool)

(assert (=> b!134346 m!159483))

(assert (=> b!133156 d!41273))

(declare-fun d!41275 () Bool)

(declare-fun e!87513 () Bool)

(assert (=> d!41275 e!87513))

(declare-fun res!64616 () Bool)

(assert (=> d!41275 (=> res!64616 e!87513)))

(declare-fun lt!70331 () Bool)

(assert (=> d!41275 (= res!64616 (not lt!70331))))

(declare-fun lt!70328 () Bool)

(assert (=> d!41275 (= lt!70331 lt!70328)))

(declare-fun lt!70330 () Unit!4135)

(declare-fun e!87514 () Unit!4135)

(assert (=> d!41275 (= lt!70330 e!87514)))

(declare-fun c!24984 () Bool)

(assert (=> d!41275 (= c!24984 lt!70328)))

(assert (=> d!41275 (= lt!70328 (containsKey!176 (toList!869 (+!175 lt!69613 (tuple2!2627 lt!69612 lt!69609))) lt!69615))))

(assert (=> d!41275 (= (contains!899 (+!175 lt!69613 (tuple2!2627 lt!69612 lt!69609)) lt!69615) lt!70331)))

(declare-fun b!134347 () Bool)

(declare-fun lt!70329 () Unit!4135)

(assert (=> b!134347 (= e!87514 lt!70329)))

(assert (=> b!134347 (= lt!70329 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69613 (tuple2!2627 lt!69612 lt!69609))) lt!69615))))

(assert (=> b!134347 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69613 (tuple2!2627 lt!69612 lt!69609))) lt!69615))))

(declare-fun b!134348 () Bool)

(declare-fun Unit!4215 () Unit!4135)

(assert (=> b!134348 (= e!87514 Unit!4215)))

(declare-fun b!134349 () Bool)

(assert (=> b!134349 (= e!87513 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69613 (tuple2!2627 lt!69612 lt!69609))) lt!69615)))))

(assert (= (and d!41275 c!24984) b!134347))

(assert (= (and d!41275 (not c!24984)) b!134348))

(assert (= (and d!41275 (not res!64616)) b!134349))

(declare-fun m!159485 () Bool)

(assert (=> d!41275 m!159485))

(declare-fun m!159487 () Bool)

(assert (=> b!134347 m!159487))

(declare-fun m!159489 () Bool)

(assert (=> b!134347 m!159489))

(assert (=> b!134347 m!159489))

(declare-fun m!159491 () Bool)

(assert (=> b!134347 m!159491))

(assert (=> b!134349 m!159489))

(assert (=> b!134349 m!159489))

(assert (=> b!134349 m!159491))

(assert (=> b!133156 d!41275))

(assert (=> b!133018 d!40353))

(assert (=> d!40667 d!40243))

(assert (=> d!40667 d!40229))

(declare-fun d!41277 () Bool)

(assert (=> d!41277 (contains!899 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))

(assert (=> d!41277 true))

(declare-fun _$17!56 () Unit!4135)

(assert (=> d!41277 (= (choose!829 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) _$17!56)))

(declare-fun bs!5590 () Bool)

(assert (= bs!5590 d!41277))

(assert (=> bs!5590 m!155939))

(assert (=> bs!5590 m!155939))

(assert (=> bs!5590 m!155869))

(assert (=> bs!5590 m!156047))

(assert (=> d!40667 d!41277))

(assert (=> d!40667 d!40325))

(declare-fun b!134352 () Bool)

(declare-fun e!87516 () Option!178)

(assert (=> b!134352 (= e!87516 (getValueByKey!172 (t!6167 (toList!869 lt!69970)) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!134353 () Bool)

(assert (=> b!134353 (= e!87516 None!176)))

(declare-fun c!24985 () Bool)

(declare-fun d!41279 () Bool)

(assert (=> d!41279 (= c!24985 (and ((_ is Cons!1712) (toList!869 lt!69970)) (= (_1!1324 (h!2317 (toList!869 lt!69970))) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun e!87515 () Option!178)

(assert (=> d!41279 (= (getValueByKey!172 (toList!869 lt!69970) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) e!87515)))

(declare-fun b!134350 () Bool)

(assert (=> b!134350 (= e!87515 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69970)))))))

(declare-fun b!134351 () Bool)

(assert (=> b!134351 (= e!87515 e!87516)))

(declare-fun c!24986 () Bool)

(assert (=> b!134351 (= c!24986 (and ((_ is Cons!1712) (toList!869 lt!69970)) (not (= (_1!1324 (h!2317 (toList!869 lt!69970))) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))))

(assert (= (and d!41279 c!24985) b!134350))

(assert (= (and d!41279 (not c!24985)) b!134351))

(assert (= (and b!134351 c!24986) b!134352))

(assert (= (and b!134351 (not c!24986)) b!134353))

(declare-fun m!159493 () Bool)

(assert (=> b!134352 m!159493))

(assert (=> b!133719 d!41279))

(declare-fun d!41281 () Bool)

(declare-fun e!87517 () Bool)

(assert (=> d!41281 e!87517))

(declare-fun res!64617 () Bool)

(assert (=> d!41281 (=> res!64617 e!87517)))

(declare-fun lt!70335 () Bool)

(assert (=> d!41281 (= res!64617 (not lt!70335))))

(declare-fun lt!70332 () Bool)

(assert (=> d!41281 (= lt!70335 lt!70332)))

(declare-fun lt!70334 () Unit!4135)

(declare-fun e!87518 () Unit!4135)

(assert (=> d!41281 (= lt!70334 e!87518)))

(declare-fun c!24987 () Bool)

(assert (=> d!41281 (= c!24987 lt!70332)))

(assert (=> d!41281 (= lt!70332 (containsKey!176 (toList!869 lt!69692) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41281 (= (contains!899 lt!69692 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70335)))

(declare-fun b!134354 () Bool)

(declare-fun lt!70333 () Unit!4135)

(assert (=> b!134354 (= e!87518 lt!70333)))

(assert (=> b!134354 (= lt!70333 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69692) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134354 (isDefined!125 (getValueByKey!172 (toList!869 lt!69692) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134355 () Bool)

(declare-fun Unit!4216 () Unit!4135)

(assert (=> b!134355 (= e!87518 Unit!4216)))

(declare-fun b!134356 () Bool)

(assert (=> b!134356 (= e!87517 (isDefined!125 (getValueByKey!172 (toList!869 lt!69692) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41281 c!24987) b!134354))

(assert (= (and d!41281 (not c!24987)) b!134355))

(assert (= (and d!41281 (not res!64617)) b!134356))

(declare-fun m!159495 () Bool)

(assert (=> d!41281 m!159495))

(declare-fun m!159497 () Bool)

(assert (=> b!134354 m!159497))

(declare-fun m!159499 () Bool)

(assert (=> b!134354 m!159499))

(assert (=> b!134354 m!159499))

(declare-fun m!159501 () Bool)

(assert (=> b!134354 m!159501))

(assert (=> b!134356 m!159499))

(assert (=> b!134356 m!159499))

(assert (=> b!134356 m!159501))

(assert (=> bm!14696 d!41281))

(declare-fun d!41283 () Bool)

(declare-fun lt!70336 () Bool)

(assert (=> d!41283 (= lt!70336 (select (content!132 Nil!1714) (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(declare-fun e!87519 () Bool)

(assert (=> d!41283 (= lt!70336 e!87519)))

(declare-fun res!64618 () Bool)

(assert (=> d!41283 (=> (not res!64618) (not e!87519))))

(assert (=> d!41283 (= res!64618 ((_ is Cons!1713) Nil!1714))))

(assert (=> d!41283 (= (contains!901 Nil!1714 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)) lt!70336)))

(declare-fun b!134357 () Bool)

(declare-fun e!87520 () Bool)

(assert (=> b!134357 (= e!87519 e!87520)))

(declare-fun res!64619 () Bool)

(assert (=> b!134357 (=> res!64619 e!87520)))

(assert (=> b!134357 (= res!64619 (= (h!2318 Nil!1714) (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(declare-fun b!134358 () Bool)

(assert (=> b!134358 (= e!87520 (contains!901 (t!6168 Nil!1714) (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(assert (= (and d!41283 res!64618) b!134357))

(assert (= (and b!134357 (not res!64619)) b!134358))

(assert (=> d!41283 m!156131))

(assert (=> d!41283 m!157587))

(declare-fun m!159503 () Bool)

(assert (=> d!41283 m!159503))

(assert (=> b!134358 m!157587))

(declare-fun m!159505 () Bool)

(assert (=> b!134358 m!159505))

(assert (=> b!133473 d!41283))

(assert (=> b!133563 d!41081))

(assert (=> b!133563 d!41083))

(declare-fun d!41285 () Bool)

(assert (=> d!41285 (arrayContainsKey!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) lt!69733 #b00000000000000000000000000000000)))

(declare-fun lt!70337 () Unit!4135)

(assert (=> d!41285 (= lt!70337 (choose!13 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) lt!69733 #b00000000000000000000000000000000))))

(assert (=> d!41285 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!41285 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) lt!69733 #b00000000000000000000000000000000) lt!70337)))

(declare-fun bs!5591 () Bool)

(assert (= bs!5591 d!41285))

(assert (=> bs!5591 m!157373))

(declare-fun m!159507 () Bool)

(assert (=> bs!5591 m!159507))

(assert (=> b!133328 d!41285))

(declare-fun d!41287 () Bool)

(declare-fun res!64620 () Bool)

(declare-fun e!87521 () Bool)

(assert (=> d!41287 (=> res!64620 e!87521)))

(assert (=> d!41287 (= res!64620 (= (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) lt!69733))))

(assert (=> d!41287 (= (arrayContainsKey!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) lt!69733 #b00000000000000000000000000000000) e!87521)))

(declare-fun b!134359 () Bool)

(declare-fun e!87522 () Bool)

(assert (=> b!134359 (= e!87521 e!87522)))

(declare-fun res!64621 () Bool)

(assert (=> b!134359 (=> (not res!64621) (not e!87522))))

(assert (=> b!134359 (= res!64621 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(declare-fun b!134360 () Bool)

(assert (=> b!134360 (= e!87522 (arrayContainsKey!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) lt!69733 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!41287 (not res!64620)) b!134359))

(assert (= (and b!134359 res!64621) b!134360))

(assert (=> d!41287 m!157367))

(declare-fun m!159509 () Bool)

(assert (=> b!134360 m!159509))

(assert (=> b!133328 d!41287))

(declare-fun b!134361 () Bool)

(declare-fun e!87523 () SeekEntryResult!275)

(declare-fun lt!70339 () SeekEntryResult!275)

(assert (=> b!134361 (= e!87523 (Found!275 (index!3262 lt!70339)))))

(declare-fun d!41289 () Bool)

(declare-fun lt!70340 () SeekEntryResult!275)

(assert (=> d!41289 (and (or ((_ is Undefined!275) lt!70340) (not ((_ is Found!275) lt!70340)) (and (bvsge (index!3261 lt!70340) #b00000000000000000000000000000000) (bvslt (index!3261 lt!70340) (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))) (or ((_ is Undefined!275) lt!70340) ((_ is Found!275) lt!70340) (not ((_ is MissingZero!275) lt!70340)) (and (bvsge (index!3260 lt!70340) #b00000000000000000000000000000000) (bvslt (index!3260 lt!70340) (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))) (or ((_ is Undefined!275) lt!70340) ((_ is Found!275) lt!70340) ((_ is MissingZero!275) lt!70340) (not ((_ is MissingVacant!275) lt!70340)) (and (bvsge (index!3263 lt!70340) #b00000000000000000000000000000000) (bvslt (index!3263 lt!70340) (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))) (or ((_ is Undefined!275) lt!70340) (ite ((_ is Found!275) lt!70340) (= (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) (index!3261 lt!70340)) (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!275) lt!70340) (= (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) (index!3260 lt!70340)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!275) lt!70340) (= (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) (index!3263 lt!70340)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87524 () SeekEntryResult!275)

(assert (=> d!41289 (= lt!70340 e!87524)))

(declare-fun c!24989 () Bool)

(assert (=> d!41289 (= c!24989 (and ((_ is Intermediate!275) lt!70339) (undefined!1087 lt!70339)))))

(assert (=> d!41289 (= lt!70339 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) (mask!7165 newMap!16)) (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (mask!7165 newMap!16)))))

(assert (=> d!41289 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41289 (= (seekEntryOrOpen!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (mask!7165 newMap!16)) lt!70340)))

(declare-fun b!134362 () Bool)

(assert (=> b!134362 (= e!87524 e!87523)))

(declare-fun lt!70338 () (_ BitVec 64))

(assert (=> b!134362 (= lt!70338 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) (index!3262 lt!70339)))))

(declare-fun c!24988 () Bool)

(assert (=> b!134362 (= c!24988 (= lt!70338 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!134363 () Bool)

(declare-fun e!87525 () SeekEntryResult!275)

(assert (=> b!134363 (= e!87525 (MissingZero!275 (index!3262 lt!70339)))))

(declare-fun b!134364 () Bool)

(declare-fun c!24990 () Bool)

(assert (=> b!134364 (= c!24990 (= lt!70338 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134364 (= e!87523 e!87525)))

(declare-fun b!134365 () Bool)

(assert (=> b!134365 (= e!87524 Undefined!275)))

(declare-fun b!134366 () Bool)

(assert (=> b!134366 (= e!87525 (seekKeyOrZeroReturnVacant!0 (x!15592 lt!70339) (index!3262 lt!70339) (index!3262 lt!70339) (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (mask!7165 newMap!16)))))

(assert (= (and d!41289 c!24989) b!134365))

(assert (= (and d!41289 (not c!24989)) b!134362))

(assert (= (and b!134362 c!24988) b!134361))

(assert (= (and b!134362 (not c!24988)) b!134364))

(assert (= (and b!134364 c!24990) b!134363))

(assert (= (and b!134364 (not c!24990)) b!134366))

(declare-fun m!159511 () Bool)

(assert (=> d!41289 m!159511))

(declare-fun m!159513 () Bool)

(assert (=> d!41289 m!159513))

(assert (=> d!41289 m!157367))

(declare-fun m!159515 () Bool)

(assert (=> d!41289 m!159515))

(assert (=> d!41289 m!157367))

(assert (=> d!41289 m!159513))

(assert (=> d!41289 m!156157))

(declare-fun m!159517 () Bool)

(assert (=> d!41289 m!159517))

(declare-fun m!159519 () Bool)

(assert (=> d!41289 m!159519))

(declare-fun m!159521 () Bool)

(assert (=> b!134362 m!159521))

(assert (=> b!134366 m!157367))

(declare-fun m!159523 () Bool)

(assert (=> b!134366 m!159523))

(assert (=> b!133328 d!41289))

(declare-fun b!134369 () Bool)

(declare-fun e!87527 () Option!178)

(assert (=> b!134369 (= e!87527 (getValueByKey!172 (t!6167 (toList!869 lt!69996)) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))

(declare-fun b!134370 () Bool)

(assert (=> b!134370 (= e!87527 None!176)))

(declare-fun c!24991 () Bool)

(declare-fun d!41291 () Bool)

(assert (=> d!41291 (= c!24991 (and ((_ is Cons!1712) (toList!869 lt!69996)) (= (_1!1324 (h!2317 (toList!869 lt!69996))) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))))))

(declare-fun e!87526 () Option!178)

(assert (=> d!41291 (= (getValueByKey!172 (toList!869 lt!69996) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))) e!87526)))

(declare-fun b!134367 () Bool)

(assert (=> b!134367 (= e!87526 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69996)))))))

(declare-fun b!134368 () Bool)

(assert (=> b!134368 (= e!87526 e!87527)))

(declare-fun c!24992 () Bool)

(assert (=> b!134368 (= c!24992 (and ((_ is Cons!1712) (toList!869 lt!69996)) (not (= (_1!1324 (h!2317 (toList!869 lt!69996))) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!41291 c!24991) b!134367))

(assert (= (and d!41291 (not c!24991)) b!134368))

(assert (= (and b!134368 c!24992) b!134369))

(assert (= (and b!134368 (not c!24992)) b!134370))

(declare-fun m!159525 () Bool)

(assert (=> b!134369 m!159525))

(assert (=> b!133759 d!41291))

(declare-fun d!41293 () Bool)

(assert (=> d!41293 (= ($colon$colon!92 e!86984 (ite c!24739 (h!2317 (toList!869 e!86455)) (tuple2!2627 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))) (Cons!1712 (ite c!24739 (h!2317 (toList!869 e!86455)) (tuple2!2627 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) e!86984))))

(assert (=> bm!14729 d!41293))

(declare-fun d!41295 () Bool)

(assert (=> d!41295 (= ($colon$colon!92 e!86764 (ite c!24640 (h!2317 (toList!869 lt!69093)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (Cons!1712 (ite c!24640 (h!2317 (toList!869 lt!69093)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) e!86764))))

(assert (=> bm!14682 d!41295))

(declare-fun d!41297 () Bool)

(declare-fun e!87528 () Bool)

(assert (=> d!41297 e!87528))

(declare-fun res!64622 () Bool)

(assert (=> d!41297 (=> res!64622 e!87528)))

(declare-fun lt!70344 () Bool)

(assert (=> d!41297 (= res!64622 (not lt!70344))))

(declare-fun lt!70341 () Bool)

(assert (=> d!41297 (= lt!70344 lt!70341)))

(declare-fun lt!70343 () Unit!4135)

(declare-fun e!87529 () Unit!4135)

(assert (=> d!41297 (= lt!70343 e!87529)))

(declare-fun c!24993 () Bool)

(assert (=> d!41297 (= c!24993 lt!70341)))

(assert (=> d!41297 (= lt!70341 (containsKey!176 (toList!869 lt!69728) (select (arr!2261 lt!69349) #b00000000000000000000000000000000)))))

(assert (=> d!41297 (= (contains!899 lt!69728 (select (arr!2261 lt!69349) #b00000000000000000000000000000000)) lt!70344)))

(declare-fun b!134371 () Bool)

(declare-fun lt!70342 () Unit!4135)

(assert (=> b!134371 (= e!87529 lt!70342)))

(assert (=> b!134371 (= lt!70342 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69728) (select (arr!2261 lt!69349) #b00000000000000000000000000000000)))))

(assert (=> b!134371 (isDefined!125 (getValueByKey!172 (toList!869 lt!69728) (select (arr!2261 lt!69349) #b00000000000000000000000000000000)))))

(declare-fun b!134372 () Bool)

(declare-fun Unit!4217 () Unit!4135)

(assert (=> b!134372 (= e!87529 Unit!4217)))

(declare-fun b!134373 () Bool)

(assert (=> b!134373 (= e!87528 (isDefined!125 (getValueByKey!172 (toList!869 lt!69728) (select (arr!2261 lt!69349) #b00000000000000000000000000000000))))))

(assert (= (and d!41297 c!24993) b!134371))

(assert (= (and d!41297 (not c!24993)) b!134372))

(assert (= (and d!41297 (not res!64622)) b!134373))

(assert (=> d!41297 m!157317))

(declare-fun m!159527 () Bool)

(assert (=> d!41297 m!159527))

(assert (=> b!134371 m!157317))

(declare-fun m!159529 () Bool)

(assert (=> b!134371 m!159529))

(assert (=> b!134371 m!157317))

(declare-fun m!159531 () Bool)

(assert (=> b!134371 m!159531))

(assert (=> b!134371 m!159531))

(declare-fun m!159533 () Bool)

(assert (=> b!134371 m!159533))

(assert (=> b!134373 m!157317))

(assert (=> b!134373 m!159531))

(assert (=> b!134373 m!159531))

(assert (=> b!134373 m!159533))

(assert (=> b!133320 d!41297))

(declare-fun d!41299 () Bool)

(assert (=> d!41299 (= (apply!116 lt!69761 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69761) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5592 () Bool)

(assert (= bs!5592 d!41299))

(declare-fun m!159535 () Bool)

(assert (=> bs!5592 m!159535))

(assert (=> bs!5592 m!159535))

(declare-fun m!159537 () Bool)

(assert (=> bs!5592 m!159537))

(assert (=> b!133362 d!41299))

(declare-fun d!41301 () Bool)

(declare-fun res!64623 () Bool)

(declare-fun e!87530 () Bool)

(assert (=> d!41301 (=> res!64623 e!87530)))

(assert (=> d!41301 (= res!64623 (and ((_ is Cons!1712) lt!69444) (= (_1!1324 (h!2317 lt!69444)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41301 (= (containsKey!176 lt!69444 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87530)))

(declare-fun b!134374 () Bool)

(declare-fun e!87531 () Bool)

(assert (=> b!134374 (= e!87530 e!87531)))

(declare-fun res!64624 () Bool)

(assert (=> b!134374 (=> (not res!64624) (not e!87531))))

(assert (=> b!134374 (= res!64624 (and (or (not ((_ is Cons!1712) lt!69444)) (bvsle (_1!1324 (h!2317 lt!69444)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Cons!1712) lt!69444) (bvslt (_1!1324 (h!2317 lt!69444)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134375 () Bool)

(assert (=> b!134375 (= e!87531 (containsKey!176 (t!6167 lt!69444) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!41301 (not res!64623)) b!134374))

(assert (= (and b!134374 res!64624) b!134375))

(declare-fun m!159539 () Bool)

(assert (=> b!134375 m!159539))

(assert (=> b!133395 d!41301))

(assert (=> b!132993 d!41023))

(assert (=> b!132993 d!41025))

(declare-fun b!134376 () Bool)

(declare-fun e!87533 () SeekEntryResult!275)

(assert (=> b!134376 (= e!87533 (Found!275 (index!3262 lt!69800)))))

(declare-fun b!134377 () Bool)

(declare-fun e!87532 () SeekEntryResult!275)

(assert (=> b!134377 (= e!87532 e!87533)))

(declare-fun c!24994 () Bool)

(declare-fun lt!70345 () (_ BitVec 64))

(assert (=> b!134377 (= c!24994 (= lt!70345 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!41303 () Bool)

(declare-fun lt!70346 () SeekEntryResult!275)

(assert (=> d!41303 (and (or ((_ is Undefined!275) lt!70346) (not ((_ is Found!275) lt!70346)) (and (bvsge (index!3261 lt!70346) #b00000000000000000000000000000000) (bvslt (index!3261 lt!70346) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))) (or ((_ is Undefined!275) lt!70346) ((_ is Found!275) lt!70346) (not ((_ is MissingVacant!275) lt!70346)) (not (= (index!3263 lt!70346) (index!3262 lt!69800))) (and (bvsge (index!3263 lt!70346) #b00000000000000000000000000000000) (bvslt (index!3263 lt!70346) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))) (or ((_ is Undefined!275) lt!70346) (ite ((_ is Found!275) lt!70346) (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3261 lt!70346)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and ((_ is MissingVacant!275) lt!70346) (= (index!3263 lt!70346) (index!3262 lt!69800)) (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3263 lt!70346)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!41303 (= lt!70346 e!87532)))

(declare-fun c!24996 () Bool)

(assert (=> d!41303 (= c!24996 (bvsge (x!15592 lt!69800) #b01111111111111111111111111111110))))

(assert (=> d!41303 (= lt!70345 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!69800)))))

(assert (=> d!41303 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!41303 (= (seekKeyOrZeroReturnVacant!0 (x!15592 lt!69800) (index!3262 lt!69800) (index!3262 lt!69800) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) lt!70346)))

(declare-fun b!134378 () Bool)

(declare-fun e!87534 () SeekEntryResult!275)

(assert (=> b!134378 (= e!87534 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15592 lt!69800) #b00000000000000000000000000000001) (nextIndex!0 (index!3262 lt!69800) (x!15592 lt!69800) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!69800) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!134379 () Bool)

(declare-fun c!24995 () Bool)

(assert (=> b!134379 (= c!24995 (= lt!70345 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134379 (= e!87533 e!87534)))

(declare-fun b!134380 () Bool)

(assert (=> b!134380 (= e!87532 Undefined!275)))

(declare-fun b!134381 () Bool)

(assert (=> b!134381 (= e!87534 (MissingVacant!275 (index!3262 lt!69800)))))

(assert (= (and d!41303 c!24996) b!134380))

(assert (= (and d!41303 (not c!24996)) b!134377))

(assert (= (and b!134377 c!24994) b!134376))

(assert (= (and b!134377 (not c!24994)) b!134379))

(assert (= (and b!134379 c!24995) b!134381))

(assert (= (and b!134379 (not c!24995)) b!134378))

(declare-fun m!159541 () Bool)

(assert (=> d!41303 m!159541))

(declare-fun m!159543 () Bool)

(assert (=> d!41303 m!159543))

(assert (=> d!41303 m!157547))

(assert (=> d!41303 m!155867))

(declare-fun m!159545 () Bool)

(assert (=> b!134378 m!159545))

(assert (=> b!134378 m!159545))

(assert (=> b!134378 m!156619))

(declare-fun m!159547 () Bool)

(assert (=> b!134378 m!159547))

(assert (=> b!133449 d!41303))

(declare-fun d!41305 () Bool)

(declare-fun res!64625 () Bool)

(declare-fun e!87535 () Bool)

(assert (=> d!41305 (=> res!64625 e!87535)))

(assert (=> d!41305 (= res!64625 (and ((_ is Cons!1712) (toList!869 lt!69486)) (= (_1!1324 (h!2317 (toList!869 lt!69486))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41305 (= (containsKey!176 (toList!869 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000) e!87535)))

(declare-fun b!134382 () Bool)

(declare-fun e!87536 () Bool)

(assert (=> b!134382 (= e!87535 e!87536)))

(declare-fun res!64626 () Bool)

(assert (=> b!134382 (=> (not res!64626) (not e!87536))))

(assert (=> b!134382 (= res!64626 (and (or (not ((_ is Cons!1712) (toList!869 lt!69486))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69486))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1712) (toList!869 lt!69486)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69486))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134383 () Bool)

(assert (=> b!134383 (= e!87536 (containsKey!176 (t!6167 (toList!869 lt!69486)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41305 (not res!64625)) b!134382))

(assert (= (and b!134382 res!64626) b!134383))

(declare-fun m!159549 () Bool)

(assert (=> b!134383 m!159549))

(assert (=> d!40473 d!41305))

(declare-fun d!41307 () Bool)

(declare-fun res!64627 () Bool)

(declare-fun e!87537 () Bool)

(assert (=> d!41307 (=> res!64627 e!87537)))

(assert (=> d!41307 (= res!64627 (and ((_ is Cons!1712) lt!69574) (= (_1!1324 (h!2317 lt!69574)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41307 (= (containsKey!176 lt!69574 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87537)))

(declare-fun b!134384 () Bool)

(declare-fun e!87538 () Bool)

(assert (=> b!134384 (= e!87537 e!87538)))

(declare-fun res!64628 () Bool)

(assert (=> b!134384 (=> (not res!64628) (not e!87538))))

(assert (=> b!134384 (= res!64628 (and (or (not ((_ is Cons!1712) lt!69574)) (bvsle (_1!1324 (h!2317 lt!69574)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1712) lt!69574) (bvslt (_1!1324 (h!2317 lt!69574)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134385 () Bool)

(assert (=> b!134385 (= e!87538 (containsKey!176 (t!6167 lt!69574) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41307 (not res!64627)) b!134384))

(assert (= (and b!134384 res!64628) b!134385))

(declare-fun m!159551 () Bool)

(assert (=> b!134385 m!159551))

(assert (=> b!133115 d!41307))

(assert (=> b!133348 d!40553))

(assert (=> b!133348 d!40227))

(declare-fun lt!70347 () Bool)

(declare-fun d!41309 () Bool)

(assert (=> d!41309 (= lt!70347 (select (content!132 (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun e!87539 () Bool)

(assert (=> d!41309 (= lt!70347 e!87539)))

(declare-fun res!64629 () Bool)

(assert (=> d!41309 (=> (not res!64629) (not e!87539))))

(assert (=> d!41309 (= res!64629 ((_ is Cons!1713) (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))))))

(assert (=> d!41309 (= (contains!901 (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) lt!70347)))

(declare-fun b!134386 () Bool)

(declare-fun e!87540 () Bool)

(assert (=> b!134386 (= e!87539 e!87540)))

(declare-fun res!64630 () Bool)

(assert (=> b!134386 (=> res!64630 e!87540)))

(assert (=> b!134386 (= res!64630 (= (h!2318 (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134387 () Bool)

(assert (=> b!134387 (= e!87540 (contains!901 (t!6168 (ite c!24586 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!41309 res!64629) b!134386))

(assert (= (and b!134386 (not res!64630)) b!134387))

(declare-fun m!159553 () Bool)

(assert (=> d!41309 m!159553))

(assert (=> d!41309 m!157733))

(declare-fun m!159555 () Bool)

(assert (=> d!41309 m!159555))

(assert (=> b!134387 m!157733))

(declare-fun m!159557 () Bool)

(assert (=> b!134387 m!159557))

(assert (=> b!133750 d!41309))

(declare-fun d!41311 () Bool)

(declare-fun res!64631 () Bool)

(declare-fun e!87541 () Bool)

(assert (=> d!41311 (=> res!64631 e!87541)))

(assert (=> d!41311 (= res!64631 (or ((_ is Nil!1713) (t!6167 (toList!869 lt!69022))) ((_ is Nil!1713) (t!6167 (t!6167 (toList!869 lt!69022))))))))

(assert (=> d!41311 (= (isStrictlySorted!322 (t!6167 (toList!869 lt!69022))) e!87541)))

(declare-fun b!134388 () Bool)

(declare-fun e!87542 () Bool)

(assert (=> b!134388 (= e!87541 e!87542)))

(declare-fun res!64632 () Bool)

(assert (=> b!134388 (=> (not res!64632) (not e!87542))))

(assert (=> b!134388 (= res!64632 (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 lt!69022)))) (_1!1324 (h!2317 (t!6167 (t!6167 (toList!869 lt!69022)))))))))

(declare-fun b!134389 () Bool)

(assert (=> b!134389 (= e!87542 (isStrictlySorted!322 (t!6167 (t!6167 (toList!869 lt!69022)))))))

(assert (= (and d!41311 (not res!64631)) b!134388))

(assert (= (and b!134388 res!64632) b!134389))

(declare-fun m!159559 () Bool)

(assert (=> b!134389 m!159559))

(assert (=> b!133787 d!41311))

(declare-fun d!41313 () Bool)

(declare-fun e!87543 () Bool)

(assert (=> d!41313 e!87543))

(declare-fun res!64633 () Bool)

(assert (=> d!41313 (=> res!64633 e!87543)))

(declare-fun lt!70351 () Bool)

(assert (=> d!41313 (= res!64633 (not lt!70351))))

(declare-fun lt!70348 () Bool)

(assert (=> d!41313 (= lt!70351 lt!70348)))

(declare-fun lt!70350 () Unit!4135)

(declare-fun e!87544 () Unit!4135)

(assert (=> d!41313 (= lt!70350 e!87544)))

(declare-fun c!24997 () Bool)

(assert (=> d!41313 (= c!24997 lt!70348)))

(assert (=> d!41313 (= lt!70348 (containsKey!176 (toList!869 lt!69586) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))

(assert (=> d!41313 (= (contains!899 lt!69586 (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))) lt!70351)))

(declare-fun b!134390 () Bool)

(declare-fun lt!70349 () Unit!4135)

(assert (=> b!134390 (= e!87544 lt!70349)))

(assert (=> b!134390 (= lt!70349 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69586) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))

(assert (=> b!134390 (isDefined!125 (getValueByKey!172 (toList!869 lt!69586) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))

(declare-fun b!134391 () Bool)

(declare-fun Unit!4218 () Unit!4135)

(assert (=> b!134391 (= e!87544 Unit!4218)))

(declare-fun b!134392 () Bool)

(assert (=> b!134392 (= e!87543 (isDefined!125 (getValueByKey!172 (toList!869 lt!69586) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))))))

(assert (= (and d!41313 c!24997) b!134390))

(assert (= (and d!41313 (not c!24997)) b!134391))

(assert (= (and d!41313 (not res!64633)) b!134392))

(declare-fun m!159561 () Bool)

(assert (=> d!41313 m!159561))

(declare-fun m!159563 () Bool)

(assert (=> b!134390 m!159563))

(assert (=> b!134390 m!156915))

(assert (=> b!134390 m!156915))

(declare-fun m!159565 () Bool)

(assert (=> b!134390 m!159565))

(assert (=> b!134392 m!156915))

(assert (=> b!134392 m!156915))

(assert (=> b!134392 m!159565))

(assert (=> d!40427 d!41313))

(declare-fun e!87546 () Option!178)

(declare-fun b!134395 () Bool)

(assert (=> b!134395 (= e!87546 (getValueByKey!172 (t!6167 lt!69588) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))

(declare-fun b!134396 () Bool)

(assert (=> b!134396 (= e!87546 None!176)))

(declare-fun c!24998 () Bool)

(declare-fun d!41315 () Bool)

(assert (=> d!41315 (= c!24998 (and ((_ is Cons!1712) lt!69588) (= (_1!1324 (h!2317 lt!69588)) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))))))

(declare-fun e!87545 () Option!178)

(assert (=> d!41315 (= (getValueByKey!172 lt!69588 (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))) e!87545)))

(declare-fun b!134393 () Bool)

(assert (=> b!134393 (= e!87545 (Some!177 (_2!1324 (h!2317 lt!69588))))))

(declare-fun b!134394 () Bool)

(assert (=> b!134394 (= e!87545 e!87546)))

(declare-fun c!24999 () Bool)

(assert (=> b!134394 (= c!24999 (and ((_ is Cons!1712) lt!69588) (not (= (_1!1324 (h!2317 lt!69588)) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41315 c!24998) b!134393))

(assert (= (and d!41315 (not c!24998)) b!134394))

(assert (= (and b!134394 c!24999) b!134395))

(assert (= (and b!134394 (not c!24999)) b!134396))

(declare-fun m!159567 () Bool)

(assert (=> b!134395 m!159567))

(assert (=> d!40427 d!41315))

(declare-fun d!41317 () Bool)

(assert (=> d!41317 (= (getValueByKey!172 lt!69588 (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))

(declare-fun lt!70352 () Unit!4135)

(assert (=> d!41317 (= lt!70352 (choose!827 lt!69588 (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))

(declare-fun e!87547 () Bool)

(assert (=> d!41317 e!87547))

(declare-fun res!64634 () Bool)

(assert (=> d!41317 (=> (not res!64634) (not e!87547))))

(assert (=> d!41317 (= res!64634 (isStrictlySorted!322 lt!69588))))

(assert (=> d!41317 (= (lemmaContainsTupThenGetReturnValue!87 lt!69588 (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))) lt!70352)))

(declare-fun b!134397 () Bool)

(declare-fun res!64635 () Bool)

(assert (=> b!134397 (=> (not res!64635) (not e!87547))))

(assert (=> b!134397 (= res!64635 (containsKey!176 lt!69588 (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))

(declare-fun b!134398 () Bool)

(assert (=> b!134398 (= e!87547 (contains!902 lt!69588 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))))))

(assert (= (and d!41317 res!64634) b!134397))

(assert (= (and b!134397 res!64635) b!134398))

(assert (=> d!41317 m!156909))

(declare-fun m!159569 () Bool)

(assert (=> d!41317 m!159569))

(declare-fun m!159571 () Bool)

(assert (=> d!41317 m!159571))

(declare-fun m!159573 () Bool)

(assert (=> b!134397 m!159573))

(declare-fun m!159575 () Bool)

(assert (=> b!134398 m!159575))

(assert (=> d!40427 d!41317))

(declare-fun bm!14813 () Bool)

(declare-fun call!14817 () List!1716)

(declare-fun call!14818 () List!1716)

(assert (=> bm!14813 (= call!14817 call!14818)))

(declare-fun d!41319 () Bool)

(declare-fun e!87551 () Bool)

(assert (=> d!41319 e!87551))

(declare-fun res!64637 () Bool)

(assert (=> d!41319 (=> (not res!64637) (not e!87551))))

(declare-fun lt!70353 () List!1716)

(assert (=> d!41319 (= res!64637 (isStrictlySorted!322 lt!70353))))

(declare-fun e!87549 () List!1716)

(assert (=> d!41319 (= lt!70353 e!87549)))

(declare-fun c!25003 () Bool)

(assert (=> d!41319 (= c!25003 (and ((_ is Cons!1712) (toList!869 lt!69448)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69448))) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))))))

(assert (=> d!41319 (isStrictlySorted!322 (toList!869 lt!69448))))

(assert (=> d!41319 (= (insertStrictlySorted!90 (toList!869 lt!69448) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))) lt!70353)))

(declare-fun b!134399 () Bool)

(assert (=> b!134399 (= e!87551 (contains!902 lt!70353 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))))))

(declare-fun c!25001 () Bool)

(declare-fun b!134400 () Bool)

(assert (=> b!134400 (= c!25001 (and ((_ is Cons!1712) (toList!869 lt!69448)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69448))) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))))))

(declare-fun e!87550 () List!1716)

(declare-fun e!87552 () List!1716)

(assert (=> b!134400 (= e!87550 e!87552)))

(declare-fun e!87548 () List!1716)

(declare-fun b!134401 () Bool)

(assert (=> b!134401 (= e!87548 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69448)) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))

(declare-fun b!134402 () Bool)

(assert (=> b!134402 (= e!87550 call!14817)))

(declare-fun b!134403 () Bool)

(declare-fun call!14816 () List!1716)

(assert (=> b!134403 (= e!87552 call!14816)))

(declare-fun c!25000 () Bool)

(declare-fun b!134404 () Bool)

(assert (=> b!134404 (= e!87548 (ite c!25000 (t!6167 (toList!869 lt!69448)) (ite c!25001 (Cons!1712 (h!2317 (toList!869 lt!69448)) (t!6167 (toList!869 lt!69448))) Nil!1713)))))

(declare-fun b!134405 () Bool)

(assert (=> b!134405 (= e!87552 call!14816)))

(declare-fun b!134406 () Bool)

(assert (=> b!134406 (= e!87549 call!14818)))

(declare-fun bm!14814 () Bool)

(assert (=> bm!14814 (= call!14818 ($colon$colon!92 e!87548 (ite c!25003 (h!2317 (toList!869 lt!69448)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))))

(declare-fun c!25002 () Bool)

(assert (=> bm!14814 (= c!25002 c!25003)))

(declare-fun bm!14815 () Bool)

(assert (=> bm!14815 (= call!14816 call!14817)))

(declare-fun b!134407 () Bool)

(declare-fun res!64636 () Bool)

(assert (=> b!134407 (=> (not res!64636) (not e!87551))))

(assert (=> b!134407 (= res!64636 (containsKey!176 lt!70353 (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))

(declare-fun b!134408 () Bool)

(assert (=> b!134408 (= e!87549 e!87550)))

(assert (=> b!134408 (= c!25000 (and ((_ is Cons!1712) (toList!869 lt!69448)) (= (_1!1324 (h!2317 (toList!869 lt!69448))) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))))))

(assert (= (and d!41319 c!25003) b!134406))

(assert (= (and d!41319 (not c!25003)) b!134408))

(assert (= (and b!134408 c!25000) b!134402))

(assert (= (and b!134408 (not c!25000)) b!134400))

(assert (= (and b!134400 c!25001) b!134403))

(assert (= (and b!134400 (not c!25001)) b!134405))

(assert (= (or b!134403 b!134405) bm!14815))

(assert (= (or b!134402 bm!14815) bm!14813))

(assert (= (or b!134406 bm!14813) bm!14814))

(assert (= (and bm!14814 c!25002) b!134401))

(assert (= (and bm!14814 (not c!25002)) b!134404))

(assert (= (and d!41319 res!64637) b!134407))

(assert (= (and b!134407 res!64636) b!134399))

(declare-fun m!159577 () Bool)

(assert (=> d!41319 m!159577))

(declare-fun m!159579 () Bool)

(assert (=> d!41319 m!159579))

(declare-fun m!159581 () Bool)

(assert (=> bm!14814 m!159581))

(declare-fun m!159583 () Bool)

(assert (=> b!134401 m!159583))

(declare-fun m!159585 () Bool)

(assert (=> b!134399 m!159585))

(declare-fun m!159587 () Bool)

(assert (=> b!134407 m!159587))

(assert (=> d!40427 d!41319))

(declare-fun e!87554 () Option!178)

(declare-fun b!134411 () Bool)

(assert (=> b!134411 (= e!87554 (getValueByKey!172 (t!6167 (toList!869 lt!69696)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134412 () Bool)

(assert (=> b!134412 (= e!87554 None!176)))

(declare-fun c!25004 () Bool)

(declare-fun d!41321 () Bool)

(assert (=> d!41321 (= c!25004 (and ((_ is Cons!1712) (toList!869 lt!69696)) (= (_1!1324 (h!2317 (toList!869 lt!69696))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87553 () Option!178)

(assert (=> d!41321 (= (getValueByKey!172 (toList!869 lt!69696) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87553)))

(declare-fun b!134409 () Bool)

(assert (=> b!134409 (= e!87553 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69696)))))))

(declare-fun b!134410 () Bool)

(assert (=> b!134410 (= e!87553 e!87554)))

(declare-fun c!25005 () Bool)

(assert (=> b!134410 (= c!25005 (and ((_ is Cons!1712) (toList!869 lt!69696)) (not (= (_1!1324 (h!2317 (toList!869 lt!69696))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!41321 c!25004) b!134409))

(assert (= (and d!41321 (not c!25004)) b!134410))

(assert (= (and b!134410 c!25005) b!134411))

(assert (= (and b!134410 (not c!25005)) b!134412))

(declare-fun m!159589 () Bool)

(assert (=> b!134411 m!159589))

(assert (=> b!133283 d!41321))

(declare-fun d!41323 () Bool)

(declare-fun res!64638 () Bool)

(declare-fun e!87555 () Bool)

(assert (=> d!41323 (=> res!64638 e!87555)))

(assert (=> d!41323 (= res!64638 (and ((_ is Cons!1712) (toList!869 lt!69486)) (= (_1!1324 (h!2317 (toList!869 lt!69486))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41323 (= (containsKey!176 (toList!869 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000) e!87555)))

(declare-fun b!134413 () Bool)

(declare-fun e!87556 () Bool)

(assert (=> b!134413 (= e!87555 e!87556)))

(declare-fun res!64639 () Bool)

(assert (=> b!134413 (=> (not res!64639) (not e!87556))))

(assert (=> b!134413 (= res!64639 (and (or (not ((_ is Cons!1712) (toList!869 lt!69486))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69486))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1712) (toList!869 lt!69486)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69486))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134414 () Bool)

(assert (=> b!134414 (= e!87556 (containsKey!176 (t!6167 (toList!869 lt!69486)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41323 (not res!64638)) b!134413))

(assert (= (and b!134413 res!64639) b!134414))

(declare-fun m!159591 () Bool)

(assert (=> b!134414 m!159591))

(assert (=> d!40635 d!41323))

(declare-fun d!41325 () Bool)

(assert (=> d!41325 (= (apply!116 lt!69761 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)) (get!1486 (getValueByKey!172 (toList!869 lt!69761) (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))))

(declare-fun bs!5593 () Bool)

(assert (= bs!5593 d!41325))

(assert (=> bs!5593 m!157367))

(declare-fun m!159593 () Bool)

(assert (=> bs!5593 m!159593))

(assert (=> bs!5593 m!159593))

(declare-fun m!159595 () Bool)

(assert (=> bs!5593 m!159595))

(assert (=> b!133359 d!41325))

(declare-fun c!25006 () Bool)

(declare-fun d!41327 () Bool)

(assert (=> d!41327 (= c!25006 ((_ is ValueCellFull!1095) (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!87557 () V!3483)

(assert (=> d!41327 (= (get!1482 (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87557)))

(declare-fun b!134415 () Bool)

(assert (=> b!134415 (= e!87557 (get!1484 (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134416 () Bool)

(assert (=> b!134416 (= e!87557 (get!1485 (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41327 c!25006) b!134415))

(assert (= (and d!41327 (not c!25006)) b!134416))

(assert (=> b!134415 m!157399))

(assert (=> b!134415 m!156175))

(declare-fun m!159597 () Bool)

(assert (=> b!134415 m!159597))

(assert (=> b!134416 m!157399))

(assert (=> b!134416 m!156175))

(declare-fun m!159599 () Bool)

(assert (=> b!134416 m!159599))

(assert (=> b!133359 d!41327))

(declare-fun d!41329 () Bool)

(assert (=> d!41329 (= ($colon$colon!92 e!87095 (ite c!24798 (h!2317 (toList!869 lt!69081)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (Cons!1712 (ite c!24798 (h!2317 (toList!869 lt!69081)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) e!87095))))

(assert (=> bm!14758 d!41329))

(assert (=> d!40577 d!40575))

(declare-fun d!41331 () Bool)

(assert (=> d!41331 (= (getValueByKey!172 lt!69444 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!41331 true))

(declare-fun _$22!484 () Unit!4135)

(assert (=> d!41331 (= (choose!827 lt!69444 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) _$22!484)))

(declare-fun bs!5594 () Bool)

(assert (= bs!5594 d!41331))

(assert (=> bs!5594 m!156499))

(assert (=> d!40577 d!41331))

(declare-fun d!41333 () Bool)

(declare-fun res!64640 () Bool)

(declare-fun e!87558 () Bool)

(assert (=> d!41333 (=> res!64640 e!87558)))

(assert (=> d!41333 (= res!64640 (or ((_ is Nil!1713) lt!69444) ((_ is Nil!1713) (t!6167 lt!69444))))))

(assert (=> d!41333 (= (isStrictlySorted!322 lt!69444) e!87558)))

(declare-fun b!134417 () Bool)

(declare-fun e!87559 () Bool)

(assert (=> b!134417 (= e!87558 e!87559)))

(declare-fun res!64641 () Bool)

(assert (=> b!134417 (=> (not res!64641) (not e!87559))))

(assert (=> b!134417 (= res!64641 (bvslt (_1!1324 (h!2317 lt!69444)) (_1!1324 (h!2317 (t!6167 lt!69444)))))))

(declare-fun b!134418 () Bool)

(assert (=> b!134418 (= e!87559 (isStrictlySorted!322 (t!6167 lt!69444)))))

(assert (= (and d!41333 (not res!64640)) b!134417))

(assert (= (and b!134417 res!64641) b!134418))

(declare-fun m!159601 () Bool)

(assert (=> b!134418 m!159601))

(assert (=> d!40577 d!41333))

(declare-fun b!134421 () Bool)

(declare-fun e!87561 () Option!178)

(assert (=> b!134421 (= e!87561 (getValueByKey!172 (t!6167 (t!6167 (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69098))))

(declare-fun b!134422 () Bool)

(assert (=> b!134422 (= e!87561 None!176)))

(declare-fun c!25007 () Bool)

(declare-fun d!41335 () Bool)

(assert (=> d!41335 (= c!25007 (and ((_ is Cons!1712) (t!6167 (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (= (_1!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))) lt!69098)))))

(declare-fun e!87560 () Option!178)

(assert (=> d!41335 (= (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!69098) e!87560)))

(declare-fun b!134419 () Bool)

(assert (=> b!134419 (= e!87560 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))))

(declare-fun b!134420 () Bool)

(assert (=> b!134420 (= e!87560 e!87561)))

(declare-fun c!25008 () Bool)

(assert (=> b!134420 (= c!25008 (and ((_ is Cons!1712) (t!6167 (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69079 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))) lt!69098))))))

(assert (= (and d!41335 c!25007) b!134419))

(assert (= (and d!41335 (not c!25007)) b!134420))

(assert (= (and b!134420 c!25008) b!134421))

(assert (= (and b!134420 (not c!25008)) b!134422))

(declare-fun m!159603 () Bool)

(assert (=> b!134421 m!159603))

(assert (=> b!133194 d!41335))

(declare-fun d!41337 () Bool)

(assert (=> d!41337 (= (apply!116 (+!175 lt!69903 (tuple2!2627 lt!69906 (minValue!2720 (_2!1325 lt!69179)))) lt!69922) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69903 (tuple2!2627 lt!69906 (minValue!2720 (_2!1325 lt!69179))))) lt!69922)))))

(declare-fun bs!5595 () Bool)

(assert (= bs!5595 d!41337))

(declare-fun m!159605 () Bool)

(assert (=> bs!5595 m!159605))

(assert (=> bs!5595 m!159605))

(declare-fun m!159607 () Bool)

(assert (=> bs!5595 m!159607))

(assert (=> b!133613 d!41337))

(declare-fun d!41339 () Bool)

(declare-fun e!87562 () Bool)

(assert (=> d!41339 e!87562))

(declare-fun res!64643 () Bool)

(assert (=> d!41339 (=> (not res!64643) (not e!87562))))

(declare-fun lt!70354 () ListLongMap!1707)

(assert (=> d!41339 (= res!64643 (contains!899 lt!70354 (_1!1324 (tuple2!2627 lt!69920 (minValue!2720 (_2!1325 lt!69179))))))))

(declare-fun lt!70356 () List!1716)

(assert (=> d!41339 (= lt!70354 (ListLongMap!1708 lt!70356))))

(declare-fun lt!70357 () Unit!4135)

(declare-fun lt!70355 () Unit!4135)

(assert (=> d!41339 (= lt!70357 lt!70355)))

(assert (=> d!41339 (= (getValueByKey!172 lt!70356 (_1!1324 (tuple2!2627 lt!69920 (minValue!2720 (_2!1325 lt!69179))))) (Some!177 (_2!1324 (tuple2!2627 lt!69920 (minValue!2720 (_2!1325 lt!69179))))))))

(assert (=> d!41339 (= lt!70355 (lemmaContainsTupThenGetReturnValue!87 lt!70356 (_1!1324 (tuple2!2627 lt!69920 (minValue!2720 (_2!1325 lt!69179)))) (_2!1324 (tuple2!2627 lt!69920 (minValue!2720 (_2!1325 lt!69179))))))))

(assert (=> d!41339 (= lt!70356 (insertStrictlySorted!90 (toList!869 lt!69905) (_1!1324 (tuple2!2627 lt!69920 (minValue!2720 (_2!1325 lt!69179)))) (_2!1324 (tuple2!2627 lt!69920 (minValue!2720 (_2!1325 lt!69179))))))))

(assert (=> d!41339 (= (+!175 lt!69905 (tuple2!2627 lt!69920 (minValue!2720 (_2!1325 lt!69179)))) lt!70354)))

(declare-fun b!134423 () Bool)

(declare-fun res!64642 () Bool)

(assert (=> b!134423 (=> (not res!64642) (not e!87562))))

(assert (=> b!134423 (= res!64642 (= (getValueByKey!172 (toList!869 lt!70354) (_1!1324 (tuple2!2627 lt!69920 (minValue!2720 (_2!1325 lt!69179))))) (Some!177 (_2!1324 (tuple2!2627 lt!69920 (minValue!2720 (_2!1325 lt!69179)))))))))

(declare-fun b!134424 () Bool)

(assert (=> b!134424 (= e!87562 (contains!902 (toList!869 lt!70354) (tuple2!2627 lt!69920 (minValue!2720 (_2!1325 lt!69179)))))))

(assert (= (and d!41339 res!64643) b!134423))

(assert (= (and b!134423 res!64642) b!134424))

(declare-fun m!159609 () Bool)

(assert (=> d!41339 m!159609))

(declare-fun m!159611 () Bool)

(assert (=> d!41339 m!159611))

(declare-fun m!159613 () Bool)

(assert (=> d!41339 m!159613))

(declare-fun m!159615 () Bool)

(assert (=> d!41339 m!159615))

(declare-fun m!159617 () Bool)

(assert (=> b!134423 m!159617))

(declare-fun m!159619 () Bool)

(assert (=> b!134424 m!159619))

(assert (=> b!133613 d!41339))

(declare-fun d!41341 () Bool)

(assert (=> d!41341 (= (apply!116 (+!175 lt!69903 (tuple2!2627 lt!69906 (minValue!2720 (_2!1325 lt!69179)))) lt!69922) (apply!116 lt!69903 lt!69922))))

(declare-fun lt!70358 () Unit!4135)

(assert (=> d!41341 (= lt!70358 (choose!822 lt!69903 lt!69906 (minValue!2720 (_2!1325 lt!69179)) lt!69922))))

(declare-fun e!87563 () Bool)

(assert (=> d!41341 e!87563))

(declare-fun res!64644 () Bool)

(assert (=> d!41341 (=> (not res!64644) (not e!87563))))

(assert (=> d!41341 (= res!64644 (contains!899 lt!69903 lt!69922))))

(assert (=> d!41341 (= (addApplyDifferent!92 lt!69903 lt!69906 (minValue!2720 (_2!1325 lt!69179)) lt!69922) lt!70358)))

(declare-fun b!134425 () Bool)

(assert (=> b!134425 (= e!87563 (not (= lt!69922 lt!69906)))))

(assert (= (and d!41341 res!64644) b!134425))

(declare-fun m!159621 () Bool)

(assert (=> d!41341 m!159621))

(assert (=> d!41341 m!157889))

(assert (=> d!41341 m!157887))

(assert (=> d!41341 m!157889))

(assert (=> d!41341 m!157897))

(declare-fun m!159623 () Bool)

(assert (=> d!41341 m!159623))

(assert (=> b!133613 d!41341))

(declare-fun d!41343 () Bool)

(assert (=> d!41343 (contains!899 (+!175 lt!69917 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179)))) lt!69916)))

(declare-fun lt!70359 () Unit!4135)

(assert (=> d!41343 (= lt!70359 (choose!823 lt!69917 lt!69911 (zeroValue!2720 (_2!1325 lt!69179)) lt!69916))))

(assert (=> d!41343 (contains!899 lt!69917 lt!69916)))

(assert (=> d!41343 (= (addStillContains!92 lt!69917 lt!69911 (zeroValue!2720 (_2!1325 lt!69179)) lt!69916) lt!70359)))

(declare-fun bs!5596 () Bool)

(assert (= bs!5596 d!41343))

(assert (=> bs!5596 m!157879))

(assert (=> bs!5596 m!157879))

(assert (=> bs!5596 m!157903))

(declare-fun m!159625 () Bool)

(assert (=> bs!5596 m!159625))

(declare-fun m!159627 () Bool)

(assert (=> bs!5596 m!159627))

(assert (=> b!133613 d!41343))

(declare-fun d!41345 () Bool)

(assert (=> d!41345 (= (apply!116 lt!69908 lt!69904) (get!1486 (getValueByKey!172 (toList!869 lt!69908) lt!69904)))))

(declare-fun bs!5597 () Bool)

(assert (= bs!5597 d!41345))

(declare-fun m!159629 () Bool)

(assert (=> bs!5597 m!159629))

(assert (=> bs!5597 m!159629))

(declare-fun m!159631 () Bool)

(assert (=> bs!5597 m!159631))

(assert (=> b!133613 d!41345))

(declare-fun d!41347 () Bool)

(assert (=> d!41347 (= (apply!116 (+!175 lt!69908 (tuple2!2627 lt!69910 (zeroValue!2720 (_2!1325 lt!69179)))) lt!69904) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69908 (tuple2!2627 lt!69910 (zeroValue!2720 (_2!1325 lt!69179))))) lt!69904)))))

(declare-fun bs!5598 () Bool)

(assert (= bs!5598 d!41347))

(declare-fun m!159633 () Bool)

(assert (=> bs!5598 m!159633))

(assert (=> bs!5598 m!159633))

(declare-fun m!159635 () Bool)

(assert (=> bs!5598 m!159635))

(assert (=> b!133613 d!41347))

(declare-fun d!41349 () Bool)

(assert (=> d!41349 (= (apply!116 (+!175 lt!69905 (tuple2!2627 lt!69920 (minValue!2720 (_2!1325 lt!69179)))) lt!69918) (apply!116 lt!69905 lt!69918))))

(declare-fun lt!70360 () Unit!4135)

(assert (=> d!41349 (= lt!70360 (choose!822 lt!69905 lt!69920 (minValue!2720 (_2!1325 lt!69179)) lt!69918))))

(declare-fun e!87564 () Bool)

(assert (=> d!41349 e!87564))

(declare-fun res!64645 () Bool)

(assert (=> d!41349 (=> (not res!64645) (not e!87564))))

(assert (=> d!41349 (= res!64645 (contains!899 lt!69905 lt!69918))))

(assert (=> d!41349 (= (addApplyDifferent!92 lt!69905 lt!69920 (minValue!2720 (_2!1325 lt!69179)) lt!69918) lt!70360)))

(declare-fun b!134426 () Bool)

(assert (=> b!134426 (= e!87564 (not (= lt!69918 lt!69920)))))

(assert (= (and d!41349 res!64645) b!134426))

(declare-fun m!159637 () Bool)

(assert (=> d!41349 m!159637))

(assert (=> d!41349 m!157877))

(assert (=> d!41349 m!157893))

(assert (=> d!41349 m!157877))

(assert (=> d!41349 m!157895))

(declare-fun m!159639 () Bool)

(assert (=> d!41349 m!159639))

(assert (=> b!133613 d!41349))

(assert (=> b!133613 d!41037))

(declare-fun d!41351 () Bool)

(declare-fun e!87565 () Bool)

(assert (=> d!41351 e!87565))

(declare-fun res!64647 () Bool)

(assert (=> d!41351 (=> (not res!64647) (not e!87565))))

(declare-fun lt!70361 () ListLongMap!1707)

(assert (=> d!41351 (= res!64647 (contains!899 lt!70361 (_1!1324 (tuple2!2627 lt!69906 (minValue!2720 (_2!1325 lt!69179))))))))

(declare-fun lt!70363 () List!1716)

(assert (=> d!41351 (= lt!70361 (ListLongMap!1708 lt!70363))))

(declare-fun lt!70364 () Unit!4135)

(declare-fun lt!70362 () Unit!4135)

(assert (=> d!41351 (= lt!70364 lt!70362)))

(assert (=> d!41351 (= (getValueByKey!172 lt!70363 (_1!1324 (tuple2!2627 lt!69906 (minValue!2720 (_2!1325 lt!69179))))) (Some!177 (_2!1324 (tuple2!2627 lt!69906 (minValue!2720 (_2!1325 lt!69179))))))))

(assert (=> d!41351 (= lt!70362 (lemmaContainsTupThenGetReturnValue!87 lt!70363 (_1!1324 (tuple2!2627 lt!69906 (minValue!2720 (_2!1325 lt!69179)))) (_2!1324 (tuple2!2627 lt!69906 (minValue!2720 (_2!1325 lt!69179))))))))

(assert (=> d!41351 (= lt!70363 (insertStrictlySorted!90 (toList!869 lt!69903) (_1!1324 (tuple2!2627 lt!69906 (minValue!2720 (_2!1325 lt!69179)))) (_2!1324 (tuple2!2627 lt!69906 (minValue!2720 (_2!1325 lt!69179))))))))

(assert (=> d!41351 (= (+!175 lt!69903 (tuple2!2627 lt!69906 (minValue!2720 (_2!1325 lt!69179)))) lt!70361)))

(declare-fun b!134427 () Bool)

(declare-fun res!64646 () Bool)

(assert (=> b!134427 (=> (not res!64646) (not e!87565))))

(assert (=> b!134427 (= res!64646 (= (getValueByKey!172 (toList!869 lt!70361) (_1!1324 (tuple2!2627 lt!69906 (minValue!2720 (_2!1325 lt!69179))))) (Some!177 (_2!1324 (tuple2!2627 lt!69906 (minValue!2720 (_2!1325 lt!69179)))))))))

(declare-fun b!134428 () Bool)

(assert (=> b!134428 (= e!87565 (contains!902 (toList!869 lt!70361) (tuple2!2627 lt!69906 (minValue!2720 (_2!1325 lt!69179)))))))

(assert (= (and d!41351 res!64647) b!134427))

(assert (= (and b!134427 res!64646) b!134428))

(declare-fun m!159641 () Bool)

(assert (=> d!41351 m!159641))

(declare-fun m!159643 () Bool)

(assert (=> d!41351 m!159643))

(declare-fun m!159645 () Bool)

(assert (=> d!41351 m!159645))

(declare-fun m!159647 () Bool)

(assert (=> d!41351 m!159647))

(declare-fun m!159649 () Bool)

(assert (=> b!134427 m!159649))

(declare-fun m!159651 () Bool)

(assert (=> b!134428 m!159651))

(assert (=> b!133613 d!41351))

(declare-fun d!41353 () Bool)

(declare-fun e!87566 () Bool)

(assert (=> d!41353 e!87566))

(declare-fun res!64649 () Bool)

(assert (=> d!41353 (=> (not res!64649) (not e!87566))))

(declare-fun lt!70365 () ListLongMap!1707)

(assert (=> d!41353 (= res!64649 (contains!899 lt!70365 (_1!1324 (tuple2!2627 lt!69910 (zeroValue!2720 (_2!1325 lt!69179))))))))

(declare-fun lt!70367 () List!1716)

(assert (=> d!41353 (= lt!70365 (ListLongMap!1708 lt!70367))))

(declare-fun lt!70368 () Unit!4135)

(declare-fun lt!70366 () Unit!4135)

(assert (=> d!41353 (= lt!70368 lt!70366)))

(assert (=> d!41353 (= (getValueByKey!172 lt!70367 (_1!1324 (tuple2!2627 lt!69910 (zeroValue!2720 (_2!1325 lt!69179))))) (Some!177 (_2!1324 (tuple2!2627 lt!69910 (zeroValue!2720 (_2!1325 lt!69179))))))))

(assert (=> d!41353 (= lt!70366 (lemmaContainsTupThenGetReturnValue!87 lt!70367 (_1!1324 (tuple2!2627 lt!69910 (zeroValue!2720 (_2!1325 lt!69179)))) (_2!1324 (tuple2!2627 lt!69910 (zeroValue!2720 (_2!1325 lt!69179))))))))

(assert (=> d!41353 (= lt!70367 (insertStrictlySorted!90 (toList!869 lt!69908) (_1!1324 (tuple2!2627 lt!69910 (zeroValue!2720 (_2!1325 lt!69179)))) (_2!1324 (tuple2!2627 lt!69910 (zeroValue!2720 (_2!1325 lt!69179))))))))

(assert (=> d!41353 (= (+!175 lt!69908 (tuple2!2627 lt!69910 (zeroValue!2720 (_2!1325 lt!69179)))) lt!70365)))

(declare-fun b!134429 () Bool)

(declare-fun res!64648 () Bool)

(assert (=> b!134429 (=> (not res!64648) (not e!87566))))

(assert (=> b!134429 (= res!64648 (= (getValueByKey!172 (toList!869 lt!70365) (_1!1324 (tuple2!2627 lt!69910 (zeroValue!2720 (_2!1325 lt!69179))))) (Some!177 (_2!1324 (tuple2!2627 lt!69910 (zeroValue!2720 (_2!1325 lt!69179)))))))))

(declare-fun b!134430 () Bool)

(assert (=> b!134430 (= e!87566 (contains!902 (toList!869 lt!70365) (tuple2!2627 lt!69910 (zeroValue!2720 (_2!1325 lt!69179)))))))

(assert (= (and d!41353 res!64649) b!134429))

(assert (= (and b!134429 res!64648) b!134430))

(declare-fun m!159653 () Bool)

(assert (=> d!41353 m!159653))

(declare-fun m!159655 () Bool)

(assert (=> d!41353 m!159655))

(declare-fun m!159657 () Bool)

(assert (=> d!41353 m!159657))

(declare-fun m!159659 () Bool)

(assert (=> d!41353 m!159659))

(declare-fun m!159661 () Bool)

(assert (=> b!134429 m!159661))

(declare-fun m!159663 () Bool)

(assert (=> b!134430 m!159663))

(assert (=> b!133613 d!41353))

(declare-fun d!41355 () Bool)

(assert (=> d!41355 (= (apply!116 (+!175 lt!69905 (tuple2!2627 lt!69920 (minValue!2720 (_2!1325 lt!69179)))) lt!69918) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69905 (tuple2!2627 lt!69920 (minValue!2720 (_2!1325 lt!69179))))) lt!69918)))))

(declare-fun bs!5599 () Bool)

(assert (= bs!5599 d!41355))

(declare-fun m!159665 () Bool)

(assert (=> bs!5599 m!159665))

(assert (=> bs!5599 m!159665))

(declare-fun m!159667 () Bool)

(assert (=> bs!5599 m!159667))

(assert (=> b!133613 d!41355))

(declare-fun d!41357 () Bool)

(declare-fun e!87567 () Bool)

(assert (=> d!41357 e!87567))

(declare-fun res!64651 () Bool)

(assert (=> d!41357 (=> (not res!64651) (not e!87567))))

(declare-fun lt!70369 () ListLongMap!1707)

(assert (=> d!41357 (= res!64651 (contains!899 lt!70369 (_1!1324 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179))))))))

(declare-fun lt!70371 () List!1716)

(assert (=> d!41357 (= lt!70369 (ListLongMap!1708 lt!70371))))

(declare-fun lt!70372 () Unit!4135)

(declare-fun lt!70370 () Unit!4135)

(assert (=> d!41357 (= lt!70372 lt!70370)))

(assert (=> d!41357 (= (getValueByKey!172 lt!70371 (_1!1324 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179))))) (Some!177 (_2!1324 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179))))))))

(assert (=> d!41357 (= lt!70370 (lemmaContainsTupThenGetReturnValue!87 lt!70371 (_1!1324 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179)))) (_2!1324 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179))))))))

(assert (=> d!41357 (= lt!70371 (insertStrictlySorted!90 (toList!869 lt!69917) (_1!1324 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179)))) (_2!1324 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179))))))))

(assert (=> d!41357 (= (+!175 lt!69917 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179)))) lt!70369)))

(declare-fun b!134431 () Bool)

(declare-fun res!64650 () Bool)

(assert (=> b!134431 (=> (not res!64650) (not e!87567))))

(assert (=> b!134431 (= res!64650 (= (getValueByKey!172 (toList!869 lt!70369) (_1!1324 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179))))) (Some!177 (_2!1324 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179)))))))))

(declare-fun b!134432 () Bool)

(assert (=> b!134432 (= e!87567 (contains!902 (toList!869 lt!70369) (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179)))))))

(assert (= (and d!41357 res!64651) b!134431))

(assert (= (and b!134431 res!64650) b!134432))

(declare-fun m!159669 () Bool)

(assert (=> d!41357 m!159669))

(declare-fun m!159671 () Bool)

(assert (=> d!41357 m!159671))

(declare-fun m!159673 () Bool)

(assert (=> d!41357 m!159673))

(declare-fun m!159675 () Bool)

(assert (=> d!41357 m!159675))

(declare-fun m!159677 () Bool)

(assert (=> b!134431 m!159677))

(declare-fun m!159679 () Bool)

(assert (=> b!134432 m!159679))

(assert (=> b!133613 d!41357))

(declare-fun d!41359 () Bool)

(assert (=> d!41359 (= (apply!116 (+!175 lt!69908 (tuple2!2627 lt!69910 (zeroValue!2720 (_2!1325 lt!69179)))) lt!69904) (apply!116 lt!69908 lt!69904))))

(declare-fun lt!70373 () Unit!4135)

(assert (=> d!41359 (= lt!70373 (choose!822 lt!69908 lt!69910 (zeroValue!2720 (_2!1325 lt!69179)) lt!69904))))

(declare-fun e!87568 () Bool)

(assert (=> d!41359 e!87568))

(declare-fun res!64652 () Bool)

(assert (=> d!41359 (=> (not res!64652) (not e!87568))))

(assert (=> d!41359 (= res!64652 (contains!899 lt!69908 lt!69904))))

(assert (=> d!41359 (= (addApplyDifferent!92 lt!69908 lt!69910 (zeroValue!2720 (_2!1325 lt!69179)) lt!69904) lt!70373)))

(declare-fun b!134433 () Bool)

(assert (=> b!134433 (= e!87568 (not (= lt!69904 lt!69910)))))

(assert (= (and d!41359 res!64652) b!134433))

(declare-fun m!159681 () Bool)

(assert (=> d!41359 m!159681))

(assert (=> d!41359 m!157881))

(assert (=> d!41359 m!157901))

(assert (=> d!41359 m!157881))

(assert (=> d!41359 m!157883))

(declare-fun m!159683 () Bool)

(assert (=> d!41359 m!159683))

(assert (=> b!133613 d!41359))

(declare-fun d!41361 () Bool)

(assert (=> d!41361 (= (apply!116 lt!69903 lt!69922) (get!1486 (getValueByKey!172 (toList!869 lt!69903) lt!69922)))))

(declare-fun bs!5600 () Bool)

(assert (= bs!5600 d!41361))

(declare-fun m!159685 () Bool)

(assert (=> bs!5600 m!159685))

(assert (=> bs!5600 m!159685))

(declare-fun m!159687 () Bool)

(assert (=> bs!5600 m!159687))

(assert (=> b!133613 d!41361))

(declare-fun d!41363 () Bool)

(assert (=> d!41363 (= (apply!116 lt!69905 lt!69918) (get!1486 (getValueByKey!172 (toList!869 lt!69905) lt!69918)))))

(declare-fun bs!5601 () Bool)

(assert (= bs!5601 d!41363))

(declare-fun m!159689 () Bool)

(assert (=> bs!5601 m!159689))

(assert (=> bs!5601 m!159689))

(declare-fun m!159691 () Bool)

(assert (=> bs!5601 m!159691))

(assert (=> b!133613 d!41363))

(declare-fun d!41365 () Bool)

(declare-fun e!87569 () Bool)

(assert (=> d!41365 e!87569))

(declare-fun res!64653 () Bool)

(assert (=> d!41365 (=> res!64653 e!87569)))

(declare-fun lt!70377 () Bool)

(assert (=> d!41365 (= res!64653 (not lt!70377))))

(declare-fun lt!70374 () Bool)

(assert (=> d!41365 (= lt!70377 lt!70374)))

(declare-fun lt!70376 () Unit!4135)

(declare-fun e!87570 () Unit!4135)

(assert (=> d!41365 (= lt!70376 e!87570)))

(declare-fun c!25009 () Bool)

(assert (=> d!41365 (= c!25009 lt!70374)))

(assert (=> d!41365 (= lt!70374 (containsKey!176 (toList!869 (+!175 lt!69917 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179))))) lt!69916))))

(assert (=> d!41365 (= (contains!899 (+!175 lt!69917 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179)))) lt!69916) lt!70377)))

(declare-fun b!134434 () Bool)

(declare-fun lt!70375 () Unit!4135)

(assert (=> b!134434 (= e!87570 lt!70375)))

(assert (=> b!134434 (= lt!70375 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69917 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179))))) lt!69916))))

(assert (=> b!134434 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69917 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179))))) lt!69916))))

(declare-fun b!134435 () Bool)

(declare-fun Unit!4219 () Unit!4135)

(assert (=> b!134435 (= e!87570 Unit!4219)))

(declare-fun b!134436 () Bool)

(assert (=> b!134436 (= e!87569 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69917 (tuple2!2627 lt!69911 (zeroValue!2720 (_2!1325 lt!69179))))) lt!69916)))))

(assert (= (and d!41365 c!25009) b!134434))

(assert (= (and d!41365 (not c!25009)) b!134435))

(assert (= (and d!41365 (not res!64653)) b!134436))

(declare-fun m!159693 () Bool)

(assert (=> d!41365 m!159693))

(declare-fun m!159695 () Bool)

(assert (=> b!134434 m!159695))

(declare-fun m!159697 () Bool)

(assert (=> b!134434 m!159697))

(assert (=> b!134434 m!159697))

(declare-fun m!159699 () Bool)

(assert (=> b!134434 m!159699))

(assert (=> b!134436 m!159697))

(assert (=> b!134436 m!159697))

(assert (=> b!134436 m!159699))

(assert (=> b!133613 d!41365))

(declare-fun d!41367 () Bool)

(assert (=> d!41367 (= (get!1486 (getValueByKey!172 (toList!869 lt!69472) lt!69485)) (v!3203 (getValueByKey!172 (toList!869 lt!69472) lt!69485)))))

(assert (=> d!40507 d!41367))

(declare-fun b!134439 () Bool)

(declare-fun e!87572 () Option!178)

(assert (=> b!134439 (= e!87572 (getValueByKey!172 (t!6167 (toList!869 lt!69472)) lt!69485))))

(declare-fun b!134440 () Bool)

(assert (=> b!134440 (= e!87572 None!176)))

(declare-fun d!41369 () Bool)

(declare-fun c!25010 () Bool)

(assert (=> d!41369 (= c!25010 (and ((_ is Cons!1712) (toList!869 lt!69472)) (= (_1!1324 (h!2317 (toList!869 lt!69472))) lt!69485)))))

(declare-fun e!87571 () Option!178)

(assert (=> d!41369 (= (getValueByKey!172 (toList!869 lt!69472) lt!69485) e!87571)))

(declare-fun b!134437 () Bool)

(assert (=> b!134437 (= e!87571 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69472)))))))

(declare-fun b!134438 () Bool)

(assert (=> b!134438 (= e!87571 e!87572)))

(declare-fun c!25011 () Bool)

(assert (=> b!134438 (= c!25011 (and ((_ is Cons!1712) (toList!869 lt!69472)) (not (= (_1!1324 (h!2317 (toList!869 lt!69472))) lt!69485))))))

(assert (= (and d!41369 c!25010) b!134437))

(assert (= (and d!41369 (not c!25010)) b!134438))

(assert (= (and b!134438 c!25011) b!134439))

(assert (= (and b!134438 (not c!25011)) b!134440))

(declare-fun m!159701 () Bool)

(assert (=> b!134439 m!159701))

(assert (=> d!40507 d!41369))

(declare-fun d!41371 () Bool)

(assert (=> d!41371 (= (get!1486 (getValueByKey!172 (toList!869 lt!69262) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!172 (toList!869 lt!69262) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40817 d!41371))

(declare-fun b!134443 () Bool)

(declare-fun e!87574 () Option!178)

(assert (=> b!134443 (= e!87574 (getValueByKey!172 (t!6167 (toList!869 lt!69262)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134444 () Bool)

(assert (=> b!134444 (= e!87574 None!176)))

(declare-fun d!41373 () Bool)

(declare-fun c!25012 () Bool)

(assert (=> d!41373 (= c!25012 (and ((_ is Cons!1712) (toList!869 lt!69262)) (= (_1!1324 (h!2317 (toList!869 lt!69262))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87573 () Option!178)

(assert (=> d!41373 (= (getValueByKey!172 (toList!869 lt!69262) #b0000000000000000000000000000000000000000000000000000000000000000) e!87573)))

(declare-fun b!134441 () Bool)

(assert (=> b!134441 (= e!87573 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69262)))))))

(declare-fun b!134442 () Bool)

(assert (=> b!134442 (= e!87573 e!87574)))

(declare-fun c!25013 () Bool)

(assert (=> b!134442 (= c!25013 (and ((_ is Cons!1712) (toList!869 lt!69262)) (not (= (_1!1324 (h!2317 (toList!869 lt!69262))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!41373 c!25012) b!134441))

(assert (= (and d!41373 (not c!25012)) b!134442))

(assert (= (and b!134442 c!25013) b!134443))

(assert (= (and b!134442 (not c!25013)) b!134444))

(declare-fun m!159703 () Bool)

(assert (=> b!134443 m!159703))

(assert (=> d!40817 d!41373))

(declare-fun d!41375 () Bool)

(declare-fun e!87575 () Bool)

(assert (=> d!41375 e!87575))

(declare-fun res!64654 () Bool)

(assert (=> d!41375 (=> res!64654 e!87575)))

(declare-fun lt!70381 () Bool)

(assert (=> d!41375 (= res!64654 (not lt!70381))))

(declare-fun lt!70378 () Bool)

(assert (=> d!41375 (= lt!70381 lt!70378)))

(declare-fun lt!70380 () Unit!4135)

(declare-fun e!87576 () Unit!4135)

(assert (=> d!41375 (= lt!70380 e!87576)))

(declare-fun c!25014 () Bool)

(assert (=> d!41375 (= c!25014 lt!70378)))

(assert (=> d!41375 (= lt!70378 (containsKey!176 (toList!869 lt!69943) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41375 (= (contains!899 lt!69943 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70381)))

(declare-fun b!134445 () Bool)

(declare-fun lt!70379 () Unit!4135)

(assert (=> b!134445 (= e!87576 lt!70379)))

(assert (=> b!134445 (= lt!70379 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69943) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!134445 (isDefined!125 (getValueByKey!172 (toList!869 lt!69943) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134446 () Bool)

(declare-fun Unit!4220 () Unit!4135)

(assert (=> b!134446 (= e!87576 Unit!4220)))

(declare-fun b!134447 () Bool)

(assert (=> b!134447 (= e!87575 (isDefined!125 (getValueByKey!172 (toList!869 lt!69943) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41375 c!25014) b!134445))

(assert (= (and d!41375 (not c!25014)) b!134446))

(assert (= (and d!41375 (not res!64654)) b!134447))

(declare-fun m!159705 () Bool)

(assert (=> d!41375 m!159705))

(declare-fun m!159707 () Bool)

(assert (=> b!134445 m!159707))

(assert (=> b!134445 m!158009))

(assert (=> b!134445 m!158009))

(declare-fun m!159709 () Bool)

(assert (=> b!134445 m!159709))

(assert (=> b!134447 m!158009))

(assert (=> b!134447 m!158009))

(assert (=> b!134447 m!159709))

(assert (=> d!40729 d!41375))

(declare-fun e!87578 () Option!178)

(declare-fun b!134450 () Bool)

(assert (=> b!134450 (= e!87578 (getValueByKey!172 (t!6167 lt!69945) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134451 () Bool)

(assert (=> b!134451 (= e!87578 None!176)))

(declare-fun c!25015 () Bool)

(declare-fun d!41377 () Bool)

(assert (=> d!41377 (= c!25015 (and ((_ is Cons!1712) lt!69945) (= (_1!1324 (h!2317 lt!69945)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87577 () Option!178)

(assert (=> d!41377 (= (getValueByKey!172 lt!69945 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87577)))

(declare-fun b!134448 () Bool)

(assert (=> b!134448 (= e!87577 (Some!177 (_2!1324 (h!2317 lt!69945))))))

(declare-fun b!134449 () Bool)

(assert (=> b!134449 (= e!87577 e!87578)))

(declare-fun c!25016 () Bool)

(assert (=> b!134449 (= c!25016 (and ((_ is Cons!1712) lt!69945) (not (= (_1!1324 (h!2317 lt!69945)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!41377 c!25015) b!134448))

(assert (= (and d!41377 (not c!25015)) b!134449))

(assert (= (and b!134449 c!25016) b!134450))

(assert (= (and b!134449 (not c!25016)) b!134451))

(declare-fun m!159711 () Bool)

(assert (=> b!134450 m!159711))

(assert (=> d!40729 d!41377))

(declare-fun d!41379 () Bool)

(assert (=> d!41379 (= (getValueByKey!172 lt!69945 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70382 () Unit!4135)

(assert (=> d!41379 (= lt!70382 (choose!827 lt!69945 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87579 () Bool)

(assert (=> d!41379 e!87579))

(declare-fun res!64655 () Bool)

(assert (=> d!41379 (=> (not res!64655) (not e!87579))))

(assert (=> d!41379 (= res!64655 (isStrictlySorted!322 lt!69945))))

(assert (=> d!41379 (= (lemmaContainsTupThenGetReturnValue!87 lt!69945 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70382)))

(declare-fun b!134452 () Bool)

(declare-fun res!64656 () Bool)

(assert (=> b!134452 (=> (not res!64656) (not e!87579))))

(assert (=> b!134452 (= res!64656 (containsKey!176 lt!69945 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134453 () Bool)

(assert (=> b!134453 (= e!87579 (contains!902 lt!69945 (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41379 res!64655) b!134452))

(assert (= (and b!134452 res!64656) b!134453))

(assert (=> d!41379 m!158003))

(declare-fun m!159713 () Bool)

(assert (=> d!41379 m!159713))

(declare-fun m!159715 () Bool)

(assert (=> d!41379 m!159715))

(declare-fun m!159717 () Bool)

(assert (=> b!134452 m!159717))

(declare-fun m!159719 () Bool)

(assert (=> b!134453 m!159719))

(assert (=> d!40729 d!41379))

(declare-fun bm!14816 () Bool)

(declare-fun call!14820 () List!1716)

(declare-fun call!14821 () List!1716)

(assert (=> bm!14816 (= call!14820 call!14821)))

(declare-fun d!41381 () Bool)

(declare-fun e!87583 () Bool)

(assert (=> d!41381 e!87583))

(declare-fun res!64658 () Bool)

(assert (=> d!41381 (=> (not res!64658) (not e!87583))))

(declare-fun lt!70383 () List!1716)

(assert (=> d!41381 (= res!64658 (isStrictlySorted!322 lt!70383))))

(declare-fun e!87581 () List!1716)

(assert (=> d!41381 (= lt!70383 e!87581)))

(declare-fun c!25020 () Bool)

(assert (=> d!41381 (= c!25020 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvslt (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41381 (isStrictlySorted!322 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))))

(assert (=> d!41381 (= (insertStrictlySorted!90 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70383)))

(declare-fun b!134454 () Bool)

(assert (=> b!134454 (= e!87583 (contains!902 lt!70383 (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun c!25018 () Bool)

(declare-fun b!134455 () Bool)

(assert (=> b!134455 (= c!25018 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvsgt (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87582 () List!1716)

(declare-fun e!87584 () List!1716)

(assert (=> b!134455 (= e!87582 e!87584)))

(declare-fun e!87580 () List!1716)

(declare-fun b!134456 () Bool)

(assert (=> b!134456 (= e!87580 (insertStrictlySorted!90 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134457 () Bool)

(assert (=> b!134457 (= e!87582 call!14820)))

(declare-fun b!134458 () Bool)

(declare-fun call!14819 () List!1716)

(assert (=> b!134458 (= e!87584 call!14819)))

(declare-fun c!25017 () Bool)

(declare-fun b!134459 () Bool)

(assert (=> b!134459 (= e!87580 (ite c!25017 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (ite c!25018 (Cons!1712 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) Nil!1713)))))

(declare-fun b!134460 () Bool)

(assert (=> b!134460 (= e!87584 call!14819)))

(declare-fun b!134461 () Bool)

(assert (=> b!134461 (= e!87581 call!14821)))

(declare-fun bm!14817 () Bool)

(assert (=> bm!14817 (= call!14821 ($colon$colon!92 e!87580 (ite c!25020 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25019 () Bool)

(assert (=> bm!14817 (= c!25019 c!25020)))

(declare-fun bm!14818 () Bool)

(assert (=> bm!14818 (= call!14819 call!14820)))

(declare-fun b!134462 () Bool)

(declare-fun res!64657 () Bool)

(assert (=> b!134462 (=> (not res!64657) (not e!87583))))

(assert (=> b!134462 (= res!64657 (containsKey!176 lt!70383 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134463 () Bool)

(assert (=> b!134463 (= e!87581 e!87582)))

(assert (=> b!134463 (= c!25017 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41381 c!25020) b!134461))

(assert (= (and d!41381 (not c!25020)) b!134463))

(assert (= (and b!134463 c!25017) b!134457))

(assert (= (and b!134463 (not c!25017)) b!134455))

(assert (= (and b!134455 c!25018) b!134458))

(assert (= (and b!134455 (not c!25018)) b!134460))

(assert (= (or b!134458 b!134460) bm!14818))

(assert (= (or b!134457 bm!14818) bm!14816))

(assert (= (or b!134461 bm!14816) bm!14817))

(assert (= (and bm!14817 c!25019) b!134456))

(assert (= (and bm!14817 (not c!25019)) b!134459))

(assert (= (and d!41381 res!64658) b!134462))

(assert (= (and b!134462 res!64657) b!134454))

(declare-fun m!159721 () Bool)

(assert (=> d!41381 m!159721))

(assert (=> d!41381 m!158257))

(declare-fun m!159723 () Bool)

(assert (=> bm!14817 m!159723))

(declare-fun m!159725 () Bool)

(assert (=> b!134456 m!159725))

(declare-fun m!159727 () Bool)

(assert (=> b!134454 m!159727))

(declare-fun m!159729 () Bool)

(assert (=> b!134462 m!159729))

(assert (=> d!40729 d!41381))

(declare-fun b!134466 () Bool)

(declare-fun e!87586 () Option!178)

(assert (=> b!134466 (= e!87586 (getValueByKey!172 (t!6167 (toList!869 lt!69642)) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134467 () Bool)

(assert (=> b!134467 (= e!87586 None!176)))

(declare-fun d!41383 () Bool)

(declare-fun c!25021 () Bool)

(assert (=> d!41383 (= c!25021 (and ((_ is Cons!1712) (toList!869 lt!69642)) (= (_1!1324 (h!2317 (toList!869 lt!69642))) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun e!87585 () Option!178)

(assert (=> d!41383 (= (getValueByKey!172 (toList!869 lt!69642) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) e!87585)))

(declare-fun b!134464 () Bool)

(assert (=> b!134464 (= e!87585 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69642)))))))

(declare-fun b!134465 () Bool)

(assert (=> b!134465 (= e!87585 e!87586)))

(declare-fun c!25022 () Bool)

(assert (=> b!134465 (= c!25022 (and ((_ is Cons!1712) (toList!869 lt!69642)) (not (= (_1!1324 (h!2317 (toList!869 lt!69642))) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (= (and d!41383 c!25021) b!134464))

(assert (= (and d!41383 (not c!25021)) b!134465))

(assert (= (and b!134465 c!25022) b!134466))

(assert (= (and b!134465 (not c!25022)) b!134467))

(declare-fun m!159731 () Bool)

(assert (=> b!134466 m!159731))

(assert (=> b!133230 d!41383))

(declare-fun d!41385 () Bool)

(declare-fun res!64659 () Bool)

(declare-fun e!87587 () Bool)

(assert (=> d!41385 (=> res!64659 e!87587)))

(assert (=> d!41385 (= res!64659 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69095))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41385 (= (containsKey!176 (t!6167 (toList!869 lt!69095)) #b1000000000000000000000000000000000000000000000000000000000000000) e!87587)))

(declare-fun b!134468 () Bool)

(declare-fun e!87588 () Bool)

(assert (=> b!134468 (= e!87587 e!87588)))

(declare-fun res!64660 () Bool)

(assert (=> b!134468 (=> (not res!64660) (not e!87588))))

(assert (=> b!134468 (= res!64660 (and (or (not ((_ is Cons!1712) (t!6167 (toList!869 lt!69095)))) (bvsle (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095)))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1712) (t!6167 (toList!869 lt!69095))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134469 () Bool)

(assert (=> b!134469 (= e!87588 (containsKey!176 (t!6167 (t!6167 (toList!869 lt!69095))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41385 (not res!64659)) b!134468))

(assert (= (and b!134468 res!64660) b!134469))

(declare-fun m!159733 () Bool)

(assert (=> b!134469 m!159733))

(assert (=> b!133821 d!41385))

(assert (=> b!133669 d!40753))

(declare-fun d!41387 () Bool)

(declare-fun lt!70384 () Bool)

(assert (=> d!41387 (= lt!70384 (select (content!133 (toList!869 lt!69532)) (tuple2!2627 lt!69406 lt!69403)))))

(declare-fun e!87590 () Bool)

(assert (=> d!41387 (= lt!70384 e!87590)))

(declare-fun res!64661 () Bool)

(assert (=> d!41387 (=> (not res!64661) (not e!87590))))

(assert (=> d!41387 (= res!64661 ((_ is Cons!1712) (toList!869 lt!69532)))))

(assert (=> d!41387 (= (contains!902 (toList!869 lt!69532) (tuple2!2627 lt!69406 lt!69403)) lt!70384)))

(declare-fun b!134470 () Bool)

(declare-fun e!87589 () Bool)

(assert (=> b!134470 (= e!87590 e!87589)))

(declare-fun res!64662 () Bool)

(assert (=> b!134470 (=> res!64662 e!87589)))

(assert (=> b!134470 (= res!64662 (= (h!2317 (toList!869 lt!69532)) (tuple2!2627 lt!69406 lt!69403)))))

(declare-fun b!134471 () Bool)

(assert (=> b!134471 (= e!87589 (contains!902 (t!6167 (toList!869 lt!69532)) (tuple2!2627 lt!69406 lt!69403)))))

(assert (= (and d!41387 res!64661) b!134470))

(assert (= (and b!134470 (not res!64662)) b!134471))

(declare-fun m!159735 () Bool)

(assert (=> d!41387 m!159735))

(declare-fun m!159737 () Bool)

(assert (=> d!41387 m!159737))

(declare-fun m!159739 () Bool)

(assert (=> b!134471 m!159739))

(assert (=> b!133007 d!41387))

(declare-fun d!41389 () Bool)

(assert (=> d!41389 (= (get!1486 (getValueByKey!172 (toList!869 lt!69486) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) (v!3203 (getValueByKey!172 (toList!869 lt!69486) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!40739 d!41389))

(declare-fun b!134474 () Bool)

(declare-fun e!87592 () Option!178)

(assert (=> b!134474 (= e!87592 (getValueByKey!172 (t!6167 (toList!869 lt!69486)) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134475 () Bool)

(assert (=> b!134475 (= e!87592 None!176)))

(declare-fun d!41391 () Bool)

(declare-fun c!25023 () Bool)

(assert (=> d!41391 (= c!25023 (and ((_ is Cons!1712) (toList!869 lt!69486)) (= (_1!1324 (h!2317 (toList!869 lt!69486))) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun e!87591 () Option!178)

(assert (=> d!41391 (= (getValueByKey!172 (toList!869 lt!69486) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) e!87591)))

(declare-fun b!134472 () Bool)

(assert (=> b!134472 (= e!87591 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69486)))))))

(declare-fun b!134473 () Bool)

(assert (=> b!134473 (= e!87591 e!87592)))

(declare-fun c!25024 () Bool)

(assert (=> b!134473 (= c!25024 (and ((_ is Cons!1712) (toList!869 lt!69486)) (not (= (_1!1324 (h!2317 (toList!869 lt!69486))) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))))

(assert (= (and d!41391 c!25023) b!134472))

(assert (= (and d!41391 (not c!25023)) b!134473))

(assert (= (and b!134473 c!25024) b!134474))

(assert (= (and b!134473 (not c!25024)) b!134475))

(assert (=> b!134474 m!156163))

(declare-fun m!159741 () Bool)

(assert (=> b!134474 m!159741))

(assert (=> d!40739 d!41391))

(declare-fun d!41393 () Bool)

(assert (=> d!41393 (isDefined!125 (getValueByKey!172 (toList!869 lt!69093) lt!69092))))

(declare-fun lt!70385 () Unit!4135)

(assert (=> d!41393 (= lt!70385 (choose!817 (toList!869 lt!69093) lt!69092))))

(declare-fun e!87593 () Bool)

(assert (=> d!41393 e!87593))

(declare-fun res!64663 () Bool)

(assert (=> d!41393 (=> (not res!64663) (not e!87593))))

(assert (=> d!41393 (= res!64663 (isStrictlySorted!322 (toList!869 lt!69093)))))

(assert (=> d!41393 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69093) lt!69092) lt!70385)))

(declare-fun b!134476 () Bool)

(assert (=> b!134476 (= e!87593 (containsKey!176 (toList!869 lt!69093) lt!69092))))

(assert (= (and d!41393 res!64663) b!134476))

(assert (=> d!41393 m!156807))

(assert (=> d!41393 m!156807))

(assert (=> d!41393 m!156809))

(declare-fun m!159743 () Bool)

(assert (=> d!41393 m!159743))

(assert (=> d!41393 m!156897))

(assert (=> b!134476 m!156803))

(assert (=> b!133035 d!41393))

(declare-fun d!41395 () Bool)

(assert (=> d!41395 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69093) lt!69092)) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69093) lt!69092))))))

(declare-fun bs!5602 () Bool)

(assert (= bs!5602 d!41395))

(assert (=> bs!5602 m!156807))

(declare-fun m!159745 () Bool)

(assert (=> bs!5602 m!159745))

(assert (=> b!133035 d!41395))

(declare-fun b!134479 () Bool)

(declare-fun e!87595 () Option!178)

(assert (=> b!134479 (= e!87595 (getValueByKey!172 (t!6167 (toList!869 lt!69093)) lt!69092))))

(declare-fun b!134480 () Bool)

(assert (=> b!134480 (= e!87595 None!176)))

(declare-fun d!41397 () Bool)

(declare-fun c!25025 () Bool)

(assert (=> d!41397 (= c!25025 (and ((_ is Cons!1712) (toList!869 lt!69093)) (= (_1!1324 (h!2317 (toList!869 lt!69093))) lt!69092)))))

(declare-fun e!87594 () Option!178)

(assert (=> d!41397 (= (getValueByKey!172 (toList!869 lt!69093) lt!69092) e!87594)))

(declare-fun b!134477 () Bool)

(assert (=> b!134477 (= e!87594 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69093)))))))

(declare-fun b!134478 () Bool)

(assert (=> b!134478 (= e!87594 e!87595)))

(declare-fun c!25026 () Bool)

(assert (=> b!134478 (= c!25026 (and ((_ is Cons!1712) (toList!869 lt!69093)) (not (= (_1!1324 (h!2317 (toList!869 lt!69093))) lt!69092))))))

(assert (= (and d!41397 c!25025) b!134477))

(assert (= (and d!41397 (not c!25025)) b!134478))

(assert (= (and b!134478 c!25026) b!134479))

(assert (= (and b!134478 (not c!25026)) b!134480))

(declare-fun m!159747 () Bool)

(assert (=> b!134479 m!159747))

(assert (=> b!133035 d!41397))

(declare-fun d!41399 () Bool)

(assert (=> d!41399 (= (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69450 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))) lt!69463)) (v!3203 (getValueByKey!172 (toList!869 (+!175 lt!69450 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))) lt!69463)))))

(assert (=> d!40435 d!41399))

(declare-fun b!134483 () Bool)

(declare-fun e!87597 () Option!178)

(assert (=> b!134483 (= e!87597 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69450 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))) lt!69463))))

(declare-fun b!134484 () Bool)

(assert (=> b!134484 (= e!87597 None!176)))

(declare-fun d!41401 () Bool)

(declare-fun c!25027 () Bool)

(assert (=> d!41401 (= c!25027 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69450 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69450 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))) lt!69463)))))

(declare-fun e!87596 () Option!178)

(assert (=> d!41401 (= (getValueByKey!172 (toList!869 (+!175 lt!69450 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))) lt!69463) e!87596)))

(declare-fun b!134481 () Bool)

(assert (=> b!134481 (= e!87596 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69450 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))))))))

(declare-fun b!134482 () Bool)

(assert (=> b!134482 (= e!87596 e!87597)))

(declare-fun c!25028 () Bool)

(assert (=> b!134482 (= c!25028 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69450 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69450 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))) lt!69463))))))

(assert (= (and d!41401 c!25027) b!134481))

(assert (= (and d!41401 (not c!25027)) b!134482))

(assert (= (and b!134482 c!25028) b!134483))

(assert (= (and b!134482 (not c!25028)) b!134484))

(declare-fun m!159749 () Bool)

(assert (=> b!134483 m!159749))

(assert (=> d!40435 d!41401))

(declare-fun bm!14819 () Bool)

(declare-fun call!14822 () Bool)

(declare-fun c!25029 () Bool)

(assert (=> bm!14819 (= call!14822 (arrayNoDuplicates!0 (_keys!4614 (_2!1325 lt!69358)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!25029 (Cons!1713 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)))))

(declare-fun b!134485 () Bool)

(declare-fun e!87601 () Bool)

(declare-fun e!87598 () Bool)

(assert (=> b!134485 (= e!87601 e!87598)))

(assert (=> b!134485 (= c!25029 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000)))))

(declare-fun b!134486 () Bool)

(declare-fun e!87599 () Bool)

(assert (=> b!134486 (= e!87599 (contains!901 Nil!1714 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000)))))

(declare-fun b!134487 () Bool)

(assert (=> b!134487 (= e!87598 call!14822)))

(declare-fun b!134488 () Bool)

(declare-fun e!87600 () Bool)

(assert (=> b!134488 (= e!87600 e!87601)))

(declare-fun res!64666 () Bool)

(assert (=> b!134488 (=> (not res!64666) (not e!87601))))

(assert (=> b!134488 (= res!64666 (not e!87599))))

(declare-fun res!64665 () Bool)

(assert (=> b!134488 (=> (not res!64665) (not e!87599))))

(assert (=> b!134488 (= res!64665 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000)))))

(declare-fun b!134489 () Bool)

(assert (=> b!134489 (= e!87598 call!14822)))

(declare-fun d!41403 () Bool)

(declare-fun res!64664 () Bool)

(assert (=> d!41403 (=> res!64664 e!87600)))

(assert (=> d!41403 (= res!64664 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69358)))))))

(assert (=> d!41403 (= (arrayNoDuplicates!0 (_keys!4614 (_2!1325 lt!69358)) #b00000000000000000000000000000000 Nil!1714) e!87600)))

(assert (= (and d!41403 (not res!64664)) b!134488))

(assert (= (and b!134488 res!64665) b!134486))

(assert (= (and b!134488 res!64666) b!134485))

(assert (= (and b!134485 c!25029) b!134487))

(assert (= (and b!134485 (not c!25029)) b!134489))

(assert (= (or b!134487 b!134489) bm!14819))

(assert (=> bm!14819 m!159347))

(declare-fun m!159751 () Bool)

(assert (=> bm!14819 m!159751))

(assert (=> b!134485 m!159347))

(assert (=> b!134485 m!159347))

(assert (=> b!134485 m!159355))

(assert (=> b!134486 m!159347))

(assert (=> b!134486 m!159347))

(declare-fun m!159753 () Bool)

(assert (=> b!134486 m!159753))

(assert (=> b!134488 m!159347))

(assert (=> b!134488 m!159347))

(assert (=> b!134488 m!159355))

(assert (=> b!133471 d!41403))

(declare-fun bm!14820 () Bool)

(declare-fun call!14823 () Bool)

(declare-fun c!25030 () Bool)

(assert (=> bm!14820 (= call!14823 (arrayNoDuplicates!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!25030 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24830 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714))) (ite c!24830 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714)))))))

(declare-fun b!134490 () Bool)

(declare-fun e!87605 () Bool)

(declare-fun e!87602 () Bool)

(assert (=> b!134490 (= e!87605 e!87602)))

(assert (=> b!134490 (= c!25030 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134491 () Bool)

(declare-fun e!87603 () Bool)

(assert (=> b!134491 (= e!87603 (contains!901 (ite c!24830 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134492 () Bool)

(assert (=> b!134492 (= e!87602 call!14823)))

(declare-fun b!134493 () Bool)

(declare-fun e!87604 () Bool)

(assert (=> b!134493 (= e!87604 e!87605)))

(declare-fun res!64669 () Bool)

(assert (=> b!134493 (=> (not res!64669) (not e!87605))))

(assert (=> b!134493 (= res!64669 (not e!87603))))

(declare-fun res!64668 () Bool)

(assert (=> b!134493 (=> (not res!64668) (not e!87603))))

(assert (=> b!134493 (= res!64668 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134494 () Bool)

(assert (=> b!134494 (= e!87602 call!14823)))

(declare-fun d!41405 () Bool)

(declare-fun res!64667 () Bool)

(assert (=> d!41405 (=> res!64667 e!87604)))

(assert (=> d!41405 (= res!64667 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!41405 (= (arrayNoDuplicates!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24830 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714))) e!87604)))

(assert (= (and d!41405 (not res!64667)) b!134493))

(assert (= (and b!134493 res!64668) b!134491))

(assert (= (and b!134493 res!64669) b!134490))

(assert (= (and b!134490 c!25030) b!134492))

(assert (= (and b!134490 (not c!25030)) b!134494))

(assert (= (or b!134492 b!134494) bm!14820))

(declare-fun m!159755 () Bool)

(assert (=> bm!14820 m!159755))

(declare-fun m!159757 () Bool)

(assert (=> bm!14820 m!159757))

(assert (=> b!134490 m!159755))

(assert (=> b!134490 m!159755))

(declare-fun m!159759 () Bool)

(assert (=> b!134490 m!159759))

(assert (=> b!134491 m!159755))

(assert (=> b!134491 m!159755))

(declare-fun m!159761 () Bool)

(assert (=> b!134491 m!159761))

(assert (=> b!134493 m!159755))

(assert (=> b!134493 m!159755))

(assert (=> b!134493 m!159759))

(assert (=> bm!14772 d!41405))

(declare-fun d!41407 () Bool)

(declare-fun lt!70386 () Bool)

(assert (=> d!41407 (= lt!70386 (select (content!133 lt!69780) (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87607 () Bool)

(assert (=> d!41407 (= lt!70386 e!87607)))

(declare-fun res!64670 () Bool)

(assert (=> d!41407 (=> (not res!64670) (not e!87607))))

(assert (=> d!41407 (= res!64670 ((_ is Cons!1712) lt!69780))))

(assert (=> d!41407 (= (contains!902 lt!69780 (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!70386)))

(declare-fun b!134495 () Bool)

(declare-fun e!87606 () Bool)

(assert (=> b!134495 (= e!87607 e!87606)))

(declare-fun res!64671 () Bool)

(assert (=> b!134495 (=> res!64671 e!87606)))

(assert (=> b!134495 (= res!64671 (= (h!2317 lt!69780) (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134496 () Bool)

(assert (=> b!134496 (= e!87606 (contains!902 (t!6167 lt!69780) (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!41407 res!64670) b!134495))

(assert (= (and b!134495 (not res!64671)) b!134496))

(declare-fun m!159763 () Bool)

(assert (=> d!41407 m!159763))

(declare-fun m!159765 () Bool)

(assert (=> d!41407 m!159765))

(declare-fun m!159767 () Bool)

(assert (=> b!134496 m!159767))

(assert (=> b!133397 d!41407))

(declare-fun d!41409 () Bool)

(assert (=> d!41409 (= (apply!116 (+!175 lt!69717 (tuple2!2627 lt!69719 (zeroValue!2720 newMap!16))) lt!69713) (apply!116 lt!69717 lt!69713))))

(declare-fun lt!70387 () Unit!4135)

(assert (=> d!41409 (= lt!70387 (choose!822 lt!69717 lt!69719 (zeroValue!2720 newMap!16) lt!69713))))

(declare-fun e!87608 () Bool)

(assert (=> d!41409 e!87608))

(declare-fun res!64672 () Bool)

(assert (=> d!41409 (=> (not res!64672) (not e!87608))))

(assert (=> d!41409 (= res!64672 (contains!899 lt!69717 lt!69713))))

(assert (=> d!41409 (= (addApplyDifferent!92 lt!69717 lt!69719 (zeroValue!2720 newMap!16) lt!69713) lt!70387)))

(declare-fun b!134497 () Bool)

(assert (=> b!134497 (= e!87608 (not (= lt!69713 lt!69719)))))

(assert (= (and d!41409 res!64672) b!134497))

(declare-fun m!159769 () Bool)

(assert (=> d!41409 m!159769))

(assert (=> d!41409 m!157331))

(assert (=> d!41409 m!157351))

(assert (=> d!41409 m!157331))

(assert (=> d!41409 m!157333))

(declare-fun m!159771 () Bool)

(assert (=> d!41409 m!159771))

(assert (=> b!133304 d!41409))

(declare-fun d!41411 () Bool)

(declare-fun e!87609 () Bool)

(assert (=> d!41411 e!87609))

(declare-fun res!64674 () Bool)

(assert (=> d!41411 (=> (not res!64674) (not e!87609))))

(declare-fun lt!70388 () ListLongMap!1707)

(assert (=> d!41411 (= res!64674 (contains!899 lt!70388 (_1!1324 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70390 () List!1716)

(assert (=> d!41411 (= lt!70388 (ListLongMap!1708 lt!70390))))

(declare-fun lt!70391 () Unit!4135)

(declare-fun lt!70389 () Unit!4135)

(assert (=> d!41411 (= lt!70391 lt!70389)))

(assert (=> d!41411 (= (getValueByKey!172 lt!70390 (_1!1324 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41411 (= lt!70389 (lemmaContainsTupThenGetReturnValue!87 lt!70390 (_1!1324 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41411 (= lt!70390 (insertStrictlySorted!90 (toList!869 lt!69726) (_1!1324 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41411 (= (+!175 lt!69726 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16))) lt!70388)))

(declare-fun b!134498 () Bool)

(declare-fun res!64673 () Bool)

(assert (=> b!134498 (=> (not res!64673) (not e!87609))))

(assert (=> b!134498 (= res!64673 (= (getValueByKey!172 (toList!869 lt!70388) (_1!1324 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16))))))))

(declare-fun b!134499 () Bool)

(assert (=> b!134499 (= e!87609 (contains!902 (toList!869 lt!70388) (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41411 res!64674) b!134498))

(assert (= (and b!134498 res!64673) b!134499))

(declare-fun m!159773 () Bool)

(assert (=> d!41411 m!159773))

(declare-fun m!159775 () Bool)

(assert (=> d!41411 m!159775))

(declare-fun m!159777 () Bool)

(assert (=> d!41411 m!159777))

(declare-fun m!159779 () Bool)

(assert (=> d!41411 m!159779))

(declare-fun m!159781 () Bool)

(assert (=> b!134498 m!159781))

(declare-fun m!159783 () Bool)

(assert (=> b!134499 m!159783))

(assert (=> b!133304 d!41411))

(declare-fun d!41413 () Bool)

(assert (=> d!41413 (= (apply!116 (+!175 lt!69712 (tuple2!2627 lt!69715 (minValue!2720 newMap!16))) lt!69731) (apply!116 lt!69712 lt!69731))))

(declare-fun lt!70392 () Unit!4135)

(assert (=> d!41413 (= lt!70392 (choose!822 lt!69712 lt!69715 (minValue!2720 newMap!16) lt!69731))))

(declare-fun e!87610 () Bool)

(assert (=> d!41413 e!87610))

(declare-fun res!64675 () Bool)

(assert (=> d!41413 (=> (not res!64675) (not e!87610))))

(assert (=> d!41413 (= res!64675 (contains!899 lt!69712 lt!69731))))

(assert (=> d!41413 (= (addApplyDifferent!92 lt!69712 lt!69715 (minValue!2720 newMap!16) lt!69731) lt!70392)))

(declare-fun b!134500 () Bool)

(assert (=> b!134500 (= e!87610 (not (= lt!69731 lt!69715)))))

(assert (= (and d!41413 res!64675) b!134500))

(declare-fun m!159785 () Bool)

(assert (=> d!41413 m!159785))

(assert (=> d!41413 m!157339))

(assert (=> d!41413 m!157337))

(assert (=> d!41413 m!157339))

(assert (=> d!41413 m!157347))

(declare-fun m!159787 () Bool)

(assert (=> d!41413 m!159787))

(assert (=> b!133304 d!41413))

(declare-fun d!41415 () Bool)

(assert (=> d!41415 (= (apply!116 (+!175 lt!69714 (tuple2!2627 lt!69729 (minValue!2720 newMap!16))) lt!69727) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69714 (tuple2!2627 lt!69729 (minValue!2720 newMap!16)))) lt!69727)))))

(declare-fun bs!5603 () Bool)

(assert (= bs!5603 d!41415))

(declare-fun m!159789 () Bool)

(assert (=> bs!5603 m!159789))

(assert (=> bs!5603 m!159789))

(declare-fun m!159791 () Bool)

(assert (=> bs!5603 m!159791))

(assert (=> b!133304 d!41415))

(declare-fun d!41417 () Bool)

(assert (=> d!41417 (= (apply!116 (+!175 lt!69712 (tuple2!2627 lt!69715 (minValue!2720 newMap!16))) lt!69731) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69712 (tuple2!2627 lt!69715 (minValue!2720 newMap!16)))) lt!69731)))))

(declare-fun bs!5604 () Bool)

(assert (= bs!5604 d!41417))

(declare-fun m!159793 () Bool)

(assert (=> bs!5604 m!159793))

(assert (=> bs!5604 m!159793))

(declare-fun m!159795 () Bool)

(assert (=> bs!5604 m!159795))

(assert (=> b!133304 d!41417))

(assert (=> b!133304 d!41073))

(declare-fun d!41419 () Bool)

(assert (=> d!41419 (= (apply!116 (+!175 lt!69717 (tuple2!2627 lt!69719 (zeroValue!2720 newMap!16))) lt!69713) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69717 (tuple2!2627 lt!69719 (zeroValue!2720 newMap!16)))) lt!69713)))))

(declare-fun bs!5605 () Bool)

(assert (= bs!5605 d!41419))

(declare-fun m!159797 () Bool)

(assert (=> bs!5605 m!159797))

(assert (=> bs!5605 m!159797))

(declare-fun m!159799 () Bool)

(assert (=> bs!5605 m!159799))

(assert (=> b!133304 d!41419))

(declare-fun d!41421 () Bool)

(declare-fun e!87611 () Bool)

(assert (=> d!41421 e!87611))

(declare-fun res!64677 () Bool)

(assert (=> d!41421 (=> (not res!64677) (not e!87611))))

(declare-fun lt!70393 () ListLongMap!1707)

(assert (=> d!41421 (= res!64677 (contains!899 lt!70393 (_1!1324 (tuple2!2627 lt!69715 (minValue!2720 newMap!16)))))))

(declare-fun lt!70395 () List!1716)

(assert (=> d!41421 (= lt!70393 (ListLongMap!1708 lt!70395))))

(declare-fun lt!70396 () Unit!4135)

(declare-fun lt!70394 () Unit!4135)

(assert (=> d!41421 (= lt!70396 lt!70394)))

(assert (=> d!41421 (= (getValueByKey!172 lt!70395 (_1!1324 (tuple2!2627 lt!69715 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69715 (minValue!2720 newMap!16)))))))

(assert (=> d!41421 (= lt!70394 (lemmaContainsTupThenGetReturnValue!87 lt!70395 (_1!1324 (tuple2!2627 lt!69715 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69715 (minValue!2720 newMap!16)))))))

(assert (=> d!41421 (= lt!70395 (insertStrictlySorted!90 (toList!869 lt!69712) (_1!1324 (tuple2!2627 lt!69715 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69715 (minValue!2720 newMap!16)))))))

(assert (=> d!41421 (= (+!175 lt!69712 (tuple2!2627 lt!69715 (minValue!2720 newMap!16))) lt!70393)))

(declare-fun b!134501 () Bool)

(declare-fun res!64676 () Bool)

(assert (=> b!134501 (=> (not res!64676) (not e!87611))))

(assert (=> b!134501 (= res!64676 (= (getValueByKey!172 (toList!869 lt!70393) (_1!1324 (tuple2!2627 lt!69715 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69715 (minValue!2720 newMap!16))))))))

(declare-fun b!134502 () Bool)

(assert (=> b!134502 (= e!87611 (contains!902 (toList!869 lt!70393) (tuple2!2627 lt!69715 (minValue!2720 newMap!16))))))

(assert (= (and d!41421 res!64677) b!134501))

(assert (= (and b!134501 res!64676) b!134502))

(declare-fun m!159801 () Bool)

(assert (=> d!41421 m!159801))

(declare-fun m!159803 () Bool)

(assert (=> d!41421 m!159803))

(declare-fun m!159805 () Bool)

(assert (=> d!41421 m!159805))

(declare-fun m!159807 () Bool)

(assert (=> d!41421 m!159807))

(declare-fun m!159809 () Bool)

(assert (=> b!134501 m!159809))

(declare-fun m!159811 () Bool)

(assert (=> b!134502 m!159811))

(assert (=> b!133304 d!41421))

(declare-fun d!41423 () Bool)

(assert (=> d!41423 (= (apply!116 (+!175 lt!69714 (tuple2!2627 lt!69729 (minValue!2720 newMap!16))) lt!69727) (apply!116 lt!69714 lt!69727))))

(declare-fun lt!70397 () Unit!4135)

(assert (=> d!41423 (= lt!70397 (choose!822 lt!69714 lt!69729 (minValue!2720 newMap!16) lt!69727))))

(declare-fun e!87612 () Bool)

(assert (=> d!41423 e!87612))

(declare-fun res!64678 () Bool)

(assert (=> d!41423 (=> (not res!64678) (not e!87612))))

(assert (=> d!41423 (= res!64678 (contains!899 lt!69714 lt!69727))))

(assert (=> d!41423 (= (addApplyDifferent!92 lt!69714 lt!69729 (minValue!2720 newMap!16) lt!69727) lt!70397)))

(declare-fun b!134503 () Bool)

(assert (=> b!134503 (= e!87612 (not (= lt!69727 lt!69729)))))

(assert (= (and d!41423 res!64678) b!134503))

(declare-fun m!159813 () Bool)

(assert (=> d!41423 m!159813))

(assert (=> d!41423 m!157327))

(assert (=> d!41423 m!157343))

(assert (=> d!41423 m!157327))

(assert (=> d!41423 m!157345))

(declare-fun m!159815 () Bool)

(assert (=> d!41423 m!159815))

(assert (=> b!133304 d!41423))

(declare-fun d!41425 () Bool)

(declare-fun e!87613 () Bool)

(assert (=> d!41425 e!87613))

(declare-fun res!64679 () Bool)

(assert (=> d!41425 (=> res!64679 e!87613)))

(declare-fun lt!70401 () Bool)

(assert (=> d!41425 (= res!64679 (not lt!70401))))

(declare-fun lt!70398 () Bool)

(assert (=> d!41425 (= lt!70401 lt!70398)))

(declare-fun lt!70400 () Unit!4135)

(declare-fun e!87614 () Unit!4135)

(assert (=> d!41425 (= lt!70400 e!87614)))

(declare-fun c!25031 () Bool)

(assert (=> d!41425 (= c!25031 lt!70398)))

(assert (=> d!41425 (= lt!70398 (containsKey!176 (toList!869 (+!175 lt!69726 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16)))) lt!69725))))

(assert (=> d!41425 (= (contains!899 (+!175 lt!69726 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16))) lt!69725) lt!70401)))

(declare-fun b!134504 () Bool)

(declare-fun lt!70399 () Unit!4135)

(assert (=> b!134504 (= e!87614 lt!70399)))

(assert (=> b!134504 (= lt!70399 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69726 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16)))) lt!69725))))

(assert (=> b!134504 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69726 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16)))) lt!69725))))

(declare-fun b!134505 () Bool)

(declare-fun Unit!4221 () Unit!4135)

(assert (=> b!134505 (= e!87614 Unit!4221)))

(declare-fun b!134506 () Bool)

(assert (=> b!134506 (= e!87613 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69726 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16)))) lt!69725)))))

(assert (= (and d!41425 c!25031) b!134504))

(assert (= (and d!41425 (not c!25031)) b!134505))

(assert (= (and d!41425 (not res!64679)) b!134506))

(declare-fun m!159817 () Bool)

(assert (=> d!41425 m!159817))

(declare-fun m!159819 () Bool)

(assert (=> b!134504 m!159819))

(declare-fun m!159821 () Bool)

(assert (=> b!134504 m!159821))

(assert (=> b!134504 m!159821))

(declare-fun m!159823 () Bool)

(assert (=> b!134504 m!159823))

(assert (=> b!134506 m!159821))

(assert (=> b!134506 m!159821))

(assert (=> b!134506 m!159823))

(assert (=> b!133304 d!41425))

(declare-fun d!41427 () Bool)

(declare-fun e!87615 () Bool)

(assert (=> d!41427 e!87615))

(declare-fun res!64681 () Bool)

(assert (=> d!41427 (=> (not res!64681) (not e!87615))))

(declare-fun lt!70402 () ListLongMap!1707)

(assert (=> d!41427 (= res!64681 (contains!899 lt!70402 (_1!1324 (tuple2!2627 lt!69729 (minValue!2720 newMap!16)))))))

(declare-fun lt!70404 () List!1716)

(assert (=> d!41427 (= lt!70402 (ListLongMap!1708 lt!70404))))

(declare-fun lt!70405 () Unit!4135)

(declare-fun lt!70403 () Unit!4135)

(assert (=> d!41427 (= lt!70405 lt!70403)))

(assert (=> d!41427 (= (getValueByKey!172 lt!70404 (_1!1324 (tuple2!2627 lt!69729 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69729 (minValue!2720 newMap!16)))))))

(assert (=> d!41427 (= lt!70403 (lemmaContainsTupThenGetReturnValue!87 lt!70404 (_1!1324 (tuple2!2627 lt!69729 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69729 (minValue!2720 newMap!16)))))))

(assert (=> d!41427 (= lt!70404 (insertStrictlySorted!90 (toList!869 lt!69714) (_1!1324 (tuple2!2627 lt!69729 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69729 (minValue!2720 newMap!16)))))))

(assert (=> d!41427 (= (+!175 lt!69714 (tuple2!2627 lt!69729 (minValue!2720 newMap!16))) lt!70402)))

(declare-fun b!134507 () Bool)

(declare-fun res!64680 () Bool)

(assert (=> b!134507 (=> (not res!64680) (not e!87615))))

(assert (=> b!134507 (= res!64680 (= (getValueByKey!172 (toList!869 lt!70402) (_1!1324 (tuple2!2627 lt!69729 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69729 (minValue!2720 newMap!16))))))))

(declare-fun b!134508 () Bool)

(assert (=> b!134508 (= e!87615 (contains!902 (toList!869 lt!70402) (tuple2!2627 lt!69729 (minValue!2720 newMap!16))))))

(assert (= (and d!41427 res!64681) b!134507))

(assert (= (and b!134507 res!64680) b!134508))

(declare-fun m!159825 () Bool)

(assert (=> d!41427 m!159825))

(declare-fun m!159827 () Bool)

(assert (=> d!41427 m!159827))

(declare-fun m!159829 () Bool)

(assert (=> d!41427 m!159829))

(declare-fun m!159831 () Bool)

(assert (=> d!41427 m!159831))

(declare-fun m!159833 () Bool)

(assert (=> b!134507 m!159833))

(declare-fun m!159835 () Bool)

(assert (=> b!134508 m!159835))

(assert (=> b!133304 d!41427))

(declare-fun d!41429 () Bool)

(assert (=> d!41429 (= (apply!116 lt!69714 lt!69727) (get!1486 (getValueByKey!172 (toList!869 lt!69714) lt!69727)))))

(declare-fun bs!5606 () Bool)

(assert (= bs!5606 d!41429))

(declare-fun m!159837 () Bool)

(assert (=> bs!5606 m!159837))

(assert (=> bs!5606 m!159837))

(declare-fun m!159839 () Bool)

(assert (=> bs!5606 m!159839))

(assert (=> b!133304 d!41429))

(declare-fun d!41431 () Bool)

(assert (=> d!41431 (contains!899 (+!175 lt!69726 (tuple2!2627 lt!69720 (zeroValue!2720 newMap!16))) lt!69725)))

(declare-fun lt!70406 () Unit!4135)

(assert (=> d!41431 (= lt!70406 (choose!823 lt!69726 lt!69720 (zeroValue!2720 newMap!16) lt!69725))))

(assert (=> d!41431 (contains!899 lt!69726 lt!69725)))

(assert (=> d!41431 (= (addStillContains!92 lt!69726 lt!69720 (zeroValue!2720 newMap!16) lt!69725) lt!70406)))

(declare-fun bs!5607 () Bool)

(assert (= bs!5607 d!41431))

(assert (=> bs!5607 m!157329))

(assert (=> bs!5607 m!157329))

(assert (=> bs!5607 m!157353))

(declare-fun m!159841 () Bool)

(assert (=> bs!5607 m!159841))

(declare-fun m!159843 () Bool)

(assert (=> bs!5607 m!159843))

(assert (=> b!133304 d!41431))

(declare-fun d!41433 () Bool)

(declare-fun e!87616 () Bool)

(assert (=> d!41433 e!87616))

(declare-fun res!64683 () Bool)

(assert (=> d!41433 (=> (not res!64683) (not e!87616))))

(declare-fun lt!70407 () ListLongMap!1707)

(assert (=> d!41433 (= res!64683 (contains!899 lt!70407 (_1!1324 (tuple2!2627 lt!69719 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70409 () List!1716)

(assert (=> d!41433 (= lt!70407 (ListLongMap!1708 lt!70409))))

(declare-fun lt!70410 () Unit!4135)

(declare-fun lt!70408 () Unit!4135)

(assert (=> d!41433 (= lt!70410 lt!70408)))

(assert (=> d!41433 (= (getValueByKey!172 lt!70409 (_1!1324 (tuple2!2627 lt!69719 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69719 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41433 (= lt!70408 (lemmaContainsTupThenGetReturnValue!87 lt!70409 (_1!1324 (tuple2!2627 lt!69719 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69719 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41433 (= lt!70409 (insertStrictlySorted!90 (toList!869 lt!69717) (_1!1324 (tuple2!2627 lt!69719 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69719 (zeroValue!2720 newMap!16)))))))

(assert (=> d!41433 (= (+!175 lt!69717 (tuple2!2627 lt!69719 (zeroValue!2720 newMap!16))) lt!70407)))

(declare-fun b!134509 () Bool)

(declare-fun res!64682 () Bool)

(assert (=> b!134509 (=> (not res!64682) (not e!87616))))

(assert (=> b!134509 (= res!64682 (= (getValueByKey!172 (toList!869 lt!70407) (_1!1324 (tuple2!2627 lt!69719 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69719 (zeroValue!2720 newMap!16))))))))

(declare-fun b!134510 () Bool)

(assert (=> b!134510 (= e!87616 (contains!902 (toList!869 lt!70407) (tuple2!2627 lt!69719 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41433 res!64683) b!134509))

(assert (= (and b!134509 res!64682) b!134510))

(declare-fun m!159845 () Bool)

(assert (=> d!41433 m!159845))

(declare-fun m!159847 () Bool)

(assert (=> d!41433 m!159847))

(declare-fun m!159849 () Bool)

(assert (=> d!41433 m!159849))

(declare-fun m!159851 () Bool)

(assert (=> d!41433 m!159851))

(declare-fun m!159853 () Bool)

(assert (=> b!134509 m!159853))

(declare-fun m!159855 () Bool)

(assert (=> b!134510 m!159855))

(assert (=> b!133304 d!41433))

(declare-fun d!41435 () Bool)

(assert (=> d!41435 (= (apply!116 lt!69712 lt!69731) (get!1486 (getValueByKey!172 (toList!869 lt!69712) lt!69731)))))

(declare-fun bs!5608 () Bool)

(assert (= bs!5608 d!41435))

(declare-fun m!159857 () Bool)

(assert (=> bs!5608 m!159857))

(assert (=> bs!5608 m!159857))

(declare-fun m!159859 () Bool)

(assert (=> bs!5608 m!159859))

(assert (=> b!133304 d!41435))

(declare-fun d!41437 () Bool)

(assert (=> d!41437 (= (apply!116 lt!69717 lt!69713) (get!1486 (getValueByKey!172 (toList!869 lt!69717) lt!69713)))))

(declare-fun bs!5609 () Bool)

(assert (= bs!5609 d!41437))

(declare-fun m!159861 () Bool)

(assert (=> bs!5609 m!159861))

(assert (=> bs!5609 m!159861))

(declare-fun m!159863 () Bool)

(assert (=> bs!5609 m!159863))

(assert (=> b!133304 d!41437))

(declare-fun d!41439 () Bool)

(assert (=> d!41439 (= (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69248 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))) lt!69261)) (v!3203 (getValueByKey!172 (toList!869 (+!175 lt!69248 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))) lt!69261)))))

(assert (=> d!40787 d!41439))

(declare-fun e!87618 () Option!178)

(declare-fun b!134513 () Bool)

(assert (=> b!134513 (= e!87618 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69248 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))) lt!69261))))

(declare-fun b!134514 () Bool)

(assert (=> b!134514 (= e!87618 None!176)))

(declare-fun d!41441 () Bool)

(declare-fun c!25032 () Bool)

(assert (=> d!41441 (= c!25032 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69248 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69248 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))) lt!69261)))))

(declare-fun e!87617 () Option!178)

(assert (=> d!41441 (= (getValueByKey!172 (toList!869 (+!175 lt!69248 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))) lt!69261) e!87617)))

(declare-fun b!134511 () Bool)

(assert (=> b!134511 (= e!87617 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69248 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))))))))

(declare-fun b!134512 () Bool)

(assert (=> b!134512 (= e!87617 e!87618)))

(declare-fun c!25033 () Bool)

(assert (=> b!134512 (= c!25033 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69248 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69248 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))) lt!69261))))))

(assert (= (and d!41441 c!25032) b!134511))

(assert (= (and d!41441 (not c!25032)) b!134512))

(assert (= (and b!134512 c!25033) b!134513))

(assert (= (and b!134512 (not c!25033)) b!134514))

(declare-fun m!159865 () Bool)

(assert (=> b!134513 m!159865))

(assert (=> d!40787 d!41441))

(declare-fun e!87620 () Option!178)

(declare-fun b!134517 () Bool)

(assert (=> b!134517 (= e!87620 (getValueByKey!172 (t!6167 (toList!869 lt!69532)) (_1!1324 (tuple2!2627 lt!69406 lt!69403))))))

(declare-fun b!134518 () Bool)

(assert (=> b!134518 (= e!87620 None!176)))

(declare-fun c!25034 () Bool)

(declare-fun d!41443 () Bool)

(assert (=> d!41443 (= c!25034 (and ((_ is Cons!1712) (toList!869 lt!69532)) (= (_1!1324 (h!2317 (toList!869 lt!69532))) (_1!1324 (tuple2!2627 lt!69406 lt!69403)))))))

(declare-fun e!87619 () Option!178)

(assert (=> d!41443 (= (getValueByKey!172 (toList!869 lt!69532) (_1!1324 (tuple2!2627 lt!69406 lt!69403))) e!87619)))

(declare-fun b!134515 () Bool)

(assert (=> b!134515 (= e!87619 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69532)))))))

(declare-fun b!134516 () Bool)

(assert (=> b!134516 (= e!87619 e!87620)))

(declare-fun c!25035 () Bool)

(assert (=> b!134516 (= c!25035 (and ((_ is Cons!1712) (toList!869 lt!69532)) (not (= (_1!1324 (h!2317 (toList!869 lt!69532))) (_1!1324 (tuple2!2627 lt!69406 lt!69403))))))))

(assert (= (and d!41443 c!25034) b!134515))

(assert (= (and d!41443 (not c!25034)) b!134516))

(assert (= (and b!134516 c!25035) b!134517))

(assert (= (and b!134516 (not c!25035)) b!134518))

(declare-fun m!159867 () Bool)

(assert (=> b!134517 m!159867))

(assert (=> b!133006 d!41443))

(assert (=> b!133265 d!40353))

(declare-fun d!41445 () Bool)

(declare-fun e!87621 () Bool)

(assert (=> d!41445 e!87621))

(declare-fun res!64684 () Bool)

(assert (=> d!41445 (=> res!64684 e!87621)))

(declare-fun lt!70414 () Bool)

(assert (=> d!41445 (= res!64684 (not lt!70414))))

(declare-fun lt!70411 () Bool)

(assert (=> d!41445 (= lt!70414 lt!70411)))

(declare-fun lt!70413 () Unit!4135)

(declare-fun e!87622 () Unit!4135)

(assert (=> d!41445 (= lt!70413 e!87622)))

(declare-fun c!25036 () Bool)

(assert (=> d!41445 (= c!25036 lt!70411)))

(assert (=> d!41445 (= lt!70411 (containsKey!176 (toList!869 lt!69666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41445 (= (contains!899 lt!69666 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70414)))

(declare-fun b!134519 () Bool)

(declare-fun lt!70412 () Unit!4135)

(assert (=> b!134519 (= e!87622 lt!70412)))

(assert (=> b!134519 (= lt!70412 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134519 (isDefined!125 (getValueByKey!172 (toList!869 lt!69666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134520 () Bool)

(declare-fun Unit!4222 () Unit!4135)

(assert (=> b!134520 (= e!87622 Unit!4222)))

(declare-fun b!134521 () Bool)

(assert (=> b!134521 (= e!87621 (isDefined!125 (getValueByKey!172 (toList!869 lt!69666) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41445 c!25036) b!134519))

(assert (= (and d!41445 (not c!25036)) b!134520))

(assert (= (and d!41445 (not res!64684)) b!134521))

(declare-fun m!159869 () Bool)

(assert (=> d!41445 m!159869))

(declare-fun m!159871 () Bool)

(assert (=> b!134519 m!159871))

(declare-fun m!159873 () Bool)

(assert (=> b!134519 m!159873))

(assert (=> b!134519 m!159873))

(declare-fun m!159875 () Bool)

(assert (=> b!134519 m!159875))

(assert (=> b!134521 m!159873))

(assert (=> b!134521 m!159873))

(assert (=> b!134521 m!159875))

(assert (=> d!40501 d!41445))

(assert (=> d!40501 d!40325))

(declare-fun d!41447 () Bool)

(declare-fun res!64685 () Bool)

(declare-fun e!87623 () Bool)

(assert (=> d!41447 (=> res!64685 e!87623)))

(assert (=> d!41447 (= res!64685 (and ((_ is Cons!1712) (toList!869 lt!69422)) (= (_1!1324 (h!2317 (toList!869 lt!69422))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!41447 (= (containsKey!176 (toList!869 lt!69422) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!87623)))

(declare-fun b!134522 () Bool)

(declare-fun e!87624 () Bool)

(assert (=> b!134522 (= e!87623 e!87624)))

(declare-fun res!64686 () Bool)

(assert (=> b!134522 (=> (not res!64686) (not e!87624))))

(assert (=> b!134522 (= res!64686 (and (or (not ((_ is Cons!1712) (toList!869 lt!69422))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69422))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1712) (toList!869 lt!69422)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69422))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134523 () Bool)

(assert (=> b!134523 (= e!87624 (containsKey!176 (t!6167 (toList!869 lt!69422)) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41447 (not res!64685)) b!134522))

(assert (= (and b!134522 res!64686) b!134523))

(declare-fun m!159877 () Bool)

(assert (=> b!134523 m!159877))

(assert (=> d!40625 d!41447))

(declare-fun d!41449 () Bool)

(declare-fun res!64687 () Bool)

(declare-fun e!87625 () Bool)

(assert (=> d!41449 (=> res!64687 e!87625)))

(assert (=> d!41449 (= res!64687 (and ((_ is Cons!1712) (toList!869 lt!69377)) (= (_1!1324 (h!2317 (toList!869 lt!69377))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41449 (= (containsKey!176 (toList!869 lt!69377) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87625)))

(declare-fun b!134524 () Bool)

(declare-fun e!87626 () Bool)

(assert (=> b!134524 (= e!87625 e!87626)))

(declare-fun res!64688 () Bool)

(assert (=> b!134524 (=> (not res!64688) (not e!87626))))

(assert (=> b!134524 (= res!64688 (and (or (not ((_ is Cons!1712) (toList!869 lt!69377))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69377))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Cons!1712) (toList!869 lt!69377)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69377))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134525 () Bool)

(assert (=> b!134525 (= e!87626 (containsKey!176 (t!6167 (toList!869 lt!69377)) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!41449 (not res!64687)) b!134524))

(assert (= (and b!134524 res!64688) b!134525))

(declare-fun m!159879 () Bool)

(assert (=> b!134525 m!159879))

(assert (=> d!40419 d!41449))

(declare-fun d!41451 () Bool)

(declare-fun e!87627 () Bool)

(assert (=> d!41451 e!87627))

(declare-fun res!64689 () Bool)

(assert (=> d!41451 (=> res!64689 e!87627)))

(declare-fun lt!70418 () Bool)

(assert (=> d!41451 (= res!64689 (not lt!70418))))

(declare-fun lt!70415 () Bool)

(assert (=> d!41451 (= lt!70418 lt!70415)))

(declare-fun lt!70417 () Unit!4135)

(declare-fun e!87628 () Unit!4135)

(assert (=> d!41451 (= lt!70417 e!87628)))

(declare-fun c!25037 () Bool)

(assert (=> d!41451 (= c!25037 lt!70415)))

(assert (=> d!41451 (= lt!70415 (containsKey!176 (toList!869 lt!69648) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!41451 (= (contains!899 lt!69648 (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70418)))

(declare-fun b!134526 () Bool)

(declare-fun lt!70416 () Unit!4135)

(assert (=> b!134526 (= e!87628 lt!70416)))

(assert (=> b!134526 (= lt!70416 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69648) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> b!134526 (isDefined!125 (getValueByKey!172 (toList!869 lt!69648) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134527 () Bool)

(declare-fun Unit!4223 () Unit!4135)

(assert (=> b!134527 (= e!87628 Unit!4223)))

(declare-fun b!134528 () Bool)

(assert (=> b!134528 (= e!87627 (isDefined!125 (getValueByKey!172 (toList!869 lt!69648) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (= (and d!41451 c!25037) b!134526))

(assert (= (and d!41451 (not c!25037)) b!134527))

(assert (= (and d!41451 (not res!64689)) b!134528))

(declare-fun m!159881 () Bool)

(assert (=> d!41451 m!159881))

(declare-fun m!159883 () Bool)

(assert (=> b!134526 m!159883))

(assert (=> b!134526 m!157123))

(assert (=> b!134526 m!157123))

(declare-fun m!159885 () Bool)

(assert (=> b!134526 m!159885))

(assert (=> b!134528 m!157123))

(assert (=> b!134528 m!157123))

(assert (=> b!134528 m!159885))

(assert (=> d!40491 d!41451))

(declare-fun b!134531 () Bool)

(declare-fun e!87630 () Option!178)

(assert (=> b!134531 (= e!87630 (getValueByKey!172 (t!6167 lt!69650) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134532 () Bool)

(assert (=> b!134532 (= e!87630 None!176)))

(declare-fun d!41453 () Bool)

(declare-fun c!25038 () Bool)

(assert (=> d!41453 (= c!25038 (and ((_ is Cons!1712) lt!69650) (= (_1!1324 (h!2317 lt!69650)) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun e!87629 () Option!178)

(assert (=> d!41453 (= (getValueByKey!172 lt!69650 (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) e!87629)))

(declare-fun b!134529 () Bool)

(assert (=> b!134529 (= e!87629 (Some!177 (_2!1324 (h!2317 lt!69650))))))

(declare-fun b!134530 () Bool)

(assert (=> b!134530 (= e!87629 e!87630)))

(declare-fun c!25039 () Bool)

(assert (=> b!134530 (= c!25039 (and ((_ is Cons!1712) lt!69650) (not (= (_1!1324 (h!2317 lt!69650)) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (= (and d!41453 c!25038) b!134529))

(assert (= (and d!41453 (not c!25038)) b!134530))

(assert (= (and b!134530 c!25039) b!134531))

(assert (= (and b!134530 (not c!25039)) b!134532))

(declare-fun m!159887 () Bool)

(assert (=> b!134531 m!159887))

(assert (=> d!40491 d!41453))

(declare-fun d!41455 () Bool)

(assert (=> d!41455 (= (getValueByKey!172 lt!69650 (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun lt!70419 () Unit!4135)

(assert (=> d!41455 (= lt!70419 (choose!827 lt!69650 (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun e!87631 () Bool)

(assert (=> d!41455 e!87631))

(declare-fun res!64690 () Bool)

(assert (=> d!41455 (=> (not res!64690) (not e!87631))))

(assert (=> d!41455 (= res!64690 (isStrictlySorted!322 lt!69650))))

(assert (=> d!41455 (= (lemmaContainsTupThenGetReturnValue!87 lt!69650 (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70419)))

(declare-fun b!134533 () Bool)

(declare-fun res!64691 () Bool)

(assert (=> b!134533 (=> (not res!64691) (not e!87631))))

(assert (=> b!134533 (= res!64691 (containsKey!176 lt!69650 (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134534 () Bool)

(assert (=> b!134534 (= e!87631 (contains!902 lt!69650 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (= (and d!41455 res!64690) b!134533))

(assert (= (and b!134533 res!64691) b!134534))

(assert (=> d!41455 m!157117))

(declare-fun m!159889 () Bool)

(assert (=> d!41455 m!159889))

(declare-fun m!159891 () Bool)

(assert (=> d!41455 m!159891))

(declare-fun m!159893 () Bool)

(assert (=> b!134533 m!159893))

(declare-fun m!159895 () Bool)

(assert (=> b!134534 m!159895))

(assert (=> d!40491 d!41455))

(declare-fun bm!14821 () Bool)

(declare-fun call!14825 () List!1716)

(declare-fun call!14826 () List!1716)

(assert (=> bm!14821 (= call!14825 call!14826)))

(declare-fun d!41457 () Bool)

(declare-fun e!87635 () Bool)

(assert (=> d!41457 e!87635))

(declare-fun res!64693 () Bool)

(assert (=> d!41457 (=> (not res!64693) (not e!87635))))

(declare-fun lt!70420 () List!1716)

(assert (=> d!41457 (= res!64693 (isStrictlySorted!322 lt!70420))))

(declare-fun e!87633 () List!1716)

(assert (=> d!41457 (= lt!70420 e!87633)))

(declare-fun c!25043 () Bool)

(assert (=> d!41457 (= c!25043 (and ((_ is Cons!1712) (toList!869 lt!69470)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69470))) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!41457 (isStrictlySorted!322 (toList!869 lt!69470))))

(assert (=> d!41457 (= (insertStrictlySorted!90 (toList!869 lt!69470) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70420)))

(declare-fun b!134535 () Bool)

(assert (=> b!134535 (= e!87635 (contains!902 lt!70420 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun c!25041 () Bool)

(declare-fun b!134536 () Bool)

(assert (=> b!134536 (= c!25041 (and ((_ is Cons!1712) (toList!869 lt!69470)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69470))) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun e!87634 () List!1716)

(declare-fun e!87636 () List!1716)

(assert (=> b!134536 (= e!87634 e!87636)))

(declare-fun b!134537 () Bool)

(declare-fun e!87632 () List!1716)

(assert (=> b!134537 (= e!87632 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69470)) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134538 () Bool)

(assert (=> b!134538 (= e!87634 call!14825)))

(declare-fun b!134539 () Bool)

(declare-fun call!14824 () List!1716)

(assert (=> b!134539 (= e!87636 call!14824)))

(declare-fun c!25040 () Bool)

(declare-fun b!134540 () Bool)

(assert (=> b!134540 (= e!87632 (ite c!25040 (t!6167 (toList!869 lt!69470)) (ite c!25041 (Cons!1712 (h!2317 (toList!869 lt!69470)) (t!6167 (toList!869 lt!69470))) Nil!1713)))))

(declare-fun b!134541 () Bool)

(assert (=> b!134541 (= e!87636 call!14824)))

(declare-fun b!134542 () Bool)

(assert (=> b!134542 (= e!87633 call!14826)))

(declare-fun bm!14822 () Bool)

(assert (=> bm!14822 (= call!14826 ($colon$colon!92 e!87632 (ite c!25043 (h!2317 (toList!869 lt!69470)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun c!25042 () Bool)

(assert (=> bm!14822 (= c!25042 c!25043)))

(declare-fun bm!14823 () Bool)

(assert (=> bm!14823 (= call!14824 call!14825)))

(declare-fun b!134543 () Bool)

(declare-fun res!64692 () Bool)

(assert (=> b!134543 (=> (not res!64692) (not e!87635))))

(assert (=> b!134543 (= res!64692 (containsKey!176 lt!70420 (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134544 () Bool)

(assert (=> b!134544 (= e!87633 e!87634)))

(assert (=> b!134544 (= c!25040 (and ((_ is Cons!1712) (toList!869 lt!69470)) (= (_1!1324 (h!2317 (toList!869 lt!69470))) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (= (and d!41457 c!25043) b!134542))

(assert (= (and d!41457 (not c!25043)) b!134544))

(assert (= (and b!134544 c!25040) b!134538))

(assert (= (and b!134544 (not c!25040)) b!134536))

(assert (= (and b!134536 c!25041) b!134539))

(assert (= (and b!134536 (not c!25041)) b!134541))

(assert (= (or b!134539 b!134541) bm!14823))

(assert (= (or b!134538 bm!14823) bm!14821))

(assert (= (or b!134542 bm!14821) bm!14822))

(assert (= (and bm!14822 c!25042) b!134537))

(assert (= (and bm!14822 (not c!25042)) b!134540))

(assert (= (and d!41457 res!64693) b!134543))

(assert (= (and b!134543 res!64692) b!134535))

(declare-fun m!159897 () Bool)

(assert (=> d!41457 m!159897))

(declare-fun m!159899 () Bool)

(assert (=> d!41457 m!159899))

(declare-fun m!159901 () Bool)

(assert (=> bm!14822 m!159901))

(declare-fun m!159903 () Bool)

(assert (=> b!134537 m!159903))

(declare-fun m!159905 () Bool)

(assert (=> b!134535 m!159905))

(declare-fun m!159907 () Bool)

(assert (=> b!134543 m!159907))

(assert (=> d!40491 d!41457))

(declare-fun d!41459 () Bool)

(assert (=> d!41459 (= (apply!116 lt!69919 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69919) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5610 () Bool)

(assert (= bs!5610 d!41459))

(declare-fun m!159909 () Bool)

(assert (=> bs!5610 m!159909))

(assert (=> bs!5610 m!159909))

(declare-fun m!159911 () Bool)

(assert (=> bs!5610 m!159911))

(assert (=> b!133626 d!41459))

(declare-fun d!41461 () Bool)

(assert (=> d!41461 (= (apply!116 lt!69892 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1486 (getValueByKey!172 (toList!869 lt!69892) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!5611 () Bool)

(assert (= bs!5611 d!41461))

(assert (=> bs!5611 m!157811))

(assert (=> bs!5611 m!158947))

(assert (=> bs!5611 m!158947))

(declare-fun m!159913 () Bool)

(assert (=> bs!5611 m!159913))

(assert (=> b!133595 d!41461))

(declare-fun d!41463 () Bool)

(declare-fun c!25044 () Bool)

(assert (=> d!41463 (= c!25044 ((_ is ValueCellFull!1095) (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!87637 () V!3483)

(assert (=> d!41463 (= (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87637)))

(declare-fun b!134545 () Bool)

(assert (=> b!134545 (= e!87637 (get!1484 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134546 () Bool)

(assert (=> b!134546 (= e!87637 (get!1485 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41463 c!25044) b!134545))

(assert (= (and d!41463 (not c!25044)) b!134546))

(assert (=> b!134545 m!157815))

(assert (=> b!134545 m!155893))

(declare-fun m!159915 () Bool)

(assert (=> b!134545 m!159915))

(assert (=> b!134546 m!157815))

(assert (=> b!134546 m!155893))

(declare-fun m!159917 () Bool)

(assert (=> b!134546 m!159917))

(assert (=> b!133595 d!41463))

(declare-fun b!134547 () Bool)

(declare-fun e!87639 () (_ BitVec 32))

(declare-fun e!87638 () (_ BitVec 32))

(assert (=> b!134547 (= e!87639 e!87638)))

(declare-fun c!25045 () Bool)

(assert (=> b!134547 (= c!25045 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134548 () Bool)

(declare-fun call!14827 () (_ BitVec 32))

(assert (=> b!134548 (= e!87638 (bvadd #b00000000000000000000000000000001 call!14827))))

(declare-fun b!134549 () Bool)

(assert (=> b!134549 (= e!87638 call!14827)))

(declare-fun d!41465 () Bool)

(declare-fun lt!70421 () (_ BitVec 32))

(assert (=> d!41465 (and (bvsge lt!70421 #b00000000000000000000000000000000) (bvsle lt!70421 (bvsub (size!2530 (_keys!4614 (_2!1325 lt!69179))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!41465 (= lt!70421 e!87639)))

(declare-fun c!25046 () Bool)

(assert (=> d!41465 (= c!25046 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(assert (=> d!41465 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (_2!1325 lt!69179)))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2530 (_keys!4614 (_2!1325 lt!69179))) (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(assert (=> d!41465 (= (arrayCountValidKeys!0 (_keys!4614 (_2!1325 lt!69179)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (_2!1325 lt!69179)))) lt!70421)))

(declare-fun b!134550 () Bool)

(assert (=> b!134550 (= e!87639 #b00000000000000000000000000000000)))

(declare-fun bm!14824 () Bool)

(assert (=> bm!14824 (= call!14827 (arrayCountValidKeys!0 (_keys!4614 (_2!1325 lt!69179)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(assert (= (and d!41465 c!25046) b!134550))

(assert (= (and d!41465 (not c!25046)) b!134547))

(assert (= (and b!134547 c!25045) b!134548))

(assert (= (and b!134547 (not c!25045)) b!134549))

(assert (= (or b!134548 b!134549) bm!14824))

(assert (=> b!134547 m!159019))

(assert (=> b!134547 m!159019))

(assert (=> b!134547 m!159023))

(declare-fun m!159919 () Bool)

(assert (=> bm!14824 m!159919))

(assert (=> bm!14768 d!41465))

(assert (=> d!40497 d!40491))

(declare-fun d!41467 () Bool)

(assert (=> d!41467 (= (apply!116 (+!175 lt!69470 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!69489) (apply!116 lt!69470 lt!69489))))

(assert (=> d!41467 true))

(declare-fun _$34!980 () Unit!4135)

(assert (=> d!41467 (= (choose!822 lt!69470 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) lt!69489) _$34!980)))

(declare-fun bs!5612 () Bool)

(assert (= bs!5612 d!41467))

(assert (=> bs!5612 m!156591))

(assert (=> bs!5612 m!156591))

(assert (=> bs!5612 m!156599))

(assert (=> bs!5612 m!156589))

(assert (=> d!40497 d!41467))

(assert (=> d!40497 d!40499))

(declare-fun d!41469 () Bool)

(declare-fun e!87640 () Bool)

(assert (=> d!41469 e!87640))

(declare-fun res!64694 () Bool)

(assert (=> d!41469 (=> res!64694 e!87640)))

(declare-fun lt!70425 () Bool)

(assert (=> d!41469 (= res!64694 (not lt!70425))))

(declare-fun lt!70422 () Bool)

(assert (=> d!41469 (= lt!70425 lt!70422)))

(declare-fun lt!70424 () Unit!4135)

(declare-fun e!87641 () Unit!4135)

(assert (=> d!41469 (= lt!70424 e!87641)))

(declare-fun c!25047 () Bool)

(assert (=> d!41469 (= c!25047 lt!70422)))

(assert (=> d!41469 (= lt!70422 (containsKey!176 (toList!869 lt!69470) lt!69489))))

(assert (=> d!41469 (= (contains!899 lt!69470 lt!69489) lt!70425)))

(declare-fun b!134551 () Bool)

(declare-fun lt!70423 () Unit!4135)

(assert (=> b!134551 (= e!87641 lt!70423)))

(assert (=> b!134551 (= lt!70423 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69470) lt!69489))))

(assert (=> b!134551 (isDefined!125 (getValueByKey!172 (toList!869 lt!69470) lt!69489))))

(declare-fun b!134552 () Bool)

(declare-fun Unit!4224 () Unit!4135)

(assert (=> b!134552 (= e!87641 Unit!4224)))

(declare-fun b!134553 () Bool)

(assert (=> b!134553 (= e!87640 (isDefined!125 (getValueByKey!172 (toList!869 lt!69470) lt!69489)))))

(assert (= (and d!41469 c!25047) b!134551))

(assert (= (and d!41469 (not c!25047)) b!134552))

(assert (= (and d!41469 (not res!64694)) b!134553))

(declare-fun m!159921 () Bool)

(assert (=> d!41469 m!159921))

(declare-fun m!159923 () Bool)

(assert (=> b!134551 m!159923))

(assert (=> b!134551 m!157175))

(assert (=> b!134551 m!157175))

(declare-fun m!159925 () Bool)

(assert (=> b!134551 m!159925))

(assert (=> b!134553 m!157175))

(assert (=> b!134553 m!157175))

(assert (=> b!134553 m!159925))

(assert (=> d!40497 d!41469))

(assert (=> d!40497 d!40503))

(declare-fun d!41471 () Bool)

(declare-fun e!87642 () Bool)

(assert (=> d!41471 e!87642))

(declare-fun res!64695 () Bool)

(assert (=> d!41471 (=> res!64695 e!87642)))

(declare-fun lt!70429 () Bool)

(assert (=> d!41471 (= res!64695 (not lt!70429))))

(declare-fun lt!70426 () Bool)

(assert (=> d!41471 (= lt!70429 lt!70426)))

(declare-fun lt!70428 () Unit!4135)

(declare-fun e!87643 () Unit!4135)

(assert (=> d!41471 (= lt!70428 e!87643)))

(declare-fun c!25048 () Bool)

(assert (=> d!41471 (= c!25048 lt!70426)))

(assert (=> d!41471 (= lt!70426 (containsKey!176 (toList!869 lt!69604) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))

(assert (=> d!41471 (= (contains!899 lt!69604 (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))) lt!70429)))

(declare-fun b!134554 () Bool)

(declare-fun lt!70427 () Unit!4135)

(assert (=> b!134554 (= e!87643 lt!70427)))

(assert (=> b!134554 (= lt!70427 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69604) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))

(assert (=> b!134554 (isDefined!125 (getValueByKey!172 (toList!869 lt!69604) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))

(declare-fun b!134555 () Bool)

(declare-fun Unit!4225 () Unit!4135)

(assert (=> b!134555 (= e!87643 Unit!4225)))

(declare-fun b!134556 () Bool)

(assert (=> b!134556 (= e!87642 (isDefined!125 (getValueByKey!172 (toList!869 lt!69604) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))))))

(assert (= (and d!41471 c!25048) b!134554))

(assert (= (and d!41471 (not c!25048)) b!134555))

(assert (= (and d!41471 (not res!64695)) b!134556))

(declare-fun m!159927 () Bool)

(assert (=> d!41471 m!159927))

(declare-fun m!159929 () Bool)

(assert (=> b!134554 m!159929))

(assert (=> b!134554 m!156979))

(assert (=> b!134554 m!156979))

(declare-fun m!159931 () Bool)

(assert (=> b!134554 m!159931))

(assert (=> b!134556 m!156979))

(assert (=> b!134556 m!156979))

(assert (=> b!134556 m!159931))

(assert (=> d!40445 d!41471))

(declare-fun e!87645 () Option!178)

(declare-fun b!134559 () Bool)

(assert (=> b!134559 (= e!87645 (getValueByKey!172 (t!6167 lt!69606) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))

(declare-fun b!134560 () Bool)

(assert (=> b!134560 (= e!87645 None!176)))

(declare-fun d!41473 () Bool)

(declare-fun c!25049 () Bool)

(assert (=> d!41473 (= c!25049 (and ((_ is Cons!1712) lt!69606) (= (_1!1324 (h!2317 lt!69606)) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))))))

(declare-fun e!87644 () Option!178)

(assert (=> d!41473 (= (getValueByKey!172 lt!69606 (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))) e!87644)))

(declare-fun b!134557 () Bool)

(assert (=> b!134557 (= e!87644 (Some!177 (_2!1324 (h!2317 lt!69606))))))

(declare-fun b!134558 () Bool)

(assert (=> b!134558 (= e!87644 e!87645)))

(declare-fun c!25050 () Bool)

(assert (=> b!134558 (= c!25050 (and ((_ is Cons!1712) lt!69606) (not (= (_1!1324 (h!2317 lt!69606)) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41473 c!25049) b!134557))

(assert (= (and d!41473 (not c!25049)) b!134558))

(assert (= (and b!134558 c!25050) b!134559))

(assert (= (and b!134558 (not c!25050)) b!134560))

(declare-fun m!159933 () Bool)

(assert (=> b!134559 m!159933))

(assert (=> d!40445 d!41473))

(declare-fun d!41475 () Bool)

(assert (=> d!41475 (= (getValueByKey!172 lt!69606 (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))

(declare-fun lt!70430 () Unit!4135)

(assert (=> d!41475 (= lt!70430 (choose!827 lt!69606 (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))

(declare-fun e!87646 () Bool)

(assert (=> d!41475 e!87646))

(declare-fun res!64696 () Bool)

(assert (=> d!41475 (=> (not res!64696) (not e!87646))))

(assert (=> d!41475 (= res!64696 (isStrictlySorted!322 lt!69606))))

(assert (=> d!41475 (= (lemmaContainsTupThenGetReturnValue!87 lt!69606 (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))) lt!70430)))

(declare-fun b!134561 () Bool)

(declare-fun res!64697 () Bool)

(assert (=> b!134561 (=> (not res!64697) (not e!87646))))

(assert (=> b!134561 (= res!64697 (containsKey!176 lt!69606 (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))

(declare-fun b!134562 () Bool)

(assert (=> b!134562 (= e!87646 (contains!902 lt!69606 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))))))

(assert (= (and d!41475 res!64696) b!134561))

(assert (= (and b!134561 res!64697) b!134562))

(assert (=> d!41475 m!156973))

(declare-fun m!159935 () Bool)

(assert (=> d!41475 m!159935))

(declare-fun m!159937 () Bool)

(assert (=> d!41475 m!159937))

(declare-fun m!159939 () Bool)

(assert (=> b!134561 m!159939))

(declare-fun m!159941 () Bool)

(assert (=> b!134562 m!159941))

(assert (=> d!40445 d!41475))

(declare-fun bm!14825 () Bool)

(declare-fun call!14829 () List!1716)

(declare-fun call!14830 () List!1716)

(assert (=> bm!14825 (= call!14829 call!14830)))

(declare-fun d!41477 () Bool)

(declare-fun e!87650 () Bool)

(assert (=> d!41477 e!87650))

(declare-fun res!64699 () Bool)

(assert (=> d!41477 (=> (not res!64699) (not e!87650))))

(declare-fun lt!70431 () List!1716)

(assert (=> d!41477 (= res!64699 (isStrictlySorted!322 lt!70431))))

(declare-fun e!87648 () List!1716)

(assert (=> d!41477 (= lt!70431 e!87648)))

(declare-fun c!25054 () Bool)

(assert (=> d!41477 (= c!25054 (and ((_ is Cons!1712) (toList!869 lt!69450)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69450))) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))))))

(assert (=> d!41477 (isStrictlySorted!322 (toList!869 lt!69450))))

(assert (=> d!41477 (= (insertStrictlySorted!90 (toList!869 lt!69450) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))) lt!70431)))

(declare-fun b!134563 () Bool)

(assert (=> b!134563 (= e!87650 (contains!902 lt!70431 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))))))

(declare-fun c!25052 () Bool)

(declare-fun b!134564 () Bool)

(assert (=> b!134564 (= c!25052 (and ((_ is Cons!1712) (toList!869 lt!69450)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69450))) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))))))

(declare-fun e!87649 () List!1716)

(declare-fun e!87651 () List!1716)

(assert (=> b!134564 (= e!87649 e!87651)))

(declare-fun b!134565 () Bool)

(declare-fun e!87647 () List!1716)

(assert (=> b!134565 (= e!87647 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69450)) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))

(declare-fun b!134566 () Bool)

(assert (=> b!134566 (= e!87649 call!14829)))

(declare-fun b!134567 () Bool)

(declare-fun call!14828 () List!1716)

(assert (=> b!134567 (= e!87651 call!14828)))

(declare-fun c!25051 () Bool)

(declare-fun b!134568 () Bool)

(assert (=> b!134568 (= e!87647 (ite c!25051 (t!6167 (toList!869 lt!69450)) (ite c!25052 (Cons!1712 (h!2317 (toList!869 lt!69450)) (t!6167 (toList!869 lt!69450))) Nil!1713)))))

(declare-fun b!134569 () Bool)

(assert (=> b!134569 (= e!87651 call!14828)))

(declare-fun b!134570 () Bool)

(assert (=> b!134570 (= e!87648 call!14830)))

(declare-fun bm!14826 () Bool)

(assert (=> bm!14826 (= call!14830 ($colon$colon!92 e!87647 (ite c!25054 (h!2317 (toList!869 lt!69450)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))))

(declare-fun c!25053 () Bool)

(assert (=> bm!14826 (= c!25053 c!25054)))

(declare-fun bm!14827 () Bool)

(assert (=> bm!14827 (= call!14828 call!14829)))

(declare-fun b!134571 () Bool)

(declare-fun res!64698 () Bool)

(assert (=> b!134571 (=> (not res!64698) (not e!87650))))

(assert (=> b!134571 (= res!64698 (containsKey!176 lt!70431 (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))

(declare-fun b!134572 () Bool)

(assert (=> b!134572 (= e!87648 e!87649)))

(assert (=> b!134572 (= c!25051 (and ((_ is Cons!1712) (toList!869 lt!69450)) (= (_1!1324 (h!2317 (toList!869 lt!69450))) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))))))

(assert (= (and d!41477 c!25054) b!134570))

(assert (= (and d!41477 (not c!25054)) b!134572))

(assert (= (and b!134572 c!25051) b!134566))

(assert (= (and b!134572 (not c!25051)) b!134564))

(assert (= (and b!134564 c!25052) b!134567))

(assert (= (and b!134564 (not c!25052)) b!134569))

(assert (= (or b!134567 b!134569) bm!14827))

(assert (= (or b!134566 bm!14827) bm!14825))

(assert (= (or b!134570 bm!14825) bm!14826))

(assert (= (and bm!14826 c!25053) b!134565))

(assert (= (and bm!14826 (not c!25053)) b!134568))

(assert (= (and d!41477 res!64699) b!134571))

(assert (= (and b!134571 res!64698) b!134563))

(declare-fun m!159943 () Bool)

(assert (=> d!41477 m!159943))

(declare-fun m!159945 () Bool)

(assert (=> d!41477 m!159945))

(declare-fun m!159947 () Bool)

(assert (=> bm!14826 m!159947))

(declare-fun m!159949 () Bool)

(assert (=> b!134565 m!159949))

(declare-fun m!159951 () Bool)

(assert (=> b!134563 m!159951))

(declare-fun m!159953 () Bool)

(assert (=> b!134571 m!159953))

(assert (=> d!40445 d!41477))

(declare-fun d!41479 () Bool)

(declare-fun res!64700 () Bool)

(declare-fun e!87652 () Bool)

(assert (=> d!41479 (=> res!64700 e!87652)))

(assert (=> d!41479 (= res!64700 (and ((_ is Cons!1712) (toList!869 lt!69464)) (= (_1!1324 (h!2317 (toList!869 lt!69464))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41479 (= (containsKey!176 (toList!869 lt!69464) #b0000000000000000000000000000000000000000000000000000000000000000) e!87652)))

(declare-fun b!134573 () Bool)

(declare-fun e!87653 () Bool)

(assert (=> b!134573 (= e!87652 e!87653)))

(declare-fun res!64701 () Bool)

(assert (=> b!134573 (=> (not res!64701) (not e!87653))))

(assert (=> b!134573 (= res!64701 (and (or (not ((_ is Cons!1712) (toList!869 lt!69464))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69464))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1712) (toList!869 lt!69464)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69464))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134574 () Bool)

(assert (=> b!134574 (= e!87653 (containsKey!176 (t!6167 (toList!869 lt!69464)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41479 (not res!64700)) b!134573))

(assert (= (and b!134573 res!64701) b!134574))

(declare-fun m!159955 () Bool)

(assert (=> b!134574 m!159955))

(assert (=> d!40649 d!41479))

(declare-fun d!41481 () Bool)

(declare-fun lt!70432 () Bool)

(assert (=> d!41481 (= lt!70432 (select (content!133 (toList!869 lt!69988)) (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))))

(declare-fun e!87655 () Bool)

(assert (=> d!41481 (= lt!70432 e!87655)))

(declare-fun res!64702 () Bool)

(assert (=> d!41481 (=> (not res!64702) (not e!87655))))

(assert (=> d!41481 (= res!64702 ((_ is Cons!1712) (toList!869 lt!69988)))))

(assert (=> d!41481 (= (contains!902 (toList!869 lt!69988) (tuple2!2627 lt!69263 (minValue!2720 newMap!16))) lt!70432)))

(declare-fun b!134575 () Bool)

(declare-fun e!87654 () Bool)

(assert (=> b!134575 (= e!87655 e!87654)))

(declare-fun res!64703 () Bool)

(assert (=> b!134575 (=> res!64703 e!87654)))

(assert (=> b!134575 (= res!64703 (= (h!2317 (toList!869 lt!69988)) (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))))

(declare-fun b!134576 () Bool)

(assert (=> b!134576 (= e!87654 (contains!902 (t!6167 (toList!869 lt!69988)) (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))))

(assert (= (and d!41481 res!64702) b!134575))

(assert (= (and b!134575 (not res!64703)) b!134576))

(declare-fun m!159957 () Bool)

(assert (=> d!41481 m!159957))

(declare-fun m!159959 () Bool)

(assert (=> d!41481 m!159959))

(declare-fun m!159961 () Bool)

(assert (=> b!134576 m!159961))

(assert (=> b!133756 d!41481))

(declare-fun d!41483 () Bool)

(declare-fun res!64704 () Bool)

(declare-fun e!87656 () Bool)

(assert (=> d!41483 (=> res!64704 e!87656)))

(assert (=> d!41483 (= res!64704 (and ((_ is Cons!1712) (toList!869 lt!69418)) (= (_1!1324 (h!2317 (toList!869 lt!69418))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41483 (= (containsKey!176 (toList!869 lt!69418) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87656)))

(declare-fun b!134577 () Bool)

(declare-fun e!87657 () Bool)

(assert (=> b!134577 (= e!87656 e!87657)))

(declare-fun res!64705 () Bool)

(assert (=> b!134577 (=> (not res!64705) (not e!87657))))

(assert (=> b!134577 (= res!64705 (and (or (not ((_ is Cons!1712) (toList!869 lt!69418))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69418))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Cons!1712) (toList!869 lt!69418)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69418))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134578 () Bool)

(assert (=> b!134578 (= e!87657 (containsKey!176 (t!6167 (toList!869 lt!69418)) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!41483 (not res!64704)) b!134577))

(assert (= (and b!134577 res!64705) b!134578))

(declare-fun m!159963 () Bool)

(assert (=> b!134578 m!159963))

(assert (=> d!40829 d!41483))

(declare-fun d!41485 () Bool)

(assert (=> d!41485 (isDefined!125 (getValueByKey!172 (toList!869 lt!69464) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!70433 () Unit!4135)

(assert (=> d!41485 (= lt!70433 (choose!817 (toList!869 lt!69464) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!87658 () Bool)

(assert (=> d!41485 e!87658))

(declare-fun res!64706 () Bool)

(assert (=> d!41485 (=> (not res!64706) (not e!87658))))

(assert (=> d!41485 (= res!64706 (isStrictlySorted!322 (toList!869 lt!69464)))))

(assert (=> d!41485 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69464) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70433)))

(declare-fun b!134579 () Bool)

(assert (=> b!134579 (= e!87658 (containsKey!176 (toList!869 lt!69464) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41485 res!64706) b!134579))

(assert (=> d!41485 m!156163))

(assert (=> d!41485 m!156697))

(assert (=> d!41485 m!156697))

(assert (=> d!41485 m!156699))

(assert (=> d!41485 m!156163))

(declare-fun m!159965 () Bool)

(assert (=> d!41485 m!159965))

(declare-fun m!159967 () Bool)

(assert (=> d!41485 m!159967))

(assert (=> b!134579 m!156163))

(assert (=> b!134579 m!156693))

(assert (=> b!132988 d!41485))

(declare-fun d!41487 () Bool)

(assert (=> d!41487 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69464) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69464) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5613 () Bool)

(assert (= bs!5613 d!41487))

(assert (=> bs!5613 m!156697))

(declare-fun m!159969 () Bool)

(assert (=> bs!5613 m!159969))

(assert (=> b!132988 d!41487))

(declare-fun b!134582 () Bool)

(declare-fun e!87660 () Option!178)

(assert (=> b!134582 (= e!87660 (getValueByKey!172 (t!6167 (toList!869 lt!69464)) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134583 () Bool)

(assert (=> b!134583 (= e!87660 None!176)))

(declare-fun d!41489 () Bool)

(declare-fun c!25055 () Bool)

(assert (=> d!41489 (= c!25055 (and ((_ is Cons!1712) (toList!869 lt!69464)) (= (_1!1324 (h!2317 (toList!869 lt!69464))) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun e!87659 () Option!178)

(assert (=> d!41489 (= (getValueByKey!172 (toList!869 lt!69464) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) e!87659)))

(declare-fun b!134580 () Bool)

(assert (=> b!134580 (= e!87659 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69464)))))))

(declare-fun b!134581 () Bool)

(assert (=> b!134581 (= e!87659 e!87660)))

(declare-fun c!25056 () Bool)

(assert (=> b!134581 (= c!25056 (and ((_ is Cons!1712) (toList!869 lt!69464)) (not (= (_1!1324 (h!2317 (toList!869 lt!69464))) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))))

(assert (= (and d!41489 c!25055) b!134580))

(assert (= (and d!41489 (not c!25055)) b!134581))

(assert (= (and b!134581 c!25056) b!134582))

(assert (= (and b!134581 (not c!25056)) b!134583))

(assert (=> b!134582 m!156163))

(declare-fun m!159971 () Bool)

(assert (=> b!134582 m!159971))

(assert (=> b!132988 d!41489))

(declare-fun d!41491 () Bool)

(declare-fun e!87661 () Bool)

(assert (=> d!41491 e!87661))

(declare-fun res!64707 () Bool)

(assert (=> d!41491 (=> res!64707 e!87661)))

(declare-fun lt!70437 () Bool)

(assert (=> d!41491 (= res!64707 (not lt!70437))))

(declare-fun lt!70434 () Bool)

(assert (=> d!41491 (= lt!70437 lt!70434)))

(declare-fun lt!70436 () Unit!4135)

(declare-fun e!87662 () Unit!4135)

(assert (=> d!41491 (= lt!70436 e!87662)))

(declare-fun c!25057 () Bool)

(assert (=> d!41491 (= c!25057 lt!70434)))

(assert (=> d!41491 (= lt!70434 (containsKey!176 (toList!869 lt!69666) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41491 (= (contains!899 lt!69666 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70437)))

(declare-fun b!134584 () Bool)

(declare-fun lt!70435 () Unit!4135)

(assert (=> b!134584 (= e!87662 lt!70435)))

(assert (=> b!134584 (= lt!70435 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69666) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134584 (isDefined!125 (getValueByKey!172 (toList!869 lt!69666) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134585 () Bool)

(declare-fun Unit!4226 () Unit!4135)

(assert (=> b!134585 (= e!87662 Unit!4226)))

(declare-fun b!134586 () Bool)

(assert (=> b!134586 (= e!87661 (isDefined!125 (getValueByKey!172 (toList!869 lt!69666) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41491 c!25057) b!134584))

(assert (= (and d!41491 (not c!25057)) b!134585))

(assert (= (and d!41491 (not res!64707)) b!134586))

(assert (=> d!41491 m!156163))

(declare-fun m!159973 () Bool)

(assert (=> d!41491 m!159973))

(assert (=> b!134584 m!156163))

(declare-fun m!159975 () Bool)

(assert (=> b!134584 m!159975))

(assert (=> b!134584 m!156163))

(declare-fun m!159977 () Bool)

(assert (=> b!134584 m!159977))

(assert (=> b!134584 m!159977))

(declare-fun m!159979 () Bool)

(assert (=> b!134584 m!159979))

(assert (=> b!134586 m!156163))

(assert (=> b!134586 m!159977))

(assert (=> b!134586 m!159977))

(assert (=> b!134586 m!159979))

(assert (=> b!133249 d!41491))

(declare-fun d!41493 () Bool)

(declare-fun res!64708 () Bool)

(declare-fun e!87663 () Bool)

(assert (=> d!41493 (=> res!64708 e!87663)))

(assert (=> d!41493 (= res!64708 (and ((_ is Cons!1712) (toList!869 lt!69209)) (= (_1!1324 (h!2317 (toList!869 lt!69209))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (=> d!41493 (= (containsKey!176 (toList!869 lt!69209) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) e!87663)))

(declare-fun b!134587 () Bool)

(declare-fun e!87664 () Bool)

(assert (=> b!134587 (= e!87663 e!87664)))

(declare-fun res!64709 () Bool)

(assert (=> b!134587 (=> (not res!64709) (not e!87664))))

(assert (=> b!134587 (= res!64709 (and (or (not ((_ is Cons!1712) (toList!869 lt!69209))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69209))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) ((_ is Cons!1712) (toList!869 lt!69209)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69209))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun b!134588 () Bool)

(assert (=> b!134588 (= e!87664 (containsKey!176 (t!6167 (toList!869 lt!69209)) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!41493 (not res!64708)) b!134587))

(assert (= (and b!134587 res!64709) b!134588))

(declare-fun m!159981 () Bool)

(assert (=> b!134588 m!159981))

(assert (=> d!40459 d!41493))

(declare-fun d!41495 () Bool)

(declare-fun res!64710 () Bool)

(declare-fun e!87665 () Bool)

(assert (=> d!41495 (=> res!64710 e!87665)))

(assert (=> d!41495 (= res!64710 (or ((_ is Nil!1713) lt!69780) ((_ is Nil!1713) (t!6167 lt!69780))))))

(assert (=> d!41495 (= (isStrictlySorted!322 lt!69780) e!87665)))

(declare-fun b!134589 () Bool)

(declare-fun e!87666 () Bool)

(assert (=> b!134589 (= e!87665 e!87666)))

(declare-fun res!64711 () Bool)

(assert (=> b!134589 (=> (not res!64711) (not e!87666))))

(assert (=> b!134589 (= res!64711 (bvslt (_1!1324 (h!2317 lt!69780)) (_1!1324 (h!2317 (t!6167 lt!69780)))))))

(declare-fun b!134590 () Bool)

(assert (=> b!134590 (= e!87666 (isStrictlySorted!322 (t!6167 lt!69780)))))

(assert (= (and d!41495 (not res!64710)) b!134589))

(assert (= (and b!134589 res!64711) b!134590))

(declare-fun m!159983 () Bool)

(assert (=> b!134590 m!159983))

(assert (=> d!40579 d!41495))

(declare-fun d!41497 () Bool)

(declare-fun res!64712 () Bool)

(declare-fun e!87667 () Bool)

(assert (=> d!41497 (=> res!64712 e!87667)))

(assert (=> d!41497 (= res!64712 (or ((_ is Nil!1713) (toList!869 call!14544)) ((_ is Nil!1713) (t!6167 (toList!869 call!14544)))))))

(assert (=> d!41497 (= (isStrictlySorted!322 (toList!869 call!14544)) e!87667)))

(declare-fun b!134591 () Bool)

(declare-fun e!87668 () Bool)

(assert (=> b!134591 (= e!87667 e!87668)))

(declare-fun res!64713 () Bool)

(assert (=> b!134591 (=> (not res!64713) (not e!87668))))

(assert (=> b!134591 (= res!64713 (bvslt (_1!1324 (h!2317 (toList!869 call!14544))) (_1!1324 (h!2317 (t!6167 (toList!869 call!14544))))))))

(declare-fun b!134592 () Bool)

(assert (=> b!134592 (= e!87668 (isStrictlySorted!322 (t!6167 (toList!869 call!14544))))))

(assert (= (and d!41497 (not res!64712)) b!134591))

(assert (= (and b!134591 res!64713) b!134592))

(declare-fun m!159985 () Bool)

(assert (=> b!134592 m!159985))

(assert (=> d!40579 d!41497))

(declare-fun b!134595 () Bool)

(declare-fun e!87670 () Option!178)

(assert (=> b!134595 (= e!87670 (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69081))) lt!69094))))

(declare-fun b!134596 () Bool)

(assert (=> b!134596 (= e!87670 None!176)))

(declare-fun d!41499 () Bool)

(declare-fun c!25058 () Bool)

(assert (=> d!41499 (= c!25058 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69081))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69081)))) lt!69094)))))

(declare-fun e!87669 () Option!178)

(assert (=> d!41499 (= (getValueByKey!172 (t!6167 (toList!869 lt!69081)) lt!69094) e!87669)))

(declare-fun b!134593 () Bool)

(assert (=> b!134593 (= e!87669 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 lt!69081))))))))

(declare-fun b!134594 () Bool)

(assert (=> b!134594 (= e!87669 e!87670)))

(declare-fun c!25059 () Bool)

(assert (=> b!134594 (= c!25059 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69081))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69081)))) lt!69094))))))

(assert (= (and d!41499 c!25058) b!134593))

(assert (= (and d!41499 (not c!25058)) b!134594))

(assert (= (and b!134594 c!25059) b!134595))

(assert (= (and b!134594 (not c!25059)) b!134596))

(declare-fun m!159987 () Bool)

(assert (=> b!134595 m!159987))

(assert (=> b!133544 d!41499))

(declare-fun d!41501 () Bool)

(assert (=> d!41501 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5614 () Bool)

(assert (= bs!5614 d!41501))

(assert (=> bs!5614 m!157061))

(declare-fun m!159989 () Bool)

(assert (=> bs!5614 m!159989))

(assert (=> b!133198 d!41501))

(declare-fun b!134599 () Bool)

(declare-fun e!87672 () Option!178)

(assert (=> b!134599 (= e!87672 (getValueByKey!172 (t!6167 (toList!869 lt!69486)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134600 () Bool)

(assert (=> b!134600 (= e!87672 None!176)))

(declare-fun d!41503 () Bool)

(declare-fun c!25060 () Bool)

(assert (=> d!41503 (= c!25060 (and ((_ is Cons!1712) (toList!869 lt!69486)) (= (_1!1324 (h!2317 (toList!869 lt!69486))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87671 () Option!178)

(assert (=> d!41503 (= (getValueByKey!172 (toList!869 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000) e!87671)))

(declare-fun b!134597 () Bool)

(assert (=> b!134597 (= e!87671 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69486)))))))

(declare-fun b!134598 () Bool)

(assert (=> b!134598 (= e!87671 e!87672)))

(declare-fun c!25061 () Bool)

(assert (=> b!134598 (= c!25061 (and ((_ is Cons!1712) (toList!869 lt!69486)) (not (= (_1!1324 (h!2317 (toList!869 lt!69486))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!41503 c!25060) b!134597))

(assert (= (and d!41503 (not c!25060)) b!134598))

(assert (= (and b!134598 c!25061) b!134599))

(assert (= (and b!134598 (not c!25061)) b!134600))

(declare-fun m!159991 () Bool)

(assert (=> b!134599 m!159991))

(assert (=> b!133198 d!41503))

(declare-fun d!41505 () Bool)

(assert (=> d!41505 (= (validKeyInArray!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133370 d!41505))

(declare-fun d!41507 () Bool)

(declare-fun e!87673 () Bool)

(assert (=> d!41507 e!87673))

(declare-fun res!64714 () Bool)

(assert (=> d!41507 (=> res!64714 e!87673)))

(declare-fun lt!70441 () Bool)

(assert (=> d!41507 (= res!64714 (not lt!70441))))

(declare-fun lt!70438 () Bool)

(assert (=> d!41507 (= lt!70441 lt!70438)))

(declare-fun lt!70440 () Unit!4135)

(declare-fun e!87674 () Unit!4135)

(assert (=> d!41507 (= lt!70440 e!87674)))

(declare-fun c!25062 () Bool)

(assert (=> d!41507 (= c!25062 lt!70438)))

(assert (=> d!41507 (= lt!70438 (containsKey!176 (toList!869 lt!69883) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41507 (= (contains!899 lt!69883 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70441)))

(declare-fun b!134601 () Bool)

(declare-fun lt!70439 () Unit!4135)

(assert (=> b!134601 (= e!87674 lt!70439)))

(assert (=> b!134601 (= lt!70439 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69883) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134601 (isDefined!125 (getValueByKey!172 (toList!869 lt!69883) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134602 () Bool)

(declare-fun Unit!4227 () Unit!4135)

(assert (=> b!134602 (= e!87674 Unit!4227)))

(declare-fun b!134603 () Bool)

(assert (=> b!134603 (= e!87673 (isDefined!125 (getValueByKey!172 (toList!869 lt!69883) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41507 c!25062) b!134601))

(assert (= (and d!41507 (not c!25062)) b!134602))

(assert (= (and d!41507 (not res!64714)) b!134603))

(declare-fun m!159993 () Bool)

(assert (=> d!41507 m!159993))

(declare-fun m!159995 () Bool)

(assert (=> b!134601 m!159995))

(declare-fun m!159997 () Bool)

(assert (=> b!134601 m!159997))

(assert (=> b!134601 m!159997))

(declare-fun m!159999 () Bool)

(assert (=> b!134601 m!159999))

(assert (=> b!134603 m!159997))

(assert (=> b!134603 m!159997))

(assert (=> b!134603 m!159999))

(assert (=> bm!14740 d!41507))

(assert (=> d!40455 d!40427))

(assert (=> d!40455 d!40431))

(declare-fun d!41509 () Bool)

(assert (=> d!41509 (= (apply!116 (+!175 lt!69448 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))) lt!69467) (apply!116 lt!69448 lt!69467))))

(assert (=> d!41509 true))

(declare-fun _$34!981 () Unit!4135)

(assert (=> d!41509 (= (choose!822 lt!69448 lt!69451 (minValue!2720 newMap!16) lt!69467) _$34!981)))

(declare-fun bs!5615 () Bool)

(assert (= bs!5615 d!41509))

(assert (=> bs!5615 m!156537))

(assert (=> bs!5615 m!156537))

(assert (=> bs!5615 m!156545))

(assert (=> bs!5615 m!156535))

(assert (=> d!40455 d!41509))

(declare-fun d!41511 () Bool)

(declare-fun e!87675 () Bool)

(assert (=> d!41511 e!87675))

(declare-fun res!64715 () Bool)

(assert (=> d!41511 (=> res!64715 e!87675)))

(declare-fun lt!70445 () Bool)

(assert (=> d!41511 (= res!64715 (not lt!70445))))

(declare-fun lt!70442 () Bool)

(assert (=> d!41511 (= lt!70445 lt!70442)))

(declare-fun lt!70444 () Unit!4135)

(declare-fun e!87676 () Unit!4135)

(assert (=> d!41511 (= lt!70444 e!87676)))

(declare-fun c!25063 () Bool)

(assert (=> d!41511 (= c!25063 lt!70442)))

(assert (=> d!41511 (= lt!70442 (containsKey!176 (toList!869 lt!69448) lt!69467))))

(assert (=> d!41511 (= (contains!899 lt!69448 lt!69467) lt!70445)))

(declare-fun b!134604 () Bool)

(declare-fun lt!70443 () Unit!4135)

(assert (=> b!134604 (= e!87676 lt!70443)))

(assert (=> b!134604 (= lt!70443 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69448) lt!69467))))

(assert (=> b!134604 (isDefined!125 (getValueByKey!172 (toList!869 lt!69448) lt!69467))))

(declare-fun b!134605 () Bool)

(declare-fun Unit!4228 () Unit!4135)

(assert (=> b!134605 (= e!87676 Unit!4228)))

(declare-fun b!134606 () Bool)

(assert (=> b!134606 (= e!87675 (isDefined!125 (getValueByKey!172 (toList!869 lt!69448) lt!69467)))))

(assert (= (and d!41511 c!25063) b!134604))

(assert (= (and d!41511 (not c!25063)) b!134605))

(assert (= (and d!41511 (not res!64715)) b!134606))

(declare-fun m!160001 () Bool)

(assert (=> d!41511 m!160001))

(declare-fun m!160003 () Bool)

(assert (=> b!134604 m!160003))

(assert (=> b!134604 m!156923))

(assert (=> b!134604 m!156923))

(declare-fun m!160005 () Bool)

(assert (=> b!134604 m!160005))

(assert (=> b!134606 m!156923))

(assert (=> b!134606 m!156923))

(assert (=> b!134606 m!160005))

(assert (=> d!40455 d!41511))

(assert (=> d!40455 d!40457))

(declare-fun d!41513 () Bool)

(assert (=> d!41513 (= (isEmpty!409 (getValueByKey!172 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092)) (not ((_ is Some!177) (getValueByKey!172 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092))))))

(assert (=> d!40367 d!41513))

(declare-fun d!41515 () Bool)

(declare-fun e!87677 () Bool)

(assert (=> d!41515 e!87677))

(declare-fun res!64717 () Bool)

(assert (=> d!41515 (=> (not res!64717) (not e!87677))))

(declare-fun lt!70446 () ListLongMap!1707)

(assert (=> d!41515 (= res!64717 (contains!899 lt!70446 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70448 () List!1716)

(assert (=> d!41515 (= lt!70446 (ListLongMap!1708 lt!70448))))

(declare-fun lt!70449 () Unit!4135)

(declare-fun lt!70447 () Unit!4135)

(assert (=> d!41515 (= lt!70449 lt!70447)))

(assert (=> d!41515 (= (getValueByKey!172 lt!70448 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41515 (= lt!70447 (lemmaContainsTupThenGetReturnValue!87 lt!70448 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41515 (= lt!70448 (insertStrictlySorted!90 (toList!869 call!14719) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41515 (= (+!175 call!14719 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70446)))

(declare-fun b!134607 () Bool)

(declare-fun res!64716 () Bool)

(assert (=> b!134607 (=> (not res!64716) (not e!87677))))

(assert (=> b!134607 (= res!64716 (= (getValueByKey!172 (toList!869 lt!70446) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134608 () Bool)

(assert (=> b!134608 (= e!87677 (contains!902 (toList!869 lt!70446) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!41515 res!64717) b!134607))

(assert (= (and b!134607 res!64716) b!134608))

(declare-fun m!160007 () Bool)

(assert (=> d!41515 m!160007))

(declare-fun m!160009 () Bool)

(assert (=> d!41515 m!160009))

(declare-fun m!160011 () Bool)

(assert (=> d!41515 m!160011))

(declare-fun m!160013 () Bool)

(assert (=> d!41515 m!160013))

(declare-fun m!160015 () Bool)

(assert (=> b!134607 m!160015))

(declare-fun m!160017 () Bool)

(assert (=> b!134608 m!160017))

(assert (=> b!133358 d!41515))

(declare-fun bm!14828 () Bool)

(declare-fun call!14831 () Bool)

(assert (=> bm!14828 (= call!14831 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4614 (_2!1325 lt!69358)) (mask!7165 (_2!1325 lt!69358))))))

(declare-fun b!134609 () Bool)

(declare-fun e!87680 () Bool)

(declare-fun e!87678 () Bool)

(assert (=> b!134609 (= e!87680 e!87678)))

(declare-fun c!25064 () Bool)

(assert (=> b!134609 (= c!25064 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000)))))

(declare-fun d!41517 () Bool)

(declare-fun res!64718 () Bool)

(assert (=> d!41517 (=> res!64718 e!87680)))

(assert (=> d!41517 (= res!64718 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69358)))))))

(assert (=> d!41517 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4614 (_2!1325 lt!69358)) (mask!7165 (_2!1325 lt!69358))) e!87680)))

(declare-fun b!134610 () Bool)

(assert (=> b!134610 (= e!87678 call!14831)))

(declare-fun b!134611 () Bool)

(declare-fun e!87679 () Bool)

(assert (=> b!134611 (= e!87679 call!14831)))

(declare-fun b!134612 () Bool)

(assert (=> b!134612 (= e!87678 e!87679)))

(declare-fun lt!70451 () (_ BitVec 64))

(assert (=> b!134612 (= lt!70451 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000))))

(declare-fun lt!70452 () Unit!4135)

(assert (=> b!134612 (= lt!70452 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (_2!1325 lt!69358)) lt!70451 #b00000000000000000000000000000000))))

(assert (=> b!134612 (arrayContainsKey!0 (_keys!4614 (_2!1325 lt!69358)) lt!70451 #b00000000000000000000000000000000)))

(declare-fun lt!70450 () Unit!4135)

(assert (=> b!134612 (= lt!70450 lt!70452)))

(declare-fun res!64719 () Bool)

(assert (=> b!134612 (= res!64719 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000) (_keys!4614 (_2!1325 lt!69358)) (mask!7165 (_2!1325 lt!69358))) (Found!275 #b00000000000000000000000000000000)))))

(assert (=> b!134612 (=> (not res!64719) (not e!87679))))

(assert (= (and d!41517 (not res!64718)) b!134609))

(assert (= (and b!134609 c!25064) b!134612))

(assert (= (and b!134609 (not c!25064)) b!134610))

(assert (= (and b!134612 res!64719) b!134611))

(assert (= (or b!134611 b!134610) bm!14828))

(declare-fun m!160019 () Bool)

(assert (=> bm!14828 m!160019))

(assert (=> b!134609 m!159347))

(assert (=> b!134609 m!159347))

(assert (=> b!134609 m!159355))

(assert (=> b!134612 m!159347))

(declare-fun m!160021 () Bool)

(assert (=> b!134612 m!160021))

(declare-fun m!160023 () Bool)

(assert (=> b!134612 m!160023))

(assert (=> b!134612 m!159347))

(declare-fun m!160025 () Bool)

(assert (=> b!134612 m!160025))

(assert (=> b!133470 d!41517))

(declare-fun d!41519 () Bool)

(declare-fun c!25065 () Bool)

(assert (=> d!41519 (= c!25065 ((_ is Nil!1713) (toList!869 lt!69385)))))

(declare-fun e!87681 () (InoxSet tuple2!2626))

(assert (=> d!41519 (= (content!133 (toList!869 lt!69385)) e!87681)))

(declare-fun b!134613 () Bool)

(assert (=> b!134613 (= e!87681 ((as const (Array tuple2!2626 Bool)) false))))

(declare-fun b!134614 () Bool)

(assert (=> b!134614 (= e!87681 ((_ map or) (store ((as const (Array tuple2!2626 Bool)) false) (h!2317 (toList!869 lt!69385)) true) (content!133 (t!6167 (toList!869 lt!69385)))))))

(assert (= (and d!41519 c!25065) b!134613))

(assert (= (and d!41519 (not c!25065)) b!134614))

(declare-fun m!160027 () Bool)

(assert (=> b!134614 m!160027))

(assert (=> b!134614 m!159451))

(assert (=> d!40477 d!41519))

(declare-fun d!41521 () Bool)

(assert (=> d!41521 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69385) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69385) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun bs!5616 () Bool)

(assert (= bs!5616 d!41521))

(assert (=> bs!5616 m!156371))

(declare-fun m!160029 () Bool)

(assert (=> bs!5616 m!160029))

(assert (=> b!133452 d!41521))

(assert (=> b!133452 d!40653))

(declare-fun d!41523 () Bool)

(declare-fun res!64720 () Bool)

(declare-fun e!87682 () Bool)

(assert (=> d!41523 (=> res!64720 e!87682)))

(assert (=> d!41523 (= res!64720 (= (select (arr!2261 lt!69350) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> d!41523 (= (arrayContainsKey!0 lt!69350 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!87682)))

(declare-fun b!134615 () Bool)

(declare-fun e!87683 () Bool)

(assert (=> b!134615 (= e!87682 e!87683)))

(declare-fun res!64721 () Bool)

(assert (=> b!134615 (=> (not res!64721) (not e!87683))))

(assert (=> b!134615 (= res!64721 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 lt!69350)))))

(declare-fun b!134616 () Bool)

(assert (=> b!134616 (= e!87683 (arrayContainsKey!0 lt!69350 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!41523 (not res!64720)) b!134615))

(assert (= (and b!134615 res!64721) b!134616))

(declare-fun m!160031 () Bool)

(assert (=> d!41523 m!160031))

(assert (=> b!134616 m!155869))

(declare-fun m!160033 () Bool)

(assert (=> b!134616 m!160033))

(assert (=> b!133300 d!41523))

(declare-fun d!41525 () Bool)

(declare-fun lt!70453 () Bool)

(assert (=> d!41525 (= lt!70453 (select (content!133 lt!69415) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87685 () Bool)

(assert (=> d!41525 (= lt!70453 e!87685)))

(declare-fun res!64722 () Bool)

(assert (=> d!41525 (=> (not res!64722) (not e!87685))))

(assert (=> d!41525 (= res!64722 ((_ is Cons!1712) lt!69415))))

(assert (=> d!41525 (= (contains!902 lt!69415 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!70453)))

(declare-fun b!134617 () Bool)

(declare-fun e!87684 () Bool)

(assert (=> b!134617 (= e!87685 e!87684)))

(declare-fun res!64723 () Bool)

(assert (=> b!134617 (=> res!64723 e!87684)))

(assert (=> b!134617 (= res!64723 (= (h!2317 lt!69415) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134618 () Bool)

(assert (=> b!134618 (= e!87684 (contains!902 (t!6167 lt!69415) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!41525 res!64722) b!134617))

(assert (= (and b!134617 (not res!64723)) b!134618))

(declare-fun m!160035 () Bool)

(assert (=> d!41525 m!160035))

(declare-fun m!160037 () Bool)

(assert (=> d!41525 m!160037))

(declare-fun m!160039 () Bool)

(assert (=> b!134618 m!160039))

(assert (=> b!133681 d!41525))

(declare-fun d!41527 () Bool)

(declare-fun res!64724 () Bool)

(declare-fun e!87686 () Bool)

(assert (=> d!41527 (=> res!64724 e!87686)))

(assert (=> d!41527 (= res!64724 (and ((_ is Cons!1712) (toList!869 lt!69486)) (= (_1!1324 (h!2317 (toList!869 lt!69486))) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!41527 (= (containsKey!176 (toList!869 lt!69486) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) e!87686)))

(declare-fun b!134619 () Bool)

(declare-fun e!87687 () Bool)

(assert (=> b!134619 (= e!87686 e!87687)))

(declare-fun res!64725 () Bool)

(assert (=> b!134619 (=> (not res!64725) (not e!87687))))

(assert (=> b!134619 (= res!64725 (and (or (not ((_ is Cons!1712) (toList!869 lt!69486))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69486))) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1712) (toList!869 lt!69486)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69486))) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!134620 () Bool)

(assert (=> b!134620 (= e!87687 (containsKey!176 (t!6167 (toList!869 lt!69486)) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41527 (not res!64724)) b!134619))

(assert (= (and b!134619 res!64725) b!134620))

(assert (=> b!134620 m!156163))

(declare-fun m!160041 () Bool)

(assert (=> b!134620 m!160041))

(assert (=> d!40349 d!41527))

(declare-fun d!41529 () Bool)

(assert (=> d!41529 (arrayNoDuplicates!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) lt!69339 lt!69335)))

(assert (=> d!41529 true))

(declare-fun _$65!62 () Unit!4135)

(assert (=> d!41529 (= (choose!41 (_keys!4614 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) lt!69339 lt!69335) _$65!62)))

(declare-fun bs!5617 () Bool)

(assert (= bs!5617 d!41529))

(assert (=> bs!5617 m!156281))

(assert (=> bs!5617 m!156279))

(assert (=> d!40529 d!41529))

(assert (=> b!133368 d!41505))

(declare-fun d!41531 () Bool)

(declare-fun e!87688 () Bool)

(assert (=> d!41531 e!87688))

(declare-fun res!64726 () Bool)

(assert (=> d!41531 (=> res!64726 e!87688)))

(declare-fun lt!70457 () Bool)

(assert (=> d!41531 (= res!64726 (not lt!70457))))

(declare-fun lt!70454 () Bool)

(assert (=> d!41531 (= lt!70457 lt!70454)))

(declare-fun lt!70456 () Unit!4135)

(declare-fun e!87689 () Unit!4135)

(assert (=> d!41531 (= lt!70456 e!87689)))

(declare-fun c!25066 () Bool)

(assert (=> d!41531 (= c!25066 lt!70454)))

(assert (=> d!41531 (= lt!70454 (containsKey!176 (toList!869 lt!69850) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41531 (= (contains!899 lt!69850 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70457)))

(declare-fun b!134621 () Bool)

(declare-fun lt!70455 () Unit!4135)

(assert (=> b!134621 (= e!87689 lt!70455)))

(assert (=> b!134621 (= lt!70455 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69850) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134621 (isDefined!125 (getValueByKey!172 (toList!869 lt!69850) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134622 () Bool)

(declare-fun Unit!4229 () Unit!4135)

(assert (=> b!134622 (= e!87689 Unit!4229)))

(declare-fun b!134623 () Bool)

(assert (=> b!134623 (= e!87688 (isDefined!125 (getValueByKey!172 (toList!869 lt!69850) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41531 c!25066) b!134621))

(assert (= (and d!41531 (not c!25066)) b!134622))

(assert (= (and d!41531 (not res!64726)) b!134623))

(declare-fun m!160043 () Bool)

(assert (=> d!41531 m!160043))

(declare-fun m!160045 () Bool)

(assert (=> b!134621 m!160045))

(declare-fun m!160047 () Bool)

(assert (=> b!134621 m!160047))

(assert (=> b!134621 m!160047))

(declare-fun m!160049 () Bool)

(assert (=> b!134621 m!160049))

(assert (=> b!134623 m!160047))

(assert (=> b!134623 m!160047))

(assert (=> b!134623 m!160049))

(assert (=> bm!14732 d!41531))

(declare-fun d!41533 () Bool)

(assert (=> d!41533 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) lt!69461))))

(declare-fun lt!70458 () Unit!4135)

(assert (=> d!41533 (= lt!70458 (choose!817 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) lt!69461))))

(declare-fun e!87690 () Bool)

(assert (=> d!41533 e!87690))

(declare-fun res!64727 () Bool)

(assert (=> d!41533 (=> (not res!64727) (not e!87690))))

(assert (=> d!41533 (= res!64727 (isStrictlySorted!322 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))))))

(assert (=> d!41533 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) lt!69461) lt!70458)))

(declare-fun b!134624 () Bool)

(assert (=> b!134624 (= e!87690 (containsKey!176 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) lt!69461))))

(assert (= (and d!41533 res!64727) b!134624))

(assert (=> d!41533 m!156939))

(assert (=> d!41533 m!156939))

(assert (=> d!41533 m!156941))

(declare-fun m!160051 () Bool)

(assert (=> d!41533 m!160051))

(declare-fun m!160053 () Bool)

(assert (=> d!41533 m!160053))

(assert (=> b!134624 m!156935))

(assert (=> b!133143 d!41533))

(declare-fun d!41535 () Bool)

(assert (=> d!41535 (= (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) lt!69461)) (not (isEmpty!409 (getValueByKey!172 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) lt!69461))))))

(declare-fun bs!5618 () Bool)

(assert (= bs!5618 d!41535))

(assert (=> bs!5618 m!156939))

(declare-fun m!160055 () Bool)

(assert (=> bs!5618 m!160055))

(assert (=> b!133143 d!41535))

(declare-fun b!134627 () Bool)

(declare-fun e!87692 () Option!178)

(assert (=> b!134627 (= e!87692 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))) lt!69461))))

(declare-fun b!134628 () Bool)

(assert (=> b!134628 (= e!87692 None!176)))

(declare-fun c!25067 () Bool)

(declare-fun d!41537 () Bool)

(assert (=> d!41537 (= c!25067 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))) lt!69461)))))

(declare-fun e!87691 () Option!178)

(assert (=> d!41537 (= (getValueByKey!172 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) lt!69461) e!87691)))

(declare-fun b!134625 () Bool)

(assert (=> b!134625 (= e!87691 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))))))))

(declare-fun b!134626 () Bool)

(assert (=> b!134626 (= e!87691 e!87692)))

(declare-fun c!25068 () Bool)

(assert (=> b!134626 (= c!25068 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))) lt!69461))))))

(assert (= (and d!41537 c!25067) b!134625))

(assert (= (and d!41537 (not c!25067)) b!134626))

(assert (= (and b!134626 c!25068) b!134627))

(assert (= (and b!134626 (not c!25068)) b!134628))

(declare-fun m!160057 () Bool)

(assert (=> b!134627 m!160057))

(assert (=> b!133143 d!41537))

(declare-fun bm!14829 () Bool)

(declare-fun call!14833 () List!1716)

(declare-fun call!14834 () List!1716)

(assert (=> bm!14829 (= call!14833 call!14834)))

(declare-fun d!41539 () Bool)

(declare-fun e!87696 () Bool)

(assert (=> d!41539 e!87696))

(declare-fun res!64729 () Bool)

(assert (=> d!41539 (=> (not res!64729) (not e!87696))))

(declare-fun lt!70459 () List!1716)

(assert (=> d!41539 (= res!64729 (isStrictlySorted!322 lt!70459))))

(declare-fun e!87694 () List!1716)

(assert (=> d!41539 (= lt!70459 e!87694)))

(declare-fun c!25072 () Bool)

(assert (=> d!41539 (= c!25072 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69093))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 lt!69093)))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41539 (isStrictlySorted!322 (t!6167 (toList!869 lt!69093)))))

(assert (=> d!41539 (= (insertStrictlySorted!90 (t!6167 (toList!869 lt!69093)) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!70459)))

(declare-fun b!134629 () Bool)

(assert (=> b!134629 (= e!87696 (contains!902 lt!70459 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134630 () Bool)

(declare-fun c!25070 () Bool)

(assert (=> b!134630 (= c!25070 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69093))) (bvsgt (_1!1324 (h!2317 (t!6167 (toList!869 lt!69093)))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87695 () List!1716)

(declare-fun e!87697 () List!1716)

(assert (=> b!134630 (= e!87695 e!87697)))

(declare-fun b!134631 () Bool)

(declare-fun e!87693 () List!1716)

(assert (=> b!134631 (= e!87693 (insertStrictlySorted!90 (t!6167 (t!6167 (toList!869 lt!69093))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!134632 () Bool)

(assert (=> b!134632 (= e!87695 call!14833)))

(declare-fun b!134633 () Bool)

(declare-fun call!14832 () List!1716)

(assert (=> b!134633 (= e!87697 call!14832)))

(declare-fun c!25069 () Bool)

(declare-fun b!134634 () Bool)

(assert (=> b!134634 (= e!87693 (ite c!25069 (t!6167 (t!6167 (toList!869 lt!69093))) (ite c!25070 (Cons!1712 (h!2317 (t!6167 (toList!869 lt!69093))) (t!6167 (t!6167 (toList!869 lt!69093)))) Nil!1713)))))

(declare-fun b!134635 () Bool)

(assert (=> b!134635 (= e!87697 call!14832)))

(declare-fun b!134636 () Bool)

(assert (=> b!134636 (= e!87694 call!14834)))

(declare-fun bm!14830 () Bool)

(assert (=> bm!14830 (= call!14834 ($colon$colon!92 e!87693 (ite c!25072 (h!2317 (t!6167 (toList!869 lt!69093))) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun c!25071 () Bool)

(assert (=> bm!14830 (= c!25071 c!25072)))

(declare-fun bm!14831 () Bool)

(assert (=> bm!14831 (= call!14832 call!14833)))

(declare-fun b!134637 () Bool)

(declare-fun res!64728 () Bool)

(assert (=> b!134637 (=> (not res!64728) (not e!87696))))

(assert (=> b!134637 (= res!64728 (containsKey!176 lt!70459 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!134638 () Bool)

(assert (=> b!134638 (= e!87694 e!87695)))

(assert (=> b!134638 (= c!25069 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69093))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69093)))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!41539 c!25072) b!134636))

(assert (= (and d!41539 (not c!25072)) b!134638))

(assert (= (and b!134638 c!25069) b!134632))

(assert (= (and b!134638 (not c!25069)) b!134630))

(assert (= (and b!134630 c!25070) b!134633))

(assert (= (and b!134630 (not c!25070)) b!134635))

(assert (= (or b!134633 b!134635) bm!14831))

(assert (= (or b!134632 bm!14831) bm!14829))

(assert (= (or b!134636 bm!14829) bm!14830))

(assert (= (and bm!14830 c!25071) b!134631))

(assert (= (and bm!14830 (not c!25071)) b!134634))

(assert (= (and d!41539 res!64729) b!134637))

(assert (= (and b!134637 res!64728) b!134629))

(declare-fun m!160059 () Bool)

(assert (=> d!41539 m!160059))

(declare-fun m!160061 () Bool)

(assert (=> d!41539 m!160061))

(declare-fun m!160063 () Bool)

(assert (=> bm!14830 m!160063))

(declare-fun m!160065 () Bool)

(assert (=> b!134631 m!160065))

(declare-fun m!160067 () Bool)

(assert (=> b!134629 m!160067))

(declare-fun m!160069 () Bool)

(assert (=> b!134637 m!160069))

(assert (=> b!133133 d!41539))

(declare-fun d!41541 () Bool)

(declare-fun res!64730 () Bool)

(declare-fun e!87698 () Bool)

(assert (=> d!41541 (=> res!64730 e!87698)))

(assert (=> d!41541 (= res!64730 (= (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!69498))))

(assert (=> d!41541 (= (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69498 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!87698)))

(declare-fun b!134639 () Bool)

(declare-fun e!87699 () Bool)

(assert (=> b!134639 (= e!87698 e!87699)))

(declare-fun res!64731 () Bool)

(assert (=> b!134639 (=> (not res!64731) (not e!87699))))

(assert (=> b!134639 (= res!64731 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!134640 () Bool)

(assert (=> b!134640 (= e!87699 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!69498 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!41541 (not res!64730)) b!134639))

(assert (= (and b!134639 res!64731) b!134640))

(assert (=> d!41541 m!157845))

(declare-fun m!160071 () Bool)

(assert (=> b!134640 m!160071))

(assert (=> b!133649 d!41541))

(declare-fun lt!70460 () Bool)

(declare-fun d!41543 () Bool)

(assert (=> d!41543 (= lt!70460 (select (content!133 (toList!869 lt!69550)) (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun e!87701 () Bool)

(assert (=> d!41543 (= lt!70460 e!87701)))

(declare-fun res!64732 () Bool)

(assert (=> d!41543 (=> (not res!64732) (not e!87701))))

(assert (=> d!41543 (= res!64732 ((_ is Cons!1712) (toList!869 lt!69550)))))

(assert (=> d!41543 (= (contains!902 (toList!869 lt!69550) (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70460)))

(declare-fun b!134641 () Bool)

(declare-fun e!87700 () Bool)

(assert (=> b!134641 (= e!87701 e!87700)))

(declare-fun res!64733 () Bool)

(assert (=> b!134641 (=> res!64733 e!87700)))

(assert (=> b!134641 (= res!64733 (= (h!2317 (toList!869 lt!69550)) (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134642 () Bool)

(assert (=> b!134642 (= e!87700 (contains!902 (t!6167 (toList!869 lt!69550)) (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!41543 res!64732) b!134641))

(assert (= (and b!134641 (not res!64733)) b!134642))

(declare-fun m!160073 () Bool)

(assert (=> d!41543 m!160073))

(declare-fun m!160075 () Bool)

(assert (=> d!41543 m!160075))

(declare-fun m!160077 () Bool)

(assert (=> b!134642 m!160077))

(assert (=> b!133033 d!41543))

(declare-fun bm!14832 () Bool)

(declare-fun call!14836 () List!1716)

(declare-fun call!14837 () List!1716)

(assert (=> bm!14832 (= call!14836 call!14837)))

(declare-fun d!41545 () Bool)

(declare-fun e!87705 () Bool)

(assert (=> d!41545 e!87705))

(declare-fun res!64735 () Bool)

(assert (=> d!41545 (=> (not res!64735) (not e!87705))))

(declare-fun lt!70461 () List!1716)

(assert (=> d!41545 (= res!64735 (isStrictlySorted!322 lt!70461))))

(declare-fun e!87703 () List!1716)

(assert (=> d!41545 (= lt!70461 e!87703)))

(declare-fun c!25076 () Bool)

(assert (=> d!41545 (= c!25076 (and ((_ is Cons!1712) (t!6167 (toList!869 e!86455))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 e!86455)))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!41545 (isStrictlySorted!322 (t!6167 (toList!869 e!86455)))))

(assert (=> d!41545 (= (insertStrictlySorted!90 (t!6167 (toList!869 e!86455)) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70461)))

(declare-fun b!134643 () Bool)

(assert (=> b!134643 (= e!87705 (contains!902 lt!70461 (tuple2!2627 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134644 () Bool)

(declare-fun c!25074 () Bool)

(assert (=> b!134644 (= c!25074 (and ((_ is Cons!1712) (t!6167 (toList!869 e!86455))) (bvsgt (_1!1324 (h!2317 (t!6167 (toList!869 e!86455)))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!87704 () List!1716)

(declare-fun e!87706 () List!1716)

(assert (=> b!134644 (= e!87704 e!87706)))

(declare-fun e!87702 () List!1716)

(declare-fun b!134645 () Bool)

(assert (=> b!134645 (= e!87702 (insertStrictlySorted!90 (t!6167 (t!6167 (toList!869 e!86455))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134646 () Bool)

(assert (=> b!134646 (= e!87704 call!14836)))

(declare-fun b!134647 () Bool)

(declare-fun call!14835 () List!1716)

(assert (=> b!134647 (= e!87706 call!14835)))

(declare-fun b!134648 () Bool)

(declare-fun c!25073 () Bool)

(assert (=> b!134648 (= e!87702 (ite c!25073 (t!6167 (t!6167 (toList!869 e!86455))) (ite c!25074 (Cons!1712 (h!2317 (t!6167 (toList!869 e!86455))) (t!6167 (t!6167 (toList!869 e!86455)))) Nil!1713)))))

(declare-fun b!134649 () Bool)

(assert (=> b!134649 (= e!87706 call!14835)))

(declare-fun b!134650 () Bool)

(assert (=> b!134650 (= e!87703 call!14837)))

(declare-fun bm!14833 () Bool)

(assert (=> bm!14833 (= call!14837 ($colon$colon!92 e!87702 (ite c!25076 (h!2317 (t!6167 (toList!869 e!86455))) (tuple2!2627 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!25075 () Bool)

(assert (=> bm!14833 (= c!25075 c!25076)))

(declare-fun bm!14834 () Bool)

(assert (=> bm!14834 (= call!14835 call!14836)))

(declare-fun b!134651 () Bool)

(declare-fun res!64734 () Bool)

(assert (=> b!134651 (=> (not res!64734) (not e!87705))))

(assert (=> b!134651 (= res!64734 (containsKey!176 lt!70461 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134652 () Bool)

(assert (=> b!134652 (= e!87703 e!87704)))

(assert (=> b!134652 (= c!25073 (and ((_ is Cons!1712) (t!6167 (toList!869 e!86455))) (= (_1!1324 (h!2317 (t!6167 (toList!869 e!86455)))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!41545 c!25076) b!134650))

(assert (= (and d!41545 (not c!25076)) b!134652))

(assert (= (and b!134652 c!25073) b!134646))

(assert (= (and b!134652 (not c!25073)) b!134644))

(assert (= (and b!134644 c!25074) b!134647))

(assert (= (and b!134644 (not c!25074)) b!134649))

(assert (= (or b!134647 b!134649) bm!14834))

(assert (= (or b!134646 bm!14834) bm!14832))

(assert (= (or b!134650 bm!14832) bm!14833))

(assert (= (and bm!14833 c!25075) b!134645))

(assert (= (and bm!14833 (not c!25075)) b!134648))

(assert (= (and d!41545 res!64735) b!134651))

(assert (= (and b!134651 res!64734) b!134643))

(declare-fun m!160079 () Bool)

(assert (=> d!41545 m!160079))

(declare-fun m!160081 () Bool)

(assert (=> d!41545 m!160081))

(declare-fun m!160083 () Bool)

(assert (=> bm!14833 m!160083))

(declare-fun m!160085 () Bool)

(assert (=> b!134645 m!160085))

(declare-fun m!160087 () Bool)

(assert (=> b!134643 m!160087))

(declare-fun m!160089 () Bool)

(assert (=> b!134651 m!160089))

(assert (=> b!133501 d!41545))

(declare-fun d!41547 () Bool)

(assert (=> d!41547 (= (apply!116 lt!69728 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69728) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5619 () Bool)

(assert (= bs!5619 d!41547))

(declare-fun m!160091 () Bool)

(assert (=> bs!5619 m!160091))

(assert (=> bs!5619 m!160091))

(declare-fun m!160093 () Bool)

(assert (=> bs!5619 m!160093))

(assert (=> b!133317 d!41547))

(assert (=> b!133165 d!40353))

(declare-fun d!41549 () Bool)

(declare-fun e!87707 () Bool)

(assert (=> d!41549 e!87707))

(declare-fun res!64737 () Bool)

(assert (=> d!41549 (=> (not res!64737) (not e!87707))))

(declare-fun lt!70462 () ListLongMap!1707)

(assert (=> d!41549 (= res!64737 (contains!899 lt!70462 (_1!1324 (ite (or c!24776 c!24774) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1325 lt!69179))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179)))))))))

(declare-fun lt!70464 () List!1716)

(assert (=> d!41549 (= lt!70462 (ListLongMap!1708 lt!70464))))

(declare-fun lt!70465 () Unit!4135)

(declare-fun lt!70463 () Unit!4135)

(assert (=> d!41549 (= lt!70465 lt!70463)))

(assert (=> d!41549 (= (getValueByKey!172 lt!70464 (_1!1324 (ite (or c!24776 c!24774) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1325 lt!69179))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179)))))) (Some!177 (_2!1324 (ite (or c!24776 c!24774) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1325 lt!69179))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179)))))))))

(assert (=> d!41549 (= lt!70463 (lemmaContainsTupThenGetReturnValue!87 lt!70464 (_1!1324 (ite (or c!24776 c!24774) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1325 lt!69179))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179))))) (_2!1324 (ite (or c!24776 c!24774) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1325 lt!69179))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179)))))))))

(assert (=> d!41549 (= lt!70464 (insertStrictlySorted!90 (toList!869 (ite c!24776 call!14753 (ite c!24774 call!14756 call!14757))) (_1!1324 (ite (or c!24776 c!24774) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1325 lt!69179))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179))))) (_2!1324 (ite (or c!24776 c!24774) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1325 lt!69179))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179)))))))))

(assert (=> d!41549 (= (+!175 (ite c!24776 call!14753 (ite c!24774 call!14756 call!14757)) (ite (or c!24776 c!24774) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1325 lt!69179))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179))))) lt!70462)))

(declare-fun b!134653 () Bool)

(declare-fun res!64736 () Bool)

(assert (=> b!134653 (=> (not res!64736) (not e!87707))))

(assert (=> b!134653 (= res!64736 (= (getValueByKey!172 (toList!869 lt!70462) (_1!1324 (ite (or c!24776 c!24774) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1325 lt!69179))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179)))))) (Some!177 (_2!1324 (ite (or c!24776 c!24774) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1325 lt!69179))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179))))))))))

(declare-fun b!134654 () Bool)

(assert (=> b!134654 (= e!87707 (contains!902 (toList!869 lt!70462) (ite (or c!24776 c!24774) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (_2!1325 lt!69179))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179))))))))

(assert (= (and d!41549 res!64737) b!134653))

(assert (= (and b!134653 res!64736) b!134654))

(declare-fun m!160095 () Bool)

(assert (=> d!41549 m!160095))

(declare-fun m!160097 () Bool)

(assert (=> d!41549 m!160097))

(declare-fun m!160099 () Bool)

(assert (=> d!41549 m!160099))

(declare-fun m!160101 () Bool)

(assert (=> d!41549 m!160101))

(declare-fun m!160103 () Bool)

(assert (=> b!134653 m!160103))

(declare-fun m!160105 () Bool)

(assert (=> b!134654 m!160105))

(assert (=> bm!14750 d!41549))

(declare-fun d!41551 () Bool)

(assert (=> d!41551 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69262) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69262) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5620 () Bool)

(assert (= bs!5620 d!41551))

(assert (=> bs!5620 m!158259))

(declare-fun m!160107 () Bool)

(assert (=> bs!5620 m!160107))

(assert (=> b!133814 d!41551))

(assert (=> b!133814 d!41373))

(declare-fun d!41553 () Bool)

(assert (=> d!41553 (= (validMask!0 (mask!7165 (_2!1325 lt!69179))) (and (or (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000000000000000000111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000000000000000001111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000000000000000011111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000000000000000111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000000000000001111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000000000000011111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000000000000111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000000000001111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000000000011111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000000000111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000000001111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000000011111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000000111111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000001111111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000011111111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000000111111111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000001111111111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000011111111111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000000111111111111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000001111111111111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000011111111111111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000000111111111111111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000001111111111111111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000011111111111111111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00000111111111111111111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00001111111111111111111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00011111111111111111111111111111) (= (mask!7165 (_2!1325 lt!69179)) #b00111111111111111111111111111111)) (bvsle (mask!7165 (_2!1325 lt!69179)) #b00111111111111111111111111111111)))))

(assert (=> d!40391 d!41553))

(declare-fun d!41555 () Bool)

(declare-fun e!87708 () Bool)

(assert (=> d!41555 e!87708))

(declare-fun res!64738 () Bool)

(assert (=> d!41555 (=> res!64738 e!87708)))

(declare-fun lt!70469 () Bool)

(assert (=> d!41555 (= res!64738 (not lt!70469))))

(declare-fun lt!70466 () Bool)

(assert (=> d!41555 (= lt!70469 lt!70466)))

(declare-fun lt!70468 () Unit!4135)

(declare-fun e!87709 () Unit!4135)

(assert (=> d!41555 (= lt!70468 e!87709)))

(declare-fun c!25077 () Bool)

(assert (=> d!41555 (= c!25077 lt!70466)))

(assert (=> d!41555 (= lt!70466 (containsKey!176 (toList!869 lt!69892) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41555 (= (contains!899 lt!69892 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70469)))

(declare-fun b!134655 () Bool)

(declare-fun lt!70467 () Unit!4135)

(assert (=> b!134655 (= e!87709 lt!70467)))

(assert (=> b!134655 (= lt!70467 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69892) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134655 (isDefined!125 (getValueByKey!172 (toList!869 lt!69892) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134656 () Bool)

(declare-fun Unit!4230 () Unit!4135)

(assert (=> b!134656 (= e!87709 Unit!4230)))

(declare-fun b!134657 () Bool)

(assert (=> b!134657 (= e!87708 (isDefined!125 (getValueByKey!172 (toList!869 lt!69892) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41555 c!25077) b!134655))

(assert (= (and d!41555 (not c!25077)) b!134656))

(assert (= (and d!41555 (not res!64738)) b!134657))

(declare-fun m!160109 () Bool)

(assert (=> d!41555 m!160109))

(declare-fun m!160111 () Bool)

(assert (=> b!134655 m!160111))

(declare-fun m!160113 () Bool)

(assert (=> b!134655 m!160113))

(assert (=> b!134655 m!160113))

(declare-fun m!160115 () Bool)

(assert (=> b!134655 m!160115))

(assert (=> b!134657 m!160113))

(assert (=> b!134657 m!160113))

(assert (=> b!134657 m!160115))

(assert (=> b!133594 d!41555))

(declare-fun d!41557 () Bool)

(assert (=> d!41557 (= (isDefined!125 (getValueByKey!172 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))))) (not (isEmpty!409 (getValueByKey!172 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))))

(declare-fun bs!5621 () Bool)

(assert (= bs!5621 d!41557))

(assert (=> bs!5621 m!157305))

(declare-fun m!160117 () Bool)

(assert (=> bs!5621 m!160117))

(assert (=> b!133303 d!41557))

(declare-fun b!134660 () Bool)

(declare-fun e!87711 () Option!178)

(assert (=> b!134660 (= e!87711 (getValueByKey!172 (t!6167 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))

(declare-fun b!134661 () Bool)

(assert (=> b!134661 (= e!87711 None!176)))

(declare-fun d!41559 () Bool)

(declare-fun c!25078 () Bool)

(assert (=> d!41559 (= c!25078 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))))))))

(declare-fun e!87710 () Option!178)

(assert (=> d!41559 (= (getValueByKey!172 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))) e!87710)))

(declare-fun b!134658 () Bool)

(assert (=> b!134658 (= e!87710 (Some!177 (_2!1324 (h!2317 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))))))

(declare-fun b!134659 () Bool)

(assert (=> b!134659 (= e!87710 e!87711)))

(declare-fun c!25079 () Bool)

(assert (=> b!134659 (= c!25079 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (not (= (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))))

(assert (= (and d!41559 c!25078) b!134658))

(assert (= (and d!41559 (not c!25078)) b!134659))

(assert (= (and b!134659 c!25079) b!134660))

(assert (= (and b!134659 (not c!25079)) b!134661))

(assert (=> b!134660 m!156259))

(declare-fun m!160119 () Bool)

(assert (=> b!134660 m!160119))

(assert (=> b!133303 d!41559))

(assert (=> b!133553 d!40967))

(assert (=> b!133376 d!40527))

(assert (=> b!133376 d!40229))

(assert (=> b!133376 d!40551))

(assert (=> d!40487 d!40495))

(assert (=> d!40487 d!40493))

(declare-fun d!41561 () Bool)

(assert (=> d!41561 (contains!899 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69483)))

(assert (=> d!41561 true))

(declare-fun _$35!381 () Unit!4135)

(assert (=> d!41561 (= (choose!823 lt!69484 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69483) _$35!381)))

(declare-fun bs!5622 () Bool)

(assert (= bs!5622 d!41561))

(assert (=> bs!5622 m!156581))

(assert (=> bs!5622 m!156581))

(assert (=> bs!5622 m!156605))

(assert (=> d!40487 d!41561))

(declare-fun d!41563 () Bool)

(declare-fun e!87712 () Bool)

(assert (=> d!41563 e!87712))

(declare-fun res!64739 () Bool)

(assert (=> d!41563 (=> res!64739 e!87712)))

(declare-fun lt!70473 () Bool)

(assert (=> d!41563 (= res!64739 (not lt!70473))))

(declare-fun lt!70470 () Bool)

(assert (=> d!41563 (= lt!70473 lt!70470)))

(declare-fun lt!70472 () Unit!4135)

(declare-fun e!87713 () Unit!4135)

(assert (=> d!41563 (= lt!70472 e!87713)))

(declare-fun c!25080 () Bool)

(assert (=> d!41563 (= c!25080 lt!70470)))

(assert (=> d!41563 (= lt!70470 (containsKey!176 (toList!869 lt!69484) lt!69483))))

(assert (=> d!41563 (= (contains!899 lt!69484 lt!69483) lt!70473)))

(declare-fun b!134662 () Bool)

(declare-fun lt!70471 () Unit!4135)

(assert (=> b!134662 (= e!87713 lt!70471)))

(assert (=> b!134662 (= lt!70471 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69484) lt!69483))))

(assert (=> b!134662 (isDefined!125 (getValueByKey!172 (toList!869 lt!69484) lt!69483))))

(declare-fun b!134663 () Bool)

(declare-fun Unit!4231 () Unit!4135)

(assert (=> b!134663 (= e!87713 Unit!4231)))

(declare-fun b!134664 () Bool)

(assert (=> b!134664 (= e!87712 (isDefined!125 (getValueByKey!172 (toList!869 lt!69484) lt!69483)))))

(assert (= (and d!41563 c!25080) b!134662))

(assert (= (and d!41563 (not c!25080)) b!134663))

(assert (= (and d!41563 (not res!64739)) b!134664))

(declare-fun m!160121 () Bool)

(assert (=> d!41563 m!160121))

(declare-fun m!160123 () Bool)

(assert (=> b!134662 m!160123))

(declare-fun m!160125 () Bool)

(assert (=> b!134662 m!160125))

(assert (=> b!134662 m!160125))

(declare-fun m!160127 () Bool)

(assert (=> b!134662 m!160127))

(assert (=> b!134664 m!160125))

(assert (=> b!134664 m!160125))

(assert (=> b!134664 m!160127))

(assert (=> d!40487 d!41563))

(declare-fun bm!14835 () Bool)

(declare-fun call!14838 () Bool)

(assert (=> bm!14835 (= call!14838 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179))))))

(declare-fun b!134665 () Bool)

(declare-fun e!87716 () Bool)

(declare-fun e!87714 () Bool)

(assert (=> b!134665 (= e!87716 e!87714)))

(declare-fun c!25081 () Bool)

(assert (=> b!134665 (= c!25081 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!41565 () Bool)

(declare-fun res!64740 () Bool)

(assert (=> d!41565 (=> res!64740 e!87716)))

(assert (=> d!41565 (= res!64740 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (_2!1325 lt!69179)))))))

(assert (=> d!41565 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4614 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179))) e!87716)))

(declare-fun b!134666 () Bool)

(assert (=> b!134666 (= e!87714 call!14838)))

(declare-fun b!134667 () Bool)

(declare-fun e!87715 () Bool)

(assert (=> b!134667 (= e!87715 call!14838)))

(declare-fun b!134668 () Bool)

(assert (=> b!134668 (= e!87714 e!87715)))

(declare-fun lt!70475 () (_ BitVec 64))

(assert (=> b!134668 (= lt!70475 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!70476 () Unit!4135)

(assert (=> b!134668 (= lt!70476 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (_2!1325 lt!69179)) lt!70475 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!134668 (arrayContainsKey!0 (_keys!4614 (_2!1325 lt!69179)) lt!70475 #b00000000000000000000000000000000)))

(declare-fun lt!70474 () Unit!4135)

(assert (=> b!134668 (= lt!70474 lt!70476)))

(declare-fun res!64741 () Bool)

(assert (=> b!134668 (= res!64741 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (_2!1325 lt!69179)) (mask!7165 (_2!1325 lt!69179))) (Found!275 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134668 (=> (not res!64741) (not e!87715))))

(assert (= (and d!41565 (not res!64740)) b!134665))

(assert (= (and b!134665 c!25081) b!134668))

(assert (= (and b!134665 (not c!25081)) b!134666))

(assert (= (and b!134668 res!64741) b!134667))

(assert (= (or b!134667 b!134666) bm!14835))

(declare-fun m!160129 () Bool)

(assert (=> bm!14835 m!160129))

(assert (=> b!134665 m!159019))

(assert (=> b!134665 m!159019))

(assert (=> b!134665 m!159023))

(assert (=> b!134668 m!159019))

(declare-fun m!160131 () Bool)

(assert (=> b!134668 m!160131))

(declare-fun m!160133 () Bool)

(assert (=> b!134668 m!160133))

(assert (=> b!134668 m!159019))

(declare-fun m!160135 () Bool)

(assert (=> b!134668 m!160135))

(assert (=> bm!14756 d!41565))

(declare-fun d!41567 () Bool)

(declare-fun lt!70477 () Bool)

(assert (=> d!41567 (= lt!70477 (select (content!133 (t!6167 (toList!869 lt!69209))) (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun e!87718 () Bool)

(assert (=> d!41567 (= lt!70477 e!87718)))

(declare-fun res!64742 () Bool)

(assert (=> d!41567 (=> (not res!64742) (not e!87718))))

(assert (=> d!41567 (= res!64742 ((_ is Cons!1712) (t!6167 (toList!869 lt!69209))))))

(assert (=> d!41567 (= (contains!902 (t!6167 (toList!869 lt!69209)) (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!70477)))

(declare-fun b!134669 () Bool)

(declare-fun e!87717 () Bool)

(assert (=> b!134669 (= e!87718 e!87717)))

(declare-fun res!64743 () Bool)

(assert (=> b!134669 (=> res!64743 e!87717)))

(assert (=> b!134669 (= res!64743 (= (h!2317 (t!6167 (toList!869 lt!69209))) (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!134670 () Bool)

(assert (=> b!134670 (= e!87717 (contains!902 (t!6167 (t!6167 (toList!869 lt!69209))) (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!41567 res!64742) b!134669))

(assert (= (and b!134669 (not res!64743)) b!134670))

(declare-fun m!160137 () Bool)

(assert (=> d!41567 m!160137))

(declare-fun m!160139 () Bool)

(assert (=> d!41567 m!160139))

(declare-fun m!160141 () Bool)

(assert (=> b!134670 m!160141))

(assert (=> b!133825 d!41567))

(assert (=> b!133037 d!41395))

(assert (=> b!133037 d!41397))

(declare-fun d!41569 () Bool)

(declare-fun res!64744 () Bool)

(declare-fun e!87719 () Bool)

(assert (=> d!41569 (=> res!64744 e!87719)))

(assert (=> d!41569 (= res!64744 (and ((_ is Cons!1712) (toList!869 lt!69079)) (= (_1!1324 (h!2317 (toList!869 lt!69079))) lt!69098)))))

(assert (=> d!41569 (= (containsKey!176 (toList!869 lt!69079) lt!69098) e!87719)))

(declare-fun b!134671 () Bool)

(declare-fun e!87720 () Bool)

(assert (=> b!134671 (= e!87719 e!87720)))

(declare-fun res!64745 () Bool)

(assert (=> b!134671 (=> (not res!64745) (not e!87720))))

(assert (=> b!134671 (= res!64745 (and (or (not ((_ is Cons!1712) (toList!869 lt!69079))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69079))) lt!69098)) ((_ is Cons!1712) (toList!869 lt!69079)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69079))) lt!69098)))))

(declare-fun b!134672 () Bool)

(assert (=> b!134672 (= e!87720 (containsKey!176 (t!6167 (toList!869 lt!69079)) lt!69098))))

(assert (= (and d!41569 (not res!64744)) b!134671))

(assert (= (and b!134671 res!64745) b!134672))

(declare-fun m!160143 () Bool)

(assert (=> b!134672 m!160143))

(assert (=> d!40333 d!41569))

(declare-fun b!134673 () Bool)

(declare-fun e!87724 () Bool)

(declare-fun e!87723 () Bool)

(assert (=> b!134673 (= e!87724 e!87723)))

(declare-fun res!64746 () Bool)

(declare-fun lt!70479 () SeekEntryResult!275)

(assert (=> b!134673 (= res!64746 (and ((_ is Intermediate!275) lt!70479) (not (undefined!1087 lt!70479)) (bvslt (x!15592 lt!70479) #b01111111111111111111111111111110) (bvsge (x!15592 lt!70479) #b00000000000000000000000000000000) (bvsge (x!15592 lt!70479) #b00000000000000000000000000000000)))))

(assert (=> b!134673 (=> (not res!64746) (not e!87723))))

(declare-fun b!134674 () Bool)

(assert (=> b!134674 (and (bvsge (index!3262 lt!70479) #b00000000000000000000000000000000) (bvslt (index!3262 lt!70479) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64747 () Bool)

(assert (=> b!134674 (= res!64747 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3262 lt!70479)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87721 () Bool)

(assert (=> b!134674 (=> res!64747 e!87721)))

(declare-fun b!134675 () Bool)

(declare-fun e!87725 () SeekEntryResult!275)

(declare-fun e!87722 () SeekEntryResult!275)

(assert (=> b!134675 (= e!87725 e!87722)))

(declare-fun c!25083 () Bool)

(declare-fun lt!70478 () (_ BitVec 64))

(assert (=> b!134675 (= c!25083 (or (= lt!70478 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (= (bvadd lt!70478 lt!70478) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134676 () Bool)

(assert (=> b!134676 (= e!87725 (Intermediate!275 true (toIndex!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (mask!7165 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!134677 () Bool)

(assert (=> b!134677 (= e!87724 (bvsge (x!15592 lt!70479) #b01111111111111111111111111111110))))

(declare-fun b!134678 () Bool)

(assert (=> b!134678 (and (bvsge (index!3262 lt!70479) #b00000000000000000000000000000000) (bvslt (index!3262 lt!70479) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64748 () Bool)

(assert (=> b!134678 (= res!64748 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3262 lt!70479)) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134678 (=> res!64748 e!87721)))

(assert (=> b!134678 (= e!87723 e!87721)))

(declare-fun d!41571 () Bool)

(assert (=> d!41571 e!87724))

(declare-fun c!25082 () Bool)

(assert (=> d!41571 (= c!25082 (and ((_ is Intermediate!275) lt!70479) (undefined!1087 lt!70479)))))

(assert (=> d!41571 (= lt!70479 e!87725)))

(declare-fun c!25084 () Bool)

(assert (=> d!41571 (= c!25084 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!41571 (= lt!70478 (select (arr!2261 (_keys!4614 newMap!16)) (toIndex!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (mask!7165 newMap!16))))))

(assert (=> d!41571 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41571 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (mask!7165 newMap!16)) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!70479)))

(declare-fun b!134679 () Bool)

(assert (=> b!134679 (and (bvsge (index!3262 lt!70479) #b00000000000000000000000000000000) (bvslt (index!3262 lt!70479) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> b!134679 (= e!87721 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3262 lt!70479)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134680 () Bool)

(assert (=> b!134680 (= e!87722 (Intermediate!275 false (toIndex!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (mask!7165 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!134681 () Bool)

(assert (=> b!134681 (= e!87722 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (= (and d!41571 c!25084) b!134676))

(assert (= (and d!41571 (not c!25084)) b!134675))

(assert (= (and b!134675 c!25083) b!134680))

(assert (= (and b!134675 (not c!25083)) b!134681))

(assert (= (and d!41571 c!25082) b!134677))

(assert (= (and d!41571 (not c!25082)) b!134673))

(assert (= (and b!134673 res!64746) b!134678))

(assert (= (and b!134678 (not res!64748)) b!134674))

(assert (= (and b!134674 (not res!64747)) b!134679))

(declare-fun m!160145 () Bool)

(assert (=> b!134678 m!160145))

(assert (=> d!41571 m!157931))

(declare-fun m!160147 () Bool)

(assert (=> d!41571 m!160147))

(assert (=> d!41571 m!156157))

(assert (=> b!134681 m!157931))

(declare-fun m!160149 () Bool)

(assert (=> b!134681 m!160149))

(assert (=> b!134681 m!160149))

(assert (=> b!134681 m!156163))

(declare-fun m!160151 () Bool)

(assert (=> b!134681 m!160151))

(assert (=> b!134679 m!160145))

(assert (=> b!134674 m!160145))

(assert (=> d!40697 d!41571))

(declare-fun d!41573 () Bool)

(declare-fun lt!70481 () (_ BitVec 32))

(declare-fun lt!70480 () (_ BitVec 32))

(assert (=> d!41573 (= lt!70481 (bvmul (bvxor lt!70480 (bvlshr lt!70480 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!41573 (= lt!70480 ((_ extract 31 0) (bvand (bvxor (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!41573 (and (bvsge (mask!7165 newMap!16) #b00000000000000000000000000000000) (let ((res!64248 (let ((h!2321 ((_ extract 31 0) (bvand (bvxor (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15696 (bvmul (bvxor h!2321 (bvlshr h!2321 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15696 (bvlshr x!15696 #b00000000000000000000000000001101)) (mask!7165 newMap!16)))))) (and (bvslt res!64248 (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001)) (bvsge res!64248 #b00000000000000000000000000000000))))))

(assert (=> d!41573 (= (toIndex!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (mask!7165 newMap!16)) (bvand (bvxor lt!70481 (bvlshr lt!70481 #b00000000000000000000000000001101)) (mask!7165 newMap!16)))))

(assert (=> d!40697 d!41573))

(assert (=> d!40697 d!40325))

(assert (=> b!133277 d!40353))

(declare-fun d!41575 () Bool)

(assert (=> d!41575 (= (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))) (and (not (= (select (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133345 d!41575))

(assert (=> d!40521 d!40325))

(declare-fun d!41577 () Bool)

(assert (=> d!41577 (= (isEmpty!410 lt!69548) (isEmpty!411 (toList!869 lt!69548)))))

(declare-fun bs!5623 () Bool)

(assert (= bs!5623 d!41577))

(declare-fun m!160153 () Bool)

(assert (=> bs!5623 m!160153))

(assert (=> b!133015 d!41577))

(declare-fun d!41579 () Bool)

(declare-fun res!64749 () Bool)

(declare-fun e!87726 () Bool)

(assert (=> d!41579 (=> res!64749 e!87726)))

(assert (=> d!41579 (= res!64749 (= (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> d!41579 (= (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!87726)))

(declare-fun b!134682 () Bool)

(declare-fun e!87727 () Bool)

(assert (=> b!134682 (= e!87726 e!87727)))

(declare-fun res!64750 () Bool)

(assert (=> b!134682 (=> (not res!64750) (not e!87727))))

(assert (=> b!134682 (= res!64750 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!134683 () Bool)

(assert (=> b!134683 (= e!87727 (arrayContainsKey!0 (_keys!4614 newMap!16) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!41579 (not res!64749)) b!134682))

(assert (= (and b!134682 res!64750) b!134683))

(assert (=> d!41579 m!159755))

(assert (=> b!134683 m!155869))

(declare-fun m!160155 () Bool)

(assert (=> b!134683 m!160155))

(assert (=> b!133643 d!41579))

(declare-fun d!41581 () Bool)

(declare-fun e!87728 () Bool)

(assert (=> d!41581 e!87728))

(declare-fun res!64752 () Bool)

(assert (=> d!41581 (=> (not res!64752) (not e!87728))))

(declare-fun lt!70482 () ListLongMap!1707)

(assert (=> d!41581 (= res!64752 (contains!899 lt!70482 (_1!1324 (ite (or c!24763 c!24761) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!70484 () List!1716)

(assert (=> d!41581 (= lt!70482 (ListLongMap!1708 lt!70484))))

(declare-fun lt!70485 () Unit!4135)

(declare-fun lt!70483 () Unit!4135)

(assert (=> d!41581 (= lt!70485 lt!70483)))

(assert (=> d!41581 (= (getValueByKey!172 lt!70484 (_1!1324 (ite (or c!24763 c!24761) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24763 c!24761) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41581 (= lt!70483 (lemmaContainsTupThenGetReturnValue!87 lt!70484 (_1!1324 (ite (or c!24763 c!24761) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24763 c!24761) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41581 (= lt!70484 (insertStrictlySorted!90 (toList!869 (ite c!24763 call!14744 (ite c!24761 call!14747 call!14748))) (_1!1324 (ite (or c!24763 c!24761) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24763 c!24761) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41581 (= (+!175 (ite c!24763 call!14744 (ite c!24761 call!14747 call!14748)) (ite (or c!24763 c!24761) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70482)))

(declare-fun b!134684 () Bool)

(declare-fun res!64751 () Bool)

(assert (=> b!134684 (=> (not res!64751) (not e!87728))))

(assert (=> b!134684 (= res!64751 (= (getValueByKey!172 (toList!869 lt!70482) (_1!1324 (ite (or c!24763 c!24761) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24763 c!24761) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!134685 () Bool)

(assert (=> b!134685 (= e!87728 (contains!902 (toList!869 lt!70482) (ite (or c!24763 c!24761) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!41581 res!64752) b!134684))

(assert (= (and b!134684 res!64751) b!134685))

(declare-fun m!160157 () Bool)

(assert (=> d!41581 m!160157))

(declare-fun m!160159 () Bool)

(assert (=> d!41581 m!160159))

(declare-fun m!160161 () Bool)

(assert (=> d!41581 m!160161))

(declare-fun m!160163 () Bool)

(assert (=> d!41581 m!160163))

(declare-fun m!160165 () Bool)

(assert (=> b!134684 m!160165))

(declare-fun m!160167 () Bool)

(assert (=> b!134685 m!160167))

(assert (=> bm!14741 d!41581))

(assert (=> b!133660 d!40709))

(declare-fun lt!70486 () Bool)

(declare-fun d!41583 () Bool)

(assert (=> d!41583 (= lt!70486 (select (content!133 (toList!869 lt!69600)) (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))))

(declare-fun e!87730 () Bool)

(assert (=> d!41583 (= lt!70486 e!87730)))

(declare-fun res!64753 () Bool)

(assert (=> d!41583 (=> (not res!64753) (not e!87730))))

(assert (=> d!41583 (= res!64753 ((_ is Cons!1712) (toList!869 lt!69600)))))

(assert (=> d!41583 (= (contains!902 (toList!869 lt!69600) (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))) lt!70486)))

(declare-fun b!134686 () Bool)

(declare-fun e!87729 () Bool)

(assert (=> b!134686 (= e!87730 e!87729)))

(declare-fun res!64754 () Bool)

(assert (=> b!134686 (=> res!64754 e!87729)))

(assert (=> b!134686 (= res!64754 (= (h!2317 (toList!869 lt!69600)) (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))))

(declare-fun b!134687 () Bool)

(assert (=> b!134687 (= e!87729 (contains!902 (t!6167 (toList!869 lt!69600)) (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41583 res!64753) b!134686))

(assert (= (and b!134686 (not res!64754)) b!134687))

(declare-fun m!160169 () Bool)

(assert (=> d!41583 m!160169))

(declare-fun m!160171 () Bool)

(assert (=> d!41583 m!160171))

(declare-fun m!160173 () Bool)

(assert (=> b!134687 m!160173))

(assert (=> b!133150 d!41583))

(declare-fun d!41585 () Bool)

(assert (=> d!41585 (isDefined!125 (getValueByKey!172 (toList!869 lt!69084) lt!69080))))

(declare-fun lt!70487 () Unit!4135)

(assert (=> d!41585 (= lt!70487 (choose!817 (toList!869 lt!69084) lt!69080))))

(declare-fun e!87731 () Bool)

(assert (=> d!41585 e!87731))

(declare-fun res!64755 () Bool)

(assert (=> d!41585 (=> (not res!64755) (not e!87731))))

(assert (=> d!41585 (= res!64755 (isStrictlySorted!322 (toList!869 lt!69084)))))

(assert (=> d!41585 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69084) lt!69080) lt!70487)))

(declare-fun b!134688 () Bool)

(assert (=> b!134688 (= e!87731 (containsKey!176 (toList!869 lt!69084) lt!69080))))

(assert (= (and d!41585 res!64755) b!134688))

(assert (=> d!41585 m!156399))

(assert (=> d!41585 m!156399))

(assert (=> d!41585 m!157971))

(declare-fun m!160175 () Bool)

(assert (=> d!41585 m!160175))

(assert (=> d!41585 m!158289))

(assert (=> b!134688 m!157967))

(assert (=> b!133670 d!41585))

(assert (=> b!133670 d!40881))

(assert (=> b!133670 d!40827))

(declare-fun b!134691 () Bool)

(declare-fun e!87733 () Option!178)

(assert (=> b!134691 (= e!87733 (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69418))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!134692 () Bool)

(assert (=> b!134692 (= e!87733 None!176)))

(declare-fun c!25085 () Bool)

(declare-fun d!41587 () Bool)

(assert (=> d!41587 (= c!25085 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69418))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69418)))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87732 () Option!178)

(assert (=> d!41587 (= (getValueByKey!172 (t!6167 (toList!869 lt!69418)) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87732)))

(declare-fun b!134689 () Bool)

(assert (=> b!134689 (= e!87732 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 lt!69418))))))))

(declare-fun b!134690 () Bool)

(assert (=> b!134690 (= e!87732 e!87733)))

(declare-fun c!25086 () Bool)

(assert (=> b!134690 (= c!25086 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69418))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69418)))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!41587 c!25085) b!134689))

(assert (= (and d!41587 (not c!25085)) b!134690))

(assert (= (and b!134690 c!25086) b!134691))

(assert (= (and b!134690 (not c!25086)) b!134692))

(declare-fun m!160177 () Bool)

(assert (=> b!134691 m!160177))

(assert (=> b!133779 d!41587))

(declare-fun d!41589 () Bool)

(declare-fun e!87734 () Bool)

(assert (=> d!41589 e!87734))

(declare-fun res!64756 () Bool)

(assert (=> d!41589 (=> res!64756 e!87734)))

(declare-fun lt!70491 () Bool)

(assert (=> d!41589 (= res!64756 (not lt!70491))))

(declare-fun lt!70488 () Bool)

(assert (=> d!41589 (= lt!70491 lt!70488)))

(declare-fun lt!70490 () Unit!4135)

(declare-fun e!87735 () Unit!4135)

(assert (=> d!41589 (= lt!70490 e!87735)))

(declare-fun c!25087 () Bool)

(assert (=> d!41589 (= c!25087 lt!70488)))

(assert (=> d!41589 (= lt!70488 (containsKey!176 (toList!869 lt!69824) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!41589 (= (contains!899 lt!69824 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70491)))

(declare-fun b!134693 () Bool)

(declare-fun lt!70489 () Unit!4135)

(assert (=> b!134693 (= e!87735 lt!70489)))

(assert (=> b!134693 (= lt!70489 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69824) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> b!134693 (isDefined!125 (getValueByKey!172 (toList!869 lt!69824) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134694 () Bool)

(declare-fun Unit!4232 () Unit!4135)

(assert (=> b!134694 (= e!87735 Unit!4232)))

(declare-fun b!134695 () Bool)

(assert (=> b!134695 (= e!87734 (isDefined!125 (getValueByKey!172 (toList!869 lt!69824) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (= (and d!41589 c!25087) b!134693))

(assert (= (and d!41589 (not c!25087)) b!134694))

(assert (= (and d!41589 (not res!64756)) b!134695))

(declare-fun m!160179 () Bool)

(assert (=> d!41589 m!160179))

(declare-fun m!160181 () Bool)

(assert (=> b!134693 m!160181))

(assert (=> b!134693 m!157655))

(assert (=> b!134693 m!157655))

(declare-fun m!160183 () Bool)

(assert (=> b!134693 m!160183))

(assert (=> b!134695 m!157655))

(assert (=> b!134695 m!157655))

(assert (=> b!134695 m!160183))

(assert (=> d!40637 d!41589))

(declare-fun b!134698 () Bool)

(declare-fun e!87737 () Option!178)

(assert (=> b!134698 (= e!87737 (getValueByKey!172 (t!6167 lt!69826) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134699 () Bool)

(assert (=> b!134699 (= e!87737 None!176)))

(declare-fun d!41591 () Bool)

(declare-fun c!25088 () Bool)

(assert (=> d!41591 (= c!25088 (and ((_ is Cons!1712) lt!69826) (= (_1!1324 (h!2317 lt!69826)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun e!87736 () Option!178)

(assert (=> d!41591 (= (getValueByKey!172 lt!69826 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) e!87736)))

(declare-fun b!134696 () Bool)

(assert (=> b!134696 (= e!87736 (Some!177 (_2!1324 (h!2317 lt!69826))))))

(declare-fun b!134697 () Bool)

(assert (=> b!134697 (= e!87736 e!87737)))

(declare-fun c!25089 () Bool)

(assert (=> b!134697 (= c!25089 (and ((_ is Cons!1712) lt!69826) (not (= (_1!1324 (h!2317 lt!69826)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41591 c!25088) b!134696))

(assert (= (and d!41591 (not c!25088)) b!134697))

(assert (= (and b!134697 c!25089) b!134698))

(assert (= (and b!134697 (not c!25089)) b!134699))

(declare-fun m!160185 () Bool)

(assert (=> b!134698 m!160185))

(assert (=> d!40637 d!41591))

(declare-fun d!41593 () Bool)

(assert (=> d!41593 (= (getValueByKey!172 lt!69826 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70492 () Unit!4135)

(assert (=> d!41593 (= lt!70492 (choose!827 lt!69826 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun e!87738 () Bool)

(assert (=> d!41593 e!87738))

(declare-fun res!64757 () Bool)

(assert (=> d!41593 (=> (not res!64757) (not e!87738))))

(assert (=> d!41593 (= res!64757 (isStrictlySorted!322 lt!69826))))

(assert (=> d!41593 (= (lemmaContainsTupThenGetReturnValue!87 lt!69826 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70492)))

(declare-fun b!134700 () Bool)

(declare-fun res!64758 () Bool)

(assert (=> b!134700 (=> (not res!64758) (not e!87738))))

(assert (=> b!134700 (= res!64758 (containsKey!176 lt!69826 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134701 () Bool)

(assert (=> b!134701 (= e!87738 (contains!902 lt!69826 (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (= (and d!41593 res!64757) b!134700))

(assert (= (and b!134700 res!64758) b!134701))

(assert (=> d!41593 m!157649))

(declare-fun m!160187 () Bool)

(assert (=> d!41593 m!160187))

(declare-fun m!160189 () Bool)

(assert (=> d!41593 m!160189))

(declare-fun m!160191 () Bool)

(assert (=> b!134700 m!160191))

(declare-fun m!160193 () Bool)

(assert (=> b!134701 m!160193))

(assert (=> d!40637 d!41593))

(declare-fun bm!14836 () Bool)

(declare-fun call!14840 () List!1716)

(declare-fun call!14841 () List!1716)

(assert (=> bm!14836 (= call!14840 call!14841)))

(declare-fun d!41595 () Bool)

(declare-fun e!87742 () Bool)

(assert (=> d!41595 e!87742))

(declare-fun res!64760 () Bool)

(assert (=> d!41595 (=> (not res!64760) (not e!87742))))

(declare-fun lt!70493 () List!1716)

(assert (=> d!41595 (= res!64760 (isStrictlySorted!322 lt!70493))))

(declare-fun e!87740 () List!1716)

(assert (=> d!41595 (= lt!70493 e!87740)))

(declare-fun c!25093 () Bool)

(assert (=> d!41595 (= c!25093 (and ((_ is Cons!1712) (toList!869 call!14632)) (bvslt (_1!1324 (h!2317 (toList!869 call!14632))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41595 (isStrictlySorted!322 (toList!869 call!14632))))

(assert (=> d!41595 (= (insertStrictlySorted!90 (toList!869 call!14632) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70493)))

(declare-fun b!134702 () Bool)

(assert (=> b!134702 (= e!87742 (contains!902 lt!70493 (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!134703 () Bool)

(declare-fun c!25091 () Bool)

(assert (=> b!134703 (= c!25091 (and ((_ is Cons!1712) (toList!869 call!14632)) (bvsgt (_1!1324 (h!2317 (toList!869 call!14632))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun e!87741 () List!1716)

(declare-fun e!87743 () List!1716)

(assert (=> b!134703 (= e!87741 e!87743)))

(declare-fun b!134704 () Bool)

(declare-fun e!87739 () List!1716)

(assert (=> b!134704 (= e!87739 (insertStrictlySorted!90 (t!6167 (toList!869 call!14632)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134705 () Bool)

(assert (=> b!134705 (= e!87741 call!14840)))

(declare-fun b!134706 () Bool)

(declare-fun call!14839 () List!1716)

(assert (=> b!134706 (= e!87743 call!14839)))

(declare-fun b!134707 () Bool)

(declare-fun c!25090 () Bool)

(assert (=> b!134707 (= e!87739 (ite c!25090 (t!6167 (toList!869 call!14632)) (ite c!25091 (Cons!1712 (h!2317 (toList!869 call!14632)) (t!6167 (toList!869 call!14632))) Nil!1713)))))

(declare-fun b!134708 () Bool)

(assert (=> b!134708 (= e!87743 call!14839)))

(declare-fun b!134709 () Bool)

(assert (=> b!134709 (= e!87740 call!14841)))

(declare-fun bm!14837 () Bool)

(assert (=> bm!14837 (= call!14841 ($colon$colon!92 e!87739 (ite c!25093 (h!2317 (toList!869 call!14632)) (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun c!25092 () Bool)

(assert (=> bm!14837 (= c!25092 c!25093)))

(declare-fun bm!14838 () Bool)

(assert (=> bm!14838 (= call!14839 call!14840)))

(declare-fun b!134710 () Bool)

(declare-fun res!64759 () Bool)

(assert (=> b!134710 (=> (not res!64759) (not e!87742))))

(assert (=> b!134710 (= res!64759 (containsKey!176 lt!70493 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!134711 () Bool)

(assert (=> b!134711 (= e!87740 e!87741)))

(assert (=> b!134711 (= c!25090 (and ((_ is Cons!1712) (toList!869 call!14632)) (= (_1!1324 (h!2317 (toList!869 call!14632))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (= (and d!41595 c!25093) b!134709))

(assert (= (and d!41595 (not c!25093)) b!134711))

(assert (= (and b!134711 c!25090) b!134705))

(assert (= (and b!134711 (not c!25090)) b!134703))

(assert (= (and b!134703 c!25091) b!134706))

(assert (= (and b!134703 (not c!25091)) b!134708))

(assert (= (or b!134706 b!134708) bm!14838))

(assert (= (or b!134705 bm!14838) bm!14836))

(assert (= (or b!134709 bm!14836) bm!14837))

(assert (= (and bm!14837 c!25092) b!134704))

(assert (= (and bm!14837 (not c!25092)) b!134707))

(assert (= (and d!41595 res!64760) b!134710))

(assert (= (and b!134710 res!64759) b!134702))

(declare-fun m!160195 () Bool)

(assert (=> d!41595 m!160195))

(declare-fun m!160197 () Bool)

(assert (=> d!41595 m!160197))

(declare-fun m!160199 () Bool)

(assert (=> bm!14837 m!160199))

(declare-fun m!160201 () Bool)

(assert (=> b!134704 m!160201))

(declare-fun m!160203 () Bool)

(assert (=> b!134702 m!160203))

(declare-fun m!160205 () Bool)

(assert (=> b!134710 m!160205))

(assert (=> d!40637 d!41595))

(declare-fun d!41597 () Bool)

(declare-fun res!64761 () Bool)

(declare-fun e!87744 () Bool)

(assert (=> d!41597 (=> res!64761 e!87744)))

(assert (=> d!41597 (= res!64761 (and ((_ is Cons!1712) lt!69942) (= (_1!1324 (h!2317 lt!69942)) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41597 (= (containsKey!176 lt!69942 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87744)))

(declare-fun b!134712 () Bool)

(declare-fun e!87745 () Bool)

(assert (=> b!134712 (= e!87744 e!87745)))

(declare-fun res!64762 () Bool)

(assert (=> b!134712 (=> (not res!64762) (not e!87745))))

(assert (=> b!134712 (= res!64762 (and (or (not ((_ is Cons!1712) lt!69942)) (bvsle (_1!1324 (h!2317 lt!69942)) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Cons!1712) lt!69942) (bvslt (_1!1324 (h!2317 lt!69942)) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134713 () Bool)

(assert (=> b!134713 (= e!87745 (containsKey!176 (t!6167 lt!69942) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!41597 (not res!64761)) b!134712))

(assert (= (and b!134712 res!64762) b!134713))

(declare-fun m!160207 () Bool)

(assert (=> b!134713 m!160207))

(assert (=> b!133690 d!41597))

(assert (=> b!133252 d!40353))

(declare-fun d!41599 () Bool)

(declare-fun res!64763 () Bool)

(declare-fun e!87746 () Bool)

(assert (=> d!41599 (=> res!64763 e!87746)))

(assert (=> d!41599 (= res!64763 (and ((_ is Cons!1712) lt!69424) (= (_1!1324 (h!2317 lt!69424)) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!41599 (= (containsKey!176 lt!69424 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!87746)))

(declare-fun b!134714 () Bool)

(declare-fun e!87747 () Bool)

(assert (=> b!134714 (= e!87746 e!87747)))

(declare-fun res!64764 () Bool)

(assert (=> b!134714 (=> (not res!64764) (not e!87747))))

(assert (=> b!134714 (= res!64764 (and (or (not ((_ is Cons!1712) lt!69424)) (bvsle (_1!1324 (h!2317 lt!69424)) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1712) lt!69424) (bvslt (_1!1324 (h!2317 lt!69424)) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134715 () Bool)

(assert (=> b!134715 (= e!87747 (containsKey!176 (t!6167 lt!69424) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41599 (not res!64763)) b!134714))

(assert (= (and b!134714 res!64764) b!134715))

(declare-fun m!160209 () Bool)

(assert (=> b!134715 m!160209))

(assert (=> b!133497 d!41599))

(declare-fun d!41601 () Bool)

(declare-fun res!64765 () Bool)

(declare-fun e!87748 () Bool)

(assert (=> d!41601 (=> res!64765 e!87748)))

(assert (=> d!41601 (= res!64765 (and ((_ is Cons!1712) lt!69379) (= (_1!1324 (h!2317 lt!69379)) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41601 (= (containsKey!176 lt!69379 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87748)))

(declare-fun b!134716 () Bool)

(declare-fun e!87749 () Bool)

(assert (=> b!134716 (= e!87748 e!87749)))

(declare-fun res!64766 () Bool)

(assert (=> b!134716 (=> (not res!64766) (not e!87749))))

(assert (=> b!134716 (= res!64766 (and (or (not ((_ is Cons!1712) lt!69379)) (bvsle (_1!1324 (h!2317 lt!69379)) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Cons!1712) lt!69379) (bvslt (_1!1324 (h!2317 lt!69379)) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134717 () Bool)

(assert (=> b!134717 (= e!87749 (containsKey!176 (t!6167 lt!69379) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!41601 (not res!64765)) b!134716))

(assert (= (and b!134716 res!64766) b!134717))

(declare-fun m!160211 () Bool)

(assert (=> b!134717 m!160211))

(assert (=> b!133129 d!41601))

(assert (=> d!40605 d!40603))

(declare-fun d!41603 () Bool)

(assert (=> d!41603 (= (getValueByKey!172 lt!69387 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!41603 true))

(declare-fun _$22!485 () Unit!4135)

(assert (=> d!41603 (= (choose!827 lt!69387 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) _$22!485)))

(declare-fun bs!5624 () Bool)

(assert (= bs!5624 d!41603))

(assert (=> bs!5624 m!156365))

(assert (=> d!40605 d!41603))

(declare-fun d!41605 () Bool)

(declare-fun res!64767 () Bool)

(declare-fun e!87750 () Bool)

(assert (=> d!41605 (=> res!64767 e!87750)))

(assert (=> d!41605 (= res!64767 (or ((_ is Nil!1713) lt!69387) ((_ is Nil!1713) (t!6167 lt!69387))))))

(assert (=> d!41605 (= (isStrictlySorted!322 lt!69387) e!87750)))

(declare-fun b!134718 () Bool)

(declare-fun e!87751 () Bool)

(assert (=> b!134718 (= e!87750 e!87751)))

(declare-fun res!64768 () Bool)

(assert (=> b!134718 (=> (not res!64768) (not e!87751))))

(assert (=> b!134718 (= res!64768 (bvslt (_1!1324 (h!2317 lt!69387)) (_1!1324 (h!2317 (t!6167 lt!69387)))))))

(declare-fun b!134719 () Bool)

(assert (=> b!134719 (= e!87751 (isStrictlySorted!322 (t!6167 lt!69387)))))

(assert (= (and d!41605 (not res!64767)) b!134718))

(assert (= (and b!134718 res!64768) b!134719))

(declare-fun m!160213 () Bool)

(assert (=> b!134719 m!160213))

(assert (=> d!40605 d!41605))

(declare-fun d!41607 () Bool)

(declare-fun c!25094 () Bool)

(assert (=> d!41607 (= c!25094 ((_ is Nil!1713) (toList!869 lt!69418)))))

(declare-fun e!87752 () (InoxSet tuple2!2626))

(assert (=> d!41607 (= (content!133 (toList!869 lt!69418)) e!87752)))

(declare-fun b!134720 () Bool)

(assert (=> b!134720 (= e!87752 ((as const (Array tuple2!2626 Bool)) false))))

(declare-fun b!134721 () Bool)

(assert (=> b!134721 (= e!87752 ((_ map or) (store ((as const (Array tuple2!2626 Bool)) false) (h!2317 (toList!869 lt!69418)) true) (content!133 (t!6167 (toList!869 lt!69418)))))))

(assert (= (and d!41607 c!25094) b!134720))

(assert (= (and d!41607 (not c!25094)) b!134721))

(declare-fun m!160215 () Bool)

(assert (=> b!134721 m!160215))

(declare-fun m!160217 () Bool)

(assert (=> b!134721 m!160217))

(assert (=> d!40737 d!41607))

(declare-fun b!134724 () Bool)

(declare-fun e!87754 () Option!178)

(assert (=> b!134724 (= e!87754 (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69095))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134725 () Bool)

(assert (=> b!134725 (= e!87754 None!176)))

(declare-fun d!41609 () Bool)

(declare-fun c!25095 () Bool)

(assert (=> d!41609 (= c!25095 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69095))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87753 () Option!178)

(assert (=> d!41609 (= (getValueByKey!172 (t!6167 (toList!869 lt!69095)) #b0000000000000000000000000000000000000000000000000000000000000000) e!87753)))

(declare-fun b!134722 () Bool)

(assert (=> b!134722 (= e!87753 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 lt!69095))))))))

(declare-fun b!134723 () Bool)

(assert (=> b!134723 (= e!87753 e!87754)))

(declare-fun c!25096 () Bool)

(assert (=> b!134723 (= c!25096 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69095))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095)))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!41609 c!25095) b!134722))

(assert (= (and d!41609 (not c!25095)) b!134723))

(assert (= (and b!134723 c!25096) b!134724))

(assert (= (and b!134723 (not c!25096)) b!134725))

(declare-fun m!160219 () Bool)

(assert (=> b!134724 m!160219))

(assert (=> b!132986 d!41609))

(declare-fun bm!14839 () Bool)

(declare-fun call!14842 () Bool)

(assert (=> bm!14839 (= call!14842 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!134726 () Bool)

(declare-fun e!87757 () Bool)

(declare-fun e!87755 () Bool)

(assert (=> b!134726 (= e!87757 e!87755)))

(declare-fun c!25097 () Bool)

(assert (=> b!134726 (= c!25097 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!41611 () Bool)

(declare-fun res!64769 () Bool)

(assert (=> d!41611 (=> res!64769 e!87757)))

(assert (=> d!41611 (= res!64769 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!41611 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 newMap!16) (mask!7165 newMap!16)) e!87757)))

(declare-fun b!134727 () Bool)

(assert (=> b!134727 (= e!87755 call!14842)))

(declare-fun b!134728 () Bool)

(declare-fun e!87756 () Bool)

(assert (=> b!134728 (= e!87756 call!14842)))

(declare-fun b!134729 () Bool)

(assert (=> b!134729 (= e!87755 e!87756)))

(declare-fun lt!70495 () (_ BitVec 64))

(assert (=> b!134729 (= lt!70495 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!70496 () Unit!4135)

(assert (=> b!134729 (= lt!70496 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 newMap!16) lt!70495 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!134729 (arrayContainsKey!0 (_keys!4614 newMap!16) lt!70495 #b00000000000000000000000000000000)))

(declare-fun lt!70494 () Unit!4135)

(assert (=> b!134729 (= lt!70494 lt!70496)))

(declare-fun res!64770 () Bool)

(assert (=> b!134729 (= res!64770 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4614 newMap!16) (mask!7165 newMap!16)) (Found!275 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!134729 (=> (not res!64770) (not e!87756))))

(assert (= (and d!41611 (not res!64769)) b!134726))

(assert (= (and b!134726 c!25097) b!134729))

(assert (= (and b!134726 (not c!25097)) b!134727))

(assert (= (and b!134729 res!64770) b!134728))

(assert (= (or b!134728 b!134727) bm!14839))

(declare-fun m!160221 () Bool)

(assert (=> bm!14839 m!160221))

(assert (=> b!134726 m!159755))

(assert (=> b!134726 m!159755))

(assert (=> b!134726 m!159759))

(assert (=> b!134729 m!159755))

(declare-fun m!160223 () Bool)

(assert (=> b!134729 m!160223))

(declare-fun m!160225 () Bool)

(assert (=> b!134729 m!160225))

(assert (=> b!134729 m!159755))

(declare-fun m!160227 () Bool)

(assert (=> b!134729 m!160227))

(assert (=> bm!14747 d!41611))

(declare-fun d!41613 () Bool)

(declare-fun c!25100 () Bool)

(assert (=> d!41613 (= c!25100 ((_ is Nil!1714) (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)))))

(declare-fun e!87760 () (InoxSet (_ BitVec 64)))

(assert (=> d!41613 (= (content!132 (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) e!87760)))

(declare-fun b!134734 () Bool)

(assert (=> b!134734 (= e!87760 ((as const (Array (_ BitVec 64) Bool)) false))))

(declare-fun b!134735 () Bool)

(assert (=> b!134735 (= e!87760 ((_ map or) (store ((as const (Array (_ BitVec 64) Bool)) false) (h!2318 (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) true) (content!132 (t!6168 (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)))))))

(assert (= (and d!41613 c!25100) b!134734))

(assert (= (and d!41613 (not c!25100)) b!134735))

(declare-fun m!160229 () Bool)

(assert (=> b!134735 m!160229))

(declare-fun m!160231 () Bool)

(assert (=> b!134735 m!160231))

(assert (=> d!40417 d!41613))

(declare-fun bm!14840 () Bool)

(declare-fun call!14844 () List!1716)

(declare-fun call!14845 () List!1716)

(assert (=> bm!14840 (= call!14844 call!14845)))

(declare-fun d!41615 () Bool)

(declare-fun e!87764 () Bool)

(assert (=> d!41615 e!87764))

(declare-fun res!64772 () Bool)

(assert (=> d!41615 (=> (not res!64772) (not e!87764))))

(declare-fun lt!70497 () List!1716)

(assert (=> d!41615 (= res!64772 (isStrictlySorted!322 lt!70497))))

(declare-fun e!87762 () List!1716)

(assert (=> d!41615 (= lt!70497 e!87762)))

(declare-fun c!25104 () Bool)

(assert (=> d!41615 (= c!25104 (and ((_ is Cons!1712) (t!6167 (toList!869 call!14544))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 call!14544)))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41615 (isStrictlySorted!322 (t!6167 (toList!869 call!14544)))))

(assert (=> d!41615 (= (insertStrictlySorted!90 (t!6167 (toList!869 call!14544)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!70497)))

(declare-fun b!134736 () Bool)

(assert (=> b!134736 (= e!87764 (contains!902 lt!70497 (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134737 () Bool)

(declare-fun c!25102 () Bool)

(assert (=> b!134737 (= c!25102 (and ((_ is Cons!1712) (t!6167 (toList!869 call!14544))) (bvsgt (_1!1324 (h!2317 (t!6167 (toList!869 call!14544)))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87763 () List!1716)

(declare-fun e!87765 () List!1716)

(assert (=> b!134737 (= e!87763 e!87765)))

(declare-fun b!134738 () Bool)

(declare-fun e!87761 () List!1716)

(assert (=> b!134738 (= e!87761 (insertStrictlySorted!90 (t!6167 (t!6167 (toList!869 call!14544))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!134739 () Bool)

(assert (=> b!134739 (= e!87763 call!14844)))

(declare-fun b!134740 () Bool)

(declare-fun call!14843 () List!1716)

(assert (=> b!134740 (= e!87765 call!14843)))

(declare-fun b!134741 () Bool)

(declare-fun c!25101 () Bool)

(assert (=> b!134741 (= e!87761 (ite c!25101 (t!6167 (t!6167 (toList!869 call!14544))) (ite c!25102 (Cons!1712 (h!2317 (t!6167 (toList!869 call!14544))) (t!6167 (t!6167 (toList!869 call!14544)))) Nil!1713)))))

(declare-fun b!134742 () Bool)

(assert (=> b!134742 (= e!87765 call!14843)))

(declare-fun b!134743 () Bool)

(assert (=> b!134743 (= e!87762 call!14845)))

(declare-fun bm!14841 () Bool)

(assert (=> bm!14841 (= call!14845 ($colon$colon!92 e!87761 (ite c!25104 (h!2317 (t!6167 (toList!869 call!14544))) (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun c!25103 () Bool)

(assert (=> bm!14841 (= c!25103 c!25104)))

(declare-fun bm!14842 () Bool)

(assert (=> bm!14842 (= call!14843 call!14844)))

(declare-fun b!134744 () Bool)

(declare-fun res!64771 () Bool)

(assert (=> b!134744 (=> (not res!64771) (not e!87764))))

(assert (=> b!134744 (= res!64771 (containsKey!176 lt!70497 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!134745 () Bool)

(assert (=> b!134745 (= e!87762 e!87763)))

(assert (=> b!134745 (= c!25101 (and ((_ is Cons!1712) (t!6167 (toList!869 call!14544))) (= (_1!1324 (h!2317 (t!6167 (toList!869 call!14544)))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!41615 c!25104) b!134743))

(assert (= (and d!41615 (not c!25104)) b!134745))

(assert (= (and b!134745 c!25101) b!134739))

(assert (= (and b!134745 (not c!25101)) b!134737))

(assert (= (and b!134737 c!25102) b!134740))

(assert (= (and b!134737 (not c!25102)) b!134742))

(assert (= (or b!134740 b!134742) bm!14842))

(assert (= (or b!134739 bm!14842) bm!14840))

(assert (= (or b!134743 bm!14840) bm!14841))

(assert (= (and bm!14841 c!25103) b!134738))

(assert (= (and bm!14841 (not c!25103)) b!134741))

(assert (= (and d!41615 res!64772) b!134744))

(assert (= (and b!134744 res!64771) b!134736))

(declare-fun m!160233 () Bool)

(assert (=> d!41615 m!160233))

(assert (=> d!41615 m!159985))

(declare-fun m!160235 () Bool)

(assert (=> bm!14841 m!160235))

(declare-fun m!160237 () Bool)

(assert (=> b!134738 m!160237))

(declare-fun m!160239 () Bool)

(assert (=> b!134736 m!160239))

(declare-fun m!160241 () Bool)

(assert (=> b!134744 m!160241))

(assert (=> b!133399 d!41615))

(assert (=> d!40409 d!40407))

(declare-fun d!41617 () Bool)

(assert (=> d!41617 (= (getValueByKey!172 lt!69502 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41617 true))

(declare-fun _$22!486 () Unit!4135)

(assert (=> d!41617 (= (choose!827 lt!69502 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) _$22!486)))

(declare-fun bs!5625 () Bool)

(assert (= bs!5625 d!41617))

(assert (=> bs!5625 m!156651))

(assert (=> d!40409 d!41617))

(declare-fun d!41619 () Bool)

(declare-fun res!64773 () Bool)

(declare-fun e!87766 () Bool)

(assert (=> d!41619 (=> res!64773 e!87766)))

(assert (=> d!41619 (= res!64773 (or ((_ is Nil!1713) lt!69502) ((_ is Nil!1713) (t!6167 lt!69502))))))

(assert (=> d!41619 (= (isStrictlySorted!322 lt!69502) e!87766)))

(declare-fun b!134746 () Bool)

(declare-fun e!87767 () Bool)

(assert (=> b!134746 (= e!87766 e!87767)))

(declare-fun res!64774 () Bool)

(assert (=> b!134746 (=> (not res!64774) (not e!87767))))

(assert (=> b!134746 (= res!64774 (bvslt (_1!1324 (h!2317 lt!69502)) (_1!1324 (h!2317 (t!6167 lt!69502)))))))

(declare-fun b!134747 () Bool)

(assert (=> b!134747 (= e!87767 (isStrictlySorted!322 (t!6167 lt!69502)))))

(assert (= (and d!41619 (not res!64773)) b!134746))

(assert (= (and b!134746 res!64774) b!134747))

(declare-fun m!160243 () Bool)

(assert (=> b!134747 m!160243))

(assert (=> d!40409 d!41619))

(declare-fun d!41621 () Bool)

(assert (=> d!41621 (contains!899 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (select (arr!2261 lt!69349) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175))))))

(assert (=> d!41621 true))

(declare-fun _$16!152 () Unit!4135)

(assert (=> d!41621 (= (choose!820 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (defaultEntry!2865 newMap!16)) _$16!152)))

(declare-fun bs!5626 () Bool)

(assert (= bs!5626 d!41621))

(assert (=> bs!5626 m!156257))

(assert (=> bs!5626 m!157379))

(assert (=> bs!5626 m!156257))

(assert (=> bs!5626 m!157379))

(assert (=> bs!5626 m!157381))

(assert (=> d!40543 d!41621))

(assert (=> d!40543 d!40325))

(assert (=> bm!14746 d!40867))

(declare-fun d!41623 () Bool)

(assert (=> d!41623 (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69859 #b00000000000000000000000000000000)))

(declare-fun lt!70498 () Unit!4135)

(assert (=> d!41623 (= lt!70498 (choose!13 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69859 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> d!41623 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!41623 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69859 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) lt!70498)))

(declare-fun bs!5627 () Bool)

(assert (= bs!5627 d!41623))

(assert (=> bs!5627 m!157739))

(declare-fun m!160245 () Bool)

(assert (=> bs!5627 m!160245))

(assert (=> b!133556 d!41623))

(declare-fun d!41625 () Bool)

(declare-fun res!64775 () Bool)

(declare-fun e!87768 () Bool)

(assert (=> d!41625 (=> res!64775 e!87768)))

(assert (=> d!41625 (= res!64775 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) lt!69859))))

(assert (=> d!41625 (= (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69859 #b00000000000000000000000000000000) e!87768)))

(declare-fun b!134748 () Bool)

(declare-fun e!87769 () Bool)

(assert (=> b!134748 (= e!87768 e!87769)))

(declare-fun res!64776 () Bool)

(assert (=> b!134748 (=> (not res!64776) (not e!87769))))

(assert (=> b!134748 (= res!64776 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!134749 () Bool)

(assert (=> b!134749 (= e!87769 (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69859 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!41625 (not res!64775)) b!134748))

(assert (= (and b!134748 res!64776) b!134749))

(assert (=> d!41625 m!155999))

(declare-fun m!160247 () Bool)

(assert (=> b!134749 m!160247))

(assert (=> b!133556 d!41625))

(declare-fun b!134750 () Bool)

(declare-fun e!87770 () SeekEntryResult!275)

(declare-fun lt!70500 () SeekEntryResult!275)

(assert (=> b!134750 (= e!87770 (Found!275 (index!3262 lt!70500)))))

(declare-fun d!41627 () Bool)

(declare-fun lt!70501 () SeekEntryResult!275)

(assert (=> d!41627 (and (or ((_ is Undefined!275) lt!70501) (not ((_ is Found!275) lt!70501)) (and (bvsge (index!3261 lt!70501) #b00000000000000000000000000000000) (bvslt (index!3261 lt!70501) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))) (or ((_ is Undefined!275) lt!70501) ((_ is Found!275) lt!70501) (not ((_ is MissingZero!275) lt!70501)) (and (bvsge (index!3260 lt!70501) #b00000000000000000000000000000000) (bvslt (index!3260 lt!70501) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))) (or ((_ is Undefined!275) lt!70501) ((_ is Found!275) lt!70501) ((_ is MissingZero!275) lt!70501) (not ((_ is MissingVacant!275) lt!70501)) (and (bvsge (index!3263 lt!70501) #b00000000000000000000000000000000) (bvslt (index!3263 lt!70501) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))) (or ((_ is Undefined!275) lt!70501) (ite ((_ is Found!275) lt!70501) (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3261 lt!70501)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!275) lt!70501) (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3260 lt!70501)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!275) lt!70501) (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3263 lt!70501)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87771 () SeekEntryResult!275)

(assert (=> d!41627 (= lt!70501 e!87771)))

(declare-fun c!25106 () Bool)

(assert (=> d!41627 (= c!25106 (and ((_ is Intermediate!275) lt!70500) (undefined!1087 lt!70500)))))

(assert (=> d!41627 (= lt!70500 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(assert (=> d!41627 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!41627 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) lt!70501)))

(declare-fun b!134751 () Bool)

(assert (=> b!134751 (= e!87771 e!87770)))

(declare-fun lt!70499 () (_ BitVec 64))

(assert (=> b!134751 (= lt!70499 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!70500)))))

(declare-fun c!25105 () Bool)

(assert (=> b!134751 (= c!25105 (= lt!70499 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134752 () Bool)

(declare-fun e!87772 () SeekEntryResult!275)

(assert (=> b!134752 (= e!87772 (MissingZero!275 (index!3262 lt!70500)))))

(declare-fun b!134753 () Bool)

(declare-fun c!25107 () Bool)

(assert (=> b!134753 (= c!25107 (= lt!70499 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134753 (= e!87770 e!87772)))

(declare-fun b!134754 () Bool)

(assert (=> b!134754 (= e!87771 Undefined!275)))

(declare-fun b!134755 () Bool)

(assert (=> b!134755 (= e!87772 (seekKeyOrZeroReturnVacant!0 (x!15592 lt!70500) (index!3262 lt!70500) (index!3262 lt!70500) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(assert (= (and d!41627 c!25106) b!134754))

(assert (= (and d!41627 (not c!25106)) b!134751))

(assert (= (and b!134751 c!25105) b!134750))

(assert (= (and b!134751 (not c!25105)) b!134753))

(assert (= (and b!134753 c!25107) b!134752))

(assert (= (and b!134753 (not c!25107)) b!134755))

(declare-fun m!160249 () Bool)

(assert (=> d!41627 m!160249))

(declare-fun m!160251 () Bool)

(assert (=> d!41627 m!160251))

(assert (=> d!41627 m!157733))

(declare-fun m!160253 () Bool)

(assert (=> d!41627 m!160253))

(assert (=> d!41627 m!157733))

(assert (=> d!41627 m!160251))

(assert (=> d!41627 m!155867))

(declare-fun m!160255 () Bool)

(assert (=> d!41627 m!160255))

(declare-fun m!160257 () Bool)

(assert (=> d!41627 m!160257))

(declare-fun m!160259 () Bool)

(assert (=> b!134751 m!160259))

(assert (=> b!134755 m!157733))

(declare-fun m!160261 () Bool)

(assert (=> b!134755 m!160261))

(assert (=> b!133556 d!41627))

(declare-fun d!41629 () Bool)

(declare-fun e!87773 () Bool)

(assert (=> d!41629 e!87773))

(declare-fun res!64778 () Bool)

(assert (=> d!41629 (=> (not res!64778) (not e!87773))))

(declare-fun lt!70502 () ListLongMap!1707)

(assert (=> d!41629 (= res!64778 (contains!899 lt!70502 (_1!1324 (ite (or c!24748 c!24746) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!70504 () List!1716)

(assert (=> d!41629 (= lt!70502 (ListLongMap!1708 lt!70504))))

(declare-fun lt!70505 () Unit!4135)

(declare-fun lt!70503 () Unit!4135)

(assert (=> d!41629 (= lt!70505 lt!70503)))

(assert (=> d!41629 (= (getValueByKey!172 lt!70504 (_1!1324 (ite (or c!24748 c!24746) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24748 c!24746) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41629 (= lt!70503 (lemmaContainsTupThenGetReturnValue!87 lt!70504 (_1!1324 (ite (or c!24748 c!24746) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24748 c!24746) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41629 (= lt!70504 (insertStrictlySorted!90 (toList!869 (ite c!24748 call!14736 (ite c!24746 call!14739 call!14740))) (_1!1324 (ite (or c!24748 c!24746) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24748 c!24746) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41629 (= (+!175 (ite c!24748 call!14736 (ite c!24746 call!14739 call!14740)) (ite (or c!24748 c!24746) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70502)))

(declare-fun b!134756 () Bool)

(declare-fun res!64777 () Bool)

(assert (=> b!134756 (=> (not res!64777) (not e!87773))))

(assert (=> b!134756 (= res!64777 (= (getValueByKey!172 (toList!869 lt!70502) (_1!1324 (ite (or c!24748 c!24746) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24748 c!24746) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!134757 () Bool)

(assert (=> b!134757 (= e!87773 (contains!902 (toList!869 lt!70502) (ite (or c!24748 c!24746) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!41629 res!64778) b!134756))

(assert (= (and b!134756 res!64777) b!134757))

(declare-fun m!160263 () Bool)

(assert (=> d!41629 m!160263))

(declare-fun m!160265 () Bool)

(assert (=> d!41629 m!160265))

(declare-fun m!160267 () Bool)

(assert (=> d!41629 m!160267))

(declare-fun m!160269 () Bool)

(assert (=> d!41629 m!160269))

(declare-fun m!160271 () Bool)

(assert (=> b!134756 m!160271))

(declare-fun m!160273 () Bool)

(assert (=> b!134757 m!160273))

(assert (=> bm!14733 d!41629))

(assert (=> d!40519 d!40517))

(assert (=> d!40519 d!40229))

(assert (=> d!40519 d!40521))

(declare-fun d!41631 () Bool)

(declare-fun res!64779 () Bool)

(declare-fun e!87774 () Bool)

(assert (=> d!41631 (=> res!64779 e!87774)))

(assert (=> d!41631 (= res!64779 (and ((_ is Cons!1712) (toList!869 (map!1409 (_2!1325 lt!69358)))) (= (_1!1324 (h!2317 (toList!869 (map!1409 (_2!1325 lt!69358))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(assert (=> d!41631 (= (containsKey!176 (toList!869 (map!1409 (_2!1325 lt!69358))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!87774)))

(declare-fun b!134758 () Bool)

(declare-fun e!87775 () Bool)

(assert (=> b!134758 (= e!87774 e!87775)))

(declare-fun res!64780 () Bool)

(assert (=> b!134758 (=> (not res!64780) (not e!87775))))

(assert (=> b!134758 (= res!64780 (and (or (not ((_ is Cons!1712) (toList!869 (map!1409 (_2!1325 lt!69358))))) (bvsle (_1!1324 (h!2317 (toList!869 (map!1409 (_2!1325 lt!69358))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))) ((_ is Cons!1712) (toList!869 (map!1409 (_2!1325 lt!69358)))) (bvslt (_1!1324 (h!2317 (toList!869 (map!1409 (_2!1325 lt!69358))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun b!134759 () Bool)

(assert (=> b!134759 (= e!87775 (containsKey!176 (t!6167 (toList!869 (map!1409 (_2!1325 lt!69358)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (= (and d!41631 (not res!64779)) b!134758))

(assert (= (and b!134758 res!64780) b!134759))

(assert (=> b!134759 m!155869))

(declare-fun m!160275 () Bool)

(assert (=> b!134759 m!160275))

(assert (=> d!40561 d!41631))

(assert (=> d!40801 d!40781))

(assert (=> d!40801 d!40785))

(declare-fun d!41633 () Bool)

(assert (=> d!41633 (= (apply!116 (+!175 lt!69251 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))) lt!69247) (apply!116 lt!69251 lt!69247))))

(assert (=> d!41633 true))

(declare-fun _$34!982 () Unit!4135)

(assert (=> d!41633 (= (choose!822 lt!69251 lt!69253 (zeroValue!2720 newMap!16) lt!69247) _$34!982)))

(declare-fun bs!5628 () Bool)

(assert (= bs!5628 d!41633))

(assert (=> bs!5628 m!156189))

(assert (=> bs!5628 m!156189))

(assert (=> bs!5628 m!156191))

(assert (=> bs!5628 m!156209))

(assert (=> d!40801 d!41633))

(declare-fun d!41635 () Bool)

(declare-fun e!87776 () Bool)

(assert (=> d!41635 e!87776))

(declare-fun res!64781 () Bool)

(assert (=> d!41635 (=> res!64781 e!87776)))

(declare-fun lt!70509 () Bool)

(assert (=> d!41635 (= res!64781 (not lt!70509))))

(declare-fun lt!70506 () Bool)

(assert (=> d!41635 (= lt!70509 lt!70506)))

(declare-fun lt!70508 () Unit!4135)

(declare-fun e!87777 () Unit!4135)

(assert (=> d!41635 (= lt!70508 e!87777)))

(declare-fun c!25108 () Bool)

(assert (=> d!41635 (= c!25108 lt!70506)))

(assert (=> d!41635 (= lt!70506 (containsKey!176 (toList!869 lt!69251) lt!69247))))

(assert (=> d!41635 (= (contains!899 lt!69251 lt!69247) lt!70509)))

(declare-fun b!134760 () Bool)

(declare-fun lt!70507 () Unit!4135)

(assert (=> b!134760 (= e!87777 lt!70507)))

(assert (=> b!134760 (= lt!70507 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69251) lt!69247))))

(assert (=> b!134760 (isDefined!125 (getValueByKey!172 (toList!869 lt!69251) lt!69247))))

(declare-fun b!134761 () Bool)

(declare-fun Unit!4233 () Unit!4135)

(assert (=> b!134761 (= e!87777 Unit!4233)))

(declare-fun b!134762 () Bool)

(assert (=> b!134762 (= e!87776 (isDefined!125 (getValueByKey!172 (toList!869 lt!69251) lt!69247)))))

(assert (= (and d!41635 c!25108) b!134760))

(assert (= (and d!41635 (not c!25108)) b!134761))

(assert (= (and d!41635 (not res!64781)) b!134762))

(declare-fun m!160277 () Bool)

(assert (=> d!41635 m!160277))

(declare-fun m!160279 () Bool)

(assert (=> b!134760 m!160279))

(assert (=> b!134760 m!158169))

(assert (=> b!134760 m!158169))

(declare-fun m!160281 () Bool)

(assert (=> b!134760 m!160281))

(assert (=> b!134762 m!158169))

(assert (=> b!134762 m!158169))

(assert (=> b!134762 m!160281))

(assert (=> d!40801 d!41635))

(assert (=> d!40801 d!40791))

(declare-fun b!134765 () Bool)

(declare-fun e!87779 () Option!178)

(assert (=> b!134765 (= e!87779 (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69095))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!134766 () Bool)

(assert (=> b!134766 (= e!87779 None!176)))

(declare-fun c!25109 () Bool)

(declare-fun d!41637 () Bool)

(assert (=> d!41637 (= c!25109 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69095))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!87778 () Option!178)

(assert (=> d!41637 (= (getValueByKey!172 (t!6167 (toList!869 lt!69095)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!87778)))

(declare-fun b!134763 () Bool)

(assert (=> b!134763 (= e!87778 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 lt!69095))))))))

(declare-fun b!134764 () Bool)

(assert (=> b!134764 (= e!87778 e!87779)))

(declare-fun c!25110 () Bool)

(assert (=> b!134764 (= c!25110 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69095))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!41637 c!25109) b!134763))

(assert (= (and d!41637 (not c!25109)) b!134764))

(assert (= (and b!134764 c!25110) b!134765))

(assert (= (and b!134764 (not c!25110)) b!134766))

(assert (=> b!134765 m!155949))

(declare-fun m!160283 () Bool)

(assert (=> b!134765 m!160283))

(assert (=> b!132977 d!41637))

(declare-fun d!41639 () Bool)

(declare-fun res!64782 () Bool)

(declare-fun e!87780 () Bool)

(assert (=> d!41639 (=> res!64782 e!87780)))

(assert (=> d!41639 (= res!64782 (and ((_ is Cons!1712) lt!69420) (= (_1!1324 (h!2317 lt!69420)) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41639 (= (containsKey!176 lt!69420 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87780)))

(declare-fun b!134767 () Bool)

(declare-fun e!87781 () Bool)

(assert (=> b!134767 (= e!87780 e!87781)))

(declare-fun res!64783 () Bool)

(assert (=> b!134767 (=> (not res!64783) (not e!87781))))

(assert (=> b!134767 (= res!64783 (and (or (not ((_ is Cons!1712) lt!69420)) (bvsle (_1!1324 (h!2317 lt!69420)) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Cons!1712) lt!69420) (bvslt (_1!1324 (h!2317 lt!69420)) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134768 () Bool)

(assert (=> b!134768 (= e!87781 (containsKey!176 (t!6167 lt!69420) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!41639 (not res!64782)) b!134767))

(assert (= (and b!134767 res!64783) b!134768))

(declare-fun m!160285 () Bool)

(assert (=> b!134768 m!160285))

(assert (=> b!133800 d!41639))

(assert (=> b!133325 d!41505))

(declare-fun d!41641 () Bool)

(declare-fun res!64784 () Bool)

(declare-fun e!87782 () Bool)

(assert (=> d!41641 (=> res!64784 e!87782)))

(assert (=> d!41641 (= res!64784 (and ((_ is Cons!1712) lt!69211) (= (_1!1324 (h!2317 lt!69211)) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (=> d!41641 (= (containsKey!176 lt!69211 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) e!87782)))

(declare-fun b!134769 () Bool)

(declare-fun e!87783 () Bool)

(assert (=> b!134769 (= e!87782 e!87783)))

(declare-fun res!64785 () Bool)

(assert (=> b!134769 (=> (not res!64785) (not e!87783))))

(assert (=> b!134769 (= res!64785 (and (or (not ((_ is Cons!1712) lt!69211)) (bvsle (_1!1324 (h!2317 lt!69211)) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) ((_ is Cons!1712) lt!69211) (bvslt (_1!1324 (h!2317 lt!69211)) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun b!134770 () Bool)

(assert (=> b!134770 (= e!87783 (containsKey!176 (t!6167 lt!69211) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!41641 (not res!64784)) b!134769))

(assert (= (and b!134769 res!64785) b!134770))

(declare-fun m!160287 () Bool)

(assert (=> b!134770 m!160287))

(assert (=> b!133174 d!41641))

(declare-fun d!41643 () Bool)

(declare-fun lt!70510 () Bool)

(assert (=> d!41643 (= lt!70510 (select (content!132 (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!87784 () Bool)

(assert (=> d!41643 (= lt!70510 e!87784)))

(declare-fun res!64786 () Bool)

(assert (=> d!41643 (=> (not res!64786) (not e!87784))))

(assert (=> d!41643 (= res!64786 ((_ is Cons!1713) (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714)))))

(assert (=> d!41643 (= (contains!901 (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714) (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!70510)))

(declare-fun b!134771 () Bool)

(declare-fun e!87785 () Bool)

(assert (=> b!134771 (= e!87784 e!87785)))

(declare-fun res!64787 () Bool)

(assert (=> b!134771 (=> res!64787 e!87785)))

(assert (=> b!134771 (= res!64787 (= (h!2318 (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134772 () Bool)

(assert (=> b!134772 (= e!87785 (contains!901 (t!6168 (ite c!24533 (Cons!1713 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!41643 res!64786) b!134771))

(assert (= (and b!134771 (not res!64787)) b!134772))

(declare-fun m!160289 () Bool)

(assert (=> d!41643 m!160289))

(assert (=> d!41643 m!157845))

(declare-fun m!160291 () Bool)

(assert (=> d!41643 m!160291))

(assert (=> b!134772 m!157845))

(declare-fun m!160293 () Bool)

(assert (=> b!134772 m!160293))

(assert (=> b!133816 d!41643))

(declare-fun lt!70511 () Bool)

(declare-fun d!41645 () Bool)

(assert (=> d!41645 (= lt!70511 (select (content!133 (toList!869 lt!69696)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87787 () Bool)

(assert (=> d!41645 (= lt!70511 e!87787)))

(declare-fun res!64788 () Bool)

(assert (=> d!41645 (=> (not res!64788) (not e!87787))))

(assert (=> d!41645 (= res!64788 ((_ is Cons!1712) (toList!869 lt!69696)))))

(assert (=> d!41645 (= (contains!902 (toList!869 lt!69696) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70511)))

(declare-fun b!134773 () Bool)

(declare-fun e!87786 () Bool)

(assert (=> b!134773 (= e!87787 e!87786)))

(declare-fun res!64789 () Bool)

(assert (=> b!134773 (=> res!64789 e!87786)))

(assert (=> b!134773 (= res!64789 (= (h!2317 (toList!869 lt!69696)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134774 () Bool)

(assert (=> b!134774 (= e!87786 (contains!902 (t!6167 (toList!869 lt!69696)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41645 res!64788) b!134773))

(assert (= (and b!134773 (not res!64789)) b!134774))

(declare-fun m!160295 () Bool)

(assert (=> d!41645 m!160295))

(declare-fun m!160297 () Bool)

(assert (=> d!41645 m!160297))

(declare-fun m!160299 () Bool)

(assert (=> b!134774 m!160299))

(assert (=> b!133284 d!41645))

(declare-fun d!41647 () Bool)

(assert (=> d!41647 (= (get!1486 (getValueByKey!172 (toList!869 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!172 (toList!869 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40587 d!41647))

(assert (=> d!40587 d!41503))

(declare-fun d!41649 () Bool)

(declare-fun lt!70512 () Bool)

(assert (=> d!41649 (= lt!70512 (select (content!133 lt!69807) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87789 () Bool)

(assert (=> d!41649 (= lt!70512 e!87789)))

(declare-fun res!64790 () Bool)

(assert (=> d!41649 (=> (not res!64790) (not e!87789))))

(assert (=> d!41649 (= res!64790 ((_ is Cons!1712) lt!69807))))

(assert (=> d!41649 (= (contains!902 lt!69807 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!70512)))

(declare-fun b!134775 () Bool)

(declare-fun e!87788 () Bool)

(assert (=> b!134775 (= e!87789 e!87788)))

(declare-fun res!64791 () Bool)

(assert (=> b!134775 (=> res!64791 e!87788)))

(assert (=> b!134775 (= res!64791 (= (h!2317 lt!69807) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134776 () Bool)

(assert (=> b!134776 (= e!87788 (contains!902 (t!6167 lt!69807) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!41649 res!64790) b!134775))

(assert (= (and b!134775 (not res!64791)) b!134776))

(declare-fun m!160301 () Bool)

(assert (=> d!41649 m!160301))

(declare-fun m!160303 () Bool)

(assert (=> d!41649 m!160303))

(declare-fun m!160305 () Bool)

(assert (=> b!134776 m!160305))

(assert (=> b!133459 d!41649))

(declare-fun d!41651 () Bool)

(declare-fun e!87790 () Bool)

(assert (=> d!41651 e!87790))

(declare-fun res!64792 () Bool)

(assert (=> d!41651 (=> res!64792 e!87790)))

(declare-fun lt!70516 () Bool)

(assert (=> d!41651 (= res!64792 (not lt!70516))))

(declare-fun lt!70513 () Bool)

(assert (=> d!41651 (= lt!70516 lt!70513)))

(declare-fun lt!70515 () Unit!4135)

(declare-fun e!87791 () Unit!4135)

(assert (=> d!41651 (= lt!70515 e!87791)))

(declare-fun c!25111 () Bool)

(assert (=> d!41651 (= c!25111 lt!70513)))

(assert (=> d!41651 (= lt!70513 (containsKey!176 (toList!869 lt!69974) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!41651 (= (contains!899 lt!69974 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70516)))

(declare-fun b!134777 () Bool)

(declare-fun lt!70514 () Unit!4135)

(assert (=> b!134777 (= e!87791 lt!70514)))

(assert (=> b!134777 (= lt!70514 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69974) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> b!134777 (isDefined!125 (getValueByKey!172 (toList!869 lt!69974) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134778 () Bool)

(declare-fun Unit!4234 () Unit!4135)

(assert (=> b!134778 (= e!87791 Unit!4234)))

(declare-fun b!134779 () Bool)

(assert (=> b!134779 (= e!87790 (isDefined!125 (getValueByKey!172 (toList!869 lt!69974) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (= (and d!41651 c!25111) b!134777))

(assert (= (and d!41651 (not c!25111)) b!134778))

(assert (= (and d!41651 (not res!64792)) b!134779))

(declare-fun m!160307 () Bool)

(assert (=> d!41651 m!160307))

(declare-fun m!160309 () Bool)

(assert (=> b!134777 m!160309))

(assert (=> b!134777 m!158101))

(assert (=> b!134777 m!158101))

(declare-fun m!160311 () Bool)

(assert (=> b!134777 m!160311))

(assert (=> b!134779 m!158101))

(assert (=> b!134779 m!158101))

(assert (=> b!134779 m!160311))

(assert (=> d!40759 d!41651))

(declare-fun b!134782 () Bool)

(declare-fun e!87793 () Option!178)

(assert (=> b!134782 (= e!87793 (getValueByKey!172 (t!6167 lt!69976) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134783 () Bool)

(assert (=> b!134783 (= e!87793 None!176)))

(declare-fun c!25112 () Bool)

(declare-fun d!41653 () Bool)

(assert (=> d!41653 (= c!25112 (and ((_ is Cons!1712) lt!69976) (= (_1!1324 (h!2317 lt!69976)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun e!87792 () Option!178)

(assert (=> d!41653 (= (getValueByKey!172 lt!69976 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) e!87792)))

(declare-fun b!134780 () Bool)

(assert (=> b!134780 (= e!87792 (Some!177 (_2!1324 (h!2317 lt!69976))))))

(declare-fun b!134781 () Bool)

(assert (=> b!134781 (= e!87792 e!87793)))

(declare-fun c!25113 () Bool)

(assert (=> b!134781 (= c!25113 (and ((_ is Cons!1712) lt!69976) (not (= (_1!1324 (h!2317 lt!69976)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (= (and d!41653 c!25112) b!134780))

(assert (= (and d!41653 (not c!25112)) b!134781))

(assert (= (and b!134781 c!25113) b!134782))

(assert (= (and b!134781 (not c!25113)) b!134783))

(declare-fun m!160313 () Bool)

(assert (=> b!134782 m!160313))

(assert (=> d!40759 d!41653))

(declare-fun d!41655 () Bool)

(assert (=> d!41655 (= (getValueByKey!172 lt!69976 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun lt!70517 () Unit!4135)

(assert (=> d!41655 (= lt!70517 (choose!827 lt!69976 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun e!87794 () Bool)

(assert (=> d!41655 e!87794))

(declare-fun res!64793 () Bool)

(assert (=> d!41655 (=> (not res!64793) (not e!87794))))

(assert (=> d!41655 (= res!64793 (isStrictlySorted!322 lt!69976))))

(assert (=> d!41655 (= (lemmaContainsTupThenGetReturnValue!87 lt!69976 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70517)))

(declare-fun b!134784 () Bool)

(declare-fun res!64794 () Bool)

(assert (=> b!134784 (=> (not res!64794) (not e!87794))))

(assert (=> b!134784 (= res!64794 (containsKey!176 lt!69976 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134785 () Bool)

(assert (=> b!134785 (= e!87794 (contains!902 lt!69976 (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (= (and d!41655 res!64793) b!134784))

(assert (= (and b!134784 res!64794) b!134785))

(assert (=> d!41655 m!158095))

(declare-fun m!160315 () Bool)

(assert (=> d!41655 m!160315))

(declare-fun m!160317 () Bool)

(assert (=> d!41655 m!160317))

(declare-fun m!160319 () Bool)

(assert (=> b!134784 m!160319))

(declare-fun m!160321 () Bool)

(assert (=> b!134785 m!160321))

(assert (=> d!40759 d!41655))

(declare-fun bm!14843 () Bool)

(declare-fun call!14847 () List!1716)

(declare-fun call!14848 () List!1716)

(assert (=> bm!14843 (= call!14847 call!14848)))

(declare-fun d!41657 () Bool)

(declare-fun e!87798 () Bool)

(assert (=> d!41657 e!87798))

(declare-fun res!64796 () Bool)

(assert (=> d!41657 (=> (not res!64796) (not e!87798))))

(declare-fun lt!70518 () List!1716)

(assert (=> d!41657 (= res!64796 (isStrictlySorted!322 lt!70518))))

(declare-fun e!87796 () List!1716)

(assert (=> d!41657 (= lt!70518 e!87796)))

(declare-fun c!25117 () Bool)

(assert (=> d!41657 (= c!25117 (and ((_ is Cons!1712) (toList!869 call!14668)) (bvslt (_1!1324 (h!2317 (toList!869 call!14668))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!41657 (isStrictlySorted!322 (toList!869 call!14668))))

(assert (=> d!41657 (= (insertStrictlySorted!90 (toList!869 call!14668) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70518)))

(declare-fun b!134786 () Bool)

(assert (=> b!134786 (= e!87798 (contains!902 lt!70518 (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun c!25115 () Bool)

(declare-fun b!134787 () Bool)

(assert (=> b!134787 (= c!25115 (and ((_ is Cons!1712) (toList!869 call!14668)) (bvsgt (_1!1324 (h!2317 (toList!869 call!14668))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun e!87797 () List!1716)

(declare-fun e!87799 () List!1716)

(assert (=> b!134787 (= e!87797 e!87799)))

(declare-fun e!87795 () List!1716)

(declare-fun b!134788 () Bool)

(assert (=> b!134788 (= e!87795 (insertStrictlySorted!90 (t!6167 (toList!869 call!14668)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134789 () Bool)

(assert (=> b!134789 (= e!87797 call!14847)))

(declare-fun b!134790 () Bool)

(declare-fun call!14846 () List!1716)

(assert (=> b!134790 (= e!87799 call!14846)))

(declare-fun b!134791 () Bool)

(declare-fun c!25114 () Bool)

(assert (=> b!134791 (= e!87795 (ite c!25114 (t!6167 (toList!869 call!14668)) (ite c!25115 (Cons!1712 (h!2317 (toList!869 call!14668)) (t!6167 (toList!869 call!14668))) Nil!1713)))))

(declare-fun b!134792 () Bool)

(assert (=> b!134792 (= e!87799 call!14846)))

(declare-fun b!134793 () Bool)

(assert (=> b!134793 (= e!87796 call!14848)))

(declare-fun bm!14844 () Bool)

(assert (=> bm!14844 (= call!14848 ($colon$colon!92 e!87795 (ite c!25117 (h!2317 (toList!869 call!14668)) (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun c!25116 () Bool)

(assert (=> bm!14844 (= c!25116 c!25117)))

(declare-fun bm!14845 () Bool)

(assert (=> bm!14845 (= call!14846 call!14847)))

(declare-fun b!134794 () Bool)

(declare-fun res!64795 () Bool)

(assert (=> b!134794 (=> (not res!64795) (not e!87798))))

(assert (=> b!134794 (= res!64795 (containsKey!176 lt!70518 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!134795 () Bool)

(assert (=> b!134795 (= e!87796 e!87797)))

(assert (=> b!134795 (= c!25114 (and ((_ is Cons!1712) (toList!869 call!14668)) (= (_1!1324 (h!2317 (toList!869 call!14668))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (= (and d!41657 c!25117) b!134793))

(assert (= (and d!41657 (not c!25117)) b!134795))

(assert (= (and b!134795 c!25114) b!134789))

(assert (= (and b!134795 (not c!25114)) b!134787))

(assert (= (and b!134787 c!25115) b!134790))

(assert (= (and b!134787 (not c!25115)) b!134792))

(assert (= (or b!134790 b!134792) bm!14845))

(assert (= (or b!134789 bm!14845) bm!14843))

(assert (= (or b!134793 bm!14843) bm!14844))

(assert (= (and bm!14844 c!25116) b!134788))

(assert (= (and bm!14844 (not c!25116)) b!134791))

(assert (= (and d!41657 res!64796) b!134794))

(assert (= (and b!134794 res!64795) b!134786))

(declare-fun m!160323 () Bool)

(assert (=> d!41657 m!160323))

(declare-fun m!160325 () Bool)

(assert (=> d!41657 m!160325))

(declare-fun m!160327 () Bool)

(assert (=> bm!14844 m!160327))

(declare-fun m!160329 () Bool)

(assert (=> b!134788 m!160329))

(declare-fun m!160331 () Bool)

(assert (=> b!134786 m!160331))

(declare-fun m!160333 () Bool)

(assert (=> b!134794 m!160333))

(assert (=> d!40759 d!41657))

(declare-fun d!41659 () Bool)

(declare-fun e!87800 () Bool)

(assert (=> d!41659 e!87800))

(declare-fun res!64797 () Bool)

(assert (=> d!41659 (=> res!64797 e!87800)))

(declare-fun lt!70522 () Bool)

(assert (=> d!41659 (= res!64797 (not lt!70522))))

(declare-fun lt!70519 () Bool)

(assert (=> d!41659 (= lt!70522 lt!70519)))

(declare-fun lt!70521 () Unit!4135)

(declare-fun e!87801 () Unit!4135)

(assert (=> d!41659 (= lt!70521 e!87801)))

(declare-fun c!25118 () Bool)

(assert (=> d!41659 (= c!25118 lt!70519)))

(assert (=> d!41659 (= lt!70519 (containsKey!176 (toList!869 lt!69761) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41659 (= (contains!899 lt!69761 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70522)))

(declare-fun b!134796 () Bool)

(declare-fun lt!70520 () Unit!4135)

(assert (=> b!134796 (= e!87801 lt!70520)))

(assert (=> b!134796 (= lt!70520 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69761) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134796 (isDefined!125 (getValueByKey!172 (toList!869 lt!69761) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134797 () Bool)

(declare-fun Unit!4235 () Unit!4135)

(assert (=> b!134797 (= e!87801 Unit!4235)))

(declare-fun b!134798 () Bool)

(assert (=> b!134798 (= e!87800 (isDefined!125 (getValueByKey!172 (toList!869 lt!69761) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41659 c!25118) b!134796))

(assert (= (and d!41659 (not c!25118)) b!134797))

(assert (= (and d!41659 (not res!64797)) b!134798))

(declare-fun m!160335 () Bool)

(assert (=> d!41659 m!160335))

(declare-fun m!160337 () Bool)

(assert (=> b!134796 m!160337))

(declare-fun m!160339 () Bool)

(assert (=> b!134796 m!160339))

(assert (=> b!134796 m!160339))

(declare-fun m!160341 () Bool)

(assert (=> b!134796 m!160341))

(assert (=> b!134798 m!160339))

(assert (=> b!134798 m!160339))

(assert (=> b!134798 m!160341))

(assert (=> bm!14713 d!41659))

(declare-fun d!41661 () Bool)

(assert (=> d!41661 (= (apply!116 lt!69692 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69692) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5629 () Bool)

(assert (= bs!5629 d!41661))

(assert (=> bs!5629 m!159499))

(assert (=> bs!5629 m!159499))

(declare-fun m!160343 () Bool)

(assert (=> bs!5629 m!160343))

(assert (=> b!133276 d!41661))

(declare-fun d!41663 () Bool)

(declare-fun res!64798 () Bool)

(declare-fun e!87802 () Bool)

(assert (=> d!41663 (=> res!64798 e!87802)))

(assert (=> d!41663 (= res!64798 (and ((_ is Cons!1712) (t!6167 (toList!869 call!14604))) (= (_1!1324 (h!2317 (t!6167 (toList!869 call!14604)))) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))))

(assert (=> d!41663 (= (containsKey!176 (t!6167 (toList!869 call!14604)) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))) e!87802)))

(declare-fun b!134799 () Bool)

(declare-fun e!87803 () Bool)

(assert (=> b!134799 (= e!87802 e!87803)))

(declare-fun res!64799 () Bool)

(assert (=> b!134799 (=> (not res!64799) (not e!87803))))

(assert (=> b!134799 (= res!64799 (and (or (not ((_ is Cons!1712) (t!6167 (toList!869 call!14604)))) (bvsle (_1!1324 (h!2317 (t!6167 (toList!869 call!14604)))) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))) ((_ is Cons!1712) (t!6167 (toList!869 call!14604))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 call!14604)))) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))))

(declare-fun b!134800 () Bool)

(assert (=> b!134800 (= e!87803 (containsKey!176 (t!6167 (t!6167 (toList!869 call!14604))) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(assert (= (and d!41663 (not res!64798)) b!134799))

(assert (= (and b!134799 res!64799) b!134800))

(declare-fun m!160345 () Bool)

(assert (=> b!134800 m!160345))

(assert (=> b!133604 d!41663))

(declare-fun d!41665 () Bool)

(declare-fun res!64800 () Bool)

(declare-fun e!87804 () Bool)

(assert (=> d!41665 (=> res!64800 e!87804)))

(assert (=> d!41665 (= res!64800 (or ((_ is Nil!1713) lt!69574) ((_ is Nil!1713) (t!6167 lt!69574))))))

(assert (=> d!41665 (= (isStrictlySorted!322 lt!69574) e!87804)))

(declare-fun b!134801 () Bool)

(declare-fun e!87805 () Bool)

(assert (=> b!134801 (= e!87804 e!87805)))

(declare-fun res!64801 () Bool)

(assert (=> b!134801 (=> (not res!64801) (not e!87805))))

(assert (=> b!134801 (= res!64801 (bvslt (_1!1324 (h!2317 lt!69574)) (_1!1324 (h!2317 (t!6167 lt!69574)))))))

(declare-fun b!134802 () Bool)

(assert (=> b!134802 (= e!87805 (isStrictlySorted!322 (t!6167 lt!69574)))))

(assert (= (and d!41665 (not res!64800)) b!134801))

(assert (= (and b!134801 res!64801) b!134802))

(declare-fun m!160347 () Bool)

(assert (=> b!134802 m!160347))

(assert (=> d!40411 d!41665))

(declare-fun d!41667 () Bool)

(declare-fun res!64802 () Bool)

(declare-fun e!87806 () Bool)

(assert (=> d!41667 (=> res!64802 e!87806)))

(assert (=> d!41667 (= res!64802 (or ((_ is Nil!1713) (toList!869 call!14603)) ((_ is Nil!1713) (t!6167 (toList!869 call!14603)))))))

(assert (=> d!41667 (= (isStrictlySorted!322 (toList!869 call!14603)) e!87806)))

(declare-fun b!134803 () Bool)

(declare-fun e!87807 () Bool)

(assert (=> b!134803 (= e!87806 e!87807)))

(declare-fun res!64803 () Bool)

(assert (=> b!134803 (=> (not res!64803) (not e!87807))))

(assert (=> b!134803 (= res!64803 (bvslt (_1!1324 (h!2317 (toList!869 call!14603))) (_1!1324 (h!2317 (t!6167 (toList!869 call!14603))))))))

(declare-fun b!134804 () Bool)

(assert (=> b!134804 (= e!87807 (isStrictlySorted!322 (t!6167 (toList!869 call!14603))))))

(assert (= (and d!41667 (not res!64802)) b!134803))

(assert (= (and b!134803 res!64803) b!134804))

(declare-fun m!160349 () Bool)

(assert (=> b!134804 m!160349))

(assert (=> d!40411 d!41667))

(declare-fun d!41669 () Bool)

(assert (=> d!41669 (= (isEmpty!409 (getValueByKey!172 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))) (not ((_ is Some!177) (getValueByKey!172 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))))

(assert (=> d!40583 d!41669))

(declare-fun b!134807 () Bool)

(declare-fun e!87809 () Option!178)

(assert (=> b!134807 (= e!87809 (getValueByKey!172 (t!6167 (toList!869 lt!69600)) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))

(declare-fun b!134808 () Bool)

(assert (=> b!134808 (= e!87809 None!176)))

(declare-fun d!41671 () Bool)

(declare-fun c!25119 () Bool)

(assert (=> d!41671 (= c!25119 (and ((_ is Cons!1712) (toList!869 lt!69600)) (= (_1!1324 (h!2317 (toList!869 lt!69600))) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))))))

(declare-fun e!87808 () Option!178)

(assert (=> d!41671 (= (getValueByKey!172 (toList!869 lt!69600) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) e!87808)))

(declare-fun b!134805 () Bool)

(assert (=> b!134805 (= e!87808 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69600)))))))

(declare-fun b!134806 () Bool)

(assert (=> b!134806 (= e!87808 e!87809)))

(declare-fun c!25120 () Bool)

(assert (=> b!134806 (= c!25120 (and ((_ is Cons!1712) (toList!869 lt!69600)) (not (= (_1!1324 (h!2317 (toList!869 lt!69600))) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!41671 c!25119) b!134805))

(assert (= (and d!41671 (not c!25119)) b!134806))

(assert (= (and b!134806 c!25120) b!134807))

(assert (= (and b!134806 (not c!25120)) b!134808))

(declare-fun m!160351 () Bool)

(assert (=> b!134807 m!160351))

(assert (=> b!133149 d!41671))

(assert (=> d!40621 d!40377))

(declare-fun d!41673 () Bool)

(assert (=> d!41673 (= (get!1486 (getValueByKey!172 (toList!869 lt!69448) lt!69467)) (v!3203 (getValueByKey!172 (toList!869 lt!69448) lt!69467)))))

(assert (=> d!40431 d!41673))

(declare-fun b!134811 () Bool)

(declare-fun e!87811 () Option!178)

(assert (=> b!134811 (= e!87811 (getValueByKey!172 (t!6167 (toList!869 lt!69448)) lt!69467))))

(declare-fun b!134812 () Bool)

(assert (=> b!134812 (= e!87811 None!176)))

(declare-fun d!41675 () Bool)

(declare-fun c!25121 () Bool)

(assert (=> d!41675 (= c!25121 (and ((_ is Cons!1712) (toList!869 lt!69448)) (= (_1!1324 (h!2317 (toList!869 lt!69448))) lt!69467)))))

(declare-fun e!87810 () Option!178)

(assert (=> d!41675 (= (getValueByKey!172 (toList!869 lt!69448) lt!69467) e!87810)))

(declare-fun b!134809 () Bool)

(assert (=> b!134809 (= e!87810 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69448)))))))

(declare-fun b!134810 () Bool)

(assert (=> b!134810 (= e!87810 e!87811)))

(declare-fun c!25122 () Bool)

(assert (=> b!134810 (= c!25122 (and ((_ is Cons!1712) (toList!869 lt!69448)) (not (= (_1!1324 (h!2317 (toList!869 lt!69448))) lt!69467))))))

(assert (= (and d!41675 c!25121) b!134809))

(assert (= (and d!41675 (not c!25121)) b!134810))

(assert (= (and b!134810 c!25122) b!134811))

(assert (= (and b!134810 (not c!25122)) b!134812))

(declare-fun m!160353 () Bool)

(assert (=> b!134811 m!160353))

(assert (=> d!40431 d!41675))

(declare-fun d!41677 () Bool)

(declare-fun lt!70523 () Bool)

(assert (=> d!41677 (= lt!70523 (select (content!133 (toList!869 lt!69642)) (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(declare-fun e!87813 () Bool)

(assert (=> d!41677 (= lt!70523 e!87813)))

(declare-fun res!64804 () Bool)

(assert (=> d!41677 (=> (not res!64804) (not e!87813))))

(assert (=> d!41677 (= res!64804 ((_ is Cons!1712) (toList!869 lt!69642)))))

(assert (=> d!41677 (= (contains!902 (toList!869 lt!69642) (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!70523)))

(declare-fun b!134813 () Bool)

(declare-fun e!87812 () Bool)

(assert (=> b!134813 (= e!87813 e!87812)))

(declare-fun res!64805 () Bool)

(assert (=> b!134813 (=> res!64805 e!87812)))

(assert (=> b!134813 (= res!64805 (= (h!2317 (toList!869 lt!69642)) (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(declare-fun b!134814 () Bool)

(assert (=> b!134814 (= e!87812 (contains!902 (t!6167 (toList!869 lt!69642)) (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(assert (= (and d!41677 res!64804) b!134813))

(assert (= (and b!134813 (not res!64805)) b!134814))

(declare-fun m!160355 () Bool)

(assert (=> d!41677 m!160355))

(declare-fun m!160357 () Bool)

(assert (=> d!41677 m!160357))

(declare-fun m!160359 () Bool)

(assert (=> b!134814 m!160359))

(assert (=> b!133231 d!41677))

(declare-fun d!41679 () Bool)

(declare-fun res!64806 () Bool)

(declare-fun e!87814 () Bool)

(assert (=> d!41679 (=> res!64806 e!87814)))

(assert (=> d!41679 (= res!64806 (and ((_ is Cons!1712) (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (= (_1!1324 (h!2317 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(assert (=> d!41679 (= (containsKey!176 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!87814)))

(declare-fun b!134815 () Bool)

(declare-fun e!87815 () Bool)

(assert (=> b!134815 (= e!87814 e!87815)))

(declare-fun res!64807 () Bool)

(assert (=> b!134815 (=> (not res!64807) (not e!87815))))

(assert (=> b!134815 (= res!64807 (and (or (not ((_ is Cons!1712) (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))) (bvsle (_1!1324 (h!2317 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))) ((_ is Cons!1712) (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun b!134816 () Bool)

(assert (=> b!134816 (= e!87815 (containsKey!176 (t!6167 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (= (and d!41679 (not res!64806)) b!134815))

(assert (= (and b!134815 res!64807) b!134816))

(assert (=> b!134816 m!155869))

(declare-fun m!160361 () Bool)

(assert (=> b!134816 m!160361))

(assert (=> b!133039 d!41679))

(declare-fun b!134817 () Bool)

(declare-fun e!87817 () Bool)

(declare-fun e!87820 () Bool)

(assert (=> b!134817 (= e!87817 e!87820)))

(declare-fun c!25123 () Bool)

(declare-fun e!87822 () Bool)

(assert (=> b!134817 (= c!25123 e!87822)))

(declare-fun res!64811 () Bool)

(assert (=> b!134817 (=> (not res!64811) (not e!87822))))

(assert (=> b!134817 (= res!64811 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!134818 () Bool)

(declare-fun e!87821 () Bool)

(declare-fun lt!70529 () ListLongMap!1707)

(assert (=> b!134818 (= e!87821 (isEmpty!410 lt!70529))))

(declare-fun b!134819 () Bool)

(declare-fun lt!70525 () Unit!4135)

(declare-fun lt!70526 () Unit!4135)

(assert (=> b!134819 (= lt!70525 lt!70526)))

(declare-fun lt!70528 () ListLongMap!1707)

(declare-fun lt!70527 () (_ BitVec 64))

(declare-fun lt!70524 () V!3483)

(declare-fun lt!70530 () (_ BitVec 64))

(assert (=> b!134819 (not (contains!899 (+!175 lt!70528 (tuple2!2627 lt!70527 lt!70524)) lt!70530))))

(assert (=> b!134819 (= lt!70526 (addStillNotContains!61 lt!70528 lt!70527 lt!70524 lt!70530))))

(assert (=> b!134819 (= lt!70530 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134819 (= lt!70524 (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134819 (= lt!70527 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!14849 () ListLongMap!1707)

(assert (=> b!134819 (= lt!70528 call!14849)))

(declare-fun e!87819 () ListLongMap!1707)

(assert (=> b!134819 (= e!87819 (+!175 call!14849 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134820 () Bool)

(assert (=> b!134820 (= e!87820 e!87821)))

(declare-fun c!25126 () Bool)

(assert (=> b!134820 (= c!25126 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!134821 () Bool)

(assert (=> b!134821 (= e!87822 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134821 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!134822 () Bool)

(declare-fun res!64809 () Bool)

(assert (=> b!134822 (=> (not res!64809) (not e!87817))))

(assert (=> b!134822 (= res!64809 (not (contains!899 lt!70529 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134823 () Bool)

(assert (=> b!134823 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> b!134823 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2531 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190))))))

(declare-fun e!87816 () Bool)

(assert (=> b!134823 (= e!87816 (= (apply!116 lt!70529 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41681 () Bool)

(assert (=> d!41681 e!87817))

(declare-fun res!64810 () Bool)

(assert (=> d!41681 (=> (not res!64810) (not e!87817))))

(assert (=> d!41681 (= res!64810 (not (contains!899 lt!70529 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87818 () ListLongMap!1707)

(assert (=> d!41681 (= lt!70529 e!87818)))

(declare-fun c!25124 () Bool)

(assert (=> d!41681 (= c!25124 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!41681 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41681 (= (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190) (mask!7165 newMap!16) (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)) lt!70529)))

(declare-fun b!134824 () Bool)

(assert (=> b!134824 (= e!87819 call!14849)))

(declare-fun bm!14846 () Bool)

(assert (=> bm!14846 (= call!14849 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190) (mask!7165 newMap!16) (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!134825 () Bool)

(assert (=> b!134825 (= e!87820 e!87816)))

(assert (=> b!134825 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64808 () Bool)

(assert (=> b!134825 (= res!64808 (contains!899 lt!70529 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134825 (=> (not res!64808) (not e!87816))))

(declare-fun b!134826 () Bool)

(assert (=> b!134826 (= e!87818 (ListLongMap!1708 Nil!1713))))

(declare-fun b!134827 () Bool)

(assert (=> b!134827 (= e!87821 (= lt!70529 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190) (mask!7165 newMap!16) (ite c!24491 (ite c!24497 lt!69189 lt!69180) (extraKeys!2630 newMap!16)) (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!134828 () Bool)

(assert (=> b!134828 (= e!87818 e!87819)))

(declare-fun c!25125 () Bool)

(assert (=> b!134828 (= c!25125 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!41681 c!25124) b!134826))

(assert (= (and d!41681 (not c!25124)) b!134828))

(assert (= (and b!134828 c!25125) b!134819))

(assert (= (and b!134828 (not c!25125)) b!134824))

(assert (= (or b!134819 b!134824) bm!14846))

(assert (= (and d!41681 res!64810) b!134822))

(assert (= (and b!134822 res!64809) b!134817))

(assert (= (and b!134817 res!64811) b!134821))

(assert (= (and b!134817 c!25123) b!134825))

(assert (= (and b!134817 (not c!25123)) b!134820))

(assert (= (and b!134825 res!64808) b!134823))

(assert (= (and b!134820 c!25126) b!134827))

(assert (= (and b!134820 (not c!25126)) b!134818))

(declare-fun b_lambda!6003 () Bool)

(assert (=> (not b_lambda!6003) (not b!134819)))

(assert (=> b!134819 t!6176))

(declare-fun b_and!8347 () Bool)

(assert (= b_and!8343 (and (=> t!6176 result!3997) b_and!8347)))

(assert (=> b!134819 t!6178))

(declare-fun b_and!8349 () Bool)

(assert (= b_and!8345 (and (=> t!6178 result!3999) b_and!8349)))

(declare-fun b_lambda!6005 () Bool)

(assert (=> (not b_lambda!6005) (not b!134823)))

(assert (=> b!134823 t!6176))

(declare-fun b_and!8351 () Bool)

(assert (= b_and!8347 (and (=> t!6176 result!3997) b_and!8351)))

(assert (=> b!134823 t!6178))

(declare-fun b_and!8353 () Bool)

(assert (= b_and!8349 (and (=> t!6178 result!3999) b_and!8353)))

(declare-fun m!160363 () Bool)

(assert (=> b!134818 m!160363))

(declare-fun m!160365 () Bool)

(assert (=> d!41681 m!160365))

(assert (=> d!41681 m!156157))

(declare-fun m!160367 () Bool)

(assert (=> b!134822 m!160367))

(assert (=> b!134828 m!157845))

(assert (=> b!134828 m!157845))

(assert (=> b!134828 m!157847))

(assert (=> b!134821 m!157845))

(assert (=> b!134821 m!157845))

(assert (=> b!134821 m!157847))

(assert (=> b!134823 m!156175))

(declare-fun m!160369 () Bool)

(assert (=> b!134823 m!160369))

(assert (=> b!134823 m!156175))

(declare-fun m!160371 () Bool)

(assert (=> b!134823 m!160371))

(assert (=> b!134823 m!160369))

(assert (=> b!134823 m!157845))

(declare-fun m!160373 () Bool)

(assert (=> b!134823 m!160373))

(assert (=> b!134823 m!157845))

(assert (=> b!134825 m!157845))

(assert (=> b!134825 m!157845))

(declare-fun m!160375 () Bool)

(assert (=> b!134825 m!160375))

(declare-fun m!160377 () Bool)

(assert (=> b!134827 m!160377))

(assert (=> bm!14846 m!160377))

(assert (=> b!134819 m!156175))

(assert (=> b!134819 m!160369))

(assert (=> b!134819 m!156175))

(assert (=> b!134819 m!160371))

(declare-fun m!160379 () Bool)

(assert (=> b!134819 m!160379))

(declare-fun m!160381 () Bool)

(assert (=> b!134819 m!160381))

(assert (=> b!134819 m!160369))

(declare-fun m!160383 () Bool)

(assert (=> b!134819 m!160383))

(assert (=> b!134819 m!157845))

(assert (=> b!134819 m!160381))

(declare-fun m!160385 () Bool)

(assert (=> b!134819 m!160385))

(assert (=> b!133251 d!41681))

(declare-fun d!41683 () Bool)

(declare-fun res!64812 () Bool)

(declare-fun e!87823 () Bool)

(assert (=> d!41683 (=> res!64812 e!87823)))

(assert (=> d!41683 (= res!64812 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) lt!69106))))

(assert (=> d!41683 (= (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69106 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!87823)))

(declare-fun b!134829 () Bool)

(declare-fun e!87824 () Bool)

(assert (=> b!134829 (= e!87823 e!87824)))

(declare-fun res!64813 () Bool)

(assert (=> b!134829 (=> (not res!64813) (not e!87824))))

(assert (=> b!134829 (= res!64813 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!134830 () Bool)

(assert (=> b!134830 (= e!87824 (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69106 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!41683 (not res!64812)) b!134829))

(assert (= (and b!134829 res!64813) b!134830))

(assert (=> d!41683 m!157733))

(declare-fun m!160387 () Bool)

(assert (=> b!134830 m!160387))

(assert (=> b!133739 d!41683))

(declare-fun d!41685 () Bool)

(declare-fun res!64814 () Bool)

(declare-fun e!87825 () Bool)

(assert (=> d!41685 (=> res!64814 e!87825)))

(assert (=> d!41685 (= res!64814 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))) lt!69259)))))

(assert (=> d!41685 (= (containsKey!176 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) lt!69259) e!87825)))

(declare-fun b!134831 () Bool)

(declare-fun e!87826 () Bool)

(assert (=> b!134831 (= e!87825 e!87826)))

(declare-fun res!64815 () Bool)

(assert (=> b!134831 (=> (not res!64815) (not e!87826))))

(assert (=> b!134831 (= res!64815 (and (or (not ((_ is Cons!1712) (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))) (bvsle (_1!1324 (h!2317 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))) lt!69259)) ((_ is Cons!1712) (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))) (bvslt (_1!1324 (h!2317 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))) lt!69259)))))

(declare-fun b!134832 () Bool)

(assert (=> b!134832 (= e!87826 (containsKey!176 (t!6167 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))) lt!69259))))

(assert (= (and d!41685 (not res!64814)) b!134831))

(assert (= (and b!134831 res!64815) b!134832))

(declare-fun m!160389 () Bool)

(assert (=> b!134832 m!160389))

(assert (=> d!40805 d!41685))

(declare-fun d!41687 () Bool)

(assert (=> d!41687 (= (get!1486 (getValueByKey!172 (toList!869 lt!69262) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) (v!3203 (getValueByKey!172 (toList!869 lt!69262) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!40373 d!41687))

(assert (=> d!40373 d!41083))

(declare-fun e!87828 () Option!178)

(declare-fun b!134835 () Bool)

(assert (=> b!134835 (= e!87828 (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69500))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134836 () Bool)

(assert (=> b!134836 (= e!87828 None!176)))

(declare-fun c!25127 () Bool)

(declare-fun d!41689 () Bool)

(assert (=> d!41689 (= c!25127 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69500))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69500)))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87827 () Option!178)

(assert (=> d!41689 (= (getValueByKey!172 (t!6167 (toList!869 lt!69500)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87827)))

(declare-fun b!134833 () Bool)

(assert (=> b!134833 (= e!87827 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 lt!69500))))))))

(declare-fun b!134834 () Bool)

(assert (=> b!134834 (= e!87827 e!87828)))

(declare-fun c!25128 () Bool)

(assert (=> b!134834 (= c!25128 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69500))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69500)))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!41689 c!25127) b!134833))

(assert (= (and d!41689 (not c!25127)) b!134834))

(assert (= (and b!134834 c!25128) b!134835))

(assert (= (and b!134834 (not c!25128)) b!134836))

(declare-fun m!160391 () Bool)

(assert (=> b!134835 m!160391))

(assert (=> b!133384 d!41689))

(declare-fun b!134837 () Bool)

(declare-fun e!87830 () Bool)

(declare-fun e!87833 () Bool)

(assert (=> b!134837 (= e!87830 e!87833)))

(declare-fun c!25129 () Bool)

(declare-fun e!87835 () Bool)

(assert (=> b!134837 (= c!25129 e!87835)))

(declare-fun res!64819 () Bool)

(assert (=> b!134837 (=> (not res!64819) (not e!87835))))

(assert (=> b!134837 (= res!64819 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!134838 () Bool)

(declare-fun e!87834 () Bool)

(declare-fun lt!70536 () ListLongMap!1707)

(assert (=> b!134838 (= e!87834 (isEmpty!410 lt!70536))))

(declare-fun b!134839 () Bool)

(declare-fun lt!70532 () Unit!4135)

(declare-fun lt!70533 () Unit!4135)

(assert (=> b!134839 (= lt!70532 lt!70533)))

(declare-fun lt!70534 () (_ BitVec 64))

(declare-fun lt!70531 () V!3483)

(declare-fun lt!70537 () (_ BitVec 64))

(declare-fun lt!70535 () ListLongMap!1707)

(assert (=> b!134839 (not (contains!899 (+!175 lt!70535 (tuple2!2627 lt!70534 lt!70531)) lt!70537))))

(assert (=> b!134839 (= lt!70533 (addStillNotContains!61 lt!70535 lt!70534 lt!70531 lt!70537))))

(assert (=> b!134839 (= lt!70537 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134839 (= lt!70531 (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134839 (= lt!70534 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!14850 () ListLongMap!1707)

(assert (=> b!134839 (= lt!70535 call!14850)))

(declare-fun e!87832 () ListLongMap!1707)

(assert (=> b!134839 (= e!87832 (+!175 call!14850 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134840 () Bool)

(assert (=> b!134840 (= e!87833 e!87834)))

(declare-fun c!25132 () Bool)

(assert (=> b!134840 (= c!25132 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!134841 () Bool)

(assert (=> b!134841 (= e!87835 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134841 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134842 () Bool)

(declare-fun res!64817 () Bool)

(assert (=> b!134842 (=> (not res!64817) (not e!87830))))

(assert (=> b!134842 (= res!64817 (not (contains!899 lt!70536 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134843 () Bool)

(assert (=> b!134843 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> b!134843 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_values!2848 newMap!16))))))

(declare-fun e!87829 () Bool)

(assert (=> b!134843 (= e!87829 (= (apply!116 lt!70536 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41691 () Bool)

(assert (=> d!41691 e!87830))

(declare-fun res!64818 () Bool)

(assert (=> d!41691 (=> (not res!64818) (not e!87830))))

(assert (=> d!41691 (= res!64818 (not (contains!899 lt!70536 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87831 () ListLongMap!1707)

(assert (=> d!41691 (= lt!70536 e!87831)))

(declare-fun c!25130 () Bool)

(assert (=> d!41691 (= c!25130 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!41691 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41691 (= (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69180 (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!70536)))

(declare-fun b!134844 () Bool)

(assert (=> b!134844 (= e!87832 call!14850)))

(declare-fun bm!14847 () Bool)

(assert (=> bm!14847 (= call!14850 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69180 (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!134845 () Bool)

(assert (=> b!134845 (= e!87833 e!87829)))

(assert (=> b!134845 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64816 () Bool)

(assert (=> b!134845 (= res!64816 (contains!899 lt!70536 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134845 (=> (not res!64816) (not e!87829))))

(declare-fun b!134846 () Bool)

(assert (=> b!134846 (= e!87831 (ListLongMap!1708 Nil!1713))))

(declare-fun b!134847 () Bool)

(assert (=> b!134847 (= e!87834 (= lt!70536 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69180 (zeroValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!134848 () Bool)

(assert (=> b!134848 (= e!87831 e!87832)))

(declare-fun c!25131 () Bool)

(assert (=> b!134848 (= c!25131 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41691 c!25130) b!134846))

(assert (= (and d!41691 (not c!25130)) b!134848))

(assert (= (and b!134848 c!25131) b!134839))

(assert (= (and b!134848 (not c!25131)) b!134844))

(assert (= (or b!134839 b!134844) bm!14847))

(assert (= (and d!41691 res!64818) b!134842))

(assert (= (and b!134842 res!64817) b!134837))

(assert (= (and b!134837 res!64819) b!134841))

(assert (= (and b!134837 c!25129) b!134845))

(assert (= (and b!134837 (not c!25129)) b!134840))

(assert (= (and b!134845 res!64816) b!134843))

(assert (= (and b!134840 c!25132) b!134847))

(assert (= (and b!134840 (not c!25132)) b!134838))

(declare-fun b_lambda!6007 () Bool)

(assert (=> (not b_lambda!6007) (not b!134839)))

(assert (=> b!134839 t!6176))

(declare-fun b_and!8355 () Bool)

(assert (= b_and!8351 (and (=> t!6176 result!3997) b_and!8355)))

(assert (=> b!134839 t!6178))

(declare-fun b_and!8357 () Bool)

(assert (= b_and!8353 (and (=> t!6178 result!3999) b_and!8357)))

(declare-fun b_lambda!6009 () Bool)

(assert (=> (not b_lambda!6009) (not b!134843)))

(assert (=> b!134843 t!6176))

(declare-fun b_and!8359 () Bool)

(assert (= b_and!8355 (and (=> t!6176 result!3997) b_and!8359)))

(assert (=> b!134843 t!6178))

(declare-fun b_and!8361 () Bool)

(assert (= b_and!8357 (and (=> t!6178 result!3999) b_and!8361)))

(declare-fun m!160393 () Bool)

(assert (=> b!134838 m!160393))

(declare-fun m!160395 () Bool)

(assert (=> d!41691 m!160395))

(assert (=> d!41691 m!156157))

(declare-fun m!160397 () Bool)

(assert (=> b!134842 m!160397))

(assert (=> b!134848 m!156163))

(assert (=> b!134848 m!156163))

(assert (=> b!134848 m!156165))

(assert (=> b!134841 m!156163))

(assert (=> b!134841 m!156163))

(assert (=> b!134841 m!156165))

(assert (=> b!134843 m!156175))

(assert (=> b!134843 m!156173))

(assert (=> b!134843 m!156175))

(assert (=> b!134843 m!156177))

(assert (=> b!134843 m!156173))

(assert (=> b!134843 m!156163))

(declare-fun m!160399 () Bool)

(assert (=> b!134843 m!160399))

(assert (=> b!134843 m!156163))

(assert (=> b!134845 m!156163))

(assert (=> b!134845 m!156163))

(declare-fun m!160401 () Bool)

(assert (=> b!134845 m!160401))

(assert (=> b!134847 m!155895))

(declare-fun m!160403 () Bool)

(assert (=> b!134847 m!160403))

(assert (=> bm!14847 m!155895))

(assert (=> bm!14847 m!160403))

(assert (=> b!134839 m!156175))

(assert (=> b!134839 m!156173))

(assert (=> b!134839 m!156175))

(assert (=> b!134839 m!156177))

(declare-fun m!160405 () Bool)

(assert (=> b!134839 m!160405))

(declare-fun m!160407 () Bool)

(assert (=> b!134839 m!160407))

(assert (=> b!134839 m!156173))

(declare-fun m!160409 () Bool)

(assert (=> b!134839 m!160409))

(assert (=> b!134839 m!156163))

(assert (=> b!134839 m!160407))

(declare-fun m!160411 () Bool)

(assert (=> b!134839 m!160411))

(assert (=> bm!14765 d!41691))

(assert (=> b!133815 d!40965))

(declare-fun d!41693 () Bool)

(assert (=> d!41693 (= (arrayCountValidKeys!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4614 newMap!16) #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))) #b00000000000000000000000000000001))))

(assert (=> d!41693 true))

(declare-fun _$84!12 () Unit!4135)

(assert (=> d!41693 (= (choose!1 (_keys!4614 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) _$84!12)))

(declare-fun bs!5630 () Bool)

(assert (= bs!5630 d!41693))

(assert (=> bs!5630 m!156281))

(assert (=> bs!5630 m!156267))

(assert (=> bs!5630 m!156017))

(assert (=> d!40549 d!41693))

(assert (=> b!133287 d!40533))

(assert (=> b!132983 d!40559))

(declare-fun d!41695 () Bool)

(declare-fun res!64820 () Bool)

(declare-fun e!87836 () Bool)

(assert (=> d!41695 (=> res!64820 e!87836)))

(assert (=> d!41695 (= res!64820 (or ((_ is Nil!1713) lt!69807) ((_ is Nil!1713) (t!6167 lt!69807))))))

(assert (=> d!41695 (= (isStrictlySorted!322 lt!69807) e!87836)))

(declare-fun b!134849 () Bool)

(declare-fun e!87837 () Bool)

(assert (=> b!134849 (= e!87836 e!87837)))

(declare-fun res!64821 () Bool)

(assert (=> b!134849 (=> (not res!64821) (not e!87837))))

(assert (=> b!134849 (= res!64821 (bvslt (_1!1324 (h!2317 lt!69807)) (_1!1324 (h!2317 (t!6167 lt!69807)))))))

(declare-fun b!134850 () Bool)

(assert (=> b!134850 (= e!87837 (isStrictlySorted!322 (t!6167 lt!69807)))))

(assert (= (and d!41695 (not res!64820)) b!134849))

(assert (= (and b!134849 res!64821) b!134850))

(declare-fun m!160413 () Bool)

(assert (=> b!134850 m!160413))

(assert (=> d!40607 d!41695))

(declare-fun d!41697 () Bool)

(declare-fun res!64822 () Bool)

(declare-fun e!87838 () Bool)

(assert (=> d!41697 (=> res!64822 e!87838)))

(assert (=> d!41697 (= res!64822 (or ((_ is Nil!1713) (toList!869 lt!69079)) ((_ is Nil!1713) (t!6167 (toList!869 lt!69079)))))))

(assert (=> d!41697 (= (isStrictlySorted!322 (toList!869 lt!69079)) e!87838)))

(declare-fun b!134851 () Bool)

(declare-fun e!87839 () Bool)

(assert (=> b!134851 (= e!87838 e!87839)))

(declare-fun res!64823 () Bool)

(assert (=> b!134851 (=> (not res!64823) (not e!87839))))

(assert (=> b!134851 (= res!64823 (bvslt (_1!1324 (h!2317 (toList!869 lt!69079))) (_1!1324 (h!2317 (t!6167 (toList!869 lt!69079))))))))

(declare-fun b!134852 () Bool)

(assert (=> b!134852 (= e!87839 (isStrictlySorted!322 (t!6167 (toList!869 lt!69079))))))

(assert (= (and d!41697 (not res!64822)) b!134851))

(assert (= (and b!134851 res!64823) b!134852))

(assert (=> b!134852 m!158797))

(assert (=> d!40607 d!41697))

(assert (=> b!132990 d!41487))

(assert (=> b!132990 d!41489))

(declare-fun d!41699 () Bool)

(declare-fun e!87840 () Bool)

(assert (=> d!41699 e!87840))

(declare-fun res!64824 () Bool)

(assert (=> d!41699 (=> res!64824 e!87840)))

(declare-fun lt!70541 () Bool)

(assert (=> d!41699 (= res!64824 (not lt!70541))))

(declare-fun lt!70538 () Bool)

(assert (=> d!41699 (= lt!70541 lt!70538)))

(declare-fun lt!70540 () Unit!4135)

(declare-fun e!87841 () Unit!4135)

(assert (=> d!41699 (= lt!70540 e!87841)))

(declare-fun c!25133 () Bool)

(assert (=> d!41699 (= c!25133 lt!70538)))

(assert (=> d!41699 (= lt!70538 (containsKey!176 (toList!869 lt!69692) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41699 (= (contains!899 lt!69692 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70541)))

(declare-fun b!134853 () Bool)

(declare-fun lt!70539 () Unit!4135)

(assert (=> b!134853 (= e!87841 lt!70539)))

(assert (=> b!134853 (= lt!70539 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69692) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134853 (isDefined!125 (getValueByKey!172 (toList!869 lt!69692) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134854 () Bool)

(declare-fun Unit!4236 () Unit!4135)

(assert (=> b!134854 (= e!87841 Unit!4236)))

(declare-fun b!134855 () Bool)

(assert (=> b!134855 (= e!87840 (isDefined!125 (getValueByKey!172 (toList!869 lt!69692) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41699 c!25133) b!134853))

(assert (= (and d!41699 (not c!25133)) b!134854))

(assert (= (and d!41699 (not res!64824)) b!134855))

(declare-fun m!160415 () Bool)

(assert (=> d!41699 m!160415))

(declare-fun m!160417 () Bool)

(assert (=> b!134853 m!160417))

(declare-fun m!160419 () Bool)

(assert (=> b!134853 m!160419))

(assert (=> b!134853 m!160419))

(declare-fun m!160421 () Bool)

(assert (=> b!134853 m!160421))

(assert (=> b!134855 m!160419))

(assert (=> b!134855 m!160419))

(assert (=> b!134855 m!160421))

(assert (=> bm!14695 d!41699))

(declare-fun d!41701 () Bool)

(assert (=> d!41701 (= (inRange!0 (index!3261 lt!69625) (mask!7165 newMap!16)) (and (bvsge (index!3261 lt!69625) #b00000000000000000000000000000000) (bvslt (index!3261 lt!69625) (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!133190 d!41701))

(declare-fun d!41703 () Bool)

(assert (=> d!41703 (= (isEmpty!409 (getValueByKey!172 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))) (not ((_ is Some!177) (getValueByKey!172 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))))

(assert (=> d!40681 d!41703))

(declare-fun d!41705 () Bool)

(declare-fun res!64825 () Bool)

(declare-fun e!87842 () Bool)

(assert (=> d!41705 (=> res!64825 e!87842)))

(assert (=> d!41705 (= res!64825 (and ((_ is Cons!1712) (toList!869 lt!69081)) (= (_1!1324 (h!2317 (toList!869 lt!69081))) lt!69094)))))

(assert (=> d!41705 (= (containsKey!176 (toList!869 lt!69081) lt!69094) e!87842)))

(declare-fun b!134856 () Bool)

(declare-fun e!87843 () Bool)

(assert (=> b!134856 (= e!87842 e!87843)))

(declare-fun res!64826 () Bool)

(assert (=> b!134856 (=> (not res!64826) (not e!87843))))

(assert (=> b!134856 (= res!64826 (and (or (not ((_ is Cons!1712) (toList!869 lt!69081))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69081))) lt!69094)) ((_ is Cons!1712) (toList!869 lt!69081)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69081))) lt!69094)))))

(declare-fun b!134857 () Bool)

(assert (=> b!134857 (= e!87843 (containsKey!176 (t!6167 (toList!869 lt!69081)) lt!69094))))

(assert (= (and d!41705 (not res!64825)) b!134856))

(assert (= (and b!134856 res!64826) b!134857))

(declare-fun m!160423 () Bool)

(assert (=> b!134857 m!160423))

(assert (=> d!40481 d!41705))

(declare-fun d!41707 () Bool)

(assert (=> d!41707 (isDefined!125 (getValueByKey!172 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))

(declare-fun lt!70542 () Unit!4135)

(assert (=> d!41707 (= lt!70542 (choose!817 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))

(declare-fun e!87844 () Bool)

(assert (=> d!41707 e!87844))

(declare-fun res!64827 () Bool)

(assert (=> d!41707 (=> (not res!64827) (not e!87844))))

(assert (=> d!41707 (= res!64827 (isStrictlySorted!322 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))))

(assert (=> d!41707 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))) lt!70542)))

(declare-fun b!134858 () Bool)

(assert (=> b!134858 (= e!87844 (containsKey!176 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))

(assert (= (and d!41707 res!64827) b!134858))

(assert (=> d!41707 m!156069))

(assert (=> d!41707 m!157663))

(assert (=> d!41707 m!157663))

(assert (=> d!41707 m!157665))

(assert (=> d!41707 m!156069))

(declare-fun m!160425 () Bool)

(assert (=> d!41707 m!160425))

(declare-fun m!160427 () Bool)

(assert (=> d!41707 m!160427))

(assert (=> b!134858 m!156069))

(assert (=> b!134858 m!157659))

(assert (=> b!133518 d!41707))

(assert (=> b!133518 d!41061))

(assert (=> b!133518 d!41063))

(assert (=> b!133145 d!41535))

(assert (=> b!133145 d!41537))

(declare-fun call!14851 () Bool)

(declare-fun bm!14848 () Bool)

(assert (=> bm!14848 (= call!14851 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (mask!7165 newMap!16)))))

(declare-fun b!134859 () Bool)

(declare-fun e!87847 () Bool)

(declare-fun e!87845 () Bool)

(assert (=> b!134859 (= e!87847 e!87845)))

(declare-fun c!25134 () Bool)

(assert (=> b!134859 (= c!25134 (validKeyInArray!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!41709 () Bool)

(declare-fun res!64828 () Bool)

(assert (=> d!41709 (=> res!64828 e!87847)))

(assert (=> d!41709 (= res!64828 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(assert (=> d!41709 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (mask!7165 newMap!16)) e!87847)))

(declare-fun b!134860 () Bool)

(assert (=> b!134860 (= e!87845 call!14851)))

(declare-fun b!134861 () Bool)

(declare-fun e!87846 () Bool)

(assert (=> b!134861 (= e!87846 call!14851)))

(declare-fun b!134862 () Bool)

(assert (=> b!134862 (= e!87845 e!87846)))

(declare-fun lt!70544 () (_ BitVec 64))

(assert (=> b!134862 (= lt!70544 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!70545 () Unit!4135)

(assert (=> b!134862 (= lt!70545 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) lt!70544 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!134862 (arrayContainsKey!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) lt!70544 #b00000000000000000000000000000000)))

(declare-fun lt!70543 () Unit!4135)

(assert (=> b!134862 (= lt!70543 lt!70545)))

(declare-fun res!64829 () Bool)

(assert (=> b!134862 (= res!64829 (= (seekEntryOrOpen!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (mask!7165 newMap!16)) (Found!275 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134862 (=> (not res!64829) (not e!87846))))

(assert (= (and d!41709 (not res!64828)) b!134859))

(assert (= (and b!134859 c!25134) b!134862))

(assert (= (and b!134859 (not c!25134)) b!134860))

(assert (= (and b!134862 res!64829) b!134861))

(assert (= (or b!134861 b!134860) bm!14848))

(declare-fun m!160429 () Bool)

(assert (=> bm!14848 m!160429))

(assert (=> b!134859 m!158781))

(assert (=> b!134859 m!158781))

(assert (=> b!134859 m!158783))

(assert (=> b!134862 m!158781))

(declare-fun m!160431 () Bool)

(assert (=> b!134862 m!160431))

(declare-fun m!160433 () Bool)

(assert (=> b!134862 m!160433))

(assert (=> b!134862 m!158781))

(declare-fun m!160435 () Bool)

(assert (=> b!134862 m!160435))

(assert (=> bm!14710 d!41709))

(declare-fun b!134863 () Bool)

(declare-fun e!87849 () SeekEntryResult!275)

(assert (=> b!134863 (= e!87849 (Found!275 (index!3262 lt!69925)))))

(declare-fun b!134864 () Bool)

(declare-fun e!87848 () SeekEntryResult!275)

(assert (=> b!134864 (= e!87848 e!87849)))

(declare-fun c!25135 () Bool)

(declare-fun lt!70546 () (_ BitVec 64))

(assert (=> b!134864 (= c!25135 (= lt!70546 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!41711 () Bool)

(declare-fun lt!70547 () SeekEntryResult!275)

(assert (=> d!41711 (and (or ((_ is Undefined!275) lt!70547) (not ((_ is Found!275) lt!70547)) (and (bvsge (index!3261 lt!70547) #b00000000000000000000000000000000) (bvslt (index!3261 lt!70547) (size!2530 (_keys!4614 newMap!16))))) (or ((_ is Undefined!275) lt!70547) ((_ is Found!275) lt!70547) (not ((_ is MissingVacant!275) lt!70547)) (not (= (index!3263 lt!70547) (index!3262 lt!69925))) (and (bvsge (index!3263 lt!70547) #b00000000000000000000000000000000) (bvslt (index!3263 lt!70547) (size!2530 (_keys!4614 newMap!16))))) (or ((_ is Undefined!275) lt!70547) (ite ((_ is Found!275) lt!70547) (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!70547)) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!275) lt!70547) (= (index!3263 lt!70547) (index!3262 lt!69925)) (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3263 lt!70547)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!41711 (= lt!70547 e!87848)))

(declare-fun c!25137 () Bool)

(assert (=> d!41711 (= c!25137 (bvsge (x!15592 lt!69925) #b01111111111111111111111111111110))))

(assert (=> d!41711 (= lt!70546 (select (arr!2261 (_keys!4614 newMap!16)) (index!3262 lt!69925)))))

(assert (=> d!41711 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41711 (= (seekKeyOrZeroReturnVacant!0 (x!15592 lt!69925) (index!3262 lt!69925) (index!3262 lt!69925) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!70547)))

(declare-fun b!134865 () Bool)

(declare-fun e!87850 () SeekEntryResult!275)

(assert (=> b!134865 (= e!87850 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15592 lt!69925) #b00000000000000000000000000000001) (nextIndex!0 (index!3262 lt!69925) (x!15592 lt!69925) (mask!7165 newMap!16)) (index!3262 lt!69925) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(declare-fun b!134866 () Bool)

(declare-fun c!25136 () Bool)

(assert (=> b!134866 (= c!25136 (= lt!70546 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134866 (= e!87849 e!87850)))

(declare-fun b!134867 () Bool)

(assert (=> b!134867 (= e!87848 Undefined!275)))

(declare-fun b!134868 () Bool)

(assert (=> b!134868 (= e!87850 (MissingVacant!275 (index!3262 lt!69925)))))

(assert (= (and d!41711 c!25137) b!134867))

(assert (= (and d!41711 (not c!25137)) b!134864))

(assert (= (and b!134864 c!25135) b!134863))

(assert (= (and b!134864 (not c!25135)) b!134866))

(assert (= (and b!134866 c!25136) b!134868))

(assert (= (and b!134866 (not c!25136)) b!134865))

(declare-fun m!160437 () Bool)

(assert (=> d!41711 m!160437))

(declare-fun m!160439 () Bool)

(assert (=> d!41711 m!160439))

(assert (=> d!41711 m!157939))

(assert (=> d!41711 m!156157))

(declare-fun m!160441 () Bool)

(assert (=> b!134865 m!160441))

(assert (=> b!134865 m!160441))

(assert (=> b!134865 m!156163))

(declare-fun m!160443 () Bool)

(assert (=> b!134865 m!160443))

(assert (=> b!133655 d!41711))

(assert (=> b!133788 d!40389))

(declare-fun lt!70548 () Bool)

(declare-fun d!41713 () Bool)

(assert (=> d!41713 (= lt!70548 (select (content!133 lt!70027) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87852 () Bool)

(assert (=> d!41713 (= lt!70548 e!87852)))

(declare-fun res!64830 () Bool)

(assert (=> d!41713 (=> (not res!64830) (not e!87852))))

(assert (=> d!41713 (= res!64830 ((_ is Cons!1712) lt!70027))))

(assert (=> d!41713 (= (contains!902 lt!70027 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!70548)))

(declare-fun b!134869 () Bool)

(declare-fun e!87851 () Bool)

(assert (=> b!134869 (= e!87852 e!87851)))

(declare-fun res!64831 () Bool)

(assert (=> b!134869 (=> res!64831 e!87851)))

(assert (=> b!134869 (= res!64831 (= (h!2317 lt!70027) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!134870 () Bool)

(assert (=> b!134870 (= e!87851 (contains!902 (t!6167 lt!70027) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!41713 res!64830) b!134869))

(assert (= (and b!134869 (not res!64831)) b!134870))

(declare-fun m!160445 () Bool)

(assert (=> d!41713 m!160445))

(declare-fun m!160447 () Bool)

(assert (=> d!41713 m!160447))

(declare-fun m!160449 () Bool)

(assert (=> b!134870 m!160449))

(assert (=> b!133802 d!41713))

(declare-fun d!41715 () Bool)

(declare-fun e!87853 () Bool)

(assert (=> d!41715 e!87853))

(declare-fun res!64832 () Bool)

(assert (=> d!41715 (=> res!64832 e!87853)))

(declare-fun lt!70552 () Bool)

(assert (=> d!41715 (= res!64832 (not lt!70552))))

(declare-fun lt!70549 () Bool)

(assert (=> d!41715 (= lt!70552 lt!70549)))

(declare-fun lt!70551 () Unit!4135)

(declare-fun e!87854 () Unit!4135)

(assert (=> d!41715 (= lt!70551 e!87854)))

(declare-fun c!25138 () Bool)

(assert (=> d!41715 (= c!25138 lt!70549)))

(assert (=> d!41715 (= lt!70549 (containsKey!176 (toList!869 lt!69614) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41715 (= (contains!899 lt!69614 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70552)))

(declare-fun b!134871 () Bool)

(declare-fun lt!70550 () Unit!4135)

(assert (=> b!134871 (= e!87854 lt!70550)))

(assert (=> b!134871 (= lt!70550 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69614) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134871 (isDefined!125 (getValueByKey!172 (toList!869 lt!69614) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134872 () Bool)

(declare-fun Unit!4237 () Unit!4135)

(assert (=> b!134872 (= e!87854 Unit!4237)))

(declare-fun b!134873 () Bool)

(assert (=> b!134873 (= e!87853 (isDefined!125 (getValueByKey!172 (toList!869 lt!69614) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41715 c!25138) b!134871))

(assert (= (and d!41715 (not c!25138)) b!134872))

(assert (= (and d!41715 (not res!64832)) b!134873))

(assert (=> d!41715 m!156163))

(declare-fun m!160451 () Bool)

(assert (=> d!41715 m!160451))

(assert (=> b!134871 m!156163))

(declare-fun m!160453 () Bool)

(assert (=> b!134871 m!160453))

(assert (=> b!134871 m!156163))

(declare-fun m!160455 () Bool)

(assert (=> b!134871 m!160455))

(assert (=> b!134871 m!160455))

(declare-fun m!160457 () Bool)

(assert (=> b!134871 m!160457))

(assert (=> b!134873 m!156163))

(assert (=> b!134873 m!160455))

(assert (=> b!134873 m!160455))

(assert (=> b!134873 m!160457))

(assert (=> b!133162 d!41715))

(assert (=> d!40657 d!40325))

(declare-fun lt!70553 () Bool)

(declare-fun d!41717 () Bool)

(assert (=> d!41717 (= lt!70553 (select (content!133 lt!69622) (tuple2!2627 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun e!87856 () Bool)

(assert (=> d!41717 (= lt!70553 e!87856)))

(declare-fun res!64833 () Bool)

(assert (=> d!41717 (=> (not res!64833) (not e!87856))))

(assert (=> d!41717 (= res!64833 ((_ is Cons!1712) lt!69622))))

(assert (=> d!41717 (= (contains!902 lt!69622 (tuple2!2627 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!70553)))

(declare-fun b!134874 () Bool)

(declare-fun e!87855 () Bool)

(assert (=> b!134874 (= e!87856 e!87855)))

(declare-fun res!64834 () Bool)

(assert (=> b!134874 (=> res!64834 e!87855)))

(assert (=> b!134874 (= res!64834 (= (h!2317 lt!69622) (tuple2!2627 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun b!134875 () Bool)

(assert (=> b!134875 (= e!87855 (contains!902 (t!6167 lt!69622) (tuple2!2627 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!41717 res!64833) b!134874))

(assert (= (and b!134874 (not res!64834)) b!134875))

(declare-fun m!160459 () Bool)

(assert (=> d!41717 m!160459))

(declare-fun m!160461 () Bool)

(assert (=> d!41717 m!160461))

(declare-fun m!160463 () Bool)

(assert (=> b!134875 m!160463))

(assert (=> b!133176 d!41717))

(declare-fun d!41719 () Bool)

(assert (=> d!41719 (isDefined!125 (getValueByKey!172 (toList!869 lt!69262) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70554 () Unit!4135)

(assert (=> d!41719 (= lt!70554 (choose!817 (toList!869 lt!69262) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87857 () Bool)

(assert (=> d!41719 e!87857))

(declare-fun res!64835 () Bool)

(assert (=> d!41719 (=> (not res!64835) (not e!87857))))

(assert (=> d!41719 (= res!64835 (isStrictlySorted!322 (toList!869 lt!69262)))))

(assert (=> d!41719 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69262) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70554)))

(declare-fun b!134876 () Bool)

(assert (=> b!134876 (= e!87857 (containsKey!176 (toList!869 lt!69262) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41719 res!64835) b!134876))

(assert (=> d!41719 m!158105))

(assert (=> d!41719 m!158105))

(assert (=> d!41719 m!158239))

(declare-fun m!160465 () Bool)

(assert (=> d!41719 m!160465))

(assert (=> d!41719 m!158927))

(assert (=> b!134876 m!158235))

(assert (=> b!133772 d!41719))

(declare-fun d!41721 () Bool)

(assert (=> d!41721 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69262) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69262) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5631 () Bool)

(assert (= bs!5631 d!41721))

(assert (=> bs!5631 m!158105))

(declare-fun m!160467 () Bool)

(assert (=> bs!5631 m!160467))

(assert (=> b!133772 d!41721))

(declare-fun b!134879 () Bool)

(declare-fun e!87859 () Option!178)

(assert (=> b!134879 (= e!87859 (getValueByKey!172 (t!6167 (toList!869 lt!69262)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134880 () Bool)

(assert (=> b!134880 (= e!87859 None!176)))

(declare-fun d!41723 () Bool)

(declare-fun c!25139 () Bool)

(assert (=> d!41723 (= c!25139 (and ((_ is Cons!1712) (toList!869 lt!69262)) (= (_1!1324 (h!2317 (toList!869 lt!69262))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87858 () Option!178)

(assert (=> d!41723 (= (getValueByKey!172 (toList!869 lt!69262) #b1000000000000000000000000000000000000000000000000000000000000000) e!87858)))

(declare-fun b!134877 () Bool)

(assert (=> b!134877 (= e!87858 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69262)))))))

(declare-fun b!134878 () Bool)

(assert (=> b!134878 (= e!87858 e!87859)))

(declare-fun c!25140 () Bool)

(assert (=> b!134878 (= c!25140 (and ((_ is Cons!1712) (toList!869 lt!69262)) (not (= (_1!1324 (h!2317 (toList!869 lt!69262))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!41723 c!25139) b!134877))

(assert (= (and d!41723 (not c!25139)) b!134878))

(assert (= (and b!134878 c!25140) b!134879))

(assert (= (and b!134878 (not c!25140)) b!134880))

(declare-fun m!160469 () Bool)

(assert (=> b!134879 m!160469))

(assert (=> b!133772 d!41723))

(declare-fun lt!70555 () Bool)

(declare-fun d!41725 () Bool)

(assert (=> d!41725 (= lt!70555 (select (content!132 lt!69335) (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) lt!69339)))))

(declare-fun e!87860 () Bool)

(assert (=> d!41725 (= lt!70555 e!87860)))

(declare-fun res!64836 () Bool)

(assert (=> d!41725 (=> (not res!64836) (not e!87860))))

(assert (=> d!41725 (= res!64836 ((_ is Cons!1713) lt!69335))))

(assert (=> d!41725 (= (contains!901 lt!69335 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) lt!69339)) lt!70555)))

(declare-fun b!134881 () Bool)

(declare-fun e!87861 () Bool)

(assert (=> b!134881 (= e!87860 e!87861)))

(declare-fun res!64837 () Bool)

(assert (=> b!134881 (=> res!64837 e!87861)))

(assert (=> b!134881 (= res!64837 (= (h!2318 lt!69335) (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) lt!69339)))))

(declare-fun b!134882 () Bool)

(assert (=> b!134882 (= e!87861 (contains!901 (t!6168 lt!69335) (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) lt!69339)))))

(assert (= (and d!41725 res!64836) b!134881))

(assert (= (and b!134881 (not res!64837)) b!134882))

(declare-fun m!160471 () Bool)

(assert (=> d!41725 m!160471))

(assert (=> d!41725 m!157289))

(declare-fun m!160473 () Bool)

(assert (=> d!41725 m!160473))

(assert (=> b!134882 m!157289))

(declare-fun m!160475 () Bool)

(assert (=> b!134882 m!160475))

(assert (=> b!133295 d!41725))

(declare-fun d!41727 () Bool)

(declare-fun lt!70556 () Bool)

(assert (=> d!41727 (= lt!70556 (select (content!133 (toList!869 lt!69596)) (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))))

(declare-fun e!87863 () Bool)

(assert (=> d!41727 (= lt!70556 e!87863)))

(declare-fun res!64838 () Bool)

(assert (=> d!41727 (=> (not res!64838) (not e!87863))))

(assert (=> d!41727 (= res!64838 ((_ is Cons!1712) (toList!869 lt!69596)))))

(assert (=> d!41727 (= (contains!902 (toList!869 lt!69596) (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))) lt!70556)))

(declare-fun b!134883 () Bool)

(declare-fun e!87862 () Bool)

(assert (=> b!134883 (= e!87863 e!87862)))

(declare-fun res!64839 () Bool)

(assert (=> b!134883 (=> res!64839 e!87862)))

(assert (=> b!134883 (= res!64839 (= (h!2317 (toList!869 lt!69596)) (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))))

(declare-fun b!134884 () Bool)

(assert (=> b!134884 (= e!87862 (contains!902 (t!6167 (toList!869 lt!69596)) (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41727 res!64838) b!134883))

(assert (= (and b!134883 (not res!64839)) b!134884))

(declare-fun m!160477 () Bool)

(assert (=> d!41727 m!160477))

(declare-fun m!160479 () Bool)

(assert (=> d!41727 m!160479))

(declare-fun m!160481 () Bool)

(assert (=> b!134884 m!160481))

(assert (=> b!133148 d!41727))

(declare-fun d!41729 () Bool)

(assert (=> d!41729 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))) lt!69409))))

(declare-fun lt!70557 () Unit!4135)

(assert (=> d!41729 (= lt!70557 (choose!817 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))) lt!69409))))

(declare-fun e!87864 () Bool)

(assert (=> d!41729 e!87864))

(declare-fun res!64840 () Bool)

(assert (=> d!41729 (=> (not res!64840) (not e!87864))))

(assert (=> d!41729 (= res!64840 (isStrictlySorted!322 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403)))))))

(assert (=> d!41729 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))) lt!69409) lt!70557)))

(declare-fun b!134885 () Bool)

(assert (=> b!134885 (= e!87864 (containsKey!176 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))) lt!69409))))

(assert (= (and d!41729 res!64840) b!134885))

(assert (=> d!41729 m!156727))

(assert (=> d!41729 m!156727))

(assert (=> d!41729 m!156729))

(declare-fun m!160483 () Bool)

(assert (=> d!41729 m!160483))

(declare-fun m!160485 () Bool)

(assert (=> d!41729 m!160485))

(assert (=> b!134885 m!156723))

(assert (=> b!133003 d!41729))

(declare-fun d!41731 () Bool)

(assert (=> d!41731 (= (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))) lt!69409)) (not (isEmpty!409 (getValueByKey!172 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))) lt!69409))))))

(declare-fun bs!5632 () Bool)

(assert (= bs!5632 d!41731))

(assert (=> bs!5632 m!156727))

(declare-fun m!160487 () Bool)

(assert (=> bs!5632 m!160487))

(assert (=> b!133003 d!41731))

(declare-fun e!87866 () Option!178)

(declare-fun b!134888 () Bool)

(assert (=> b!134888 (= e!87866 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403)))) lt!69409))))

(declare-fun b!134889 () Bool)

(assert (=> b!134889 (= e!87866 None!176)))

(declare-fun d!41733 () Bool)

(declare-fun c!25141 () Bool)

(assert (=> d!41733 (= c!25141 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403)))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))))) lt!69409)))))

(declare-fun e!87865 () Option!178)

(assert (=> d!41733 (= (getValueByKey!172 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))) lt!69409) e!87865)))

(declare-fun b!134886 () Bool)

(assert (=> b!134886 (= e!87865 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403)))))))))

(declare-fun b!134887 () Bool)

(assert (=> b!134887 (= e!87865 e!87866)))

(declare-fun c!25142 () Bool)

(assert (=> b!134887 (= c!25142 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403)))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69407 (tuple2!2627 lt!69406 lt!69403))))) lt!69409))))))

(assert (= (and d!41733 c!25141) b!134886))

(assert (= (and d!41733 (not c!25141)) b!134887))

(assert (= (and b!134887 c!25142) b!134888))

(assert (= (and b!134887 (not c!25142)) b!134889))

(declare-fun m!160489 () Bool)

(assert (=> b!134888 m!160489))

(assert (=> b!133003 d!41733))

(declare-fun b!134892 () Bool)

(declare-fun e!87868 () Option!178)

(assert (=> b!134892 (= e!87868 (getValueByKey!172 (t!6167 (t!6167 (toList!869 call!14604))) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(declare-fun b!134893 () Bool)

(assert (=> b!134893 (= e!87868 None!176)))

(declare-fun c!25143 () Bool)

(declare-fun d!41735 () Bool)

(assert (=> d!41735 (= c!25143 (and ((_ is Cons!1712) (t!6167 (toList!869 call!14604))) (= (_1!1324 (h!2317 (t!6167 (toList!869 call!14604)))) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))))

(declare-fun e!87867 () Option!178)

(assert (=> d!41735 (= (getValueByKey!172 (t!6167 (toList!869 call!14604)) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))) e!87867)))

(declare-fun b!134890 () Bool)

(assert (=> b!134890 (= e!87867 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 call!14604))))))))

(declare-fun b!134891 () Bool)

(assert (=> b!134891 (= e!87867 e!87868)))

(declare-fun c!25144 () Bool)

(assert (=> b!134891 (= c!25144 (and ((_ is Cons!1712) (t!6167 (toList!869 call!14604))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 call!14604)))) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))))

(assert (= (and d!41735 c!25143) b!134890))

(assert (= (and d!41735 (not c!25143)) b!134891))

(assert (= (and b!134891 c!25144) b!134892))

(assert (= (and b!134891 (not c!25144)) b!134893))

(declare-fun m!160491 () Bool)

(assert (=> b!134892 m!160491))

(assert (=> b!133410 d!41735))

(declare-fun b!134896 () Bool)

(declare-fun e!87870 () Option!178)

(assert (=> b!134896 (= e!87870 (getValueByKey!172 (t!6167 (t!6167 (toList!869 call!14619))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!134897 () Bool)

(assert (=> b!134897 (= e!87870 None!176)))

(declare-fun d!41737 () Bool)

(declare-fun c!25145 () Bool)

(assert (=> d!41737 (= c!25145 (and ((_ is Cons!1712) (t!6167 (toList!869 call!14619))) (= (_1!1324 (h!2317 (t!6167 (toList!869 call!14619)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun e!87869 () Option!178)

(assert (=> d!41737 (= (getValueByKey!172 (t!6167 (toList!869 call!14619)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!87869)))

(declare-fun b!134894 () Bool)

(assert (=> b!134894 (= e!87869 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 call!14619))))))))

(declare-fun b!134895 () Bool)

(assert (=> b!134895 (= e!87869 e!87870)))

(declare-fun c!25146 () Bool)

(assert (=> b!134895 (= c!25146 (and ((_ is Cons!1712) (t!6167 (toList!869 call!14619))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 call!14619)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))))

(assert (= (and d!41737 c!25145) b!134894))

(assert (= (and d!41737 (not c!25145)) b!134895))

(assert (= (and b!134895 c!25146) b!134896))

(assert (= (and b!134895 (not c!25146)) b!134897))

(assert (=> b!134896 m!155869))

(declare-fun m!160493 () Bool)

(assert (=> b!134896 m!160493))

(assert (=> b!133636 d!41737))

(declare-fun b!134900 () Bool)

(declare-fun e!87872 () Option!178)

(assert (=> b!134900 (= e!87872 (getValueByKey!172 (t!6167 (toList!869 lt!69586)) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))

(declare-fun b!134901 () Bool)

(assert (=> b!134901 (= e!87872 None!176)))

(declare-fun d!41739 () Bool)

(declare-fun c!25147 () Bool)

(assert (=> d!41739 (= c!25147 (and ((_ is Cons!1712) (toList!869 lt!69586)) (= (_1!1324 (h!2317 (toList!869 lt!69586))) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))))))

(declare-fun e!87871 () Option!178)

(assert (=> d!41739 (= (getValueByKey!172 (toList!869 lt!69586) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))) e!87871)))

(declare-fun b!134898 () Bool)

(assert (=> b!134898 (= e!87871 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69586)))))))

(declare-fun b!134899 () Bool)

(assert (=> b!134899 (= e!87871 e!87872)))

(declare-fun c!25148 () Bool)

(assert (=> b!134899 (= c!25148 (and ((_ is Cons!1712) (toList!869 lt!69586)) (not (= (_1!1324 (h!2317 (toList!869 lt!69586))) (_1!1324 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41739 c!25147) b!134898))

(assert (= (and d!41739 (not c!25147)) b!134899))

(assert (= (and b!134899 c!25148) b!134900))

(assert (= (and b!134899 (not c!25148)) b!134901))

(declare-fun m!160495 () Bool)

(assert (=> b!134900 m!160495))

(assert (=> b!133141 d!41739))

(assert (=> b!133356 d!41505))

(declare-fun d!41741 () Bool)

(declare-fun res!64841 () Bool)

(declare-fun e!87873 () Bool)

(assert (=> d!41741 (=> res!64841 e!87873)))

(assert (=> d!41741 (= res!64841 (or ((_ is Nil!1713) lt!70027) ((_ is Nil!1713) (t!6167 lt!70027))))))

(assert (=> d!41741 (= (isStrictlySorted!322 lt!70027) e!87873)))

(declare-fun b!134902 () Bool)

(declare-fun e!87874 () Bool)

(assert (=> b!134902 (= e!87873 e!87874)))

(declare-fun res!64842 () Bool)

(assert (=> b!134902 (=> (not res!64842) (not e!87874))))

(assert (=> b!134902 (= res!64842 (bvslt (_1!1324 (h!2317 lt!70027)) (_1!1324 (h!2317 (t!6167 lt!70027)))))))

(declare-fun b!134903 () Bool)

(assert (=> b!134903 (= e!87874 (isStrictlySorted!322 (t!6167 lt!70027)))))

(assert (= (and d!41741 (not res!64841)) b!134902))

(assert (= (and b!134902 res!64842) b!134903))

(declare-fun m!160497 () Bool)

(assert (=> b!134903 m!160497))

(assert (=> d!40835 d!41741))

(declare-fun d!41743 () Bool)

(declare-fun res!64843 () Bool)

(declare-fun e!87875 () Bool)

(assert (=> d!41743 (=> res!64843 e!87875)))

(assert (=> d!41743 (= res!64843 (or ((_ is Nil!1713) (toList!869 lt!69084)) ((_ is Nil!1713) (t!6167 (toList!869 lt!69084)))))))

(assert (=> d!41743 (= (isStrictlySorted!322 (toList!869 lt!69084)) e!87875)))

(declare-fun b!134904 () Bool)

(declare-fun e!87876 () Bool)

(assert (=> b!134904 (= e!87875 e!87876)))

(declare-fun res!64844 () Bool)

(assert (=> b!134904 (=> (not res!64844) (not e!87876))))

(assert (=> b!134904 (= res!64844 (bvslt (_1!1324 (h!2317 (toList!869 lt!69084))) (_1!1324 (h!2317 (t!6167 (toList!869 lt!69084))))))))

(declare-fun b!134905 () Bool)

(assert (=> b!134905 (= e!87876 (isStrictlySorted!322 (t!6167 (toList!869 lt!69084))))))

(assert (= (and d!41743 (not res!64843)) b!134904))

(assert (= (and b!134904 res!64844) b!134905))

(declare-fun m!160499 () Bool)

(assert (=> b!134905 m!160499))

(assert (=> d!40835 d!41743))

(declare-fun b!134906 () Bool)

(declare-fun e!87878 () Bool)

(declare-fun e!87881 () Bool)

(assert (=> b!134906 (= e!87878 e!87881)))

(declare-fun c!25149 () Bool)

(declare-fun e!87883 () Bool)

(assert (=> b!134906 (= c!25149 e!87883)))

(declare-fun res!64848 () Bool)

(assert (=> b!134906 (=> (not res!64848) (not e!87883))))

(assert (=> b!134906 (= res!64848 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!134907 () Bool)

(declare-fun e!87882 () Bool)

(declare-fun lt!70563 () ListLongMap!1707)

(assert (=> b!134907 (= e!87882 (isEmpty!410 lt!70563))))

(declare-fun b!134908 () Bool)

(declare-fun lt!70559 () Unit!4135)

(declare-fun lt!70560 () Unit!4135)

(assert (=> b!134908 (= lt!70559 lt!70560)))

(declare-fun lt!70558 () V!3483)

(declare-fun lt!70564 () (_ BitVec 64))

(declare-fun lt!70562 () ListLongMap!1707)

(declare-fun lt!70561 () (_ BitVec 64))

(assert (=> b!134908 (not (contains!899 (+!175 lt!70562 (tuple2!2627 lt!70561 lt!70558)) lt!70564))))

(assert (=> b!134908 (= lt!70560 (addStillNotContains!61 lt!70562 lt!70561 lt!70558 lt!70564))))

(assert (=> b!134908 (= lt!70564 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134908 (= lt!70558 (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134908 (= lt!70561 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!14852 () ListLongMap!1707)

(assert (=> b!134908 (= lt!70562 call!14852)))

(declare-fun e!87880 () ListLongMap!1707)

(assert (=> b!134908 (= e!87880 (+!175 call!14852 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134909 () Bool)

(assert (=> b!134909 (= e!87881 e!87882)))

(declare-fun c!25152 () Bool)

(assert (=> b!134909 (= c!25152 (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!134910 () Bool)

(assert (=> b!134910 (= e!87883 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134910 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134911 () Bool)

(declare-fun res!64846 () Bool)

(assert (=> b!134911 (=> (not res!64846) (not e!87878))))

(assert (=> b!134911 (= res!64846 (not (contains!899 lt!70563 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134912 () Bool)

(assert (=> b!134912 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> b!134912 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_values!2848 newMap!16))))))

(declare-fun e!87877 () Bool)

(assert (=> b!134912 (= e!87877 (= (apply!116 lt!70563 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41745 () Bool)

(assert (=> d!41745 e!87878))

(declare-fun res!64847 () Bool)

(assert (=> d!41745 (=> (not res!64847) (not e!87878))))

(assert (=> d!41745 (= res!64847 (not (contains!899 lt!70563 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87879 () ListLongMap!1707)

(assert (=> d!41745 (= lt!70563 e!87879)))

(declare-fun c!25150 () Bool)

(assert (=> d!41745 (= c!25150 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!41745 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41745 (= (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69189 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) lt!70563)))

(declare-fun b!134913 () Bool)

(assert (=> b!134913 (= e!87880 call!14852)))

(declare-fun bm!14849 () Bool)

(assert (=> bm!14849 (= call!14852 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69189 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!134914 () Bool)

(assert (=> b!134914 (= e!87881 e!87877)))

(assert (=> b!134914 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64845 () Bool)

(assert (=> b!134914 (= res!64845 (contains!899 lt!70563 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134914 (=> (not res!64845) (not e!87877))))

(declare-fun b!134915 () Bool)

(assert (=> b!134915 (= e!87879 (ListLongMap!1708 Nil!1713))))

(declare-fun b!134916 () Bool)

(assert (=> b!134916 (= e!87882 (= lt!70563 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) lt!69189 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!134917 () Bool)

(assert (=> b!134917 (= e!87879 e!87880)))

(declare-fun c!25151 () Bool)

(assert (=> b!134917 (= c!25151 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41745 c!25150) b!134915))

(assert (= (and d!41745 (not c!25150)) b!134917))

(assert (= (and b!134917 c!25151) b!134908))

(assert (= (and b!134917 (not c!25151)) b!134913))

(assert (= (or b!134908 b!134913) bm!14849))

(assert (= (and d!41745 res!64847) b!134911))

(assert (= (and b!134911 res!64846) b!134906))

(assert (= (and b!134906 res!64848) b!134910))

(assert (= (and b!134906 c!25149) b!134914))

(assert (= (and b!134906 (not c!25149)) b!134909))

(assert (= (and b!134914 res!64845) b!134912))

(assert (= (and b!134909 c!25152) b!134916))

(assert (= (and b!134909 (not c!25152)) b!134907))

(declare-fun b_lambda!6011 () Bool)

(assert (=> (not b_lambda!6011) (not b!134908)))

(assert (=> b!134908 t!6176))

(declare-fun b_and!8363 () Bool)

(assert (= b_and!8359 (and (=> t!6176 result!3997) b_and!8363)))

(assert (=> b!134908 t!6178))

(declare-fun b_and!8365 () Bool)

(assert (= b_and!8361 (and (=> t!6178 result!3999) b_and!8365)))

(declare-fun b_lambda!6013 () Bool)

(assert (=> (not b_lambda!6013) (not b!134912)))

(assert (=> b!134912 t!6176))

(declare-fun b_and!8367 () Bool)

(assert (= b_and!8363 (and (=> t!6176 result!3997) b_and!8367)))

(assert (=> b!134912 t!6178))

(declare-fun b_and!8369 () Bool)

(assert (= b_and!8365 (and (=> t!6178 result!3999) b_and!8369)))

(declare-fun m!160501 () Bool)

(assert (=> b!134907 m!160501))

(declare-fun m!160503 () Bool)

(assert (=> d!41745 m!160503))

(assert (=> d!41745 m!156157))

(declare-fun m!160505 () Bool)

(assert (=> b!134911 m!160505))

(assert (=> b!134917 m!156163))

(assert (=> b!134917 m!156163))

(assert (=> b!134917 m!156165))

(assert (=> b!134910 m!156163))

(assert (=> b!134910 m!156163))

(assert (=> b!134910 m!156165))

(assert (=> b!134912 m!156175))

(assert (=> b!134912 m!156173))

(assert (=> b!134912 m!156175))

(assert (=> b!134912 m!156177))

(assert (=> b!134912 m!156173))

(assert (=> b!134912 m!156163))

(declare-fun m!160507 () Bool)

(assert (=> b!134912 m!160507))

(assert (=> b!134912 m!156163))

(assert (=> b!134914 m!156163))

(assert (=> b!134914 m!156163))

(declare-fun m!160509 () Bool)

(assert (=> b!134914 m!160509))

(assert (=> b!134916 m!155895))

(declare-fun m!160511 () Bool)

(assert (=> b!134916 m!160511))

(assert (=> bm!14849 m!155895))

(assert (=> bm!14849 m!160511))

(assert (=> b!134908 m!156175))

(assert (=> b!134908 m!156173))

(assert (=> b!134908 m!156175))

(assert (=> b!134908 m!156177))

(declare-fun m!160513 () Bool)

(assert (=> b!134908 m!160513))

(declare-fun m!160515 () Bool)

(assert (=> b!134908 m!160515))

(assert (=> b!134908 m!156173))

(declare-fun m!160517 () Bool)

(assert (=> b!134908 m!160517))

(assert (=> b!134908 m!156163))

(assert (=> b!134908 m!160515))

(declare-fun m!160519 () Bool)

(assert (=> b!134908 m!160519))

(assert (=> bm!14700 d!41745))

(assert (=> b!133540 d!40353))

(declare-fun d!41747 () Bool)

(assert (=> d!41747 (= (get!1486 (getValueByKey!172 (toList!869 lt!69453) lt!69449)) (v!3203 (getValueByKey!172 (toList!869 lt!69453) lt!69449)))))

(assert (=> d!40449 d!41747))

(declare-fun b!134920 () Bool)

(declare-fun e!87885 () Option!178)

(assert (=> b!134920 (= e!87885 (getValueByKey!172 (t!6167 (toList!869 lt!69453)) lt!69449))))

(declare-fun b!134921 () Bool)

(assert (=> b!134921 (= e!87885 None!176)))

(declare-fun d!41749 () Bool)

(declare-fun c!25153 () Bool)

(assert (=> d!41749 (= c!25153 (and ((_ is Cons!1712) (toList!869 lt!69453)) (= (_1!1324 (h!2317 (toList!869 lt!69453))) lt!69449)))))

(declare-fun e!87884 () Option!178)

(assert (=> d!41749 (= (getValueByKey!172 (toList!869 lt!69453) lt!69449) e!87884)))

(declare-fun b!134918 () Bool)

(assert (=> b!134918 (= e!87884 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69453)))))))

(declare-fun b!134919 () Bool)

(assert (=> b!134919 (= e!87884 e!87885)))

(declare-fun c!25154 () Bool)

(assert (=> b!134919 (= c!25154 (and ((_ is Cons!1712) (toList!869 lt!69453)) (not (= (_1!1324 (h!2317 (toList!869 lt!69453))) lt!69449))))))

(assert (= (and d!41749 c!25153) b!134918))

(assert (= (and d!41749 (not c!25153)) b!134919))

(assert (= (and b!134919 c!25154) b!134920))

(assert (= (and b!134919 (not c!25154)) b!134921))

(declare-fun m!160521 () Bool)

(assert (=> b!134920 m!160521))

(assert (=> d!40449 d!41749))

(declare-fun d!41751 () Bool)

(assert (=> d!41751 (= (isDefined!125 (getValueByKey!172 (toList!869 (map!1409 (_2!1325 lt!69358))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))) (not (isEmpty!409 (getValueByKey!172 (toList!869 (map!1409 (_2!1325 lt!69358))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))))

(declare-fun bs!5633 () Bool)

(assert (= bs!5633 d!41751))

(assert (=> bs!5633 m!157459))

(declare-fun m!160523 () Bool)

(assert (=> bs!5633 m!160523))

(assert (=> b!133381 d!41751))

(declare-fun e!87887 () Option!178)

(declare-fun b!134924 () Bool)

(assert (=> b!134924 (= e!87887 (getValueByKey!172 (t!6167 (toList!869 (map!1409 (_2!1325 lt!69358)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!134925 () Bool)

(assert (=> b!134925 (= e!87887 None!176)))

(declare-fun c!25155 () Bool)

(declare-fun d!41753 () Bool)

(assert (=> d!41753 (= c!25155 (and ((_ is Cons!1712) (toList!869 (map!1409 (_2!1325 lt!69358)))) (= (_1!1324 (h!2317 (toList!869 (map!1409 (_2!1325 lt!69358))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun e!87886 () Option!178)

(assert (=> d!41753 (= (getValueByKey!172 (toList!869 (map!1409 (_2!1325 lt!69358))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!87886)))

(declare-fun b!134922 () Bool)

(assert (=> b!134922 (= e!87886 (Some!177 (_2!1324 (h!2317 (toList!869 (map!1409 (_2!1325 lt!69358)))))))))

(declare-fun b!134923 () Bool)

(assert (=> b!134923 (= e!87886 e!87887)))

(declare-fun c!25156 () Bool)

(assert (=> b!134923 (= c!25156 (and ((_ is Cons!1712) (toList!869 (map!1409 (_2!1325 lt!69358)))) (not (= (_1!1324 (h!2317 (toList!869 (map!1409 (_2!1325 lt!69358))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))))

(assert (= (and d!41753 c!25155) b!134922))

(assert (= (and d!41753 (not c!25155)) b!134923))

(assert (= (and b!134923 c!25156) b!134924))

(assert (= (and b!134923 (not c!25156)) b!134925))

(assert (=> b!134924 m!155869))

(declare-fun m!160525 () Bool)

(assert (=> b!134924 m!160525))

(assert (=> b!133381 d!41753))

(assert (=> d!40383 d!40255))

(assert (=> d!40383 d!40253))

(assert (=> d!40715 d!40367))

(assert (=> d!40715 d!40369))

(declare-fun d!41755 () Bool)

(assert (=> d!41755 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092))))

(assert (=> d!41755 true))

(declare-fun _$12!401 () Unit!4135)

(assert (=> d!41755 (= (choose!817 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!69092) _$12!401)))

(declare-fun bs!5634 () Bool)

(assert (= bs!5634 d!41755))

(assert (=> bs!5634 m!156351))

(assert (=> bs!5634 m!156351))

(assert (=> bs!5634 m!156353))

(assert (=> d!40715 d!41755))

(declare-fun d!41757 () Bool)

(declare-fun res!64849 () Bool)

(declare-fun e!87888 () Bool)

(assert (=> d!41757 (=> res!64849 e!87888)))

(assert (=> d!41757 (= res!64849 (or ((_ is Nil!1713) (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Nil!1713) (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))))

(assert (=> d!41757 (= (isStrictlySorted!322 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) e!87888)))

(declare-fun b!134926 () Bool)

(declare-fun e!87889 () Bool)

(assert (=> b!134926 (= e!87888 e!87889)))

(declare-fun res!64850 () Bool)

(assert (=> b!134926 (=> (not res!64850) (not e!87889))))

(assert (=> b!134926 (= res!64850 (bvslt (_1!1324 (h!2317 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (_1!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))))

(declare-fun b!134927 () Bool)

(assert (=> b!134927 (= e!87889 (isStrictlySorted!322 (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!41757 (not res!64849)) b!134926))

(assert (= (and b!134926 res!64850) b!134927))

(declare-fun m!160527 () Bool)

(assert (=> b!134927 m!160527))

(assert (=> d!40715 d!41757))

(assert (=> d!40641 d!40325))

(declare-fun d!41759 () Bool)

(declare-fun res!64851 () Bool)

(declare-fun e!87890 () Bool)

(assert (=> d!41759 (=> res!64851 e!87890)))

(assert (=> d!41759 (= res!64851 (or ((_ is Nil!1713) lt!69622) ((_ is Nil!1713) (t!6167 lt!69622))))))

(assert (=> d!41759 (= (isStrictlySorted!322 lt!69622) e!87890)))

(declare-fun b!134928 () Bool)

(declare-fun e!87891 () Bool)

(assert (=> b!134928 (= e!87890 e!87891)))

(declare-fun res!64852 () Bool)

(assert (=> b!134928 (=> (not res!64852) (not e!87891))))

(assert (=> b!134928 (= res!64852 (bvslt (_1!1324 (h!2317 lt!69622)) (_1!1324 (h!2317 (t!6167 lt!69622)))))))

(declare-fun b!134929 () Bool)

(assert (=> b!134929 (= e!87891 (isStrictlySorted!322 (t!6167 lt!69622)))))

(assert (= (and d!41759 (not res!64851)) b!134928))

(assert (= (and b!134928 res!64852) b!134929))

(declare-fun m!160529 () Bool)

(assert (=> b!134929 m!160529))

(assert (=> d!40465 d!41759))

(declare-fun d!41761 () Bool)

(declare-fun res!64853 () Bool)

(declare-fun e!87892 () Bool)

(assert (=> d!41761 (=> res!64853 e!87892)))

(assert (=> d!41761 (= res!64853 (or ((_ is Nil!1713) (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))) ((_ is Nil!1713) (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))))))))

(assert (=> d!41761 (= (isStrictlySorted!322 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))) e!87892)))

(declare-fun b!134930 () Bool)

(declare-fun e!87893 () Bool)

(assert (=> b!134930 (= e!87892 e!87893)))

(declare-fun res!64854 () Bool)

(assert (=> b!134930 (=> (not res!64854) (not e!87893))))

(assert (=> b!134930 (= res!64854 (bvslt (_1!1324 (h!2317 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))))) (_1!1324 (h!2317 (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))))))))))

(declare-fun b!134931 () Bool)

(assert (=> b!134931 (= e!87893 (isStrictlySorted!322 (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))))))))

(assert (= (and d!41761 (not res!64853)) b!134930))

(assert (= (and b!134930 res!64854) b!134931))

(declare-fun m!160531 () Bool)

(assert (=> b!134931 m!160531))

(assert (=> d!40465 d!41761))

(declare-fun d!41763 () Bool)

(assert (=> d!41763 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (mask!7165 newMap!16))))

(assert (=> d!41763 true))

(declare-fun _$56!12 () Unit!4135)

(assert (=> d!41763 (= (choose!102 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (mask!7165 newMap!16)) _$56!12)))

(declare-fun bs!5635 () Bool)

(assert (= bs!5635 d!41763))

(assert (=> bs!5635 m!156281))

(assert (=> bs!5635 m!156247))

(assert (=> d!40547 d!41763))

(assert (=> d!40547 d!40325))

(declare-fun d!41765 () Bool)

(declare-fun e!87894 () Bool)

(assert (=> d!41765 e!87894))

(declare-fun res!64855 () Bool)

(assert (=> d!41765 (=> res!64855 e!87894)))

(declare-fun lt!70568 () Bool)

(assert (=> d!41765 (= res!64855 (not lt!70568))))

(declare-fun lt!70565 () Bool)

(assert (=> d!41765 (= lt!70568 lt!70565)))

(declare-fun lt!70567 () Unit!4135)

(declare-fun e!87895 () Unit!4135)

(assert (=> d!41765 (= lt!70567 e!87895)))

(declare-fun c!25157 () Bool)

(assert (=> d!41765 (= c!25157 lt!70565)))

(assert (=> d!41765 (= lt!70565 (containsKey!176 (toList!869 lt!69919) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41765 (= (contains!899 lt!69919 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70568)))

(declare-fun b!134932 () Bool)

(declare-fun lt!70566 () Unit!4135)

(assert (=> b!134932 (= e!87895 lt!70566)))

(assert (=> b!134932 (= lt!70566 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69919) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134932 (isDefined!125 (getValueByKey!172 (toList!869 lt!69919) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134933 () Bool)

(declare-fun Unit!4238 () Unit!4135)

(assert (=> b!134933 (= e!87895 Unit!4238)))

(declare-fun b!134934 () Bool)

(assert (=> b!134934 (= e!87894 (isDefined!125 (getValueByKey!172 (toList!869 lt!69919) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41765 c!25157) b!134932))

(assert (= (and d!41765 (not c!25157)) b!134933))

(assert (= (and d!41765 (not res!64855)) b!134934))

(declare-fun m!160533 () Bool)

(assert (=> d!41765 m!160533))

(declare-fun m!160535 () Bool)

(assert (=> b!134932 m!160535))

(declare-fun m!160537 () Bool)

(assert (=> b!134932 m!160537))

(assert (=> b!134932 m!160537))

(declare-fun m!160539 () Bool)

(assert (=> b!134932 m!160539))

(assert (=> b!134934 m!160537))

(assert (=> b!134934 m!160537))

(assert (=> b!134934 m!160539))

(assert (=> bm!14749 d!41765))

(declare-fun b!134935 () Bool)

(declare-fun e!87899 () Bool)

(declare-fun e!87898 () Bool)

(assert (=> b!134935 (= e!87899 e!87898)))

(declare-fun res!64856 () Bool)

(declare-fun lt!70570 () SeekEntryResult!275)

(assert (=> b!134935 (= res!64856 (and ((_ is Intermediate!275) lt!70570) (not (undefined!1087 lt!70570)) (bvslt (x!15592 lt!70570) #b01111111111111111111111111111110) (bvsge (x!15592 lt!70570) #b00000000000000000000000000000000) (bvsge (x!15592 lt!70570) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134935 (=> (not res!64856) (not e!87898))))

(declare-fun b!134936 () Bool)

(assert (=> b!134936 (and (bvsge (index!3262 lt!70570) #b00000000000000000000000000000000) (bvslt (index!3262 lt!70570) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun res!64857 () Bool)

(assert (=> b!134936 (= res!64857 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!70570)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87896 () Bool)

(assert (=> b!134936 (=> res!64857 e!87896)))

(declare-fun b!134937 () Bool)

(declare-fun e!87900 () SeekEntryResult!275)

(declare-fun e!87897 () SeekEntryResult!275)

(assert (=> b!134937 (= e!87900 e!87897)))

(declare-fun c!25159 () Bool)

(declare-fun lt!70569 () (_ BitVec 64))

(assert (=> b!134937 (= c!25159 (or (= lt!70569 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)) (= (bvadd lt!70569 lt!70569) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134938 () Bool)

(assert (=> b!134938 (= e!87900 (Intermediate!275 true (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!134939 () Bool)

(assert (=> b!134939 (= e!87899 (bvsge (x!15592 lt!70570) #b01111111111111111111111111111110))))

(declare-fun b!134940 () Bool)

(assert (=> b!134940 (and (bvsge (index!3262 lt!70570) #b00000000000000000000000000000000) (bvslt (index!3262 lt!70570) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun res!64858 () Bool)

(assert (=> b!134940 (= res!64858 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!70570)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> b!134940 (=> res!64858 e!87896)))

(assert (=> b!134940 (= e!87898 e!87896)))

(declare-fun d!41767 () Bool)

(assert (=> d!41767 e!87899))

(declare-fun c!25158 () Bool)

(assert (=> d!41767 (= c!25158 (and ((_ is Intermediate!275) lt!70570) (undefined!1087 lt!70570)))))

(assert (=> d!41767 (= lt!70570 e!87900)))

(declare-fun c!25160 () Bool)

(assert (=> d!41767 (= c!25160 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(assert (=> d!41767 (= lt!70569 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!41767 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!41767 (= (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3199 (underlying!455 thiss!992)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) lt!70570)))

(declare-fun b!134941 () Bool)

(assert (=> b!134941 (and (bvsge (index!3262 lt!70570) #b00000000000000000000000000000000) (bvslt (index!3262 lt!70570) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> b!134941 (= e!87896 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!70570)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134942 () Bool)

(assert (=> b!134942 (= e!87897 (Intermediate!275 false (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!134943 () Bool)

(assert (=> b!134943 (= e!87897 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(assert (= (and d!41767 c!25160) b!134938))

(assert (= (and d!41767 (not c!25160)) b!134937))

(assert (= (and b!134937 c!25159) b!134942))

(assert (= (and b!134937 (not c!25159)) b!134943))

(assert (= (and d!41767 c!25158) b!134939))

(assert (= (and d!41767 (not c!25158)) b!134935))

(assert (= (and b!134935 res!64856) b!134940))

(assert (= (and b!134940 (not res!64858)) b!134936))

(assert (= (and b!134936 (not res!64857)) b!134941))

(declare-fun m!160541 () Bool)

(assert (=> b!134940 m!160541))

(assert (=> d!41767 m!158129))

(declare-fun m!160543 () Bool)

(assert (=> d!41767 m!160543))

(assert (=> d!41767 m!155867))

(assert (=> b!134943 m!158129))

(declare-fun m!160545 () Bool)

(assert (=> b!134943 m!160545))

(assert (=> b!134943 m!160545))

(assert (=> b!134943 m!155999))

(declare-fun m!160547 () Bool)

(assert (=> b!134943 m!160547))

(assert (=> b!134941 m!160541))

(assert (=> b!134936 m!160541))

(assert (=> b!133748 d!41767))

(declare-fun d!41769 () Bool)

(declare-fun lt!70571 () (_ BitVec 32))

(assert (=> d!41769 (and (bvsge lt!70571 #b00000000000000000000000000000000) (bvslt lt!70571 (bvadd (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000001)))))

(assert (=> d!41769 (= lt!70571 (choose!52 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(assert (=> d!41769 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!41769 (= (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (mask!7165 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3199 (underlying!455 thiss!992)))) lt!70571)))

(declare-fun bs!5636 () Bool)

(assert (= bs!5636 d!41769))

(assert (=> bs!5636 m!156143))

(declare-fun m!160549 () Bool)

(assert (=> bs!5636 m!160549))

(assert (=> bs!5636 m!155867))

(assert (=> b!133748 d!41769))

(assert (=> b!133591 d!41463))

(declare-fun d!41771 () Bool)

(declare-fun e!87901 () Bool)

(assert (=> d!41771 e!87901))

(declare-fun res!64860 () Bool)

(assert (=> d!41771 (=> (not res!64860) (not e!87901))))

(declare-fun lt!70572 () ListLongMap!1707)

(assert (=> d!41771 (= res!64860 (contains!899 lt!70572 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70574 () List!1716)

(assert (=> d!41771 (= lt!70572 (ListLongMap!1708 lt!70574))))

(declare-fun lt!70575 () Unit!4135)

(declare-fun lt!70573 () Unit!4135)

(assert (=> d!41771 (= lt!70575 lt!70573)))

(assert (=> d!41771 (= (getValueByKey!172 lt!70574 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41771 (= lt!70573 (lemmaContainsTupThenGetReturnValue!87 lt!70574 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41771 (= lt!70574 (insertStrictlySorted!90 (toList!869 call!14749) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41771 (= (+!175 call!14749 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70572)))

(declare-fun b!134944 () Bool)

(declare-fun res!64859 () Bool)

(assert (=> b!134944 (=> (not res!64859) (not e!87901))))

(assert (=> b!134944 (= res!64859 (= (getValueByKey!172 (toList!869 lt!70572) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134945 () Bool)

(assert (=> b!134945 (= e!87901 (contains!902 (toList!869 lt!70572) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41771 res!64860) b!134944))

(assert (= (and b!134944 res!64859) b!134945))

(declare-fun m!160551 () Bool)

(assert (=> d!41771 m!160551))

(declare-fun m!160553 () Bool)

(assert (=> d!41771 m!160553))

(declare-fun m!160555 () Bool)

(assert (=> d!41771 m!160555))

(declare-fun m!160557 () Bool)

(assert (=> d!41771 m!160557))

(declare-fun m!160559 () Bool)

(assert (=> b!134944 m!160559))

(declare-fun m!160561 () Bool)

(assert (=> b!134945 m!160561))

(assert (=> b!133591 d!41771))

(declare-fun d!41773 () Bool)

(assert (=> d!41773 (not (contains!899 (+!175 lt!69891 (tuple2!2627 lt!69890 lt!69887)) lt!69893))))

(declare-fun lt!70576 () Unit!4135)

(assert (=> d!41773 (= lt!70576 (choose!826 lt!69891 lt!69890 lt!69887 lt!69893))))

(declare-fun e!87902 () Bool)

(assert (=> d!41773 e!87902))

(declare-fun res!64861 () Bool)

(assert (=> d!41773 (=> (not res!64861) (not e!87902))))

(assert (=> d!41773 (= res!64861 (not (contains!899 lt!69891 lt!69893)))))

(assert (=> d!41773 (= (addStillNotContains!61 lt!69891 lt!69890 lt!69887 lt!69893) lt!70576)))

(declare-fun b!134946 () Bool)

(assert (=> b!134946 (= e!87902 (not (= lt!69890 lt!69893)))))

(assert (= (and d!41773 res!64861) b!134946))

(assert (=> d!41773 m!157827))

(assert (=> d!41773 m!157827))

(assert (=> d!41773 m!157831))

(declare-fun m!160563 () Bool)

(assert (=> d!41773 m!160563))

(declare-fun m!160565 () Bool)

(assert (=> d!41773 m!160565))

(assert (=> b!133591 d!41773))

(declare-fun d!41775 () Bool)

(declare-fun e!87903 () Bool)

(assert (=> d!41775 e!87903))

(declare-fun res!64862 () Bool)

(assert (=> d!41775 (=> res!64862 e!87903)))

(declare-fun lt!70580 () Bool)

(assert (=> d!41775 (= res!64862 (not lt!70580))))

(declare-fun lt!70577 () Bool)

(assert (=> d!41775 (= lt!70580 lt!70577)))

(declare-fun lt!70579 () Unit!4135)

(declare-fun e!87904 () Unit!4135)

(assert (=> d!41775 (= lt!70579 e!87904)))

(declare-fun c!25161 () Bool)

(assert (=> d!41775 (= c!25161 lt!70577)))

(assert (=> d!41775 (= lt!70577 (containsKey!176 (toList!869 (+!175 lt!69891 (tuple2!2627 lt!69890 lt!69887))) lt!69893))))

(assert (=> d!41775 (= (contains!899 (+!175 lt!69891 (tuple2!2627 lt!69890 lt!69887)) lt!69893) lt!70580)))

(declare-fun b!134947 () Bool)

(declare-fun lt!70578 () Unit!4135)

(assert (=> b!134947 (= e!87904 lt!70578)))

(assert (=> b!134947 (= lt!70578 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69891 (tuple2!2627 lt!69890 lt!69887))) lt!69893))))

(assert (=> b!134947 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69891 (tuple2!2627 lt!69890 lt!69887))) lt!69893))))

(declare-fun b!134948 () Bool)

(declare-fun Unit!4239 () Unit!4135)

(assert (=> b!134948 (= e!87904 Unit!4239)))

(declare-fun b!134949 () Bool)

(assert (=> b!134949 (= e!87903 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69891 (tuple2!2627 lt!69890 lt!69887))) lt!69893)))))

(assert (= (and d!41775 c!25161) b!134947))

(assert (= (and d!41775 (not c!25161)) b!134948))

(assert (= (and d!41775 (not res!64862)) b!134949))

(declare-fun m!160567 () Bool)

(assert (=> d!41775 m!160567))

(declare-fun m!160569 () Bool)

(assert (=> b!134947 m!160569))

(declare-fun m!160571 () Bool)

(assert (=> b!134947 m!160571))

(assert (=> b!134947 m!160571))

(declare-fun m!160573 () Bool)

(assert (=> b!134947 m!160573))

(assert (=> b!134949 m!160571))

(assert (=> b!134949 m!160571))

(assert (=> b!134949 m!160573))

(assert (=> b!133591 d!41775))

(declare-fun d!41777 () Bool)

(declare-fun e!87905 () Bool)

(assert (=> d!41777 e!87905))

(declare-fun res!64864 () Bool)

(assert (=> d!41777 (=> (not res!64864) (not e!87905))))

(declare-fun lt!70581 () ListLongMap!1707)

(assert (=> d!41777 (= res!64864 (contains!899 lt!70581 (_1!1324 (tuple2!2627 lt!69890 lt!69887))))))

(declare-fun lt!70583 () List!1716)

(assert (=> d!41777 (= lt!70581 (ListLongMap!1708 lt!70583))))

(declare-fun lt!70584 () Unit!4135)

(declare-fun lt!70582 () Unit!4135)

(assert (=> d!41777 (= lt!70584 lt!70582)))

(assert (=> d!41777 (= (getValueByKey!172 lt!70583 (_1!1324 (tuple2!2627 lt!69890 lt!69887))) (Some!177 (_2!1324 (tuple2!2627 lt!69890 lt!69887))))))

(assert (=> d!41777 (= lt!70582 (lemmaContainsTupThenGetReturnValue!87 lt!70583 (_1!1324 (tuple2!2627 lt!69890 lt!69887)) (_2!1324 (tuple2!2627 lt!69890 lt!69887))))))

(assert (=> d!41777 (= lt!70583 (insertStrictlySorted!90 (toList!869 lt!69891) (_1!1324 (tuple2!2627 lt!69890 lt!69887)) (_2!1324 (tuple2!2627 lt!69890 lt!69887))))))

(assert (=> d!41777 (= (+!175 lt!69891 (tuple2!2627 lt!69890 lt!69887)) lt!70581)))

(declare-fun b!134950 () Bool)

(declare-fun res!64863 () Bool)

(assert (=> b!134950 (=> (not res!64863) (not e!87905))))

(assert (=> b!134950 (= res!64863 (= (getValueByKey!172 (toList!869 lt!70581) (_1!1324 (tuple2!2627 lt!69890 lt!69887))) (Some!177 (_2!1324 (tuple2!2627 lt!69890 lt!69887)))))))

(declare-fun b!134951 () Bool)

(assert (=> b!134951 (= e!87905 (contains!902 (toList!869 lt!70581) (tuple2!2627 lt!69890 lt!69887)))))

(assert (= (and d!41777 res!64864) b!134950))

(assert (= (and b!134950 res!64863) b!134951))

(declare-fun m!160575 () Bool)

(assert (=> d!41777 m!160575))

(declare-fun m!160577 () Bool)

(assert (=> d!41777 m!160577))

(declare-fun m!160579 () Bool)

(assert (=> d!41777 m!160579))

(declare-fun m!160581 () Bool)

(assert (=> d!41777 m!160581))

(declare-fun m!160583 () Bool)

(assert (=> b!134950 m!160583))

(declare-fun m!160585 () Bool)

(assert (=> b!134951 m!160585))

(assert (=> b!133591 d!41777))

(assert (=> b!133768 d!40909))

(declare-fun d!41779 () Bool)

(declare-fun e!87906 () Bool)

(assert (=> d!41779 e!87906))

(declare-fun res!64865 () Bool)

(assert (=> d!41779 (=> res!64865 e!87906)))

(declare-fun lt!70588 () Bool)

(assert (=> d!41779 (= res!64865 (not lt!70588))))

(declare-fun lt!70585 () Bool)

(assert (=> d!41779 (= lt!70588 lt!70585)))

(declare-fun lt!70587 () Unit!4135)

(declare-fun e!87907 () Unit!4135)

(assert (=> d!41779 (= lt!70587 e!87907)))

(declare-fun c!25162 () Bool)

(assert (=> d!41779 (= c!25162 lt!70585)))

(assert (=> d!41779 (= lt!70585 (containsKey!176 (toList!869 lt!69666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41779 (= (contains!899 lt!69666 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70588)))

(declare-fun b!134952 () Bool)

(declare-fun lt!70586 () Unit!4135)

(assert (=> b!134952 (= e!87907 lt!70586)))

(assert (=> b!134952 (= lt!70586 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134952 (isDefined!125 (getValueByKey!172 (toList!869 lt!69666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134953 () Bool)

(declare-fun Unit!4240 () Unit!4135)

(assert (=> b!134953 (= e!87907 Unit!4240)))

(declare-fun b!134954 () Bool)

(assert (=> b!134954 (= e!87906 (isDefined!125 (getValueByKey!172 (toList!869 lt!69666) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41779 c!25162) b!134952))

(assert (= (and d!41779 (not c!25162)) b!134953))

(assert (= (and d!41779 (not res!64865)) b!134954))

(declare-fun m!160587 () Bool)

(assert (=> d!41779 m!160587))

(declare-fun m!160589 () Bool)

(assert (=> b!134952 m!160589))

(declare-fun m!160591 () Bool)

(assert (=> b!134952 m!160591))

(assert (=> b!134952 m!160591))

(declare-fun m!160593 () Bool)

(assert (=> b!134952 m!160593))

(assert (=> b!134954 m!160591))

(assert (=> b!134954 m!160591))

(assert (=> b!134954 m!160593))

(assert (=> b!133246 d!41779))

(declare-fun lt!70589 () Bool)

(declare-fun d!41781 () Bool)

(assert (=> d!41781 (= lt!70589 (select (content!133 (toList!869 lt!69992)) (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))))

(declare-fun e!87909 () Bool)

(assert (=> d!41781 (= lt!70589 e!87909)))

(declare-fun res!64866 () Bool)

(assert (=> d!41781 (=> (not res!64866) (not e!87909))))

(assert (=> d!41781 (= res!64866 ((_ is Cons!1712) (toList!869 lt!69992)))))

(assert (=> d!41781 (= (contains!902 (toList!869 lt!69992) (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))) lt!70589)))

(declare-fun b!134955 () Bool)

(declare-fun e!87908 () Bool)

(assert (=> b!134955 (= e!87909 e!87908)))

(declare-fun res!64867 () Bool)

(assert (=> b!134955 (=> res!64867 e!87908)))

(assert (=> b!134955 (= res!64867 (= (h!2317 (toList!869 lt!69992)) (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))))

(declare-fun b!134956 () Bool)

(assert (=> b!134956 (= e!87908 (contains!902 (t!6167 (toList!869 lt!69992)) (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))))

(assert (= (and d!41781 res!64866) b!134955))

(assert (= (and b!134955 (not res!64867)) b!134956))

(declare-fun m!160595 () Bool)

(assert (=> d!41781 m!160595))

(declare-fun m!160597 () Bool)

(assert (=> d!41781 m!160597))

(declare-fun m!160599 () Bool)

(assert (=> b!134956 m!160599))

(assert (=> b!133758 d!41781))

(declare-fun d!41783 () Bool)

(assert (=> d!41783 (= (validKeyInArray!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) lt!69339)) (and (not (= (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) lt!69339) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) lt!69339) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133294 d!41783))

(declare-fun b!134957 () Bool)

(declare-fun e!87913 () Bool)

(declare-fun e!87912 () Bool)

(assert (=> b!134957 (= e!87913 e!87912)))

(declare-fun res!64868 () Bool)

(declare-fun lt!70591 () SeekEntryResult!275)

(assert (=> b!134957 (= res!64868 (and ((_ is Intermediate!275) lt!70591) (not (undefined!1087 lt!70591)) (bvslt (x!15592 lt!70591) #b01111111111111111111111111111110) (bvsge (x!15592 lt!70591) #b00000000000000000000000000000000) (bvsge (x!15592 lt!70591) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134957 (=> (not res!64868) (not e!87912))))

(declare-fun b!134958 () Bool)

(assert (=> b!134958 (and (bvsge (index!3262 lt!70591) #b00000000000000000000000000000000) (bvslt (index!3262 lt!70591) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64869 () Bool)

(assert (=> b!134958 (= res!64869 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3262 lt!70591)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87910 () Bool)

(assert (=> b!134958 (=> res!64869 e!87910)))

(declare-fun b!134959 () Bool)

(declare-fun e!87914 () SeekEntryResult!275)

(declare-fun e!87911 () SeekEntryResult!275)

(assert (=> b!134959 (= e!87914 e!87911)))

(declare-fun c!25164 () Bool)

(declare-fun lt!70590 () (_ BitVec 64))

(assert (=> b!134959 (= c!25164 (or (= lt!70590 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (= (bvadd lt!70590 lt!70590) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134960 () Bool)

(assert (=> b!134960 (= e!87914 (Intermediate!275 true (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!134961 () Bool)

(assert (=> b!134961 (= e!87913 (bvsge (x!15592 lt!70591) #b01111111111111111111111111111110))))

(declare-fun b!134962 () Bool)

(assert (=> b!134962 (and (bvsge (index!3262 lt!70591) #b00000000000000000000000000000000) (bvslt (index!3262 lt!70591) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64870 () Bool)

(assert (=> b!134962 (= res!64870 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3262 lt!70591)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> b!134962 (=> res!64870 e!87910)))

(assert (=> b!134962 (= e!87912 e!87910)))

(declare-fun d!41785 () Bool)

(assert (=> d!41785 e!87913))

(declare-fun c!25163 () Bool)

(assert (=> d!41785 (= c!25163 (and ((_ is Intermediate!275) lt!70591) (undefined!1087 lt!70591)))))

(assert (=> d!41785 (= lt!70591 e!87914)))

(declare-fun c!25165 () Bool)

(assert (=> d!41785 (= c!25165 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(assert (=> d!41785 (= lt!70590 (select (arr!2261 (_keys!4614 newMap!16)) (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16))))))

(assert (=> d!41785 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41785 (= (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)) lt!70591)))

(declare-fun b!134963 () Bool)

(assert (=> b!134963 (and (bvsge (index!3262 lt!70591) #b00000000000000000000000000000000) (bvslt (index!3262 lt!70591) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> b!134963 (= e!87910 (= (select (arr!2261 (_keys!4614 newMap!16)) (index!3262 lt!70591)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134964 () Bool)

(assert (=> b!134964 (= e!87911 (Intermediate!275 false (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!134965 () Bool)

(assert (=> b!134965 (= e!87911 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7165 newMap!16)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (_keys!4614 newMap!16) (mask!7165 newMap!16)))))

(assert (= (and d!41785 c!25165) b!134960))

(assert (= (and d!41785 (not c!25165)) b!134959))

(assert (= (and b!134959 c!25164) b!134964))

(assert (= (and b!134959 (not c!25164)) b!134965))

(assert (= (and d!41785 c!25163) b!134961))

(assert (= (and d!41785 (not c!25163)) b!134957))

(assert (= (and b!134957 res!64868) b!134962))

(assert (= (and b!134962 (not res!64870)) b!134958))

(assert (= (and b!134958 (not res!64869)) b!134963))

(declare-fun m!160601 () Bool)

(assert (=> b!134962 m!160601))

(assert (=> d!41785 m!157521))

(declare-fun m!160603 () Bool)

(assert (=> d!41785 m!160603))

(assert (=> d!41785 m!156157))

(assert (=> b!134965 m!157521))

(declare-fun m!160605 () Bool)

(assert (=> b!134965 m!160605))

(assert (=> b!134965 m!160605))

(assert (=> b!134965 m!155869))

(declare-fun m!160607 () Bool)

(assert (=> b!134965 m!160607))

(assert (=> b!134963 m!160601))

(assert (=> b!134958 m!160601))

(assert (=> b!133438 d!41785))

(declare-fun d!41787 () Bool)

(declare-fun lt!70592 () (_ BitVec 32))

(assert (=> d!41787 (and (bvsge lt!70592 #b00000000000000000000000000000000) (bvslt lt!70592 (bvadd (mask!7165 newMap!16) #b00000000000000000000000000000001)))))

(assert (=> d!41787 (= lt!70592 (choose!52 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)))))

(assert (=> d!41787 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41787 (= (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (mask!7165 newMap!16)) #b00000000000000000000000000000000 (mask!7165 newMap!16)) lt!70592)))

(declare-fun bs!5637 () Bool)

(assert (= bs!5637 d!41787))

(assert (=> bs!5637 m!156469))

(declare-fun m!160609 () Bool)

(assert (=> bs!5637 m!160609))

(assert (=> bs!5637 m!156157))

(assert (=> b!133438 d!41787))

(declare-fun d!41789 () Bool)

(declare-fun lt!70593 () Bool)

(assert (=> d!41789 (= lt!70593 (select (content!133 (toList!869 lt!69638)) (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(declare-fun e!87916 () Bool)

(assert (=> d!41789 (= lt!70593 e!87916)))

(declare-fun res!64871 () Bool)

(assert (=> d!41789 (=> (not res!64871) (not e!87916))))

(assert (=> d!41789 (= res!64871 ((_ is Cons!1712) (toList!869 lt!69638)))))

(assert (=> d!41789 (= (contains!902 (toList!869 lt!69638) (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!70593)))

(declare-fun b!134966 () Bool)

(declare-fun e!87915 () Bool)

(assert (=> b!134966 (= e!87916 e!87915)))

(declare-fun res!64872 () Bool)

(assert (=> b!134966 (=> res!64872 e!87915)))

(assert (=> b!134966 (= res!64872 (= (h!2317 (toList!869 lt!69638)) (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(declare-fun b!134967 () Bool)

(assert (=> b!134967 (= e!87915 (contains!902 (t!6167 (toList!869 lt!69638)) (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(assert (= (and d!41789 res!64871) b!134966))

(assert (= (and b!134966 (not res!64872)) b!134967))

(declare-fun m!160611 () Bool)

(assert (=> d!41789 m!160611))

(declare-fun m!160613 () Bool)

(assert (=> d!41789 m!160613))

(declare-fun m!160615 () Bool)

(assert (=> b!134967 m!160615))

(assert (=> b!133229 d!41789))

(declare-fun e!87918 () Option!178)

(declare-fun b!134970 () Bool)

(assert (=> b!134970 (= e!87918 (getValueByKey!172 (t!6167 (toList!869 lt!69596)) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))

(declare-fun b!134971 () Bool)

(assert (=> b!134971 (= e!87918 None!176)))

(declare-fun d!41791 () Bool)

(declare-fun c!25166 () Bool)

(assert (=> d!41791 (= c!25166 (and ((_ is Cons!1712) (toList!869 lt!69596)) (= (_1!1324 (h!2317 (toList!869 lt!69596))) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))))))))

(declare-fun e!87917 () Option!178)

(assert (=> d!41791 (= (getValueByKey!172 (toList!869 lt!69596) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))) e!87917)))

(declare-fun b!134968 () Bool)

(assert (=> b!134968 (= e!87917 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69596)))))))

(declare-fun b!134969 () Bool)

(assert (=> b!134969 (= e!87917 e!87918)))

(declare-fun c!25167 () Bool)

(assert (=> b!134969 (= c!25167 (and ((_ is Cons!1712) (toList!869 lt!69596)) (not (= (_1!1324 (h!2317 (toList!869 lt!69596))) (_1!1324 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!41791 c!25166) b!134968))

(assert (= (and d!41791 (not c!25166)) b!134969))

(assert (= (and b!134969 c!25167) b!134970))

(assert (= (and b!134969 (not c!25167)) b!134971))

(declare-fun m!160617 () Bool)

(assert (=> b!134970 m!160617))

(assert (=> b!133147 d!41791))

(declare-fun d!41793 () Bool)

(declare-fun e!87919 () Bool)

(assert (=> d!41793 e!87919))

(declare-fun res!64874 () Bool)

(assert (=> d!41793 (=> (not res!64874) (not e!87919))))

(declare-fun lt!70594 () ListLongMap!1707)

(assert (=> d!41793 (= res!64874 (contains!899 lt!70594 (_1!1324 (ite (or c!24803 c!24801) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!70596 () List!1716)

(assert (=> d!41793 (= lt!70594 (ListLongMap!1708 lt!70596))))

(declare-fun lt!70597 () Unit!4135)

(declare-fun lt!70595 () Unit!4135)

(assert (=> d!41793 (= lt!70597 lt!70595)))

(assert (=> d!41793 (= (getValueByKey!172 lt!70596 (_1!1324 (ite (or c!24803 c!24801) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!177 (_2!1324 (ite (or c!24803 c!24801) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41793 (= lt!70595 (lemmaContainsTupThenGetReturnValue!87 lt!70596 (_1!1324 (ite (or c!24803 c!24801) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite (or c!24803 c!24801) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41793 (= lt!70596 (insertStrictlySorted!90 (toList!869 (ite c!24803 call!14765 (ite c!24801 call!14768 call!14769))) (_1!1324 (ite (or c!24803 c!24801) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite (or c!24803 c!24801) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41793 (= (+!175 (ite c!24803 call!14765 (ite c!24801 call!14768 call!14769)) (ite (or c!24803 c!24801) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70594)))

(declare-fun b!134972 () Bool)

(declare-fun res!64873 () Bool)

(assert (=> b!134972 (=> (not res!64873) (not e!87919))))

(assert (=> b!134972 (= res!64873 (= (getValueByKey!172 (toList!869 lt!70594) (_1!1324 (ite (or c!24803 c!24801) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!177 (_2!1324 (ite (or c!24803 c!24801) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134973 () Bool)

(assert (=> b!134973 (= e!87919 (contains!902 (toList!869 lt!70594) (ite (or c!24803 c!24801) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41793 res!64874) b!134972))

(assert (= (and b!134972 res!64873) b!134973))

(declare-fun m!160619 () Bool)

(assert (=> d!41793 m!160619))

(declare-fun m!160621 () Bool)

(assert (=> d!41793 m!160621))

(declare-fun m!160623 () Bool)

(assert (=> d!41793 m!160623))

(declare-fun m!160625 () Bool)

(assert (=> d!41793 m!160625))

(declare-fun m!160627 () Bool)

(assert (=> b!134972 m!160627))

(declare-fun m!160629 () Bool)

(assert (=> b!134973 m!160629))

(assert (=> bm!14762 d!41793))

(declare-fun d!41795 () Bool)

(assert (=> d!41795 (= (get!1486 (getValueByKey!172 (toList!869 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!172 (toList!869 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40571 d!41795))

(declare-fun b!134976 () Bool)

(declare-fun e!87921 () Option!178)

(assert (=> b!134976 (= e!87921 (getValueByKey!172 (t!6167 (toList!869 lt!69486)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134977 () Bool)

(assert (=> b!134977 (= e!87921 None!176)))

(declare-fun d!41797 () Bool)

(declare-fun c!25168 () Bool)

(assert (=> d!41797 (= c!25168 (and ((_ is Cons!1712) (toList!869 lt!69486)) (= (_1!1324 (h!2317 (toList!869 lt!69486))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87920 () Option!178)

(assert (=> d!41797 (= (getValueByKey!172 (toList!869 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000) e!87920)))

(declare-fun b!134974 () Bool)

(assert (=> b!134974 (= e!87920 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69486)))))))

(declare-fun b!134975 () Bool)

(assert (=> b!134975 (= e!87920 e!87921)))

(declare-fun c!25169 () Bool)

(assert (=> b!134975 (= c!25169 (and ((_ is Cons!1712) (toList!869 lt!69486)) (not (= (_1!1324 (h!2317 (toList!869 lt!69486))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!41797 c!25168) b!134974))

(assert (= (and d!41797 (not c!25168)) b!134975))

(assert (= (and b!134975 c!25169) b!134976))

(assert (= (and b!134975 (not c!25169)) b!134977))

(declare-fun m!160631 () Bool)

(assert (=> b!134976 m!160631))

(assert (=> d!40571 d!41797))

(declare-fun b!134978 () Bool)

(declare-fun e!87923 () Bool)

(declare-fun e!87926 () Bool)

(assert (=> b!134978 (= e!87923 e!87926)))

(declare-fun c!25170 () Bool)

(declare-fun e!87928 () Bool)

(assert (=> b!134978 (= c!25170 e!87928)))

(declare-fun res!64878 () Bool)

(assert (=> b!134978 (=> (not res!64878) (not e!87928))))

(assert (=> b!134978 (= res!64878 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!134979 () Bool)

(declare-fun e!87927 () Bool)

(declare-fun lt!70603 () ListLongMap!1707)

(assert (=> b!134979 (= e!87927 (isEmpty!410 lt!70603))))

(declare-fun b!134980 () Bool)

(declare-fun lt!70599 () Unit!4135)

(declare-fun lt!70600 () Unit!4135)

(assert (=> b!134980 (= lt!70599 lt!70600)))

(declare-fun lt!70602 () ListLongMap!1707)

(declare-fun lt!70604 () (_ BitVec 64))

(declare-fun lt!70598 () V!3483)

(declare-fun lt!70601 () (_ BitVec 64))

(assert (=> b!134980 (not (contains!899 (+!175 lt!70602 (tuple2!2627 lt!70601 lt!70598)) lt!70604))))

(assert (=> b!134980 (= lt!70600 (addStillNotContains!61 lt!70602 lt!70601 lt!70598 lt!70604))))

(assert (=> b!134980 (= lt!70604 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134980 (= lt!70598 (get!1482 (select (arr!2262 (_values!2848 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134980 (= lt!70601 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!14853 () ListLongMap!1707)

(assert (=> b!134980 (= lt!70602 call!14853)))

(declare-fun e!87925 () ListLongMap!1707)

(assert (=> b!134980 (= e!87925 (+!175 call!14853 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134981 () Bool)

(assert (=> b!134981 (= e!87926 e!87927)))

(declare-fun c!25173 () Bool)

(assert (=> b!134981 (= c!25173 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!134982 () Bool)

(assert (=> b!134982 (= e!87928 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134982 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!134983 () Bool)

(declare-fun res!64876 () Bool)

(assert (=> b!134983 (=> (not res!64876) (not e!87923))))

(assert (=> b!134983 (= res!64876 (not (contains!899 lt!70603 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134984 () Bool)

(assert (=> b!134984 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> b!134984 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2531 (_values!2848 newMap!16))))))

(declare-fun e!87922 () Bool)

(assert (=> b!134984 (= e!87922 (= (apply!116 lt!70603 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1482 (select (arr!2262 (_values!2848 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41799 () Bool)

(assert (=> d!41799 e!87923))

(declare-fun res!64877 () Bool)

(assert (=> d!41799 (=> (not res!64877) (not e!87923))))

(assert (=> d!41799 (= res!64877 (not (contains!899 lt!70603 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87924 () ListLongMap!1707)

(assert (=> d!41799 (= lt!70603 e!87924)))

(declare-fun c!25171 () Bool)

(assert (=> d!41799 (= c!25171 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!41799 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41799 (= (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)) lt!70603)))

(declare-fun b!134985 () Bool)

(assert (=> b!134985 (= e!87925 call!14853)))

(declare-fun bm!14850 () Bool)

(assert (=> bm!14850 (= call!14853 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!134986 () Bool)

(assert (=> b!134986 (= e!87926 e!87922)))

(assert (=> b!134986 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64875 () Bool)

(assert (=> b!134986 (= res!64875 (contains!899 lt!70603 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134986 (=> (not res!64875) (not e!87922))))

(declare-fun b!134987 () Bool)

(assert (=> b!134987 (= e!87924 (ListLongMap!1708 Nil!1713))))

(declare-fun b!134988 () Bool)

(assert (=> b!134988 (= e!87927 (= lt!70603 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!134989 () Bool)

(assert (=> b!134989 (= e!87924 e!87925)))

(declare-fun c!25172 () Bool)

(assert (=> b!134989 (= c!25172 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!41799 c!25171) b!134987))

(assert (= (and d!41799 (not c!25171)) b!134989))

(assert (= (and b!134989 c!25172) b!134980))

(assert (= (and b!134989 (not c!25172)) b!134985))

(assert (= (or b!134980 b!134985) bm!14850))

(assert (= (and d!41799 res!64877) b!134983))

(assert (= (and b!134983 res!64876) b!134978))

(assert (= (and b!134978 res!64878) b!134982))

(assert (= (and b!134978 c!25170) b!134986))

(assert (= (and b!134978 (not c!25170)) b!134981))

(assert (= (and b!134986 res!64875) b!134984))

(assert (= (and b!134981 c!25173) b!134988))

(assert (= (and b!134981 (not c!25173)) b!134979))

(declare-fun b_lambda!6015 () Bool)

(assert (=> (not b_lambda!6015) (not b!134980)))

(assert (=> b!134980 t!6176))

(declare-fun b_and!8371 () Bool)

(assert (= b_and!8367 (and (=> t!6176 result!3997) b_and!8371)))

(assert (=> b!134980 t!6178))

(declare-fun b_and!8373 () Bool)

(assert (= b_and!8369 (and (=> t!6178 result!3999) b_and!8373)))

(declare-fun b_lambda!6017 () Bool)

(assert (=> (not b_lambda!6017) (not b!134984)))

(assert (=> b!134984 t!6176))

(declare-fun b_and!8375 () Bool)

(assert (= b_and!8371 (and (=> t!6176 result!3997) b_and!8375)))

(assert (=> b!134984 t!6178))

(declare-fun b_and!8377 () Bool)

(assert (= b_and!8373 (and (=> t!6178 result!3999) b_and!8377)))

(declare-fun m!160633 () Bool)

(assert (=> b!134979 m!160633))

(declare-fun m!160635 () Bool)

(assert (=> d!41799 m!160635))

(assert (=> d!41799 m!156157))

(declare-fun m!160637 () Bool)

(assert (=> b!134983 m!160637))

(assert (=> b!134989 m!157845))

(assert (=> b!134989 m!157845))

(assert (=> b!134989 m!157847))

(assert (=> b!134982 m!157845))

(assert (=> b!134982 m!157845))

(assert (=> b!134982 m!157847))

(assert (=> b!134984 m!156175))

(declare-fun m!160639 () Bool)

(assert (=> b!134984 m!160639))

(assert (=> b!134984 m!156175))

(declare-fun m!160641 () Bool)

(assert (=> b!134984 m!160641))

(assert (=> b!134984 m!160639))

(assert (=> b!134984 m!157845))

(declare-fun m!160643 () Bool)

(assert (=> b!134984 m!160643))

(assert (=> b!134984 m!157845))

(assert (=> b!134986 m!157845))

(assert (=> b!134986 m!157845))

(declare-fun m!160645 () Bool)

(assert (=> b!134986 m!160645))

(declare-fun m!160647 () Bool)

(assert (=> b!134988 m!160647))

(assert (=> bm!14850 m!160647))

(assert (=> b!134980 m!156175))

(assert (=> b!134980 m!160639))

(assert (=> b!134980 m!156175))

(assert (=> b!134980 m!160641))

(declare-fun m!160649 () Bool)

(assert (=> b!134980 m!160649))

(declare-fun m!160651 () Bool)

(assert (=> b!134980 m!160651))

(assert (=> b!134980 m!160639))

(declare-fun m!160653 () Bool)

(assert (=> b!134980 m!160653))

(assert (=> b!134980 m!157845))

(assert (=> b!134980 m!160651))

(declare-fun m!160655 () Bool)

(assert (=> b!134980 m!160655))

(assert (=> b!133024 d!41799))

(declare-fun d!41801 () Bool)

(assert (=> d!41801 (isDefined!125 (getValueByKey!172 (toList!869 lt!69464) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70605 () Unit!4135)

(assert (=> d!41801 (= lt!70605 (choose!817 (toList!869 lt!69464) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87929 () Bool)

(assert (=> d!41801 e!87929))

(declare-fun res!64879 () Bool)

(assert (=> d!41801 (=> (not res!64879) (not e!87929))))

(assert (=> d!41801 (= res!64879 (isStrictlySorted!322 (toList!869 lt!69464)))))

(assert (=> d!41801 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69464) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70605)))

(declare-fun b!134990 () Bool)

(assert (=> b!134990 (= e!87929 (containsKey!176 (toList!869 lt!69464) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41801 res!64879) b!134990))

(assert (=> d!41801 m!157529))

(assert (=> d!41801 m!157529))

(assert (=> d!41801 m!157531))

(declare-fun m!160657 () Bool)

(assert (=> d!41801 m!160657))

(assert (=> d!41801 m!159967))

(assert (=> b!134990 m!157525))

(assert (=> b!133439 d!41801))

(declare-fun d!41803 () Bool)

(assert (=> d!41803 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69464) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69464) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5638 () Bool)

(assert (= bs!5638 d!41803))

(assert (=> bs!5638 m!157529))

(declare-fun m!160659 () Bool)

(assert (=> bs!5638 m!160659))

(assert (=> b!133439 d!41803))

(declare-fun b!134993 () Bool)

(declare-fun e!87931 () Option!178)

(assert (=> b!134993 (= e!87931 (getValueByKey!172 (t!6167 (toList!869 lt!69464)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134994 () Bool)

(assert (=> b!134994 (= e!87931 None!176)))

(declare-fun d!41805 () Bool)

(declare-fun c!25174 () Bool)

(assert (=> d!41805 (= c!25174 (and ((_ is Cons!1712) (toList!869 lt!69464)) (= (_1!1324 (h!2317 (toList!869 lt!69464))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87930 () Option!178)

(assert (=> d!41805 (= (getValueByKey!172 (toList!869 lt!69464) #b1000000000000000000000000000000000000000000000000000000000000000) e!87930)))

(declare-fun b!134991 () Bool)

(assert (=> b!134991 (= e!87930 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69464)))))))

(declare-fun b!134992 () Bool)

(assert (=> b!134992 (= e!87930 e!87931)))

(declare-fun c!25175 () Bool)

(assert (=> b!134992 (= c!25175 (and ((_ is Cons!1712) (toList!869 lt!69464)) (not (= (_1!1324 (h!2317 (toList!869 lt!69464))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!41805 c!25174) b!134991))

(assert (= (and d!41805 (not c!25174)) b!134992))

(assert (= (and b!134992 c!25175) b!134993))

(assert (= (and b!134992 (not c!25175)) b!134994))

(declare-fun m!160661 () Bool)

(assert (=> b!134993 m!160661))

(assert (=> b!133439 d!41805))

(declare-fun d!41807 () Bool)

(assert (=> d!41807 (= (apply!116 lt!69883 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69883) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5639 () Bool)

(assert (= bs!5639 d!41807))

(assert (=> bs!5639 m!159997))

(assert (=> bs!5639 m!159997))

(declare-fun m!160663 () Bool)

(assert (=> bs!5639 m!160663))

(assert (=> b!133582 d!41807))

(declare-fun d!41809 () Bool)

(assert (=> d!41809 (= (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) lt!69259)) (not (isEmpty!409 (getValueByKey!172 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) lt!69259))))))

(declare-fun bs!5640 () Bool)

(assert (= bs!5640 d!41809))

(assert (=> bs!5640 m!158229))

(declare-fun m!160665 () Bool)

(assert (=> bs!5640 m!160665))

(assert (=> b!133767 d!41809))

(declare-fun b!134997 () Bool)

(declare-fun e!87933 () Option!178)

(assert (=> b!134997 (= e!87933 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))) lt!69259))))

(declare-fun b!134998 () Bool)

(assert (=> b!134998 (= e!87933 None!176)))

(declare-fun d!41811 () Bool)

(declare-fun c!25176 () Bool)

(assert (=> d!41811 (= c!25176 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))) lt!69259)))))

(declare-fun e!87932 () Option!178)

(assert (=> d!41811 (= (getValueByKey!172 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) lt!69259) e!87932)))

(declare-fun b!134995 () Bool)

(assert (=> b!134995 (= e!87932 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))))))))

(declare-fun b!134996 () Bool)

(assert (=> b!134996 (= e!87932 e!87933)))

(declare-fun c!25177 () Bool)

(assert (=> b!134996 (= c!25177 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))) lt!69259))))))

(assert (= (and d!41811 c!25176) b!134995))

(assert (= (and d!41811 (not c!25176)) b!134996))

(assert (= (and b!134996 c!25177) b!134997))

(assert (= (and b!134996 (not c!25177)) b!134998))

(declare-fun m!160667 () Bool)

(assert (=> b!134997 m!160667))

(assert (=> b!133767 d!41811))

(declare-fun d!41813 () Bool)

(declare-fun e!87934 () Bool)

(assert (=> d!41813 e!87934))

(declare-fun res!64880 () Bool)

(assert (=> d!41813 (=> res!64880 e!87934)))

(declare-fun lt!70609 () Bool)

(assert (=> d!41813 (= res!64880 (not lt!70609))))

(declare-fun lt!70606 () Bool)

(assert (=> d!41813 (= lt!70609 lt!70606)))

(declare-fun lt!70608 () Unit!4135)

(declare-fun e!87935 () Unit!4135)

(assert (=> d!41813 (= lt!70608 e!87935)))

(declare-fun c!25178 () Bool)

(assert (=> d!41813 (= c!25178 lt!70606)))

(assert (=> d!41813 (= lt!70606 (containsKey!176 (toList!869 lt!69670) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41813 (= (contains!899 lt!69670 (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70609)))

(declare-fun b!134999 () Bool)

(declare-fun lt!70607 () Unit!4135)

(assert (=> b!134999 (= e!87935 lt!70607)))

(assert (=> b!134999 (= lt!70607 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69670) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!134999 (isDefined!125 (getValueByKey!172 (toList!869 lt!69670) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135000 () Bool)

(declare-fun Unit!4241 () Unit!4135)

(assert (=> b!135000 (= e!87935 Unit!4241)))

(declare-fun b!135001 () Bool)

(assert (=> b!135001 (= e!87934 (isDefined!125 (getValueByKey!172 (toList!869 lt!69670) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41813 c!25178) b!134999))

(assert (= (and d!41813 (not c!25178)) b!135000))

(assert (= (and d!41813 (not res!64880)) b!135001))

(declare-fun m!160669 () Bool)

(assert (=> d!41813 m!160669))

(declare-fun m!160671 () Bool)

(assert (=> b!134999 m!160671))

(assert (=> b!134999 m!157213))

(assert (=> b!134999 m!157213))

(declare-fun m!160673 () Bool)

(assert (=> b!134999 m!160673))

(assert (=> b!135001 m!157213))

(assert (=> b!135001 m!157213))

(assert (=> b!135001 m!160673))

(assert (=> d!40517 d!41813))

(declare-fun e!87937 () Option!178)

(declare-fun b!135004 () Bool)

(assert (=> b!135004 (= e!87937 (getValueByKey!172 (t!6167 lt!69672) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135005 () Bool)

(assert (=> b!135005 (= e!87937 None!176)))

(declare-fun c!25179 () Bool)

(declare-fun d!41815 () Bool)

(assert (=> d!41815 (= c!25179 (and ((_ is Cons!1712) lt!69672) (= (_1!1324 (h!2317 lt!69672)) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87936 () Option!178)

(assert (=> d!41815 (= (getValueByKey!172 lt!69672 (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87936)))

(declare-fun b!135002 () Bool)

(assert (=> b!135002 (= e!87936 (Some!177 (_2!1324 (h!2317 lt!69672))))))

(declare-fun b!135003 () Bool)

(assert (=> b!135003 (= e!87936 e!87937)))

(declare-fun c!25180 () Bool)

(assert (=> b!135003 (= c!25180 (and ((_ is Cons!1712) lt!69672) (not (= (_1!1324 (h!2317 lt!69672)) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!41815 c!25179) b!135002))

(assert (= (and d!41815 (not c!25179)) b!135003))

(assert (= (and b!135003 c!25180) b!135004))

(assert (= (and b!135003 (not c!25180)) b!135005))

(declare-fun m!160675 () Bool)

(assert (=> b!135004 m!160675))

(assert (=> d!40517 d!41815))

(declare-fun d!41817 () Bool)

(assert (=> d!41817 (= (getValueByKey!172 lt!69672 (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70610 () Unit!4135)

(assert (=> d!41817 (= lt!70610 (choose!827 lt!69672 (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87938 () Bool)

(assert (=> d!41817 e!87938))

(declare-fun res!64881 () Bool)

(assert (=> d!41817 (=> (not res!64881) (not e!87938))))

(assert (=> d!41817 (= res!64881 (isStrictlySorted!322 lt!69672))))

(assert (=> d!41817 (= (lemmaContainsTupThenGetReturnValue!87 lt!69672 (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70610)))

(declare-fun b!135006 () Bool)

(declare-fun res!64882 () Bool)

(assert (=> b!135006 (=> (not res!64882) (not e!87938))))

(assert (=> b!135006 (= res!64882 (containsKey!176 lt!69672 (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135007 () Bool)

(assert (=> b!135007 (= e!87938 (contains!902 lt!69672 (tuple2!2627 (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41817 res!64881) b!135006))

(assert (= (and b!135006 res!64882) b!135007))

(assert (=> d!41817 m!157207))

(declare-fun m!160677 () Bool)

(assert (=> d!41817 m!160677))

(declare-fun m!160679 () Bool)

(assert (=> d!41817 m!160679))

(declare-fun m!160681 () Bool)

(assert (=> b!135006 m!160681))

(declare-fun m!160683 () Bool)

(assert (=> b!135007 m!160683))

(assert (=> d!40517 d!41817))

(declare-fun bm!14851 () Bool)

(declare-fun call!14855 () List!1716)

(declare-fun call!14856 () List!1716)

(assert (=> bm!14851 (= call!14855 call!14856)))

(declare-fun d!41819 () Bool)

(declare-fun e!87942 () Bool)

(assert (=> d!41819 e!87942))

(declare-fun res!64884 () Bool)

(assert (=> d!41819 (=> (not res!64884) (not e!87942))))

(declare-fun lt!70611 () List!1716)

(assert (=> d!41819 (= res!64884 (isStrictlySorted!322 lt!70611))))

(declare-fun e!87940 () List!1716)

(assert (=> d!41819 (= lt!70611 e!87940)))

(declare-fun c!25184 () Bool)

(assert (=> d!41819 (= c!25184 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvslt (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41819 (isStrictlySorted!322 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))))

(assert (=> d!41819 (= (insertStrictlySorted!90 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70611)))

(declare-fun b!135008 () Bool)

(assert (=> b!135008 (= e!87942 (contains!902 lt!70611 (tuple2!2627 (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun c!25182 () Bool)

(declare-fun b!135009 () Bool)

(assert (=> b!135009 (= c!25182 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvsgt (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87941 () List!1716)

(declare-fun e!87943 () List!1716)

(assert (=> b!135009 (= e!87941 e!87943)))

(declare-fun e!87939 () List!1716)

(declare-fun b!135010 () Bool)

(assert (=> b!135010 (= e!87939 (insertStrictlySorted!90 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135011 () Bool)

(assert (=> b!135011 (= e!87941 call!14855)))

(declare-fun b!135012 () Bool)

(declare-fun call!14854 () List!1716)

(assert (=> b!135012 (= e!87943 call!14854)))

(declare-fun b!135013 () Bool)

(declare-fun c!25181 () Bool)

(assert (=> b!135013 (= e!87939 (ite c!25181 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (ite c!25182 (Cons!1712 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) Nil!1713)))))

(declare-fun b!135014 () Bool)

(assert (=> b!135014 (= e!87943 call!14854)))

(declare-fun b!135015 () Bool)

(assert (=> b!135015 (= e!87940 call!14856)))

(declare-fun bm!14852 () Bool)

(assert (=> bm!14852 (= call!14856 ($colon$colon!92 e!87939 (ite c!25184 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (tuple2!2627 (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25183 () Bool)

(assert (=> bm!14852 (= c!25183 c!25184)))

(declare-fun bm!14853 () Bool)

(assert (=> bm!14853 (= call!14854 call!14855)))

(declare-fun b!135016 () Bool)

(declare-fun res!64883 () Bool)

(assert (=> b!135016 (=> (not res!64883) (not e!87942))))

(assert (=> b!135016 (= res!64883 (containsKey!176 lt!70611 (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135017 () Bool)

(assert (=> b!135017 (= e!87940 e!87941)))

(assert (=> b!135017 (= c!25181 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1324 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41819 c!25184) b!135015))

(assert (= (and d!41819 (not c!25184)) b!135017))

(assert (= (and b!135017 c!25181) b!135011))

(assert (= (and b!135017 (not c!25181)) b!135009))

(assert (= (and b!135009 c!25182) b!135012))

(assert (= (and b!135009 (not c!25182)) b!135014))

(assert (= (or b!135012 b!135014) bm!14853))

(assert (= (or b!135011 bm!14853) bm!14851))

(assert (= (or b!135015 bm!14851) bm!14852))

(assert (= (and bm!14852 c!25183) b!135010))

(assert (= (and bm!14852 (not c!25183)) b!135013))

(assert (= (and d!41819 res!64884) b!135016))

(assert (= (and b!135016 res!64883) b!135008))

(declare-fun m!160685 () Bool)

(assert (=> d!41819 m!160685))

(assert (=> d!41819 m!158257))

(declare-fun m!160687 () Bool)

(assert (=> bm!14852 m!160687))

(declare-fun m!160689 () Bool)

(assert (=> b!135010 m!160689))

(declare-fun m!160691 () Bool)

(assert (=> b!135008 m!160691))

(declare-fun m!160693 () Bool)

(assert (=> b!135016 m!160693))

(assert (=> d!40517 d!41819))

(declare-fun d!41821 () Bool)

(declare-fun res!64885 () Bool)

(declare-fun e!87944 () Bool)

(assert (=> d!41821 (=> res!64885 e!87944)))

(assert (=> d!41821 (= res!64885 (and ((_ is Cons!1712) (toList!869 lt!69413)) (= (_1!1324 (h!2317 (toList!869 lt!69413))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41821 (= (containsKey!176 (toList!869 lt!69413) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87944)))

(declare-fun b!135018 () Bool)

(declare-fun e!87945 () Bool)

(assert (=> b!135018 (= e!87944 e!87945)))

(declare-fun res!64886 () Bool)

(assert (=> b!135018 (=> (not res!64886) (not e!87945))))

(assert (=> b!135018 (= res!64886 (and (or (not ((_ is Cons!1712) (toList!869 lt!69413))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69413))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Cons!1712) (toList!869 lt!69413)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69413))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!135019 () Bool)

(assert (=> b!135019 (= e!87945 (containsKey!176 (t!6167 (toList!869 lt!69413)) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!41821 (not res!64885)) b!135018))

(assert (= (and b!135018 res!64886) b!135019))

(declare-fun m!160695 () Bool)

(assert (=> b!135019 m!160695))

(assert (=> d!40721 d!41821))

(declare-fun d!41823 () Bool)

(assert (=> d!41823 (= (get!1485 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133031 d!41823))

(declare-fun d!41825 () Bool)

(declare-fun c!25185 () Bool)

(assert (=> d!41825 (= c!25185 ((_ is Nil!1713) (toList!869 lt!69209)))))

(declare-fun e!87946 () (InoxSet tuple2!2626))

(assert (=> d!41825 (= (content!133 (toList!869 lt!69209)) e!87946)))

(declare-fun b!135020 () Bool)

(assert (=> b!135020 (= e!87946 ((as const (Array tuple2!2626 Bool)) false))))

(declare-fun b!135021 () Bool)

(assert (=> b!135021 (= e!87946 ((_ map or) (store ((as const (Array tuple2!2626 Bool)) false) (h!2317 (toList!869 lt!69209)) true) (content!133 (t!6167 (toList!869 lt!69209)))))))

(assert (= (and d!41825 c!25185) b!135020))

(assert (= (and d!41825 (not c!25185)) b!135021))

(declare-fun m!160697 () Bool)

(assert (=> b!135021 m!160697))

(assert (=> b!135021 m!160137))

(assert (=> d!40847 d!41825))

(declare-fun d!41827 () Bool)

(declare-fun res!64887 () Bool)

(declare-fun e!87947 () Bool)

(assert (=> d!41827 (=> res!64887 e!87947)))

(assert (=> d!41827 (= res!64887 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) lt!69483)))))

(assert (=> d!41827 (= (containsKey!176 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69483) e!87947)))

(declare-fun b!135022 () Bool)

(declare-fun e!87948 () Bool)

(assert (=> b!135022 (= e!87947 e!87948)))

(declare-fun res!64888 () Bool)

(assert (=> b!135022 (=> (not res!64888) (not e!87948))))

(assert (=> b!135022 (= res!64888 (and (or (not ((_ is Cons!1712) (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) (bvsle (_1!1324 (h!2317 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) lt!69483)) ((_ is Cons!1712) (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) (bvslt (_1!1324 (h!2317 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) lt!69483)))))

(declare-fun b!135023 () Bool)

(assert (=> b!135023 (= e!87948 (containsKey!176 (t!6167 (toList!869 (+!175 lt!69484 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) lt!69483))))

(assert (= (and d!41827 (not res!64887)) b!135022))

(assert (= (and b!135022 res!64888) b!135023))

(declare-fun m!160699 () Bool)

(assert (=> b!135023 m!160699))

(assert (=> d!40495 d!41827))

(declare-fun d!41829 () Bool)

(assert (=> d!41829 (isDefined!125 (getValueByKey!172 (toList!869 lt!69442) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun lt!70612 () Unit!4135)

(assert (=> d!41829 (= lt!70612 (choose!817 (toList!869 lt!69442) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun e!87949 () Bool)

(assert (=> d!41829 e!87949))

(declare-fun res!64889 () Bool)

(assert (=> d!41829 (=> (not res!64889) (not e!87949))))

(assert (=> d!41829 (= res!64889 (isStrictlySorted!322 (toList!869 lt!69442)))))

(assert (=> d!41829 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69442) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!70612)))

(declare-fun b!135024 () Bool)

(assert (=> b!135024 (= e!87949 (containsKey!176 (toList!869 lt!69442) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!41829 res!64889) b!135024))

(assert (=> d!41829 m!156505))

(assert (=> d!41829 m!156505))

(assert (=> d!41829 m!157483))

(declare-fun m!160701 () Bool)

(assert (=> d!41829 m!160701))

(declare-fun m!160703 () Bool)

(assert (=> d!41829 m!160703))

(assert (=> b!135024 m!157479))

(assert (=> b!133388 d!41829))

(declare-fun d!41831 () Bool)

(assert (=> d!41831 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69442) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69442) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun bs!5641 () Bool)

(assert (= bs!5641 d!41831))

(assert (=> bs!5641 m!156505))

(declare-fun m!160705 () Bool)

(assert (=> bs!5641 m!160705))

(assert (=> b!133388 d!41831))

(assert (=> b!133388 d!40685))

(declare-fun d!41833 () Bool)

(declare-fun e!87950 () Bool)

(assert (=> d!41833 e!87950))

(declare-fun res!64890 () Bool)

(assert (=> d!41833 (=> res!64890 e!87950)))

(declare-fun lt!70616 () Bool)

(assert (=> d!41833 (= res!64890 (not lt!70616))))

(declare-fun lt!70613 () Bool)

(assert (=> d!41833 (= lt!70616 lt!70613)))

(declare-fun lt!70615 () Unit!4135)

(declare-fun e!87951 () Unit!4135)

(assert (=> d!41833 (= lt!70615 e!87951)))

(declare-fun c!25186 () Bool)

(assert (=> d!41833 (= c!25186 lt!70613)))

(assert (=> d!41833 (= lt!70613 (containsKey!176 (toList!869 lt!69850) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41833 (= (contains!899 lt!69850 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70616)))

(declare-fun b!135025 () Bool)

(declare-fun lt!70614 () Unit!4135)

(assert (=> b!135025 (= e!87951 lt!70614)))

(assert (=> b!135025 (= lt!70614 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69850) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135025 (isDefined!125 (getValueByKey!172 (toList!869 lt!69850) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135026 () Bool)

(declare-fun Unit!4242 () Unit!4135)

(assert (=> b!135026 (= e!87951 Unit!4242)))

(declare-fun b!135027 () Bool)

(assert (=> b!135027 (= e!87950 (isDefined!125 (getValueByKey!172 (toList!869 lt!69850) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41833 c!25186) b!135025))

(assert (= (and d!41833 (not c!25186)) b!135026))

(assert (= (and d!41833 (not res!64890)) b!135027))

(declare-fun m!160707 () Bool)

(assert (=> d!41833 m!160707))

(declare-fun m!160709 () Bool)

(assert (=> b!135025 m!160709))

(assert (=> b!135025 m!159007))

(assert (=> b!135025 m!159007))

(declare-fun m!160711 () Bool)

(assert (=> b!135025 m!160711))

(assert (=> b!135027 m!159007))

(assert (=> b!135027 m!159007))

(assert (=> b!135027 m!160711))

(assert (=> bm!14731 d!41833))

(declare-fun d!41835 () Bool)

(declare-fun e!87952 () Bool)

(assert (=> d!41835 e!87952))

(declare-fun res!64891 () Bool)

(assert (=> d!41835 (=> res!64891 e!87952)))

(declare-fun lt!70620 () Bool)

(assert (=> d!41835 (= res!64891 (not lt!70620))))

(declare-fun lt!70617 () Bool)

(assert (=> d!41835 (= lt!70620 lt!70617)))

(declare-fun lt!70619 () Unit!4135)

(declare-fun e!87953 () Unit!4135)

(assert (=> d!41835 (= lt!70619 e!87953)))

(declare-fun c!25187 () Bool)

(assert (=> d!41835 (= c!25187 lt!70617)))

(assert (=> d!41835 (= lt!70617 (containsKey!176 (toList!869 lt!69883) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41835 (= (contains!899 lt!69883 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70620)))

(declare-fun b!135028 () Bool)

(declare-fun lt!70618 () Unit!4135)

(assert (=> b!135028 (= e!87953 lt!70618)))

(assert (=> b!135028 (= lt!70618 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69883) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135028 (isDefined!125 (getValueByKey!172 (toList!869 lt!69883) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135029 () Bool)

(declare-fun Unit!4243 () Unit!4135)

(assert (=> b!135029 (= e!87953 Unit!4243)))

(declare-fun b!135030 () Bool)

(assert (=> b!135030 (= e!87952 (isDefined!125 (getValueByKey!172 (toList!869 lt!69883) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41835 c!25187) b!135028))

(assert (= (and d!41835 (not c!25187)) b!135029))

(assert (= (and d!41835 (not res!64891)) b!135030))

(declare-fun m!160713 () Bool)

(assert (=> d!41835 m!160713))

(declare-fun m!160715 () Bool)

(assert (=> b!135028 m!160715))

(assert (=> b!135028 m!158939))

(assert (=> b!135028 m!158939))

(declare-fun m!160717 () Bool)

(assert (=> b!135028 m!160717))

(assert (=> b!135030 m!158939))

(assert (=> b!135030 m!158939))

(assert (=> b!135030 m!160717))

(assert (=> bm!14739 d!41835))

(declare-fun d!41837 () Bool)

(declare-fun e!87954 () Bool)

(assert (=> d!41837 e!87954))

(declare-fun res!64892 () Bool)

(assert (=> d!41837 (=> res!64892 e!87954)))

(declare-fun lt!70624 () Bool)

(assert (=> d!41837 (= res!64892 (not lt!70624))))

(declare-fun lt!70621 () Bool)

(assert (=> d!41837 (= lt!70624 lt!70621)))

(declare-fun lt!70623 () Unit!4135)

(declare-fun e!87955 () Unit!4135)

(assert (=> d!41837 (= lt!70623 e!87955)))

(declare-fun c!25188 () Bool)

(assert (=> d!41837 (= c!25188 lt!70621)))

(assert (=> d!41837 (= lt!70621 (containsKey!176 (toList!869 lt!69728) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41837 (= (contains!899 lt!69728 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70624)))

(declare-fun b!135031 () Bool)

(declare-fun lt!70622 () Unit!4135)

(assert (=> b!135031 (= e!87955 lt!70622)))

(assert (=> b!135031 (= lt!70622 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69728) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135031 (isDefined!125 (getValueByKey!172 (toList!869 lt!69728) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135032 () Bool)

(declare-fun Unit!4244 () Unit!4135)

(assert (=> b!135032 (= e!87955 Unit!4244)))

(declare-fun b!135033 () Bool)

(assert (=> b!135033 (= e!87954 (isDefined!125 (getValueByKey!172 (toList!869 lt!69728) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41837 c!25188) b!135031))

(assert (= (and d!41837 (not c!25188)) b!135032))

(assert (= (and d!41837 (not res!64892)) b!135033))

(declare-fun m!160719 () Bool)

(assert (=> d!41837 m!160719))

(declare-fun m!160721 () Bool)

(assert (=> b!135031 m!160721))

(declare-fun m!160723 () Bool)

(assert (=> b!135031 m!160723))

(assert (=> b!135031 m!160723))

(declare-fun m!160725 () Bool)

(assert (=> b!135031 m!160725))

(assert (=> b!135033 m!160723))

(assert (=> b!135033 m!160723))

(assert (=> b!135033 m!160725))

(assert (=> bm!14704 d!41837))

(declare-fun b!135034 () Bool)

(declare-fun e!87957 () Bool)

(declare-fun e!87960 () Bool)

(assert (=> b!135034 (= e!87957 e!87960)))

(declare-fun c!25189 () Bool)

(declare-fun e!87962 () Bool)

(assert (=> b!135034 (= c!25189 e!87962)))

(declare-fun res!64896 () Bool)

(assert (=> b!135034 (=> (not res!64896) (not e!87962))))

(assert (=> b!135034 (= res!64896 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!135035 () Bool)

(declare-fun e!87961 () Bool)

(declare-fun lt!70630 () ListLongMap!1707)

(assert (=> b!135035 (= e!87961 (isEmpty!410 lt!70630))))

(declare-fun b!135036 () Bool)

(declare-fun lt!70626 () Unit!4135)

(declare-fun lt!70627 () Unit!4135)

(assert (=> b!135036 (= lt!70626 lt!70627)))

(declare-fun lt!70625 () V!3483)

(declare-fun lt!70628 () (_ BitVec 64))

(declare-fun lt!70631 () (_ BitVec 64))

(declare-fun lt!70629 () ListLongMap!1707)

(assert (=> b!135036 (not (contains!899 (+!175 lt!70629 (tuple2!2627 lt!70628 lt!70625)) lt!70631))))

(assert (=> b!135036 (= lt!70627 (addStillNotContains!61 lt!70629 lt!70628 lt!70625 lt!70631))))

(assert (=> b!135036 (= lt!70631 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!135036 (= lt!70625 (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!135036 (= lt!70628 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun call!14857 () ListLongMap!1707)

(assert (=> b!135036 (= lt!70629 call!14857)))

(declare-fun e!87959 () ListLongMap!1707)

(assert (=> b!135036 (= e!87959 (+!175 call!14857 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135037 () Bool)

(assert (=> b!135037 (= e!87960 e!87961)))

(declare-fun c!25192 () Bool)

(assert (=> b!135037 (= c!25192 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun b!135038 () Bool)

(assert (=> b!135038 (= e!87962 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135038 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!135039 () Bool)

(declare-fun res!64894 () Bool)

(assert (=> b!135039 (=> (not res!64894) (not e!87957))))

(assert (=> b!135039 (= res!64894 (not (contains!899 lt!70630 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135040 () Bool)

(assert (=> b!135040 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> b!135040 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2531 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))))))))

(declare-fun e!87956 () Bool)

(assert (=> b!135040 (= e!87956 (= (apply!116 lt!70630 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1482 (select (arr!2262 (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!41839 () Bool)

(assert (=> d!41839 e!87957))

(declare-fun res!64895 () Bool)

(assert (=> d!41839 (=> (not res!64895) (not e!87957))))

(assert (=> d!41839 (= res!64895 (not (contains!899 lt!70630 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87958 () ListLongMap!1707)

(assert (=> d!41839 (= lt!70630 e!87958)))

(declare-fun c!25190 () Bool)

(assert (=> d!41839 (= c!25190 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!41839 (validMask!0 (mask!7165 newMap!16))))

(assert (=> d!41839 (= (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)) lt!70630)))

(declare-fun b!135041 () Bool)

(assert (=> b!135041 (= e!87959 call!14857)))

(declare-fun bm!14854 () Bool)

(assert (=> bm!14854 (= call!14857 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16)))))

(declare-fun b!135042 () Bool)

(assert (=> b!135042 (= e!87960 e!87956)))

(assert (=> b!135042 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(declare-fun res!64893 () Bool)

(assert (=> b!135042 (= res!64893 (contains!899 lt!70630 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135042 (=> (not res!64893) (not e!87956))))

(declare-fun b!135043 () Bool)

(assert (=> b!135043 (= e!87958 (ListLongMap!1708 Nil!1713))))

(declare-fun b!135044 () Bool)

(assert (=> b!135044 (= e!87961 (= lt!70630 (getCurrentListMapNoExtraKeys!141 (_keys!4614 newMap!16) (ite c!24491 (_values!2848 newMap!16) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2865 newMap!16))))))

(declare-fun b!135045 () Bool)

(assert (=> b!135045 (= e!87958 e!87959)))

(declare-fun c!25191 () Bool)

(assert (=> b!135045 (= c!25191 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!41839 c!25190) b!135043))

(assert (= (and d!41839 (not c!25190)) b!135045))

(assert (= (and b!135045 c!25191) b!135036))

(assert (= (and b!135045 (not c!25191)) b!135041))

(assert (= (or b!135036 b!135041) bm!14854))

(assert (= (and d!41839 res!64895) b!135039))

(assert (= (and b!135039 res!64894) b!135034))

(assert (= (and b!135034 res!64896) b!135038))

(assert (= (and b!135034 c!25189) b!135042))

(assert (= (and b!135034 (not c!25189)) b!135037))

(assert (= (and b!135042 res!64893) b!135040))

(assert (= (and b!135037 c!25192) b!135044))

(assert (= (and b!135037 (not c!25192)) b!135035))

(declare-fun b_lambda!6019 () Bool)

(assert (=> (not b_lambda!6019) (not b!135036)))

(assert (=> b!135036 t!6176))

(declare-fun b_and!8379 () Bool)

(assert (= b_and!8375 (and (=> t!6176 result!3997) b_and!8379)))

(assert (=> b!135036 t!6178))

(declare-fun b_and!8381 () Bool)

(assert (= b_and!8377 (and (=> t!6178 result!3999) b_and!8381)))

(declare-fun b_lambda!6021 () Bool)

(assert (=> (not b_lambda!6021) (not b!135040)))

(assert (=> b!135040 t!6176))

(declare-fun b_and!8383 () Bool)

(assert (= b_and!8379 (and (=> t!6176 result!3997) b_and!8383)))

(assert (=> b!135040 t!6178))

(declare-fun b_and!8385 () Bool)

(assert (= b_and!8381 (and (=> t!6178 result!3999) b_and!8385)))

(declare-fun m!160727 () Bool)

(assert (=> b!135035 m!160727))

(declare-fun m!160729 () Bool)

(assert (=> d!41839 m!160729))

(assert (=> d!41839 m!156157))

(declare-fun m!160731 () Bool)

(assert (=> b!135039 m!160731))

(assert (=> b!135045 m!157845))

(assert (=> b!135045 m!157845))

(assert (=> b!135045 m!157847))

(assert (=> b!135038 m!157845))

(assert (=> b!135038 m!157845))

(assert (=> b!135038 m!157847))

(assert (=> b!135040 m!156175))

(declare-fun m!160733 () Bool)

(assert (=> b!135040 m!160733))

(assert (=> b!135040 m!156175))

(declare-fun m!160735 () Bool)

(assert (=> b!135040 m!160735))

(assert (=> b!135040 m!160733))

(assert (=> b!135040 m!157845))

(declare-fun m!160737 () Bool)

(assert (=> b!135040 m!160737))

(assert (=> b!135040 m!157845))

(assert (=> b!135042 m!157845))

(assert (=> b!135042 m!157845))

(declare-fun m!160739 () Bool)

(assert (=> b!135042 m!160739))

(declare-fun m!160741 () Bool)

(assert (=> b!135044 m!160741))

(assert (=> bm!14854 m!160741))

(assert (=> b!135036 m!156175))

(assert (=> b!135036 m!160733))

(assert (=> b!135036 m!156175))

(assert (=> b!135036 m!160735))

(declare-fun m!160743 () Bool)

(assert (=> b!135036 m!160743))

(declare-fun m!160745 () Bool)

(assert (=> b!135036 m!160745))

(assert (=> b!135036 m!160733))

(declare-fun m!160747 () Bool)

(assert (=> b!135036 m!160747))

(assert (=> b!135036 m!157845))

(assert (=> b!135036 m!160745))

(declare-fun m!160749 () Bool)

(assert (=> b!135036 m!160749))

(assert (=> bm!14684 d!41839))

(declare-fun e!87964 () Option!178)

(declare-fun b!135048 () Bool)

(assert (=> b!135048 (= e!87964 (getValueByKey!172 (t!6167 (t!6167 (t!6167 (toList!869 lt!69022)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!135049 () Bool)

(assert (=> b!135049 (= e!87964 None!176)))

(declare-fun c!25193 () Bool)

(declare-fun d!41841 () Bool)

(assert (=> d!41841 (= c!25193 (and ((_ is Cons!1712) (t!6167 (t!6167 (toList!869 lt!69022)))) (= (_1!1324 (h!2317 (t!6167 (t!6167 (toList!869 lt!69022))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun e!87963 () Option!178)

(assert (=> d!41841 (= (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69022))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!87963)))

(declare-fun b!135046 () Bool)

(assert (=> b!135046 (= e!87963 (Some!177 (_2!1324 (h!2317 (t!6167 (t!6167 (toList!869 lt!69022)))))))))

(declare-fun b!135047 () Bool)

(assert (=> b!135047 (= e!87963 e!87964)))

(declare-fun c!25194 () Bool)

(assert (=> b!135047 (= c!25194 (and ((_ is Cons!1712) (t!6167 (t!6167 (toList!869 lt!69022)))) (not (= (_1!1324 (h!2317 (t!6167 (t!6167 (toList!869 lt!69022))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))))

(assert (= (and d!41841 c!25193) b!135046))

(assert (= (and d!41841 (not c!25193)) b!135047))

(assert (= (and b!135047 c!25194) b!135048))

(assert (= (and b!135047 (not c!25194)) b!135049))

(assert (=> b!135048 m!155869))

(declare-fun m!160751 () Bool)

(assert (=> b!135048 m!160751))

(assert (=> b!133511 d!41841))

(declare-fun b!135052 () Bool)

(declare-fun e!87966 () Option!178)

(assert (=> b!135052 (= e!87966 (getValueByKey!172 (t!6167 (t!6167 lt!69444)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!135053 () Bool)

(assert (=> b!135053 (= e!87966 None!176)))

(declare-fun d!41843 () Bool)

(declare-fun c!25195 () Bool)

(assert (=> d!41843 (= c!25195 (and ((_ is Cons!1712) (t!6167 lt!69444)) (= (_1!1324 (h!2317 (t!6167 lt!69444))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!87965 () Option!178)

(assert (=> d!41843 (= (getValueByKey!172 (t!6167 lt!69444) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87965)))

(declare-fun b!135050 () Bool)

(assert (=> b!135050 (= e!87965 (Some!177 (_2!1324 (h!2317 (t!6167 lt!69444)))))))

(declare-fun b!135051 () Bool)

(assert (=> b!135051 (= e!87965 e!87966)))

(declare-fun c!25196 () Bool)

(assert (=> b!135051 (= c!25196 (and ((_ is Cons!1712) (t!6167 lt!69444)) (not (= (_1!1324 (h!2317 (t!6167 lt!69444))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!41843 c!25195) b!135050))

(assert (= (and d!41843 (not c!25195)) b!135051))

(assert (= (and b!135051 c!25196) b!135052))

(assert (= (and b!135051 (not c!25196)) b!135053))

(declare-fun m!160753 () Bool)

(assert (=> b!135052 m!160753))

(assert (=> b!133393 d!41843))

(declare-fun d!41845 () Bool)

(assert (=> d!41845 (= (apply!116 lt!69850 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69850) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5642 () Bool)

(assert (= bs!5642 d!41845))

(assert (=> bs!5642 m!160047))

(assert (=> bs!5642 m!160047))

(declare-fun m!160755 () Bool)

(assert (=> bs!5642 m!160755))

(assert (=> b!133539 d!41845))

(assert (=> d!40395 d!40195))

(declare-fun lt!70632 () Bool)

(declare-fun d!41847 () Bool)

(assert (=> d!41847 (= lt!70632 (select (content!133 lt!69574) (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87968 () Bool)

(assert (=> d!41847 (= lt!70632 e!87968)))

(declare-fun res!64897 () Bool)

(assert (=> d!41847 (=> (not res!64897) (not e!87968))))

(assert (=> d!41847 (= res!64897 ((_ is Cons!1712) lt!69574))))

(assert (=> d!41847 (= (contains!902 lt!69574 (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70632)))

(declare-fun b!135054 () Bool)

(declare-fun e!87967 () Bool)

(assert (=> b!135054 (= e!87968 e!87967)))

(declare-fun res!64898 () Bool)

(assert (=> b!135054 (=> res!64898 e!87967)))

(assert (=> b!135054 (= res!64898 (= (h!2317 lt!69574) (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135055 () Bool)

(assert (=> b!135055 (= e!87967 (contains!902 (t!6167 lt!69574) (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41847 res!64897) b!135054))

(assert (= (and b!135054 (not res!64898)) b!135055))

(declare-fun m!160757 () Bool)

(assert (=> d!41847 m!160757))

(declare-fun m!160759 () Bool)

(assert (=> d!41847 m!160759))

(declare-fun m!160761 () Bool)

(assert (=> b!135055 m!160761))

(assert (=> b!133107 d!41847))

(declare-fun d!41849 () Bool)

(declare-fun e!87969 () Bool)

(assert (=> d!41849 e!87969))

(declare-fun res!64899 () Bool)

(assert (=> d!41849 (=> res!64899 e!87969)))

(declare-fun lt!70636 () Bool)

(assert (=> d!41849 (= res!64899 (not lt!70636))))

(declare-fun lt!70633 () Bool)

(assert (=> d!41849 (= lt!70636 lt!70633)))

(declare-fun lt!70635 () Unit!4135)

(declare-fun e!87970 () Unit!4135)

(assert (=> d!41849 (= lt!70635 e!87970)))

(declare-fun c!25197 () Bool)

(assert (=> d!41849 (= c!25197 lt!70633)))

(assert (=> d!41849 (= lt!70633 (containsKey!176 (toList!869 lt!70003) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))

(assert (=> d!41849 (= (contains!899 lt!70003 (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))) lt!70636)))

(declare-fun b!135056 () Bool)

(declare-fun lt!70634 () Unit!4135)

(assert (=> b!135056 (= e!87970 lt!70634)))

(assert (=> b!135056 (= lt!70634 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!70003) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))

(assert (=> b!135056 (isDefined!125 (getValueByKey!172 (toList!869 lt!70003) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))

(declare-fun b!135057 () Bool)

(declare-fun Unit!4245 () Unit!4135)

(assert (=> b!135057 (= e!87970 Unit!4245)))

(declare-fun b!135058 () Bool)

(assert (=> b!135058 (= e!87969 (isDefined!125 (getValueByKey!172 (toList!869 lt!70003) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))))))

(assert (= (and d!41849 c!25197) b!135056))

(assert (= (and d!41849 (not c!25197)) b!135057))

(assert (= (and d!41849 (not res!64899)) b!135058))

(declare-fun m!160763 () Bool)

(assert (=> d!41849 m!160763))

(declare-fun m!160765 () Bool)

(assert (=> b!135056 m!160765))

(assert (=> b!135056 m!158221))

(assert (=> b!135056 m!158221))

(declare-fun m!160767 () Bool)

(assert (=> b!135056 m!160767))

(assert (=> b!135058 m!158221))

(assert (=> b!135058 m!158221))

(assert (=> b!135058 m!160767))

(assert (=> d!40803 d!41849))

(declare-fun b!135061 () Bool)

(declare-fun e!87972 () Option!178)

(assert (=> b!135061 (= e!87972 (getValueByKey!172 (t!6167 lt!70005) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))

(declare-fun b!135062 () Bool)

(assert (=> b!135062 (= e!87972 None!176)))

(declare-fun c!25198 () Bool)

(declare-fun d!41851 () Bool)

(assert (=> d!41851 (= c!25198 (and ((_ is Cons!1712) lt!70005) (= (_1!1324 (h!2317 lt!70005)) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))))))

(declare-fun e!87971 () Option!178)

(assert (=> d!41851 (= (getValueByKey!172 lt!70005 (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))) e!87971)))

(declare-fun b!135059 () Bool)

(assert (=> b!135059 (= e!87971 (Some!177 (_2!1324 (h!2317 lt!70005))))))

(declare-fun b!135060 () Bool)

(assert (=> b!135060 (= e!87971 e!87972)))

(declare-fun c!25199 () Bool)

(assert (=> b!135060 (= c!25199 (and ((_ is Cons!1712) lt!70005) (not (= (_1!1324 (h!2317 lt!70005)) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41851 c!25198) b!135059))

(assert (= (and d!41851 (not c!25198)) b!135060))

(assert (= (and b!135060 c!25199) b!135061))

(assert (= (and b!135060 (not c!25199)) b!135062))

(declare-fun m!160769 () Bool)

(assert (=> b!135061 m!160769))

(assert (=> d!40803 d!41851))

(declare-fun d!41853 () Bool)

(assert (=> d!41853 (= (getValueByKey!172 lt!70005 (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))

(declare-fun lt!70637 () Unit!4135)

(assert (=> d!41853 (= lt!70637 (choose!827 lt!70005 (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))

(declare-fun e!87973 () Bool)

(assert (=> d!41853 e!87973))

(declare-fun res!64900 () Bool)

(assert (=> d!41853 (=> (not res!64900) (not e!87973))))

(assert (=> d!41853 (= res!64900 (isStrictlySorted!322 lt!70005))))

(assert (=> d!41853 (= (lemmaContainsTupThenGetReturnValue!87 lt!70005 (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))) lt!70637)))

(declare-fun b!135063 () Bool)

(declare-fun res!64901 () Bool)

(assert (=> b!135063 (=> (not res!64901) (not e!87973))))

(assert (=> b!135063 (= res!64901 (containsKey!176 lt!70005 (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))

(declare-fun b!135064 () Bool)

(assert (=> b!135064 (= e!87973 (contains!902 lt!70005 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))))))

(assert (= (and d!41853 res!64900) b!135063))

(assert (= (and b!135063 res!64901) b!135064))

(assert (=> d!41853 m!158215))

(declare-fun m!160771 () Bool)

(assert (=> d!41853 m!160771))

(declare-fun m!160773 () Bool)

(assert (=> d!41853 m!160773))

(declare-fun m!160775 () Bool)

(assert (=> b!135063 m!160775))

(declare-fun m!160777 () Bool)

(assert (=> b!135064 m!160777))

(assert (=> d!40803 d!41853))

(declare-fun bm!14855 () Bool)

(declare-fun call!14859 () List!1716)

(declare-fun call!14860 () List!1716)

(assert (=> bm!14855 (= call!14859 call!14860)))

(declare-fun d!41855 () Bool)

(declare-fun e!87977 () Bool)

(assert (=> d!41855 e!87977))

(declare-fun res!64903 () Bool)

(assert (=> d!41855 (=> (not res!64903) (not e!87977))))

(declare-fun lt!70638 () List!1716)

(assert (=> d!41855 (= res!64903 (isStrictlySorted!322 lt!70638))))

(declare-fun e!87975 () List!1716)

(assert (=> d!41855 (= lt!70638 e!87975)))

(declare-fun c!25203 () Bool)

(assert (=> d!41855 (= c!25203 (and ((_ is Cons!1712) (toList!869 lt!69246)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69246))) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))))))

(assert (=> d!41855 (isStrictlySorted!322 (toList!869 lt!69246))))

(assert (=> d!41855 (= (insertStrictlySorted!90 (toList!869 lt!69246) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))) lt!70638)))

(declare-fun b!135065 () Bool)

(assert (=> b!135065 (= e!87977 (contains!902 lt!70638 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))))))

(declare-fun c!25201 () Bool)

(declare-fun b!135066 () Bool)

(assert (=> b!135066 (= c!25201 (and ((_ is Cons!1712) (toList!869 lt!69246)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69246))) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))))))

(declare-fun e!87976 () List!1716)

(declare-fun e!87978 () List!1716)

(assert (=> b!135066 (= e!87976 e!87978)))

(declare-fun e!87974 () List!1716)

(declare-fun b!135067 () Bool)

(assert (=> b!135067 (= e!87974 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69246)) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))

(declare-fun b!135068 () Bool)

(assert (=> b!135068 (= e!87976 call!14859)))

(declare-fun b!135069 () Bool)

(declare-fun call!14858 () List!1716)

(assert (=> b!135069 (= e!87978 call!14858)))

(declare-fun b!135070 () Bool)

(declare-fun c!25200 () Bool)

(assert (=> b!135070 (= e!87974 (ite c!25200 (t!6167 (toList!869 lt!69246)) (ite c!25201 (Cons!1712 (h!2317 (toList!869 lt!69246)) (t!6167 (toList!869 lt!69246))) Nil!1713)))))

(declare-fun b!135071 () Bool)

(assert (=> b!135071 (= e!87978 call!14858)))

(declare-fun b!135072 () Bool)

(assert (=> b!135072 (= e!87975 call!14860)))

(declare-fun bm!14856 () Bool)

(assert (=> bm!14856 (= call!14860 ($colon$colon!92 e!87974 (ite c!25203 (h!2317 (toList!869 lt!69246)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))))

(declare-fun c!25202 () Bool)

(assert (=> bm!14856 (= c!25202 c!25203)))

(declare-fun bm!14857 () Bool)

(assert (=> bm!14857 (= call!14858 call!14859)))

(declare-fun b!135073 () Bool)

(declare-fun res!64902 () Bool)

(assert (=> b!135073 (=> (not res!64902) (not e!87977))))

(assert (=> b!135073 (= res!64902 (containsKey!176 lt!70638 (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))))

(declare-fun b!135074 () Bool)

(assert (=> b!135074 (= e!87975 e!87976)))

(assert (=> b!135074 (= c!25200 (and ((_ is Cons!1712) (toList!869 lt!69246)) (= (_1!1324 (h!2317 (toList!869 lt!69246))) (_1!1324 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))))))

(assert (= (and d!41855 c!25203) b!135072))

(assert (= (and d!41855 (not c!25203)) b!135074))

(assert (= (and b!135074 c!25200) b!135068))

(assert (= (and b!135074 (not c!25200)) b!135066))

(assert (= (and b!135066 c!25201) b!135069))

(assert (= (and b!135066 (not c!25201)) b!135071))

(assert (= (or b!135069 b!135071) bm!14857))

(assert (= (or b!135068 bm!14857) bm!14855))

(assert (= (or b!135072 bm!14855) bm!14856))

(assert (= (and bm!14856 c!25202) b!135067))

(assert (= (and bm!14856 (not c!25202)) b!135070))

(assert (= (and d!41855 res!64903) b!135073))

(assert (= (and b!135073 res!64902) b!135065))

(declare-fun m!160779 () Bool)

(assert (=> d!41855 m!160779))

(declare-fun m!160781 () Bool)

(assert (=> d!41855 m!160781))

(declare-fun m!160783 () Bool)

(assert (=> bm!14856 m!160783))

(declare-fun m!160785 () Bool)

(assert (=> b!135067 m!160785))

(declare-fun m!160787 () Bool)

(assert (=> b!135065 m!160787))

(declare-fun m!160789 () Bool)

(assert (=> b!135073 m!160789))

(assert (=> d!40803 d!41855))

(declare-fun d!41857 () Bool)

(assert (=> d!41857 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69081) lt!69094)) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69081) lt!69094))))))

(declare-fun bs!5643 () Bool)

(assert (= bs!5643 d!41857))

(assert (=> bs!5643 m!156407))

(declare-fun m!160791 () Bool)

(assert (=> bs!5643 m!160791))

(assert (=> b!133227 d!41857))

(assert (=> b!133227 d!40645))

(assert (=> b!133407 d!40665))

(declare-fun e!87980 () Option!178)

(declare-fun b!135077 () Bool)

(assert (=> b!135077 (= e!87980 (getValueByKey!172 (t!6167 (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69092))))

(declare-fun b!135078 () Bool)

(assert (=> b!135078 (= e!87980 None!176)))

(declare-fun d!41859 () Bool)

(declare-fun c!25204 () Bool)

(assert (=> d!41859 (= c!25204 (and ((_ is Cons!1712) (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (= (_1!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))) lt!69092)))))

(declare-fun e!87979 () Option!178)

(assert (=> d!41859 (= (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!69092) e!87979)))

(declare-fun b!135075 () Bool)

(assert (=> b!135075 (= e!87979 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))))

(declare-fun b!135076 () Bool)

(assert (=> b!135076 (= e!87979 e!87980)))

(declare-fun c!25205 () Bool)

(assert (=> b!135076 (= c!25205 (and ((_ is Cons!1712) (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))) lt!69092))))))

(assert (= (and d!41859 c!25204) b!135075))

(assert (= (and d!41859 (not c!25204)) b!135076))

(assert (= (and b!135076 c!25205) b!135077))

(assert (= (and b!135076 (not c!25205)) b!135078))

(declare-fun m!160793 () Bool)

(assert (=> b!135077 m!160793))

(assert (=> b!133028 d!41859))

(declare-fun d!41861 () Bool)

(declare-fun res!64904 () Bool)

(declare-fun e!87981 () Bool)

(assert (=> d!41861 (=> res!64904 e!87981)))

(assert (=> d!41861 (= res!64904 (and ((_ is Cons!1712) lt!69807) (= (_1!1324 (h!2317 lt!69807)) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41861 (= (containsKey!176 lt!69807 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!87981)))

(declare-fun b!135079 () Bool)

(declare-fun e!87982 () Bool)

(assert (=> b!135079 (= e!87981 e!87982)))

(declare-fun res!64905 () Bool)

(assert (=> b!135079 (=> (not res!64905) (not e!87982))))

(assert (=> b!135079 (= res!64905 (and (or (not ((_ is Cons!1712) lt!69807)) (bvsle (_1!1324 (h!2317 lt!69807)) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Cons!1712) lt!69807) (bvslt (_1!1324 (h!2317 lt!69807)) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!135080 () Bool)

(assert (=> b!135080 (= e!87982 (containsKey!176 (t!6167 lt!69807) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!41861 (not res!64904)) b!135079))

(assert (= (and b!135079 res!64905) b!135080))

(declare-fun m!160795 () Bool)

(assert (=> b!135080 m!160795))

(assert (=> b!133467 d!41861))

(declare-fun d!41863 () Bool)

(assert (=> d!41863 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5644 () Bool)

(assert (= bs!5644 d!41863))

(assert (=> bs!5644 m!157475))

(declare-fun m!160797 () Bool)

(assert (=> bs!5644 m!160797))

(assert (=> b!133515 d!41863))

(assert (=> b!133515 d!41797))

(declare-fun d!41865 () Bool)

(assert (=> d!41865 (= (get!1486 (getValueByKey!172 (toList!869 lt!69450) lt!69463)) (v!3203 (getValueByKey!172 (toList!869 lt!69450) lt!69463)))))

(assert (=> d!40429 d!41865))

(declare-fun b!135083 () Bool)

(declare-fun e!87984 () Option!178)

(assert (=> b!135083 (= e!87984 (getValueByKey!172 (t!6167 (toList!869 lt!69450)) lt!69463))))

(declare-fun b!135084 () Bool)

(assert (=> b!135084 (= e!87984 None!176)))

(declare-fun d!41867 () Bool)

(declare-fun c!25206 () Bool)

(assert (=> d!41867 (= c!25206 (and ((_ is Cons!1712) (toList!869 lt!69450)) (= (_1!1324 (h!2317 (toList!869 lt!69450))) lt!69463)))))

(declare-fun e!87983 () Option!178)

(assert (=> d!41867 (= (getValueByKey!172 (toList!869 lt!69450) lt!69463) e!87983)))

(declare-fun b!135081 () Bool)

(assert (=> b!135081 (= e!87983 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69450)))))))

(declare-fun b!135082 () Bool)

(assert (=> b!135082 (= e!87983 e!87984)))

(declare-fun c!25207 () Bool)

(assert (=> b!135082 (= c!25207 (and ((_ is Cons!1712) (toList!869 lt!69450)) (not (= (_1!1324 (h!2317 (toList!869 lt!69450))) lt!69463))))))

(assert (= (and d!41867 c!25206) b!135081))

(assert (= (and d!41867 (not c!25206)) b!135082))

(assert (= (and b!135082 c!25207) b!135083))

(assert (= (and b!135082 (not c!25207)) b!135084))

(declare-fun m!160799 () Bool)

(assert (=> b!135083 m!160799))

(assert (=> d!40429 d!41867))

(declare-fun d!41869 () Bool)

(declare-fun e!87985 () Bool)

(assert (=> d!41869 e!87985))

(declare-fun res!64906 () Bool)

(assert (=> d!41869 (=> res!64906 e!87985)))

(declare-fun lt!70642 () Bool)

(assert (=> d!41869 (= res!64906 (not lt!70642))))

(declare-fun lt!70639 () Bool)

(assert (=> d!41869 (= lt!70642 lt!70639)))

(declare-fun lt!70641 () Unit!4135)

(declare-fun e!87986 () Unit!4135)

(assert (=> d!41869 (= lt!70641 e!87986)))

(declare-fun c!25208 () Bool)

(assert (=> d!41869 (= c!25208 lt!70639)))

(assert (=> d!41869 (= lt!70639 (containsKey!176 (toList!869 lt!69761) (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!41869 (= (contains!899 lt!69761 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)) lt!70642)))

(declare-fun b!135085 () Bool)

(declare-fun lt!70640 () Unit!4135)

(assert (=> b!135085 (= e!87986 lt!70640)))

(assert (=> b!135085 (= lt!70640 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69761) (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!135085 (isDefined!125 (getValueByKey!172 (toList!869 lt!69761) (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!135086 () Bool)

(declare-fun Unit!4246 () Unit!4135)

(assert (=> b!135086 (= e!87986 Unit!4246)))

(declare-fun b!135087 () Bool)

(assert (=> b!135087 (= e!87985 (isDefined!125 (getValueByKey!172 (toList!869 lt!69761) (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) #b00000000000000000000000000000000))))))

(assert (= (and d!41869 c!25208) b!135085))

(assert (= (and d!41869 (not c!25208)) b!135086))

(assert (= (and d!41869 (not res!64906)) b!135087))

(assert (=> d!41869 m!157367))

(declare-fun m!160801 () Bool)

(assert (=> d!41869 m!160801))

(assert (=> b!135085 m!157367))

(declare-fun m!160803 () Bool)

(assert (=> b!135085 m!160803))

(assert (=> b!135085 m!157367))

(assert (=> b!135085 m!159593))

(assert (=> b!135085 m!159593))

(declare-fun m!160805 () Bool)

(assert (=> b!135085 m!160805))

(assert (=> b!135087 m!157367))

(assert (=> b!135087 m!159593))

(assert (=> b!135087 m!159593))

(assert (=> b!135087 m!160805))

(assert (=> b!133365 d!41869))

(declare-fun d!41871 () Bool)

(assert (=> d!41871 (isDefined!125 (getValueByKey!172 (toList!869 lt!69079) lt!69098))))

(declare-fun lt!70643 () Unit!4135)

(assert (=> d!41871 (= lt!70643 (choose!817 (toList!869 lt!69079) lt!69098))))

(declare-fun e!87987 () Bool)

(assert (=> d!41871 e!87987))

(declare-fun res!64907 () Bool)

(assert (=> d!41871 (=> (not res!64907) (not e!87987))))

(assert (=> d!41871 (= res!64907 (isStrictlySorted!322 (toList!869 lt!69079)))))

(assert (=> d!41871 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69079) lt!69098) lt!70643)))

(declare-fun b!135088 () Bool)

(assert (=> b!135088 (= e!87987 (containsKey!176 (toList!869 lt!69079) lt!69098))))

(assert (= (and d!41871 res!64907) b!135088))

(assert (=> d!41871 m!156395))

(assert (=> d!41871 m!156395))

(assert (=> d!41871 m!156679))

(declare-fun m!160807 () Bool)

(assert (=> d!41871 m!160807))

(assert (=> d!41871 m!157569))

(assert (=> b!135088 m!156675))

(assert (=> b!132980 d!41871))

(declare-fun d!41873 () Bool)

(assert (=> d!41873 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69079) lt!69098)) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69079) lt!69098))))))

(declare-fun bs!5645 () Bool)

(assert (= bs!5645 d!41873))

(assert (=> bs!5645 m!156395))

(declare-fun m!160809 () Bool)

(assert (=> bs!5645 m!160809))

(assert (=> b!132980 d!41873))

(assert (=> b!132980 d!40691))

(declare-fun d!41875 () Bool)

(declare-fun e!87988 () Bool)

(assert (=> d!41875 e!87988))

(declare-fun res!64908 () Bool)

(assert (=> d!41875 (=> res!64908 e!87988)))

(declare-fun lt!70647 () Bool)

(assert (=> d!41875 (= res!64908 (not lt!70647))))

(declare-fun lt!70644 () Bool)

(assert (=> d!41875 (= lt!70647 lt!70644)))

(declare-fun lt!70646 () Unit!4135)

(declare-fun e!87989 () Unit!4135)

(assert (=> d!41875 (= lt!70646 e!87989)))

(declare-fun c!25209 () Bool)

(assert (=> d!41875 (= c!25209 lt!70644)))

(assert (=> d!41875 (= lt!70644 (containsKey!176 (toList!869 lt!69548) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41875 (= (contains!899 lt!69548 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70647)))

(declare-fun b!135089 () Bool)

(declare-fun lt!70645 () Unit!4135)

(assert (=> b!135089 (= e!87989 lt!70645)))

(assert (=> b!135089 (= lt!70645 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69548) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135089 (isDefined!125 (getValueByKey!172 (toList!869 lt!69548) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135090 () Bool)

(declare-fun Unit!4247 () Unit!4135)

(assert (=> b!135090 (= e!87989 Unit!4247)))

(declare-fun b!135091 () Bool)

(assert (=> b!135091 (= e!87988 (isDefined!125 (getValueByKey!172 (toList!869 lt!69548) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41875 c!25209) b!135089))

(assert (= (and d!41875 (not c!25209)) b!135090))

(assert (= (and d!41875 (not res!64908)) b!135091))

(declare-fun m!160811 () Bool)

(assert (=> d!41875 m!160811))

(declare-fun m!160813 () Bool)

(assert (=> b!135089 m!160813))

(declare-fun m!160815 () Bool)

(assert (=> b!135089 m!160815))

(assert (=> b!135089 m!160815))

(declare-fun m!160817 () Bool)

(assert (=> b!135089 m!160817))

(assert (=> b!135091 m!160815))

(assert (=> b!135091 m!160815))

(assert (=> b!135091 m!160817))

(assert (=> d!40363 d!41875))

(assert (=> d!40363 d!40325))

(assert (=> b!133245 d!40353))

(declare-fun d!41877 () Bool)

(assert (=> d!41877 (= (apply!116 lt!69919 (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000)) (get!1486 (getValueByKey!172 (toList!869 lt!69919) (select (arr!2261 (_keys!4614 (_2!1325 lt!69179))) #b00000000000000000000000000000000))))))

(declare-fun bs!5646 () Bool)

(assert (= bs!5646 d!41877))

(assert (=> bs!5646 m!157587))

(assert (=> bs!5646 m!159445))

(assert (=> bs!5646 m!159445))

(declare-fun m!160819 () Bool)

(assert (=> bs!5646 m!160819))

(assert (=> b!133623 d!41877))

(declare-fun d!41879 () Bool)

(declare-fun c!25210 () Bool)

(assert (=> d!41879 (= c!25210 ((_ is ValueCellFull!1095) (select (arr!2262 (_values!2848 (_2!1325 lt!69179))) #b00000000000000000000000000000000)))))

(declare-fun e!87990 () V!3483)

(assert (=> d!41879 (= (get!1482 (select (arr!2262 (_values!2848 (_2!1325 lt!69179))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1325 lt!69179)) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87990)))

(declare-fun b!135092 () Bool)

(assert (=> b!135092 (= e!87990 (get!1484 (select (arr!2262 (_values!2848 (_2!1325 lt!69179))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1325 lt!69179)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135093 () Bool)

(assert (=> b!135093 (= e!87990 (get!1485 (select (arr!2262 (_values!2848 (_2!1325 lt!69179))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 (_2!1325 lt!69179)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41879 c!25210) b!135092))

(assert (= (and d!41879 (not c!25210)) b!135093))

(assert (=> b!135092 m!157865))

(assert (=> b!135092 m!157867))

(declare-fun m!160821 () Bool)

(assert (=> b!135092 m!160821))

(assert (=> b!135093 m!157865))

(assert (=> b!135093 m!157867))

(declare-fun m!160823 () Bool)

(assert (=> b!135093 m!160823))

(assert (=> b!133623 d!41879))

(declare-fun d!41881 () Bool)

(assert (=> d!41881 (= (isEmpty!410 lt!69892) (isEmpty!411 (toList!869 lt!69892)))))

(declare-fun bs!5647 () Bool)

(assert (= bs!5647 d!41881))

(declare-fun m!160825 () Bool)

(assert (=> bs!5647 m!160825))

(assert (=> b!133590 d!41881))

(declare-fun bm!14858 () Bool)

(declare-fun call!14861 () Bool)

(declare-fun c!25211 () Bool)

(assert (=> bm!14858 (= call!14861 (arrayNoDuplicates!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (bvadd lt!69339 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!25211 (Cons!1713 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) (bvadd lt!69339 #b00000000000000000000000000000001)) (ite c!24676 (Cons!1713 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) lt!69339) lt!69335) lt!69335)) (ite c!24676 (Cons!1713 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) lt!69339) lt!69335) lt!69335))))))

(declare-fun b!135094 () Bool)

(declare-fun e!87994 () Bool)

(declare-fun e!87991 () Bool)

(assert (=> b!135094 (= e!87994 e!87991)))

(assert (=> b!135094 (= c!25211 (validKeyInArray!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) (bvadd lt!69339 #b00000000000000000000000000000001))))))

(declare-fun e!87992 () Bool)

(declare-fun b!135095 () Bool)

(assert (=> b!135095 (= e!87992 (contains!901 (ite c!24676 (Cons!1713 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) lt!69339) lt!69335) lt!69335) (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) (bvadd lt!69339 #b00000000000000000000000000000001))))))

(declare-fun b!135096 () Bool)

(assert (=> b!135096 (= e!87991 call!14861)))

(declare-fun b!135097 () Bool)

(declare-fun e!87993 () Bool)

(assert (=> b!135097 (= e!87993 e!87994)))

(declare-fun res!64911 () Bool)

(assert (=> b!135097 (=> (not res!64911) (not e!87994))))

(assert (=> b!135097 (= res!64911 (not e!87992))))

(declare-fun res!64910 () Bool)

(assert (=> b!135097 (=> (not res!64910) (not e!87992))))

(assert (=> b!135097 (= res!64910 (validKeyInArray!0 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) (bvadd lt!69339 #b00000000000000000000000000000001))))))

(declare-fun b!135098 () Bool)

(assert (=> b!135098 (= e!87991 call!14861)))

(declare-fun d!41883 () Bool)

(declare-fun res!64909 () Bool)

(assert (=> d!41883 (=> res!64909 e!87993)))

(assert (=> d!41883 (= res!64909 (bvsge (bvadd lt!69339 #b00000000000000000000000000000001) (size!2530 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))))))))

(assert (=> d!41883 (= (arrayNoDuplicates!0 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (bvadd lt!69339 #b00000000000000000000000000000001) (ite c!24676 (Cons!1713 (select (arr!2261 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16)))) lt!69339) lt!69335) lt!69335)) e!87993)))

(assert (= (and d!41883 (not res!64909)) b!135097))

(assert (= (and b!135097 res!64910) b!135095))

(assert (= (and b!135097 res!64911) b!135094))

(assert (= (and b!135094 c!25211) b!135096))

(assert (= (and b!135094 (not c!25211)) b!135098))

(assert (= (or b!135096 b!135098) bm!14858))

(declare-fun m!160827 () Bool)

(assert (=> bm!14858 m!160827))

(declare-fun m!160829 () Bool)

(assert (=> bm!14858 m!160829))

(assert (=> b!135094 m!160827))

(assert (=> b!135094 m!160827))

(declare-fun m!160831 () Bool)

(assert (=> b!135094 m!160831))

(assert (=> b!135095 m!160827))

(assert (=> b!135095 m!160827))

(declare-fun m!160833 () Bool)

(assert (=> b!135095 m!160833))

(assert (=> b!135097 m!160827))

(assert (=> b!135097 m!160827))

(assert (=> b!135097 m!160831))

(assert (=> bm!14702 d!41883))

(declare-fun d!41885 () Bool)

(declare-fun res!64912 () Bool)

(declare-fun e!87995 () Bool)

(assert (=> d!41885 (=> res!64912 e!87995)))

(assert (=> d!41885 (= res!64912 (and ((_ is Cons!1712) (toList!869 lt!69408)) (= (_1!1324 (h!2317 (toList!869 lt!69408))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41885 (= (containsKey!176 (toList!869 lt!69408) #b0000000000000000000000000000000000000000000000000000000000000000) e!87995)))

(declare-fun b!135099 () Bool)

(declare-fun e!87996 () Bool)

(assert (=> b!135099 (= e!87995 e!87996)))

(declare-fun res!64913 () Bool)

(assert (=> b!135099 (=> (not res!64913) (not e!87996))))

(assert (=> b!135099 (= res!64913 (and (or (not ((_ is Cons!1712) (toList!869 lt!69408))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69408))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1712) (toList!869 lt!69408)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69408))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135100 () Bool)

(assert (=> b!135100 (= e!87996 (containsKey!176 (t!6167 (toList!869 lt!69408)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41885 (not res!64912)) b!135099))

(assert (= (and b!135099 res!64913) b!135100))

(declare-fun m!160835 () Bool)

(assert (=> b!135100 m!160835))

(assert (=> d!40347 d!41885))

(declare-fun b!135103 () Bool)

(declare-fun e!87998 () Option!178)

(assert (=> b!135103 (= e!87998 (getValueByKey!172 (t!6167 (toList!869 lt!69638)) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!135104 () Bool)

(assert (=> b!135104 (= e!87998 None!176)))

(declare-fun c!25212 () Bool)

(declare-fun d!41887 () Bool)

(assert (=> d!41887 (= c!25212 (and ((_ is Cons!1712) (toList!869 lt!69638)) (= (_1!1324 (h!2317 (toList!869 lt!69638))) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun e!87997 () Option!178)

(assert (=> d!41887 (= (getValueByKey!172 (toList!869 lt!69638) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) e!87997)))

(declare-fun b!135101 () Bool)

(assert (=> b!135101 (= e!87997 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69638)))))))

(declare-fun b!135102 () Bool)

(assert (=> b!135102 (= e!87997 e!87998)))

(declare-fun c!25213 () Bool)

(assert (=> b!135102 (= c!25213 (and ((_ is Cons!1712) (toList!869 lt!69638)) (not (= (_1!1324 (h!2317 (toList!869 lt!69638))) (_1!1324 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))))

(assert (= (and d!41887 c!25212) b!135101))

(assert (= (and d!41887 (not c!25212)) b!135102))

(assert (= (and b!135102 c!25213) b!135103))

(assert (= (and b!135102 (not c!25213)) b!135104))

(declare-fun m!160837 () Bool)

(assert (=> b!135103 m!160837))

(assert (=> b!133228 d!41887))

(declare-fun e!88000 () Option!178)

(declare-fun b!135107 () Bool)

(assert (=> b!135107 (= e!88000 (getValueByKey!172 (t!6167 (toList!869 lt!69992)) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135108 () Bool)

(assert (=> b!135108 (= e!88000 None!176)))

(declare-fun c!25214 () Bool)

(declare-fun d!41889 () Bool)

(assert (=> d!41889 (= c!25214 (and ((_ is Cons!1712) (toList!869 lt!69992)) (= (_1!1324 (h!2317 (toList!869 lt!69992))) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))))))

(declare-fun e!87999 () Option!178)

(assert (=> d!41889 (= (getValueByKey!172 (toList!869 lt!69992) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) e!87999)))

(declare-fun b!135105 () Bool)

(assert (=> b!135105 (= e!87999 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69992)))))))

(declare-fun b!135106 () Bool)

(assert (=> b!135106 (= e!87999 e!88000)))

(declare-fun c!25215 () Bool)

(assert (=> b!135106 (= c!25215 (and ((_ is Cons!1712) (toList!869 lt!69992)) (not (= (_1!1324 (h!2317 (toList!869 lt!69992))) (_1!1324 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!41889 c!25214) b!135105))

(assert (= (and d!41889 (not c!25214)) b!135106))

(assert (= (and b!135106 c!25215) b!135107))

(assert (= (and b!135106 (not c!25215)) b!135108))

(declare-fun m!160839 () Bool)

(assert (=> b!135107 m!160839))

(assert (=> b!133757 d!41889))

(declare-fun d!41891 () Bool)

(declare-fun res!64914 () Bool)

(declare-fun e!88001 () Bool)

(assert (=> d!41891 (=> res!64914 e!88001)))

(assert (=> d!41891 (= res!64914 (and ((_ is Cons!1712) (t!6167 (toList!869 call!14619))) (= (_1!1324 (h!2317 (t!6167 (toList!869 call!14619)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(assert (=> d!41891 (= (containsKey!176 (t!6167 (toList!869 call!14619)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!88001)))

(declare-fun b!135109 () Bool)

(declare-fun e!88002 () Bool)

(assert (=> b!135109 (= e!88001 e!88002)))

(declare-fun res!64915 () Bool)

(assert (=> b!135109 (=> (not res!64915) (not e!88002))))

(assert (=> b!135109 (= res!64915 (and (or (not ((_ is Cons!1712) (t!6167 (toList!869 call!14619)))) (bvsle (_1!1324 (h!2317 (t!6167 (toList!869 call!14619)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))) ((_ is Cons!1712) (t!6167 (toList!869 call!14619))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 call!14619)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun b!135110 () Bool)

(assert (=> b!135110 (= e!88002 (containsKey!176 (t!6167 (t!6167 (toList!869 call!14619))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (= (and d!41891 (not res!64914)) b!135109))

(assert (= (and b!135109 res!64915) b!135110))

(assert (=> b!135110 m!155869))

(declare-fun m!160841 () Bool)

(assert (=> b!135110 m!160841))

(assert (=> b!133041 d!41891))

(declare-fun d!41893 () Bool)

(assert (=> d!41893 (= (get!1484 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3198 (select (arr!2262 (_values!2848 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133030 d!41893))

(declare-fun bm!14859 () Bool)

(declare-fun call!14863 () List!1716)

(declare-fun call!14864 () List!1716)

(assert (=> bm!14859 (= call!14863 call!14864)))

(declare-fun d!41895 () Bool)

(declare-fun e!88006 () Bool)

(assert (=> d!41895 e!88006))

(declare-fun res!64917 () Bool)

(assert (=> d!41895 (=> (not res!64917) (not e!88006))))

(declare-fun lt!70648 () List!1716)

(assert (=> d!41895 (= res!64917 (isStrictlySorted!322 lt!70648))))

(declare-fun e!88004 () List!1716)

(assert (=> d!41895 (= lt!70648 e!88004)))

(declare-fun c!25219 () Bool)

(assert (=> d!41895 (= c!25219 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69081))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 lt!69081)))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41895 (isStrictlySorted!322 (t!6167 (toList!869 lt!69081)))))

(assert (=> d!41895 (= (insertStrictlySorted!90 (t!6167 (toList!869 lt!69081)) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!70648)))

(declare-fun b!135111 () Bool)

(assert (=> b!135111 (= e!88006 (contains!902 lt!70648 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!135112 () Bool)

(declare-fun c!25217 () Bool)

(assert (=> b!135112 (= c!25217 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69081))) (bvsgt (_1!1324 (h!2317 (t!6167 (toList!869 lt!69081)))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!88005 () List!1716)

(declare-fun e!88007 () List!1716)

(assert (=> b!135112 (= e!88005 e!88007)))

(declare-fun b!135113 () Bool)

(declare-fun e!88003 () List!1716)

(assert (=> b!135113 (= e!88003 (insertStrictlySorted!90 (t!6167 (t!6167 (toList!869 lt!69081))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!135114 () Bool)

(assert (=> b!135114 (= e!88005 call!14863)))

(declare-fun b!135115 () Bool)

(declare-fun call!14862 () List!1716)

(assert (=> b!135115 (= e!88007 call!14862)))

(declare-fun b!135116 () Bool)

(declare-fun c!25216 () Bool)

(assert (=> b!135116 (= e!88003 (ite c!25216 (t!6167 (t!6167 (toList!869 lt!69081))) (ite c!25217 (Cons!1712 (h!2317 (t!6167 (toList!869 lt!69081))) (t!6167 (t!6167 (toList!869 lt!69081)))) Nil!1713)))))

(declare-fun b!135117 () Bool)

(assert (=> b!135117 (= e!88007 call!14862)))

(declare-fun b!135118 () Bool)

(assert (=> b!135118 (= e!88004 call!14864)))

(declare-fun bm!14860 () Bool)

(assert (=> bm!14860 (= call!14864 ($colon$colon!92 e!88003 (ite c!25219 (h!2317 (t!6167 (toList!869 lt!69081))) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun c!25218 () Bool)

(assert (=> bm!14860 (= c!25218 c!25219)))

(declare-fun bm!14861 () Bool)

(assert (=> bm!14861 (= call!14862 call!14863)))

(declare-fun b!135119 () Bool)

(declare-fun res!64916 () Bool)

(assert (=> b!135119 (=> (not res!64916) (not e!88006))))

(assert (=> b!135119 (= res!64916 (containsKey!176 lt!70648 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!135120 () Bool)

(assert (=> b!135120 (= e!88004 e!88005)))

(assert (=> b!135120 (= c!25216 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69081))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69081)))) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!41895 c!25219) b!135118))

(assert (= (and d!41895 (not c!25219)) b!135120))

(assert (= (and b!135120 c!25216) b!135114))

(assert (= (and b!135120 (not c!25216)) b!135112))

(assert (= (and b!135112 c!25217) b!135115))

(assert (= (and b!135112 (not c!25217)) b!135117))

(assert (= (or b!135115 b!135117) bm!14861))

(assert (= (or b!135114 bm!14861) bm!14859))

(assert (= (or b!135118 bm!14859) bm!14860))

(assert (= (and bm!14860 c!25218) b!135113))

(assert (= (and bm!14860 (not c!25218)) b!135116))

(assert (= (and d!41895 res!64917) b!135119))

(assert (= (and b!135119 res!64916) b!135111))

(declare-fun m!160843 () Bool)

(assert (=> d!41895 m!160843))

(declare-fun m!160845 () Bool)

(assert (=> d!41895 m!160845))

(declare-fun m!160847 () Bool)

(assert (=> bm!14860 m!160847))

(declare-fun m!160849 () Bool)

(assert (=> b!135113 m!160849))

(declare-fun m!160851 () Bool)

(assert (=> b!135111 m!160851))

(declare-fun m!160853 () Bool)

(assert (=> b!135119 m!160853))

(assert (=> b!133684 d!41895))

(declare-fun b!135123 () Bool)

(declare-fun e!88009 () Option!178)

(assert (=> b!135123 (= e!88009 (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69084))) lt!69080))))

(declare-fun b!135124 () Bool)

(assert (=> b!135124 (= e!88009 None!176)))

(declare-fun d!41897 () Bool)

(declare-fun c!25220 () Bool)

(assert (=> d!41897 (= c!25220 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69084))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69084)))) lt!69080)))))

(declare-fun e!88008 () Option!178)

(assert (=> d!41897 (= (getValueByKey!172 (t!6167 (toList!869 lt!69084)) lt!69080) e!88008)))

(declare-fun b!135121 () Bool)

(assert (=> b!135121 (= e!88008 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 lt!69084))))))))

(declare-fun b!135122 () Bool)

(assert (=> b!135122 (= e!88008 e!88009)))

(declare-fun c!25221 () Bool)

(assert (=> b!135122 (= c!25221 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69084))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69084)))) lt!69080))))))

(assert (= (and d!41897 c!25220) b!135121))

(assert (= (and d!41897 (not c!25220)) b!135122))

(assert (= (and b!135122 c!25221) b!135123))

(assert (= (and b!135122 (not c!25221)) b!135124))

(declare-fun m!160855 () Bool)

(assert (=> b!135123 m!160855))

(assert (=> b!133791 d!41897))

(declare-fun d!41899 () Bool)

(declare-fun lt!70649 () Bool)

(assert (=> d!41899 (= lt!70649 (select (content!133 (toList!869 lt!69824)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun e!88011 () Bool)

(assert (=> d!41899 (= lt!70649 e!88011)))

(declare-fun res!64918 () Bool)

(assert (=> d!41899 (=> (not res!64918) (not e!88011))))

(assert (=> d!41899 (= res!64918 ((_ is Cons!1712) (toList!869 lt!69824)))))

(assert (=> d!41899 (= (contains!902 (toList!869 lt!69824) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70649)))

(declare-fun b!135125 () Bool)

(declare-fun e!88010 () Bool)

(assert (=> b!135125 (= e!88011 e!88010)))

(declare-fun res!64919 () Bool)

(assert (=> b!135125 (=> res!64919 e!88010)))

(assert (=> b!135125 (= res!64919 (= (h!2317 (toList!869 lt!69824)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun b!135126 () Bool)

(assert (=> b!135126 (= e!88010 (contains!902 (t!6167 (toList!869 lt!69824)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!41899 res!64918) b!135125))

(assert (= (and b!135125 (not res!64919)) b!135126))

(declare-fun m!160857 () Bool)

(assert (=> d!41899 m!160857))

(declare-fun m!160859 () Bool)

(assert (=> d!41899 m!160859))

(declare-fun m!160861 () Bool)

(assert (=> b!135126 m!160861))

(assert (=> b!133517 d!41899))

(assert (=> b!133781 d!40387))

(assert (=> d!40701 d!40327))

(assert (=> d!40701 d!40329))

(declare-fun d!41901 () Bool)

(assert (=> d!41901 (isDefined!125 (getValueByKey!172 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!41901 true))

(declare-fun _$12!402 () Unit!4135)

(assert (=> d!41901 (= (choose!817 (toList!869 lt!69095) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) _$12!402)))

(declare-fun bs!5648 () Bool)

(assert (= bs!5648 d!41901))

(assert (=> bs!5648 m!155949))

(assert (=> bs!5648 m!156115))

(assert (=> bs!5648 m!156115))

(assert (=> bs!5648 m!156665))

(assert (=> d!40701 d!41901))

(assert (=> d!40701 d!40913))

(declare-fun bm!14862 () Bool)

(declare-fun call!14866 () List!1716)

(declare-fun call!14867 () List!1716)

(assert (=> bm!14862 (= call!14866 call!14867)))

(declare-fun d!41903 () Bool)

(declare-fun e!88015 () Bool)

(assert (=> d!41903 e!88015))

(declare-fun res!64921 () Bool)

(assert (=> d!41903 (=> (not res!64921) (not e!88015))))

(declare-fun lt!70650 () List!1716)

(assert (=> d!41903 (= res!64921 (isStrictlySorted!322 lt!70650))))

(declare-fun e!88013 () List!1716)

(assert (=> d!41903 (= lt!70650 e!88013)))

(declare-fun c!25225 () Bool)

(assert (=> d!41903 (= c!25225 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69084))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 lt!69084)))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41903 (isStrictlySorted!322 (t!6167 (toList!869 lt!69084)))))

(assert (=> d!41903 (= (insertStrictlySorted!90 (t!6167 (toList!869 lt!69084)) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!70650)))

(declare-fun b!135127 () Bool)

(assert (=> b!135127 (= e!88015 (contains!902 lt!70650 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!135128 () Bool)

(declare-fun c!25223 () Bool)

(assert (=> b!135128 (= c!25223 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69084))) (bvsgt (_1!1324 (h!2317 (t!6167 (toList!869 lt!69084)))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!88014 () List!1716)

(declare-fun e!88016 () List!1716)

(assert (=> b!135128 (= e!88014 e!88016)))

(declare-fun b!135129 () Bool)

(declare-fun e!88012 () List!1716)

(assert (=> b!135129 (= e!88012 (insertStrictlySorted!90 (t!6167 (t!6167 (toList!869 lt!69084))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!135130 () Bool)

(assert (=> b!135130 (= e!88014 call!14866)))

(declare-fun b!135131 () Bool)

(declare-fun call!14865 () List!1716)

(assert (=> b!135131 (= e!88016 call!14865)))

(declare-fun b!135132 () Bool)

(declare-fun c!25222 () Bool)

(assert (=> b!135132 (= e!88012 (ite c!25222 (t!6167 (t!6167 (toList!869 lt!69084))) (ite c!25223 (Cons!1712 (h!2317 (t!6167 (toList!869 lt!69084))) (t!6167 (t!6167 (toList!869 lt!69084)))) Nil!1713)))))

(declare-fun b!135133 () Bool)

(assert (=> b!135133 (= e!88016 call!14865)))

(declare-fun b!135134 () Bool)

(assert (=> b!135134 (= e!88013 call!14867)))

(declare-fun bm!14863 () Bool)

(assert (=> bm!14863 (= call!14867 ($colon$colon!92 e!88012 (ite c!25225 (h!2317 (t!6167 (toList!869 lt!69084))) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun c!25224 () Bool)

(assert (=> bm!14863 (= c!25224 c!25225)))

(declare-fun bm!14864 () Bool)

(assert (=> bm!14864 (= call!14865 call!14866)))

(declare-fun b!135135 () Bool)

(declare-fun res!64920 () Bool)

(assert (=> b!135135 (=> (not res!64920) (not e!88015))))

(assert (=> b!135135 (= res!64920 (containsKey!176 lt!70650 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!135136 () Bool)

(assert (=> b!135136 (= e!88013 e!88014)))

(assert (=> b!135136 (= c!25222 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69084))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69084)))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!41903 c!25225) b!135134))

(assert (= (and d!41903 (not c!25225)) b!135136))

(assert (= (and b!135136 c!25222) b!135130))

(assert (= (and b!135136 (not c!25222)) b!135128))

(assert (= (and b!135128 c!25223) b!135131))

(assert (= (and b!135128 (not c!25223)) b!135133))

(assert (= (or b!135131 b!135133) bm!14864))

(assert (= (or b!135130 bm!14864) bm!14862))

(assert (= (or b!135134 bm!14862) bm!14863))

(assert (= (and bm!14863 c!25224) b!135129))

(assert (= (and bm!14863 (not c!25224)) b!135132))

(assert (= (and d!41903 res!64921) b!135135))

(assert (= (and b!135135 res!64920) b!135127))

(declare-fun m!160863 () Bool)

(assert (=> d!41903 m!160863))

(assert (=> d!41903 m!160499))

(declare-fun m!160865 () Bool)

(assert (=> bm!14863 m!160865))

(declare-fun m!160867 () Bool)

(assert (=> b!135129 m!160867))

(declare-fun m!160869 () Bool)

(assert (=> b!135127 m!160869))

(declare-fun m!160871 () Bool)

(assert (=> b!135135 m!160871))

(assert (=> b!133804 d!41903))

(declare-fun d!41905 () Bool)

(assert (=> d!41905 (= (size!2534 (v!3199 (underlying!455 thiss!992))) (bvadd (_size!598 (v!3199 (underlying!455 thiss!992))) (bvsdiv (bvadd (extraKeys!2630 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!133587 d!41905))

(declare-fun d!41907 () Bool)

(declare-fun lt!70651 () Bool)

(assert (=> d!41907 (= lt!70651 (select (content!133 (toList!869 lt!70032)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!88018 () Bool)

(assert (=> d!41907 (= lt!70651 e!88018)))

(declare-fun res!64922 () Bool)

(assert (=> d!41907 (=> (not res!64922) (not e!88018))))

(assert (=> d!41907 (= res!64922 ((_ is Cons!1712) (toList!869 lt!70032)))))

(assert (=> d!41907 (= (contains!902 (toList!869 lt!70032) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70651)))

(declare-fun b!135137 () Bool)

(declare-fun e!88017 () Bool)

(assert (=> b!135137 (= e!88018 e!88017)))

(declare-fun res!64923 () Bool)

(assert (=> b!135137 (=> res!64923 e!88017)))

(assert (=> b!135137 (= res!64923 (= (h!2317 (toList!869 lt!70032)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135138 () Bool)

(assert (=> b!135138 (= e!88017 (contains!902 (t!6167 (toList!869 lt!70032)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41907 res!64922) b!135137))

(assert (= (and b!135137 (not res!64923)) b!135138))

(declare-fun m!160873 () Bool)

(assert (=> d!41907 m!160873))

(declare-fun m!160875 () Bool)

(assert (=> d!41907 m!160875))

(declare-fun m!160877 () Bool)

(assert (=> b!135138 m!160877))

(assert (=> b!133823 d!41907))

(assert (=> d!40743 d!40639))

(assert (=> d!40743 d!40641))

(declare-fun e!88020 () Option!178)

(declare-fun b!135141 () Bool)

(assert (=> b!135141 (= e!88020 (getValueByKey!172 (t!6167 (toList!869 lt!69988)) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))

(declare-fun b!135142 () Bool)

(assert (=> b!135142 (= e!88020 None!176)))

(declare-fun c!25226 () Bool)

(declare-fun d!41909 () Bool)

(assert (=> d!41909 (= c!25226 (and ((_ is Cons!1712) (toList!869 lt!69988)) (= (_1!1324 (h!2317 (toList!869 lt!69988))) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))))))

(declare-fun e!88019 () Option!178)

(assert (=> d!41909 (= (getValueByKey!172 (toList!869 lt!69988) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))) e!88019)))

(declare-fun b!135139 () Bool)

(assert (=> b!135139 (= e!88019 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69988)))))))

(declare-fun b!135140 () Bool)

(assert (=> b!135140 (= e!88019 e!88020)))

(declare-fun c!25227 () Bool)

(assert (=> b!135140 (= c!25227 (and ((_ is Cons!1712) (toList!869 lt!69988)) (not (= (_1!1324 (h!2317 (toList!869 lt!69988))) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41909 c!25226) b!135139))

(assert (= (and d!41909 (not c!25226)) b!135140))

(assert (= (and b!135140 c!25227) b!135141))

(assert (= (and b!135140 (not c!25227)) b!135142))

(declare-fun m!160879 () Bool)

(assert (=> b!135141 m!160879))

(assert (=> b!133755 d!41909))

(declare-fun b!135145 () Bool)

(declare-fun e!88022 () Option!178)

(assert (=> b!135145 (= e!88022 (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69079))) lt!69098))))

(declare-fun b!135146 () Bool)

(assert (=> b!135146 (= e!88022 None!176)))

(declare-fun d!41911 () Bool)

(declare-fun c!25228 () Bool)

(assert (=> d!41911 (= c!25228 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69079))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69079)))) lt!69098)))))

(declare-fun e!88021 () Option!178)

(assert (=> d!41911 (= (getValueByKey!172 (t!6167 (toList!869 lt!69079)) lt!69098) e!88021)))

(declare-fun b!135143 () Bool)

(assert (=> b!135143 (= e!88021 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 lt!69079))))))))

(declare-fun b!135144 () Bool)

(assert (=> b!135144 (= e!88021 e!88022)))

(declare-fun c!25229 () Bool)

(assert (=> b!135144 (= c!25229 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69079))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69079)))) lt!69098))))))

(assert (= (and d!41911 c!25228) b!135143))

(assert (= (and d!41911 (not c!25228)) b!135144))

(assert (= (and b!135144 c!25229) b!135145))

(assert (= (and b!135144 (not c!25229)) b!135146))

(declare-fun m!160881 () Bool)

(assert (=> b!135145 m!160881))

(assert (=> b!133646 d!41911))

(declare-fun e!88024 () Option!178)

(declare-fun b!135149 () Bool)

(assert (=> b!135149 (= e!88024 (getValueByKey!172 (t!6167 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun b!135150 () Bool)

(assert (=> b!135150 (= e!88024 None!176)))

(declare-fun c!25230 () Bool)

(declare-fun d!41913 () Bool)

(assert (=> d!41913 (= c!25230 (and ((_ is Cons!1712) (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (= (_1!1324 (h!2317 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun e!88023 () Option!178)

(assert (=> d!41913 (= (getValueByKey!172 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!88023)))

(declare-fun b!135147 () Bool)

(assert (=> b!135147 (= e!88023 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))))))))

(declare-fun b!135148 () Bool)

(assert (=> b!135148 (= e!88023 e!88024)))

(declare-fun c!25231 () Bool)

(assert (=> b!135148 (= c!25231 (and ((_ is Cons!1712) (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))))

(assert (= (and d!41913 c!25230) b!135147))

(assert (= (and d!41913 (not c!25230)) b!135148))

(assert (= (and b!135148 c!25231) b!135149))

(assert (= (and b!135148 (not c!25231)) b!135150))

(assert (=> b!135149 m!155869))

(declare-fun m!160883 () Bool)

(assert (=> b!135149 m!160883))

(assert (=> b!133611 d!41913))

(declare-fun d!41915 () Bool)

(assert (=> d!41915 (= (apply!116 lt!69850 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1486 (getValueByKey!172 (toList!869 lt!69850) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5649 () Bool)

(assert (= bs!5649 d!41915))

(assert (=> bs!5649 m!156163))

(declare-fun m!160885 () Bool)

(assert (=> bs!5649 m!160885))

(assert (=> bs!5649 m!160885))

(declare-fun m!160887 () Bool)

(assert (=> bs!5649 m!160887))

(assert (=> b!133531 d!41915))

(declare-fun d!41917 () Bool)

(declare-fun c!25232 () Bool)

(assert (=> d!41917 (= c!25232 ((_ is ValueCellFull!1095) (select (arr!2262 lt!69190) #b00000000000000000000000000000000)))))

(declare-fun e!88025 () V!3483)

(assert (=> d!41917 (= (get!1482 (select (arr!2262 lt!69190) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!88025)))

(declare-fun b!135151 () Bool)

(assert (=> b!135151 (= e!88025 (get!1484 (select (arr!2262 lt!69190) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135152 () Bool)

(assert (=> b!135152 (= e!88025 (get!1485 (select (arr!2262 lt!69190) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41917 c!25232) b!135151))

(assert (= (and d!41917 (not c!25232)) b!135152))

(assert (=> b!135151 m!157671))

(assert (=> b!135151 m!156175))

(declare-fun m!160889 () Bool)

(assert (=> b!135151 m!160889))

(assert (=> b!135152 m!157671))

(assert (=> b!135152 m!156175))

(declare-fun m!160891 () Bool)

(assert (=> b!135152 m!160891))

(assert (=> b!133531 d!41917))

(declare-fun d!41919 () Bool)

(declare-fun res!64924 () Bool)

(declare-fun e!88026 () Bool)

(assert (=> d!41919 (=> res!64924 e!88026)))

(assert (=> d!41919 (= res!64924 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69095))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41919 (= (containsKey!176 (t!6167 (toList!869 lt!69095)) #b0000000000000000000000000000000000000000000000000000000000000000) e!88026)))

(declare-fun b!135153 () Bool)

(declare-fun e!88027 () Bool)

(assert (=> b!135153 (= e!88026 e!88027)))

(declare-fun res!64925 () Bool)

(assert (=> b!135153 (=> (not res!64925) (not e!88027))))

(assert (=> b!135153 (= res!64925 (and (or (not ((_ is Cons!1712) (t!6167 (toList!869 lt!69095)))) (bvsle (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095)))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1712) (t!6167 (toList!869 lt!69095))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135154 () Bool)

(assert (=> b!135154 (= e!88027 (containsKey!176 (t!6167 (t!6167 (toList!869 lt!69095))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41919 (not res!64924)) b!135153))

(assert (= (and b!135153 res!64925) b!135154))

(declare-fun m!160893 () Bool)

(assert (=> b!135154 m!160893))

(assert (=> b!133378 d!41919))

(declare-fun b!135157 () Bool)

(declare-fun e!88029 () Option!178)

(assert (=> b!135157 (= e!88029 (getValueByKey!172 (t!6167 (t!6167 (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69094))))

(declare-fun b!135158 () Bool)

(assert (=> b!135158 (= e!88029 None!176)))

(declare-fun c!25233 () Bool)

(declare-fun d!41921 () Bool)

(assert (=> d!41921 (= c!25233 (and ((_ is Cons!1712) (t!6167 (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (= (_1!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))) lt!69094)))))

(declare-fun e!88028 () Option!178)

(assert (=> d!41921 (= (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!69094) e!88028)))

(declare-fun b!135155 () Bool)

(assert (=> b!135155 (= e!88028 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))))

(declare-fun b!135156 () Bool)

(assert (=> b!135156 (= e!88028 e!88029)))

(declare-fun c!25234 () Bool)

(assert (=> b!135156 (= c!25234 (and ((_ is Cons!1712) (t!6167 (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69081 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))) lt!69094))))))

(assert (= (and d!41921 c!25233) b!135155))

(assert (= (and d!41921 (not c!25233)) b!135156))

(assert (= (and b!135156 c!25234) b!135157))

(assert (= (and b!135156 (not c!25234)) b!135158))

(declare-fun m!160895 () Bool)

(assert (=> b!135157 m!160895))

(assert (=> b!133723 d!41921))

(assert (=> bm!14694 d!41681))

(declare-fun d!41923 () Bool)

(assert (=> d!41923 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69500) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69500) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bs!5650 () Bool)

(assert (= bs!5650 d!41923))

(assert (=> bs!5650 m!156657))

(declare-fun m!160897 () Bool)

(assert (=> bs!5650 m!160897))

(assert (=> b!133076 d!41923))

(assert (=> b!133076 d!40565))

(assert (=> d!40551 d!40325))

(assert (=> b!133005 d!41731))

(assert (=> b!133005 d!41733))

(declare-fun d!41925 () Bool)

(declare-fun lt!70652 () Bool)

(assert (=> d!41925 (= lt!70652 (select (content!133 (toList!869 lt!69652)) (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(declare-fun e!88031 () Bool)

(assert (=> d!41925 (= lt!70652 e!88031)))

(declare-fun res!64926 () Bool)

(assert (=> d!41925 (=> (not res!64926) (not e!88031))))

(assert (=> d!41925 (= res!64926 ((_ is Cons!1712) (toList!869 lt!69652)))))

(assert (=> d!41925 (= (contains!902 (toList!869 lt!69652) (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!70652)))

(declare-fun b!135159 () Bool)

(declare-fun e!88030 () Bool)

(assert (=> b!135159 (= e!88031 e!88030)))

(declare-fun res!64927 () Bool)

(assert (=> b!135159 (=> res!64927 e!88030)))

(assert (=> b!135159 (= res!64927 (= (h!2317 (toList!869 lt!69652)) (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(declare-fun b!135160 () Bool)

(assert (=> b!135160 (= e!88030 (contains!902 (t!6167 (toList!869 lt!69652)) (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))

(assert (= (and d!41925 res!64926) b!135159))

(assert (= (and b!135159 (not res!64927)) b!135160))

(declare-fun m!160899 () Bool)

(assert (=> d!41925 m!160899))

(declare-fun m!160901 () Bool)

(assert (=> d!41925 m!160901))

(declare-fun m!160903 () Bool)

(assert (=> b!135160 m!160903))

(assert (=> b!133236 d!41925))

(declare-fun bm!14865 () Bool)

(declare-fun call!14869 () List!1716)

(declare-fun call!14870 () List!1716)

(assert (=> bm!14865 (= call!14869 call!14870)))

(declare-fun d!41927 () Bool)

(declare-fun e!88035 () Bool)

(assert (=> d!41927 e!88035))

(declare-fun res!64929 () Bool)

(assert (=> d!41927 (=> (not res!64929) (not e!88035))))

(declare-fun lt!70653 () List!1716)

(assert (=> d!41927 (= res!64929 (isStrictlySorted!322 lt!70653))))

(declare-fun e!88033 () List!1716)

(assert (=> d!41927 (= lt!70653 e!88033)))

(declare-fun c!25238 () Bool)

(assert (=> d!41927 (= c!25238 (and ((_ is Cons!1712) (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (=> d!41927 (isStrictlySorted!322 (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))))))

(assert (=> d!41927 (= (insertStrictlySorted!90 (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!70653)))

(declare-fun b!135161 () Bool)

(assert (=> b!135161 (= e!88035 (contains!902 lt!70653 (tuple2!2627 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun b!135162 () Bool)

(declare-fun c!25236 () Bool)

(assert (=> b!135162 (= c!25236 (and ((_ is Cons!1712) (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))))) (bvsgt (_1!1324 (h!2317 (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun e!88034 () List!1716)

(declare-fun e!88036 () List!1716)

(assert (=> b!135162 (= e!88034 e!88036)))

(declare-fun e!88032 () List!1716)

(declare-fun b!135163 () Bool)

(assert (=> b!135163 (= e!88032 (insertStrictlySorted!90 (t!6167 (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!135164 () Bool)

(assert (=> b!135164 (= e!88034 call!14869)))

(declare-fun b!135165 () Bool)

(declare-fun call!14868 () List!1716)

(assert (=> b!135165 (= e!88036 call!14868)))

(declare-fun c!25235 () Bool)

(declare-fun b!135166 () Bool)

(assert (=> b!135166 (= e!88032 (ite c!25235 (t!6167 (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))))) (ite c!25236 (Cons!1712 (h!2317 (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))))) (t!6167 (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))))) Nil!1713)))))

(declare-fun b!135167 () Bool)

(assert (=> b!135167 (= e!88036 call!14868)))

(declare-fun b!135168 () Bool)

(assert (=> b!135168 (= e!88033 call!14870)))

(declare-fun bm!14866 () Bool)

(assert (=> bm!14866 (= call!14870 ($colon$colon!92 e!88032 (ite c!25238 (h!2317 (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))))) (tuple2!2627 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))))

(declare-fun c!25237 () Bool)

(assert (=> bm!14866 (= c!25237 c!25238)))

(declare-fun bm!14867 () Bool)

(assert (=> bm!14867 (= call!14868 call!14869)))

(declare-fun b!135169 () Bool)

(declare-fun res!64928 () Bool)

(assert (=> b!135169 (=> (not res!64928) (not e!88035))))

(assert (=> b!135169 (= res!64928 (containsKey!176 lt!70653 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!135170 () Bool)

(assert (=> b!135170 (= e!88033 e!88034)))

(assert (=> b!135170 (= c!25235 (and ((_ is Cons!1712) (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546))))) (= (_1!1324 (h!2317 (t!6167 (toList!869 (ite c!24451 call!14542 (ite c!24449 call!14545 call!14546)))))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!41927 c!25238) b!135168))

(assert (= (and d!41927 (not c!25238)) b!135170))

(assert (= (and b!135170 c!25235) b!135164))

(assert (= (and b!135170 (not c!25235)) b!135162))

(assert (= (and b!135162 c!25236) b!135165))

(assert (= (and b!135162 (not c!25236)) b!135167))

(assert (= (or b!135165 b!135167) bm!14867))

(assert (= (or b!135164 bm!14867) bm!14865))

(assert (= (or b!135168 bm!14865) bm!14866))

(assert (= (and bm!14866 c!25237) b!135163))

(assert (= (and bm!14866 (not c!25237)) b!135166))

(assert (= (and d!41927 res!64929) b!135169))

(assert (= (and b!135169 res!64928) b!135161))

(declare-fun m!160905 () Bool)

(assert (=> d!41927 m!160905))

(assert (=> d!41927 m!160531))

(declare-fun m!160907 () Bool)

(assert (=> bm!14866 m!160907))

(declare-fun m!160909 () Bool)

(assert (=> b!135163 m!160909))

(declare-fun m!160911 () Bool)

(assert (=> b!135161 m!160911))

(declare-fun m!160913 () Bool)

(assert (=> b!135169 m!160913))

(assert (=> b!133178 d!41927))

(assert (=> b!133297 d!41783))

(declare-fun d!41929 () Bool)

(declare-fun lt!70654 () Bool)

(assert (=> d!41929 (= lt!70654 (select (content!133 (toList!869 lt!70016)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun e!88038 () Bool)

(assert (=> d!41929 (= lt!70654 e!88038)))

(declare-fun res!64930 () Bool)

(assert (=> d!41929 (=> (not res!64930) (not e!88038))))

(assert (=> d!41929 (= res!64930 ((_ is Cons!1712) (toList!869 lt!70016)))))

(assert (=> d!41929 (= (contains!902 (toList!869 lt!70016) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70654)))

(declare-fun b!135171 () Bool)

(declare-fun e!88037 () Bool)

(assert (=> b!135171 (= e!88038 e!88037)))

(declare-fun res!64931 () Bool)

(assert (=> b!135171 (=> res!64931 e!88037)))

(assert (=> b!135171 (= res!64931 (= (h!2317 (toList!869 lt!70016)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(declare-fun b!135172 () Bool)

(assert (=> b!135172 (= e!88037 (contains!902 (t!6167 (toList!869 lt!70016)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!41929 res!64930) b!135171))

(assert (= (and b!135171 (not res!64931)) b!135172))

(declare-fun m!160915 () Bool)

(assert (=> d!41929 m!160915))

(declare-fun m!160917 () Bool)

(assert (=> d!41929 m!160917))

(declare-fun m!160919 () Bool)

(assert (=> b!135172 m!160919))

(assert (=> b!133776 d!41929))

(declare-fun d!41931 () Bool)

(assert (=> d!41931 (= (apply!116 lt!69883 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1486 (getValueByKey!172 (toList!869 lt!69883) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5651 () Bool)

(assert (= bs!5651 d!41931))

(assert (=> bs!5651 m!156163))

(declare-fun m!160921 () Bool)

(assert (=> bs!5651 m!160921))

(assert (=> bs!5651 m!160921))

(declare-fun m!160923 () Bool)

(assert (=> bs!5651 m!160923))

(assert (=> b!133574 d!41931))

(declare-fun d!41933 () Bool)

(declare-fun c!25239 () Bool)

(assert (=> d!41933 (= c!25239 ((_ is ValueCellFull!1095) (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!88039 () V!3483)

(assert (=> d!41933 (= (get!1482 (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!88039)))

(declare-fun b!135173 () Bool)

(assert (=> b!135173 (= e!88039 (get!1484 (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135174 () Bool)

(assert (=> b!135174 (= e!88039 (get!1485 (select (arr!2262 (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (index!3261 lt!69175) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41933 c!25239) b!135173))

(assert (= (and d!41933 (not c!25239)) b!135174))

(assert (=> b!135173 m!157755))

(assert (=> b!135173 m!156175))

(declare-fun m!160925 () Bool)

(assert (=> b!135173 m!160925))

(assert (=> b!135174 m!157755))

(assert (=> b!135174 m!156175))

(declare-fun m!160927 () Bool)

(assert (=> b!135174 m!160927))

(assert (=> b!133574 d!41933))

(declare-fun d!41935 () Bool)

(declare-fun e!88040 () Bool)

(assert (=> d!41935 e!88040))

(declare-fun res!64932 () Bool)

(assert (=> d!41935 (=> res!64932 e!88040)))

(declare-fun lt!70658 () Bool)

(assert (=> d!41935 (= res!64932 (not lt!70658))))

(declare-fun lt!70655 () Bool)

(assert (=> d!41935 (= lt!70658 lt!70655)))

(declare-fun lt!70657 () Unit!4135)

(declare-fun e!88041 () Unit!4135)

(assert (=> d!41935 (= lt!70657 e!88041)))

(declare-fun c!25240 () Bool)

(assert (=> d!41935 (= c!25240 lt!70655)))

(assert (=> d!41935 (= lt!70655 (containsKey!176 (toList!869 lt!69692) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41935 (= (contains!899 lt!69692 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70658)))

(declare-fun b!135175 () Bool)

(declare-fun lt!70656 () Unit!4135)

(assert (=> b!135175 (= e!88041 lt!70656)))

(assert (=> b!135175 (= lt!70656 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69692) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135175 (isDefined!125 (getValueByKey!172 (toList!869 lt!69692) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135176 () Bool)

(declare-fun Unit!4248 () Unit!4135)

(assert (=> b!135176 (= e!88041 Unit!4248)))

(declare-fun b!135177 () Bool)

(assert (=> b!135177 (= e!88040 (isDefined!125 (getValueByKey!172 (toList!869 lt!69692) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41935 c!25240) b!135175))

(assert (= (and d!41935 (not c!25240)) b!135176))

(assert (= (and d!41935 (not res!64932)) b!135177))

(assert (=> d!41935 m!156163))

(declare-fun m!160929 () Bool)

(assert (=> d!41935 m!160929))

(assert (=> b!135175 m!156163))

(declare-fun m!160931 () Bool)

(assert (=> b!135175 m!160931))

(assert (=> b!135175 m!156163))

(assert (=> b!135175 m!158613))

(assert (=> b!135175 m!158613))

(declare-fun m!160933 () Bool)

(assert (=> b!135175 m!160933))

(assert (=> b!135177 m!156163))

(assert (=> b!135177 m!158613))

(assert (=> b!135177 m!158613))

(assert (=> b!135177 m!160933))

(assert (=> b!133274 d!41935))

(declare-fun bm!14868 () Bool)

(declare-fun call!14871 () Bool)

(assert (=> bm!14868 (= call!14871 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!135178 () Bool)

(declare-fun e!88044 () Bool)

(declare-fun e!88042 () Bool)

(assert (=> b!135178 (= e!88044 e!88042)))

(declare-fun c!25241 () Bool)

(assert (=> b!135178 (= c!25241 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!41937 () Bool)

(declare-fun res!64933 () Bool)

(assert (=> d!41937 (=> res!64933 e!88044)))

(assert (=> d!41937 (= res!64933 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!41937 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) e!88044)))

(declare-fun b!135179 () Bool)

(assert (=> b!135179 (= e!88042 call!14871)))

(declare-fun b!135180 () Bool)

(declare-fun e!88043 () Bool)

(assert (=> b!135180 (= e!88043 call!14871)))

(declare-fun b!135181 () Bool)

(assert (=> b!135181 (= e!88042 e!88043)))

(declare-fun lt!70660 () (_ BitVec 64))

(assert (=> b!135181 (= lt!70660 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!70661 () Unit!4135)

(assert (=> b!135181 (= lt!70661 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!70660 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!135181 (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!70660 #b00000000000000000000000000000000)))

(declare-fun lt!70659 () Unit!4135)

(assert (=> b!135181 (= lt!70659 lt!70661)))

(declare-fun res!64934 () Bool)

(assert (=> b!135181 (= res!64934 (= (seekEntryOrOpen!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (Found!275 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!135181 (=> (not res!64934) (not e!88043))))

(assert (= (and d!41937 (not res!64933)) b!135178))

(assert (= (and b!135178 c!25241) b!135181))

(assert (= (and b!135178 (not c!25241)) b!135179))

(assert (= (and b!135181 res!64934) b!135180))

(assert (= (or b!135180 b!135179) bm!14868))

(declare-fun m!160935 () Bool)

(assert (=> bm!14868 m!160935))

(assert (=> b!135178 m!159011))

(assert (=> b!135178 m!159011))

(assert (=> b!135178 m!159015))

(assert (=> b!135181 m!159011))

(declare-fun m!160937 () Bool)

(assert (=> b!135181 m!160937))

(declare-fun m!160939 () Bool)

(assert (=> b!135181 m!160939))

(assert (=> b!135181 m!159011))

(declare-fun m!160941 () Bool)

(assert (=> b!135181 m!160941))

(assert (=> bm!14738 d!41937))

(declare-fun d!41939 () Bool)

(declare-fun c!25242 () Bool)

(assert (=> d!41939 (= c!25242 ((_ is Nil!1713) (toList!869 lt!69442)))))

(declare-fun e!88045 () (InoxSet tuple2!2626))

(assert (=> d!41939 (= (content!133 (toList!869 lt!69442)) e!88045)))

(declare-fun b!135182 () Bool)

(assert (=> b!135182 (= e!88045 ((as const (Array tuple2!2626 Bool)) false))))

(declare-fun b!135183 () Bool)

(assert (=> b!135183 (= e!88045 ((_ map or) (store ((as const (Array tuple2!2626 Bool)) false) (h!2317 (toList!869 lt!69442)) true) (content!133 (t!6167 (toList!869 lt!69442)))))))

(assert (= (and d!41939 c!25242) b!135182))

(assert (= (and d!41939 (not c!25242)) b!135183))

(declare-fun m!160943 () Bool)

(assert (=> b!135183 m!160943))

(assert (=> b!135183 m!158427))

(assert (=> d!40569 d!41939))

(declare-fun d!41941 () Bool)

(declare-fun res!64935 () Bool)

(declare-fun e!88046 () Bool)

(assert (=> d!41941 (=> res!64935 e!88046)))

(assert (=> d!41941 (= res!64935 (and ((_ is Cons!1712) (toList!869 lt!69408)) (= (_1!1324 (h!2317 (toList!869 lt!69408))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41941 (= (containsKey!176 (toList!869 lt!69408) #b1000000000000000000000000000000000000000000000000000000000000000) e!88046)))

(declare-fun b!135184 () Bool)

(declare-fun e!88047 () Bool)

(assert (=> b!135184 (= e!88046 e!88047)))

(declare-fun res!64936 () Bool)

(assert (=> b!135184 (=> (not res!64936) (not e!88047))))

(assert (=> b!135184 (= res!64936 (and (or (not ((_ is Cons!1712) (toList!869 lt!69408))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69408))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1712) (toList!869 lt!69408)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69408))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135185 () Bool)

(assert (=> b!135185 (= e!88047 (containsKey!176 (t!6167 (toList!869 lt!69408)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41941 (not res!64935)) b!135184))

(assert (= (and b!135184 res!64936) b!135185))

(declare-fun m!160945 () Bool)

(assert (=> b!135185 m!160945))

(assert (=> d!40415 d!41941))

(declare-fun d!41943 () Bool)

(declare-fun c!25243 () Bool)

(assert (=> d!41943 (= c!25243 ((_ is Nil!1713) (toList!869 lt!69422)))))

(declare-fun e!88048 () (InoxSet tuple2!2626))

(assert (=> d!41943 (= (content!133 (toList!869 lt!69422)) e!88048)))

(declare-fun b!135186 () Bool)

(assert (=> b!135186 (= e!88048 ((as const (Array tuple2!2626 Bool)) false))))

(declare-fun b!135187 () Bool)

(assert (=> b!135187 (= e!88048 ((_ map or) (store ((as const (Array tuple2!2626 Bool)) false) (h!2317 (toList!869 lt!69422)) true) (content!133 (t!6167 (toList!869 lt!69422)))))))

(assert (= (and d!41943 c!25243) b!135186))

(assert (= (and d!41943 (not c!25243)) b!135187))

(declare-fun m!160947 () Bool)

(assert (=> b!135187 m!160947))

(assert (=> b!135187 m!158437))

(assert (=> d!40515 d!41943))

(declare-fun d!41945 () Bool)

(declare-fun e!88049 () Bool)

(assert (=> d!41945 e!88049))

(declare-fun res!64937 () Bool)

(assert (=> d!41945 (=> res!64937 e!88049)))

(declare-fun lt!70665 () Bool)

(assert (=> d!41945 (= res!64937 (not lt!70665))))

(declare-fun lt!70662 () Bool)

(assert (=> d!41945 (= lt!70665 lt!70662)))

(declare-fun lt!70664 () Unit!4135)

(declare-fun e!88050 () Unit!4135)

(assert (=> d!41945 (= lt!70664 e!88050)))

(declare-fun c!25244 () Bool)

(assert (=> d!41945 (= c!25244 lt!70662)))

(assert (=> d!41945 (= lt!70662 (containsKey!176 (toList!869 lt!69978) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41945 (= (contains!899 lt!69978 (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) lt!70665)))

(declare-fun b!135188 () Bool)

(declare-fun lt!70663 () Unit!4135)

(assert (=> b!135188 (= e!88050 lt!70663)))

(assert (=> b!135188 (= lt!70663 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69978) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> b!135188 (isDefined!125 (getValueByKey!172 (toList!869 lt!69978) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!135189 () Bool)

(declare-fun Unit!4249 () Unit!4135)

(assert (=> b!135189 (= e!88050 Unit!4249)))

(declare-fun b!135190 () Bool)

(assert (=> b!135190 (= e!88049 (isDefined!125 (getValueByKey!172 (toList!869 lt!69978) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41945 c!25244) b!135188))

(assert (= (and d!41945 (not c!25244)) b!135189))

(assert (= (and d!41945 (not res!64937)) b!135190))

(declare-fun m!160949 () Bool)

(assert (=> d!41945 m!160949))

(declare-fun m!160951 () Bool)

(assert (=> b!135188 m!160951))

(assert (=> b!135188 m!158117))

(assert (=> b!135188 m!158117))

(declare-fun m!160953 () Bool)

(assert (=> b!135188 m!160953))

(assert (=> b!135190 m!158117))

(assert (=> b!135190 m!158117))

(assert (=> b!135190 m!160953))

(assert (=> d!40763 d!41945))

(declare-fun b!135193 () Bool)

(declare-fun e!88052 () Option!178)

(assert (=> b!135193 (= e!88052 (getValueByKey!172 (t!6167 lt!69980) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!135194 () Bool)

(assert (=> b!135194 (= e!88052 None!176)))

(declare-fun d!41947 () Bool)

(declare-fun c!25245 () Bool)

(assert (=> d!41947 (= c!25245 (and ((_ is Cons!1712) lt!69980) (= (_1!1324 (h!2317 lt!69980)) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun e!88051 () Option!178)

(assert (=> d!41947 (= (getValueByKey!172 lt!69980 (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) e!88051)))

(declare-fun b!135191 () Bool)

(assert (=> b!135191 (= e!88051 (Some!177 (_2!1324 (h!2317 lt!69980))))))

(declare-fun b!135192 () Bool)

(assert (=> b!135192 (= e!88051 e!88052)))

(declare-fun c!25246 () Bool)

(assert (=> b!135192 (= c!25246 (and ((_ is Cons!1712) lt!69980) (not (= (_1!1324 (h!2317 lt!69980)) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))))

(assert (= (and d!41947 c!25245) b!135191))

(assert (= (and d!41947 (not c!25245)) b!135192))

(assert (= (and b!135192 c!25246) b!135193))

(assert (= (and b!135192 (not c!25246)) b!135194))

(declare-fun m!160955 () Bool)

(assert (=> b!135193 m!160955))

(assert (=> d!40763 d!41947))

(declare-fun d!41949 () Bool)

(assert (=> d!41949 (= (getValueByKey!172 lt!69980 (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!70666 () Unit!4135)

(assert (=> d!41949 (= lt!70666 (choose!827 lt!69980 (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun e!88053 () Bool)

(assert (=> d!41949 e!88053))

(declare-fun res!64938 () Bool)

(assert (=> d!41949 (=> (not res!64938) (not e!88053))))

(assert (=> d!41949 (= res!64938 (isStrictlySorted!322 lt!69980))))

(assert (=> d!41949 (= (lemmaContainsTupThenGetReturnValue!87 lt!69980 (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) lt!70666)))

(declare-fun b!135195 () Bool)

(declare-fun res!64939 () Bool)

(assert (=> b!135195 (=> (not res!64939) (not e!88053))))

(assert (=> b!135195 (= res!64939 (containsKey!176 lt!69980 (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!135196 () Bool)

(assert (=> b!135196 (= e!88053 (contains!902 lt!69980 (tuple2!2627 (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41949 res!64938) b!135195))

(assert (= (and b!135195 res!64939) b!135196))

(assert (=> d!41949 m!158111))

(declare-fun m!160957 () Bool)

(assert (=> d!41949 m!160957))

(declare-fun m!160959 () Bool)

(assert (=> d!41949 m!160959))

(declare-fun m!160961 () Bool)

(assert (=> b!135195 m!160961))

(declare-fun m!160963 () Bool)

(assert (=> b!135196 m!160963))

(assert (=> d!40763 d!41949))

(declare-fun bm!14869 () Bool)

(declare-fun call!14873 () List!1716)

(declare-fun call!14874 () List!1716)

(assert (=> bm!14869 (= call!14873 call!14874)))

(declare-fun d!41951 () Bool)

(declare-fun e!88057 () Bool)

(assert (=> d!41951 e!88057))

(declare-fun res!64941 () Bool)

(assert (=> d!41951 (=> (not res!64941) (not e!88057))))

(declare-fun lt!70667 () List!1716)

(assert (=> d!41951 (= res!64941 (isStrictlySorted!322 lt!70667))))

(declare-fun e!88055 () List!1716)

(assert (=> d!41951 (= lt!70667 e!88055)))

(declare-fun c!25250 () Bool)

(assert (=> d!41951 (= c!25250 (and ((_ is Cons!1712) (toList!869 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663)))) (bvslt (_1!1324 (h!2317 (toList!869 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663))))) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (=> d!41951 (isStrictlySorted!322 (toList!869 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663))))))

(assert (=> d!41951 (= (insertStrictlySorted!90 (toList!869 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663))) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) lt!70667)))

(declare-fun b!135197 () Bool)

(assert (=> b!135197 (= e!88057 (contains!902 lt!70667 (tuple2!2627 (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!135198 () Bool)

(declare-fun c!25248 () Bool)

(assert (=> b!135198 (= c!25248 (and ((_ is Cons!1712) (toList!869 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663)))) (bvsgt (_1!1324 (h!2317 (toList!869 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663))))) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun e!88056 () List!1716)

(declare-fun e!88058 () List!1716)

(assert (=> b!135198 (= e!88056 e!88058)))

(declare-fun b!135199 () Bool)

(declare-fun e!88054 () List!1716)

(assert (=> b!135199 (= e!88054 (insertStrictlySorted!90 (t!6167 (toList!869 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663)))) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!135200 () Bool)

(assert (=> b!135200 (= e!88056 call!14873)))

(declare-fun b!135201 () Bool)

(declare-fun call!14872 () List!1716)

(assert (=> b!135201 (= e!88058 call!14872)))

(declare-fun c!25247 () Bool)

(declare-fun b!135202 () Bool)

(assert (=> b!135202 (= e!88054 (ite c!25247 (t!6167 (toList!869 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663)))) (ite c!25248 (Cons!1712 (h!2317 (toList!869 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663)))) (t!6167 (toList!869 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663))))) Nil!1713)))))

(declare-fun b!135203 () Bool)

(assert (=> b!135203 (= e!88058 call!14872)))

(declare-fun b!135204 () Bool)

(assert (=> b!135204 (= e!88055 call!14874)))

(declare-fun bm!14870 () Bool)

(assert (=> bm!14870 (= call!14874 ($colon$colon!92 e!88054 (ite c!25250 (h!2317 (toList!869 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663)))) (tuple2!2627 (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))))

(declare-fun c!25249 () Bool)

(assert (=> bm!14870 (= c!25249 c!25250)))

(declare-fun bm!14871 () Bool)

(assert (=> bm!14871 (= call!14872 call!14873)))

(declare-fun b!135205 () Bool)

(declare-fun res!64940 () Bool)

(assert (=> b!135205 (=> (not res!64940) (not e!88057))))

(assert (=> b!135205 (= res!64940 (containsKey!176 lt!70667 (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!135206 () Bool)

(assert (=> b!135206 (= e!88055 e!88056)))

(assert (=> b!135206 (= c!25247 (and ((_ is Cons!1712) (toList!869 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663)))) (= (_1!1324 (h!2317 (toList!869 (ite c!24575 call!14659 (ite c!24573 call!14662 call!14663))))) (_1!1324 (ite (or c!24575 c!24573) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (= (and d!41951 c!25250) b!135204))

(assert (= (and d!41951 (not c!25250)) b!135206))

(assert (= (and b!135206 c!25247) b!135200))

(assert (= (and b!135206 (not c!25247)) b!135198))

(assert (= (and b!135198 c!25248) b!135201))

(assert (= (and b!135198 (not c!25248)) b!135203))

(assert (= (or b!135201 b!135203) bm!14871))

(assert (= (or b!135200 bm!14871) bm!14869))

(assert (= (or b!135204 bm!14869) bm!14870))

(assert (= (and bm!14870 c!25249) b!135199))

(assert (= (and bm!14870 (not c!25249)) b!135202))

(assert (= (and d!41951 res!64941) b!135205))

(assert (= (and b!135205 res!64940) b!135197))

(declare-fun m!160965 () Bool)

(assert (=> d!41951 m!160965))

(declare-fun m!160967 () Bool)

(assert (=> d!41951 m!160967))

(declare-fun m!160969 () Bool)

(assert (=> bm!14870 m!160969))

(declare-fun m!160971 () Bool)

(assert (=> b!135199 m!160971))

(declare-fun m!160973 () Bool)

(assert (=> b!135197 m!160973))

(declare-fun m!160975 () Bool)

(assert (=> b!135205 m!160975))

(assert (=> d!40763 d!41951))

(declare-fun d!41953 () Bool)

(assert (=> d!41953 (= (get!1486 (getValueByKey!172 (toList!869 lt!69464) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) (v!3203 (getValueByKey!172 (toList!869 lt!69464) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!40711 d!41953))

(assert (=> d!40711 d!41489))

(assert (=> b!133774 d!41721))

(assert (=> b!133774 d!41723))

(assert (=> d!40423 d!40421))

(declare-fun d!41955 () Bool)

(assert (=> d!41955 (= (getValueByKey!172 lt!69379 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!41955 true))

(declare-fun _$22!487 () Unit!4135)

(assert (=> d!41955 (= (choose!827 lt!69379 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) _$22!487)))

(declare-fun bs!5652 () Bool)

(assert (= bs!5652 d!41955))

(assert (=> bs!5652 m!156337))

(assert (=> d!40423 d!41955))

(declare-fun d!41957 () Bool)

(declare-fun res!64942 () Bool)

(declare-fun e!88059 () Bool)

(assert (=> d!41957 (=> res!64942 e!88059)))

(assert (=> d!41957 (= res!64942 (or ((_ is Nil!1713) lt!69379) ((_ is Nil!1713) (t!6167 lt!69379))))))

(assert (=> d!41957 (= (isStrictlySorted!322 lt!69379) e!88059)))

(declare-fun b!135207 () Bool)

(declare-fun e!88060 () Bool)

(assert (=> b!135207 (= e!88059 e!88060)))

(declare-fun res!64943 () Bool)

(assert (=> b!135207 (=> (not res!64943) (not e!88060))))

(assert (=> b!135207 (= res!64943 (bvslt (_1!1324 (h!2317 lt!69379)) (_1!1324 (h!2317 (t!6167 lt!69379)))))))

(declare-fun b!135208 () Bool)

(assert (=> b!135208 (= e!88060 (isStrictlySorted!322 (t!6167 lt!69379)))))

(assert (= (and d!41957 (not res!64942)) b!135207))

(assert (= (and b!135207 res!64943) b!135208))

(declare-fun m!160977 () Bool)

(assert (=> b!135208 m!160977))

(assert (=> d!40423 d!41957))

(declare-fun d!41959 () Bool)

(assert (=> d!41959 (= (apply!116 lt!69761 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69761) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5653 () Bool)

(assert (= bs!5653 d!41959))

(assert (=> bs!5653 m!160339))

(assert (=> bs!5653 m!160339))

(declare-fun m!160979 () Bool)

(assert (=> bs!5653 m!160979))

(assert (=> b!133367 d!41959))

(declare-fun d!41961 () Bool)

(declare-fun res!64944 () Bool)

(declare-fun e!88061 () Bool)

(assert (=> d!41961 (=> res!64944 e!88061)))

(assert (=> d!41961 (= res!64944 (and ((_ is Cons!1712) lt!69415) (= (_1!1324 (h!2317 lt!69415)) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!41961 (= (containsKey!176 lt!69415 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!88061)))

(declare-fun b!135209 () Bool)

(declare-fun e!88062 () Bool)

(assert (=> b!135209 (= e!88061 e!88062)))

(declare-fun res!64945 () Bool)

(assert (=> b!135209 (=> (not res!64945) (not e!88062))))

(assert (=> b!135209 (= res!64945 (and (or (not ((_ is Cons!1712) lt!69415)) (bvsle (_1!1324 (h!2317 lt!69415)) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Cons!1712) lt!69415) (bvslt (_1!1324 (h!2317 lt!69415)) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!135210 () Bool)

(assert (=> b!135210 (= e!88062 (containsKey!176 (t!6167 lt!69415) (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!41961 (not res!64944)) b!135209))

(assert (= (and b!135209 res!64945) b!135210))

(declare-fun m!160981 () Bool)

(assert (=> b!135210 m!160981))

(assert (=> b!133680 d!41961))

(assert (=> d!40629 d!40627))

(declare-fun d!41963 () Bool)

(assert (=> d!41963 (= (getValueByKey!172 lt!69424 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!177 (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41963 true))

(declare-fun _$22!488 () Unit!4135)

(assert (=> d!41963 (= (choose!827 lt!69424 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) _$22!488)))

(declare-fun bs!5654 () Bool)

(assert (= bs!5654 d!41963))

(assert (=> bs!5654 m!156441))

(assert (=> d!40629 d!41963))

(declare-fun d!41965 () Bool)

(declare-fun res!64946 () Bool)

(declare-fun e!88063 () Bool)

(assert (=> d!41965 (=> res!64946 e!88063)))

(assert (=> d!41965 (= res!64946 (or ((_ is Nil!1713) lt!69424) ((_ is Nil!1713) (t!6167 lt!69424))))))

(assert (=> d!41965 (= (isStrictlySorted!322 lt!69424) e!88063)))

(declare-fun b!135211 () Bool)

(declare-fun e!88064 () Bool)

(assert (=> b!135211 (= e!88063 e!88064)))

(declare-fun res!64947 () Bool)

(assert (=> b!135211 (=> (not res!64947) (not e!88064))))

(assert (=> b!135211 (= res!64947 (bvslt (_1!1324 (h!2317 lt!69424)) (_1!1324 (h!2317 (t!6167 lt!69424)))))))

(declare-fun b!135212 () Bool)

(assert (=> b!135212 (= e!88064 (isStrictlySorted!322 (t!6167 lt!69424)))))

(assert (= (and d!41965 (not res!64946)) b!135211))

(assert (= (and b!135211 res!64947) b!135212))

(declare-fun m!160983 () Bool)

(assert (=> b!135212 m!160983))

(assert (=> d!40629 d!41965))

(declare-fun b!135215 () Bool)

(declare-fun e!88066 () Option!178)

(assert (=> b!135215 (= e!88066 (getValueByKey!172 (t!6167 (toList!869 lt!69550)) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!135216 () Bool)

(assert (=> b!135216 (= e!88066 None!176)))

(declare-fun d!41967 () Bool)

(declare-fun c!25251 () Bool)

(assert (=> d!41967 (= c!25251 (and ((_ is Cons!1712) (toList!869 lt!69550)) (= (_1!1324 (h!2317 (toList!869 lt!69550))) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun e!88065 () Option!178)

(assert (=> d!41967 (= (getValueByKey!172 (toList!869 lt!69550) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) e!88065)))

(declare-fun b!135213 () Bool)

(assert (=> b!135213 (= e!88065 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69550)))))))

(declare-fun b!135214 () Bool)

(assert (=> b!135214 (= e!88065 e!88066)))

(declare-fun c!25252 () Bool)

(assert (=> b!135214 (= c!25252 (and ((_ is Cons!1712) (toList!869 lt!69550)) (not (= (_1!1324 (h!2317 (toList!869 lt!69550))) (_1!1324 (ite (or c!24531 c!24529) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))))

(assert (= (and d!41967 c!25251) b!135213))

(assert (= (and d!41967 (not c!25251)) b!135214))

(assert (= (and b!135214 c!25252) b!135215))

(assert (= (and b!135214 (not c!25252)) b!135216))

(declare-fun m!160985 () Bool)

(assert (=> b!135215 m!160985))

(assert (=> b!133032 d!41967))

(declare-fun d!41969 () Bool)

(declare-fun e!88067 () Bool)

(assert (=> d!41969 e!88067))

(declare-fun res!64949 () Bool)

(assert (=> d!41969 (=> (not res!64949) (not e!88067))))

(declare-fun lt!70668 () ListLongMap!1707)

(assert (=> d!41969 (= res!64949 (contains!899 lt!70668 (_1!1324 (ite (or c!24682 c!24680) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!70670 () List!1716)

(assert (=> d!41969 (= lt!70668 (ListLongMap!1708 lt!70670))))

(declare-fun lt!70671 () Unit!4135)

(declare-fun lt!70669 () Unit!4135)

(assert (=> d!41969 (= lt!70671 lt!70669)))

(assert (=> d!41969 (= (getValueByKey!172 lt!70670 (_1!1324 (ite (or c!24682 c!24680) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24682 c!24680) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41969 (= lt!70669 (lemmaContainsTupThenGetReturnValue!87 lt!70670 (_1!1324 (ite (or c!24682 c!24680) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24682 c!24680) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41969 (= lt!70670 (insertStrictlySorted!90 (toList!869 (ite c!24682 call!14708 (ite c!24680 call!14711 call!14712))) (_1!1324 (ite (or c!24682 c!24680) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24682 c!24680) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!41969 (= (+!175 (ite c!24682 call!14708 (ite c!24680 call!14711 call!14712)) (ite (or c!24682 c!24680) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70668)))

(declare-fun b!135217 () Bool)

(declare-fun res!64948 () Bool)

(assert (=> b!135217 (=> (not res!64948) (not e!88067))))

(assert (=> b!135217 (= res!64948 (= (getValueByKey!172 (toList!869 lt!70668) (_1!1324 (ite (or c!24682 c!24680) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24682 c!24680) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!135218 () Bool)

(assert (=> b!135218 (= e!88067 (contains!902 (toList!869 lt!70668) (ite (or c!24682 c!24680) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 newMap!16)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!41969 res!64949) b!135217))

(assert (= (and b!135217 res!64948) b!135218))

(declare-fun m!160987 () Bool)

(assert (=> d!41969 m!160987))

(declare-fun m!160989 () Bool)

(assert (=> d!41969 m!160989))

(declare-fun m!160991 () Bool)

(assert (=> d!41969 m!160991))

(declare-fun m!160993 () Bool)

(assert (=> d!41969 m!160993))

(declare-fun m!160995 () Bool)

(assert (=> b!135217 m!160995))

(declare-fun m!160997 () Bool)

(assert (=> b!135218 m!160997))

(assert (=> bm!14705 d!41969))

(declare-fun d!41971 () Bool)

(declare-fun e!88068 () Bool)

(assert (=> d!41971 e!88068))

(declare-fun res!64950 () Bool)

(assert (=> d!41971 (=> res!64950 e!88068)))

(declare-fun lt!70675 () Bool)

(assert (=> d!41971 (= res!64950 (not lt!70675))))

(declare-fun lt!70672 () Bool)

(assert (=> d!41971 (= lt!70675 lt!70672)))

(declare-fun lt!70674 () Unit!4135)

(declare-fun e!88069 () Unit!4135)

(assert (=> d!41971 (= lt!70674 e!88069)))

(declare-fun c!25253 () Bool)

(assert (=> d!41971 (= c!25253 lt!70672)))

(assert (=> d!41971 (= lt!70672 (containsKey!176 (toList!869 lt!69970) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!41971 (= (contains!899 lt!69970 (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) lt!70675)))

(declare-fun b!135219 () Bool)

(declare-fun lt!70673 () Unit!4135)

(assert (=> b!135219 (= e!88069 lt!70673)))

(assert (=> b!135219 (= lt!70673 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69970) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> b!135219 (isDefined!125 (getValueByKey!172 (toList!869 lt!69970) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!135220 () Bool)

(declare-fun Unit!4250 () Unit!4135)

(assert (=> b!135220 (= e!88069 Unit!4250)))

(declare-fun b!135221 () Bool)

(assert (=> b!135221 (= e!88068 (isDefined!125 (getValueByKey!172 (toList!869 lt!69970) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (= (and d!41971 c!25253) b!135219))

(assert (= (and d!41971 (not c!25253)) b!135220))

(assert (= (and d!41971 (not res!64950)) b!135221))

(declare-fun m!160999 () Bool)

(assert (=> d!41971 m!160999))

(declare-fun m!161001 () Bool)

(assert (=> b!135219 m!161001))

(assert (=> b!135219 m!158081))

(assert (=> b!135219 m!158081))

(declare-fun m!161003 () Bool)

(assert (=> b!135219 m!161003))

(assert (=> b!135221 m!158081))

(assert (=> b!135221 m!158081))

(assert (=> b!135221 m!161003))

(assert (=> d!40745 d!41971))

(declare-fun b!135224 () Bool)

(declare-fun e!88071 () Option!178)

(assert (=> b!135224 (= e!88071 (getValueByKey!172 (t!6167 lt!69972) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!135225 () Bool)

(assert (=> b!135225 (= e!88071 None!176)))

(declare-fun d!41973 () Bool)

(declare-fun c!25254 () Bool)

(assert (=> d!41973 (= c!25254 (and ((_ is Cons!1712) lt!69972) (= (_1!1324 (h!2317 lt!69972)) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun e!88070 () Option!178)

(assert (=> d!41973 (= (getValueByKey!172 lt!69972 (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) e!88070)))

(declare-fun b!135222 () Bool)

(assert (=> b!135222 (= e!88070 (Some!177 (_2!1324 (h!2317 lt!69972))))))

(declare-fun b!135223 () Bool)

(assert (=> b!135223 (= e!88070 e!88071)))

(declare-fun c!25255 () Bool)

(assert (=> b!135223 (= c!25255 (and ((_ is Cons!1712) lt!69972) (not (= (_1!1324 (h!2317 lt!69972)) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))))

(assert (= (and d!41973 c!25254) b!135222))

(assert (= (and d!41973 (not c!25254)) b!135223))

(assert (= (and b!135223 c!25255) b!135224))

(assert (= (and b!135223 (not c!25255)) b!135225))

(declare-fun m!161005 () Bool)

(assert (=> b!135224 m!161005))

(assert (=> d!40745 d!41973))

(declare-fun d!41975 () Bool)

(assert (=> d!41975 (= (getValueByKey!172 lt!69972 (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) (Some!177 (_2!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun lt!70676 () Unit!4135)

(assert (=> d!41975 (= lt!70676 (choose!827 lt!69972 (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun e!88072 () Bool)

(assert (=> d!41975 e!88072))

(declare-fun res!64951 () Bool)

(assert (=> d!41975 (=> (not res!64951) (not e!88072))))

(assert (=> d!41975 (= res!64951 (isStrictlySorted!322 lt!69972))))

(assert (=> d!41975 (= (lemmaContainsTupThenGetReturnValue!87 lt!69972 (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) lt!70676)))

(declare-fun b!135226 () Bool)

(declare-fun res!64952 () Bool)

(assert (=> b!135226 (=> (not res!64952) (not e!88072))))

(assert (=> b!135226 (= res!64952 (containsKey!176 lt!69972 (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!135227 () Bool)

(assert (=> b!135227 (= e!88072 (contains!902 lt!69972 (tuple2!2627 (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (= (and d!41975 res!64951) b!135226))

(assert (= (and b!135226 res!64952) b!135227))

(assert (=> d!41975 m!158075))

(declare-fun m!161007 () Bool)

(assert (=> d!41975 m!161007))

(declare-fun m!161009 () Bool)

(assert (=> d!41975 m!161009))

(declare-fun m!161011 () Bool)

(assert (=> b!135226 m!161011))

(declare-fun m!161013 () Bool)

(assert (=> b!135227 m!161013))

(assert (=> d!40745 d!41975))

(declare-fun bm!14872 () Bool)

(declare-fun call!14876 () List!1716)

(declare-fun call!14877 () List!1716)

(assert (=> bm!14872 (= call!14876 call!14877)))

(declare-fun d!41977 () Bool)

(declare-fun e!88076 () Bool)

(assert (=> d!41977 e!88076))

(declare-fun res!64954 () Bool)

(assert (=> d!41977 (=> (not res!64954) (not e!88076))))

(declare-fun lt!70677 () List!1716)

(assert (=> d!41977 (= res!64954 (isStrictlySorted!322 lt!70677))))

(declare-fun e!88074 () List!1716)

(assert (=> d!41977 (= lt!70677 e!88074)))

(declare-fun c!25259 () Bool)

(assert (=> d!41977 (= c!25259 (and ((_ is Cons!1712) (toList!869 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670)))) (bvslt (_1!1324 (h!2317 (toList!869 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670))))) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (=> d!41977 (isStrictlySorted!322 (toList!869 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670))))))

(assert (=> d!41977 (= (insertStrictlySorted!90 (toList!869 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670))) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) lt!70677)))

(declare-fun b!135228 () Bool)

(assert (=> b!135228 (= e!88076 (contains!902 lt!70677 (tuple2!2627 (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun c!25257 () Bool)

(declare-fun b!135229 () Bool)

(assert (=> b!135229 (= c!25257 (and ((_ is Cons!1712) (toList!869 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670)))) (bvsgt (_1!1324 (h!2317 (toList!869 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670))))) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun e!88075 () List!1716)

(declare-fun e!88077 () List!1716)

(assert (=> b!135229 (= e!88075 e!88077)))

(declare-fun e!88073 () List!1716)

(declare-fun b!135230 () Bool)

(assert (=> b!135230 (= e!88073 (insertStrictlySorted!90 (t!6167 (toList!869 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670)))) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!135231 () Bool)

(assert (=> b!135231 (= e!88075 call!14876)))

(declare-fun b!135232 () Bool)

(declare-fun call!14875 () List!1716)

(assert (=> b!135232 (= e!88077 call!14875)))

(declare-fun b!135233 () Bool)

(declare-fun c!25256 () Bool)

(assert (=> b!135233 (= e!88073 (ite c!25256 (t!6167 (toList!869 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670)))) (ite c!25257 (Cons!1712 (h!2317 (toList!869 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670)))) (t!6167 (toList!869 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670))))) Nil!1713)))))

(declare-fun b!135234 () Bool)

(assert (=> b!135234 (= e!88077 call!14875)))

(declare-fun b!135235 () Bool)

(assert (=> b!135235 (= e!88074 call!14877)))

(declare-fun bm!14873 () Bool)

(assert (=> bm!14873 (= call!14877 ($colon$colon!92 e!88073 (ite c!25259 (h!2317 (toList!869 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670)))) (tuple2!2627 (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (_2!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))))

(declare-fun c!25258 () Bool)

(assert (=> bm!14873 (= c!25258 c!25259)))

(declare-fun bm!14874 () Bool)

(assert (=> bm!14874 (= call!14875 call!14876)))

(declare-fun b!135236 () Bool)

(declare-fun res!64953 () Bool)

(assert (=> b!135236 (=> (not res!64953) (not e!88076))))

(assert (=> b!135236 (= res!64953 (containsKey!176 lt!70677 (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!135237 () Bool)

(assert (=> b!135237 (= e!88074 e!88075)))

(assert (=> b!135237 (= c!25256 (and ((_ is Cons!1712) (toList!869 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670)))) (= (_1!1324 (h!2317 (toList!869 (ite c!24581 call!14666 (ite c!24579 call!14669 call!14670))))) (_1!1324 (ite (or c!24581 c!24579) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (= (and d!41977 c!25259) b!135235))

(assert (= (and d!41977 (not c!25259)) b!135237))

(assert (= (and b!135237 c!25256) b!135231))

(assert (= (and b!135237 (not c!25256)) b!135229))

(assert (= (and b!135229 c!25257) b!135232))

(assert (= (and b!135229 (not c!25257)) b!135234))

(assert (= (or b!135232 b!135234) bm!14874))

(assert (= (or b!135231 bm!14874) bm!14872))

(assert (= (or b!135235 bm!14872) bm!14873))

(assert (= (and bm!14873 c!25258) b!135230))

(assert (= (and bm!14873 (not c!25258)) b!135233))

(assert (= (and d!41977 res!64954) b!135236))

(assert (= (and b!135236 res!64953) b!135228))

(declare-fun m!161015 () Bool)

(assert (=> d!41977 m!161015))

(declare-fun m!161017 () Bool)

(assert (=> d!41977 m!161017))

(declare-fun m!161019 () Bool)

(assert (=> bm!14873 m!161019))

(declare-fun m!161021 () Bool)

(assert (=> b!135230 m!161021))

(declare-fun m!161023 () Bool)

(assert (=> b!135228 m!161023))

(declare-fun m!161025 () Bool)

(assert (=> b!135236 m!161025))

(assert (=> d!40745 d!41977))

(assert (=> b!133164 d!41839))

(declare-fun d!41979 () Bool)

(declare-fun e!88078 () Bool)

(assert (=> d!41979 e!88078))

(declare-fun res!64955 () Bool)

(assert (=> d!41979 (=> res!64955 e!88078)))

(declare-fun lt!70681 () Bool)

(assert (=> d!41979 (= res!64955 (not lt!70681))))

(declare-fun lt!70678 () Bool)

(assert (=> d!41979 (= lt!70681 lt!70678)))

(declare-fun lt!70680 () Unit!4135)

(declare-fun e!88079 () Unit!4135)

(assert (=> d!41979 (= lt!70680 e!88079)))

(declare-fun c!25260 () Bool)

(assert (=> d!41979 (= c!25260 lt!70678)))

(assert (=> d!41979 (= lt!70678 (containsKey!176 (toList!869 lt!69536) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41979 (= (contains!899 lt!69536 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70681)))

(declare-fun b!135238 () Bool)

(declare-fun lt!70679 () Unit!4135)

(assert (=> b!135238 (= e!88079 lt!70679)))

(assert (=> b!135238 (= lt!70679 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69536) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!135238 (isDefined!125 (getValueByKey!172 (toList!869 lt!69536) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135239 () Bool)

(declare-fun Unit!4251 () Unit!4135)

(assert (=> b!135239 (= e!88079 Unit!4251)))

(declare-fun b!135240 () Bool)

(assert (=> b!135240 (= e!88078 (isDefined!125 (getValueByKey!172 (toList!869 lt!69536) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41979 c!25260) b!135238))

(assert (= (and d!41979 (not c!25260)) b!135239))

(assert (= (and d!41979 (not res!64955)) b!135240))

(declare-fun m!161027 () Bool)

(assert (=> d!41979 m!161027))

(declare-fun m!161029 () Bool)

(assert (=> b!135238 m!161029))

(assert (=> b!135238 m!156751))

(assert (=> b!135238 m!156751))

(declare-fun m!161031 () Bool)

(assert (=> b!135238 m!161031))

(assert (=> b!135240 m!156751))

(assert (=> b!135240 m!156751))

(assert (=> b!135240 m!161031))

(assert (=> d!40359 d!41979))

(declare-fun b!135243 () Bool)

(declare-fun e!88081 () Option!178)

(assert (=> b!135243 (= e!88081 (getValueByKey!172 (t!6167 lt!69538) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135244 () Bool)

(assert (=> b!135244 (= e!88081 None!176)))

(declare-fun c!25261 () Bool)

(declare-fun d!41981 () Bool)

(assert (=> d!41981 (= c!25261 (and ((_ is Cons!1712) lt!69538) (= (_1!1324 (h!2317 lt!69538)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88080 () Option!178)

(assert (=> d!41981 (= (getValueByKey!172 lt!69538 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88080)))

(declare-fun b!135241 () Bool)

(assert (=> b!135241 (= e!88080 (Some!177 (_2!1324 (h!2317 lt!69538))))))

(declare-fun b!135242 () Bool)

(assert (=> b!135242 (= e!88080 e!88081)))

(declare-fun c!25262 () Bool)

(assert (=> b!135242 (= c!25262 (and ((_ is Cons!1712) lt!69538) (not (= (_1!1324 (h!2317 lt!69538)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!41981 c!25261) b!135241))

(assert (= (and d!41981 (not c!25261)) b!135242))

(assert (= (and b!135242 c!25262) b!135243))

(assert (= (and b!135242 (not c!25262)) b!135244))

(declare-fun m!161033 () Bool)

(assert (=> b!135243 m!161033))

(assert (=> d!40359 d!41981))

(declare-fun d!41983 () Bool)

(assert (=> d!41983 (= (getValueByKey!172 lt!69538 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70682 () Unit!4135)

(assert (=> d!41983 (= lt!70682 (choose!827 lt!69538 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88082 () Bool)

(assert (=> d!41983 e!88082))

(declare-fun res!64956 () Bool)

(assert (=> d!41983 (=> (not res!64956) (not e!88082))))

(assert (=> d!41983 (= res!64956 (isStrictlySorted!322 lt!69538))))

(assert (=> d!41983 (= (lemmaContainsTupThenGetReturnValue!87 lt!69538 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70682)))

(declare-fun b!135245 () Bool)

(declare-fun res!64957 () Bool)

(assert (=> b!135245 (=> (not res!64957) (not e!88082))))

(assert (=> b!135245 (= res!64957 (containsKey!176 lt!69538 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135246 () Bool)

(assert (=> b!135246 (= e!88082 (contains!902 lt!69538 (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41983 res!64956) b!135245))

(assert (= (and b!135245 res!64957) b!135246))

(assert (=> d!41983 m!156745))

(declare-fun m!161035 () Bool)

(assert (=> d!41983 m!161035))

(declare-fun m!161037 () Bool)

(assert (=> d!41983 m!161037))

(declare-fun m!161039 () Bool)

(assert (=> b!135245 m!161039))

(declare-fun m!161041 () Bool)

(assert (=> b!135246 m!161041))

(assert (=> d!40359 d!41983))

(declare-fun bm!14875 () Bool)

(declare-fun call!14879 () List!1716)

(declare-fun call!14880 () List!1716)

(assert (=> bm!14875 (= call!14879 call!14880)))

(declare-fun d!41985 () Bool)

(declare-fun e!88086 () Bool)

(assert (=> d!41985 e!88086))

(declare-fun res!64959 () Bool)

(assert (=> d!41985 (=> (not res!64959) (not e!88086))))

(declare-fun lt!70683 () List!1716)

(assert (=> d!41985 (= res!64959 (isStrictlySorted!322 lt!70683))))

(declare-fun e!88084 () List!1716)

(assert (=> d!41985 (= lt!70683 e!88084)))

(declare-fun c!25266 () Bool)

(assert (=> d!41985 (= c!25266 (and ((_ is Cons!1712) (toList!869 call!14650)) (bvslt (_1!1324 (h!2317 (toList!869 call!14650))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41985 (isStrictlySorted!322 (toList!869 call!14650))))

(assert (=> d!41985 (= (insertStrictlySorted!90 (toList!869 call!14650) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70683)))

(declare-fun b!135247 () Bool)

(assert (=> b!135247 (= e!88086 (contains!902 lt!70683 (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135248 () Bool)

(declare-fun c!25264 () Bool)

(assert (=> b!135248 (= c!25264 (and ((_ is Cons!1712) (toList!869 call!14650)) (bvsgt (_1!1324 (h!2317 (toList!869 call!14650))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88085 () List!1716)

(declare-fun e!88087 () List!1716)

(assert (=> b!135248 (= e!88085 e!88087)))

(declare-fun b!135249 () Bool)

(declare-fun e!88083 () List!1716)

(assert (=> b!135249 (= e!88083 (insertStrictlySorted!90 (t!6167 (toList!869 call!14650)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135250 () Bool)

(assert (=> b!135250 (= e!88085 call!14879)))

(declare-fun b!135251 () Bool)

(declare-fun call!14878 () List!1716)

(assert (=> b!135251 (= e!88087 call!14878)))

(declare-fun c!25263 () Bool)

(declare-fun b!135252 () Bool)

(assert (=> b!135252 (= e!88083 (ite c!25263 (t!6167 (toList!869 call!14650)) (ite c!25264 (Cons!1712 (h!2317 (toList!869 call!14650)) (t!6167 (toList!869 call!14650))) Nil!1713)))))

(declare-fun b!135253 () Bool)

(assert (=> b!135253 (= e!88087 call!14878)))

(declare-fun b!135254 () Bool)

(assert (=> b!135254 (= e!88084 call!14880)))

(declare-fun bm!14876 () Bool)

(assert (=> bm!14876 (= call!14880 ($colon$colon!92 e!88083 (ite c!25266 (h!2317 (toList!869 call!14650)) (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25265 () Bool)

(assert (=> bm!14876 (= c!25265 c!25266)))

(declare-fun bm!14877 () Bool)

(assert (=> bm!14877 (= call!14878 call!14879)))

(declare-fun b!135255 () Bool)

(declare-fun res!64958 () Bool)

(assert (=> b!135255 (=> (not res!64958) (not e!88086))))

(assert (=> b!135255 (= res!64958 (containsKey!176 lt!70683 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135256 () Bool)

(assert (=> b!135256 (= e!88084 e!88085)))

(assert (=> b!135256 (= c!25263 (and ((_ is Cons!1712) (toList!869 call!14650)) (= (_1!1324 (h!2317 (toList!869 call!14650))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41985 c!25266) b!135254))

(assert (= (and d!41985 (not c!25266)) b!135256))

(assert (= (and b!135256 c!25263) b!135250))

(assert (= (and b!135256 (not c!25263)) b!135248))

(assert (= (and b!135248 c!25264) b!135251))

(assert (= (and b!135248 (not c!25264)) b!135253))

(assert (= (or b!135251 b!135253) bm!14877))

(assert (= (or b!135250 bm!14877) bm!14875))

(assert (= (or b!135254 bm!14875) bm!14876))

(assert (= (and bm!14876 c!25265) b!135249))

(assert (= (and bm!14876 (not c!25265)) b!135252))

(assert (= (and d!41985 res!64959) b!135255))

(assert (= (and b!135255 res!64958) b!135247))

(declare-fun m!161043 () Bool)

(assert (=> d!41985 m!161043))

(declare-fun m!161045 () Bool)

(assert (=> d!41985 m!161045))

(declare-fun m!161047 () Bool)

(assert (=> bm!14876 m!161047))

(declare-fun m!161049 () Bool)

(assert (=> b!135249 m!161049))

(declare-fun m!161051 () Bool)

(assert (=> b!135247 m!161051))

(declare-fun m!161053 () Bool)

(assert (=> b!135255 m!161053))

(assert (=> d!40359 d!41985))

(assert (=> b!133441 d!41803))

(assert (=> b!133441 d!41805))

(declare-fun d!41987 () Bool)

(declare-fun res!64960 () Bool)

(declare-fun e!88088 () Bool)

(assert (=> d!41987 (=> res!64960 e!88088)))

(assert (=> d!41987 (= res!64960 (and ((_ is Cons!1712) (toList!869 lt!69408)) (= (_1!1324 (h!2317 (toList!869 lt!69408))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!41987 (= (containsKey!176 (toList!869 lt!69408) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!88088)))

(declare-fun b!135257 () Bool)

(declare-fun e!88089 () Bool)

(assert (=> b!135257 (= e!88088 e!88089)))

(declare-fun res!64961 () Bool)

(assert (=> b!135257 (=> (not res!64961) (not e!88089))))

(assert (=> b!135257 (= res!64961 (and (or (not ((_ is Cons!1712) (toList!869 lt!69408))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69408))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1712) (toList!869 lt!69408)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69408))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!135258 () Bool)

(assert (=> b!135258 (= e!88089 (containsKey!176 (t!6167 (toList!869 lt!69408)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!41987 (not res!64960)) b!135257))

(assert (= (and b!135257 res!64961) b!135258))

(assert (=> b!135258 m!155949))

(declare-fun m!161055 () Bool)

(assert (=> b!135258 m!161055))

(assert (=> d!40623 d!41987))

(declare-fun d!41989 () Bool)

(assert (=> d!41989 (= (apply!116 (+!175 lt!69949 (tuple2!2627 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69968) (apply!116 lt!69949 lt!69968))))

(declare-fun lt!70684 () Unit!4135)

(assert (=> d!41989 (= lt!70684 (choose!822 lt!69949 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69968))))

(declare-fun e!88090 () Bool)

(assert (=> d!41989 e!88090))

(declare-fun res!64962 () Bool)

(assert (=> d!41989 (=> (not res!64962) (not e!88090))))

(assert (=> d!41989 (= res!64962 (contains!899 lt!69949 lt!69968))))

(assert (=> d!41989 (= (addApplyDifferent!92 lt!69949 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69968) lt!70684)))

(declare-fun b!135259 () Bool)

(assert (=> b!135259 (= e!88090 (not (= lt!69968 lt!69952)))))

(assert (= (and d!41989 res!64962) b!135259))

(declare-fun m!161057 () Bool)

(assert (=> d!41989 m!161057))

(assert (=> d!41989 m!158035))

(assert (=> d!41989 m!158033))

(assert (=> d!41989 m!158035))

(assert (=> d!41989 m!158043))

(assert (=> d!41989 m!155895))

(declare-fun m!161059 () Bool)

(assert (=> d!41989 m!161059))

(assert (=> b!133694 d!41989))

(declare-fun d!41991 () Bool)

(declare-fun e!88091 () Bool)

(assert (=> d!41991 e!88091))

(declare-fun res!64964 () Bool)

(assert (=> d!41991 (=> (not res!64964) (not e!88091))))

(declare-fun lt!70685 () ListLongMap!1707)

(assert (=> d!41991 (= res!64964 (contains!899 lt!70685 (_1!1324 (tuple2!2627 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70687 () List!1716)

(assert (=> d!41991 (= lt!70685 (ListLongMap!1708 lt!70687))))

(declare-fun lt!70688 () Unit!4135)

(declare-fun lt!70686 () Unit!4135)

(assert (=> d!41991 (= lt!70688 lt!70686)))

(assert (=> d!41991 (= (getValueByKey!172 lt!70687 (_1!1324 (tuple2!2627 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41991 (= lt!70686 (lemmaContainsTupThenGetReturnValue!87 lt!70687 (_1!1324 (tuple2!2627 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41991 (= lt!70687 (insertStrictlySorted!90 (toList!869 lt!69951) (_1!1324 (tuple2!2627 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41991 (= (+!175 lt!69951 (tuple2!2627 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70685)))

(declare-fun b!135260 () Bool)

(declare-fun res!64963 () Bool)

(assert (=> b!135260 (=> (not res!64963) (not e!88091))))

(assert (=> b!135260 (= res!64963 (= (getValueByKey!172 (toList!869 lt!70685) (_1!1324 (tuple2!2627 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135261 () Bool)

(assert (=> b!135261 (= e!88091 (contains!902 (toList!869 lt!70685) (tuple2!2627 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41991 res!64964) b!135260))

(assert (= (and b!135260 res!64963) b!135261))

(declare-fun m!161061 () Bool)

(assert (=> d!41991 m!161061))

(declare-fun m!161063 () Bool)

(assert (=> d!41991 m!161063))

(declare-fun m!161065 () Bool)

(assert (=> d!41991 m!161065))

(declare-fun m!161067 () Bool)

(assert (=> d!41991 m!161067))

(declare-fun m!161069 () Bool)

(assert (=> b!135260 m!161069))

(declare-fun m!161071 () Bool)

(assert (=> b!135261 m!161071))

(assert (=> b!133694 d!41991))

(declare-fun d!41993 () Bool)

(declare-fun e!88092 () Bool)

(assert (=> d!41993 e!88092))

(declare-fun res!64965 () Bool)

(assert (=> d!41993 (=> res!64965 e!88092)))

(declare-fun lt!70692 () Bool)

(assert (=> d!41993 (= res!64965 (not lt!70692))))

(declare-fun lt!70689 () Bool)

(assert (=> d!41993 (= lt!70692 lt!70689)))

(declare-fun lt!70691 () Unit!4135)

(declare-fun e!88093 () Unit!4135)

(assert (=> d!41993 (= lt!70691 e!88093)))

(declare-fun c!25267 () Bool)

(assert (=> d!41993 (= c!25267 lt!70689)))

(assert (=> d!41993 (= lt!70689 (containsKey!176 (toList!869 (+!175 lt!69963 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16)))) lt!69962))))

(assert (=> d!41993 (= (contains!899 (+!175 lt!69963 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16))) lt!69962) lt!70692)))

(declare-fun b!135262 () Bool)

(declare-fun lt!70690 () Unit!4135)

(assert (=> b!135262 (= e!88093 lt!70690)))

(assert (=> b!135262 (= lt!70690 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69963 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16)))) lt!69962))))

(assert (=> b!135262 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69963 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16)))) lt!69962))))

(declare-fun b!135263 () Bool)

(declare-fun Unit!4252 () Unit!4135)

(assert (=> b!135263 (= e!88093 Unit!4252)))

(declare-fun b!135264 () Bool)

(assert (=> b!135264 (= e!88092 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69963 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16)))) lt!69962)))))

(assert (= (and d!41993 c!25267) b!135262))

(assert (= (and d!41993 (not c!25267)) b!135263))

(assert (= (and d!41993 (not res!64965)) b!135264))

(declare-fun m!161073 () Bool)

(assert (=> d!41993 m!161073))

(declare-fun m!161075 () Bool)

(assert (=> b!135262 m!161075))

(declare-fun m!161077 () Bool)

(assert (=> b!135262 m!161077))

(assert (=> b!135262 m!161077))

(declare-fun m!161079 () Bool)

(assert (=> b!135262 m!161079))

(assert (=> b!135264 m!161077))

(assert (=> b!135264 m!161077))

(assert (=> b!135264 m!161079))

(assert (=> b!133694 d!41993))

(declare-fun d!41995 () Bool)

(assert (=> d!41995 (= (apply!116 (+!175 lt!69951 (tuple2!2627 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69964) (apply!116 lt!69951 lt!69964))))

(declare-fun lt!70693 () Unit!4135)

(assert (=> d!41995 (= lt!70693 (choose!822 lt!69951 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69964))))

(declare-fun e!88094 () Bool)

(assert (=> d!41995 e!88094))

(declare-fun res!64966 () Bool)

(assert (=> d!41995 (=> (not res!64966) (not e!88094))))

(assert (=> d!41995 (= res!64966 (contains!899 lt!69951 lt!69964))))

(assert (=> d!41995 (= (addApplyDifferent!92 lt!69951 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69964) lt!70693)))

(declare-fun b!135265 () Bool)

(assert (=> b!135265 (= e!88094 (not (= lt!69964 lt!69966)))))

(assert (= (and d!41995 res!64966) b!135265))

(declare-fun m!161081 () Bool)

(assert (=> d!41995 m!161081))

(assert (=> d!41995 m!158023))

(assert (=> d!41995 m!158039))

(assert (=> d!41995 m!158023))

(assert (=> d!41995 m!158041))

(assert (=> d!41995 m!155895))

(declare-fun m!161083 () Bool)

(assert (=> d!41995 m!161083))

(assert (=> b!133694 d!41995))

(declare-fun d!41997 () Bool)

(assert (=> d!41997 (= (apply!116 (+!175 lt!69951 (tuple2!2627 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69964) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69951 (tuple2!2627 lt!69966 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69964)))))

(declare-fun bs!5655 () Bool)

(assert (= bs!5655 d!41997))

(declare-fun m!161085 () Bool)

(assert (=> bs!5655 m!161085))

(assert (=> bs!5655 m!161085))

(declare-fun m!161087 () Bool)

(assert (=> bs!5655 m!161087))

(assert (=> b!133694 d!41997))

(declare-fun d!41999 () Bool)

(assert (=> d!41999 (= (apply!116 lt!69951 lt!69964) (get!1486 (getValueByKey!172 (toList!869 lt!69951) lt!69964)))))

(declare-fun bs!5656 () Bool)

(assert (= bs!5656 d!41999))

(declare-fun m!161089 () Bool)

(assert (=> bs!5656 m!161089))

(assert (=> bs!5656 m!161089))

(declare-fun m!161091 () Bool)

(assert (=> bs!5656 m!161091))

(assert (=> b!133694 d!41999))

(declare-fun d!42001 () Bool)

(declare-fun e!88095 () Bool)

(assert (=> d!42001 e!88095))

(declare-fun res!64968 () Bool)

(assert (=> d!42001 (=> (not res!64968) (not e!88095))))

(declare-fun lt!70694 () ListLongMap!1707)

(assert (=> d!42001 (= res!64968 (contains!899 lt!70694 (_1!1324 (tuple2!2627 lt!69956 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70696 () List!1716)

(assert (=> d!42001 (= lt!70694 (ListLongMap!1708 lt!70696))))

(declare-fun lt!70697 () Unit!4135)

(declare-fun lt!70695 () Unit!4135)

(assert (=> d!42001 (= lt!70697 lt!70695)))

(assert (=> d!42001 (= (getValueByKey!172 lt!70696 (_1!1324 (tuple2!2627 lt!69956 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69956 (zeroValue!2720 newMap!16)))))))

(assert (=> d!42001 (= lt!70695 (lemmaContainsTupThenGetReturnValue!87 lt!70696 (_1!1324 (tuple2!2627 lt!69956 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69956 (zeroValue!2720 newMap!16)))))))

(assert (=> d!42001 (= lt!70696 (insertStrictlySorted!90 (toList!869 lt!69954) (_1!1324 (tuple2!2627 lt!69956 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69956 (zeroValue!2720 newMap!16)))))))

(assert (=> d!42001 (= (+!175 lt!69954 (tuple2!2627 lt!69956 (zeroValue!2720 newMap!16))) lt!70694)))

(declare-fun b!135266 () Bool)

(declare-fun res!64967 () Bool)

(assert (=> b!135266 (=> (not res!64967) (not e!88095))))

(assert (=> b!135266 (= res!64967 (= (getValueByKey!172 (toList!869 lt!70694) (_1!1324 (tuple2!2627 lt!69956 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69956 (zeroValue!2720 newMap!16))))))))

(declare-fun b!135267 () Bool)

(assert (=> b!135267 (= e!88095 (contains!902 (toList!869 lt!70694) (tuple2!2627 lt!69956 (zeroValue!2720 newMap!16))))))

(assert (= (and d!42001 res!64968) b!135266))

(assert (= (and b!135266 res!64967) b!135267))

(declare-fun m!161093 () Bool)

(assert (=> d!42001 m!161093))

(declare-fun m!161095 () Bool)

(assert (=> d!42001 m!161095))

(declare-fun m!161097 () Bool)

(assert (=> d!42001 m!161097))

(declare-fun m!161099 () Bool)

(assert (=> d!42001 m!161099))

(declare-fun m!161101 () Bool)

(assert (=> b!135266 m!161101))

(declare-fun m!161103 () Bool)

(assert (=> b!135267 m!161103))

(assert (=> b!133694 d!42001))

(declare-fun d!42003 () Bool)

(assert (=> d!42003 (= (apply!116 lt!69949 lt!69968) (get!1486 (getValueByKey!172 (toList!869 lt!69949) lt!69968)))))

(declare-fun bs!5657 () Bool)

(assert (= bs!5657 d!42003))

(declare-fun m!161105 () Bool)

(assert (=> bs!5657 m!161105))

(assert (=> bs!5657 m!161105))

(declare-fun m!161107 () Bool)

(assert (=> bs!5657 m!161107))

(assert (=> b!133694 d!42003))

(declare-fun d!42005 () Bool)

(assert (=> d!42005 (= (apply!116 (+!175 lt!69954 (tuple2!2627 lt!69956 (zeroValue!2720 newMap!16))) lt!69950) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69954 (tuple2!2627 lt!69956 (zeroValue!2720 newMap!16)))) lt!69950)))))

(declare-fun bs!5658 () Bool)

(assert (= bs!5658 d!42005))

(declare-fun m!161109 () Bool)

(assert (=> bs!5658 m!161109))

(assert (=> bs!5658 m!161109))

(declare-fun m!161111 () Bool)

(assert (=> bs!5658 m!161111))

(assert (=> b!133694 d!42005))

(declare-fun d!42007 () Bool)

(assert (=> d!42007 (= (apply!116 (+!175 lt!69954 (tuple2!2627 lt!69956 (zeroValue!2720 newMap!16))) lt!69950) (apply!116 lt!69954 lt!69950))))

(declare-fun lt!70698 () Unit!4135)

(assert (=> d!42007 (= lt!70698 (choose!822 lt!69954 lt!69956 (zeroValue!2720 newMap!16) lt!69950))))

(declare-fun e!88096 () Bool)

(assert (=> d!42007 e!88096))

(declare-fun res!64969 () Bool)

(assert (=> d!42007 (=> (not res!64969) (not e!88096))))

(assert (=> d!42007 (= res!64969 (contains!899 lt!69954 lt!69950))))

(assert (=> d!42007 (= (addApplyDifferent!92 lt!69954 lt!69956 (zeroValue!2720 newMap!16) lt!69950) lt!70698)))

(declare-fun b!135268 () Bool)

(assert (=> b!135268 (= e!88096 (not (= lt!69950 lt!69956)))))

(assert (= (and d!42007 res!64969) b!135268))

(declare-fun m!161113 () Bool)

(assert (=> d!42007 m!161113))

(assert (=> d!42007 m!158027))

(assert (=> d!42007 m!158047))

(assert (=> d!42007 m!158027))

(assert (=> d!42007 m!158029))

(declare-fun m!161115 () Bool)

(assert (=> d!42007 m!161115))

(assert (=> b!133694 d!42007))

(assert (=> b!133694 d!41691))

(declare-fun d!42009 () Bool)

(assert (=> d!42009 (= (apply!116 lt!69954 lt!69950) (get!1486 (getValueByKey!172 (toList!869 lt!69954) lt!69950)))))

(declare-fun bs!5659 () Bool)

(assert (= bs!5659 d!42009))

(declare-fun m!161117 () Bool)

(assert (=> bs!5659 m!161117))

(assert (=> bs!5659 m!161117))

(declare-fun m!161119 () Bool)

(assert (=> bs!5659 m!161119))

(assert (=> b!133694 d!42009))

(declare-fun d!42011 () Bool)

(assert (=> d!42011 (contains!899 (+!175 lt!69963 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16))) lt!69962)))

(declare-fun lt!70699 () Unit!4135)

(assert (=> d!42011 (= lt!70699 (choose!823 lt!69963 lt!69957 (zeroValue!2720 newMap!16) lt!69962))))

(assert (=> d!42011 (contains!899 lt!69963 lt!69962)))

(assert (=> d!42011 (= (addStillContains!92 lt!69963 lt!69957 (zeroValue!2720 newMap!16) lt!69962) lt!70699)))

(declare-fun bs!5660 () Bool)

(assert (= bs!5660 d!42011))

(assert (=> bs!5660 m!158025))

(assert (=> bs!5660 m!158025))

(assert (=> bs!5660 m!158049))

(declare-fun m!161121 () Bool)

(assert (=> bs!5660 m!161121))

(declare-fun m!161123 () Bool)

(assert (=> bs!5660 m!161123))

(assert (=> b!133694 d!42011))

(declare-fun d!42013 () Bool)

(declare-fun e!88097 () Bool)

(assert (=> d!42013 e!88097))

(declare-fun res!64971 () Bool)

(assert (=> d!42013 (=> (not res!64971) (not e!88097))))

(declare-fun lt!70700 () ListLongMap!1707)

(assert (=> d!42013 (= res!64971 (contains!899 lt!70700 (_1!1324 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70702 () List!1716)

(assert (=> d!42013 (= lt!70700 (ListLongMap!1708 lt!70702))))

(declare-fun lt!70703 () Unit!4135)

(declare-fun lt!70701 () Unit!4135)

(assert (=> d!42013 (= lt!70703 lt!70701)))

(assert (=> d!42013 (= (getValueByKey!172 lt!70702 (_1!1324 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16)))))))

(assert (=> d!42013 (= lt!70701 (lemmaContainsTupThenGetReturnValue!87 lt!70702 (_1!1324 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16)))))))

(assert (=> d!42013 (= lt!70702 (insertStrictlySorted!90 (toList!869 lt!69963) (_1!1324 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16)))))))

(assert (=> d!42013 (= (+!175 lt!69963 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16))) lt!70700)))

(declare-fun b!135269 () Bool)

(declare-fun res!64970 () Bool)

(assert (=> b!135269 (=> (not res!64970) (not e!88097))))

(assert (=> b!135269 (= res!64970 (= (getValueByKey!172 (toList!869 lt!70700) (_1!1324 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16))))))))

(declare-fun b!135270 () Bool)

(assert (=> b!135270 (= e!88097 (contains!902 (toList!869 lt!70700) (tuple2!2627 lt!69957 (zeroValue!2720 newMap!16))))))

(assert (= (and d!42013 res!64971) b!135269))

(assert (= (and b!135269 res!64970) b!135270))

(declare-fun m!161125 () Bool)

(assert (=> d!42013 m!161125))

(declare-fun m!161127 () Bool)

(assert (=> d!42013 m!161127))

(declare-fun m!161129 () Bool)

(assert (=> d!42013 m!161129))

(declare-fun m!161131 () Bool)

(assert (=> d!42013 m!161131))

(declare-fun m!161133 () Bool)

(assert (=> b!135269 m!161133))

(declare-fun m!161135 () Bool)

(assert (=> b!135270 m!161135))

(assert (=> b!133694 d!42013))

(declare-fun d!42015 () Bool)

(declare-fun e!88098 () Bool)

(assert (=> d!42015 e!88098))

(declare-fun res!64973 () Bool)

(assert (=> d!42015 (=> (not res!64973) (not e!88098))))

(declare-fun lt!70704 () ListLongMap!1707)

(assert (=> d!42015 (= res!64973 (contains!899 lt!70704 (_1!1324 (tuple2!2627 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70706 () List!1716)

(assert (=> d!42015 (= lt!70704 (ListLongMap!1708 lt!70706))))

(declare-fun lt!70707 () Unit!4135)

(declare-fun lt!70705 () Unit!4135)

(assert (=> d!42015 (= lt!70707 lt!70705)))

(assert (=> d!42015 (= (getValueByKey!172 lt!70706 (_1!1324 (tuple2!2627 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42015 (= lt!70705 (lemmaContainsTupThenGetReturnValue!87 lt!70706 (_1!1324 (tuple2!2627 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42015 (= lt!70706 (insertStrictlySorted!90 (toList!869 lt!69949) (_1!1324 (tuple2!2627 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42015 (= (+!175 lt!69949 (tuple2!2627 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70704)))

(declare-fun b!135271 () Bool)

(declare-fun res!64972 () Bool)

(assert (=> b!135271 (=> (not res!64972) (not e!88098))))

(assert (=> b!135271 (= res!64972 (= (getValueByKey!172 (toList!869 lt!70704) (_1!1324 (tuple2!2627 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135272 () Bool)

(assert (=> b!135272 (= e!88098 (contains!902 (toList!869 lt!70704) (tuple2!2627 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42015 res!64973) b!135271))

(assert (= (and b!135271 res!64972) b!135272))

(declare-fun m!161137 () Bool)

(assert (=> d!42015 m!161137))

(declare-fun m!161139 () Bool)

(assert (=> d!42015 m!161139))

(declare-fun m!161141 () Bool)

(assert (=> d!42015 m!161141))

(declare-fun m!161143 () Bool)

(assert (=> d!42015 m!161143))

(declare-fun m!161145 () Bool)

(assert (=> b!135271 m!161145))

(declare-fun m!161147 () Bool)

(assert (=> b!135272 m!161147))

(assert (=> b!133694 d!42015))

(declare-fun d!42017 () Bool)

(assert (=> d!42017 (= (apply!116 (+!175 lt!69949 (tuple2!2627 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69968) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69949 (tuple2!2627 lt!69952 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69968)))))

(declare-fun bs!5661 () Bool)

(assert (= bs!5661 d!42017))

(declare-fun m!161149 () Bool)

(assert (=> bs!5661 m!161149))

(assert (=> bs!5661 m!161149))

(declare-fun m!161151 () Bool)

(assert (=> bs!5661 m!161151))

(assert (=> b!133694 d!42017))

(declare-fun b!135273 () Bool)

(declare-fun e!88100 () (_ BitVec 32))

(declare-fun e!88099 () (_ BitVec 32))

(assert (=> b!135273 (= e!88100 e!88099)))

(declare-fun c!25268 () Bool)

(assert (=> b!135273 (= c!25268 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000)))))

(declare-fun b!135274 () Bool)

(declare-fun call!14881 () (_ BitVec 32))

(assert (=> b!135274 (= e!88099 (bvadd #b00000000000000000000000000000001 call!14881))))

(declare-fun b!135275 () Bool)

(assert (=> b!135275 (= e!88099 call!14881)))

(declare-fun d!42019 () Bool)

(declare-fun lt!70708 () (_ BitVec 32))

(assert (=> d!42019 (and (bvsge lt!70708 #b00000000000000000000000000000000) (bvsle lt!70708 (bvsub (size!2530 (_keys!4614 (_2!1325 lt!69358))) #b00000000000000000000000000000000)))))

(assert (=> d!42019 (= lt!70708 e!88100)))

(declare-fun c!25269 () Bool)

(assert (=> d!42019 (= c!25269 (bvsge #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69358)))))))

(assert (=> d!42019 (and (bvsle #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69358)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2530 (_keys!4614 (_2!1325 lt!69358))) (size!2530 (_keys!4614 (_2!1325 lt!69358)))))))

(assert (=> d!42019 (= (arrayCountValidKeys!0 (_keys!4614 (_2!1325 lt!69358)) #b00000000000000000000000000000000 (size!2530 (_keys!4614 (_2!1325 lt!69358)))) lt!70708)))

(declare-fun b!135276 () Bool)

(assert (=> b!135276 (= e!88100 #b00000000000000000000000000000000)))

(declare-fun bm!14878 () Bool)

(assert (=> bm!14878 (= call!14881 (arrayCountValidKeys!0 (_keys!4614 (_2!1325 lt!69358)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (_2!1325 lt!69358)))))))

(assert (= (and d!42019 c!25269) b!135276))

(assert (= (and d!42019 (not c!25269)) b!135273))

(assert (= (and b!135273 c!25268) b!135274))

(assert (= (and b!135273 (not c!25268)) b!135275))

(assert (= (or b!135274 b!135275) bm!14878))

(assert (=> b!135273 m!159347))

(assert (=> b!135273 m!159347))

(assert (=> b!135273 m!159355))

(declare-fun m!161153 () Bool)

(assert (=> bm!14878 m!161153))

(assert (=> b!133469 d!42019))

(assert (=> b!133593 d!41263))

(declare-fun d!42021 () Bool)

(declare-fun e!88101 () Bool)

(assert (=> d!42021 e!88101))

(declare-fun res!64975 () Bool)

(assert (=> d!42021 (=> (not res!64975) (not e!88101))))

(declare-fun lt!70709 () ListLongMap!1707)

(assert (=> d!42021 (= res!64975 (contains!899 lt!70709 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70711 () List!1716)

(assert (=> d!42021 (= lt!70709 (ListLongMap!1708 lt!70711))))

(declare-fun lt!70712 () Unit!4135)

(declare-fun lt!70710 () Unit!4135)

(assert (=> d!42021 (= lt!70712 lt!70710)))

(assert (=> d!42021 (= (getValueByKey!172 lt!70711 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!42021 (= lt!70710 (lemmaContainsTupThenGetReturnValue!87 lt!70711 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!42021 (= lt!70711 (insertStrictlySorted!90 (toList!869 call!14746) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!42021 (= (+!175 call!14746 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70709)))

(declare-fun b!135277 () Bool)

(declare-fun res!64974 () Bool)

(assert (=> b!135277 (=> (not res!64974) (not e!88101))))

(assert (=> b!135277 (= res!64974 (= (getValueByKey!172 (toList!869 lt!70709) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!135278 () Bool)

(assert (=> b!135278 (= e!88101 (contains!902 (toList!869 lt!70709) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!42021 res!64975) b!135277))

(assert (= (and b!135277 res!64974) b!135278))

(declare-fun m!161155 () Bool)

(assert (=> d!42021 m!161155))

(declare-fun m!161157 () Bool)

(assert (=> d!42021 m!161157))

(declare-fun m!161159 () Bool)

(assert (=> d!42021 m!161159))

(declare-fun m!161161 () Bool)

(assert (=> d!42021 m!161161))

(declare-fun m!161163 () Bool)

(assert (=> b!135277 m!161163))

(declare-fun m!161165 () Bool)

(assert (=> b!135278 m!161165))

(assert (=> b!133573 d!42021))

(declare-fun d!42023 () Bool)

(declare-fun e!88102 () Bool)

(assert (=> d!42023 e!88102))

(declare-fun res!64976 () Bool)

(assert (=> d!42023 (=> res!64976 e!88102)))

(declare-fun lt!70716 () Bool)

(assert (=> d!42023 (= res!64976 (not lt!70716))))

(declare-fun lt!70713 () Bool)

(assert (=> d!42023 (= lt!70716 lt!70713)))

(declare-fun lt!70715 () Unit!4135)

(declare-fun e!88103 () Unit!4135)

(assert (=> d!42023 (= lt!70715 e!88103)))

(declare-fun c!25270 () Bool)

(assert (=> d!42023 (= c!25270 lt!70713)))

(assert (=> d!42023 (= lt!70713 (containsKey!176 (toList!869 lt!69996) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))

(assert (=> d!42023 (= (contains!899 lt!69996 (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))) lt!70716)))

(declare-fun b!135279 () Bool)

(declare-fun lt!70714 () Unit!4135)

(assert (=> b!135279 (= e!88103 lt!70714)))

(assert (=> b!135279 (= lt!70714 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69996) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))

(assert (=> b!135279 (isDefined!125 (getValueByKey!172 (toList!869 lt!69996) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135280 () Bool)

(declare-fun Unit!4253 () Unit!4135)

(assert (=> b!135280 (= e!88103 Unit!4253)))

(declare-fun b!135281 () Bool)

(assert (=> b!135281 (= e!88102 (isDefined!125 (getValueByKey!172 (toList!869 lt!69996) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!42023 c!25270) b!135279))

(assert (= (and d!42023 (not c!25270)) b!135280))

(assert (= (and d!42023 (not res!64976)) b!135281))

(declare-fun m!161167 () Bool)

(assert (=> d!42023 m!161167))

(declare-fun m!161169 () Bool)

(assert (=> b!135279 m!161169))

(assert (=> b!135279 m!158189))

(assert (=> b!135279 m!158189))

(declare-fun m!161171 () Bool)

(assert (=> b!135279 m!161171))

(assert (=> b!135281 m!158189))

(assert (=> b!135281 m!158189))

(assert (=> b!135281 m!161171))

(assert (=> d!40791 d!42023))

(declare-fun b!135284 () Bool)

(declare-fun e!88105 () Option!178)

(assert (=> b!135284 (= e!88105 (getValueByKey!172 (t!6167 lt!69998) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135285 () Bool)

(assert (=> b!135285 (= e!88105 None!176)))

(declare-fun c!25271 () Bool)

(declare-fun d!42025 () Bool)

(assert (=> d!42025 (= c!25271 (and ((_ is Cons!1712) lt!69998) (= (_1!1324 (h!2317 lt!69998)) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))))))

(declare-fun e!88104 () Option!178)

(assert (=> d!42025 (= (getValueByKey!172 lt!69998 (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))) e!88104)))

(declare-fun b!135282 () Bool)

(assert (=> b!135282 (= e!88104 (Some!177 (_2!1324 (h!2317 lt!69998))))))

(declare-fun b!135283 () Bool)

(assert (=> b!135283 (= e!88104 e!88105)))

(declare-fun c!25272 () Bool)

(assert (=> b!135283 (= c!25272 (and ((_ is Cons!1712) lt!69998) (not (= (_1!1324 (h!2317 lt!69998)) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!42025 c!25271) b!135282))

(assert (= (and d!42025 (not c!25271)) b!135283))

(assert (= (and b!135283 c!25272) b!135284))

(assert (= (and b!135283 (not c!25272)) b!135285))

(declare-fun m!161173 () Bool)

(assert (=> b!135284 m!161173))

(assert (=> d!40791 d!42025))

(declare-fun d!42027 () Bool)

(assert (=> d!42027 (= (getValueByKey!172 lt!69998 (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70717 () Unit!4135)

(assert (=> d!42027 (= lt!70717 (choose!827 lt!69998 (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))

(declare-fun e!88106 () Bool)

(assert (=> d!42027 e!88106))

(declare-fun res!64977 () Bool)

(assert (=> d!42027 (=> (not res!64977) (not e!88106))))

(assert (=> d!42027 (= res!64977 (isStrictlySorted!322 lt!69998))))

(assert (=> d!42027 (= (lemmaContainsTupThenGetReturnValue!87 lt!69998 (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))) lt!70717)))

(declare-fun b!135286 () Bool)

(declare-fun res!64978 () Bool)

(assert (=> b!135286 (=> (not res!64978) (not e!88106))))

(assert (=> b!135286 (= res!64978 (containsKey!176 lt!69998 (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135287 () Bool)

(assert (=> b!135287 (= e!88106 (contains!902 lt!69998 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!42027 res!64977) b!135286))

(assert (= (and b!135286 res!64978) b!135287))

(assert (=> d!42027 m!158183))

(declare-fun m!161175 () Bool)

(assert (=> d!42027 m!161175))

(declare-fun m!161177 () Bool)

(assert (=> d!42027 m!161177))

(declare-fun m!161179 () Bool)

(assert (=> b!135286 m!161179))

(declare-fun m!161181 () Bool)

(assert (=> b!135287 m!161181))

(assert (=> d!40791 d!42027))

(declare-fun bm!14879 () Bool)

(declare-fun call!14883 () List!1716)

(declare-fun call!14884 () List!1716)

(assert (=> bm!14879 (= call!14883 call!14884)))

(declare-fun d!42029 () Bool)

(declare-fun e!88110 () Bool)

(assert (=> d!42029 e!88110))

(declare-fun res!64980 () Bool)

(assert (=> d!42029 (=> (not res!64980) (not e!88110))))

(declare-fun lt!70718 () List!1716)

(assert (=> d!42029 (= res!64980 (isStrictlySorted!322 lt!70718))))

(declare-fun e!88108 () List!1716)

(assert (=> d!42029 (= lt!70718 e!88108)))

(declare-fun c!25276 () Bool)

(assert (=> d!42029 (= c!25276 (and ((_ is Cons!1712) (toList!869 lt!69251)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69251))) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))))))

(assert (=> d!42029 (isStrictlySorted!322 (toList!869 lt!69251))))

(assert (=> d!42029 (= (insertStrictlySorted!90 (toList!869 lt!69251) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))) lt!70718)))

(declare-fun b!135288 () Bool)

(assert (=> b!135288 (= e!88110 (contains!902 lt!70718 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))))))

(declare-fun b!135289 () Bool)

(declare-fun c!25274 () Bool)

(assert (=> b!135289 (= c!25274 (and ((_ is Cons!1712) (toList!869 lt!69251)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69251))) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))))))

(declare-fun e!88109 () List!1716)

(declare-fun e!88111 () List!1716)

(assert (=> b!135289 (= e!88109 e!88111)))

(declare-fun e!88107 () List!1716)

(declare-fun b!135290 () Bool)

(assert (=> b!135290 (= e!88107 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69251)) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135291 () Bool)

(assert (=> b!135291 (= e!88109 call!14883)))

(declare-fun b!135292 () Bool)

(declare-fun call!14882 () List!1716)

(assert (=> b!135292 (= e!88111 call!14882)))

(declare-fun c!25273 () Bool)

(declare-fun b!135293 () Bool)

(assert (=> b!135293 (= e!88107 (ite c!25273 (t!6167 (toList!869 lt!69251)) (ite c!25274 (Cons!1712 (h!2317 (toList!869 lt!69251)) (t!6167 (toList!869 lt!69251))) Nil!1713)))))

(declare-fun b!135294 () Bool)

(assert (=> b!135294 (= e!88111 call!14882)))

(declare-fun b!135295 () Bool)

(assert (=> b!135295 (= e!88108 call!14884)))

(declare-fun bm!14880 () Bool)

(assert (=> bm!14880 (= call!14884 ($colon$colon!92 e!88107 (ite c!25276 (h!2317 (toList!869 lt!69251)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))))

(declare-fun c!25275 () Bool)

(assert (=> bm!14880 (= c!25275 c!25276)))

(declare-fun bm!14881 () Bool)

(assert (=> bm!14881 (= call!14882 call!14883)))

(declare-fun b!135296 () Bool)

(declare-fun res!64979 () Bool)

(assert (=> b!135296 (=> (not res!64979) (not e!88110))))

(assert (=> b!135296 (= res!64979 (containsKey!176 lt!70718 (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135297 () Bool)

(assert (=> b!135297 (= e!88108 e!88109)))

(assert (=> b!135297 (= c!25273 (and ((_ is Cons!1712) (toList!869 lt!69251)) (= (_1!1324 (h!2317 (toList!869 lt!69251))) (_1!1324 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!42029 c!25276) b!135295))

(assert (= (and d!42029 (not c!25276)) b!135297))

(assert (= (and b!135297 c!25273) b!135291))

(assert (= (and b!135297 (not c!25273)) b!135289))

(assert (= (and b!135289 c!25274) b!135292))

(assert (= (and b!135289 (not c!25274)) b!135294))

(assert (= (or b!135292 b!135294) bm!14881))

(assert (= (or b!135291 bm!14881) bm!14879))

(assert (= (or b!135295 bm!14879) bm!14880))

(assert (= (and bm!14880 c!25275) b!135290))

(assert (= (and bm!14880 (not c!25275)) b!135293))

(assert (= (and d!42029 res!64980) b!135296))

(assert (= (and b!135296 res!64979) b!135288))

(declare-fun m!161183 () Bool)

(assert (=> d!42029 m!161183))

(declare-fun m!161185 () Bool)

(assert (=> d!42029 m!161185))

(declare-fun m!161187 () Bool)

(assert (=> bm!14880 m!161187))

(declare-fun m!161189 () Bool)

(assert (=> b!135290 m!161189))

(declare-fun m!161191 () Bool)

(assert (=> b!135288 m!161191))

(declare-fun m!161193 () Bool)

(assert (=> b!135296 m!161193))

(assert (=> d!40791 d!42029))

(declare-fun b!135300 () Bool)

(declare-fun e!88113 () Option!178)

(assert (=> b!135300 (= e!88113 (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69209))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!135301 () Bool)

(assert (=> b!135301 (= e!88113 None!176)))

(declare-fun d!42031 () Bool)

(declare-fun c!25277 () Bool)

(assert (=> d!42031 (= c!25277 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69209))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69209)))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun e!88112 () Option!178)

(assert (=> d!42031 (= (getValueByKey!172 (t!6167 (toList!869 lt!69209)) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) e!88112)))

(declare-fun b!135298 () Bool)

(assert (=> b!135298 (= e!88112 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 lt!69209))))))))

(declare-fun b!135299 () Bool)

(assert (=> b!135299 (= e!88112 e!88113)))

(declare-fun c!25278 () Bool)

(assert (=> b!135299 (= c!25278 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69209))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69209)))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))))

(assert (= (and d!42031 c!25277) b!135298))

(assert (= (and d!42031 (not c!25277)) b!135299))

(assert (= (and b!135299 c!25278) b!135300))

(assert (= (and b!135299 (not c!25278)) b!135301))

(declare-fun m!161195 () Bool)

(assert (=> b!135300 m!161195))

(assert (=> b!133068 d!42031))

(assert (=> b!133586 d!41905))

(declare-fun b!135304 () Bool)

(declare-fun e!88115 () Option!178)

(assert (=> b!135304 (= e!88115 (getValueByKey!172 (t!6167 (toList!869 lt!70032)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135305 () Bool)

(assert (=> b!135305 (= e!88115 None!176)))

(declare-fun d!42033 () Bool)

(declare-fun c!25279 () Bool)

(assert (=> d!42033 (= c!25279 (and ((_ is Cons!1712) (toList!869 lt!70032)) (= (_1!1324 (h!2317 (toList!869 lt!70032))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88114 () Option!178)

(assert (=> d!42033 (= (getValueByKey!172 (toList!869 lt!70032) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88114)))

(declare-fun b!135302 () Bool)

(assert (=> b!135302 (= e!88114 (Some!177 (_2!1324 (h!2317 (toList!869 lt!70032)))))))

(declare-fun b!135303 () Bool)

(assert (=> b!135303 (= e!88114 e!88115)))

(declare-fun c!25280 () Bool)

(assert (=> b!135303 (= c!25280 (and ((_ is Cons!1712) (toList!869 lt!70032)) (not (= (_1!1324 (h!2317 (toList!869 lt!70032))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!42033 c!25279) b!135302))

(assert (= (and d!42033 (not c!25279)) b!135303))

(assert (= (and b!135303 c!25280) b!135304))

(assert (= (and b!135303 (not c!25280)) b!135305))

(declare-fun m!161197 () Bool)

(assert (=> b!135304 m!161197))

(assert (=> b!133822 d!42033))

(assert (=> b!133390 d!41831))

(assert (=> b!133390 d!40685))

(declare-fun d!42035 () Bool)

(declare-fun c!25281 () Bool)

(assert (=> d!42035 (= c!25281 ((_ is Nil!1713) (toList!869 lt!69377)))))

(declare-fun e!88116 () (InoxSet tuple2!2626))

(assert (=> d!42035 (= (content!133 (toList!869 lt!69377)) e!88116)))

(declare-fun b!135306 () Bool)

(assert (=> b!135306 (= e!88116 ((as const (Array tuple2!2626 Bool)) false))))

(declare-fun b!135307 () Bool)

(assert (=> b!135307 (= e!88116 ((_ map or) (store ((as const (Array tuple2!2626 Bool)) false) (h!2317 (toList!869 lt!69377)) true) (content!133 (t!6167 (toList!869 lt!69377)))))))

(assert (= (and d!42035 c!25281) b!135306))

(assert (= (and d!42035 (not c!25281)) b!135307))

(declare-fun m!161199 () Bool)

(assert (=> b!135307 m!161199))

(assert (=> b!135307 m!158449))

(assert (=> d!40393 d!42035))

(declare-fun d!42037 () Bool)

(declare-fun c!25282 () Bool)

(assert (=> d!42037 (= c!25282 ((_ is Nil!1713) (toList!869 lt!69413)))))

(declare-fun e!88117 () (InoxSet tuple2!2626))

(assert (=> d!42037 (= (content!133 (toList!869 lt!69413)) e!88117)))

(declare-fun b!135308 () Bool)

(assert (=> b!135308 (= e!88117 ((as const (Array tuple2!2626 Bool)) false))))

(declare-fun b!135309 () Bool)

(assert (=> b!135309 (= e!88117 ((_ map or) (store ((as const (Array tuple2!2626 Bool)) false) (h!2317 (toList!869 lt!69413)) true) (content!133 (t!6167 (toList!869 lt!69413)))))))

(assert (= (and d!42037 c!25282) b!135308))

(assert (= (and d!42037 (not c!25282)) b!135309))

(declare-fun m!161201 () Bool)

(assert (=> b!135309 m!161201))

(assert (=> b!135309 m!158411))

(assert (=> d!40663 d!42037))

(declare-fun d!42039 () Bool)

(declare-fun e!88118 () Bool)

(assert (=> d!42039 e!88118))

(declare-fun res!64982 () Bool)

(assert (=> d!42039 (=> (not res!64982) (not e!88118))))

(declare-fun lt!70719 () ListLongMap!1707)

(assert (=> d!42039 (= res!64982 (contains!899 lt!70719 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70721 () List!1716)

(assert (=> d!42039 (= lt!70719 (ListLongMap!1708 lt!70721))))

(declare-fun lt!70722 () Unit!4135)

(declare-fun lt!70720 () Unit!4135)

(assert (=> d!42039 (= lt!70722 lt!70720)))

(assert (=> d!42039 (= (getValueByKey!172 lt!70721 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!42039 (= lt!70720 (lemmaContainsTupThenGetReturnValue!87 lt!70721 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!42039 (= lt!70721 (insertStrictlySorted!90 (toList!869 call!14738) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!42039 (= (+!175 call!14738 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70719)))

(declare-fun b!135310 () Bool)

(declare-fun res!64981 () Bool)

(assert (=> b!135310 (=> (not res!64981) (not e!88118))))

(assert (=> b!135310 (= res!64981 (= (getValueByKey!172 (toList!869 lt!70719) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!135311 () Bool)

(assert (=> b!135311 (= e!88118 (contains!902 (toList!869 lt!70719) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!42039 res!64982) b!135310))

(assert (= (and b!135310 res!64981) b!135311))

(declare-fun m!161203 () Bool)

(assert (=> d!42039 m!161203))

(declare-fun m!161205 () Bool)

(assert (=> d!42039 m!161205))

(declare-fun m!161207 () Bool)

(assert (=> d!42039 m!161207))

(declare-fun m!161209 () Bool)

(assert (=> d!42039 m!161209))

(declare-fun m!161211 () Bool)

(assert (=> b!135310 m!161211))

(declare-fun m!161213 () Bool)

(assert (=> b!135311 m!161213))

(assert (=> b!133530 d!42039))

(assert (=> d!40463 d!40461))

(declare-fun d!42041 () Bool)

(assert (=> d!42041 (= (getValueByKey!172 lt!69211 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) (Some!177 (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!42041 true))

(declare-fun _$22!489 () Unit!4135)

(assert (=> d!42041 (= (choose!827 lt!69211 (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (_2!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) _$22!489)))

(declare-fun bs!5662 () Bool)

(assert (= bs!5662 d!42041))

(assert (=> bs!5662 m!156097))

(assert (=> d!40463 d!42041))

(declare-fun d!42043 () Bool)

(declare-fun res!64983 () Bool)

(declare-fun e!88119 () Bool)

(assert (=> d!42043 (=> res!64983 e!88119)))

(assert (=> d!42043 (= res!64983 (or ((_ is Nil!1713) lt!69211) ((_ is Nil!1713) (t!6167 lt!69211))))))

(assert (=> d!42043 (= (isStrictlySorted!322 lt!69211) e!88119)))

(declare-fun b!135312 () Bool)

(declare-fun e!88120 () Bool)

(assert (=> b!135312 (= e!88119 e!88120)))

(declare-fun res!64984 () Bool)

(assert (=> b!135312 (=> (not res!64984) (not e!88120))))

(assert (=> b!135312 (= res!64984 (bvslt (_1!1324 (h!2317 lt!69211)) (_1!1324 (h!2317 (t!6167 lt!69211)))))))

(declare-fun b!135313 () Bool)

(assert (=> b!135313 (= e!88120 (isStrictlySorted!322 (t!6167 lt!69211)))))

(assert (= (and d!42043 (not res!64983)) b!135312))

(assert (= (and b!135312 res!64984) b!135313))

(declare-fun m!161215 () Bool)

(assert (=> b!135313 m!161215))

(assert (=> d!40463 d!42043))

(assert (=> d!40479 d!40257))

(assert (=> d!40479 d!40273))

(assert (=> d!40479 d!40271))

(declare-fun d!42045 () Bool)

(declare-fun res!64985 () Bool)

(declare-fun e!88121 () Bool)

(assert (=> d!42045 (=> res!64985 e!88121)))

(assert (=> d!42045 (= res!64985 (and ((_ is Cons!1712) (t!6167 (t!6167 (toList!869 lt!69022)))) (= (_1!1324 (h!2317 (t!6167 (t!6167 (toList!869 lt!69022))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(assert (=> d!42045 (= (containsKey!176 (t!6167 (t!6167 (toList!869 lt!69022))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) e!88121)))

(declare-fun b!135314 () Bool)

(declare-fun e!88122 () Bool)

(assert (=> b!135314 (= e!88121 e!88122)))

(declare-fun res!64986 () Bool)

(assert (=> b!135314 (=> (not res!64986) (not e!88122))))

(assert (=> b!135314 (= res!64986 (and (or (not ((_ is Cons!1712) (t!6167 (t!6167 (toList!869 lt!69022))))) (bvsle (_1!1324 (h!2317 (t!6167 (t!6167 (toList!869 lt!69022))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))) ((_ is Cons!1712) (t!6167 (t!6167 (toList!869 lt!69022)))) (bvslt (_1!1324 (h!2317 (t!6167 (t!6167 (toList!869 lt!69022))))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355))))))

(declare-fun b!135315 () Bool)

(assert (=> b!135315 (= e!88122 (containsKey!176 (t!6167 (t!6167 (t!6167 (toList!869 lt!69022)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (= (and d!42045 (not res!64985)) b!135314))

(assert (= (and b!135314 res!64986) b!135315))

(assert (=> b!135315 m!155869))

(declare-fun m!161217 () Bool)

(assert (=> b!135315 m!161217))

(assert (=> b!133732 d!42045))

(declare-fun b!135318 () Bool)

(declare-fun e!88124 () Option!178)

(assert (=> b!135318 (= e!88124 (getValueByKey!172 (t!6167 (toList!869 lt!69652)) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))

(declare-fun b!135319 () Bool)

(assert (=> b!135319 (= e!88124 None!176)))

(declare-fun c!25283 () Bool)

(declare-fun d!42047 () Bool)

(assert (=> d!42047 (= c!25283 (and ((_ is Cons!1712) (toList!869 lt!69652)) (= (_1!1324 (h!2317 (toList!869 lt!69652))) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))

(declare-fun e!88123 () Option!178)

(assert (=> d!42047 (= (getValueByKey!172 (toList!869 lt!69652) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) e!88123)))

(declare-fun b!135316 () Bool)

(assert (=> b!135316 (= e!88123 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69652)))))))

(declare-fun b!135317 () Bool)

(assert (=> b!135317 (= e!88123 e!88124)))

(declare-fun c!25284 () Bool)

(assert (=> b!135317 (= c!25284 (and ((_ is Cons!1712) (toList!869 lt!69652)) (not (= (_1!1324 (h!2317 (toList!869 lt!69652))) (_1!1324 (tuple2!2627 lt!69478 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))))))

(assert (= (and d!42047 c!25283) b!135316))

(assert (= (and d!42047 (not c!25283)) b!135317))

(assert (= (and b!135317 c!25284) b!135318))

(assert (= (and b!135317 (not c!25284)) b!135319))

(declare-fun m!161219 () Bool)

(assert (=> b!135318 m!161219))

(assert (=> b!133235 d!42047))

(declare-fun d!42049 () Bool)

(assert (=> d!42049 (isDefined!125 (getValueByKey!172 (toList!869 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70723 () Unit!4135)

(assert (=> d!42049 (= lt!70723 (choose!817 (toList!869 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88125 () Bool)

(assert (=> d!42049 e!88125))

(declare-fun res!64987 () Bool)

(assert (=> d!42049 (=> (not res!64987) (not e!88125))))

(assert (=> d!42049 (= res!64987 (isStrictlySorted!322 (toList!869 lt!69486)))))

(assert (=> d!42049 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70723)))

(declare-fun b!135320 () Bool)

(assert (=> b!135320 (= e!88125 (containsKey!176 (toList!869 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42049 res!64987) b!135320))

(assert (=> d!42049 m!157061))

(assert (=> d!42049 m!157061))

(assert (=> d!42049 m!157063))

(declare-fun m!161221 () Bool)

(assert (=> d!42049 m!161221))

(declare-fun m!161223 () Bool)

(assert (=> d!42049 m!161223))

(assert (=> b!135320 m!157057))

(assert (=> b!133196 d!42049))

(assert (=> b!133196 d!41501))

(assert (=> b!133196 d!41503))

(declare-fun lt!70724 () Bool)

(declare-fun d!42051 () Bool)

(assert (=> d!42051 (= lt!70724 (select (content!133 (toList!869 lt!69586)) (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))))

(declare-fun e!88127 () Bool)

(assert (=> d!42051 (= lt!70724 e!88127)))

(declare-fun res!64988 () Bool)

(assert (=> d!42051 (=> (not res!64988) (not e!88127))))

(assert (=> d!42051 (= res!64988 ((_ is Cons!1712) (toList!869 lt!69586)))))

(assert (=> d!42051 (= (contains!902 (toList!869 lt!69586) (tuple2!2627 lt!69451 (minValue!2720 newMap!16))) lt!70724)))

(declare-fun b!135321 () Bool)

(declare-fun e!88126 () Bool)

(assert (=> b!135321 (= e!88127 e!88126)))

(declare-fun res!64989 () Bool)

(assert (=> b!135321 (=> res!64989 e!88126)))

(assert (=> b!135321 (= res!64989 (= (h!2317 (toList!869 lt!69586)) (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))))

(declare-fun b!135322 () Bool)

(assert (=> b!135322 (= e!88126 (contains!902 (t!6167 (toList!869 lt!69586)) (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))))

(assert (= (and d!42051 res!64988) b!135321))

(assert (= (and b!135321 (not res!64989)) b!135322))

(declare-fun m!161225 () Bool)

(assert (=> d!42051 m!161225))

(declare-fun m!161227 () Bool)

(assert (=> d!42051 m!161227))

(declare-fun m!161229 () Bool)

(assert (=> b!135322 m!161229))

(assert (=> b!133142 d!42051))

(assert (=> d!40511 d!40483))

(declare-fun d!42053 () Bool)

(assert (=> d!42053 (= (apply!116 (+!175 lt!69475 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))) lt!69471) (apply!116 lt!69475 lt!69471))))

(assert (=> d!42053 true))

(declare-fun _$34!983 () Unit!4135)

(assert (=> d!42053 (= (choose!822 lt!69475 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)) lt!69471) _$34!983)))

(declare-fun bs!5663 () Bool)

(assert (= bs!5663 d!42053))

(assert (=> bs!5663 m!156583))

(assert (=> bs!5663 m!156583))

(assert (=> bs!5663 m!156585))

(assert (=> bs!5663 m!156603))

(assert (=> d!40511 d!42053))

(assert (=> d!40511 d!40505))

(declare-fun d!42055 () Bool)

(declare-fun e!88128 () Bool)

(assert (=> d!42055 e!88128))

(declare-fun res!64990 () Bool)

(assert (=> d!42055 (=> res!64990 e!88128)))

(declare-fun lt!70728 () Bool)

(assert (=> d!42055 (= res!64990 (not lt!70728))))

(declare-fun lt!70725 () Bool)

(assert (=> d!42055 (= lt!70728 lt!70725)))

(declare-fun lt!70727 () Unit!4135)

(declare-fun e!88129 () Unit!4135)

(assert (=> d!42055 (= lt!70727 e!88129)))

(declare-fun c!25285 () Bool)

(assert (=> d!42055 (= c!25285 lt!70725)))

(assert (=> d!42055 (= lt!70725 (containsKey!176 (toList!869 lt!69475) lt!69471))))

(assert (=> d!42055 (= (contains!899 lt!69475 lt!69471) lt!70728)))

(declare-fun b!135323 () Bool)

(declare-fun lt!70726 () Unit!4135)

(assert (=> b!135323 (= e!88129 lt!70726)))

(assert (=> b!135323 (= lt!70726 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69475) lt!69471))))

(assert (=> b!135323 (isDefined!125 (getValueByKey!172 (toList!869 lt!69475) lt!69471))))

(declare-fun b!135324 () Bool)

(declare-fun Unit!4254 () Unit!4135)

(assert (=> b!135324 (= e!88129 Unit!4254)))

(declare-fun b!135325 () Bool)

(assert (=> b!135325 (= e!88128 (isDefined!125 (getValueByKey!172 (toList!869 lt!69475) lt!69471)))))

(assert (= (and d!42055 c!25285) b!135323))

(assert (= (and d!42055 (not c!25285)) b!135324))

(assert (= (and d!42055 (not res!64990)) b!135325))

(declare-fun m!161231 () Bool)

(assert (=> d!42055 m!161231))

(declare-fun m!161233 () Bool)

(assert (=> b!135323 m!161233))

(assert (=> b!135323 m!157179))

(assert (=> b!135323 m!157179))

(declare-fun m!161235 () Bool)

(assert (=> b!135323 m!161235))

(assert (=> b!135325 m!157179))

(assert (=> b!135325 m!157179))

(assert (=> b!135325 m!161235))

(assert (=> d!40511 d!42055))

(assert (=> d!40511 d!40513))

(declare-fun b!135328 () Bool)

(declare-fun e!88131 () Option!178)

(assert (=> b!135328 (= e!88131 (getValueByKey!172 (t!6167 (t!6167 (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69080))))

(declare-fun b!135329 () Bool)

(assert (=> b!135329 (= e!88131 None!176)))

(declare-fun c!25286 () Bool)

(declare-fun d!42057 () Bool)

(assert (=> d!42057 (= c!25286 (and ((_ is Cons!1712) (t!6167 (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (= (_1!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))) lt!69080)))))

(declare-fun e!88130 () Option!178)

(assert (=> d!42057 (= (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!69080) e!88130)))

(declare-fun b!135326 () Bool)

(assert (=> b!135326 (= e!88130 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))))

(declare-fun b!135327 () Bool)

(assert (=> b!135327 (= e!88130 e!88131)))

(declare-fun c!25287 () Bool)

(assert (=> b!135327 (= c!25287 (and ((_ is Cons!1712) (t!6167 (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69084 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))) lt!69080))))))

(assert (= (and d!42057 c!25286) b!135326))

(assert (= (and d!42057 (not c!25286)) b!135327))

(assert (= (and b!135327 c!25287) b!135328))

(assert (= (and b!135327 (not c!25287)) b!135329))

(declare-fun m!161237 () Bool)

(assert (=> b!135328 m!161237))

(assert (=> b!133072 d!42057))

(declare-fun d!42059 () Bool)

(declare-fun e!88132 () Bool)

(assert (=> d!42059 e!88132))

(declare-fun res!64991 () Bool)

(assert (=> d!42059 (=> res!64991 e!88132)))

(declare-fun lt!70732 () Bool)

(assert (=> d!42059 (= res!64991 (not lt!70732))))

(declare-fun lt!70729 () Bool)

(assert (=> d!42059 (= lt!70732 lt!70729)))

(declare-fun lt!70731 () Unit!4135)

(declare-fun e!88133 () Unit!4135)

(assert (=> d!42059 (= lt!70731 e!88133)))

(declare-fun c!25288 () Bool)

(assert (=> d!42059 (= c!25288 lt!70729)))

(assert (=> d!42059 (= lt!70729 (containsKey!176 (toList!869 lt!69761) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42059 (= (contains!899 lt!69761 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70732)))

(declare-fun b!135330 () Bool)

(declare-fun lt!70730 () Unit!4135)

(assert (=> b!135330 (= e!88133 lt!70730)))

(assert (=> b!135330 (= lt!70730 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69761) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135330 (isDefined!125 (getValueByKey!172 (toList!869 lt!69761) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135331 () Bool)

(declare-fun Unit!4255 () Unit!4135)

(assert (=> b!135331 (= e!88133 Unit!4255)))

(declare-fun b!135332 () Bool)

(assert (=> b!135332 (= e!88132 (isDefined!125 (getValueByKey!172 (toList!869 lt!69761) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42059 c!25288) b!135330))

(assert (= (and d!42059 (not c!25288)) b!135331))

(assert (= (and d!42059 (not res!64991)) b!135332))

(declare-fun m!161239 () Bool)

(assert (=> d!42059 m!161239))

(declare-fun m!161241 () Bool)

(assert (=> b!135330 m!161241))

(assert (=> b!135330 m!159535))

(assert (=> b!135330 m!159535))

(declare-fun m!161243 () Bool)

(assert (=> b!135330 m!161243))

(assert (=> b!135332 m!159535))

(assert (=> b!135332 m!159535))

(assert (=> b!135332 m!161243))

(assert (=> bm!14712 d!42059))

(declare-fun b!135335 () Bool)

(declare-fun e!88135 () Option!178)

(assert (=> b!135335 (= e!88135 (getValueByKey!172 (t!6167 (toList!869 lt!70016)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!135336 () Bool)

(assert (=> b!135336 (= e!88135 None!176)))

(declare-fun d!42061 () Bool)

(declare-fun c!25289 () Bool)

(assert (=> d!42061 (= c!25289 (and ((_ is Cons!1712) (toList!869 lt!70016)) (= (_1!1324 (h!2317 (toList!869 lt!70016))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun e!88134 () Option!178)

(assert (=> d!42061 (= (getValueByKey!172 (toList!869 lt!70016) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) e!88134)))

(declare-fun b!135333 () Bool)

(assert (=> b!135333 (= e!88134 (Some!177 (_2!1324 (h!2317 (toList!869 lt!70016)))))))

(declare-fun b!135334 () Bool)

(assert (=> b!135334 (= e!88134 e!88135)))

(declare-fun c!25290 () Bool)

(assert (=> b!135334 (= c!25290 (and ((_ is Cons!1712) (toList!869 lt!70016)) (not (= (_1!1324 (h!2317 (toList!869 lt!70016))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (= (and d!42061 c!25289) b!135333))

(assert (= (and d!42061 (not c!25289)) b!135334))

(assert (= (and b!135334 c!25290) b!135335))

(assert (= (and b!135334 (not c!25290)) b!135336))

(declare-fun m!161245 () Bool)

(assert (=> b!135335 m!161245))

(assert (=> b!133775 d!42061))

(declare-fun bm!14882 () Bool)

(declare-fun call!14886 () List!1716)

(declare-fun call!14887 () List!1716)

(assert (=> bm!14882 (= call!14886 call!14887)))

(declare-fun d!42063 () Bool)

(declare-fun e!88139 () Bool)

(assert (=> d!42063 e!88139))

(declare-fun res!64993 () Bool)

(assert (=> d!42063 (=> (not res!64993) (not e!88139))))

(declare-fun lt!70733 () List!1716)

(assert (=> d!42063 (= res!64993 (isStrictlySorted!322 lt!70733))))

(declare-fun e!88137 () List!1716)

(assert (=> d!42063 (= lt!70733 e!88137)))

(declare-fun c!25294 () Bool)

(assert (=> d!42063 (= c!25294 (and ((_ is Cons!1712) (t!6167 (toList!869 call!14603))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 call!14603)))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42063 (isStrictlySorted!322 (t!6167 (toList!869 call!14603)))))

(assert (=> d!42063 (= (insertStrictlySorted!90 (t!6167 (toList!869 call!14603)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70733)))

(declare-fun b!135337 () Bool)

(assert (=> b!135337 (= e!88139 (contains!902 lt!70733 (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135338 () Bool)

(declare-fun c!25292 () Bool)

(assert (=> b!135338 (= c!25292 (and ((_ is Cons!1712) (t!6167 (toList!869 call!14603))) (bvsgt (_1!1324 (h!2317 (t!6167 (toList!869 call!14603)))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88138 () List!1716)

(declare-fun e!88140 () List!1716)

(assert (=> b!135338 (= e!88138 e!88140)))

(declare-fun e!88136 () List!1716)

(declare-fun b!135339 () Bool)

(assert (=> b!135339 (= e!88136 (insertStrictlySorted!90 (t!6167 (t!6167 (toList!869 call!14603))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135340 () Bool)

(assert (=> b!135340 (= e!88138 call!14886)))

(declare-fun b!135341 () Bool)

(declare-fun call!14885 () List!1716)

(assert (=> b!135341 (= e!88140 call!14885)))

(declare-fun b!135342 () Bool)

(declare-fun c!25291 () Bool)

(assert (=> b!135342 (= e!88136 (ite c!25291 (t!6167 (t!6167 (toList!869 call!14603))) (ite c!25292 (Cons!1712 (h!2317 (t!6167 (toList!869 call!14603))) (t!6167 (t!6167 (toList!869 call!14603)))) Nil!1713)))))

(declare-fun b!135343 () Bool)

(assert (=> b!135343 (= e!88140 call!14885)))

(declare-fun b!135344 () Bool)

(assert (=> b!135344 (= e!88137 call!14887)))

(declare-fun bm!14883 () Bool)

(assert (=> bm!14883 (= call!14887 ($colon$colon!92 e!88136 (ite c!25294 (h!2317 (t!6167 (toList!869 call!14603))) (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25293 () Bool)

(assert (=> bm!14883 (= c!25293 c!25294)))

(declare-fun bm!14884 () Bool)

(assert (=> bm!14884 (= call!14885 call!14886)))

(declare-fun b!135345 () Bool)

(declare-fun res!64992 () Bool)

(assert (=> b!135345 (=> (not res!64992) (not e!88139))))

(assert (=> b!135345 (= res!64992 (containsKey!176 lt!70733 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135346 () Bool)

(assert (=> b!135346 (= e!88137 e!88138)))

(assert (=> b!135346 (= c!25291 (and ((_ is Cons!1712) (t!6167 (toList!869 call!14603))) (= (_1!1324 (h!2317 (t!6167 (toList!869 call!14603)))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42063 c!25294) b!135344))

(assert (= (and d!42063 (not c!25294)) b!135346))

(assert (= (and b!135346 c!25291) b!135340))

(assert (= (and b!135346 (not c!25291)) b!135338))

(assert (= (and b!135338 c!25292) b!135341))

(assert (= (and b!135338 (not c!25292)) b!135343))

(assert (= (or b!135341 b!135343) bm!14884))

(assert (= (or b!135340 bm!14884) bm!14882))

(assert (= (or b!135344 bm!14882) bm!14883))

(assert (= (and bm!14883 c!25293) b!135339))

(assert (= (and bm!14883 (not c!25293)) b!135342))

(assert (= (and d!42063 res!64993) b!135345))

(assert (= (and b!135345 res!64992) b!135337))

(declare-fun m!161247 () Bool)

(assert (=> d!42063 m!161247))

(assert (=> d!42063 m!160349))

(declare-fun m!161249 () Bool)

(assert (=> bm!14883 m!161249))

(declare-fun m!161251 () Bool)

(assert (=> b!135339 m!161251))

(declare-fun m!161253 () Bool)

(assert (=> b!135337 m!161253))

(declare-fun m!161255 () Bool)

(assert (=> b!135345 m!161255))

(assert (=> b!133109 d!42063))

(declare-fun d!42065 () Bool)

(assert (=> d!42065 (= (apply!116 (+!175 lt!69248 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))) lt!69261) (apply!116 lt!69248 lt!69261))))

(assert (=> d!42065 true))

(declare-fun _$34!984 () Unit!4135)

(assert (=> d!42065 (= (choose!822 lt!69248 lt!69263 (minValue!2720 newMap!16) lt!69261) _$34!984)))

(declare-fun bs!5664 () Bool)

(assert (= bs!5664 d!42065))

(assert (=> bs!5664 m!156185))

(assert (=> bs!5664 m!156185))

(assert (=> bs!5664 m!156203))

(assert (=> bs!5664 m!156201))

(assert (=> d!40777 d!42065))

(assert (=> d!40777 d!40779))

(assert (=> d!40777 d!40787))

(declare-fun d!42067 () Bool)

(declare-fun e!88141 () Bool)

(assert (=> d!42067 e!88141))

(declare-fun res!64994 () Bool)

(assert (=> d!42067 (=> res!64994 e!88141)))

(declare-fun lt!70737 () Bool)

(assert (=> d!42067 (= res!64994 (not lt!70737))))

(declare-fun lt!70734 () Bool)

(assert (=> d!42067 (= lt!70737 lt!70734)))

(declare-fun lt!70736 () Unit!4135)

(declare-fun e!88142 () Unit!4135)

(assert (=> d!42067 (= lt!70736 e!88142)))

(declare-fun c!25295 () Bool)

(assert (=> d!42067 (= c!25295 lt!70734)))

(assert (=> d!42067 (= lt!70734 (containsKey!176 (toList!869 lt!69248) lt!69261))))

(assert (=> d!42067 (= (contains!899 lt!69248 lt!69261) lt!70737)))

(declare-fun b!135347 () Bool)

(declare-fun lt!70735 () Unit!4135)

(assert (=> b!135347 (= e!88142 lt!70735)))

(assert (=> b!135347 (= lt!70735 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69248) lt!69261))))

(assert (=> b!135347 (isDefined!125 (getValueByKey!172 (toList!869 lt!69248) lt!69261))))

(declare-fun b!135348 () Bool)

(declare-fun Unit!4256 () Unit!4135)

(assert (=> b!135348 (= e!88142 Unit!4256)))

(declare-fun b!135349 () Bool)

(assert (=> b!135349 (= e!88141 (isDefined!125 (getValueByKey!172 (toList!869 lt!69248) lt!69261)))))

(assert (= (and d!42067 c!25295) b!135347))

(assert (= (and d!42067 (not c!25295)) b!135348))

(assert (= (and d!42067 (not res!64994)) b!135349))

(declare-fun m!161257 () Bool)

(assert (=> d!42067 m!161257))

(declare-fun m!161259 () Bool)

(assert (=> b!135347 m!161259))

(assert (=> b!135347 m!158177))

(assert (=> b!135347 m!158177))

(declare-fun m!161261 () Bool)

(assert (=> b!135347 m!161261))

(assert (=> b!135349 m!158177))

(assert (=> b!135349 m!158177))

(assert (=> b!135349 m!161261))

(assert (=> d!40777 d!42067))

(assert (=> d!40777 d!40789))

(declare-fun d!42069 () Bool)

(assert (=> d!42069 (isDefined!125 (getValueByKey!172 (toList!869 lt!69262) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70738 () Unit!4135)

(assert (=> d!42069 (= lt!70738 (choose!817 (toList!869 lt!69262) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88143 () Bool)

(assert (=> d!42069 e!88143))

(declare-fun res!64995 () Bool)

(assert (=> d!42069 (=> (not res!64995) (not e!88143))))

(assert (=> d!42069 (= res!64995 (isStrictlySorted!322 (toList!869 lt!69262)))))

(assert (=> d!42069 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69262) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70738)))

(declare-fun b!135350 () Bool)

(assert (=> b!135350 (= e!88143 (containsKey!176 (toList!869 lt!69262) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42069 res!64995) b!135350))

(assert (=> d!42069 m!158259))

(assert (=> d!42069 m!158259))

(assert (=> d!42069 m!158303))

(declare-fun m!161263 () Bool)

(assert (=> d!42069 m!161263))

(assert (=> d!42069 m!158927))

(assert (=> b!135350 m!158299))

(assert (=> b!133812 d!42069))

(assert (=> b!133812 d!41551))

(assert (=> b!133812 d!41373))

(assert (=> d!40733 d!40729))

(assert (=> d!40733 d!40229))

(assert (=> d!40733 d!40731))

(declare-fun d!42071 () Bool)

(assert (=> d!42071 (= (get!1486 (getValueByKey!172 (toList!869 lt!69464) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!172 (toList!869 lt!69464) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40619 d!42071))

(assert (=> d!40619 d!41805))

(declare-fun d!42073 () Bool)

(assert (=> d!42073 (isDefined!125 (getValueByKey!172 (toList!869 lt!69500) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70739 () Unit!4135)

(assert (=> d!42073 (= lt!70739 (choose!817 (toList!869 lt!69500) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88144 () Bool)

(assert (=> d!42073 e!88144))

(declare-fun res!64996 () Bool)

(assert (=> d!42073 (=> (not res!64996) (not e!88144))))

(assert (=> d!42073 (= res!64996 (isStrictlySorted!322 (toList!869 lt!69500)))))

(assert (=> d!42073 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69500) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70739)))

(declare-fun b!135351 () Bool)

(assert (=> b!135351 (= e!88144 (containsKey!176 (toList!869 lt!69500) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42073 res!64996) b!135351))

(assert (=> d!42073 m!156657))

(assert (=> d!42073 m!156657))

(assert (=> d!42073 m!156841))

(declare-fun m!161265 () Bool)

(assert (=> d!42073 m!161265))

(declare-fun m!161267 () Bool)

(assert (=> d!42073 m!161267))

(assert (=> b!135351 m!156837))

(assert (=> b!133074 d!42073))

(assert (=> b!133074 d!41923))

(assert (=> b!133074 d!40565))

(assert (=> d!40833 d!40831))

(declare-fun d!42075 () Bool)

(assert (=> d!42075 (= (getValueByKey!172 lt!69420 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!42075 true))

(declare-fun _$22!490 () Unit!4135)

(assert (=> d!42075 (= (choose!827 lt!69420 (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) _$22!490)))

(declare-fun bs!5665 () Bool)

(assert (= bs!5665 d!42075))

(assert (=> bs!5665 m!156429))

(assert (=> d!40833 d!42075))

(declare-fun d!42077 () Bool)

(declare-fun res!64997 () Bool)

(declare-fun e!88145 () Bool)

(assert (=> d!42077 (=> res!64997 e!88145)))

(assert (=> d!42077 (= res!64997 (or ((_ is Nil!1713) lt!69420) ((_ is Nil!1713) (t!6167 lt!69420))))))

(assert (=> d!42077 (= (isStrictlySorted!322 lt!69420) e!88145)))

(declare-fun b!135352 () Bool)

(declare-fun e!88146 () Bool)

(assert (=> b!135352 (= e!88145 e!88146)))

(declare-fun res!64998 () Bool)

(assert (=> b!135352 (=> (not res!64998) (not e!88146))))

(assert (=> b!135352 (= res!64998 (bvslt (_1!1324 (h!2317 lt!69420)) (_1!1324 (h!2317 (t!6167 lt!69420)))))))

(declare-fun b!135353 () Bool)

(assert (=> b!135353 (= e!88146 (isStrictlySorted!322 (t!6167 lt!69420)))))

(assert (= (and d!42077 (not res!64997)) b!135352))

(assert (= (and b!135352 res!64998) b!135353))

(declare-fun m!161269 () Bool)

(assert (=> b!135353 m!161269))

(assert (=> d!40833 d!42077))

(declare-fun d!42079 () Bool)

(assert (=> d!42079 (= (apply!116 lt!69666 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1486 (getValueByKey!172 (toList!869 lt!69666) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5666 () Bool)

(assert (= bs!5666 d!42079))

(assert (=> bs!5666 m!156163))

(assert (=> bs!5666 m!159977))

(assert (=> bs!5666 m!159977))

(declare-fun m!161271 () Bool)

(assert (=> bs!5666 m!161271))

(assert (=> b!133247 d!42079))

(assert (=> b!133247 d!40741))

(declare-fun d!42081 () Bool)

(assert (=> d!42081 (= (apply!116 lt!69965 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69965) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5667 () Bool)

(assert (= bs!5667 d!42081))

(assert (=> bs!5667 m!159437))

(assert (=> bs!5667 m!159437))

(declare-fun m!161273 () Bool)

(assert (=> bs!5667 m!161273))

(assert (=> b!133707 d!42081))

(declare-fun d!42083 () Bool)

(declare-fun e!88147 () Bool)

(assert (=> d!42083 e!88147))

(declare-fun res!64999 () Bool)

(assert (=> d!42083 (=> res!64999 e!88147)))

(declare-fun lt!70743 () Bool)

(assert (=> d!42083 (= res!64999 (not lt!70743))))

(declare-fun lt!70740 () Bool)

(assert (=> d!42083 (= lt!70743 lt!70740)))

(declare-fun lt!70742 () Unit!4135)

(declare-fun e!88148 () Unit!4135)

(assert (=> d!42083 (= lt!70742 e!88148)))

(declare-fun c!25296 () Bool)

(assert (=> d!42083 (= c!25296 lt!70740)))

(assert (=> d!42083 (= lt!70740 (containsKey!176 (toList!869 lt!69614) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42083 (= (contains!899 lt!69614 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70743)))

(declare-fun b!135354 () Bool)

(declare-fun lt!70741 () Unit!4135)

(assert (=> b!135354 (= e!88148 lt!70741)))

(assert (=> b!135354 (= lt!70741 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69614) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135354 (isDefined!125 (getValueByKey!172 (toList!869 lt!69614) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135355 () Bool)

(declare-fun Unit!4257 () Unit!4135)

(assert (=> b!135355 (= e!88148 Unit!4257)))

(declare-fun b!135356 () Bool)

(assert (=> b!135356 (= e!88147 (isDefined!125 (getValueByKey!172 (toList!869 lt!69614) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42083 c!25296) b!135354))

(assert (= (and d!42083 (not c!25296)) b!135355))

(assert (= (and d!42083 (not res!64999)) b!135356))

(declare-fun m!161275 () Bool)

(assert (=> d!42083 m!161275))

(declare-fun m!161277 () Bool)

(assert (=> b!135354 m!161277))

(declare-fun m!161279 () Bool)

(assert (=> b!135354 m!161279))

(assert (=> b!135354 m!161279))

(declare-fun m!161281 () Bool)

(assert (=> b!135354 m!161281))

(assert (=> b!135356 m!161279))

(assert (=> b!135356 m!161279))

(assert (=> b!135356 m!161281))

(assert (=> d!40453 d!42083))

(assert (=> d!40453 d!40325))

(assert (=> b!132982 d!41873))

(assert (=> b!132982 d!40691))

(assert (=> b!133025 d!40353))

(declare-fun b!135359 () Bool)

(declare-fun e!88150 () Option!178)

(assert (=> b!135359 (= e!88150 (getValueByKey!172 (t!6167 (t!6167 lt!69387)) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!135360 () Bool)

(assert (=> b!135360 (= e!88150 None!176)))

(declare-fun c!25297 () Bool)

(declare-fun d!42085 () Bool)

(assert (=> d!42085 (= c!25297 (and ((_ is Cons!1712) (t!6167 lt!69387)) (= (_1!1324 (h!2317 (t!6167 lt!69387))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!88149 () Option!178)

(assert (=> d!42085 (= (getValueByKey!172 (t!6167 lt!69387) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!88149)))

(declare-fun b!135357 () Bool)

(assert (=> b!135357 (= e!88149 (Some!177 (_2!1324 (h!2317 (t!6167 lt!69387)))))))

(declare-fun b!135358 () Bool)

(assert (=> b!135358 (= e!88149 e!88150)))

(declare-fun c!25298 () Bool)

(assert (=> b!135358 (= c!25298 (and ((_ is Cons!1712) (t!6167 lt!69387)) (not (= (_1!1324 (h!2317 (t!6167 lt!69387))) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!42085 c!25297) b!135357))

(assert (= (and d!42085 (not c!25297)) b!135358))

(assert (= (and b!135358 c!25298) b!135359))

(assert (= (and b!135358 (not c!25298)) b!135360))

(declare-fun m!161283 () Bool)

(assert (=> b!135359 m!161283))

(assert (=> b!133455 d!42085))

(assert (=> b!133583 d!40353))

(declare-fun lt!70744 () Bool)

(declare-fun d!42087 () Bool)

(assert (=> d!42087 (= lt!70744 (select (content!133 lt!69819) (tuple2!2627 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!88152 () Bool)

(assert (=> d!42087 (= lt!70744 e!88152)))

(declare-fun res!65000 () Bool)

(assert (=> d!42087 (=> (not res!65000) (not e!88152))))

(assert (=> d!42087 (= res!65000 ((_ is Cons!1712) lt!69819))))

(assert (=> d!42087 (= (contains!902 lt!69819 (tuple2!2627 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!70744)))

(declare-fun b!135361 () Bool)

(declare-fun e!88151 () Bool)

(assert (=> b!135361 (= e!88152 e!88151)))

(declare-fun res!65001 () Bool)

(assert (=> b!135361 (=> res!65001 e!88151)))

(assert (=> b!135361 (= res!65001 (= (h!2317 lt!69819) (tuple2!2627 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135362 () Bool)

(assert (=> b!135362 (= e!88151 (contains!902 (t!6167 lt!69819) (tuple2!2627 (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!42087 res!65000) b!135361))

(assert (= (and b!135361 (not res!65001)) b!135362))

(declare-fun m!161285 () Bool)

(assert (=> d!42087 m!161285))

(declare-fun m!161287 () Bool)

(assert (=> d!42087 m!161287))

(declare-fun m!161289 () Bool)

(assert (=> b!135362 m!161289))

(assert (=> b!133499 d!42087))

(declare-fun lt!70745 () Bool)

(declare-fun d!42089 () Bool)

(assert (=> d!42089 (= lt!70745 (select (content!133 lt!69585) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!88154 () Bool)

(assert (=> d!42089 (= lt!70745 e!88154)))

(declare-fun res!65002 () Bool)

(assert (=> d!42089 (=> (not res!65002) (not e!88154))))

(assert (=> d!42089 (= res!65002 ((_ is Cons!1712) lt!69585))))

(assert (=> d!42089 (= (contains!902 lt!69585 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!70745)))

(declare-fun b!135363 () Bool)

(declare-fun e!88153 () Bool)

(assert (=> b!135363 (= e!88154 e!88153)))

(declare-fun res!65003 () Bool)

(assert (=> b!135363 (=> res!65003 e!88153)))

(assert (=> b!135363 (= res!65003 (= (h!2317 lt!69585) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!135364 () Bool)

(assert (=> b!135364 (= e!88153 (contains!902 (t!6167 lt!69585) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!42089 res!65002) b!135363))

(assert (= (and b!135363 (not res!65003)) b!135364))

(declare-fun m!161291 () Bool)

(assert (=> d!42089 m!161291))

(declare-fun m!161293 () Bool)

(assert (=> d!42089 m!161293))

(declare-fun m!161295 () Bool)

(assert (=> b!135364 m!161295))

(assert (=> b!133131 d!42089))

(declare-fun d!42091 () Bool)

(assert (=> d!42091 (isDefined!125 (getValueByKey!172 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))

(declare-fun lt!70746 () Unit!4135)

(assert (=> d!42091 (= lt!70746 (choose!817 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))

(declare-fun e!88155 () Bool)

(assert (=> d!42091 e!88155))

(declare-fun res!65004 () Bool)

(assert (=> d!42091 (=> (not res!65004) (not e!88155))))

(assert (=> d!42091 (= res!65004 (isStrictlySorted!322 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))))

(assert (=> d!42091 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))) lt!70746)))

(declare-fun b!135365 () Bool)

(assert (=> b!135365 (= e!88155 (containsKey!176 (toList!869 (getCurrentListMap!546 lt!69349 lt!69346 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)))))))

(assert (= (and d!42091 res!65004) b!135365))

(assert (=> d!42091 m!156259))

(assert (=> d!42091 m!157305))

(assert (=> d!42091 m!157305))

(assert (=> d!42091 m!157307))

(assert (=> d!42091 m!156259))

(declare-fun m!161297 () Bool)

(assert (=> d!42091 m!161297))

(declare-fun m!161299 () Bool)

(assert (=> d!42091 m!161299))

(assert (=> b!135365 m!156259))

(assert (=> b!135365 m!157301))

(assert (=> b!133301 d!42091))

(assert (=> b!133301 d!41557))

(assert (=> b!133301 d!41559))

(assert (=> b!133336 d!40541))

(declare-fun d!42093 () Bool)

(assert (=> d!42093 (= (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69251 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))) lt!69247)) (v!3203 (getValueByKey!172 (toList!869 (+!175 lt!69251 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))) lt!69247)))))

(assert (=> d!40781 d!42093))

(declare-fun e!88157 () Option!178)

(declare-fun b!135368 () Bool)

(assert (=> b!135368 (= e!88157 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69251 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))) lt!69247))))

(declare-fun b!135369 () Bool)

(assert (=> b!135369 (= e!88157 None!176)))

(declare-fun c!25299 () Bool)

(declare-fun d!42095 () Bool)

(assert (=> d!42095 (= c!25299 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69251 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69251 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))) lt!69247)))))

(declare-fun e!88156 () Option!178)

(assert (=> d!42095 (= (getValueByKey!172 (toList!869 (+!175 lt!69251 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))) lt!69247) e!88156)))

(declare-fun b!135366 () Bool)

(assert (=> b!135366 (= e!88156 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69251 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))))))))

(declare-fun b!135367 () Bool)

(assert (=> b!135367 (= e!88156 e!88157)))

(declare-fun c!25300 () Bool)

(assert (=> b!135367 (= c!25300 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69251 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69251 (tuple2!2627 lt!69253 (zeroValue!2720 newMap!16)))))) lt!69247))))))

(assert (= (and d!42095 c!25299) b!135366))

(assert (= (and d!42095 (not c!25299)) b!135367))

(assert (= (and b!135367 c!25300) b!135368))

(assert (= (and b!135367 (not c!25300)) b!135369))

(declare-fun m!161301 () Bool)

(assert (=> b!135368 m!161301))

(assert (=> d!40781 d!42095))

(assert (=> d!40339 d!40341))

(assert (=> d!40339 d!40343))

(declare-fun d!42097 () Bool)

(assert (=> d!42097 (isDefined!125 (getValueByKey!172 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42097 true))

(declare-fun _$12!403 () Unit!4135)

(assert (=> d!42097 (= (choose!817 (toList!869 lt!69095) #b0000000000000000000000000000000000000000000000000000000000000000) _$12!403)))

(declare-fun bs!5668 () Bool)

(assert (= bs!5668 d!42097))

(assert (=> bs!5668 m!156237))

(assert (=> bs!5668 m!156237))

(assert (=> bs!5668 m!156239))

(assert (=> d!40339 d!42097))

(assert (=> d!40339 d!40913))

(declare-fun d!42099 () Bool)

(declare-fun res!65005 () Bool)

(declare-fun e!88158 () Bool)

(assert (=> d!42099 (=> res!65005 e!88158)))

(assert (=> d!42099 (= res!65005 (or ((_ is Nil!1713) lt!69585) ((_ is Nil!1713) (t!6167 lt!69585))))))

(assert (=> d!42099 (= (isStrictlySorted!322 lt!69585) e!88158)))

(declare-fun b!135370 () Bool)

(declare-fun e!88159 () Bool)

(assert (=> b!135370 (= e!88158 e!88159)))

(declare-fun res!65006 () Bool)

(assert (=> b!135370 (=> (not res!65006) (not e!88159))))

(assert (=> b!135370 (= res!65006 (bvslt (_1!1324 (h!2317 lt!69585)) (_1!1324 (h!2317 (t!6167 lt!69585)))))))

(declare-fun b!135371 () Bool)

(assert (=> b!135371 (= e!88159 (isStrictlySorted!322 (t!6167 lt!69585)))))

(assert (= (and d!42099 (not res!65005)) b!135370))

(assert (= (and b!135370 res!65006) b!135371))

(declare-fun m!161303 () Bool)

(assert (=> b!135371 m!161303))

(assert (=> d!40425 d!42099))

(declare-fun d!42101 () Bool)

(declare-fun res!65007 () Bool)

(declare-fun e!88160 () Bool)

(assert (=> d!42101 (=> res!65007 e!88160)))

(assert (=> d!42101 (= res!65007 (or ((_ is Nil!1713) (toList!869 lt!69093)) ((_ is Nil!1713) (t!6167 (toList!869 lt!69093)))))))

(assert (=> d!42101 (= (isStrictlySorted!322 (toList!869 lt!69093)) e!88160)))

(declare-fun b!135372 () Bool)

(declare-fun e!88161 () Bool)

(assert (=> b!135372 (= e!88160 e!88161)))

(declare-fun res!65008 () Bool)

(assert (=> b!135372 (=> (not res!65008) (not e!88161))))

(assert (=> b!135372 (= res!65008 (bvslt (_1!1324 (h!2317 (toList!869 lt!69093))) (_1!1324 (h!2317 (t!6167 (toList!869 lt!69093))))))))

(declare-fun b!135373 () Bool)

(assert (=> b!135373 (= e!88161 (isStrictlySorted!322 (t!6167 (toList!869 lt!69093))))))

(assert (= (and d!42101 (not res!65007)) b!135372))

(assert (= (and b!135372 res!65008) b!135373))

(assert (=> b!135373 m!160061))

(assert (=> d!40425 d!42101))

(declare-fun d!42103 () Bool)

(assert (=> d!42103 (= (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69246 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))) lt!69265)) (v!3203 (getValueByKey!172 (toList!869 (+!175 lt!69246 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))) lt!69265)))))

(assert (=> d!40795 d!42103))

(declare-fun b!135376 () Bool)

(declare-fun e!88163 () Option!178)

(assert (=> b!135376 (= e!88163 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69246 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))) lt!69265))))

(declare-fun b!135377 () Bool)

(assert (=> b!135377 (= e!88163 None!176)))

(declare-fun c!25301 () Bool)

(declare-fun d!42105 () Bool)

(assert (=> d!42105 (= c!25301 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69246 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69246 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))) lt!69265)))))

(declare-fun e!88162 () Option!178)

(assert (=> d!42105 (= (getValueByKey!172 (toList!869 (+!175 lt!69246 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))) lt!69265) e!88162)))

(declare-fun b!135374 () Bool)

(assert (=> b!135374 (= e!88162 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69246 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))))))))

(declare-fun b!135375 () Bool)

(assert (=> b!135375 (= e!88162 e!88163)))

(declare-fun c!25302 () Bool)

(assert (=> b!135375 (= c!25302 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69246 (tuple2!2627 lt!69249 (minValue!2720 newMap!16))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69246 (tuple2!2627 lt!69249 (minValue!2720 newMap!16)))))) lt!69265))))))

(assert (= (and d!42105 c!25301) b!135374))

(assert (= (and d!42105 (not c!25301)) b!135375))

(assert (= (and b!135375 c!25302) b!135376))

(assert (= (and b!135375 (not c!25302)) b!135377))

(declare-fun m!161305 () Bool)

(assert (=> b!135376 m!161305))

(assert (=> d!40795 d!42105))

(declare-fun d!42107 () Bool)

(assert (=> d!42107 (isDefined!125 (getValueByKey!172 (toList!869 lt!69385) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun lt!70747 () Unit!4135)

(assert (=> d!42107 (= lt!70747 (choose!817 (toList!869 lt!69385) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun e!88164 () Bool)

(assert (=> d!42107 e!88164))

(declare-fun res!65009 () Bool)

(assert (=> d!42107 (=> (not res!65009) (not e!88164))))

(assert (=> d!42107 (= res!65009 (isStrictlySorted!322 (toList!869 lt!69385)))))

(assert (=> d!42107 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69385) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!70747)))

(declare-fun b!135378 () Bool)

(assert (=> b!135378 (= e!88164 (containsKey!176 (toList!869 lt!69385) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!42107 res!65009) b!135378))

(assert (=> d!42107 m!156371))

(assert (=> d!42107 m!156371))

(assert (=> d!42107 m!157555))

(declare-fun m!161307 () Bool)

(assert (=> d!42107 m!161307))

(declare-fun m!161309 () Bool)

(assert (=> d!42107 m!161309))

(assert (=> b!135378 m!157551))

(assert (=> b!133450 d!42107))

(assert (=> b!133450 d!41521))

(assert (=> b!133450 d!40653))

(declare-fun e!88166 () Option!178)

(declare-fun b!135381 () Bool)

(assert (=> b!135381 (= e!88166 (getValueByKey!172 (t!6167 (t!6167 lt!69502)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135382 () Bool)

(assert (=> b!135382 (= e!88166 None!176)))

(declare-fun d!42109 () Bool)

(declare-fun c!25303 () Bool)

(assert (=> d!42109 (= c!25303 (and ((_ is Cons!1712) (t!6167 lt!69502)) (= (_1!1324 (h!2317 (t!6167 lt!69502))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88165 () Option!178)

(assert (=> d!42109 (= (getValueByKey!172 (t!6167 lt!69502) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88165)))

(declare-fun b!135379 () Bool)

(assert (=> b!135379 (= e!88165 (Some!177 (_2!1324 (h!2317 (t!6167 lt!69502)))))))

(declare-fun b!135380 () Bool)

(assert (=> b!135380 (= e!88165 e!88166)))

(declare-fun c!25304 () Bool)

(assert (=> b!135380 (= c!25304 (and ((_ is Cons!1712) (t!6167 lt!69502)) (not (= (_1!1324 (h!2317 (t!6167 lt!69502))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!42109 c!25303) b!135379))

(assert (= (and d!42109 (not c!25303)) b!135380))

(assert (= (and b!135380 c!25304) b!135381))

(assert (= (and b!135380 (not c!25304)) b!135382))

(declare-fun m!161311 () Bool)

(assert (=> b!135381 m!161311))

(assert (=> b!133079 d!42109))

(declare-fun d!42111 () Bool)

(declare-fun res!65010 () Bool)

(declare-fun e!88167 () Bool)

(assert (=> d!42111 (=> res!65010 e!88167)))

(assert (=> d!42111 (= res!65010 (or ((_ is Nil!1713) lt!69819) ((_ is Nil!1713) (t!6167 lt!69819))))))

(assert (=> d!42111 (= (isStrictlySorted!322 lt!69819) e!88167)))

(declare-fun b!135383 () Bool)

(declare-fun e!88168 () Bool)

(assert (=> b!135383 (= e!88167 e!88168)))

(declare-fun res!65011 () Bool)

(assert (=> b!135383 (=> (not res!65011) (not e!88168))))

(assert (=> b!135383 (= res!65011 (bvslt (_1!1324 (h!2317 lt!69819)) (_1!1324 (h!2317 (t!6167 lt!69819)))))))

(declare-fun b!135384 () Bool)

(assert (=> b!135384 (= e!88168 (isStrictlySorted!322 (t!6167 lt!69819)))))

(assert (= (and d!42111 (not res!65010)) b!135383))

(assert (= (and b!135383 res!65011) b!135384))

(declare-fun m!161313 () Bool)

(assert (=> b!135384 m!161313))

(assert (=> d!40631 d!42111))

(declare-fun d!42113 () Bool)

(declare-fun res!65012 () Bool)

(declare-fun e!88169 () Bool)

(assert (=> d!42113 (=> res!65012 e!88169)))

(assert (=> d!42113 (= res!65012 (or ((_ is Nil!1713) (toList!869 e!86455)) ((_ is Nil!1713) (t!6167 (toList!869 e!86455)))))))

(assert (=> d!42113 (= (isStrictlySorted!322 (toList!869 e!86455)) e!88169)))

(declare-fun b!135385 () Bool)

(declare-fun e!88170 () Bool)

(assert (=> b!135385 (= e!88169 e!88170)))

(declare-fun res!65013 () Bool)

(assert (=> b!135385 (=> (not res!65013) (not e!88170))))

(assert (=> b!135385 (= res!65013 (bvslt (_1!1324 (h!2317 (toList!869 e!86455))) (_1!1324 (h!2317 (t!6167 (toList!869 e!86455))))))))

(declare-fun b!135386 () Bool)

(assert (=> b!135386 (= e!88170 (isStrictlySorted!322 (t!6167 (toList!869 e!86455))))))

(assert (= (and d!42113 (not res!65012)) b!135385))

(assert (= (and b!135385 res!65013) b!135386))

(assert (=> b!135386 m!160081))

(assert (=> d!40631 d!42113))

(declare-fun d!42115 () Bool)

(declare-fun e!88171 () Bool)

(assert (=> d!42115 e!88171))

(declare-fun res!65014 () Bool)

(assert (=> d!42115 (=> res!65014 e!88171)))

(declare-fun lt!70751 () Bool)

(assert (=> d!42115 (= res!65014 (not lt!70751))))

(declare-fun lt!70748 () Bool)

(assert (=> d!42115 (= lt!70751 lt!70748)))

(declare-fun lt!70750 () Unit!4135)

(declare-fun e!88172 () Unit!4135)

(assert (=> d!42115 (= lt!70750 e!88172)))

(declare-fun c!25305 () Bool)

(assert (=> d!42115 (= c!25305 lt!70748)))

(assert (=> d!42115 (= lt!70748 (containsKey!176 (toList!869 lt!69614) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42115 (= (contains!899 lt!69614 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70751)))

(declare-fun b!135387 () Bool)

(declare-fun lt!70749 () Unit!4135)

(assert (=> b!135387 (= e!88172 lt!70749)))

(assert (=> b!135387 (= lt!70749 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69614) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135387 (isDefined!125 (getValueByKey!172 (toList!869 lt!69614) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135388 () Bool)

(declare-fun Unit!4258 () Unit!4135)

(assert (=> b!135388 (= e!88172 Unit!4258)))

(declare-fun b!135389 () Bool)

(assert (=> b!135389 (= e!88171 (isDefined!125 (getValueByKey!172 (toList!869 lt!69614) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42115 c!25305) b!135387))

(assert (= (and d!42115 (not c!25305)) b!135388))

(assert (= (and d!42115 (not res!65014)) b!135389))

(declare-fun m!161315 () Bool)

(assert (=> d!42115 m!161315))

(declare-fun m!161317 () Bool)

(assert (=> b!135387 m!161317))

(declare-fun m!161319 () Bool)

(assert (=> b!135387 m!161319))

(assert (=> b!135387 m!161319))

(declare-fun m!161321 () Bool)

(assert (=> b!135387 m!161321))

(assert (=> b!135389 m!161319))

(assert (=> b!135389 m!161319))

(assert (=> b!135389 m!161321))

(assert (=> b!133159 d!42115))

(assert (=> b!133119 d!41121))

(assert (=> b!133119 d!41123))

(declare-fun d!42117 () Bool)

(assert (not d!42117))

(assert (=> b!133486 d!42117))

(assert (=> d!40433 d!40437))

(assert (=> d!40433 d!40443))

(declare-fun d!42119 () Bool)

(assert (=> d!42119 (contains!899 (+!175 lt!69462 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))) lt!69461)))

(assert (=> d!42119 true))

(declare-fun _$35!382 () Unit!4135)

(assert (=> d!42119 (= (choose!823 lt!69462 lt!69456 (zeroValue!2720 newMap!16) lt!69461) _$35!382)))

(declare-fun bs!5669 () Bool)

(assert (= bs!5669 d!42119))

(assert (=> bs!5669 m!156527))

(assert (=> bs!5669 m!156527))

(assert (=> bs!5669 m!156551))

(assert (=> d!40433 d!42119))

(declare-fun d!42121 () Bool)

(declare-fun e!88173 () Bool)

(assert (=> d!42121 e!88173))

(declare-fun res!65015 () Bool)

(assert (=> d!42121 (=> res!65015 e!88173)))

(declare-fun lt!70755 () Bool)

(assert (=> d!42121 (= res!65015 (not lt!70755))))

(declare-fun lt!70752 () Bool)

(assert (=> d!42121 (= lt!70755 lt!70752)))

(declare-fun lt!70754 () Unit!4135)

(declare-fun e!88174 () Unit!4135)

(assert (=> d!42121 (= lt!70754 e!88174)))

(declare-fun c!25306 () Bool)

(assert (=> d!42121 (= c!25306 lt!70752)))

(assert (=> d!42121 (= lt!70752 (containsKey!176 (toList!869 lt!69462) lt!69461))))

(assert (=> d!42121 (= (contains!899 lt!69462 lt!69461) lt!70755)))

(declare-fun b!135390 () Bool)

(declare-fun lt!70753 () Unit!4135)

(assert (=> b!135390 (= e!88174 lt!70753)))

(assert (=> b!135390 (= lt!70753 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69462) lt!69461))))

(assert (=> b!135390 (isDefined!125 (getValueByKey!172 (toList!869 lt!69462) lt!69461))))

(declare-fun b!135391 () Bool)

(declare-fun Unit!4259 () Unit!4135)

(assert (=> b!135391 (= e!88174 Unit!4259)))

(declare-fun b!135392 () Bool)

(assert (=> b!135392 (= e!88173 (isDefined!125 (getValueByKey!172 (toList!869 lt!69462) lt!69461)))))

(assert (= (and d!42121 c!25306) b!135390))

(assert (= (and d!42121 (not c!25306)) b!135391))

(assert (= (and d!42121 (not res!65015)) b!135392))

(declare-fun m!161323 () Bool)

(assert (=> d!42121 m!161323))

(declare-fun m!161325 () Bool)

(assert (=> b!135390 m!161325))

(declare-fun m!161327 () Bool)

(assert (=> b!135390 m!161327))

(assert (=> b!135390 m!161327))

(declare-fun m!161329 () Bool)

(assert (=> b!135390 m!161329))

(assert (=> b!135392 m!161327))

(assert (=> b!135392 m!161327))

(assert (=> b!135392 m!161329))

(assert (=> d!40433 d!42121))

(declare-fun d!42123 () Bool)

(declare-fun res!65016 () Bool)

(declare-fun e!88175 () Bool)

(assert (=> d!42123 (=> res!65016 e!88175)))

(assert (=> d!42123 (= res!65016 (or ((_ is Nil!1713) lt!69942) ((_ is Nil!1713) (t!6167 lt!69942))))))

(assert (=> d!42123 (= (isStrictlySorted!322 lt!69942) e!88175)))

(declare-fun b!135393 () Bool)

(declare-fun e!88176 () Bool)

(assert (=> b!135393 (= e!88175 e!88176)))

(declare-fun res!65017 () Bool)

(assert (=> b!135393 (=> (not res!65017) (not e!88176))))

(assert (=> b!135393 (= res!65017 (bvslt (_1!1324 (h!2317 lt!69942)) (_1!1324 (h!2317 (t!6167 lt!69942)))))))

(declare-fun b!135394 () Bool)

(assert (=> b!135394 (= e!88176 (isStrictlySorted!322 (t!6167 lt!69942)))))

(assert (= (and d!42123 (not res!65016)) b!135393))

(assert (= (and b!135393 res!65017) b!135394))

(declare-fun m!161331 () Bool)

(assert (=> b!135394 m!161331))

(assert (=> d!40727 d!42123))

(declare-fun d!42125 () Bool)

(declare-fun res!65018 () Bool)

(declare-fun e!88177 () Bool)

(assert (=> d!42125 (=> res!65018 e!88177)))

(assert (=> d!42125 (= res!65018 (or ((_ is Nil!1713) (toList!869 lt!69081)) ((_ is Nil!1713) (t!6167 (toList!869 lt!69081)))))))

(assert (=> d!42125 (= (isStrictlySorted!322 (toList!869 lt!69081)) e!88177)))

(declare-fun b!135395 () Bool)

(declare-fun e!88178 () Bool)

(assert (=> b!135395 (= e!88177 e!88178)))

(declare-fun res!65019 () Bool)

(assert (=> b!135395 (=> (not res!65019) (not e!88178))))

(assert (=> b!135395 (= res!65019 (bvslt (_1!1324 (h!2317 (toList!869 lt!69081))) (_1!1324 (h!2317 (t!6167 (toList!869 lt!69081))))))))

(declare-fun b!135396 () Bool)

(assert (=> b!135396 (= e!88178 (isStrictlySorted!322 (t!6167 (toList!869 lt!69081))))))

(assert (= (and d!42125 (not res!65018)) b!135395))

(assert (= (and b!135395 res!65019) b!135396))

(assert (=> b!135396 m!160845))

(assert (=> d!40727 d!42125))

(declare-fun lt!70756 () Bool)

(declare-fun d!42127 () Bool)

(assert (=> d!42127 (= lt!70756 (select (content!133 (t!6167 (toList!869 lt!69418))) (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun e!88180 () Bool)

(assert (=> d!42127 (= lt!70756 e!88180)))

(declare-fun res!65020 () Bool)

(assert (=> d!42127 (=> (not res!65020) (not e!88180))))

(assert (=> d!42127 (= res!65020 ((_ is Cons!1712) (t!6167 (toList!869 lt!69418))))))

(assert (=> d!42127 (= (contains!902 (t!6167 (toList!869 lt!69418)) (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))) lt!70756)))

(declare-fun b!135397 () Bool)

(declare-fun e!88179 () Bool)

(assert (=> b!135397 (= e!88180 e!88179)))

(declare-fun res!65021 () Bool)

(assert (=> b!135397 (=> res!65021 e!88179)))

(assert (=> b!135397 (= res!65021 (= (h!2317 (t!6167 (toList!869 lt!69418))) (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!135398 () Bool)

(assert (=> b!135398 (= e!88179 (contains!902 (t!6167 (t!6167 (toList!869 lt!69418))) (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!42127 res!65020) b!135397))

(assert (= (and b!135397 (not res!65021)) b!135398))

(assert (=> d!42127 m!160217))

(declare-fun m!161333 () Bool)

(assert (=> d!42127 m!161333))

(declare-fun m!161335 () Bool)

(assert (=> b!135398 m!161335))

(assert (=> b!133716 d!42127))

(declare-fun d!42129 () Bool)

(assert (=> d!42129 (isDefined!125 (getValueByKey!172 (toList!869 lt!69209) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun lt!70757 () Unit!4135)

(assert (=> d!42129 (= lt!70757 (choose!817 (toList!869 lt!69209) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!88181 () Bool)

(assert (=> d!42129 e!88181))

(declare-fun res!65022 () Bool)

(assert (=> d!42129 (=> (not res!65022) (not e!88181))))

(assert (=> d!42129 (= res!65022 (isStrictlySorted!322 (toList!869 lt!69209)))))

(assert (=> d!42129 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69209) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!70757)))

(declare-fun b!135399 () Bool)

(assert (=> b!135399 (= e!88181 (containsKey!176 (toList!869 lt!69209) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!42129 res!65022) b!135399))

(assert (=> d!42129 m!156103))

(assert (=> d!42129 m!156103))

(assert (=> d!42129 m!157027))

(declare-fun m!161337 () Bool)

(assert (=> d!42129 m!161337))

(declare-fun m!161339 () Bool)

(assert (=> d!42129 m!161339))

(assert (=> b!135399 m!157023))

(assert (=> b!133167 d!42129))

(declare-fun d!42131 () Bool)

(assert (=> d!42131 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69209) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69209) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))))

(declare-fun bs!5670 () Bool)

(assert (= bs!5670 d!42131))

(assert (=> bs!5670 m!156103))

(declare-fun m!161341 () Bool)

(assert (=> bs!5670 m!161341))

(assert (=> b!133167 d!42131))

(assert (=> b!133167 d!40397))

(assert (=> d!40823 d!40681))

(assert (=> d!40823 d!40683))

(declare-fun d!42133 () Bool)

(assert (=> d!42133 (isDefined!125 (getValueByKey!172 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> d!42133 true))

(declare-fun _$12!404 () Unit!4135)

(assert (=> d!42133 (= (choose!817 (toList!869 call!14619) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) _$12!404)))

(declare-fun bs!5671 () Bool)

(assert (= bs!5671 d!42133))

(assert (=> bs!5671 m!155869))

(assert (=> bs!5671 m!156633))

(assert (=> bs!5671 m!156633))

(assert (=> bs!5671 m!156635))

(assert (=> d!40823 d!42133))

(declare-fun d!42135 () Bool)

(declare-fun res!65023 () Bool)

(declare-fun e!88182 () Bool)

(assert (=> d!42135 (=> res!65023 e!88182)))

(assert (=> d!42135 (= res!65023 (or ((_ is Nil!1713) (toList!869 call!14619)) ((_ is Nil!1713) (t!6167 (toList!869 call!14619)))))))

(assert (=> d!42135 (= (isStrictlySorted!322 (toList!869 call!14619)) e!88182)))

(declare-fun b!135400 () Bool)

(declare-fun e!88183 () Bool)

(assert (=> b!135400 (= e!88182 e!88183)))

(declare-fun res!65024 () Bool)

(assert (=> b!135400 (=> (not res!65024) (not e!88183))))

(assert (=> b!135400 (= res!65024 (bvslt (_1!1324 (h!2317 (toList!869 call!14619))) (_1!1324 (h!2317 (t!6167 (toList!869 call!14619))))))))

(declare-fun b!135401 () Bool)

(assert (=> b!135401 (= e!88183 (isStrictlySorted!322 (t!6167 (toList!869 call!14619))))))

(assert (= (and d!42135 (not res!65023)) b!135400))

(assert (= (and b!135400 res!65024) b!135401))

(declare-fun m!161343 () Bool)

(assert (=> b!135401 m!161343))

(assert (=> d!40823 d!42135))

(assert (=> b!133292 d!40863))

(declare-fun d!42137 () Bool)

(declare-fun e!88184 () Bool)

(assert (=> d!42137 e!88184))

(declare-fun res!65025 () Bool)

(assert (=> d!42137 (=> res!65025 e!88184)))

(declare-fun lt!70761 () Bool)

(assert (=> d!42137 (= res!65025 (not lt!70761))))

(declare-fun lt!70758 () Bool)

(assert (=> d!42137 (= lt!70761 lt!70758)))

(declare-fun lt!70760 () Unit!4135)

(declare-fun e!88185 () Unit!4135)

(assert (=> d!42137 (= lt!70760 e!88185)))

(declare-fun c!25307 () Bool)

(assert (=> d!42137 (= c!25307 lt!70758)))

(assert (=> d!42137 (= lt!70758 (containsKey!176 (toList!869 lt!69919) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42137 (= (contains!899 lt!69919 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70761)))

(declare-fun b!135402 () Bool)

(declare-fun lt!70759 () Unit!4135)

(assert (=> b!135402 (= e!88185 lt!70759)))

(assert (=> b!135402 (= lt!70759 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69919) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135402 (isDefined!125 (getValueByKey!172 (toList!869 lt!69919) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135403 () Bool)

(declare-fun Unit!4260 () Unit!4135)

(assert (=> b!135403 (= e!88185 Unit!4260)))

(declare-fun b!135404 () Bool)

(assert (=> b!135404 (= e!88184 (isDefined!125 (getValueByKey!172 (toList!869 lt!69919) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42137 c!25307) b!135402))

(assert (= (and d!42137 (not c!25307)) b!135403))

(assert (= (and d!42137 (not res!65025)) b!135404))

(declare-fun m!161345 () Bool)

(assert (=> d!42137 m!161345))

(declare-fun m!161347 () Bool)

(assert (=> b!135402 m!161347))

(assert (=> b!135402 m!159909))

(assert (=> b!135402 m!159909))

(declare-fun m!161349 () Bool)

(assert (=> b!135402 m!161349))

(assert (=> b!135404 m!159909))

(assert (=> b!135404 m!159909))

(assert (=> b!135404 m!161349))

(assert (=> bm!14748 d!42137))

(declare-fun d!42139 () Bool)

(assert (=> d!42139 (= (isEmpty!409 (getValueByKey!172 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!177) (getValueByKey!172 (toList!869 lt!69095) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!40523 d!42139))

(assert (=> b!133323 d!41169))

(declare-fun e!88187 () Option!178)

(declare-fun b!135407 () Bool)

(assert (=> b!135407 (= e!88187 (getValueByKey!172 (t!6167 (toList!869 lt!69943)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135408 () Bool)

(assert (=> b!135408 (= e!88187 None!176)))

(declare-fun c!25308 () Bool)

(declare-fun d!42141 () Bool)

(assert (=> d!42141 (= c!25308 (and ((_ is Cons!1712) (toList!869 lt!69943)) (= (_1!1324 (h!2317 (toList!869 lt!69943))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88186 () Option!178)

(assert (=> d!42141 (= (getValueByKey!172 (toList!869 lt!69943) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88186)))

(declare-fun b!135405 () Bool)

(assert (=> b!135405 (= e!88186 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69943)))))))

(declare-fun b!135406 () Bool)

(assert (=> b!135406 (= e!88186 e!88187)))

(declare-fun c!25309 () Bool)

(assert (=> b!135406 (= c!25309 (and ((_ is Cons!1712) (toList!869 lt!69943)) (not (= (_1!1324 (h!2317 (toList!869 lt!69943))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!42141 c!25308) b!135405))

(assert (= (and d!42141 (not c!25308)) b!135406))

(assert (= (and b!135406 c!25309) b!135407))

(assert (= (and b!135406 (not c!25309)) b!135408))

(declare-fun m!161351 () Bool)

(assert (=> b!135407 m!161351))

(assert (=> b!133692 d!42141))

(declare-fun d!42143 () Bool)

(declare-fun lt!70762 () Bool)

(assert (=> d!42143 (= lt!70762 (select (content!133 (toList!869 lt!69604)) (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))))

(declare-fun e!88189 () Bool)

(assert (=> d!42143 (= lt!70762 e!88189)))

(declare-fun res!65026 () Bool)

(assert (=> d!42143 (=> (not res!65026) (not e!88189))))

(assert (=> d!42143 (= res!65026 ((_ is Cons!1712) (toList!869 lt!69604)))))

(assert (=> d!42143 (= (contains!902 (toList!869 lt!69604) (tuple2!2627 lt!69465 (minValue!2720 newMap!16))) lt!70762)))

(declare-fun b!135409 () Bool)

(declare-fun e!88188 () Bool)

(assert (=> b!135409 (= e!88189 e!88188)))

(declare-fun res!65027 () Bool)

(assert (=> b!135409 (=> res!65027 e!88188)))

(assert (=> b!135409 (= res!65027 (= (h!2317 (toList!869 lt!69604)) (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))))

(declare-fun b!135410 () Bool)

(assert (=> b!135410 (= e!88188 (contains!902 (t!6167 (toList!869 lt!69604)) (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))))

(assert (= (and d!42143 res!65026) b!135409))

(assert (= (and b!135409 (not res!65027)) b!135410))

(declare-fun m!161353 () Bool)

(assert (=> d!42143 m!161353))

(declare-fun m!161355 () Bool)

(assert (=> d!42143 m!161355))

(declare-fun m!161357 () Bool)

(assert (=> b!135410 m!161357))

(assert (=> b!133152 d!42143))

(declare-fun e!88191 () Option!178)

(declare-fun b!135413 () Bool)

(assert (=> b!135413 (= e!88191 (getValueByKey!172 (t!6167 (t!6167 lt!69420)) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!135414 () Bool)

(assert (=> b!135414 (= e!88191 None!176)))

(declare-fun c!25310 () Bool)

(declare-fun d!42145 () Bool)

(assert (=> d!42145 (= c!25310 (and ((_ is Cons!1712) (t!6167 lt!69420)) (= (_1!1324 (h!2317 (t!6167 lt!69420))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!88190 () Option!178)

(assert (=> d!42145 (= (getValueByKey!172 (t!6167 lt!69420) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!88190)))

(declare-fun b!135411 () Bool)

(assert (=> b!135411 (= e!88190 (Some!177 (_2!1324 (h!2317 (t!6167 lt!69420)))))))

(declare-fun b!135412 () Bool)

(assert (=> b!135412 (= e!88190 e!88191)))

(declare-fun c!25311 () Bool)

(assert (=> b!135412 (= c!25311 (and ((_ is Cons!1712) (t!6167 lt!69420)) (not (= (_1!1324 (h!2317 (t!6167 lt!69420))) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!42145 c!25310) b!135411))

(assert (= (and d!42145 (not c!25310)) b!135412))

(assert (= (and b!135412 c!25311) b!135413))

(assert (= (and b!135412 (not c!25311)) b!135414))

(declare-fun m!161359 () Bool)

(assert (=> b!135413 m!161359))

(assert (=> b!133798 d!42145))

(assert (=> b!133489 d!41141))

(assert (=> b!133489 d!40861))

(declare-fun d!42147 () Bool)

(declare-fun lt!70763 () Bool)

(assert (=> d!42147 (= lt!70763 (select (content!132 (t!6168 (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!88192 () Bool)

(assert (=> d!42147 (= lt!70763 e!88192)))

(declare-fun res!65028 () Bool)

(assert (=> d!42147 (=> (not res!65028) (not e!88192))))

(assert (=> d!42147 (= res!65028 ((_ is Cons!1713) (t!6168 (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))))))

(assert (=> d!42147 (= (contains!901 (t!6168 (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!70763)))

(declare-fun b!135415 () Bool)

(declare-fun e!88193 () Bool)

(assert (=> b!135415 (= e!88192 e!88193)))

(declare-fun res!65029 () Bool)

(assert (=> b!135415 (=> res!65029 e!88193)))

(assert (=> b!135415 (= res!65029 (= (h!2318 (t!6168 (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135416 () Bool)

(assert (=> b!135416 (= e!88193 (contains!901 (t!6168 (t!6168 (ite c!24458 (Cons!1713 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) Nil!1714) Nil!1714))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!42147 res!65028) b!135415))

(assert (= (and b!135415 (not res!65029)) b!135416))

(assert (=> d!42147 m!160231))

(assert (=> d!42147 m!156619))

(declare-fun m!161361 () Bool)

(assert (=> d!42147 m!161361))

(assert (=> b!135416 m!156619))

(declare-fun m!161363 () Bool)

(assert (=> b!135416 m!161363))

(assert (=> b!133121 d!42147))

(assert (=> d!40539 d!40325))

(declare-fun d!42149 () Bool)

(assert (=> d!42149 (= (apply!116 lt!69965 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1486 (getValueByKey!172 (toList!869 lt!69965) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5672 () Bool)

(assert (= bs!5672 d!42149))

(assert (=> bs!5672 m!156163))

(assert (=> bs!5672 m!158991))

(assert (=> bs!5672 m!158991))

(declare-fun m!161365 () Bool)

(assert (=> bs!5672 m!161365))

(assert (=> b!133704 d!42149))

(assert (=> b!133704 d!40375))

(declare-fun e!88195 () Option!178)

(declare-fun b!135419 () Bool)

(assert (=> b!135419 (= e!88195 (getValueByKey!172 (t!6167 (t!6167 lt!69211)) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!135420 () Bool)

(assert (=> b!135420 (= e!88195 None!176)))

(declare-fun c!25312 () Bool)

(declare-fun d!42151 () Bool)

(assert (=> d!42151 (= c!25312 (and ((_ is Cons!1712) (t!6167 lt!69211)) (= (_1!1324 (h!2317 (t!6167 lt!69211))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun e!88194 () Option!178)

(assert (=> d!42151 (= (getValueByKey!172 (t!6167 lt!69211) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) e!88194)))

(declare-fun b!135417 () Bool)

(assert (=> b!135417 (= e!88194 (Some!177 (_2!1324 (h!2317 (t!6167 lt!69211)))))))

(declare-fun b!135418 () Bool)

(assert (=> b!135418 (= e!88194 e!88195)))

(declare-fun c!25313 () Bool)

(assert (=> b!135418 (= c!25313 (and ((_ is Cons!1712) (t!6167 lt!69211)) (not (= (_1!1324 (h!2317 (t!6167 lt!69211))) (_1!1324 (ite (or c!24451 c!24449) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))))

(assert (= (and d!42151 c!25312) b!135417))

(assert (= (and d!42151 (not c!25312)) b!135418))

(assert (= (and b!135418 c!25313) b!135419))

(assert (= (and b!135418 (not c!25313)) b!135420))

(declare-fun m!161367 () Bool)

(assert (=> b!135419 m!161367))

(assert (=> b!133172 d!42151))

(declare-fun d!42153 () Bool)

(assert (=> d!42153 (= (apply!116 lt!69919 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69919) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5673 () Bool)

(assert (= bs!5673 d!42153))

(assert (=> bs!5673 m!160537))

(assert (=> bs!5673 m!160537))

(declare-fun m!161369 () Bool)

(assert (=> bs!5673 m!161369))

(assert (=> b!133631 d!42153))

(declare-fun d!42155 () Bool)

(declare-fun res!65030 () Bool)

(declare-fun e!88196 () Bool)

(assert (=> d!42155 (=> res!65030 e!88196)))

(assert (=> d!42155 (= res!65030 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(assert (=> d!42155 (= (containsKey!176 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))) e!88196)))

(declare-fun b!135421 () Bool)

(declare-fun e!88197 () Bool)

(assert (=> b!135421 (= e!88196 e!88197)))

(declare-fun res!65031 () Bool)

(assert (=> b!135421 (=> (not res!65031) (not e!88197))))

(assert (=> b!135421 (= res!65031 (and (or (not ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (bvsle (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))) ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvslt (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(declare-fun b!135422 () Bool)

(assert (=> b!135422 (= e!88197 (containsKey!176 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) lt!69190 (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175))))))

(assert (= (and d!42155 (not res!65030)) b!135421))

(assert (= (and b!135421 res!65031) b!135422))

(assert (=> b!135422 m!156069))

(declare-fun m!161371 () Bool)

(assert (=> b!135422 m!161371))

(assert (=> d!40639 d!42155))

(declare-fun d!42157 () Bool)

(declare-fun res!65032 () Bool)

(declare-fun e!88198 () Bool)

(assert (=> d!42157 (=> res!65032 e!88198)))

(assert (=> d!42157 (= res!65032 (and ((_ is Cons!1712) (toList!869 lt!69093)) (= (_1!1324 (h!2317 (toList!869 lt!69093))) lt!69092)))))

(assert (=> d!42157 (= (containsKey!176 (toList!869 lt!69093) lt!69092) e!88198)))

(declare-fun b!135423 () Bool)

(declare-fun e!88199 () Bool)

(assert (=> b!135423 (= e!88198 e!88199)))

(declare-fun res!65033 () Bool)

(assert (=> b!135423 (=> (not res!65033) (not e!88199))))

(assert (=> b!135423 (= res!65033 (and (or (not ((_ is Cons!1712) (toList!869 lt!69093))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69093))) lt!69092)) ((_ is Cons!1712) (toList!869 lt!69093)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69093))) lt!69092)))))

(declare-fun b!135424 () Bool)

(assert (=> b!135424 (= e!88199 (containsKey!176 (t!6167 (toList!869 lt!69093)) lt!69092))))

(assert (= (and d!42157 (not res!65032)) b!135423))

(assert (= (and b!135423 res!65033) b!135424))

(declare-fun m!161373 () Bool)

(assert (=> b!135424 m!161373))

(assert (=> d!40385 d!42157))

(declare-fun e!88201 () Option!178)

(declare-fun b!135427 () Bool)

(assert (=> b!135427 (= e!88201 (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69422))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135428 () Bool)

(assert (=> b!135428 (= e!88201 None!176)))

(declare-fun c!25314 () Bool)

(declare-fun d!42159 () Bool)

(assert (=> d!42159 (= c!25314 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69422))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69422)))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!88200 () Option!178)

(assert (=> d!42159 (= (getValueByKey!172 (t!6167 (toList!869 lt!69422)) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!88200)))

(declare-fun b!135425 () Bool)

(assert (=> b!135425 (= e!88200 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 lt!69422))))))))

(declare-fun b!135426 () Bool)

(assert (=> b!135426 (= e!88200 e!88201)))

(declare-fun c!25315 () Bool)

(assert (=> b!135426 (= c!25315 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69422))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69422)))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(assert (= (and d!42159 c!25314) b!135425))

(assert (= (and d!42159 (not c!25314)) b!135426))

(assert (= (and b!135426 c!25315) b!135427))

(assert (= (and b!135426 (not c!25315)) b!135428))

(declare-fun m!161375 () Bool)

(assert (=> b!135427 m!161375))

(assert (=> b!133479 d!42159))

(declare-fun d!42161 () Bool)

(assert (=> d!42161 (isDefined!125 (getValueByKey!172 (toList!869 lt!69464) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70764 () Unit!4135)

(assert (=> d!42161 (= lt!70764 (choose!817 (toList!869 lt!69464) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88202 () Bool)

(assert (=> d!42161 e!88202))

(declare-fun res!65034 () Bool)

(assert (=> d!42161 (=> (not res!65034) (not e!88202))))

(assert (=> d!42161 (= res!65034 (isStrictlySorted!322 (toList!869 lt!69464)))))

(assert (=> d!42161 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69464) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70764)))

(declare-fun b!135429 () Bool)

(assert (=> b!135429 (= e!88202 (containsKey!176 (toList!869 lt!69464) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42161 res!65034) b!135429))

(assert (=> d!42161 m!157727))

(assert (=> d!42161 m!157727))

(assert (=> d!42161 m!157729))

(declare-fun m!161377 () Bool)

(assert (=> d!42161 m!161377))

(assert (=> d!42161 m!159967))

(assert (=> b!135429 m!157723))

(assert (=> b!133550 d!42161))

(declare-fun d!42163 () Bool)

(assert (=> d!42163 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69464) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69464) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5674 () Bool)

(assert (= bs!5674 d!42163))

(assert (=> bs!5674 m!157727))

(declare-fun m!161379 () Bool)

(assert (=> bs!5674 m!161379))

(assert (=> b!133550 d!42163))

(assert (=> b!133550 d!40857))

(declare-fun d!42165 () Bool)

(declare-fun e!88203 () Bool)

(assert (=> d!42165 e!88203))

(declare-fun res!65036 () Bool)

(assert (=> d!42165 (=> (not res!65036) (not e!88203))))

(declare-fun lt!70765 () ListLongMap!1707)

(assert (=> d!42165 (= res!65036 (contains!899 lt!70765 (_1!1324 (ite (or c!24672 c!24670) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun lt!70767 () List!1716)

(assert (=> d!42165 (= lt!70765 (ListLongMap!1708 lt!70767))))

(declare-fun lt!70768 () Unit!4135)

(declare-fun lt!70766 () Unit!4135)

(assert (=> d!42165 (= lt!70768 lt!70766)))

(assert (=> d!42165 (= (getValueByKey!172 lt!70767 (_1!1324 (ite (or c!24672 c!24670) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24672 c!24670) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42165 (= lt!70766 (lemmaContainsTupThenGetReturnValue!87 lt!70767 (_1!1324 (ite (or c!24672 c!24670) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24672 c!24670) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42165 (= lt!70767 (insertStrictlySorted!90 (toList!869 (ite c!24672 call!14700 (ite c!24670 call!14703 call!14704))) (_1!1324 (ite (or c!24672 c!24670) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (_2!1324 (ite (or c!24672 c!24670) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(assert (=> d!42165 (= (+!175 (ite c!24672 call!14700 (ite c!24670 call!14703 call!14704)) (ite (or c!24672 c!24670) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) lt!70765)))

(declare-fun b!135430 () Bool)

(declare-fun res!65035 () Bool)

(assert (=> b!135430 (=> (not res!65035) (not e!88203))))

(assert (=> b!135430 (= res!65035 (= (getValueByKey!172 (toList!869 lt!70765) (_1!1324 (ite (or c!24672 c!24670) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (ite (or c!24672 c!24670) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(declare-fun b!135431 () Bool)

(assert (=> b!135431 (= e!88203 (contains!902 (toList!869 lt!70765) (ite (or c!24672 c!24670) (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (= (and d!42165 res!65036) b!135430))

(assert (= (and b!135430 res!65035) b!135431))

(declare-fun m!161381 () Bool)

(assert (=> d!42165 m!161381))

(declare-fun m!161383 () Bool)

(assert (=> d!42165 m!161383))

(declare-fun m!161385 () Bool)

(assert (=> d!42165 m!161385))

(declare-fun m!161387 () Bool)

(assert (=> d!42165 m!161387))

(declare-fun m!161389 () Bool)

(assert (=> b!135430 m!161389))

(declare-fun m!161391 () Bool)

(assert (=> b!135431 m!161391))

(assert (=> bm!14697 d!42165))

(declare-fun d!42167 () Bool)

(assert (=> d!42167 (isDefined!125 (getValueByKey!172 (toList!869 lt!69418) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun lt!70769 () Unit!4135)

(assert (=> d!42167 (= lt!70769 (choose!817 (toList!869 lt!69418) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun e!88204 () Bool)

(assert (=> d!42167 e!88204))

(declare-fun res!65037 () Bool)

(assert (=> d!42167 (=> (not res!65037) (not e!88204))))

(assert (=> d!42167 (= res!65037 (isStrictlySorted!322 (toList!869 lt!69418)))))

(assert (=> d!42167 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69418) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!70769)))

(declare-fun b!135432 () Bool)

(assert (=> b!135432 (= e!88204 (containsKey!176 (toList!869 lt!69418) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!42167 res!65037) b!135432))

(assert (=> d!42167 m!156435))

(assert (=> d!42167 m!156435))

(assert (=> d!42167 m!158275))

(declare-fun m!161393 () Bool)

(assert (=> d!42167 m!161393))

(declare-fun m!161395 () Bool)

(assert (=> d!42167 m!161395))

(assert (=> b!135432 m!158271))

(assert (=> b!133793 d!42167))

(declare-fun d!42169 () Bool)

(assert (=> d!42169 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69418) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69418) (_1!1324 (tuple2!2627 lt!69086 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun bs!5675 () Bool)

(assert (= bs!5675 d!42169))

(assert (=> bs!5675 m!156435))

(declare-fun m!161397 () Bool)

(assert (=> bs!5675 m!161397))

(assert (=> b!133793 d!42169))

(assert (=> b!133793 d!40813))

(declare-fun b!135435 () Bool)

(declare-fun e!88206 () Option!178)

(assert (=> b!135435 (= e!88206 (getValueByKey!172 (t!6167 (toList!869 lt!69648)) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!135436 () Bool)

(assert (=> b!135436 (= e!88206 None!176)))

(declare-fun d!42171 () Bool)

(declare-fun c!25316 () Bool)

(assert (=> d!42171 (= c!25316 (and ((_ is Cons!1712) (toList!869 lt!69648)) (= (_1!1324 (h!2317 (toList!869 lt!69648))) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun e!88205 () Option!178)

(assert (=> d!42171 (= (getValueByKey!172 (toList!869 lt!69648) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) e!88205)))

(declare-fun b!135433 () Bool)

(assert (=> b!135433 (= e!88205 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69648)))))))

(declare-fun b!135434 () Bool)

(assert (=> b!135434 (= e!88205 e!88206)))

(declare-fun c!25317 () Bool)

(assert (=> b!135434 (= c!25317 (and ((_ is Cons!1712) (toList!869 lt!69648)) (not (= (_1!1324 (h!2317 (toList!869 lt!69648))) (_1!1324 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (= (and d!42171 c!25316) b!135433))

(assert (= (and d!42171 (not c!25316)) b!135434))

(assert (= (and b!135434 c!25317) b!135435))

(assert (= (and b!135434 (not c!25317)) b!135436))

(declare-fun m!161399 () Bool)

(assert (=> b!135435 m!161399))

(assert (=> b!133233 d!42171))

(declare-fun b!135439 () Bool)

(declare-fun e!88208 () Option!178)

(assert (=> b!135439 (= e!88208 (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69442))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!135440 () Bool)

(assert (=> b!135440 (= e!88208 None!176)))

(declare-fun d!42173 () Bool)

(declare-fun c!25318 () Bool)

(assert (=> d!42173 (= c!25318 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69442))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69442)))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!88207 () Option!178)

(assert (=> d!42173 (= (getValueByKey!172 (t!6167 (toList!869 lt!69442)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!88207)))

(declare-fun b!135437 () Bool)

(assert (=> b!135437 (= e!88207 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 lt!69442))))))))

(declare-fun b!135438 () Bool)

(assert (=> b!135438 (= e!88207 e!88208)))

(declare-fun c!25319 () Bool)

(assert (=> b!135438 (= c!25319 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69442))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69442)))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!42173 c!25318) b!135437))

(assert (= (and d!42173 (not c!25318)) b!135438))

(assert (= (and b!135438 c!25319) b!135439))

(assert (= (and b!135438 (not c!25319)) b!135440))

(declare-fun m!161401 () Bool)

(assert (=> b!135439 m!161401))

(assert (=> b!133640 d!42173))

(declare-fun b!135441 () Bool)

(declare-fun e!88210 () (_ BitVec 32))

(declare-fun e!88209 () (_ BitVec 32))

(assert (=> b!135441 (= e!88210 e!88209)))

(declare-fun c!25320 () Bool)

(assert (=> b!135441 (= c!25320 (validKeyInArray!0 (select (arr!2261 lt!69334) (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001))))))

(declare-fun b!135442 () Bool)

(declare-fun call!14888 () (_ BitVec 32))

(assert (=> b!135442 (= e!88209 (bvadd #b00000000000000000000000000000001 call!14888))))

(declare-fun b!135443 () Bool)

(assert (=> b!135443 (= e!88209 call!14888)))

(declare-fun d!42175 () Bool)

(declare-fun lt!70770 () (_ BitVec 32))

(assert (=> d!42175 (and (bvsge lt!70770 #b00000000000000000000000000000000) (bvsle lt!70770 (bvsub (size!2530 lt!69334) (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001))))))

(assert (=> d!42175 (= lt!70770 e!88210)))

(declare-fun c!25321 () Bool)

(assert (=> d!42175 (= c!25321 (bvsge (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001) (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001)))))

(assert (=> d!42175 (and (bvsle (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001) (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001)) (bvsge (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001) (size!2530 lt!69334)))))

(assert (=> d!42175 (= (arrayCountValidKeys!0 lt!69334 (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001) (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001)) lt!70770)))

(declare-fun b!135444 () Bool)

(assert (=> b!135444 (= e!88210 #b00000000000000000000000000000000)))

(declare-fun bm!14885 () Bool)

(assert (=> bm!14885 (= call!14888 (arrayCountValidKeys!0 lt!69334 (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (bvadd (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) #b00000000000000000000000000000001)))))

(assert (= (and d!42175 c!25321) b!135444))

(assert (= (and d!42175 (not c!25321)) b!135441))

(assert (= (and b!135441 c!25320) b!135442))

(assert (= (and b!135441 (not c!25320)) b!135443))

(assert (= (or b!135442 b!135443) bm!14885))

(declare-fun m!161403 () Bool)

(assert (=> b!135441 m!161403))

(assert (=> b!135441 m!161403))

(declare-fun m!161405 () Bool)

(assert (=> b!135441 m!161405))

(declare-fun m!161407 () Bool)

(assert (=> bm!14885 m!161407))

(assert (=> bm!14711 d!42175))

(assert (=> b!133737 d!40841))

(declare-fun d!42177 () Bool)

(declare-fun e!88211 () Bool)

(assert (=> d!42177 e!88211))

(declare-fun res!65038 () Bool)

(assert (=> d!42177 (=> res!65038 e!88211)))

(declare-fun lt!70774 () Bool)

(assert (=> d!42177 (= res!65038 (not lt!70774))))

(declare-fun lt!70771 () Bool)

(assert (=> d!42177 (= lt!70774 lt!70771)))

(declare-fun lt!70773 () Unit!4135)

(declare-fun e!88212 () Unit!4135)

(assert (=> d!42177 (= lt!70773 e!88212)))

(declare-fun c!25322 () Bool)

(assert (=> d!42177 (= c!25322 lt!70771)))

(assert (=> d!42177 (= lt!70771 (containsKey!176 (toList!869 lt!69532) (_1!1324 (tuple2!2627 lt!69406 lt!69403))))))

(assert (=> d!42177 (= (contains!899 lt!69532 (_1!1324 (tuple2!2627 lt!69406 lt!69403))) lt!70774)))

(declare-fun b!135445 () Bool)

(declare-fun lt!70772 () Unit!4135)

(assert (=> b!135445 (= e!88212 lt!70772)))

(assert (=> b!135445 (= lt!70772 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69532) (_1!1324 (tuple2!2627 lt!69406 lt!69403))))))

(assert (=> b!135445 (isDefined!125 (getValueByKey!172 (toList!869 lt!69532) (_1!1324 (tuple2!2627 lt!69406 lt!69403))))))

(declare-fun b!135446 () Bool)

(declare-fun Unit!4261 () Unit!4135)

(assert (=> b!135446 (= e!88212 Unit!4261)))

(declare-fun b!135447 () Bool)

(assert (=> b!135447 (= e!88211 (isDefined!125 (getValueByKey!172 (toList!869 lt!69532) (_1!1324 (tuple2!2627 lt!69406 lt!69403)))))))

(assert (= (and d!42177 c!25322) b!135445))

(assert (= (and d!42177 (not c!25322)) b!135446))

(assert (= (and d!42177 (not res!65038)) b!135447))

(declare-fun m!161409 () Bool)

(assert (=> d!42177 m!161409))

(declare-fun m!161411 () Bool)

(assert (=> b!135445 m!161411))

(assert (=> b!135445 m!156739))

(assert (=> b!135445 m!156739))

(declare-fun m!161413 () Bool)

(assert (=> b!135445 m!161413))

(assert (=> b!135447 m!156739))

(assert (=> b!135447 m!156739))

(assert (=> b!135447 m!161413))

(assert (=> d!40357 d!42177))

(declare-fun b!135450 () Bool)

(declare-fun e!88214 () Option!178)

(assert (=> b!135450 (= e!88214 (getValueByKey!172 (t!6167 lt!69534) (_1!1324 (tuple2!2627 lt!69406 lt!69403))))))

(declare-fun b!135451 () Bool)

(assert (=> b!135451 (= e!88214 None!176)))

(declare-fun d!42179 () Bool)

(declare-fun c!25323 () Bool)

(assert (=> d!42179 (= c!25323 (and ((_ is Cons!1712) lt!69534) (= (_1!1324 (h!2317 lt!69534)) (_1!1324 (tuple2!2627 lt!69406 lt!69403)))))))

(declare-fun e!88213 () Option!178)

(assert (=> d!42179 (= (getValueByKey!172 lt!69534 (_1!1324 (tuple2!2627 lt!69406 lt!69403))) e!88213)))

(declare-fun b!135448 () Bool)

(assert (=> b!135448 (= e!88213 (Some!177 (_2!1324 (h!2317 lt!69534))))))

(declare-fun b!135449 () Bool)

(assert (=> b!135449 (= e!88213 e!88214)))

(declare-fun c!25324 () Bool)

(assert (=> b!135449 (= c!25324 (and ((_ is Cons!1712) lt!69534) (not (= (_1!1324 (h!2317 lt!69534)) (_1!1324 (tuple2!2627 lt!69406 lt!69403))))))))

(assert (= (and d!42179 c!25323) b!135448))

(assert (= (and d!42179 (not c!25323)) b!135449))

(assert (= (and b!135449 c!25324) b!135450))

(assert (= (and b!135449 (not c!25324)) b!135451))

(declare-fun m!161415 () Bool)

(assert (=> b!135450 m!161415))

(assert (=> d!40357 d!42179))

(declare-fun d!42181 () Bool)

(assert (=> d!42181 (= (getValueByKey!172 lt!69534 (_1!1324 (tuple2!2627 lt!69406 lt!69403))) (Some!177 (_2!1324 (tuple2!2627 lt!69406 lt!69403))))))

(declare-fun lt!70775 () Unit!4135)

(assert (=> d!42181 (= lt!70775 (choose!827 lt!69534 (_1!1324 (tuple2!2627 lt!69406 lt!69403)) (_2!1324 (tuple2!2627 lt!69406 lt!69403))))))

(declare-fun e!88215 () Bool)

(assert (=> d!42181 e!88215))

(declare-fun res!65039 () Bool)

(assert (=> d!42181 (=> (not res!65039) (not e!88215))))

(assert (=> d!42181 (= res!65039 (isStrictlySorted!322 lt!69534))))

(assert (=> d!42181 (= (lemmaContainsTupThenGetReturnValue!87 lt!69534 (_1!1324 (tuple2!2627 lt!69406 lt!69403)) (_2!1324 (tuple2!2627 lt!69406 lt!69403))) lt!70775)))

(declare-fun b!135452 () Bool)

(declare-fun res!65040 () Bool)

(assert (=> b!135452 (=> (not res!65040) (not e!88215))))

(assert (=> b!135452 (= res!65040 (containsKey!176 lt!69534 (_1!1324 (tuple2!2627 lt!69406 lt!69403))))))

(declare-fun b!135453 () Bool)

(assert (=> b!135453 (= e!88215 (contains!902 lt!69534 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69406 lt!69403)) (_2!1324 (tuple2!2627 lt!69406 lt!69403)))))))

(assert (= (and d!42181 res!65039) b!135452))

(assert (= (and b!135452 res!65040) b!135453))

(assert (=> d!42181 m!156733))

(declare-fun m!161417 () Bool)

(assert (=> d!42181 m!161417))

(declare-fun m!161419 () Bool)

(assert (=> d!42181 m!161419))

(declare-fun m!161421 () Bool)

(assert (=> b!135452 m!161421))

(declare-fun m!161423 () Bool)

(assert (=> b!135453 m!161423))

(assert (=> d!40357 d!42181))

(declare-fun bm!14886 () Bool)

(declare-fun call!14890 () List!1716)

(declare-fun call!14891 () List!1716)

(assert (=> bm!14886 (= call!14890 call!14891)))

(declare-fun d!42183 () Bool)

(declare-fun e!88219 () Bool)

(assert (=> d!42183 e!88219))

(declare-fun res!65042 () Bool)

(assert (=> d!42183 (=> (not res!65042) (not e!88219))))

(declare-fun lt!70776 () List!1716)

(assert (=> d!42183 (= res!65042 (isStrictlySorted!322 lt!70776))))

(declare-fun e!88217 () List!1716)

(assert (=> d!42183 (= lt!70776 e!88217)))

(declare-fun c!25328 () Bool)

(assert (=> d!42183 (= c!25328 (and ((_ is Cons!1712) (toList!869 lt!69407)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69407))) (_1!1324 (tuple2!2627 lt!69406 lt!69403)))))))

(assert (=> d!42183 (isStrictlySorted!322 (toList!869 lt!69407))))

(assert (=> d!42183 (= (insertStrictlySorted!90 (toList!869 lt!69407) (_1!1324 (tuple2!2627 lt!69406 lt!69403)) (_2!1324 (tuple2!2627 lt!69406 lt!69403))) lt!70776)))

(declare-fun b!135454 () Bool)

(assert (=> b!135454 (= e!88219 (contains!902 lt!70776 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69406 lt!69403)) (_2!1324 (tuple2!2627 lt!69406 lt!69403)))))))

(declare-fun c!25326 () Bool)

(declare-fun b!135455 () Bool)

(assert (=> b!135455 (= c!25326 (and ((_ is Cons!1712) (toList!869 lt!69407)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69407))) (_1!1324 (tuple2!2627 lt!69406 lt!69403)))))))

(declare-fun e!88218 () List!1716)

(declare-fun e!88220 () List!1716)

(assert (=> b!135455 (= e!88218 e!88220)))

(declare-fun e!88216 () List!1716)

(declare-fun b!135456 () Bool)

(assert (=> b!135456 (= e!88216 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69407)) (_1!1324 (tuple2!2627 lt!69406 lt!69403)) (_2!1324 (tuple2!2627 lt!69406 lt!69403))))))

(declare-fun b!135457 () Bool)

(assert (=> b!135457 (= e!88218 call!14890)))

(declare-fun b!135458 () Bool)

(declare-fun call!14889 () List!1716)

(assert (=> b!135458 (= e!88220 call!14889)))

(declare-fun b!135459 () Bool)

(declare-fun c!25325 () Bool)

(assert (=> b!135459 (= e!88216 (ite c!25325 (t!6167 (toList!869 lt!69407)) (ite c!25326 (Cons!1712 (h!2317 (toList!869 lt!69407)) (t!6167 (toList!869 lt!69407))) Nil!1713)))))

(declare-fun b!135460 () Bool)

(assert (=> b!135460 (= e!88220 call!14889)))

(declare-fun b!135461 () Bool)

(assert (=> b!135461 (= e!88217 call!14891)))

(declare-fun bm!14887 () Bool)

(assert (=> bm!14887 (= call!14891 ($colon$colon!92 e!88216 (ite c!25328 (h!2317 (toList!869 lt!69407)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69406 lt!69403)) (_2!1324 (tuple2!2627 lt!69406 lt!69403))))))))

(declare-fun c!25327 () Bool)

(assert (=> bm!14887 (= c!25327 c!25328)))

(declare-fun bm!14888 () Bool)

(assert (=> bm!14888 (= call!14889 call!14890)))

(declare-fun b!135462 () Bool)

(declare-fun res!65041 () Bool)

(assert (=> b!135462 (=> (not res!65041) (not e!88219))))

(assert (=> b!135462 (= res!65041 (containsKey!176 lt!70776 (_1!1324 (tuple2!2627 lt!69406 lt!69403))))))

(declare-fun b!135463 () Bool)

(assert (=> b!135463 (= e!88217 e!88218)))

(assert (=> b!135463 (= c!25325 (and ((_ is Cons!1712) (toList!869 lt!69407)) (= (_1!1324 (h!2317 (toList!869 lt!69407))) (_1!1324 (tuple2!2627 lt!69406 lt!69403)))))))

(assert (= (and d!42183 c!25328) b!135461))

(assert (= (and d!42183 (not c!25328)) b!135463))

(assert (= (and b!135463 c!25325) b!135457))

(assert (= (and b!135463 (not c!25325)) b!135455))

(assert (= (and b!135455 c!25326) b!135458))

(assert (= (and b!135455 (not c!25326)) b!135460))

(assert (= (or b!135458 b!135460) bm!14888))

(assert (= (or b!135457 bm!14888) bm!14886))

(assert (= (or b!135461 bm!14886) bm!14887))

(assert (= (and bm!14887 c!25327) b!135456))

(assert (= (and bm!14887 (not c!25327)) b!135459))

(assert (= (and d!42183 res!65042) b!135462))

(assert (= (and b!135462 res!65041) b!135454))

(declare-fun m!161425 () Bool)

(assert (=> d!42183 m!161425))

(declare-fun m!161427 () Bool)

(assert (=> d!42183 m!161427))

(declare-fun m!161429 () Bool)

(assert (=> bm!14887 m!161429))

(declare-fun m!161431 () Bool)

(assert (=> b!135456 m!161431))

(declare-fun m!161433 () Bool)

(assert (=> b!135454 m!161433))

(declare-fun m!161435 () Bool)

(assert (=> b!135462 m!161435))

(assert (=> d!40357 d!42183))

(declare-fun d!42185 () Bool)

(assert (=> d!42185 (= (isEmpty!410 lt!69666) (isEmpty!411 (toList!869 lt!69666)))))

(declare-fun bs!5676 () Bool)

(assert (= bs!5676 d!42185))

(declare-fun m!161437 () Bool)

(assert (=> bs!5676 m!161437))

(assert (=> b!133242 d!42185))

(declare-fun d!42187 () Bool)

(assert (=> d!42187 (= (get!1484 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3198 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000)))))

(assert (=> b!133717 d!42187))

(declare-fun d!42189 () Bool)

(declare-fun e!88221 () Bool)

(assert (=> d!42189 e!88221))

(declare-fun res!65043 () Bool)

(assert (=> d!42189 (=> res!65043 e!88221)))

(declare-fun lt!70780 () Bool)

(assert (=> d!42189 (= res!65043 (not lt!70780))))

(declare-fun lt!70777 () Bool)

(assert (=> d!42189 (= lt!70780 lt!70777)))

(declare-fun lt!70779 () Unit!4135)

(declare-fun e!88222 () Unit!4135)

(assert (=> d!42189 (= lt!70779 e!88222)))

(declare-fun c!25329 () Bool)

(assert (=> d!42189 (= c!25329 lt!70777)))

(assert (=> d!42189 (= lt!70777 (containsKey!176 (toList!869 lt!69728) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42189 (= (contains!899 lt!69728 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70780)))

(declare-fun b!135464 () Bool)

(declare-fun lt!70778 () Unit!4135)

(assert (=> b!135464 (= e!88222 lt!70778)))

(assert (=> b!135464 (= lt!70778 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69728) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135464 (isDefined!125 (getValueByKey!172 (toList!869 lt!69728) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135465 () Bool)

(declare-fun Unit!4262 () Unit!4135)

(assert (=> b!135465 (= e!88222 Unit!4262)))

(declare-fun b!135466 () Bool)

(assert (=> b!135466 (= e!88221 (isDefined!125 (getValueByKey!172 (toList!869 lt!69728) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42189 c!25329) b!135464))

(assert (= (and d!42189 (not c!25329)) b!135465))

(assert (= (and d!42189 (not res!65043)) b!135466))

(declare-fun m!161439 () Bool)

(assert (=> d!42189 m!161439))

(declare-fun m!161441 () Bool)

(assert (=> b!135464 m!161441))

(assert (=> b!135464 m!160091))

(assert (=> b!135464 m!160091))

(declare-fun m!161443 () Bool)

(assert (=> b!135464 m!161443))

(assert (=> b!135466 m!160091))

(assert (=> b!135466 m!160091))

(assert (=> b!135466 m!161443))

(assert (=> bm!14703 d!42189))

(assert (=> b!133158 d!40353))

(declare-fun d!42191 () Bool)

(assert (=> d!42191 (= (apply!116 lt!69548 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1486 (getValueByKey!172 (toList!869 lt!69548) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5677 () Bool)

(assert (= bs!5677 d!42191))

(assert (=> bs!5677 m!156163))

(declare-fun m!161445 () Bool)

(assert (=> bs!5677 m!161445))

(assert (=> bs!5677 m!161445))

(declare-fun m!161447 () Bool)

(assert (=> bs!5677 m!161447))

(assert (=> b!133020 d!42191))

(assert (=> b!133020 d!40375))

(declare-fun d!42193 () Bool)

(assert (=> d!42193 (isDefined!125 (getValueByKey!172 (toList!869 lt!69486) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!70781 () Unit!4135)

(assert (=> d!42193 (= lt!70781 (choose!817 (toList!869 lt!69486) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!88223 () Bool)

(assert (=> d!42193 e!88223))

(declare-fun res!65044 () Bool)

(assert (=> d!42193 (=> (not res!65044) (not e!88223))))

(assert (=> d!42193 (= res!65044 (isStrictlySorted!322 (toList!869 lt!69486)))))

(assert (=> d!42193 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69486) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70781)))

(declare-fun b!135467 () Bool)

(assert (=> b!135467 (= e!88223 (containsKey!176 (toList!869 lt!69486) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!42193 res!65044) b!135467))

(assert (=> d!42193 m!156163))

(assert (=> d!42193 m!156713))

(assert (=> d!42193 m!156713))

(assert (=> d!42193 m!156715))

(assert (=> d!42193 m!156163))

(declare-fun m!161449 () Bool)

(assert (=> d!42193 m!161449))

(assert (=> d!42193 m!161223))

(assert (=> b!135467 m!156163))

(assert (=> b!135467 m!156709))

(assert (=> b!132994 d!42193))

(declare-fun d!42195 () Bool)

(assert (=> d!42195 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69486) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69486) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5678 () Bool)

(assert (= bs!5678 d!42195))

(assert (=> bs!5678 m!156713))

(declare-fun m!161451 () Bool)

(assert (=> bs!5678 m!161451))

(assert (=> b!132994 d!42195))

(assert (=> b!132994 d!41391))

(assert (=> d!40581 d!40583))

(assert (=> d!40581 d!40585))

(declare-fun d!42197 () Bool)

(assert (=> d!42197 (isDefined!125 (getValueByKey!172 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))))))

(assert (=> d!42197 true))

(declare-fun _$12!405 () Unit!4135)

(assert (=> d!42197 (= (choose!817 (toList!869 call!14604) (ite c!24492 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (select (arr!2261 (_keys!4614 newMap!16)) (index!3261 lt!69175)))) _$12!405)))

(declare-fun bs!5679 () Bool)

(assert (= bs!5679 d!42197))

(assert (=> bs!5679 m!156111))

(assert (=> bs!5679 m!156111))

(assert (=> bs!5679 m!156113))

(assert (=> d!40581 d!42197))

(declare-fun d!42199 () Bool)

(declare-fun res!65045 () Bool)

(declare-fun e!88224 () Bool)

(assert (=> d!42199 (=> res!65045 e!88224)))

(assert (=> d!42199 (= res!65045 (or ((_ is Nil!1713) (toList!869 call!14604)) ((_ is Nil!1713) (t!6167 (toList!869 call!14604)))))))

(assert (=> d!42199 (= (isStrictlySorted!322 (toList!869 call!14604)) e!88224)))

(declare-fun b!135468 () Bool)

(declare-fun e!88225 () Bool)

(assert (=> b!135468 (= e!88224 e!88225)))

(declare-fun res!65046 () Bool)

(assert (=> b!135468 (=> (not res!65046) (not e!88225))))

(assert (=> b!135468 (= res!65046 (bvslt (_1!1324 (h!2317 (toList!869 call!14604))) (_1!1324 (h!2317 (t!6167 (toList!869 call!14604))))))))

(declare-fun b!135469 () Bool)

(assert (=> b!135469 (= e!88225 (isStrictlySorted!322 (t!6167 (toList!869 call!14604))))))

(assert (= (and d!42199 (not res!65045)) b!135468))

(assert (= (and b!135468 res!65046) b!135469))

(declare-fun m!161453 () Bool)

(assert (=> b!135469 m!161453))

(assert (=> d!40581 d!42199))

(declare-fun d!42201 () Bool)

(assert (=> d!42201 (= (apply!116 lt!69728 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69728) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5680 () Bool)

(assert (= bs!5680 d!42201))

(assert (=> bs!5680 m!160723))

(assert (=> bs!5680 m!160723))

(declare-fun m!161455 () Bool)

(assert (=> bs!5680 m!161455))

(assert (=> b!133322 d!42201))

(declare-fun lt!70782 () Bool)

(declare-fun d!42203 () Bool)

(assert (=> d!42203 (= lt!70782 (select (content!133 lt!69387) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!88227 () Bool)

(assert (=> d!42203 (= lt!70782 e!88227)))

(declare-fun res!65047 () Bool)

(assert (=> d!42203 (=> (not res!65047) (not e!88227))))

(assert (=> d!42203 (= res!65047 ((_ is Cons!1712) lt!69387))))

(assert (=> d!42203 (= (contains!902 lt!69387 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!70782)))

(declare-fun b!135470 () Bool)

(declare-fun e!88226 () Bool)

(assert (=> b!135470 (= e!88227 e!88226)))

(declare-fun res!65048 () Bool)

(assert (=> b!135470 (=> res!65048 e!88226)))

(assert (=> b!135470 (= res!65048 (= (h!2317 lt!69387) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!135471 () Bool)

(assert (=> b!135471 (= e!88226 (contains!902 (t!6167 lt!69387) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!42203 res!65047) b!135470))

(assert (= (and b!135470 (not res!65048)) b!135471))

(declare-fun m!161457 () Bool)

(assert (=> d!42203 m!161457))

(declare-fun m!161459 () Bool)

(assert (=> d!42203 m!161459))

(declare-fun m!161461 () Bool)

(assert (=> b!135471 m!161461))

(assert (=> b!133458 d!42203))

(declare-fun lt!70783 () Bool)

(declare-fun d!42205 () Bool)

(assert (=> d!42205 (= lt!70783 (select (content!133 lt!69502) (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88229 () Bool)

(assert (=> d!42205 (= lt!70783 e!88229)))

(declare-fun res!65049 () Bool)

(assert (=> d!42205 (=> (not res!65049) (not e!88229))))

(assert (=> d!42205 (= res!65049 ((_ is Cons!1712) lt!69502))))

(assert (=> d!42205 (= (contains!902 lt!69502 (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70783)))

(declare-fun b!135472 () Bool)

(declare-fun e!88228 () Bool)

(assert (=> b!135472 (= e!88229 e!88228)))

(declare-fun res!65050 () Bool)

(assert (=> b!135472 (=> res!65050 e!88228)))

(assert (=> b!135472 (= res!65050 (= (h!2317 lt!69502) (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135473 () Bool)

(assert (=> b!135473 (= e!88228 (contains!902 (t!6167 lt!69502) (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42205 res!65049) b!135472))

(assert (= (and b!135472 (not res!65050)) b!135473))

(declare-fun m!161463 () Bool)

(assert (=> d!42205 m!161463))

(declare-fun m!161465 () Bool)

(assert (=> d!42205 m!161465))

(declare-fun m!161467 () Bool)

(assert (=> b!135473 m!161467))

(assert (=> b!133086 d!42205))

(assert (=> b!133620 d!40909))

(declare-fun e!88231 () Option!178)

(declare-fun b!135476 () Bool)

(assert (=> b!135476 (= e!88231 (getValueByKey!172 (t!6167 (toList!869 lt!69604)) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))

(declare-fun b!135477 () Bool)

(assert (=> b!135477 (= e!88231 None!176)))

(declare-fun c!25330 () Bool)

(declare-fun d!42207 () Bool)

(assert (=> d!42207 (= c!25330 (and ((_ is Cons!1712) (toList!869 lt!69604)) (= (_1!1324 (h!2317 (toList!869 lt!69604))) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16))))))))

(declare-fun e!88230 () Option!178)

(assert (=> d!42207 (= (getValueByKey!172 (toList!869 lt!69604) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))) e!88230)))

(declare-fun b!135474 () Bool)

(assert (=> b!135474 (= e!88230 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69604)))))))

(declare-fun b!135475 () Bool)

(assert (=> b!135475 (= e!88230 e!88231)))

(declare-fun c!25331 () Bool)

(assert (=> b!135475 (= c!25331 (and ((_ is Cons!1712) (toList!869 lt!69604)) (not (= (_1!1324 (h!2317 (toList!869 lt!69604))) (_1!1324 (tuple2!2627 lt!69465 (minValue!2720 newMap!16)))))))))

(assert (= (and d!42207 c!25330) b!135474))

(assert (= (and d!42207 (not c!25330)) b!135475))

(assert (= (and b!135475 c!25331) b!135476))

(assert (= (and b!135475 (not c!25331)) b!135477))

(declare-fun m!161469 () Bool)

(assert (=> b!135476 m!161469))

(assert (=> b!133151 d!42207))

(assert (=> d!40595 d!40597))

(declare-fun d!42209 () Bool)

(assert (=> d!42209 (arrayContainsKey!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69491 #b00000000000000000000000000000000)))

(assert (=> d!42209 true))

(declare-fun _$60!366 () Unit!4135)

(assert (=> d!42209 (= (choose!13 (_keys!4614 (v!3199 (underlying!455 thiss!992))) lt!69491 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) _$60!366)))

(declare-fun bs!5681 () Bool)

(assert (= bs!5681 d!42209))

(assert (=> bs!5681 m!156625))

(assert (=> d!40595 d!42209))

(assert (=> d!40819 d!40213))

(assert (=> d!40819 d!40215))

(declare-fun d!42211 () Bool)

(assert (=> d!42211 (= (get!1486 (getValueByKey!172 (toList!869 lt!69262) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!172 (toList!869 lt!69262) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40761 d!42211))

(assert (=> d!40761 d!41723))

(declare-fun d!42213 () Bool)

(assert (=> d!42213 (= ($colon$colon!92 e!86926 (ite c!24704 (h!2317 (toList!869 call!14544)) (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (Cons!1712 (ite c!24704 (h!2317 (toList!869 call!14544)) (tuple2!2627 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) e!86926))))

(assert (=> bm!14721 d!42213))

(declare-fun d!42215 () Bool)

(declare-fun e!88232 () Bool)

(assert (=> d!42215 e!88232))

(declare-fun res!65052 () Bool)

(assert (=> d!42215 (=> (not res!65052) (not e!88232))))

(declare-fun lt!70784 () ListLongMap!1707)

(assert (=> d!42215 (= res!65052 (contains!899 lt!70784 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70786 () List!1716)

(assert (=> d!42215 (= lt!70784 (ListLongMap!1708 lt!70786))))

(declare-fun lt!70787 () Unit!4135)

(declare-fun lt!70785 () Unit!4135)

(assert (=> d!42215 (= lt!70787 lt!70785)))

(assert (=> d!42215 (= (getValueByKey!172 lt!70786 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42215 (= lt!70785 (lemmaContainsTupThenGetReturnValue!87 lt!70786 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42215 (= lt!70786 (insertStrictlySorted!90 (toList!869 call!14767) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42215 (= (+!175 call!14767 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70784)))

(declare-fun b!135478 () Bool)

(declare-fun res!65051 () Bool)

(assert (=> b!135478 (=> (not res!65051) (not e!88232))))

(assert (=> b!135478 (= res!65051 (= (getValueByKey!172 (toList!869 lt!70784) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135479 () Bool)

(assert (=> b!135479 (= e!88232 (contains!902 (toList!869 lt!70784) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42215 res!65052) b!135478))

(assert (= (and b!135478 res!65051) b!135479))

(declare-fun m!161471 () Bool)

(assert (=> d!42215 m!161471))

(declare-fun m!161473 () Bool)

(assert (=> d!42215 m!161473))

(declare-fun m!161475 () Bool)

(assert (=> d!42215 m!161475))

(declare-fun m!161477 () Bool)

(assert (=> d!42215 m!161477))

(declare-fun m!161479 () Bool)

(assert (=> b!135478 m!161479))

(declare-fun m!161481 () Bool)

(assert (=> b!135479 m!161481))

(assert (=> b!133703 d!42215))

(declare-fun d!42217 () Bool)

(assert (=> d!42217 (= (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69472 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69485)) (v!3203 (getValueByKey!172 (toList!869 (+!175 lt!69472 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69485)))))

(assert (=> d!40509 d!42217))

(declare-fun b!135482 () Bool)

(declare-fun e!88234 () Option!178)

(assert (=> b!135482 (= e!88234 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69472 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) lt!69485))))

(declare-fun b!135483 () Bool)

(assert (=> b!135483 (= e!88234 None!176)))

(declare-fun c!25332 () Bool)

(declare-fun d!42219 () Bool)

(assert (=> d!42219 (= c!25332 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69472 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69472 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))) lt!69485)))))

(declare-fun e!88233 () Option!178)

(assert (=> d!42219 (= (getValueByKey!172 (toList!869 (+!175 lt!69472 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69485) e!88233)))

(declare-fun b!135480 () Bool)

(assert (=> b!135480 (= e!88233 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69472 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))))

(declare-fun b!135481 () Bool)

(assert (=> b!135481 (= e!88233 e!88234)))

(declare-fun c!25333 () Bool)

(assert (=> b!135481 (= c!25333 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69472 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69472 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))) lt!69485))))))

(assert (= (and d!42219 c!25332) b!135480))

(assert (= (and d!42219 (not c!25332)) b!135481))

(assert (= (and b!135481 c!25333) b!135482))

(assert (= (and b!135481 (not c!25333)) b!135483))

(declare-fun m!161483 () Bool)

(assert (=> b!135482 m!161483))

(assert (=> d!40509 d!42219))

(assert (=> bm!14744 d!40991))

(assert (=> d!40331 d!40249))

(assert (=> d!40331 d!40261))

(assert (=> d!40331 d!40265))

(declare-fun b!135484 () Bool)

(declare-fun e!88238 () Bool)

(declare-fun e!88237 () Bool)

(assert (=> b!135484 (= e!88238 e!88237)))

(declare-fun res!65053 () Bool)

(declare-fun lt!70789 () SeekEntryResult!275)

(assert (=> b!135484 (= res!65053 (and ((_ is Intermediate!275) lt!70789) (not (undefined!1087 lt!70789)) (bvslt (x!15592 lt!70789) #b01111111111111111111111111111110) (bvsge (x!15592 lt!70789) #b00000000000000000000000000000000) (bvsge (x!15592 lt!70789) #b00000000000000000000000000000000)))))

(assert (=> b!135484 (=> (not res!65053) (not e!88237))))

(declare-fun b!135485 () Bool)

(assert (=> b!135485 (and (bvsge (index!3262 lt!70789) #b00000000000000000000000000000000) (bvslt (index!3262 lt!70789) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun res!65054 () Bool)

(assert (=> b!135485 (= res!65054 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!70789)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88235 () Bool)

(assert (=> b!135485 (=> res!65054 e!88235)))

(declare-fun b!135486 () Bool)

(declare-fun e!88239 () SeekEntryResult!275)

(declare-fun e!88236 () SeekEntryResult!275)

(assert (=> b!135486 (= e!88239 e!88236)))

(declare-fun c!25335 () Bool)

(declare-fun lt!70788 () (_ BitVec 64))

(assert (=> b!135486 (= c!25335 (or (= lt!70788 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (= (bvadd lt!70788 lt!70788) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135487 () Bool)

(assert (=> b!135487 (= e!88239 (Intermediate!275 true (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!135488 () Bool)

(assert (=> b!135488 (= e!88238 (bvsge (x!15592 lt!70789) #b01111111111111111111111111111110))))

(declare-fun b!135489 () Bool)

(assert (=> b!135489 (and (bvsge (index!3262 lt!70789) #b00000000000000000000000000000000) (bvslt (index!3262 lt!70789) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun res!65055 () Bool)

(assert (=> b!135489 (= res!65055 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!70789)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135489 (=> res!65055 e!88235)))

(assert (=> b!135489 (= e!88237 e!88235)))

(declare-fun d!42221 () Bool)

(assert (=> d!42221 e!88238))

(declare-fun c!25334 () Bool)

(assert (=> d!42221 (= c!25334 (and ((_ is Intermediate!275) lt!70789) (undefined!1087 lt!70789)))))

(assert (=> d!42221 (= lt!70789 e!88239)))

(declare-fun c!25336 () Bool)

(assert (=> d!42221 (= c!25336 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!42221 (= lt!70788 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!42221 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!42221 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) lt!70789)))

(declare-fun b!135490 () Bool)

(assert (=> b!135490 (and (bvsge (index!3262 lt!70789) #b00000000000000000000000000000000) (bvslt (index!3262 lt!70789) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> b!135490 (= e!88235 (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!70789)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135491 () Bool)

(assert (=> b!135491 (= e!88236 (Intermediate!275 false (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!135492 () Bool)

(assert (=> b!135492 (= e!88236 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000 (mask!7165 (v!3199 (underlying!455 thiss!992)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(assert (= (and d!42221 c!25336) b!135487))

(assert (= (and d!42221 (not c!25336)) b!135486))

(assert (= (and b!135486 c!25335) b!135491))

(assert (= (and b!135486 (not c!25335)) b!135492))

(assert (= (and d!42221 c!25334) b!135488))

(assert (= (and d!42221 (not c!25334)) b!135484))

(assert (= (and b!135484 res!65053) b!135489))

(assert (= (and b!135489 (not res!65055)) b!135485))

(assert (= (and b!135485 (not res!65054)) b!135490))

(declare-fun m!161485 () Bool)

(assert (=> b!135489 m!161485))

(assert (=> d!42221 m!157539))

(declare-fun m!161487 () Bool)

(assert (=> d!42221 m!161487))

(assert (=> d!42221 m!155867))

(assert (=> b!135492 m!157539))

(declare-fun m!161489 () Bool)

(assert (=> b!135492 m!161489))

(assert (=> b!135492 m!161489))

(assert (=> b!135492 m!156619))

(declare-fun m!161491 () Bool)

(assert (=> b!135492 m!161491))

(assert (=> b!135490 m!161485))

(assert (=> b!135485 m!161485))

(assert (=> d!40599 d!42221))

(declare-fun d!42223 () Bool)

(declare-fun lt!70791 () (_ BitVec 32))

(declare-fun lt!70790 () (_ BitVec 32))

(assert (=> d!42223 (= lt!70791 (bvmul (bvxor lt!70790 (bvlshr lt!70790 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!42223 (= lt!70790 ((_ extract 31 0) (bvand (bvxor (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (bvlshr (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!42223 (and (bvsge (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000000) (let ((res!64248 (let ((h!2321 ((_ extract 31 0) (bvand (bvxor (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (bvlshr (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15696 (bvmul (bvxor h!2321 (bvlshr h!2321 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15696 (bvlshr x!15696 #b00000000000000000000000000001101)) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))) (and (bvslt res!64248 (bvadd (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000001)) (bvsge res!64248 #b00000000000000000000000000000000))))))

(assert (=> d!42223 (= (toIndex!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (bvand (bvxor lt!70791 (bvlshr lt!70791 #b00000000000000000000000000001101)) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(assert (=> d!40599 d!42223))

(assert (=> d!40599 d!40195))

(assert (=> d!40771 d!40195))

(assert (=> bm!14736 d!40931))

(assert (=> b!133475 d!40909))

(assert (=> d!40815 d!40671))

(assert (=> d!40815 d!40673))

(declare-fun d!42225 () Bool)

(assert (=> d!42225 (isDefined!125 (getValueByKey!172 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (=> d!42225 true))

(declare-fun _$12!406 () Unit!4135)

(assert (=> d!42225 (= (choose!817 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) _$12!406)))

(declare-fun bs!5682 () Bool)

(assert (= bs!5682 d!42225))

(assert (=> bs!5682 m!155869))

(assert (=> bs!5682 m!156311))

(assert (=> bs!5682 m!156311))

(assert (=> bs!5682 m!156313))

(assert (=> d!40815 d!42225))

(declare-fun d!42227 () Bool)

(declare-fun res!65056 () Bool)

(declare-fun e!88240 () Bool)

(assert (=> d!42227 (=> res!65056 e!88240)))

(assert (=> d!42227 (= res!65056 (or ((_ is Nil!1713) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) ((_ is Nil!1713) (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))))))

(assert (=> d!42227 (= (isStrictlySorted!322 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) e!88240)))

(declare-fun b!135493 () Bool)

(declare-fun e!88241 () Bool)

(assert (=> b!135493 (= e!88240 e!88241)))

(declare-fun res!65057 () Bool)

(assert (=> b!135493 (=> (not res!65057) (not e!88241))))

(assert (=> b!135493 (= res!65057 (bvslt (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1324 (h!2317 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))))))))

(declare-fun b!135494 () Bool)

(assert (=> b!135494 (= e!88241 (isStrictlySorted!322 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))))))

(assert (= (and d!42227 (not res!65056)) b!135493))

(assert (= (and b!135493 res!65057) b!135494))

(declare-fun m!161493 () Bool)

(assert (=> b!135494 m!161493))

(assert (=> d!40815 d!42227))

(declare-fun d!42229 () Bool)

(declare-fun res!65058 () Bool)

(declare-fun e!88242 () Bool)

(assert (=> d!42229 (=> res!65058 e!88242)))

(assert (=> d!42229 (= res!65058 (and ((_ is Cons!1712) lt!69502) (= (_1!1324 (h!2317 lt!69502)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42229 (= (containsKey!176 lt!69502 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88242)))

(declare-fun b!135495 () Bool)

(declare-fun e!88243 () Bool)

(assert (=> b!135495 (= e!88242 e!88243)))

(declare-fun res!65059 () Bool)

(assert (=> b!135495 (=> (not res!65059) (not e!88243))))

(assert (=> b!135495 (= res!65059 (and (or (not ((_ is Cons!1712) lt!69502)) (bvsle (_1!1324 (h!2317 lt!69502)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1712) lt!69502) (bvslt (_1!1324 (h!2317 lt!69502)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135496 () Bool)

(assert (=> b!135496 (= e!88243 (containsKey!176 (t!6167 lt!69502) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42229 (not res!65058)) b!135495))

(assert (= (and b!135495 res!65059) b!135496))

(declare-fun m!161495 () Bool)

(assert (=> b!135496 m!161495))

(assert (=> b!133085 d!42229))

(declare-fun d!42231 () Bool)

(declare-fun res!65060 () Bool)

(declare-fun e!88244 () Bool)

(assert (=> d!42231 (=> res!65060 e!88244)))

(assert (=> d!42231 (= res!65060 (and ((_ is Cons!1712) lt!69585) (= (_1!1324 (h!2317 lt!69585)) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!42231 (= (containsKey!176 lt!69585 (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!88244)))

(declare-fun b!135497 () Bool)

(declare-fun e!88245 () Bool)

(assert (=> b!135497 (= e!88244 e!88245)))

(declare-fun res!65061 () Bool)

(assert (=> b!135497 (=> (not res!65061) (not e!88245))))

(assert (=> b!135497 (= res!65061 (and (or (not ((_ is Cons!1712) lt!69585)) (bvsle (_1!1324 (h!2317 lt!69585)) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Cons!1712) lt!69585) (bvslt (_1!1324 (h!2317 lt!69585)) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!135498 () Bool)

(assert (=> b!135498 (= e!88245 (containsKey!176 (t!6167 lt!69585) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!42231 (not res!65060)) b!135497))

(assert (= (and b!135497 res!65061) b!135498))

(declare-fun m!161497 () Bool)

(assert (=> b!135498 m!161497))

(assert (=> b!133139 d!42231))

(declare-fun d!42233 () Bool)

(declare-fun res!65062 () Bool)

(declare-fun e!88246 () Bool)

(assert (=> d!42233 (=> res!65062 e!88246)))

(assert (=> d!42233 (= res!65062 (and ((_ is Cons!1712) lt!69387) (= (_1!1324 (h!2317 lt!69387)) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!42233 (= (containsKey!176 lt!69387 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!88246)))

(declare-fun b!135499 () Bool)

(declare-fun e!88247 () Bool)

(assert (=> b!135499 (= e!88246 e!88247)))

(declare-fun res!65063 () Bool)

(assert (=> b!135499 (=> (not res!65063) (not e!88247))))

(assert (=> b!135499 (= res!65063 (and (or (not ((_ is Cons!1712) lt!69387)) (bvsle (_1!1324 (h!2317 lt!69387)) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Cons!1712) lt!69387) (bvslt (_1!1324 (h!2317 lt!69387)) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!135500 () Bool)

(assert (=> b!135500 (= e!88247 (containsKey!176 (t!6167 lt!69387) (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!42233 (not res!65062)) b!135499))

(assert (= (and b!135499 res!65063) b!135500))

(declare-fun m!161499 () Bool)

(assert (=> b!135500 m!161499))

(assert (=> b!133457 d!42233))

(assert (=> b!133752 d!40967))

(declare-fun b!135501 () Bool)

(declare-fun e!88249 () (_ BitVec 32))

(declare-fun e!88248 () (_ BitVec 32))

(assert (=> b!135501 (= e!88249 e!88248)))

(declare-fun c!25337 () Bool)

(assert (=> b!135501 (= c!25337 (validKeyInArray!0 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135502 () Bool)

(declare-fun call!14892 () (_ BitVec 32))

(assert (=> b!135502 (= e!88248 (bvadd #b00000000000000000000000000000001 call!14892))))

(declare-fun b!135503 () Bool)

(assert (=> b!135503 (= e!88248 call!14892)))

(declare-fun d!42235 () Bool)

(declare-fun lt!70792 () (_ BitVec 32))

(assert (=> d!42235 (and (bvsge lt!70792 #b00000000000000000000000000000000) (bvsle lt!70792 (bvsub (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!42235 (= lt!70792 e!88249)))

(declare-fun c!25338 () Bool)

(assert (=> d!42235 (= c!25338 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!42235 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!42235 (= (arrayCountValidKeys!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))) lt!70792)))

(declare-fun b!135504 () Bool)

(assert (=> b!135504 (= e!88249 #b00000000000000000000000000000000)))

(declare-fun bm!14889 () Bool)

(assert (=> bm!14889 (= call!14892 (arrayCountValidKeys!0 (_keys!4614 (v!3199 (underlying!455 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))))

(assert (= (and d!42235 c!25338) b!135504))

(assert (= (and d!42235 (not c!25338)) b!135501))

(assert (= (and b!135501 c!25337) b!135502))

(assert (= (and b!135501 (not c!25337)) b!135503))

(assert (= (or b!135502 b!135503) bm!14889))

(assert (=> b!135501 m!156619))

(assert (=> b!135501 m!156619))

(assert (=> b!135501 m!156621))

(declare-fun m!161501 () Bool)

(assert (=> bm!14889 m!161501))

(assert (=> bm!14727 d!42235))

(declare-fun d!42237 () Bool)

(assert (=> d!42237 (= (+!175 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!546 (array!4782 (store (arr!2261 (_keys!4614 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) (size!2530 (_keys!4614 newMap!16))) (array!4784 (store (arr!2262 (_values!2848 newMap!16)) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (ValueCellFull!1095 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2531 (_values!2848 newMap!16))) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))))

(assert (=> d!42237 true))

(declare-fun _$3!46 () Unit!4135)

(assert (=> d!42237 (= (choose!828 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) (ite c!24489 (index!3263 lt!69175) (index!3260 lt!69175)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2865 newMap!16)) _$3!46)))

(declare-fun bs!5683 () Bool)

(assert (= bs!5683 d!42237))

(assert (=> bs!5683 m!155939))

(assert (=> bs!5683 m!155939))

(assert (=> bs!5683 m!156249))

(assert (=> bs!5683 m!156269))

(assert (=> bs!5683 m!156253))

(assert (=> bs!5683 m!156281))

(assert (=> d!40555 d!42237))

(assert (=> d!40555 d!40325))

(declare-fun d!42239 () Bool)

(assert (=> d!42239 (= (get!1486 (getValueByKey!172 (toList!869 lt!69248) lt!69261)) (v!3203 (getValueByKey!172 (toList!869 lt!69248) lt!69261)))))

(assert (=> d!40789 d!42239))

(declare-fun b!135507 () Bool)

(declare-fun e!88251 () Option!178)

(assert (=> b!135507 (= e!88251 (getValueByKey!172 (t!6167 (toList!869 lt!69248)) lt!69261))))

(declare-fun b!135508 () Bool)

(assert (=> b!135508 (= e!88251 None!176)))

(declare-fun d!42241 () Bool)

(declare-fun c!25339 () Bool)

(assert (=> d!42241 (= c!25339 (and ((_ is Cons!1712) (toList!869 lt!69248)) (= (_1!1324 (h!2317 (toList!869 lt!69248))) lt!69261)))))

(declare-fun e!88250 () Option!178)

(assert (=> d!42241 (= (getValueByKey!172 (toList!869 lt!69248) lt!69261) e!88250)))

(declare-fun b!135505 () Bool)

(assert (=> b!135505 (= e!88250 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69248)))))))

(declare-fun b!135506 () Bool)

(assert (=> b!135506 (= e!88250 e!88251)))

(declare-fun c!25340 () Bool)

(assert (=> b!135506 (= c!25340 (and ((_ is Cons!1712) (toList!869 lt!69248)) (not (= (_1!1324 (h!2317 (toList!869 lt!69248))) lt!69261))))))

(assert (= (and d!42241 c!25339) b!135505))

(assert (= (and d!42241 (not c!25339)) b!135506))

(assert (= (and b!135506 c!25340) b!135507))

(assert (= (and b!135506 (not c!25340)) b!135508))

(declare-fun m!161503 () Bool)

(assert (=> b!135507 m!161503))

(assert (=> d!40789 d!42241))

(declare-fun d!42243 () Bool)

(assert (=> d!42243 (= (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69475 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69471)) (v!3203 (getValueByKey!172 (toList!869 (+!175 lt!69475 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69471)))))

(assert (=> d!40513 d!42243))

(declare-fun b!135511 () Bool)

(declare-fun e!88253 () Option!178)

(assert (=> b!135511 (= e!88253 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69475 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) lt!69471))))

(declare-fun b!135512 () Bool)

(assert (=> b!135512 (= e!88253 None!176)))

(declare-fun d!42245 () Bool)

(declare-fun c!25341 () Bool)

(assert (=> d!42245 (= c!25341 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69475 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69475 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) lt!69471)))))

(declare-fun e!88252 () Option!178)

(assert (=> d!42245 (= (getValueByKey!172 (toList!869 (+!175 lt!69475 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))) lt!69471) e!88252)))

(declare-fun b!135509 () Bool)

(assert (=> b!135509 (= e!88252 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69475 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))))))))

(declare-fun b!135510 () Bool)

(assert (=> b!135510 (= e!88252 e!88253)))

(declare-fun c!25342 () Bool)

(assert (=> b!135510 (= c!25342 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69475 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16)))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69475 (tuple2!2627 lt!69477 (ite (and c!24491 c!24497) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2720 newMap!16))))))) lt!69471))))))

(assert (= (and d!42245 c!25341) b!135509))

(assert (= (and d!42245 (not c!25341)) b!135510))

(assert (= (and b!135510 c!25342) b!135511))

(assert (= (and b!135510 (not c!25342)) b!135512))

(declare-fun m!161505 () Bool)

(assert (=> b!135511 m!161505))

(assert (=> d!40513 d!42245))

(assert (=> b!133656 d!40965))

(assert (=> d!40659 d!40195))

(declare-fun d!42247 () Bool)

(declare-fun e!88254 () Bool)

(assert (=> d!42247 e!88254))

(declare-fun res!65064 () Bool)

(assert (=> d!42247 (=> res!65064 e!88254)))

(declare-fun lt!70796 () Bool)

(assert (=> d!42247 (= res!65064 (not lt!70796))))

(declare-fun lt!70793 () Bool)

(assert (=> d!42247 (= lt!70796 lt!70793)))

(declare-fun lt!70795 () Unit!4135)

(declare-fun e!88255 () Unit!4135)

(assert (=> d!42247 (= lt!70795 e!88255)))

(declare-fun c!25343 () Bool)

(assert (=> d!42247 (= c!25343 lt!70793)))

(assert (=> d!42247 (= lt!70793 (containsKey!176 (toList!869 lt!69988) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))

(assert (=> d!42247 (= (contains!899 lt!69988 (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))) lt!70796)))

(declare-fun b!135513 () Bool)

(declare-fun lt!70794 () Unit!4135)

(assert (=> b!135513 (= e!88255 lt!70794)))

(assert (=> b!135513 (= lt!70794 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69988) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))

(assert (=> b!135513 (isDefined!125 (getValueByKey!172 (toList!869 lt!69988) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))

(declare-fun b!135514 () Bool)

(declare-fun Unit!4263 () Unit!4135)

(assert (=> b!135514 (= e!88255 Unit!4263)))

(declare-fun b!135515 () Bool)

(assert (=> b!135515 (= e!88254 (isDefined!125 (getValueByKey!172 (toList!869 lt!69988) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))))))

(assert (= (and d!42247 c!25343) b!135513))

(assert (= (and d!42247 (not c!25343)) b!135514))

(assert (= (and d!42247 (not res!65064)) b!135515))

(declare-fun m!161507 () Bool)

(assert (=> d!42247 m!161507))

(declare-fun m!161509 () Bool)

(assert (=> b!135513 m!161509))

(assert (=> b!135513 m!158149))

(assert (=> b!135513 m!158149))

(declare-fun m!161511 () Bool)

(assert (=> b!135513 m!161511))

(assert (=> b!135515 m!158149))

(assert (=> b!135515 m!158149))

(assert (=> b!135515 m!161511))

(assert (=> d!40779 d!42247))

(declare-fun e!88257 () Option!178)

(declare-fun b!135518 () Bool)

(assert (=> b!135518 (= e!88257 (getValueByKey!172 (t!6167 lt!69990) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))

(declare-fun b!135519 () Bool)

(assert (=> b!135519 (= e!88257 None!176)))

(declare-fun c!25344 () Bool)

(declare-fun d!42249 () Bool)

(assert (=> d!42249 (= c!25344 (and ((_ is Cons!1712) lt!69990) (= (_1!1324 (h!2317 lt!69990)) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))))))

(declare-fun e!88256 () Option!178)

(assert (=> d!42249 (= (getValueByKey!172 lt!69990 (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))) e!88256)))

(declare-fun b!135516 () Bool)

(assert (=> b!135516 (= e!88256 (Some!177 (_2!1324 (h!2317 lt!69990))))))

(declare-fun b!135517 () Bool)

(assert (=> b!135517 (= e!88256 e!88257)))

(declare-fun c!25345 () Bool)

(assert (=> b!135517 (= c!25345 (and ((_ is Cons!1712) lt!69990) (not (= (_1!1324 (h!2317 lt!69990)) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))))

(assert (= (and d!42249 c!25344) b!135516))

(assert (= (and d!42249 (not c!25344)) b!135517))

(assert (= (and b!135517 c!25345) b!135518))

(assert (= (and b!135517 (not c!25345)) b!135519))

(declare-fun m!161513 () Bool)

(assert (=> b!135518 m!161513))

(assert (=> d!40779 d!42249))

(declare-fun d!42251 () Bool)

(assert (=> d!42251 (= (getValueByKey!172 lt!69990 (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))

(declare-fun lt!70797 () Unit!4135)

(assert (=> d!42251 (= lt!70797 (choose!827 lt!69990 (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))

(declare-fun e!88258 () Bool)

(assert (=> d!42251 e!88258))

(declare-fun res!65065 () Bool)

(assert (=> d!42251 (=> (not res!65065) (not e!88258))))

(assert (=> d!42251 (= res!65065 (isStrictlySorted!322 lt!69990))))

(assert (=> d!42251 (= (lemmaContainsTupThenGetReturnValue!87 lt!69990 (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))) lt!70797)))

(declare-fun b!135520 () Bool)

(declare-fun res!65066 () Bool)

(assert (=> b!135520 (=> (not res!65066) (not e!88258))))

(assert (=> b!135520 (= res!65066 (containsKey!176 lt!69990 (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))

(declare-fun b!135521 () Bool)

(assert (=> b!135521 (= e!88258 (contains!902 lt!69990 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))))))

(assert (= (and d!42251 res!65065) b!135520))

(assert (= (and b!135520 res!65066) b!135521))

(assert (=> d!42251 m!158143))

(declare-fun m!161515 () Bool)

(assert (=> d!42251 m!161515))

(declare-fun m!161517 () Bool)

(assert (=> d!42251 m!161517))

(declare-fun m!161519 () Bool)

(assert (=> b!135520 m!161519))

(declare-fun m!161521 () Bool)

(assert (=> b!135521 m!161521))

(assert (=> d!40779 d!42251))

(declare-fun bm!14890 () Bool)

(declare-fun call!14894 () List!1716)

(declare-fun call!14895 () List!1716)

(assert (=> bm!14890 (= call!14894 call!14895)))

(declare-fun d!42253 () Bool)

(declare-fun e!88262 () Bool)

(assert (=> d!42253 e!88262))

(declare-fun res!65068 () Bool)

(assert (=> d!42253 (=> (not res!65068) (not e!88262))))

(declare-fun lt!70798 () List!1716)

(assert (=> d!42253 (= res!65068 (isStrictlySorted!322 lt!70798))))

(declare-fun e!88260 () List!1716)

(assert (=> d!42253 (= lt!70798 e!88260)))

(declare-fun c!25349 () Bool)

(assert (=> d!42253 (= c!25349 (and ((_ is Cons!1712) (toList!869 lt!69248)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69248))) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))))))

(assert (=> d!42253 (isStrictlySorted!322 (toList!869 lt!69248))))

(assert (=> d!42253 (= (insertStrictlySorted!90 (toList!869 lt!69248) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))) lt!70798)))

(declare-fun b!135522 () Bool)

(assert (=> b!135522 (= e!88262 (contains!902 lt!70798 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))))))

(declare-fun c!25347 () Bool)

(declare-fun b!135523 () Bool)

(assert (=> b!135523 (= c!25347 (and ((_ is Cons!1712) (toList!869 lt!69248)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69248))) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))))))

(declare-fun e!88261 () List!1716)

(declare-fun e!88263 () List!1716)

(assert (=> b!135523 (= e!88261 e!88263)))

(declare-fun b!135524 () Bool)

(declare-fun e!88259 () List!1716)

(assert (=> b!135524 (= e!88259 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69248)) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))

(declare-fun b!135525 () Bool)

(assert (=> b!135525 (= e!88261 call!14894)))

(declare-fun b!135526 () Bool)

(declare-fun call!14893 () List!1716)

(assert (=> b!135526 (= e!88263 call!14893)))

(declare-fun c!25346 () Bool)

(declare-fun b!135527 () Bool)

(assert (=> b!135527 (= e!88259 (ite c!25346 (t!6167 (toList!869 lt!69248)) (ite c!25347 (Cons!1712 (h!2317 (toList!869 lt!69248)) (t!6167 (toList!869 lt!69248))) Nil!1713)))))

(declare-fun b!135528 () Bool)

(assert (=> b!135528 (= e!88263 call!14893)))

(declare-fun b!135529 () Bool)

(assert (=> b!135529 (= e!88260 call!14895)))

(declare-fun bm!14891 () Bool)

(assert (=> bm!14891 (= call!14895 ($colon$colon!92 e!88259 (ite c!25349 (h!2317 (toList!869 lt!69248)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))))

(declare-fun c!25348 () Bool)

(assert (=> bm!14891 (= c!25348 c!25349)))

(declare-fun bm!14892 () Bool)

(assert (=> bm!14892 (= call!14893 call!14894)))

(declare-fun b!135530 () Bool)

(declare-fun res!65067 () Bool)

(assert (=> b!135530 (=> (not res!65067) (not e!88262))))

(assert (=> b!135530 (= res!65067 (containsKey!176 lt!70798 (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16)))))))

(declare-fun b!135531 () Bool)

(assert (=> b!135531 (= e!88260 e!88261)))

(assert (=> b!135531 (= c!25346 (and ((_ is Cons!1712) (toList!869 lt!69248)) (= (_1!1324 (h!2317 (toList!869 lt!69248))) (_1!1324 (tuple2!2627 lt!69263 (minValue!2720 newMap!16))))))))

(assert (= (and d!42253 c!25349) b!135529))

(assert (= (and d!42253 (not c!25349)) b!135531))

(assert (= (and b!135531 c!25346) b!135525))

(assert (= (and b!135531 (not c!25346)) b!135523))

(assert (= (and b!135523 c!25347) b!135526))

(assert (= (and b!135523 (not c!25347)) b!135528))

(assert (= (or b!135526 b!135528) bm!14892))

(assert (= (or b!135525 bm!14892) bm!14890))

(assert (= (or b!135529 bm!14890) bm!14891))

(assert (= (and bm!14891 c!25348) b!135524))

(assert (= (and bm!14891 (not c!25348)) b!135527))

(assert (= (and d!42253 res!65068) b!135530))

(assert (= (and b!135530 res!65067) b!135522))

(declare-fun m!161523 () Bool)

(assert (=> d!42253 m!161523))

(declare-fun m!161525 () Bool)

(assert (=> d!42253 m!161525))

(declare-fun m!161527 () Bool)

(assert (=> bm!14891 m!161527))

(declare-fun m!161529 () Bool)

(assert (=> b!135524 m!161529))

(declare-fun m!161531 () Bool)

(assert (=> b!135522 m!161531))

(declare-fun m!161533 () Bool)

(assert (=> b!135530 m!161533))

(assert (=> d!40779 d!42253))

(assert (=> b!133528 d!40353))

(declare-fun d!42255 () Bool)

(declare-fun res!65069 () Bool)

(declare-fun e!88264 () Bool)

(assert (=> d!42255 (=> res!65069 e!88264)))

(assert (=> d!42255 (= res!65069 (and ((_ is Cons!1712) (toList!869 lt!69262)) (= (_1!1324 (h!2317 (toList!869 lt!69262))) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!42255 (= (containsKey!176 (toList!869 lt!69262) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) e!88264)))

(declare-fun b!135532 () Bool)

(declare-fun e!88265 () Bool)

(assert (=> b!135532 (= e!88264 e!88265)))

(declare-fun res!65070 () Bool)

(assert (=> b!135532 (=> (not res!65070) (not e!88265))))

(assert (=> b!135532 (= res!65070 (and (or (not ((_ is Cons!1712) (toList!869 lt!69262))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69262))) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1712) (toList!869 lt!69262)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69262))) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!135533 () Bool)

(assert (=> b!135533 (= e!88265 (containsKey!176 (t!6167 (toList!869 lt!69262)) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!42255 (not res!65069)) b!135532))

(assert (= (and b!135532 res!65070) b!135533))

(assert (=> b!135533 m!156163))

(declare-fun m!161535 () Bool)

(assert (=> b!135533 m!161535))

(assert (=> d!40655 d!42255))

(declare-fun d!42257 () Bool)

(declare-fun e!88266 () Bool)

(assert (=> d!42257 e!88266))

(declare-fun res!65071 () Bool)

(assert (=> d!42257 (=> res!65071 e!88266)))

(declare-fun lt!70802 () Bool)

(assert (=> d!42257 (= res!65071 (not lt!70802))))

(declare-fun lt!70799 () Bool)

(assert (=> d!42257 (= lt!70802 lt!70799)))

(declare-fun lt!70801 () Unit!4135)

(declare-fun e!88267 () Unit!4135)

(assert (=> d!42257 (= lt!70801 e!88267)))

(declare-fun c!25350 () Bool)

(assert (=> d!42257 (= c!25350 lt!70799)))

(assert (=> d!42257 (= lt!70799 (containsKey!176 (toList!869 lt!69548) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!42257 (= (contains!899 lt!69548 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70802)))

(declare-fun b!135534 () Bool)

(declare-fun lt!70800 () Unit!4135)

(assert (=> b!135534 (= e!88267 lt!70800)))

(assert (=> b!135534 (= lt!70800 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69548) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135534 (isDefined!125 (getValueByKey!172 (toList!869 lt!69548) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135535 () Bool)

(declare-fun Unit!4264 () Unit!4135)

(assert (=> b!135535 (= e!88267 Unit!4264)))

(declare-fun b!135536 () Bool)

(assert (=> b!135536 (= e!88266 (isDefined!125 (getValueByKey!172 (toList!869 lt!69548) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!42257 c!25350) b!135534))

(assert (= (and d!42257 (not c!25350)) b!135535))

(assert (= (and d!42257 (not res!65071)) b!135536))

(assert (=> d!42257 m!156163))

(declare-fun m!161537 () Bool)

(assert (=> d!42257 m!161537))

(assert (=> b!135534 m!156163))

(declare-fun m!161539 () Bool)

(assert (=> b!135534 m!161539))

(assert (=> b!135534 m!156163))

(assert (=> b!135534 m!161445))

(assert (=> b!135534 m!161445))

(declare-fun m!161541 () Bool)

(assert (=> b!135534 m!161541))

(assert (=> b!135536 m!156163))

(assert (=> b!135536 m!161445))

(assert (=> b!135536 m!161445))

(assert (=> b!135536 m!161541))

(assert (=> b!133022 d!42257))

(declare-fun d!42259 () Bool)

(assert (=> d!42259 (= (apply!116 lt!69728 (select (arr!2261 lt!69349) #b00000000000000000000000000000000)) (get!1486 (getValueByKey!172 (toList!869 lt!69728) (select (arr!2261 lt!69349) #b00000000000000000000000000000000))))))

(declare-fun bs!5684 () Bool)

(assert (= bs!5684 d!42259))

(assert (=> bs!5684 m!157317))

(assert (=> bs!5684 m!159531))

(assert (=> bs!5684 m!159531))

(declare-fun m!161543 () Bool)

(assert (=> bs!5684 m!161543))

(assert (=> b!133314 d!42259))

(declare-fun d!42261 () Bool)

(declare-fun c!25351 () Bool)

(assert (=> d!42261 (= c!25351 ((_ is ValueCellFull!1095) (select (arr!2262 lt!69346) #b00000000000000000000000000000000)))))

(declare-fun e!88268 () V!3483)

(assert (=> d!42261 (= (get!1482 (select (arr!2262 lt!69346) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!88268)))

(declare-fun b!135537 () Bool)

(assert (=> b!135537 (= e!88268 (get!1484 (select (arr!2262 lt!69346) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135538 () Bool)

(assert (=> b!135538 (= e!88268 (get!1485 (select (arr!2262 lt!69346) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42261 c!25351) b!135537))

(assert (= (and d!42261 (not c!25351)) b!135538))

(assert (=> b!135537 m!157313))

(assert (=> b!135537 m!156175))

(declare-fun m!161545 () Bool)

(assert (=> b!135537 m!161545))

(assert (=> b!135538 m!157313))

(assert (=> b!135538 m!156175))

(declare-fun m!161547 () Bool)

(assert (=> b!135538 m!161547))

(assert (=> b!133314 d!42261))

(declare-fun b!135539 () Bool)

(declare-fun e!88270 () SeekEntryResult!275)

(assert (=> b!135539 (= e!88270 (Found!275 (nextIndex!0 (index!3262 lt!69233) (x!15592 lt!69233) (mask!7165 (v!3199 (underlying!455 thiss!992))))))))

(declare-fun b!135540 () Bool)

(declare-fun e!88269 () SeekEntryResult!275)

(assert (=> b!135540 (= e!88269 e!88270)))

(declare-fun c!25352 () Bool)

(declare-fun lt!70803 () (_ BitVec 64))

(assert (=> b!135540 (= c!25352 (= lt!70803 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!42263 () Bool)

(declare-fun lt!70804 () SeekEntryResult!275)

(assert (=> d!42263 (and (or ((_ is Undefined!275) lt!70804) (not ((_ is Found!275) lt!70804)) (and (bvsge (index!3261 lt!70804) #b00000000000000000000000000000000) (bvslt (index!3261 lt!70804) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))) (or ((_ is Undefined!275) lt!70804) ((_ is Found!275) lt!70804) (not ((_ is MissingVacant!275) lt!70804)) (not (= (index!3263 lt!70804) (index!3262 lt!69233))) (and (bvsge (index!3263 lt!70804) #b00000000000000000000000000000000) (bvslt (index!3263 lt!70804) (size!2530 (_keys!4614 (v!3199 (underlying!455 thiss!992))))))) (or ((_ is Undefined!275) lt!70804) (ite ((_ is Found!275) lt!70804) (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3261 lt!70804)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!275) lt!70804) (= (index!3263 lt!70804) (index!3262 lt!69233)) (= (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (index!3263 lt!70804)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!42263 (= lt!70804 e!88269)))

(declare-fun c!25354 () Bool)

(assert (=> d!42263 (= c!25354 (bvsge (bvadd (x!15592 lt!69233) #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(assert (=> d!42263 (= lt!70803 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (nextIndex!0 (index!3262 lt!69233) (x!15592 lt!69233) (mask!7165 (v!3199 (underlying!455 thiss!992))))))))

(assert (=> d!42263 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!42263 (= (seekKeyOrZeroReturnVacant!0 (bvadd (x!15592 lt!69233) #b00000000000000000000000000000001) (nextIndex!0 (index!3262 lt!69233) (x!15592 lt!69233) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!69233) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))) lt!70804)))

(declare-fun b!135541 () Bool)

(declare-fun e!88271 () SeekEntryResult!275)

(assert (=> b!135541 (= e!88271 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15592 lt!69233) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (index!3262 lt!69233) (x!15592 lt!69233) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (bvadd (x!15592 lt!69233) #b00000000000000000000000000000001) (mask!7165 (v!3199 (underlying!455 thiss!992)))) (index!3262 lt!69233) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) #b00000000000000000000000000000000) (_keys!4614 (v!3199 (underlying!455 thiss!992))) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(declare-fun b!135542 () Bool)

(declare-fun c!25353 () Bool)

(assert (=> b!135542 (= c!25353 (= lt!70803 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135542 (= e!88270 e!88271)))

(declare-fun b!135543 () Bool)

(assert (=> b!135543 (= e!88269 Undefined!275)))

(declare-fun b!135544 () Bool)

(assert (=> b!135544 (= e!88271 (MissingVacant!275 (index!3262 lt!69233)))))

(assert (= (and d!42263 c!25354) b!135543))

(assert (= (and d!42263 (not c!25354)) b!135540))

(assert (= (and b!135540 c!25352) b!135539))

(assert (= (and b!135540 (not c!25352)) b!135542))

(assert (= (and b!135542 c!25353) b!135544))

(assert (= (and b!135542 (not c!25353)) b!135541))

(declare-fun m!161549 () Bool)

(assert (=> d!42263 m!161549))

(declare-fun m!161551 () Bool)

(assert (=> d!42263 m!161551))

(assert (=> d!42263 m!156829))

(declare-fun m!161553 () Bool)

(assert (=> d!42263 m!161553))

(assert (=> d!42263 m!155867))

(assert (=> b!135541 m!156829))

(declare-fun m!161555 () Bool)

(assert (=> b!135541 m!161555))

(assert (=> b!135541 m!161555))

(assert (=> b!135541 m!155999))

(declare-fun m!161557 () Bool)

(assert (=> b!135541 m!161557))

(assert (=> b!133062 d!42263))

(declare-fun d!42265 () Bool)

(declare-fun lt!70805 () (_ BitVec 32))

(assert (=> d!42265 (and (bvsge lt!70805 #b00000000000000000000000000000000) (bvslt lt!70805 (bvadd (mask!7165 (v!3199 (underlying!455 thiss!992))) #b00000000000000000000000000000001)))))

(assert (=> d!42265 (= lt!70805 (choose!52 (index!3262 lt!69233) (x!15592 lt!69233) (mask!7165 (v!3199 (underlying!455 thiss!992)))))))

(assert (=> d!42265 (validMask!0 (mask!7165 (v!3199 (underlying!455 thiss!992))))))

(assert (=> d!42265 (= (nextIndex!0 (index!3262 lt!69233) (x!15592 lt!69233) (mask!7165 (v!3199 (underlying!455 thiss!992)))) lt!70805)))

(declare-fun bs!5685 () Bool)

(assert (= bs!5685 d!42265))

(declare-fun m!161559 () Bool)

(assert (=> bs!5685 m!161559))

(assert (=> bs!5685 m!155867))

(assert (=> b!133062 d!42265))

(assert (=> b!133571 d!40353))

(declare-fun b!135545 () Bool)

(declare-fun e!88273 () (_ BitVec 32))

(declare-fun e!88272 () (_ BitVec 32))

(assert (=> b!135545 (= e!88273 e!88272)))

(declare-fun c!25355 () Bool)

(assert (=> b!135545 (= c!25355 (validKeyInArray!0 (select (arr!2261 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!135546 () Bool)

(declare-fun call!14896 () (_ BitVec 32))

(assert (=> b!135546 (= e!88272 (bvadd #b00000000000000000000000000000001 call!14896))))

(declare-fun b!135547 () Bool)

(assert (=> b!135547 (= e!88272 call!14896)))

(declare-fun d!42267 () Bool)

(declare-fun lt!70806 () (_ BitVec 32))

(assert (=> d!42267 (and (bvsge lt!70806 #b00000000000000000000000000000000) (bvsle lt!70806 (bvsub (size!2530 (_keys!4614 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> d!42267 (= lt!70806 e!88273)))

(declare-fun c!25356 () Bool)

(assert (=> d!42267 (= c!25356 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!42267 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2530 (_keys!4614 newMap!16)) (size!2530 (_keys!4614 newMap!16))))))

(assert (=> d!42267 (= (arrayCountValidKeys!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))) lt!70806)))

(declare-fun b!135548 () Bool)

(assert (=> b!135548 (= e!88273 #b00000000000000000000000000000000)))

(declare-fun bm!14893 () Bool)

(assert (=> bm!14893 (= call!14896 (arrayCountValidKeys!0 (_keys!4614 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2530 (_keys!4614 newMap!16))))))

(assert (= (and d!42267 c!25356) b!135548))

(assert (= (and d!42267 (not c!25356)) b!135545))

(assert (= (and b!135545 c!25355) b!135546))

(assert (= (and b!135545 (not c!25355)) b!135547))

(assert (= (or b!135546 b!135547) bm!14893))

(assert (=> b!135545 m!159755))

(assert (=> b!135545 m!159755))

(assert (=> b!135545 m!159759))

(declare-fun m!161561 () Bool)

(assert (=> bm!14893 m!161561))

(assert (=> bm!14755 d!42267))

(declare-fun b!135551 () Bool)

(declare-fun e!88275 () Option!178)

(assert (=> b!135551 (= e!88275 (getValueByKey!172 (t!6167 (t!6167 (toList!869 lt!69377))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!135552 () Bool)

(assert (=> b!135552 (= e!88275 None!176)))

(declare-fun d!42269 () Bool)

(declare-fun c!25357 () Bool)

(assert (=> d!42269 (= c!25357 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69377))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69377)))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!88274 () Option!178)

(assert (=> d!42269 (= (getValueByKey!172 (t!6167 (toList!869 lt!69377)) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!88274)))

(declare-fun b!135549 () Bool)

(assert (=> b!135549 (= e!88274 (Some!177 (_2!1324 (h!2317 (t!6167 (toList!869 lt!69377))))))))

(declare-fun b!135550 () Bool)

(assert (=> b!135550 (= e!88274 e!88275)))

(declare-fun c!25358 () Bool)

(assert (=> b!135550 (= c!25358 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69377))) (not (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69377)))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!42269 c!25357) b!135549))

(assert (= (and d!42269 (not c!25357)) b!135550))

(assert (= (and b!135550 c!25358) b!135551))

(assert (= (and b!135550 (not c!25358)) b!135552))

(declare-fun m!161563 () Bool)

(assert (=> b!135551 m!161563))

(assert (=> b!133548 d!42269))

(declare-fun d!42271 () Bool)

(assert (=> d!42271 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69377) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69377) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(declare-fun bs!5686 () Bool)

(assert (= bs!5686 d!42271))

(assert (=> bs!5686 m!156343))

(declare-fun m!161565 () Bool)

(assert (=> bs!5686 m!161565))

(assert (=> b!133124 d!42271))

(assert (=> b!133124 d!40647))

(assert (=> d!40799 d!40805))

(assert (=> d!40799 d!40783))

(declare-fun d!42273 () Bool)

(assert (=> d!42273 (contains!899 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))) lt!69259)))

(assert (=> d!42273 true))

(declare-fun _$35!383 () Unit!4135)

(assert (=> d!42273 (= (choose!823 lt!69260 lt!69254 (zeroValue!2720 newMap!16) lt!69259) _$35!383)))

(declare-fun bs!5687 () Bool)

(assert (= bs!5687 d!42273))

(assert (=> bs!5687 m!156187))

(assert (=> bs!5687 m!156187))

(assert (=> bs!5687 m!156211))

(assert (=> d!40799 d!42273))

(declare-fun d!42275 () Bool)

(declare-fun e!88276 () Bool)

(assert (=> d!42275 e!88276))

(declare-fun res!65072 () Bool)

(assert (=> d!42275 (=> res!65072 e!88276)))

(declare-fun lt!70810 () Bool)

(assert (=> d!42275 (= res!65072 (not lt!70810))))

(declare-fun lt!70807 () Bool)

(assert (=> d!42275 (= lt!70810 lt!70807)))

(declare-fun lt!70809 () Unit!4135)

(declare-fun e!88277 () Unit!4135)

(assert (=> d!42275 (= lt!70809 e!88277)))

(declare-fun c!25359 () Bool)

(assert (=> d!42275 (= c!25359 lt!70807)))

(assert (=> d!42275 (= lt!70807 (containsKey!176 (toList!869 lt!69260) lt!69259))))

(assert (=> d!42275 (= (contains!899 lt!69260 lt!69259) lt!70810)))

(declare-fun b!135553 () Bool)

(declare-fun lt!70808 () Unit!4135)

(assert (=> b!135553 (= e!88277 lt!70808)))

(assert (=> b!135553 (= lt!70808 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69260) lt!69259))))

(assert (=> b!135553 (isDefined!125 (getValueByKey!172 (toList!869 lt!69260) lt!69259))))

(declare-fun b!135554 () Bool)

(declare-fun Unit!4265 () Unit!4135)

(assert (=> b!135554 (= e!88277 Unit!4265)))

(declare-fun b!135555 () Bool)

(assert (=> b!135555 (= e!88276 (isDefined!125 (getValueByKey!172 (toList!869 lt!69260) lt!69259)))))

(assert (= (and d!42275 c!25359) b!135553))

(assert (= (and d!42275 (not c!25359)) b!135554))

(assert (= (and d!42275 (not res!65072)) b!135555))

(declare-fun m!161567 () Bool)

(assert (=> d!42275 m!161567))

(declare-fun m!161569 () Bool)

(assert (=> b!135553 m!161569))

(declare-fun m!161571 () Bool)

(assert (=> b!135553 m!161571))

(assert (=> b!135553 m!161571))

(declare-fun m!161573 () Bool)

(assert (=> b!135553 m!161573))

(assert (=> b!135555 m!161571))

(assert (=> b!135555 m!161571))

(assert (=> b!135555 m!161573))

(assert (=> d!40799 d!42275))

(declare-fun d!42277 () Bool)

(assert (=> d!42277 (= (isDefined!125 (getValueByKey!172 (toList!869 lt!69422) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (not (isEmpty!409 (getValueByKey!172 (toList!869 lt!69422) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun bs!5688 () Bool)

(assert (= bs!5688 d!42277))

(assert (=> bs!5688 m!156447))

(declare-fun m!161575 () Bool)

(assert (=> bs!5688 m!161575))

(assert (=> b!133492 d!42277))

(assert (=> b!133492 d!40613))

(assert (=> d!40439 d!40441))

(declare-fun d!42279 () Bool)

(declare-fun e!88278 () Bool)

(assert (=> d!42279 e!88278))

(declare-fun res!65073 () Bool)

(assert (=> d!42279 (=> res!65073 e!88278)))

(declare-fun lt!70814 () Bool)

(assert (=> d!42279 (= res!65073 (not lt!70814))))

(declare-fun lt!70811 () Bool)

(assert (=> d!42279 (= lt!70814 lt!70811)))

(declare-fun lt!70813 () Unit!4135)

(declare-fun e!88279 () Unit!4135)

(assert (=> d!42279 (= lt!70813 e!88279)))

(declare-fun c!25360 () Bool)

(assert (=> d!42279 (= c!25360 lt!70811)))

(assert (=> d!42279 (= lt!70811 (containsKey!176 (toList!869 lt!69453) lt!69449))))

(assert (=> d!42279 (= (contains!899 lt!69453 lt!69449) lt!70814)))

(declare-fun b!135556 () Bool)

(declare-fun lt!70812 () Unit!4135)

(assert (=> b!135556 (= e!88279 lt!70812)))

(assert (=> b!135556 (= lt!70812 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69453) lt!69449))))

(assert (=> b!135556 (isDefined!125 (getValueByKey!172 (toList!869 lt!69453) lt!69449))))

(declare-fun b!135557 () Bool)

(declare-fun Unit!4266 () Unit!4135)

(assert (=> b!135557 (= e!88279 Unit!4266)))

(declare-fun b!135558 () Bool)

(assert (=> b!135558 (= e!88278 (isDefined!125 (getValueByKey!172 (toList!869 lt!69453) lt!69449)))))

(assert (= (and d!42279 c!25360) b!135556))

(assert (= (and d!42279 (not c!25360)) b!135557))

(assert (= (and d!42279 (not res!65073)) b!135558))

(declare-fun m!161577 () Bool)

(assert (=> d!42279 m!161577))

(declare-fun m!161579 () Bool)

(assert (=> b!135556 m!161579))

(assert (=> b!135556 m!156987))

(assert (=> b!135556 m!156987))

(declare-fun m!161581 () Bool)

(assert (=> b!135556 m!161581))

(assert (=> b!135558 m!156987))

(assert (=> b!135558 m!156987))

(assert (=> b!135558 m!161581))

(assert (=> d!40439 d!42279))

(declare-fun d!42281 () Bool)

(assert (=> d!42281 (= (apply!116 (+!175 lt!69453 (tuple2!2627 lt!69455 (zeroValue!2720 newMap!16))) lt!69449) (apply!116 lt!69453 lt!69449))))

(assert (=> d!42281 true))

(declare-fun _$34!985 () Unit!4135)

(assert (=> d!42281 (= (choose!822 lt!69453 lt!69455 (zeroValue!2720 newMap!16) lt!69449) _$34!985)))

(declare-fun bs!5689 () Bool)

(assert (= bs!5689 d!42281))

(assert (=> bs!5689 m!156529))

(assert (=> bs!5689 m!156529))

(assert (=> bs!5689 m!156531))

(assert (=> bs!5689 m!156549))

(assert (=> d!40439 d!42281))

(assert (=> d!40439 d!40447))

(assert (=> d!40439 d!40449))

(declare-fun d!42283 () Bool)

(assert (=> d!42283 (isDefined!125 (getValueByKey!172 (toList!869 (map!1409 (_2!1325 lt!69358))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun lt!70815 () Unit!4135)

(assert (=> d!42283 (= lt!70815 (choose!817 (toList!869 (map!1409 (_2!1325 lt!69358))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(declare-fun e!88280 () Bool)

(assert (=> d!42283 e!88280))

(declare-fun res!65074 () Bool)

(assert (=> d!42283 (=> (not res!65074) (not e!88280))))

(assert (=> d!42283 (= res!65074 (isStrictlySorted!322 (toList!869 (map!1409 (_2!1325 lt!69358)))))))

(assert (=> d!42283 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (map!1409 (_2!1325 lt!69358))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)) lt!70815)))

(declare-fun b!135559 () Bool)

(assert (=> b!135559 (= e!88280 (containsKey!176 (toList!869 (map!1409 (_2!1325 lt!69358))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355)))))

(assert (= (and d!42283 res!65074) b!135559))

(assert (=> d!42283 m!155869))

(assert (=> d!42283 m!157459))

(assert (=> d!42283 m!157459))

(assert (=> d!42283 m!157461))

(assert (=> d!42283 m!155869))

(declare-fun m!161583 () Bool)

(assert (=> d!42283 m!161583))

(declare-fun m!161585 () Bool)

(assert (=> d!42283 m!161585))

(assert (=> b!135559 m!155869))

(assert (=> b!135559 m!157455))

(assert (=> b!133379 d!42283))

(assert (=> b!133379 d!41751))

(assert (=> b!133379 d!41753))

(declare-fun d!42285 () Bool)

(declare-fun res!65075 () Bool)

(declare-fun e!88281 () Bool)

(assert (=> d!42285 (=> res!65075 e!88281)))

(assert (=> d!42285 (= res!65075 (and ((_ is Cons!1712) (t!6167 (toList!869 lt!69095))) (= (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!42285 (= (containsKey!176 (t!6167 (toList!869 lt!69095)) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!88281)))

(declare-fun b!135560 () Bool)

(declare-fun e!88282 () Bool)

(assert (=> b!135560 (= e!88281 e!88282)))

(declare-fun res!65076 () Bool)

(assert (=> b!135560 (=> (not res!65076) (not e!88282))))

(assert (=> b!135560 (= res!65076 (and (or (not ((_ is Cons!1712) (t!6167 (toList!869 lt!69095)))) (bvsle (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1712) (t!6167 (toList!869 lt!69095))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 lt!69095)))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!135561 () Bool)

(assert (=> b!135561 (= e!88282 (containsKey!176 (t!6167 (t!6167 (toList!869 lt!69095))) (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!42285 (not res!65075)) b!135560))

(assert (= (and b!135560 res!65076) b!135561))

(assert (=> b!135561 m!155949))

(declare-fun m!161587 () Bool)

(assert (=> b!135561 m!161587))

(assert (=> b!133666 d!42285))

(declare-fun lt!70816 () Bool)

(declare-fun d!42287 () Bool)

(assert (=> d!42287 (= lt!70816 (select (content!133 (t!6167 (toList!869 lt!69500))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!88284 () Bool)

(assert (=> d!42287 (= lt!70816 e!88284)))

(declare-fun res!65077 () Bool)

(assert (=> d!42287 (=> (not res!65077) (not e!88284))))

(assert (=> d!42287 (= res!65077 ((_ is Cons!1712) (t!6167 (toList!869 lt!69500))))))

(assert (=> d!42287 (= (contains!902 (t!6167 (toList!869 lt!69500)) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70816)))

(declare-fun b!135562 () Bool)

(declare-fun e!88283 () Bool)

(assert (=> b!135562 (= e!88284 e!88283)))

(declare-fun res!65078 () Bool)

(assert (=> b!135562 (=> res!65078 e!88283)))

(assert (=> b!135562 (= res!65078 (= (h!2317 (t!6167 (toList!869 lt!69500))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135563 () Bool)

(assert (=> b!135563 (= e!88283 (contains!902 (t!6167 (t!6167 (toList!869 lt!69500))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42287 res!65077) b!135562))

(assert (= (and b!135562 (not res!65078)) b!135563))

(assert (=> d!42287 m!158937))

(declare-fun m!161589 () Bool)

(assert (=> d!42287 m!161589))

(declare-fun m!161591 () Bool)

(assert (=> b!135563 m!161591))

(assert (=> b!133002 d!42287))

(assert (=> b!133795 d!42169))

(assert (=> b!133795 d!40813))

(declare-fun lt!70817 () Bool)

(declare-fun d!42289 () Bool)

(assert (=> d!42289 (= lt!70817 (select (content!133 (toList!869 lt!69974)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(declare-fun e!88286 () Bool)

(assert (=> d!42289 (= lt!70817 e!88286)))

(declare-fun res!65079 () Bool)

(assert (=> d!42289 (=> (not res!65079) (not e!88286))))

(assert (=> d!42289 (= res!65079 ((_ is Cons!1712) (toList!869 lt!69974)))))

(assert (=> d!42289 (= (contains!902 (toList!869 lt!69974) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!70817)))

(declare-fun b!135564 () Bool)

(declare-fun e!88285 () Bool)

(assert (=> b!135564 (= e!88286 e!88285)))

(declare-fun res!65080 () Bool)

(assert (=> b!135564 (=> res!65080 e!88285)))

(assert (=> b!135564 (= res!65080 (= (h!2317 (toList!869 lt!69974)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(declare-fun b!135565 () Bool)

(assert (=> b!135565 (= e!88285 (contains!902 (t!6167 (toList!869 lt!69974)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(assert (= (and d!42289 res!65079) b!135564))

(assert (= (and b!135564 (not res!65080)) b!135565))

(declare-fun m!161593 () Bool)

(assert (=> d!42289 m!161593))

(declare-fun m!161595 () Bool)

(assert (=> d!42289 m!161595))

(declare-fun m!161597 () Bool)

(assert (=> b!135565 m!161597))

(assert (=> b!133734 d!42289))

(declare-fun d!42291 () Bool)

(declare-fun e!88287 () Bool)

(assert (=> d!42291 e!88287))

(declare-fun res!65082 () Bool)

(assert (=> d!42291 (=> (not res!65082) (not e!88287))))

(declare-fun lt!70818 () ListLongMap!1707)

(assert (=> d!42291 (= res!65082 (contains!899 lt!70818 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179))))))))

(declare-fun lt!70820 () List!1716)

(assert (=> d!42291 (= lt!70818 (ListLongMap!1708 lt!70820))))

(declare-fun lt!70821 () Unit!4135)

(declare-fun lt!70819 () Unit!4135)

(assert (=> d!42291 (= lt!70821 lt!70819)))

(assert (=> d!42291 (= (getValueByKey!172 lt!70820 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179))))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179))))))))

(assert (=> d!42291 (= lt!70819 (lemmaContainsTupThenGetReturnValue!87 lt!70820 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179))))))))

(assert (=> d!42291 (= lt!70820 (insertStrictlySorted!90 (toList!869 call!14755) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179)))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179))))))))

(assert (=> d!42291 (= (+!175 call!14755 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179)))) lt!70818)))

(declare-fun b!135566 () Bool)

(declare-fun res!65081 () Bool)

(assert (=> b!135566 (=> (not res!65081) (not e!88287))))

(assert (=> b!135566 (= res!65081 (= (getValueByKey!172 (toList!869 lt!70818) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179))))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179)))))))))

(declare-fun b!135567 () Bool)

(assert (=> b!135567 (= e!88287 (contains!902 (toList!869 lt!70818) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (_2!1325 lt!69179)))))))

(assert (= (and d!42291 res!65082) b!135566))

(assert (= (and b!135566 res!65081) b!135567))

(declare-fun m!161599 () Bool)

(assert (=> d!42291 m!161599))

(declare-fun m!161601 () Bool)

(assert (=> d!42291 m!161601))

(declare-fun m!161603 () Bool)

(assert (=> d!42291 m!161603))

(declare-fun m!161605 () Bool)

(assert (=> d!42291 m!161605))

(declare-fun m!161607 () Bool)

(assert (=> b!135566 m!161607))

(declare-fun m!161609 () Bool)

(assert (=> b!135567 m!161609))

(assert (=> b!133622 d!42291))

(assert (=> d!40849 d!40325))

(assert (=> b!133169 d!42131))

(assert (=> b!133169 d!40397))

(declare-fun b!135570 () Bool)

(declare-fun e!88289 () Option!178)

(assert (=> b!135570 (= e!88289 (getValueByKey!172 (t!6167 (toList!869 lt!69824)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun b!135571 () Bool)

(assert (=> b!135571 (= e!88289 None!176)))

(declare-fun d!42293 () Bool)

(declare-fun c!25361 () Bool)

(assert (=> d!42293 (= c!25361 (and ((_ is Cons!1712) (toList!869 lt!69824)) (= (_1!1324 (h!2317 (toList!869 lt!69824))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun e!88288 () Option!178)

(assert (=> d!42293 (= (getValueByKey!172 (toList!869 lt!69824) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) e!88288)))

(declare-fun b!135568 () Bool)

(assert (=> b!135568 (= e!88288 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69824)))))))

(declare-fun b!135569 () Bool)

(assert (=> b!135569 (= e!88288 e!88289)))

(declare-fun c!25362 () Bool)

(assert (=> b!135569 (= c!25362 (and ((_ is Cons!1712) (toList!869 lt!69824)) (not (= (_1!1324 (h!2317 (toList!869 lt!69824))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))))

(assert (= (and d!42293 c!25361) b!135568))

(assert (= (and d!42293 (not c!25361)) b!135569))

(assert (= (and b!135569 c!25362) b!135570))

(assert (= (and b!135569 (not c!25362)) b!135571))

(declare-fun m!161611 () Bool)

(assert (=> b!135570 m!161611))

(assert (=> b!133516 d!42293))

(declare-fun d!42295 () Bool)

(declare-fun res!65083 () Bool)

(declare-fun e!88290 () Bool)

(assert (=> d!42295 (=> res!65083 e!88290)))

(assert (=> d!42295 (= res!65083 (and ((_ is Cons!1712) (toList!869 lt!69084)) (= (_1!1324 (h!2317 (toList!869 lt!69084))) lt!69080)))))

(assert (=> d!42295 (= (containsKey!176 (toList!869 lt!69084) lt!69080) e!88290)))

(declare-fun b!135572 () Bool)

(declare-fun e!88291 () Bool)

(assert (=> b!135572 (= e!88290 e!88291)))

(declare-fun res!65084 () Bool)

(assert (=> b!135572 (=> (not res!65084) (not e!88291))))

(assert (=> b!135572 (= res!65084 (and (or (not ((_ is Cons!1712) (toList!869 lt!69084))) (bvsle (_1!1324 (h!2317 (toList!869 lt!69084))) lt!69080)) ((_ is Cons!1712) (toList!869 lt!69084)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69084))) lt!69080)))))

(declare-fun b!135573 () Bool)

(assert (=> b!135573 (= e!88291 (containsKey!176 (t!6167 (toList!869 lt!69084)) lt!69080))))

(assert (= (and d!42295 (not res!65083)) b!135572))

(assert (= (and b!135572 res!65084) b!135573))

(declare-fun m!161613 () Bool)

(assert (=> b!135573 m!161613))

(assert (=> d!40719 d!42295))

(declare-fun d!42297 () Bool)

(declare-fun e!88292 () Bool)

(assert (=> d!42297 e!88292))

(declare-fun res!65085 () Bool)

(assert (=> d!42297 (=> res!65085 e!88292)))

(declare-fun lt!70825 () Bool)

(assert (=> d!42297 (= res!65085 (not lt!70825))))

(declare-fun lt!70822 () Bool)

(assert (=> d!42297 (= lt!70825 lt!70822)))

(declare-fun lt!70824 () Unit!4135)

(declare-fun e!88293 () Unit!4135)

(assert (=> d!42297 (= lt!70824 e!88293)))

(declare-fun c!25363 () Bool)

(assert (=> d!42297 (= c!25363 lt!70822)))

(assert (=> d!42297 (= lt!70822 (containsKey!176 (toList!869 lt!69600) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))

(assert (=> d!42297 (= (contains!899 lt!69600 (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) lt!70825)))

(declare-fun b!135574 () Bool)

(declare-fun lt!70823 () Unit!4135)

(assert (=> b!135574 (= e!88293 lt!70823)))

(assert (=> b!135574 (= lt!70823 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69600) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))

(assert (=> b!135574 (isDefined!125 (getValueByKey!172 (toList!869 lt!69600) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135575 () Bool)

(declare-fun Unit!4267 () Unit!4135)

(assert (=> b!135575 (= e!88293 Unit!4267)))

(declare-fun b!135576 () Bool)

(assert (=> b!135576 (= e!88292 (isDefined!125 (getValueByKey!172 (toList!869 lt!69600) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!42297 c!25363) b!135574))

(assert (= (and d!42297 (not c!25363)) b!135575))

(assert (= (and d!42297 (not res!65085)) b!135576))

(declare-fun m!161615 () Bool)

(assert (=> d!42297 m!161615))

(declare-fun m!161617 () Bool)

(assert (=> b!135574 m!161617))

(assert (=> b!135574 m!156967))

(assert (=> b!135574 m!156967))

(declare-fun m!161619 () Bool)

(assert (=> b!135574 m!161619))

(assert (=> b!135576 m!156967))

(assert (=> b!135576 m!156967))

(assert (=> b!135576 m!161619))

(assert (=> d!40443 d!42297))

(declare-fun e!88295 () Option!178)

(declare-fun b!135579 () Bool)

(assert (=> b!135579 (= e!88295 (getValueByKey!172 (t!6167 lt!69602) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135580 () Bool)

(assert (=> b!135580 (= e!88295 None!176)))

(declare-fun d!42299 () Bool)

(declare-fun c!25364 () Bool)

(assert (=> d!42299 (= c!25364 (and ((_ is Cons!1712) lt!69602) (= (_1!1324 (h!2317 lt!69602)) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))))))

(declare-fun e!88294 () Option!178)

(assert (=> d!42299 (= (getValueByKey!172 lt!69602 (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) e!88294)))

(declare-fun b!135577 () Bool)

(assert (=> b!135577 (= e!88294 (Some!177 (_2!1324 (h!2317 lt!69602))))))

(declare-fun b!135578 () Bool)

(assert (=> b!135578 (= e!88294 e!88295)))

(declare-fun c!25365 () Bool)

(assert (=> b!135578 (= c!25365 (and ((_ is Cons!1712) lt!69602) (not (= (_1!1324 (h!2317 lt!69602)) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))))

(assert (= (and d!42299 c!25364) b!135577))

(assert (= (and d!42299 (not c!25364)) b!135578))

(assert (= (and b!135578 c!25365) b!135579))

(assert (= (and b!135578 (not c!25365)) b!135580))

(declare-fun m!161621 () Bool)

(assert (=> b!135579 m!161621))

(assert (=> d!40443 d!42299))

(declare-fun d!42301 () Bool)

(assert (=> d!42301 (= (getValueByKey!172 lt!69602 (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))

(declare-fun lt!70826 () Unit!4135)

(assert (=> d!42301 (= lt!70826 (choose!827 lt!69602 (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))

(declare-fun e!88296 () Bool)

(assert (=> d!42301 e!88296))

(declare-fun res!65086 () Bool)

(assert (=> d!42301 (=> (not res!65086) (not e!88296))))

(assert (=> d!42301 (= res!65086 (isStrictlySorted!322 lt!69602))))

(assert (=> d!42301 (= (lemmaContainsTupThenGetReturnValue!87 lt!69602 (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) lt!70826)))

(declare-fun b!135581 () Bool)

(declare-fun res!65087 () Bool)

(assert (=> b!135581 (=> (not res!65087) (not e!88296))))

(assert (=> b!135581 (= res!65087 (containsKey!176 lt!69602 (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135582 () Bool)

(assert (=> b!135582 (= e!88296 (contains!902 lt!69602 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!42301 res!65086) b!135581))

(assert (= (and b!135581 res!65087) b!135582))

(assert (=> d!42301 m!156961))

(declare-fun m!161623 () Bool)

(assert (=> d!42301 m!161623))

(declare-fun m!161625 () Bool)

(assert (=> d!42301 m!161625))

(declare-fun m!161627 () Bool)

(assert (=> b!135581 m!161627))

(declare-fun m!161629 () Bool)

(assert (=> b!135582 m!161629))

(assert (=> d!40443 d!42301))

(declare-fun bm!14894 () Bool)

(declare-fun call!14898 () List!1716)

(declare-fun call!14899 () List!1716)

(assert (=> bm!14894 (= call!14898 call!14899)))

(declare-fun d!42303 () Bool)

(declare-fun e!88300 () Bool)

(assert (=> d!42303 e!88300))

(declare-fun res!65089 () Bool)

(assert (=> d!42303 (=> (not res!65089) (not e!88300))))

(declare-fun lt!70827 () List!1716)

(assert (=> d!42303 (= res!65089 (isStrictlySorted!322 lt!70827))))

(declare-fun e!88298 () List!1716)

(assert (=> d!42303 (= lt!70827 e!88298)))

(declare-fun c!25369 () Bool)

(assert (=> d!42303 (= c!25369 (and ((_ is Cons!1712) (toList!869 lt!69462)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69462))) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))))))

(assert (=> d!42303 (isStrictlySorted!322 (toList!869 lt!69462))))

(assert (=> d!42303 (= (insertStrictlySorted!90 (toList!869 lt!69462) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))) lt!70827)))

(declare-fun b!135583 () Bool)

(assert (=> b!135583 (= e!88300 (contains!902 lt!70827 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))))))

(declare-fun b!135584 () Bool)

(declare-fun c!25367 () Bool)

(assert (=> b!135584 (= c!25367 (and ((_ is Cons!1712) (toList!869 lt!69462)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69462))) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))))))

(declare-fun e!88299 () List!1716)

(declare-fun e!88301 () List!1716)

(assert (=> b!135584 (= e!88299 e!88301)))

(declare-fun e!88297 () List!1716)

(declare-fun b!135585 () Bool)

(assert (=> b!135585 (= e!88297 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69462)) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135586 () Bool)

(assert (=> b!135586 (= e!88299 call!14898)))

(declare-fun b!135587 () Bool)

(declare-fun call!14897 () List!1716)

(assert (=> b!135587 (= e!88301 call!14897)))

(declare-fun b!135588 () Bool)

(declare-fun c!25366 () Bool)

(assert (=> b!135588 (= e!88297 (ite c!25366 (t!6167 (toList!869 lt!69462)) (ite c!25367 (Cons!1712 (h!2317 (toList!869 lt!69462)) (t!6167 (toList!869 lt!69462))) Nil!1713)))))

(declare-fun b!135589 () Bool)

(assert (=> b!135589 (= e!88301 call!14897)))

(declare-fun b!135590 () Bool)

(assert (=> b!135590 (= e!88298 call!14899)))

(declare-fun bm!14895 () Bool)

(assert (=> bm!14895 (= call!14899 ($colon$colon!92 e!88297 (ite c!25369 (h!2317 (toList!869 lt!69462)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))))

(declare-fun c!25368 () Bool)

(assert (=> bm!14895 (= c!25368 c!25369)))

(declare-fun bm!14896 () Bool)

(assert (=> bm!14896 (= call!14897 call!14898)))

(declare-fun b!135591 () Bool)

(declare-fun res!65088 () Bool)

(assert (=> b!135591 (=> (not res!65088) (not e!88300))))

(assert (=> b!135591 (= res!65088 (containsKey!176 lt!70827 (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16)))))))

(declare-fun b!135592 () Bool)

(assert (=> b!135592 (= e!88298 e!88299)))

(assert (=> b!135592 (= c!25366 (and ((_ is Cons!1712) (toList!869 lt!69462)) (= (_1!1324 (h!2317 (toList!869 lt!69462))) (_1!1324 (tuple2!2627 lt!69456 (zeroValue!2720 newMap!16))))))))

(assert (= (and d!42303 c!25369) b!135590))

(assert (= (and d!42303 (not c!25369)) b!135592))

(assert (= (and b!135592 c!25366) b!135586))

(assert (= (and b!135592 (not c!25366)) b!135584))

(assert (= (and b!135584 c!25367) b!135587))

(assert (= (and b!135584 (not c!25367)) b!135589))

(assert (= (or b!135587 b!135589) bm!14896))

(assert (= (or b!135586 bm!14896) bm!14894))

(assert (= (or b!135590 bm!14894) bm!14895))

(assert (= (and bm!14895 c!25368) b!135585))

(assert (= (and bm!14895 (not c!25368)) b!135588))

(assert (= (and d!42303 res!65089) b!135591))

(assert (= (and b!135591 res!65088) b!135583))

(declare-fun m!161631 () Bool)

(assert (=> d!42303 m!161631))

(declare-fun m!161633 () Bool)

(assert (=> d!42303 m!161633))

(declare-fun m!161635 () Bool)

(assert (=> bm!14895 m!161635))

(declare-fun m!161637 () Bool)

(assert (=> b!135585 m!161637))

(declare-fun m!161639 () Bool)

(assert (=> b!135583 m!161639))

(declare-fun m!161641 () Bool)

(assert (=> b!135591 m!161641))

(assert (=> d!40443 d!42303))

(declare-fun d!42305 () Bool)

(assert (=> d!42305 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) lt!69259))))

(declare-fun lt!70828 () Unit!4135)

(assert (=> d!42305 (= lt!70828 (choose!817 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) lt!69259))))

(declare-fun e!88302 () Bool)

(assert (=> d!42305 e!88302))

(declare-fun res!65090 () Bool)

(assert (=> d!42305 (=> (not res!65090) (not e!88302))))

(assert (=> d!42305 (= res!65090 (isStrictlySorted!322 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16))))))))

(assert (=> d!42305 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) lt!69259) lt!70828)))

(declare-fun b!135593 () Bool)

(assert (=> b!135593 (= e!88302 (containsKey!176 (toList!869 (+!175 lt!69260 (tuple2!2627 lt!69254 (zeroValue!2720 newMap!16)))) lt!69259))))

(assert (= (and d!42305 res!65090) b!135593))

(assert (=> d!42305 m!158229))

(assert (=> d!42305 m!158229))

(assert (=> d!42305 m!158231))

(declare-fun m!161643 () Bool)

(assert (=> d!42305 m!161643))

(declare-fun m!161645 () Bool)

(assert (=> d!42305 m!161645))

(assert (=> b!135593 m!158225))

(assert (=> b!133765 d!42305))

(assert (=> b!133765 d!41809))

(assert (=> b!133765 d!41811))

(assert (=> b!133552 d!42163))

(assert (=> b!133552 d!40857))

(declare-fun d!42307 () Bool)

(assert (=> d!42307 (= (apply!116 lt!69614 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) (get!1486 (getValueByKey!172 (toList!869 lt!69614) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5690 () Bool)

(assert (= bs!5690 d!42307))

(assert (=> bs!5690 m!156163))

(assert (=> bs!5690 m!160455))

(assert (=> bs!5690 m!160455))

(declare-fun m!161647 () Bool)

(assert (=> bs!5690 m!161647))

(assert (=> b!133160 d!42307))

(assert (=> b!133160 d!40713))

(declare-fun d!42309 () Bool)

(declare-fun res!65091 () Bool)

(declare-fun e!88303 () Bool)

(assert (=> d!42309 (=> res!65091 e!88303)))

(assert (=> d!42309 (= res!65091 (and ((_ is Cons!1712) lt!69780) (= (_1!1324 (h!2317 lt!69780)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (=> d!42309 (= (containsKey!176 lt!69780 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!88303)))

(declare-fun b!135594 () Bool)

(declare-fun e!88304 () Bool)

(assert (=> b!135594 (= e!88303 e!88304)))

(declare-fun res!65092 () Bool)

(assert (=> b!135594 (=> (not res!65092) (not e!88304))))

(assert (=> b!135594 (= res!65092 (and (or (not ((_ is Cons!1712) lt!69780)) (bvsle (_1!1324 (h!2317 lt!69780)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) ((_ is Cons!1712) lt!69780) (bvslt (_1!1324 (h!2317 lt!69780)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!135595 () Bool)

(assert (=> b!135595 (= e!88304 (containsKey!176 (t!6167 lt!69780) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!42309 (not res!65091)) b!135594))

(assert (= (and b!135594 res!65092) b!135595))

(declare-fun m!161649 () Bool)

(assert (=> b!135595 m!161649))

(assert (=> b!133405 d!42309))

(assert (=> bm!14671 d!41799))

(declare-fun d!42311 () Bool)

(declare-fun e!88305 () Bool)

(assert (=> d!42311 e!88305))

(declare-fun res!65094 () Bool)

(assert (=> d!42311 (=> (not res!65094) (not e!88305))))

(declare-fun lt!70829 () ListLongMap!1707)

(assert (=> d!42311 (= res!65094 (contains!899 lt!70829 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(declare-fun lt!70831 () List!1716)

(assert (=> d!42311 (= lt!70829 (ListLongMap!1708 lt!70831))))

(declare-fun lt!70832 () Unit!4135)

(declare-fun lt!70830 () Unit!4135)

(assert (=> d!42311 (= lt!70832 lt!70830)))

(assert (=> d!42311 (= (getValueByKey!172 lt!70831 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!42311 (= lt!70830 (lemmaContainsTupThenGetReturnValue!87 lt!70831 (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!42311 (= lt!70831 (insertStrictlySorted!90 (toList!869 call!14710) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))))))

(assert (=> d!42311 (= (+!175 call!14710 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))) lt!70829)))

(declare-fun b!135596 () Bool)

(declare-fun res!65093 () Bool)

(assert (=> b!135596 (=> (not res!65093) (not e!88305))))

(assert (=> b!135596 (= res!65093 (= (getValueByKey!172 (toList!869 lt!70829) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))))

(declare-fun b!135597 () Bool)

(assert (=> b!135597 (= e!88305 (contains!902 (toList!869 lt!70829) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2720 newMap!16))))))

(assert (= (and d!42311 res!65094) b!135596))

(assert (= (and b!135596 res!65093) b!135597))

(declare-fun m!161651 () Bool)

(assert (=> d!42311 m!161651))

(declare-fun m!161653 () Bool)

(assert (=> d!42311 m!161653))

(declare-fun m!161655 () Bool)

(assert (=> d!42311 m!161655))

(declare-fun m!161657 () Bool)

(assert (=> d!42311 m!161657))

(declare-fun m!161659 () Bool)

(assert (=> b!135596 m!161659))

(declare-fun m!161661 () Bool)

(assert (=> b!135597 m!161661))

(assert (=> b!133313 d!42311))

(assert (=> b!132996 d!42195))

(assert (=> b!132996 d!41391))

(declare-fun b!135600 () Bool)

(declare-fun res!65097 () Bool)

(declare-fun e!88306 () Bool)

(assert (=> b!135600 (=> (not res!65097) (not e!88306))))

(assert (=> b!135600 (= res!65097 (= (size!2534 (_2!1325 lt!69358)) (bvadd (_size!598 (_2!1325 lt!69358)) (bvsdiv (bvadd (extraKeys!2630 (_2!1325 lt!69358)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!42313 () Bool)

(declare-fun res!65098 () Bool)

(assert (=> d!42313 (=> (not res!65098) (not e!88306))))

(assert (=> d!42313 (= res!65098 (validMask!0 (mask!7165 (_2!1325 lt!69358))))))

(assert (=> d!42313 (= (simpleValid!92 (_2!1325 lt!69358)) e!88306)))

(declare-fun b!135601 () Bool)

(assert (=> b!135601 (= e!88306 (and (bvsge (extraKeys!2630 (_2!1325 lt!69358)) #b00000000000000000000000000000000) (bvsle (extraKeys!2630 (_2!1325 lt!69358)) #b00000000000000000000000000000011) (bvsge (_vacant!598 (_2!1325 lt!69358)) #b00000000000000000000000000000000)))))

(declare-fun b!135598 () Bool)

(declare-fun res!65096 () Bool)

(assert (=> b!135598 (=> (not res!65096) (not e!88306))))

(assert (=> b!135598 (= res!65096 (and (= (size!2531 (_values!2848 (_2!1325 lt!69358))) (bvadd (mask!7165 (_2!1325 lt!69358)) #b00000000000000000000000000000001)) (= (size!2530 (_keys!4614 (_2!1325 lt!69358))) (size!2531 (_values!2848 (_2!1325 lt!69358)))) (bvsge (_size!598 (_2!1325 lt!69358)) #b00000000000000000000000000000000) (bvsle (_size!598 (_2!1325 lt!69358)) (bvadd (mask!7165 (_2!1325 lt!69358)) #b00000000000000000000000000000001))))))

(declare-fun b!135599 () Bool)

(declare-fun res!65095 () Bool)

(assert (=> b!135599 (=> (not res!65095) (not e!88306))))

(assert (=> b!135599 (= res!65095 (bvsge (size!2534 (_2!1325 lt!69358)) (_size!598 (_2!1325 lt!69358))))))

(assert (= (and d!42313 res!65098) b!135598))

(assert (= (and b!135598 res!65096) b!135599))

(assert (= (and b!135599 res!65095) b!135600))

(assert (= (and b!135600 res!65097) b!135601))

(declare-fun m!161663 () Bool)

(assert (=> b!135600 m!161663))

(assert (=> d!42313 m!159357))

(assert (=> b!135599 m!161663))

(assert (=> d!40609 d!42313))

(declare-fun lt!70833 () Bool)

(declare-fun d!42315 () Bool)

(assert (=> d!42315 (= lt!70833 (select (content!133 (toList!869 lt!69943)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!88308 () Bool)

(assert (=> d!42315 (= lt!70833 e!88308)))

(declare-fun res!65099 () Bool)

(assert (=> d!42315 (=> (not res!65099) (not e!88308))))

(assert (=> d!42315 (= res!65099 ((_ is Cons!1712) (toList!869 lt!69943)))))

(assert (=> d!42315 (= (contains!902 (toList!869 lt!69943) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70833)))

(declare-fun b!135602 () Bool)

(declare-fun e!88307 () Bool)

(assert (=> b!135602 (= e!88308 e!88307)))

(declare-fun res!65100 () Bool)

(assert (=> b!135602 (=> res!65100 e!88307)))

(assert (=> b!135602 (= res!65100 (= (h!2317 (toList!869 lt!69943)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135603 () Bool)

(assert (=> b!135603 (= e!88307 (contains!902 (t!6167 (toList!869 lt!69943)) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42315 res!65099) b!135602))

(assert (= (and b!135602 (not res!65100)) b!135603))

(declare-fun m!161665 () Bool)

(assert (=> d!42315 m!161665))

(declare-fun m!161667 () Bool)

(assert (=> d!42315 m!161667))

(declare-fun m!161669 () Bool)

(assert (=> b!135603 m!161669))

(assert (=> b!133693 d!42315))

(declare-fun d!42317 () Bool)

(assert (=> d!42317 (= (get!1486 (getValueByKey!172 (toList!869 lt!69475) lt!69471)) (v!3203 (getValueByKey!172 (toList!869 lt!69475) lt!69471)))))

(assert (=> d!40505 d!42317))

(declare-fun b!135606 () Bool)

(declare-fun e!88310 () Option!178)

(assert (=> b!135606 (= e!88310 (getValueByKey!172 (t!6167 (toList!869 lt!69475)) lt!69471))))

(declare-fun b!135607 () Bool)

(assert (=> b!135607 (= e!88310 None!176)))

(declare-fun d!42319 () Bool)

(declare-fun c!25370 () Bool)

(assert (=> d!42319 (= c!25370 (and ((_ is Cons!1712) (toList!869 lt!69475)) (= (_1!1324 (h!2317 (toList!869 lt!69475))) lt!69471)))))

(declare-fun e!88309 () Option!178)

(assert (=> d!42319 (= (getValueByKey!172 (toList!869 lt!69475) lt!69471) e!88309)))

(declare-fun b!135604 () Bool)

(assert (=> b!135604 (= e!88309 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69475)))))))

(declare-fun b!135605 () Bool)

(assert (=> b!135605 (= e!88309 e!88310)))

(declare-fun c!25371 () Bool)

(assert (=> b!135605 (= c!25371 (and ((_ is Cons!1712) (toList!869 lt!69475)) (not (= (_1!1324 (h!2317 (toList!869 lt!69475))) lt!69471))))))

(assert (= (and d!42319 c!25370) b!135604))

(assert (= (and d!42319 (not c!25370)) b!135605))

(assert (= (and b!135605 c!25371) b!135606))

(assert (= (and b!135605 (not c!25371)) b!135607))

(declare-fun m!161671 () Bool)

(assert (=> b!135606 m!161671))

(assert (=> d!40505 d!42319))

(assert (=> d!40679 d!41553))

(declare-fun d!42321 () Bool)

(assert (=> d!42321 (isDefined!125 (getValueByKey!172 (toList!869 lt!69081) lt!69094))))

(declare-fun lt!70834 () Unit!4135)

(assert (=> d!42321 (= lt!70834 (choose!817 (toList!869 lt!69081) lt!69094))))

(declare-fun e!88311 () Bool)

(assert (=> d!42321 e!88311))

(declare-fun res!65101 () Bool)

(assert (=> d!42321 (=> (not res!65101) (not e!88311))))

(assert (=> d!42321 (= res!65101 (isStrictlySorted!322 (toList!869 lt!69081)))))

(assert (=> d!42321 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69081) lt!69094) lt!70834)))

(declare-fun b!135608 () Bool)

(assert (=> b!135608 (= e!88311 (containsKey!176 (toList!869 lt!69081) lt!69094))))

(assert (= (and d!42321 res!65101) b!135608))

(assert (=> d!42321 m!156407))

(assert (=> d!42321 m!156407))

(assert (=> d!42321 m!157081))

(declare-fun m!161673 () Bool)

(assert (=> d!42321 m!161673))

(assert (=> d!42321 m!157991))

(assert (=> b!135608 m!157077))

(assert (=> b!133225 d!42321))

(assert (=> b!133225 d!41857))

(assert (=> b!133225 d!40645))

(declare-fun d!42323 () Bool)

(declare-fun e!88312 () Bool)

(assert (=> d!42323 e!88312))

(declare-fun res!65102 () Bool)

(assert (=> d!42323 (=> res!65102 e!88312)))

(declare-fun lt!70838 () Bool)

(assert (=> d!42323 (= res!65102 (not lt!70838))))

(declare-fun lt!70835 () Bool)

(assert (=> d!42323 (= lt!70838 lt!70835)))

(declare-fun lt!70837 () Unit!4135)

(declare-fun e!88313 () Unit!4135)

(assert (=> d!42323 (= lt!70837 e!88313)))

(declare-fun c!25372 () Bool)

(assert (=> d!42323 (= c!25372 lt!70835)))

(assert (=> d!42323 (= lt!70835 (containsKey!176 (toList!869 lt!69965) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42323 (= (contains!899 lt!69965 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70838)))

(declare-fun b!135609 () Bool)

(declare-fun lt!70836 () Unit!4135)

(assert (=> b!135609 (= e!88313 lt!70836)))

(assert (=> b!135609 (= lt!70836 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69965) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135609 (isDefined!125 (getValueByKey!172 (toList!869 lt!69965) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135610 () Bool)

(declare-fun Unit!4268 () Unit!4135)

(assert (=> b!135610 (= e!88313 Unit!4268)))

(declare-fun b!135611 () Bool)

(assert (=> b!135611 (= e!88312 (isDefined!125 (getValueByKey!172 (toList!869 lt!69965) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42323 c!25372) b!135609))

(assert (= (and d!42323 (not c!25372)) b!135610))

(assert (= (and d!42323 (not res!65102)) b!135611))

(declare-fun m!161675 () Bool)

(assert (=> d!42323 m!161675))

(declare-fun m!161677 () Bool)

(assert (=> b!135609 m!161677))

(assert (=> b!135609 m!159249))

(assert (=> b!135609 m!159249))

(declare-fun m!161679 () Bool)

(assert (=> b!135609 m!161679))

(assert (=> b!135611 m!159249))

(assert (=> b!135611 m!159249))

(assert (=> b!135611 m!161679))

(assert (=> bm!14761 d!42323))

(declare-fun d!42325 () Bool)

(assert (=> d!42325 (= (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69470 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69489)) (v!3203 (getValueByKey!172 (toList!869 (+!175 lt!69470 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69489)))))

(assert (=> d!40499 d!42325))

(declare-fun e!88315 () Option!178)

(declare-fun b!135614 () Bool)

(assert (=> b!135614 (= e!88315 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69470 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) lt!69489))))

(declare-fun b!135615 () Bool)

(assert (=> b!135615 (= e!88315 None!176)))

(declare-fun c!25373 () Bool)

(declare-fun d!42327 () Bool)

(assert (=> d!42327 (= c!25373 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69470 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69470 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))) lt!69489)))))

(declare-fun e!88314 () Option!178)

(assert (=> d!42327 (= (getValueByKey!172 (toList!869 (+!175 lt!69470 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!69489) e!88314)))

(declare-fun b!135612 () Bool)

(assert (=> b!135612 (= e!88314 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69470 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))))

(declare-fun b!135613 () Bool)

(assert (=> b!135613 (= e!88314 e!88315)))

(declare-fun c!25374 () Bool)

(assert (=> b!135613 (= c!25374 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69470 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69470 (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))) lt!69489))))))

(assert (= (and d!42327 c!25373) b!135612))

(assert (= (and d!42327 (not c!25373)) b!135613))

(assert (= (and b!135613 c!25374) b!135614))

(assert (= (and b!135613 (not c!25374)) b!135615))

(declare-fun m!161681 () Bool)

(assert (=> b!135614 m!161681))

(assert (=> d!40499 d!42327))

(assert (=> b!133632 d!40909))

(declare-fun d!42329 () Bool)

(assert (=> d!42329 (= (apply!116 (+!175 lt!69678 (tuple2!2627 lt!69693 (minValue!2720 newMap!16))) lt!69691) (apply!116 lt!69678 lt!69691))))

(declare-fun lt!70839 () Unit!4135)

(assert (=> d!42329 (= lt!70839 (choose!822 lt!69678 lt!69693 (minValue!2720 newMap!16) lt!69691))))

(declare-fun e!88316 () Bool)

(assert (=> d!42329 e!88316))

(declare-fun res!65103 () Bool)

(assert (=> d!42329 (=> (not res!65103) (not e!88316))))

(assert (=> d!42329 (= res!65103 (contains!899 lt!69678 lt!69691))))

(assert (=> d!42329 (= (addApplyDifferent!92 lt!69678 lt!69693 (minValue!2720 newMap!16) lt!69691) lt!70839)))

(declare-fun b!135616 () Bool)

(assert (=> b!135616 (= e!88316 (not (= lt!69691 lt!69693)))))

(assert (= (and d!42329 res!65103) b!135616))

(declare-fun m!161683 () Bool)

(assert (=> d!42329 m!161683))

(assert (=> d!42329 m!157227))

(assert (=> d!42329 m!157243))

(assert (=> d!42329 m!157227))

(assert (=> d!42329 m!157245))

(declare-fun m!161685 () Bool)

(assert (=> d!42329 m!161685))

(assert (=> b!133258 d!42329))

(declare-fun d!42331 () Bool)

(assert (=> d!42331 (= (apply!116 lt!69676 lt!69695) (get!1486 (getValueByKey!172 (toList!869 lt!69676) lt!69695)))))

(declare-fun bs!5691 () Bool)

(assert (= bs!5691 d!42331))

(declare-fun m!161687 () Bool)

(assert (=> bs!5691 m!161687))

(assert (=> bs!5691 m!161687))

(declare-fun m!161689 () Bool)

(assert (=> bs!5691 m!161689))

(assert (=> b!133258 d!42331))

(declare-fun d!42333 () Bool)

(assert (=> d!42333 (= (apply!116 (+!175 lt!69676 (tuple2!2627 lt!69679 (minValue!2720 newMap!16))) lt!69695) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69676 (tuple2!2627 lt!69679 (minValue!2720 newMap!16)))) lt!69695)))))

(declare-fun bs!5692 () Bool)

(assert (= bs!5692 d!42333))

(declare-fun m!161691 () Bool)

(assert (=> bs!5692 m!161691))

(assert (=> bs!5692 m!161691))

(declare-fun m!161693 () Bool)

(assert (=> bs!5692 m!161693))

(assert (=> b!133258 d!42333))

(declare-fun d!42335 () Bool)

(assert (=> d!42335 (= (apply!116 lt!69681 lt!69677) (get!1486 (getValueByKey!172 (toList!869 lt!69681) lt!69677)))))

(declare-fun bs!5693 () Bool)

(assert (= bs!5693 d!42335))

(declare-fun m!161695 () Bool)

(assert (=> bs!5693 m!161695))

(assert (=> bs!5693 m!161695))

(declare-fun m!161697 () Bool)

(assert (=> bs!5693 m!161697))

(assert (=> b!133258 d!42335))

(declare-fun d!42337 () Bool)

(declare-fun e!88317 () Bool)

(assert (=> d!42337 e!88317))

(declare-fun res!65104 () Bool)

(assert (=> d!42337 (=> res!65104 e!88317)))

(declare-fun lt!70843 () Bool)

(assert (=> d!42337 (= res!65104 (not lt!70843))))

(declare-fun lt!70840 () Bool)

(assert (=> d!42337 (= lt!70843 lt!70840)))

(declare-fun lt!70842 () Unit!4135)

(declare-fun e!88318 () Unit!4135)

(assert (=> d!42337 (= lt!70842 e!88318)))

(declare-fun c!25375 () Bool)

(assert (=> d!42337 (= c!25375 lt!70840)))

(assert (=> d!42337 (= lt!70840 (containsKey!176 (toList!869 (+!175 lt!69690 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69689))))

(assert (=> d!42337 (= (contains!899 (+!175 lt!69690 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69689) lt!70843)))

(declare-fun b!135617 () Bool)

(declare-fun lt!70841 () Unit!4135)

(assert (=> b!135617 (= e!88318 lt!70841)))

(assert (=> b!135617 (= lt!70841 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69690 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69689))))

(assert (=> b!135617 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69690 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69689))))

(declare-fun b!135618 () Bool)

(declare-fun Unit!4269 () Unit!4135)

(assert (=> b!135618 (= e!88318 Unit!4269)))

(declare-fun b!135619 () Bool)

(assert (=> b!135619 (= e!88317 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69690 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69689)))))

(assert (= (and d!42337 c!25375) b!135617))

(assert (= (and d!42337 (not c!25375)) b!135618))

(assert (= (and d!42337 (not res!65104)) b!135619))

(declare-fun m!161699 () Bool)

(assert (=> d!42337 m!161699))

(declare-fun m!161701 () Bool)

(assert (=> b!135617 m!161701))

(declare-fun m!161703 () Bool)

(assert (=> b!135617 m!161703))

(assert (=> b!135617 m!161703))

(declare-fun m!161705 () Bool)

(assert (=> b!135617 m!161705))

(assert (=> b!135619 m!161703))

(assert (=> b!135619 m!161703))

(assert (=> b!135619 m!161705))

(assert (=> b!133258 d!42337))

(declare-fun d!42339 () Bool)

(assert (=> d!42339 (= (apply!116 (+!175 lt!69681 (tuple2!2627 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69677) (apply!116 lt!69681 lt!69677))))

(declare-fun lt!70844 () Unit!4135)

(assert (=> d!42339 (= lt!70844 (choose!822 lt!69681 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69677))))

(declare-fun e!88319 () Bool)

(assert (=> d!42339 e!88319))

(declare-fun res!65105 () Bool)

(assert (=> d!42339 (=> (not res!65105) (not e!88319))))

(assert (=> d!42339 (= res!65105 (contains!899 lt!69681 lt!69677))))

(assert (=> d!42339 (= (addApplyDifferent!92 lt!69681 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69677) lt!70844)))

(declare-fun b!135620 () Bool)

(assert (=> b!135620 (= e!88319 (not (= lt!69677 lt!69683)))))

(assert (= (and d!42339 res!65105) b!135620))

(declare-fun m!161707 () Bool)

(assert (=> d!42339 m!161707))

(assert (=> d!42339 m!157231))

(assert (=> d!42339 m!157251))

(assert (=> d!42339 m!157231))

(assert (=> d!42339 m!157233))

(assert (=> d!42339 m!155895))

(declare-fun m!161709 () Bool)

(assert (=> d!42339 m!161709))

(assert (=> b!133258 d!42339))

(declare-fun d!42341 () Bool)

(declare-fun e!88320 () Bool)

(assert (=> d!42341 e!88320))

(declare-fun res!65107 () Bool)

(assert (=> d!42341 (=> (not res!65107) (not e!88320))))

(declare-fun lt!70845 () ListLongMap!1707)

(assert (=> d!42341 (= res!65107 (contains!899 lt!70845 (_1!1324 (tuple2!2627 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70847 () List!1716)

(assert (=> d!42341 (= lt!70845 (ListLongMap!1708 lt!70847))))

(declare-fun lt!70848 () Unit!4135)

(declare-fun lt!70846 () Unit!4135)

(assert (=> d!42341 (= lt!70848 lt!70846)))

(assert (=> d!42341 (= (getValueByKey!172 lt!70847 (_1!1324 (tuple2!2627 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42341 (= lt!70846 (lemmaContainsTupThenGetReturnValue!87 lt!70847 (_1!1324 (tuple2!2627 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42341 (= lt!70847 (insertStrictlySorted!90 (toList!869 lt!69681) (_1!1324 (tuple2!2627 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42341 (= (+!175 lt!69681 (tuple2!2627 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70845)))

(declare-fun b!135621 () Bool)

(declare-fun res!65106 () Bool)

(assert (=> b!135621 (=> (not res!65106) (not e!88320))))

(assert (=> b!135621 (= res!65106 (= (getValueByKey!172 (toList!869 lt!70845) (_1!1324 (tuple2!2627 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135622 () Bool)

(assert (=> b!135622 (= e!88320 (contains!902 (toList!869 lt!70845) (tuple2!2627 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42341 res!65107) b!135621))

(assert (= (and b!135621 res!65106) b!135622))

(declare-fun m!161711 () Bool)

(assert (=> d!42341 m!161711))

(declare-fun m!161713 () Bool)

(assert (=> d!42341 m!161713))

(declare-fun m!161715 () Bool)

(assert (=> d!42341 m!161715))

(declare-fun m!161717 () Bool)

(assert (=> d!42341 m!161717))

(declare-fun m!161719 () Bool)

(assert (=> b!135621 m!161719))

(declare-fun m!161721 () Bool)

(assert (=> b!135622 m!161721))

(assert (=> b!133258 d!42341))

(assert (=> b!133258 d!41745))

(declare-fun d!42343 () Bool)

(declare-fun e!88321 () Bool)

(assert (=> d!42343 e!88321))

(declare-fun res!65109 () Bool)

(assert (=> d!42343 (=> (not res!65109) (not e!88321))))

(declare-fun lt!70849 () ListLongMap!1707)

(assert (=> d!42343 (= res!65109 (contains!899 lt!70849 (_1!1324 (tuple2!2627 lt!69679 (minValue!2720 newMap!16)))))))

(declare-fun lt!70851 () List!1716)

(assert (=> d!42343 (= lt!70849 (ListLongMap!1708 lt!70851))))

(declare-fun lt!70852 () Unit!4135)

(declare-fun lt!70850 () Unit!4135)

(assert (=> d!42343 (= lt!70852 lt!70850)))

(assert (=> d!42343 (= (getValueByKey!172 lt!70851 (_1!1324 (tuple2!2627 lt!69679 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69679 (minValue!2720 newMap!16)))))))

(assert (=> d!42343 (= lt!70850 (lemmaContainsTupThenGetReturnValue!87 lt!70851 (_1!1324 (tuple2!2627 lt!69679 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69679 (minValue!2720 newMap!16)))))))

(assert (=> d!42343 (= lt!70851 (insertStrictlySorted!90 (toList!869 lt!69676) (_1!1324 (tuple2!2627 lt!69679 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69679 (minValue!2720 newMap!16)))))))

(assert (=> d!42343 (= (+!175 lt!69676 (tuple2!2627 lt!69679 (minValue!2720 newMap!16))) lt!70849)))

(declare-fun b!135623 () Bool)

(declare-fun res!65108 () Bool)

(assert (=> b!135623 (=> (not res!65108) (not e!88321))))

(assert (=> b!135623 (= res!65108 (= (getValueByKey!172 (toList!869 lt!70849) (_1!1324 (tuple2!2627 lt!69679 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69679 (minValue!2720 newMap!16))))))))

(declare-fun b!135624 () Bool)

(assert (=> b!135624 (= e!88321 (contains!902 (toList!869 lt!70849) (tuple2!2627 lt!69679 (minValue!2720 newMap!16))))))

(assert (= (and d!42343 res!65109) b!135623))

(assert (= (and b!135623 res!65108) b!135624))

(declare-fun m!161723 () Bool)

(assert (=> d!42343 m!161723))

(declare-fun m!161725 () Bool)

(assert (=> d!42343 m!161725))

(declare-fun m!161727 () Bool)

(assert (=> d!42343 m!161727))

(declare-fun m!161729 () Bool)

(assert (=> d!42343 m!161729))

(declare-fun m!161731 () Bool)

(assert (=> b!135623 m!161731))

(declare-fun m!161733 () Bool)

(assert (=> b!135624 m!161733))

(assert (=> b!133258 d!42343))

(declare-fun d!42345 () Bool)

(assert (=> d!42345 (= (apply!116 (+!175 lt!69681 (tuple2!2627 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69677) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69681 (tuple2!2627 lt!69683 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69677)))))

(declare-fun bs!5694 () Bool)

(assert (= bs!5694 d!42345))

(declare-fun m!161735 () Bool)

(assert (=> bs!5694 m!161735))

(assert (=> bs!5694 m!161735))

(declare-fun m!161737 () Bool)

(assert (=> bs!5694 m!161737))

(assert (=> b!133258 d!42345))

(declare-fun d!42347 () Bool)

(assert (=> d!42347 (contains!899 (+!175 lt!69690 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69689)))

(declare-fun lt!70853 () Unit!4135)

(assert (=> d!42347 (= lt!70853 (choose!823 lt!69690 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69689))))

(assert (=> d!42347 (contains!899 lt!69690 lt!69689)))

(assert (=> d!42347 (= (addStillContains!92 lt!69690 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69689) lt!70853)))

(declare-fun bs!5695 () Bool)

(assert (= bs!5695 d!42347))

(assert (=> bs!5695 m!157229))

(assert (=> bs!5695 m!157229))

(assert (=> bs!5695 m!157253))

(assert (=> bs!5695 m!155895))

(declare-fun m!161739 () Bool)

(assert (=> bs!5695 m!161739))

(declare-fun m!161741 () Bool)

(assert (=> bs!5695 m!161741))

(assert (=> b!133258 d!42347))

(declare-fun d!42349 () Bool)

(assert (=> d!42349 (= (apply!116 (+!175 lt!69678 (tuple2!2627 lt!69693 (minValue!2720 newMap!16))) lt!69691) (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69678 (tuple2!2627 lt!69693 (minValue!2720 newMap!16)))) lt!69691)))))

(declare-fun bs!5696 () Bool)

(assert (= bs!5696 d!42349))

(declare-fun m!161743 () Bool)

(assert (=> bs!5696 m!161743))

(assert (=> bs!5696 m!161743))

(declare-fun m!161745 () Bool)

(assert (=> bs!5696 m!161745))

(assert (=> b!133258 d!42349))

(declare-fun d!42351 () Bool)

(assert (=> d!42351 (= (apply!116 lt!69678 lt!69691) (get!1486 (getValueByKey!172 (toList!869 lt!69678) lt!69691)))))

(declare-fun bs!5697 () Bool)

(assert (= bs!5697 d!42351))

(declare-fun m!161747 () Bool)

(assert (=> bs!5697 m!161747))

(assert (=> bs!5697 m!161747))

(declare-fun m!161749 () Bool)

(assert (=> bs!5697 m!161749))

(assert (=> b!133258 d!42351))

(declare-fun d!42353 () Bool)

(declare-fun e!88322 () Bool)

(assert (=> d!42353 e!88322))

(declare-fun res!65111 () Bool)

(assert (=> d!42353 (=> (not res!65111) (not e!88322))))

(declare-fun lt!70854 () ListLongMap!1707)

(assert (=> d!42353 (= res!65111 (contains!899 lt!70854 (_1!1324 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70856 () List!1716)

(assert (=> d!42353 (= lt!70854 (ListLongMap!1708 lt!70856))))

(declare-fun lt!70857 () Unit!4135)

(declare-fun lt!70855 () Unit!4135)

(assert (=> d!42353 (= lt!70857 lt!70855)))

(assert (=> d!42353 (= (getValueByKey!172 lt!70856 (_1!1324 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42353 (= lt!70855 (lemmaContainsTupThenGetReturnValue!87 lt!70856 (_1!1324 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42353 (= lt!70856 (insertStrictlySorted!90 (toList!869 lt!69690) (_1!1324 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42353 (= (+!175 lt!69690 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70854)))

(declare-fun b!135625 () Bool)

(declare-fun res!65110 () Bool)

(assert (=> b!135625 (=> (not res!65110) (not e!88322))))

(assert (=> b!135625 (= res!65110 (= (getValueByKey!172 (toList!869 lt!70854) (_1!1324 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135626 () Bool)

(assert (=> b!135626 (= e!88322 (contains!902 (toList!869 lt!70854) (tuple2!2627 lt!69684 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42353 res!65111) b!135625))

(assert (= (and b!135625 res!65110) b!135626))

(declare-fun m!161751 () Bool)

(assert (=> d!42353 m!161751))

(declare-fun m!161753 () Bool)

(assert (=> d!42353 m!161753))

(declare-fun m!161755 () Bool)

(assert (=> d!42353 m!161755))

(declare-fun m!161757 () Bool)

(assert (=> d!42353 m!161757))

(declare-fun m!161759 () Bool)

(assert (=> b!135625 m!161759))

(declare-fun m!161761 () Bool)

(assert (=> b!135626 m!161761))

(assert (=> b!133258 d!42353))

(declare-fun d!42355 () Bool)

(declare-fun e!88323 () Bool)

(assert (=> d!42355 e!88323))

(declare-fun res!65113 () Bool)

(assert (=> d!42355 (=> (not res!65113) (not e!88323))))

(declare-fun lt!70858 () ListLongMap!1707)

(assert (=> d!42355 (= res!65113 (contains!899 lt!70858 (_1!1324 (tuple2!2627 lt!69693 (minValue!2720 newMap!16)))))))

(declare-fun lt!70860 () List!1716)

(assert (=> d!42355 (= lt!70858 (ListLongMap!1708 lt!70860))))

(declare-fun lt!70861 () Unit!4135)

(declare-fun lt!70859 () Unit!4135)

(assert (=> d!42355 (= lt!70861 lt!70859)))

(assert (=> d!42355 (= (getValueByKey!172 lt!70860 (_1!1324 (tuple2!2627 lt!69693 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69693 (minValue!2720 newMap!16)))))))

(assert (=> d!42355 (= lt!70859 (lemmaContainsTupThenGetReturnValue!87 lt!70860 (_1!1324 (tuple2!2627 lt!69693 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69693 (minValue!2720 newMap!16)))))))

(assert (=> d!42355 (= lt!70860 (insertStrictlySorted!90 (toList!869 lt!69678) (_1!1324 (tuple2!2627 lt!69693 (minValue!2720 newMap!16))) (_2!1324 (tuple2!2627 lt!69693 (minValue!2720 newMap!16)))))))

(assert (=> d!42355 (= (+!175 lt!69678 (tuple2!2627 lt!69693 (minValue!2720 newMap!16))) lt!70858)))

(declare-fun b!135627 () Bool)

(declare-fun res!65112 () Bool)

(assert (=> b!135627 (=> (not res!65112) (not e!88323))))

(assert (=> b!135627 (= res!65112 (= (getValueByKey!172 (toList!869 lt!70858) (_1!1324 (tuple2!2627 lt!69693 (minValue!2720 newMap!16)))) (Some!177 (_2!1324 (tuple2!2627 lt!69693 (minValue!2720 newMap!16))))))))

(declare-fun b!135628 () Bool)

(assert (=> b!135628 (= e!88323 (contains!902 (toList!869 lt!70858) (tuple2!2627 lt!69693 (minValue!2720 newMap!16))))))

(assert (= (and d!42355 res!65113) b!135627))

(assert (= (and b!135627 res!65112) b!135628))

(declare-fun m!161763 () Bool)

(assert (=> d!42355 m!161763))

(declare-fun m!161765 () Bool)

(assert (=> d!42355 m!161765))

(declare-fun m!161767 () Bool)

(assert (=> d!42355 m!161767))

(declare-fun m!161769 () Bool)

(assert (=> d!42355 m!161769))

(declare-fun m!161771 () Bool)

(assert (=> b!135627 m!161771))

(declare-fun m!161773 () Bool)

(assert (=> b!135628 m!161773))

(assert (=> b!133258 d!42355))

(declare-fun d!42357 () Bool)

(assert (=> d!42357 (= (apply!116 (+!175 lt!69676 (tuple2!2627 lt!69679 (minValue!2720 newMap!16))) lt!69695) (apply!116 lt!69676 lt!69695))))

(declare-fun lt!70862 () Unit!4135)

(assert (=> d!42357 (= lt!70862 (choose!822 lt!69676 lt!69679 (minValue!2720 newMap!16) lt!69695))))

(declare-fun e!88324 () Bool)

(assert (=> d!42357 e!88324))

(declare-fun res!65114 () Bool)

(assert (=> d!42357 (=> (not res!65114) (not e!88324))))

(assert (=> d!42357 (= res!65114 (contains!899 lt!69676 lt!69695))))

(assert (=> d!42357 (= (addApplyDifferent!92 lt!69676 lt!69679 (minValue!2720 newMap!16) lt!69695) lt!70862)))

(declare-fun b!135629 () Bool)

(assert (=> b!135629 (= e!88324 (not (= lt!69695 lt!69679)))))

(assert (= (and d!42357 res!65114) b!135629))

(declare-fun m!161775 () Bool)

(assert (=> d!42357 m!161775))

(assert (=> d!42357 m!157239))

(assert (=> d!42357 m!157237))

(assert (=> d!42357 m!157239))

(assert (=> d!42357 m!157247))

(declare-fun m!161777 () Bool)

(assert (=> d!42357 m!161777))

(assert (=> b!133258 d!42357))

(assert (=> d!40725 d!40723))

(declare-fun d!42359 () Bool)

(assert (=> d!42359 (= (getValueByKey!172 lt!69415 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) (Some!177 (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (=> d!42359 true))

(declare-fun _$22!491 () Unit!4135)

(assert (=> d!42359 (= (choose!827 lt!69415 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))) _$22!491)))

(declare-fun bs!5698 () Bool)

(assert (= bs!5698 d!42359))

(assert (=> bs!5698 m!156413))

(assert (=> d!40725 d!42359))

(declare-fun d!42361 () Bool)

(declare-fun res!65115 () Bool)

(declare-fun e!88325 () Bool)

(assert (=> d!42361 (=> res!65115 e!88325)))

(assert (=> d!42361 (= res!65115 (or ((_ is Nil!1713) lt!69415) ((_ is Nil!1713) (t!6167 lt!69415))))))

(assert (=> d!42361 (= (isStrictlySorted!322 lt!69415) e!88325)))

(declare-fun b!135630 () Bool)

(declare-fun e!88326 () Bool)

(assert (=> b!135630 (= e!88325 e!88326)))

(declare-fun res!65116 () Bool)

(assert (=> b!135630 (=> (not res!65116) (not e!88326))))

(assert (=> b!135630 (= res!65116 (bvslt (_1!1324 (h!2317 lt!69415)) (_1!1324 (h!2317 (t!6167 lt!69415)))))))

(declare-fun b!135631 () Bool)

(assert (=> b!135631 (= e!88326 (isStrictlySorted!322 (t!6167 lt!69415)))))

(assert (= (and d!42361 (not res!65115)) b!135630))

(assert (= (and b!135630 res!65116) b!135631))

(declare-fun m!161779 () Bool)

(assert (=> b!135631 m!161779))

(assert (=> d!40725 d!42361))

(declare-fun d!42363 () Bool)

(assert (=> d!42363 (= (get!1486 (getValueByKey!172 (toList!869 lt!69251) lt!69247)) (v!3203 (getValueByKey!172 (toList!869 lt!69251) lt!69247)))))

(assert (=> d!40785 d!42363))

(declare-fun b!135634 () Bool)

(declare-fun e!88328 () Option!178)

(assert (=> b!135634 (= e!88328 (getValueByKey!172 (t!6167 (toList!869 lt!69251)) lt!69247))))

(declare-fun b!135635 () Bool)

(assert (=> b!135635 (= e!88328 None!176)))

(declare-fun d!42365 () Bool)

(declare-fun c!25376 () Bool)

(assert (=> d!42365 (= c!25376 (and ((_ is Cons!1712) (toList!869 lt!69251)) (= (_1!1324 (h!2317 (toList!869 lt!69251))) lt!69247)))))

(declare-fun e!88327 () Option!178)

(assert (=> d!42365 (= (getValueByKey!172 (toList!869 lt!69251) lt!69247) e!88327)))

(declare-fun b!135632 () Bool)

(assert (=> b!135632 (= e!88327 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69251)))))))

(declare-fun b!135633 () Bool)

(assert (=> b!135633 (= e!88327 e!88328)))

(declare-fun c!25377 () Bool)

(assert (=> b!135633 (= c!25377 (and ((_ is Cons!1712) (toList!869 lt!69251)) (not (= (_1!1324 (h!2317 (toList!869 lt!69251))) lt!69247))))))

(assert (= (and d!42365 c!25376) b!135632))

(assert (= (and d!42365 (not c!25376)) b!135633))

(assert (= (and b!135633 c!25377) b!135634))

(assert (= (and b!135633 (not c!25377)) b!135635))

(declare-fun m!161781 () Bool)

(assert (=> b!135634 m!161781))

(assert (=> d!40785 d!42365))

(declare-fun e!88330 () Option!178)

(declare-fun b!135638 () Bool)

(assert (=> b!135638 (= e!88330 (getValueByKey!172 (t!6167 (t!6167 lt!69424)) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135639 () Bool)

(assert (=> b!135639 (= e!88330 None!176)))

(declare-fun d!42367 () Bool)

(declare-fun c!25378 () Bool)

(assert (=> d!42367 (= c!25378 (and ((_ is Cons!1712) (t!6167 lt!69424)) (= (_1!1324 (h!2317 (t!6167 lt!69424))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!88329 () Option!178)

(assert (=> d!42367 (= (getValueByKey!172 (t!6167 lt!69424) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!88329)))

(declare-fun b!135636 () Bool)

(assert (=> b!135636 (= e!88329 (Some!177 (_2!1324 (h!2317 (t!6167 lt!69424)))))))

(declare-fun b!135637 () Bool)

(assert (=> b!135637 (= e!88329 e!88330)))

(declare-fun c!25379 () Bool)

(assert (=> b!135637 (= c!25379 (and ((_ is Cons!1712) (t!6167 lt!69424)) (not (= (_1!1324 (h!2317 (t!6167 lt!69424))) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(assert (= (and d!42367 c!25378) b!135636))

(assert (= (and d!42367 (not c!25378)) b!135637))

(assert (= (and b!135637 c!25379) b!135638))

(assert (= (and b!135637 (not c!25379)) b!135639))

(declare-fun m!161783 () Bool)

(assert (=> b!135638 m!161783))

(assert (=> b!133495 d!42367))

(declare-fun d!42369 () Bool)

(declare-fun e!88331 () Bool)

(assert (=> d!42369 e!88331))

(declare-fun res!65117 () Bool)

(assert (=> d!42369 (=> res!65117 e!88331)))

(declare-fun lt!70866 () Bool)

(assert (=> d!42369 (= res!65117 (not lt!70866))))

(declare-fun lt!70863 () Bool)

(assert (=> d!42369 (= lt!70866 lt!70863)))

(declare-fun lt!70865 () Unit!4135)

(declare-fun e!88332 () Unit!4135)

(assert (=> d!42369 (= lt!70865 e!88332)))

(declare-fun c!25380 () Bool)

(assert (=> d!42369 (= c!25380 lt!70863)))

(assert (=> d!42369 (= lt!70863 (containsKey!176 (toList!869 lt!69696) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42369 (= (contains!899 lt!69696 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70866)))

(declare-fun b!135640 () Bool)

(declare-fun lt!70864 () Unit!4135)

(assert (=> b!135640 (= e!88332 lt!70864)))

(assert (=> b!135640 (= lt!70864 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69696) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!135640 (isDefined!125 (getValueByKey!172 (toList!869 lt!69696) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135641 () Bool)

(declare-fun Unit!4270 () Unit!4135)

(assert (=> b!135641 (= e!88332 Unit!4270)))

(declare-fun b!135642 () Bool)

(assert (=> b!135642 (= e!88331 (isDefined!125 (getValueByKey!172 (toList!869 lt!69696) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42369 c!25380) b!135640))

(assert (= (and d!42369 (not c!25380)) b!135641))

(assert (= (and d!42369 (not res!65117)) b!135642))

(declare-fun m!161785 () Bool)

(assert (=> d!42369 m!161785))

(declare-fun m!161787 () Bool)

(assert (=> b!135640 m!161787))

(assert (=> b!135640 m!157277))

(assert (=> b!135640 m!157277))

(declare-fun m!161789 () Bool)

(assert (=> b!135640 m!161789))

(assert (=> b!135642 m!157277))

(assert (=> b!135642 m!157277))

(assert (=> b!135642 m!161789))

(assert (=> d!40527 d!42369))

(declare-fun e!88334 () Option!178)

(declare-fun b!135645 () Bool)

(assert (=> b!135645 (= e!88334 (getValueByKey!172 (t!6167 lt!69698) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135646 () Bool)

(assert (=> b!135646 (= e!88334 None!176)))

(declare-fun c!25381 () Bool)

(declare-fun d!42371 () Bool)

(assert (=> d!42371 (= c!25381 (and ((_ is Cons!1712) lt!69698) (= (_1!1324 (h!2317 lt!69698)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88333 () Option!178)

(assert (=> d!42371 (= (getValueByKey!172 lt!69698 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88333)))

(declare-fun b!135643 () Bool)

(assert (=> b!135643 (= e!88333 (Some!177 (_2!1324 (h!2317 lt!69698))))))

(declare-fun b!135644 () Bool)

(assert (=> b!135644 (= e!88333 e!88334)))

(declare-fun c!25382 () Bool)

(assert (=> b!135644 (= c!25382 (and ((_ is Cons!1712) lt!69698) (not (= (_1!1324 (h!2317 lt!69698)) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!42371 c!25381) b!135643))

(assert (= (and d!42371 (not c!25381)) b!135644))

(assert (= (and b!135644 c!25382) b!135645))

(assert (= (and b!135644 (not c!25382)) b!135646))

(declare-fun m!161791 () Bool)

(assert (=> b!135645 m!161791))

(assert (=> d!40527 d!42371))

(declare-fun d!42373 () Bool)

(assert (=> d!42373 (= (getValueByKey!172 lt!69698 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70867 () Unit!4135)

(assert (=> d!42373 (= lt!70867 (choose!827 lt!69698 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88335 () Bool)

(assert (=> d!42373 e!88335))

(declare-fun res!65118 () Bool)

(assert (=> d!42373 (=> (not res!65118) (not e!88335))))

(assert (=> d!42373 (= res!65118 (isStrictlySorted!322 lt!69698))))

(assert (=> d!42373 (= (lemmaContainsTupThenGetReturnValue!87 lt!69698 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70867)))

(declare-fun b!135647 () Bool)

(declare-fun res!65119 () Bool)

(assert (=> b!135647 (=> (not res!65119) (not e!88335))))

(assert (=> b!135647 (= res!65119 (containsKey!176 lt!69698 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135648 () Bool)

(assert (=> b!135648 (= e!88335 (contains!902 lt!69698 (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42373 res!65118) b!135647))

(assert (= (and b!135647 res!65119) b!135648))

(assert (=> d!42373 m!157271))

(declare-fun m!161793 () Bool)

(assert (=> d!42373 m!161793))

(declare-fun m!161795 () Bool)

(assert (=> d!42373 m!161795))

(declare-fun m!161797 () Bool)

(assert (=> b!135647 m!161797))

(declare-fun m!161799 () Bool)

(assert (=> b!135648 m!161799))

(assert (=> d!40527 d!42373))

(declare-fun bm!14897 () Bool)

(declare-fun call!14901 () List!1716)

(declare-fun call!14902 () List!1716)

(assert (=> bm!14897 (= call!14901 call!14902)))

(declare-fun d!42375 () Bool)

(declare-fun e!88339 () Bool)

(assert (=> d!42375 e!88339))

(declare-fun res!65121 () Bool)

(assert (=> d!42375 (=> (not res!65121) (not e!88339))))

(declare-fun lt!70868 () List!1716)

(assert (=> d!42375 (= res!65121 (isStrictlySorted!322 lt!70868))))

(declare-fun e!88337 () List!1716)

(assert (=> d!42375 (= lt!70868 e!88337)))

(declare-fun c!25386 () Bool)

(assert (=> d!42375 (= c!25386 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvslt (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42375 (isStrictlySorted!322 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))))

(assert (=> d!42375 (= (insertStrictlySorted!90 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70868)))

(declare-fun b!135649 () Bool)

(assert (=> b!135649 (= e!88339 (contains!902 lt!70868 (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun c!25384 () Bool)

(declare-fun b!135650 () Bool)

(assert (=> b!135650 (= c!25384 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (bvsgt (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88338 () List!1716)

(declare-fun e!88340 () List!1716)

(assert (=> b!135650 (= e!88338 e!88340)))

(declare-fun b!135651 () Bool)

(declare-fun e!88336 () List!1716)

(assert (=> b!135651 (= e!88336 (insertStrictlySorted!90 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135652 () Bool)

(assert (=> b!135652 (= e!88338 call!14901)))

(declare-fun b!135653 () Bool)

(declare-fun call!14900 () List!1716)

(assert (=> b!135653 (= e!88340 call!14900)))

(declare-fun c!25383 () Bool)

(declare-fun b!135654 () Bool)

(assert (=> b!135654 (= e!88336 (ite c!25383 (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (ite c!25384 (Cons!1712 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (t!6167 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) Nil!1713)))))

(declare-fun b!135655 () Bool)

(assert (=> b!135655 (= e!88340 call!14900)))

(declare-fun b!135656 () Bool)

(assert (=> b!135656 (= e!88337 call!14902)))

(declare-fun bm!14898 () Bool)

(assert (=> bm!14898 (= call!14902 ($colon$colon!92 e!88336 (ite c!25386 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (tuple2!2627 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25385 () Bool)

(assert (=> bm!14898 (= c!25385 c!25386)))

(declare-fun bm!14899 () Bool)

(assert (=> bm!14899 (= call!14900 call!14901)))

(declare-fun b!135657 () Bool)

(declare-fun res!65120 () Bool)

(assert (=> b!135657 (=> (not res!65120) (not e!88339))))

(assert (=> b!135657 (= res!65120 (containsKey!176 lt!70868 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135658 () Bool)

(assert (=> b!135658 (= e!88337 e!88338)))

(assert (=> b!135658 (= c!25383 (and ((_ is Cons!1712) (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16)))) (= (_1!1324 (h!2317 (toList!869 (getCurrentListMap!546 (_keys!4614 newMap!16) (_values!2848 newMap!16) (mask!7165 newMap!16) (extraKeys!2630 newMap!16) (zeroValue!2720 newMap!16) (minValue!2720 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2865 newMap!16))))) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42375 c!25386) b!135656))

(assert (= (and d!42375 (not c!25386)) b!135658))

(assert (= (and b!135658 c!25383) b!135652))

(assert (= (and b!135658 (not c!25383)) b!135650))

(assert (= (and b!135650 c!25384) b!135653))

(assert (= (and b!135650 (not c!25384)) b!135655))

(assert (= (or b!135653 b!135655) bm!14899))

(assert (= (or b!135652 bm!14899) bm!14897))

(assert (= (or b!135656 bm!14897) bm!14898))

(assert (= (and bm!14898 c!25385) b!135651))

(assert (= (and bm!14898 (not c!25385)) b!135654))

(assert (= (and d!42375 res!65121) b!135657))

(assert (= (and b!135657 res!65120) b!135649))

(declare-fun m!161801 () Bool)

(assert (=> d!42375 m!161801))

(assert (=> d!42375 m!158257))

(declare-fun m!161803 () Bool)

(assert (=> bm!14898 m!161803))

(declare-fun m!161805 () Bool)

(assert (=> b!135651 m!161805))

(declare-fun m!161807 () Bool)

(assert (=> b!135649 m!161807))

(declare-fun m!161809 () Bool)

(assert (=> b!135657 m!161809))

(assert (=> d!40527 d!42375))

(declare-fun b!135661 () Bool)

(declare-fun e!88342 () Option!178)

(assert (=> b!135661 (= e!88342 (getValueByKey!172 (t!6167 (toList!869 lt!69974)) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!135662 () Bool)

(assert (=> b!135662 (= e!88342 None!176)))

(declare-fun c!25387 () Bool)

(declare-fun d!42377 () Bool)

(assert (=> d!42377 (= c!25387 (and ((_ is Cons!1712) (toList!869 lt!69974)) (= (_1!1324 (h!2317 (toList!869 lt!69974))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun e!88341 () Option!178)

(assert (=> d!42377 (= (getValueByKey!172 (toList!869 lt!69974) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) e!88341)))

(declare-fun b!135659 () Bool)

(assert (=> b!135659 (= e!88341 (Some!177 (_2!1324 (h!2317 (toList!869 lt!69974)))))))

(declare-fun b!135660 () Bool)

(assert (=> b!135660 (= e!88341 e!88342)))

(declare-fun c!25388 () Bool)

(assert (=> b!135660 (= c!25388 (and ((_ is Cons!1712) (toList!869 lt!69974)) (not (= (_1!1324 (h!2317 (toList!869 lt!69974))) (_1!1324 (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (= (and d!42377 c!25387) b!135659))

(assert (= (and d!42377 (not c!25387)) b!135660))

(assert (= (and b!135660 c!25388) b!135661))

(assert (= (and b!135660 (not c!25388)) b!135662))

(declare-fun m!161811 () Bool)

(assert (=> b!135661 m!161811))

(assert (=> b!133733 d!42377))

(declare-fun d!42379 () Bool)

(assert (=> d!42379 (= (apply!116 lt!69692 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1486 (getValueByKey!172 (toList!869 lt!69692) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5699 () Bool)

(assert (= bs!5699 d!42379))

(assert (=> bs!5699 m!160419))

(assert (=> bs!5699 m!160419))

(declare-fun m!161813 () Bool)

(assert (=> bs!5699 m!161813))

(assert (=> b!133271 d!42379))

(declare-fun d!42381 () Bool)

(assert (=> d!42381 (isDefined!125 (getValueByKey!172 (toList!869 lt!69422) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!70869 () Unit!4135)

(assert (=> d!42381 (= lt!70869 (choose!817 (toList!869 lt!69422) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88343 () Bool)

(assert (=> d!42381 e!88343))

(declare-fun res!65122 () Bool)

(assert (=> d!42381 (=> (not res!65122) (not e!88343))))

(assert (=> d!42381 (= res!65122 (isStrictlySorted!322 (toList!869 lt!69422)))))

(assert (=> d!42381 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69422) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70869)))

(declare-fun b!135663 () Bool)

(assert (=> b!135663 (= e!88343 (containsKey!176 (toList!869 lt!69422) (_1!1324 (ite c!24491 (ite c!24497 (tuple2!2627 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2627 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2627 (select (arr!2261 (_keys!4614 (v!3199 (underlying!455 thiss!992)))) from!355) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42381 res!65122) b!135663))

(assert (=> d!42381 m!156447))

(assert (=> d!42381 m!156447))

(assert (=> d!42381 m!157615))

(declare-fun m!161815 () Bool)

(assert (=> d!42381 m!161815))

(declare-fun m!161817 () Bool)

(assert (=> d!42381 m!161817))

(assert (=> b!135663 m!157611))

(assert (=> b!133490 d!42381))

(assert (=> b!133490 d!42277))

(assert (=> b!133490 d!40613))

(declare-fun d!42383 () Bool)

(assert (=> d!42383 (isDefined!125 (getValueByKey!172 (toList!869 lt!69377) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun lt!70870 () Unit!4135)

(assert (=> d!42383 (= lt!70870 (choose!817 (toList!869 lt!69377) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun e!88344 () Bool)

(assert (=> d!42383 e!88344))

(declare-fun res!65123 () Bool)

(assert (=> d!42383 (=> (not res!65123) (not e!88344))))

(assert (=> d!42383 (= res!65123 (isStrictlySorted!322 (toList!869 lt!69377)))))

(assert (=> d!42383 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69377) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) lt!70870)))

(declare-fun b!135664 () Bool)

(assert (=> b!135664 (= e!88344 (containsKey!176 (toList!869 lt!69377) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(assert (= (and d!42383 res!65123) b!135664))

(assert (=> d!42383 m!156343))

(assert (=> d!42383 m!156343))

(assert (=> d!42383 m!156883))

(declare-fun m!161819 () Bool)

(assert (=> d!42383 m!161819))

(declare-fun m!161821 () Bool)

(assert (=> d!42383 m!161821))

(assert (=> b!135664 m!156879))

(assert (=> b!133122 d!42383))

(assert (=> b!133122 d!42271))

(assert (=> b!133122 d!40647))

(declare-fun d!42385 () Bool)

(declare-fun lt!70871 () Bool)

(assert (=> d!42385 (= lt!70871 (select (content!133 (toList!869 lt!69648)) (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(declare-fun e!88346 () Bool)

(assert (=> d!42385 (= lt!70871 e!88346)))

(declare-fun res!65124 () Bool)

(assert (=> d!42385 (=> (not res!65124) (not e!88346))))

(assert (=> d!42385 (= res!65124 ((_ is Cons!1712) (toList!869 lt!69648)))))

(assert (=> d!42385 (= (contains!902 (toList!869 lt!69648) (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) lt!70871)))

(declare-fun b!135665 () Bool)

(declare-fun e!88345 () Bool)

(assert (=> b!135665 (= e!88346 e!88345)))

(declare-fun res!65125 () Bool)

(assert (=> b!135665 (=> res!65125 e!88345)))

(assert (=> b!135665 (= res!65125 (= (h!2317 (toList!869 lt!69648)) (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(declare-fun b!135666 () Bool)

(assert (=> b!135666 (= e!88345 (contains!902 (t!6167 (toList!869 lt!69648)) (tuple2!2627 lt!69473 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))

(assert (= (and d!42385 res!65124) b!135665))

(assert (= (and b!135665 (not res!65125)) b!135666))

(declare-fun m!161823 () Bool)

(assert (=> d!42385 m!161823))

(declare-fun m!161825 () Bool)

(assert (=> d!42385 m!161825))

(declare-fun m!161827 () Bool)

(assert (=> b!135666 m!161827))

(assert (=> b!133234 d!42385))

(declare-fun d!42387 () Bool)

(declare-fun e!88347 () Bool)

(assert (=> d!42387 e!88347))

(declare-fun res!65126 () Bool)

(assert (=> d!42387 (=> res!65126 e!88347)))

(declare-fun lt!70875 () Bool)

(assert (=> d!42387 (= res!65126 (not lt!70875))))

(declare-fun lt!70872 () Bool)

(assert (=> d!42387 (= lt!70875 lt!70872)))

(declare-fun lt!70874 () Unit!4135)

(declare-fun e!88348 () Unit!4135)

(assert (=> d!42387 (= lt!70874 e!88348)))

(declare-fun c!25389 () Bool)

(assert (=> d!42387 (= c!25389 lt!70872)))

(assert (=> d!42387 (= lt!70872 (containsKey!176 (toList!869 lt!69850) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!42387 (= (contains!899 lt!69850 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70875)))

(declare-fun b!135667 () Bool)

(declare-fun lt!70873 () Unit!4135)

(assert (=> b!135667 (= e!88348 lt!70873)))

(assert (=> b!135667 (= lt!70873 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69850) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135667 (isDefined!125 (getValueByKey!172 (toList!869 lt!69850) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135668 () Bool)

(declare-fun Unit!4271 () Unit!4135)

(assert (=> b!135668 (= e!88348 Unit!4271)))

(declare-fun b!135669 () Bool)

(assert (=> b!135669 (= e!88347 (isDefined!125 (getValueByKey!172 (toList!869 lt!69850) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!42387 c!25389) b!135667))

(assert (= (and d!42387 (not c!25389)) b!135668))

(assert (= (and d!42387 (not res!65126)) b!135669))

(assert (=> d!42387 m!156163))

(declare-fun m!161829 () Bool)

(assert (=> d!42387 m!161829))

(assert (=> b!135667 m!156163))

(declare-fun m!161831 () Bool)

(assert (=> b!135667 m!161831))

(assert (=> b!135667 m!156163))

(assert (=> b!135667 m!160885))

(assert (=> b!135667 m!160885))

(declare-fun m!161833 () Bool)

(assert (=> b!135667 m!161833))

(assert (=> b!135669 m!156163))

(assert (=> b!135669 m!160885))

(assert (=> b!135669 m!160885))

(assert (=> b!135669 m!161833))

(assert (=> b!133537 d!42387))

(declare-fun d!42389 () Bool)

(declare-fun res!65127 () Bool)

(declare-fun e!88349 () Bool)

(assert (=> d!42389 (=> res!65127 e!88349)))

(assert (=> d!42389 (= res!65127 (and ((_ is Cons!1712) (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (= (_1!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))) lt!69092)))))

(assert (=> d!42389 (= (containsKey!176 (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!69092) e!88349)))

(declare-fun b!135670 () Bool)

(declare-fun e!88350 () Bool)

(assert (=> b!135670 (= e!88349 e!88350)))

(declare-fun res!65128 () Bool)

(assert (=> b!135670 (=> (not res!65128) (not e!88350))))

(assert (=> b!135670 (= res!65128 (and (or (not ((_ is Cons!1712) (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))) (bvsle (_1!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))) lt!69092)) ((_ is Cons!1712) (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (bvslt (_1!1324 (h!2317 (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))) lt!69092)))))

(declare-fun b!135671 () Bool)

(assert (=> b!135671 (= e!88350 (containsKey!176 (t!6167 (t!6167 (toList!869 (+!175 lt!69093 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))) lt!69092))))

(assert (= (and d!42389 (not res!65127)) b!135670))

(assert (= (and b!135670 res!65128) b!135671))

(declare-fun m!161835 () Bool)

(assert (=> b!135671 m!161835))

(assert (=> b!133726 d!42389))

(assert (=> d!40475 d!40289))

(declare-fun d!42391 () Bool)

(declare-fun e!88351 () Bool)

(assert (=> d!42391 e!88351))

(declare-fun res!65129 () Bool)

(assert (=> d!42391 (=> res!65129 e!88351)))

(declare-fun lt!70879 () Bool)

(assert (=> d!42391 (= res!65129 (not lt!70879))))

(declare-fun lt!70876 () Bool)

(assert (=> d!42391 (= lt!70879 lt!70876)))

(declare-fun lt!70878 () Unit!4135)

(declare-fun e!88352 () Unit!4135)

(assert (=> d!42391 (= lt!70878 e!88352)))

(declare-fun c!25390 () Bool)

(assert (=> d!42391 (= c!25390 lt!70876)))

(assert (=> d!42391 (= lt!70876 (containsKey!176 (toList!869 lt!69642) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> d!42391 (= (contains!899 lt!69642 (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70879)))

(declare-fun b!135672 () Bool)

(declare-fun lt!70877 () Unit!4135)

(assert (=> b!135672 (= e!88352 lt!70877)))

(assert (=> b!135672 (= lt!70877 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69642) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(assert (=> b!135672 (isDefined!125 (getValueByKey!172 (toList!869 lt!69642) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!135673 () Bool)

(declare-fun Unit!4272 () Unit!4135)

(assert (=> b!135673 (= e!88352 Unit!4272)))

(declare-fun b!135674 () Bool)

(assert (=> b!135674 (= e!88351 (isDefined!125 (getValueByKey!172 (toList!869 lt!69642) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (= (and d!42391 c!25390) b!135672))

(assert (= (and d!42391 (not c!25390)) b!135673))

(assert (= (and d!42391 (not res!65129)) b!135674))

(declare-fun m!161837 () Bool)

(assert (=> d!42391 m!161837))

(declare-fun m!161839 () Bool)

(assert (=> b!135672 m!161839))

(assert (=> b!135672 m!157103))

(assert (=> b!135672 m!157103))

(declare-fun m!161841 () Bool)

(assert (=> b!135672 m!161841))

(assert (=> b!135674 m!157103))

(assert (=> b!135674 m!157103))

(assert (=> b!135674 m!161841))

(assert (=> d!40485 d!42391))

(declare-fun b!135677 () Bool)

(declare-fun e!88354 () Option!178)

(assert (=> b!135677 (= e!88354 (getValueByKey!172 (t!6167 lt!69644) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!135678 () Bool)

(assert (=> b!135678 (= e!88354 None!176)))

(declare-fun c!25391 () Bool)

(declare-fun d!42393 () Bool)

(assert (=> d!42393 (= c!25391 (and ((_ is Cons!1712) lt!69644) (= (_1!1324 (h!2317 lt!69644)) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun e!88353 () Option!178)

(assert (=> d!42393 (= (getValueByKey!172 lt!69644 (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) e!88353)))

(declare-fun b!135675 () Bool)

(assert (=> b!135675 (= e!88353 (Some!177 (_2!1324 (h!2317 lt!69644))))))

(declare-fun b!135676 () Bool)

(assert (=> b!135676 (= e!88353 e!88354)))

(declare-fun c!25392 () Bool)

(assert (=> b!135676 (= c!25392 (and ((_ is Cons!1712) lt!69644) (not (= (_1!1324 (h!2317 lt!69644)) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(assert (= (and d!42393 c!25391) b!135675))

(assert (= (and d!42393 (not c!25391)) b!135676))

(assert (= (and b!135676 c!25392) b!135677))

(assert (= (and b!135676 (not c!25392)) b!135678))

(declare-fun m!161843 () Bool)

(assert (=> b!135677 m!161843))

(assert (=> d!40485 d!42393))

(declare-fun d!42395 () Bool)

(assert (=> d!42395 (= (getValueByKey!172 lt!69644 (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) (Some!177 (_2!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun lt!70880 () Unit!4135)

(assert (=> d!42395 (= lt!70880 (choose!827 lt!69644 (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun e!88355 () Bool)

(assert (=> d!42395 e!88355))

(declare-fun res!65130 () Bool)

(assert (=> d!42395 (=> (not res!65130) (not e!88355))))

(assert (=> d!42395 (= res!65130 (isStrictlySorted!322 lt!69644))))

(assert (=> d!42395 (= (lemmaContainsTupThenGetReturnValue!87 lt!69644 (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70880)))

(declare-fun b!135679 () Bool)

(declare-fun res!65131 () Bool)

(assert (=> b!135679 (=> (not res!65131) (not e!88355))))

(assert (=> b!135679 (= res!65131 (containsKey!176 lt!69644 (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!135680 () Bool)

(assert (=> b!135680 (= e!88355 (contains!902 lt!69644 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (= (and d!42395 res!65130) b!135679))

(assert (= (and b!135679 res!65131) b!135680))

(assert (=> d!42395 m!157097))

(declare-fun m!161845 () Bool)

(assert (=> d!42395 m!161845))

(declare-fun m!161847 () Bool)

(assert (=> d!42395 m!161847))

(declare-fun m!161849 () Bool)

(assert (=> b!135679 m!161849))

(declare-fun m!161851 () Bool)

(assert (=> b!135680 m!161851))

(assert (=> d!40485 d!42395))

(declare-fun bm!14900 () Bool)

(declare-fun call!14904 () List!1716)

(declare-fun call!14905 () List!1716)

(assert (=> bm!14900 (= call!14904 call!14905)))

(declare-fun d!42397 () Bool)

(declare-fun e!88359 () Bool)

(assert (=> d!42397 e!88359))

(declare-fun res!65133 () Bool)

(assert (=> d!42397 (=> (not res!65133) (not e!88359))))

(declare-fun lt!70881 () List!1716)

(assert (=> d!42397 (= res!65133 (isStrictlySorted!322 lt!70881))))

(declare-fun e!88357 () List!1716)

(assert (=> d!42397 (= lt!70881 e!88357)))

(declare-fun c!25396 () Bool)

(assert (=> d!42397 (= c!25396 (and ((_ is Cons!1712) (toList!869 lt!69472)) (bvslt (_1!1324 (h!2317 (toList!869 lt!69472))) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (=> d!42397 (isStrictlySorted!322 (toList!869 lt!69472))))

(assert (=> d!42397 (= (insertStrictlySorted!90 (toList!869 lt!69472) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))) lt!70881)))

(declare-fun b!135681 () Bool)

(assert (=> b!135681 (= e!88359 (contains!902 lt!70881 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun b!135682 () Bool)

(declare-fun c!25394 () Bool)

(assert (=> b!135682 (= c!25394 (and ((_ is Cons!1712) (toList!869 lt!69472)) (bvsgt (_1!1324 (h!2317 (toList!869 lt!69472))) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(declare-fun e!88358 () List!1716)

(declare-fun e!88360 () List!1716)

(assert (=> b!135682 (= e!88358 e!88360)))

(declare-fun e!88356 () List!1716)

(declare-fun b!135683 () Bool)

(assert (=> b!135683 (= e!88356 (insertStrictlySorted!90 (t!6167 (toList!869 lt!69472)) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!135684 () Bool)

(assert (=> b!135684 (= e!88358 call!14904)))

(declare-fun b!135685 () Bool)

(declare-fun call!14903 () List!1716)

(assert (=> b!135685 (= e!88360 call!14903)))

(declare-fun c!25393 () Bool)

(declare-fun b!135686 () Bool)

(assert (=> b!135686 (= e!88356 (ite c!25393 (t!6167 (toList!869 lt!69472)) (ite c!25394 (Cons!1712 (h!2317 (toList!869 lt!69472)) (t!6167 (toList!869 lt!69472))) Nil!1713)))))

(declare-fun b!135687 () Bool)

(assert (=> b!135687 (= e!88360 call!14903)))

(declare-fun b!135688 () Bool)

(assert (=> b!135688 (= e!88357 call!14905)))

(declare-fun bm!14901 () Bool)

(assert (=> bm!14901 (= call!14905 ($colon$colon!92 e!88356 (ite c!25396 (h!2317 (toList!869 lt!69472)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))) (_2!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))))

(declare-fun c!25395 () Bool)

(assert (=> bm!14901 (= c!25395 c!25396)))

(declare-fun bm!14902 () Bool)

(assert (=> bm!14902 (= call!14903 call!14904)))

(declare-fun b!135689 () Bool)

(declare-fun res!65132 () Bool)

(assert (=> b!135689 (=> (not res!65132) (not e!88359))))

(assert (=> b!135689 (= res!65132 (containsKey!176 lt!70881 (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16))))))))

(declare-fun b!135690 () Bool)

(assert (=> b!135690 (= e!88357 e!88358)))

(assert (=> b!135690 (= c!25393 (and ((_ is Cons!1712) (toList!869 lt!69472)) (= (_1!1324 (h!2317 (toList!869 lt!69472))) (_1!1324 (tuple2!2627 lt!69487 (ite c!24491 (ite c!24497 (minValue!2720 newMap!16) (get!1482 (select (arr!2262 (_values!2848 (v!3199 (underlying!455 thiss!992)))) from!355) (dynLambda!425 (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2720 newMap!16)))))))))

(assert (= (and d!42397 c!25396) b!135688))

(assert (= (and d!42397 (not c!25396)) b!135690))

(assert (= (and b!135690 c!25393) b!135684))

(assert (= (and b!135690 (not c!25393)) b!135682))

(assert (= (and b!135682 c!25394) b!135685))

(assert (= (and b!135682 (not c!25394)) b!135687))

(assert (= (or b!135685 b!135687) bm!14902))

(assert (= (or b!135684 bm!14902) bm!14900))

(assert (= (or b!135688 bm!14900) bm!14901))

(assert (= (and bm!14901 c!25395) b!135683))

(assert (= (and bm!14901 (not c!25395)) b!135686))

(assert (= (and d!42397 res!65133) b!135689))

(assert (= (and b!135689 res!65132) b!135681))

(declare-fun m!161853 () Bool)

(assert (=> d!42397 m!161853))

(declare-fun m!161855 () Bool)

(assert (=> d!42397 m!161855))

(declare-fun m!161857 () Bool)

(assert (=> bm!14901 m!161857))

(declare-fun m!161859 () Bool)

(assert (=> b!135683 m!161859))

(declare-fun m!161861 () Bool)

(assert (=> b!135681 m!161861))

(declare-fun m!161863 () Bool)

(assert (=> b!135689 m!161863))

(assert (=> d!40485 d!42397))

(declare-fun d!42399 () Bool)

(assert (=> d!42399 (= (get!1485 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133718 d!42399))

(declare-fun lt!70882 () Bool)

(declare-fun d!42401 () Bool)

(assert (=> d!42401 (= lt!70882 (select (content!133 lt!69942) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!88362 () Bool)

(assert (=> d!42401 (= lt!70882 e!88362)))

(declare-fun res!65134 () Bool)

(assert (=> d!42401 (=> (not res!65134) (not e!88362))))

(assert (=> d!42401 (= res!65134 ((_ is Cons!1712) lt!69942))))

(assert (=> d!42401 (= (contains!902 lt!69942 (tuple2!2627 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) lt!70882)))

(declare-fun b!135691 () Bool)

(declare-fun e!88361 () Bool)

(assert (=> b!135691 (= e!88362 e!88361)))

(declare-fun res!65135 () Bool)

(assert (=> b!135691 (=> res!65135 e!88361)))

(assert (=> b!135691 (= res!65135 (= (h!2317 lt!69942) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun b!135692 () Bool)

(assert (=> b!135692 (= e!88361 (contains!902 (t!6167 lt!69942) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69096 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(assert (= (and d!42401 res!65134) b!135691))

(assert (= (and b!135691 (not res!65135)) b!135692))

(declare-fun m!161865 () Bool)

(assert (=> d!42401 m!161865))

(declare-fun m!161867 () Bool)

(assert (=> d!42401 m!161867))

(declare-fun m!161869 () Bool)

(assert (=> b!135692 m!161869))

(assert (=> b!133682 d!42401))

(declare-fun d!42403 () Bool)

(assert (=> d!42403 (= ($colon$colon!92 e!86961 (ite c!24726 (h!2317 (toList!869 lt!69079)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992)))))))) (Cons!1712 (ite c!24726 (h!2317 (toList!869 lt!69079)) (tuple2!2627 (_1!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))) (_2!1324 (tuple2!2627 lt!69082 (minValue!2720 (v!3199 (underlying!455 thiss!992))))))) e!86961))))

(assert (=> bm!14724 d!42403))

(declare-fun d!42405 () Bool)

(assert (=> d!42405 (isDefined!125 (getValueByKey!172 (toList!869 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70883 () Unit!4135)

(assert (=> d!42405 (= lt!70883 (choose!817 (toList!869 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88363 () Bool)

(assert (=> d!42405 e!88363))

(declare-fun res!65136 () Bool)

(assert (=> d!42405 (=> (not res!65136) (not e!88363))))

(assert (=> d!42405 (= res!65136 (isStrictlySorted!322 (toList!869 lt!69486)))))

(assert (=> d!42405 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70883)))

(declare-fun b!135693 () Bool)

(assert (=> b!135693 (= e!88363 (containsKey!176 (toList!869 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42405 res!65136) b!135693))

(assert (=> d!42405 m!157475))

(assert (=> d!42405 m!157475))

(assert (=> d!42405 m!157645))

(declare-fun m!161871 () Bool)

(assert (=> d!42405 m!161871))

(assert (=> d!42405 m!161223))

(assert (=> b!135693 m!157641))

(assert (=> b!133513 d!42405))

(assert (=> b!133513 d!41863))

(assert (=> b!133513 d!41797))

(declare-fun b!135696 () Bool)

(declare-fun e!88365 () Option!178)

(assert (=> b!135696 (= e!88365 (getValueByKey!172 (t!6167 (t!6167 lt!69379)) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))

(declare-fun b!135697 () Bool)

(assert (=> b!135697 (= e!88365 None!176)))

(declare-fun d!42407 () Bool)

(declare-fun c!25397 () Bool)

(assert (=> d!42407 (= c!25397 (and ((_ is Cons!1712) (t!6167 lt!69379)) (= (_1!1324 (h!2317 (t!6167 lt!69379))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992))))))))))

(declare-fun e!88364 () Option!178)

(assert (=> d!42407 (= (getValueByKey!172 (t!6167 lt!69379) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))) e!88364)))

(declare-fun b!135694 () Bool)

(assert (=> b!135694 (= e!88364 (Some!177 (_2!1324 (h!2317 (t!6167 lt!69379)))))))

(declare-fun b!135695 () Bool)

(assert (=> b!135695 (= e!88364 e!88365)))

(declare-fun c!25398 () Bool)

(assert (=> b!135695 (= c!25398 (and ((_ is Cons!1712) (t!6167 lt!69379)) (not (= (_1!1324 (h!2317 (t!6167 lt!69379))) (_1!1324 (tuple2!2627 lt!69087 (zeroValue!2720 (v!3199 (underlying!455 thiss!992)))))))))))

(assert (= (and d!42407 c!25397) b!135694))

(assert (= (and d!42407 (not c!25397)) b!135695))

(assert (= (and b!135695 c!25398) b!135696))

(assert (= (and b!135695 (not c!25398)) b!135697))

(declare-fun m!161873 () Bool)

(assert (=> b!135696 m!161873))

(assert (=> b!133127 d!42407))

(assert (=> bm!14717 d!41203))

(declare-fun d!42409 () Bool)

(declare-fun e!88366 () Bool)

(assert (=> d!42409 e!88366))

(declare-fun res!65137 () Bool)

(assert (=> d!42409 (=> res!65137 e!88366)))

(declare-fun lt!70887 () Bool)

(assert (=> d!42409 (= res!65137 (not lt!70887))))

(declare-fun lt!70884 () Bool)

(assert (=> d!42409 (= lt!70887 lt!70884)))

(declare-fun lt!70886 () Unit!4135)

(declare-fun e!88367 () Unit!4135)

(assert (=> d!42409 (= lt!70886 e!88367)))

(declare-fun c!25399 () Bool)

(assert (=> d!42409 (= c!25399 lt!70884)))

(assert (=> d!42409 (= lt!70884 (containsKey!176 (toList!869 lt!69883) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!42409 (= (contains!899 lt!69883 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)) lt!70887)))

(declare-fun b!135698 () Bool)

(declare-fun lt!70885 () Unit!4135)

(assert (=> b!135698 (= e!88367 lt!70885)))

(assert (=> b!135698 (= lt!70885 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 lt!69883) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135698 (isDefined!125 (getValueByKey!172 (toList!869 lt!69883) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135699 () Bool)

(declare-fun Unit!4273 () Unit!4135)

(assert (=> b!135699 (= e!88367 Unit!4273)))

(declare-fun b!135700 () Bool)

(assert (=> b!135700 (= e!88366 (isDefined!125 (getValueByKey!172 (toList!869 lt!69883) (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!42409 c!25399) b!135698))

(assert (= (and d!42409 (not c!25399)) b!135699))

(assert (= (and d!42409 (not res!65137)) b!135700))

(assert (=> d!42409 m!156163))

(declare-fun m!161875 () Bool)

(assert (=> d!42409 m!161875))

(assert (=> b!135698 m!156163))

(declare-fun m!161877 () Bool)

(assert (=> b!135698 m!161877))

(assert (=> b!135698 m!156163))

(assert (=> b!135698 m!160921))

(assert (=> b!135698 m!160921))

(declare-fun m!161879 () Bool)

(assert (=> b!135698 m!161879))

(assert (=> b!135700 m!156163))

(assert (=> b!135700 m!160921))

(assert (=> b!135700 m!160921))

(assert (=> b!135700 m!161879))

(assert (=> b!133580 d!42409))

(declare-fun d!42411 () Bool)

(assert (=> d!42411 (= (get!1486 (getValueByKey!172 (toList!869 (+!175 lt!69448 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))) lt!69467)) (v!3203 (getValueByKey!172 (toList!869 (+!175 lt!69448 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))) lt!69467)))))

(assert (=> d!40457 d!42411))

(declare-fun b!135703 () Bool)

(declare-fun e!88369 () Option!178)

(assert (=> b!135703 (= e!88369 (getValueByKey!172 (t!6167 (toList!869 (+!175 lt!69448 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))) lt!69467))))

(declare-fun b!135704 () Bool)

(assert (=> b!135704 (= e!88369 None!176)))

(declare-fun c!25400 () Bool)

(declare-fun d!42413 () Bool)

(assert (=> d!42413 (= c!25400 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69448 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))) (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69448 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))) lt!69467)))))

(declare-fun e!88368 () Option!178)

(assert (=> d!42413 (= (getValueByKey!172 (toList!869 (+!175 lt!69448 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))) lt!69467) e!88368)))

(declare-fun b!135701 () Bool)

(assert (=> b!135701 (= e!88368 (Some!177 (_2!1324 (h!2317 (toList!869 (+!175 lt!69448 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))))))))

(declare-fun b!135702 () Bool)

(assert (=> b!135702 (= e!88368 e!88369)))

(declare-fun c!25401 () Bool)

(assert (=> b!135702 (= c!25401 (and ((_ is Cons!1712) (toList!869 (+!175 lt!69448 (tuple2!2627 lt!69451 (minValue!2720 newMap!16))))) (not (= (_1!1324 (h!2317 (toList!869 (+!175 lt!69448 (tuple2!2627 lt!69451 (minValue!2720 newMap!16)))))) lt!69467))))))

(assert (= (and d!42413 c!25400) b!135701))

(assert (= (and d!42413 (not c!25400)) b!135702))

(assert (= (and b!135702 c!25401) b!135703))

(assert (= (and b!135702 (not c!25401)) b!135704))

(declare-fun m!161881 () Bool)

(assert (=> b!135703 m!161881))

(assert (=> d!40457 d!42413))

(declare-fun d!42415 () Bool)

(declare-fun e!88370 () Bool)

(assert (=> d!42415 e!88370))

(declare-fun res!65139 () Bool)

(assert (=> d!42415 (=> (not res!65139) (not e!88370))))

(declare-fun lt!70888 () ListLongMap!1707)

(assert (=> d!42415 (= res!65139 (contains!899 lt!70888 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70890 () List!1716)

(assert (=> d!42415 (= lt!70888 (ListLongMap!1708 lt!70890))))

(declare-fun lt!70891 () Unit!4135)

(declare-fun lt!70889 () Unit!4135)

(assert (=> d!42415 (= lt!70891 lt!70889)))

(assert (=> d!42415 (= (getValueByKey!172 lt!70890 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42415 (= lt!70889 (lemmaContainsTupThenGetReturnValue!87 lt!70890 (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42415 (= lt!70890 (insertStrictlySorted!90 (toList!869 call!14697) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42415 (= (+!175 call!14697 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70888)))

(declare-fun b!135705 () Bool)

(declare-fun res!65138 () Bool)

(assert (=> b!135705 (=> (not res!65138) (not e!88370))))

(assert (=> b!135705 (= res!65138 (= (getValueByKey!172 (toList!869 lt!70888) (_1!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!177 (_2!1324 (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135706 () Bool)

(assert (=> b!135706 (= e!88370 (contains!902 (toList!869 lt!70888) (tuple2!2627 (select (arr!2261 (_keys!4614 newMap!16)) #b00000000000000000000000000000000) (get!1482 (select (arr!2262 (ite (or c!24491 c!24492) (_values!2848 newMap!16) lt!69190)) #b00000000000000000000000000000000) (dynLambda!425 (defaultEntry!2865 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42415 res!65139) b!135705))

(assert (= (and b!135705 res!65138) b!135706))

(declare-fun m!161883 () Bool)

(assert (=> d!42415 m!161883))

(declare-fun m!161885 () Bool)

(assert (=> d!42415 m!161885))

(declare-fun m!161887 () Bool)

(assert (=> d!42415 m!161887))

(declare-fun m!161889 () Bool)

(assert (=> d!42415 m!161889))

(declare-fun m!161891 () Bool)

(assert (=> b!135705 m!161891))

(declare-fun m!161893 () Bool)

(assert (=> b!135706 m!161893))

(assert (=> b!133243 d!42415))

(assert (=> b!133243 d!40741))

(declare-fun d!42417 () Bool)

(declare-fun e!88371 () Bool)

(assert (=> d!42417 e!88371))

(declare-fun res!65140 () Bool)

(assert (=> d!42417 (=> res!65140 e!88371)))

(declare-fun lt!70895 () Bool)

(assert (=> d!42417 (= res!65140 (not lt!70895))))

(declare-fun lt!70892 () Bool)

(assert (=> d!42417 (= lt!70895 lt!70892)))

(declare-fun lt!70894 () Unit!4135)

(declare-fun e!88372 () Unit!4135)

(assert (=> d!42417 (= lt!70894 e!88372)))

(declare-fun c!25402 () Bool)

(assert (=> d!42417 (= c!25402 lt!70892)))

(assert (=> d!42417 (= lt!70892 (containsKey!176 (toList!869 (+!175 lt!69665 (tuple2!2627 lt!69664 lt!69661))) lt!69667))))

(assert (=> d!42417 (= (contains!899 (+!175 lt!69665 (tuple2!2627 lt!69664 lt!69661)) lt!69667) lt!70895)))

(declare-fun b!135707 () Bool)

(declare-fun lt!70893 () Unit!4135)

(assert (=> b!135707 (= e!88372 lt!70893)))

(assert (=> b!135707 (= lt!70893 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!869 (+!175 lt!69665 (tuple2!2627 lt!69664 lt!69661))) lt!69667))))

(assert (=> b!135707 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69665 (tuple2!2627 lt!69664 lt!69661))) lt!69667))))

(declare-fun b!135708 () Bool)

(declare-fun Unit!4274 () Unit!4135)

(assert (=> b!135708 (= e!88372 Unit!4274)))

(declare-fun b!135709 () Bool)

(assert (=> b!135709 (= e!88371 (isDefined!125 (getValueByKey!172 (toList!869 (+!175 lt!69665 (tuple2!2627 lt!69664 lt!69661))) lt!69667)))))

(assert (= (and d!42417 c!25402) b!135707))

(assert (= (and d!42417 (not c!25402)) b!135708))

(assert (= (and d!42417 (not res!65140)) b!135709))

(declare-fun m!161895 () Bool)

(assert (=> d!42417 m!161895))

(declare-fun m!161897 () Bool)

(assert (=> b!135707 m!161897))

(declare-fun m!161899 () Bool)

(assert (=> b!135707 m!161899))

(assert (=> b!135707 m!161899))

(declare-fun m!161901 () Bool)

(assert (=> b!135707 m!161901))

(assert (=> b!135709 m!161899))

(assert (=> b!135709 m!161899))

(assert (=> b!135709 m!161901))

(assert (=> b!133243 d!42417))

(declare-fun d!42419 () Bool)

(declare-fun e!88373 () Bool)

(assert (=> d!42419 e!88373))

(declare-fun res!65142 () Bool)

(assert (=> d!42419 (=> (not res!65142) (not e!88373))))

(declare-fun lt!70896 () ListLongMap!1707)

(assert (=> d!42419 (= res!65142 (contains!899 lt!70896 (_1!1324 (tuple2!2627 lt!69664 lt!69661))))))

(declare-fun lt!70898 () List!1716)

(assert (=> d!42419 (= lt!70896 (ListLongMap!1708 lt!70898))))

(declare-fun lt!70899 () Unit!4135)

(declare-fun lt!70897 () Unit!4135)

(assert (=> d!42419 (= lt!70899 lt!70897)))

(assert (=> d!42419 (= (getValueByKey!172 lt!70898 (_1!1324 (tuple2!2627 lt!69664 lt!69661))) (Some!177 (_2!1324 (tuple2!2627 lt!69664 lt!69661))))))

(assert (=> d!42419 (= lt!70897 (lemmaContainsTupThenGetReturnValue!87 lt!70898 (_1!1324 (tuple2!2627 lt!69664 lt!69661)) (_2!1324 (tuple2!2627 lt!69664 lt!69661))))))

(assert (=> d!42419 (= lt!70898 (insertStrictlySorted!90 (toList!869 lt!69665) (_1!1324 (tuple2!2627 lt!69664 lt!69661)) (_2!1324 (tuple2!2627 lt!69664 lt!69661))))))

(assert (=> d!42419 (= (+!175 lt!69665 (tuple2!2627 lt!69664 lt!69661)) lt!70896)))

(declare-fun b!135710 () Bool)

(declare-fun res!65141 () Bool)

(assert (=> b!135710 (=> (not res!65141) (not e!88373))))

(assert (=> b!135710 (= res!65141 (= (getValueByKey!172 (toList!869 lt!70896) (_1!1324 (tuple2!2627 lt!69664 lt!69661))) (Some!177 (_2!1324 (tuple2!2627 lt!69664 lt!69661)))))))

(declare-fun b!135711 () Bool)

(assert (=> b!135711 (= e!88373 (contains!902 (toList!869 lt!70896) (tuple2!2627 lt!69664 lt!69661)))))

(assert (= (and d!42419 res!65142) b!135710))

(assert (= (and b!135710 res!65141) b!135711))

(declare-fun m!161903 () Bool)

(assert (=> d!42419 m!161903))

(declare-fun m!161905 () Bool)

(assert (=> d!42419 m!161905))

(declare-fun m!161907 () Bool)

(assert (=> d!42419 m!161907))

(declare-fun m!161909 () Bool)

(assert (=> d!42419 m!161909))

(declare-fun m!161911 () Bool)

(assert (=> b!135710 m!161911))

(declare-fun m!161913 () Bool)

(assert (=> b!135711 m!161913))

(assert (=> b!133243 d!42419))

(declare-fun d!42421 () Bool)

(assert (=> d!42421 (not (contains!899 (+!175 lt!69665 (tuple2!2627 lt!69664 lt!69661)) lt!69667))))

(declare-fun lt!70900 () Unit!4135)

(assert (=> d!42421 (= lt!70900 (choose!826 lt!69665 lt!69664 lt!69661 lt!69667))))

(declare-fun e!88374 () Bool)

(assert (=> d!42421 e!88374))

(declare-fun res!65143 () Bool)

(assert (=> d!42421 (=> (not res!65143) (not e!88374))))

(assert (=> d!42421 (= res!65143 (not (contains!899 lt!69665 lt!69667)))))

(assert (=> d!42421 (= (addStillNotContains!61 lt!69665 lt!69664 lt!69661 lt!69667) lt!70900)))

(declare-fun b!135712 () Bool)

(assert (=> b!135712 (= e!88374 (not (= lt!69664 lt!69667)))))

(assert (= (and d!42421 res!65143) b!135712))

(assert (=> d!42421 m!157169))

(assert (=> d!42421 m!157169))

(assert (=> d!42421 m!157173))

(declare-fun m!161915 () Bool)

(assert (=> d!42421 m!161915))

(declare-fun m!161917 () Bool)

(assert (=> d!42421 m!161917))

(assert (=> b!133243 d!42421))

(declare-fun b!135714 () Bool)

(declare-fun e!88376 () Bool)

(assert (=> b!135714 (= e!88376 tp_is_empty!2877)))

(declare-fun mapNonEmpty!4659 () Bool)

(declare-fun mapRes!4659 () Bool)

(declare-fun tp!11229 () Bool)

(declare-fun e!88375 () Bool)

(assert (=> mapNonEmpty!4659 (= mapRes!4659 (and tp!11229 e!88375))))

(declare-fun mapValue!4659 () ValueCell!1095)

(declare-fun mapRest!4659 () (Array (_ BitVec 32) ValueCell!1095))

(declare-fun mapKey!4659 () (_ BitVec 32))

(assert (=> mapNonEmpty!4659 (= mapRest!4657 (store mapRest!4659 mapKey!4659 mapValue!4659))))

(declare-fun condMapEmpty!4659 () Bool)

(declare-fun mapDefault!4659 () ValueCell!1095)

(assert (=> mapNonEmpty!4657 (= condMapEmpty!4659 (= mapRest!4657 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4659)))))

(assert (=> mapNonEmpty!4657 (= tp!11227 (and e!88376 mapRes!4659))))

(declare-fun mapIsEmpty!4659 () Bool)

(assert (=> mapIsEmpty!4659 mapRes!4659))

(declare-fun b!135713 () Bool)

(assert (=> b!135713 (= e!88375 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4657 condMapEmpty!4659) mapIsEmpty!4659))

(assert (= (and mapNonEmpty!4657 (not condMapEmpty!4659)) mapNonEmpty!4659))

(assert (= (and mapNonEmpty!4659 ((_ is ValueCellFull!1095) mapValue!4659)) b!135713))

(assert (= (and mapNonEmpty!4657 ((_ is ValueCellFull!1095) mapDefault!4659)) b!135714))

(declare-fun m!161919 () Bool)

(assert (=> mapNonEmpty!4659 m!161919))

(declare-fun b!135716 () Bool)

(declare-fun e!88378 () Bool)

(assert (=> b!135716 (= e!88378 tp_is_empty!2877)))

(declare-fun mapNonEmpty!4660 () Bool)

(declare-fun mapRes!4660 () Bool)

(declare-fun tp!11230 () Bool)

(declare-fun e!88377 () Bool)

(assert (=> mapNonEmpty!4660 (= mapRes!4660 (and tp!11230 e!88377))))

(declare-fun mapValue!4660 () ValueCell!1095)

(declare-fun mapRest!4660 () (Array (_ BitVec 32) ValueCell!1095))

(declare-fun mapKey!4660 () (_ BitVec 32))

(assert (=> mapNonEmpty!4660 (= mapRest!4658 (store mapRest!4660 mapKey!4660 mapValue!4660))))

(declare-fun condMapEmpty!4660 () Bool)

(declare-fun mapDefault!4660 () ValueCell!1095)

(assert (=> mapNonEmpty!4658 (= condMapEmpty!4660 (= mapRest!4658 ((as const (Array (_ BitVec 32) ValueCell!1095)) mapDefault!4660)))))

(assert (=> mapNonEmpty!4658 (= tp!11228 (and e!88378 mapRes!4660))))

(declare-fun mapIsEmpty!4660 () Bool)

(assert (=> mapIsEmpty!4660 mapRes!4660))

(declare-fun b!135715 () Bool)

(assert (=> b!135715 (= e!88377 tp_is_empty!2877)))

(assert (= (and mapNonEmpty!4658 condMapEmpty!4660) mapIsEmpty!4660))

(assert (= (and mapNonEmpty!4658 (not condMapEmpty!4660)) mapNonEmpty!4660))

(assert (= (and mapNonEmpty!4660 ((_ is ValueCellFull!1095) mapValue!4660)) b!135715))

(assert (= (and mapNonEmpty!4658 ((_ is ValueCellFull!1095) mapDefault!4660)) b!135716))

(declare-fun m!161921 () Bool)

(assert (=> mapNonEmpty!4660 m!161921))

(declare-fun b_lambda!6023 () Bool)

(assert (= b_lambda!5983 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6023)))

(declare-fun b_lambda!6025 () Bool)

(assert (= b_lambda!5977 (or (and b!132300 b_free!2921) (and b!132303 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))))) b_lambda!6025)))

(declare-fun b_lambda!6027 () Bool)

(assert (= b_lambda!6003 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6027)))

(declare-fun b_lambda!6029 () Bool)

(assert (= b_lambda!5987 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6029)))

(declare-fun b_lambda!6031 () Bool)

(assert (= b_lambda!5999 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6031)))

(declare-fun b_lambda!6033 () Bool)

(assert (= b_lambda!6015 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6033)))

(declare-fun b_lambda!6035 () Bool)

(assert (= b_lambda!6005 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6035)))

(declare-fun b_lambda!6037 () Bool)

(assert (= b_lambda!5981 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6037)))

(declare-fun b_lambda!6039 () Bool)

(assert (= b_lambda!6017 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6039)))

(declare-fun b_lambda!6041 () Bool)

(assert (= b_lambda!6007 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6041)))

(declare-fun b_lambda!6043 () Bool)

(assert (= b_lambda!5995 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6043)))

(declare-fun b_lambda!6045 () Bool)

(assert (= b_lambda!6009 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6045)))

(declare-fun b_lambda!6047 () Bool)

(assert (= b_lambda!6021 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6047)))

(declare-fun b_lambda!6049 () Bool)

(assert (= b_lambda!5945 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 (_2!1325 lt!69179)))) (and b!132303 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (_2!1325 lt!69179)))) b_lambda!6049)))

(declare-fun b_lambda!6051 () Bool)

(assert (= b_lambda!5979 (or (and b!132300 b_free!2921) (and b!132303 b_free!2923 (= (defaultEntry!2865 newMap!16) (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))))) b_lambda!6051)))

(declare-fun b_lambda!6053 () Bool)

(assert (= b_lambda!6019 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6053)))

(declare-fun b_lambda!6055 () Bool)

(assert (= b_lambda!6013 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6055)))

(declare-fun b_lambda!6057 () Bool)

(assert (= b_lambda!5997 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6057)))

(declare-fun b_lambda!6059 () Bool)

(assert (= b_lambda!5985 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6059)))

(declare-fun b_lambda!6061 () Bool)

(assert (= b_lambda!6011 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6061)))

(declare-fun b_lambda!6063 () Bool)

(assert (= b_lambda!5993 (or (and b!132300 b_free!2921 (= (defaultEntry!2865 (v!3199 (underlying!455 thiss!992))) (defaultEntry!2865 newMap!16))) (and b!132303 b_free!2923) b_lambda!6063)))

(check-sat (not b!133990) (not b!135332) (not d!42385) (not bm!14873) (not b!134154) (not b!134224) (not d!42357) (not b!134687) (not b!134908) (not b_lambda!5897) (not d!41179) (not bm!14822) (not d!40995) (not b!134719) (not b!134029) (not b!134025) (not d!40933) (not b!134038) (not b!135008) (not b!134823) (not bm!14858) (not b!134430) (not b!134126) (not b!135345) (not b!134533) (not b!134563) (not d!42191) (not b!134755) (not b!134807) (not d!41807) (not b!135088) (not d!41047) (not d!41007) (not b!134191) (not b!135500) (not d!42349) (not d!41745) (not d!41729) (not b!135221) (not d!41991) (not b_lambda!6041) (not b!134822) (not d!41713) (not b!133884) (not d!42115) (not d!40937) (not d!42067) (not b!133939) (not bm!14828) (not b!134347) (not d!41925) (not b!134729) (not b!134427) (not d!40883) (not b!134132) (not b!134629) (not d!42339) (not b!134011) (not b!135160) (not b!133936) (not b!135479) (not b!134835) (not d!41979) (not b!134214) (not b!134794) (not b!135249) (not d!41341) (not b!134129) (not b!134447) (not b!135172) (not d!42049) (not b!135416) (not b!134471) (not b!134631) (not d!41781) (not b!134114) (not d!41623) (not b!134976) (not b!135667) (not d!41899) (not d!42059) (not b_lambda!6031) (not b!134693) (not b!135476) (not d!41583) (not d!41595) (not b!134418) (not b!134157) (not b!135626) (not d!40903) (not b!134469) (not b!135103) (not b!135212) (not d!41347) (not b!134664) (not d!42395) (not d!41229) (not d!42029) (not d!41215) (not d!40867) (not b!135095) (not b!134286) (not b!133975) (not b!135048) (not b!135065) (not b!134345) (not b!135392) (not d!41785) (not b!134825) (not b!135347) (not b!135042) (not d!41529) (not b!135339) (not d!41589) (not d!41461) (not d!42225) (not b!134088) (not d!41803) (not b!134178) (not bm!14849) (not b!135664) (not b!135624) (not b!134506) (not b!134768) (not d!41359) (not d!41191) (not b!134041) (not b!134313) (not b_lambda!6059) (not d!41547) (not b!134876) (not b!134986) (not d!42201) (not b!135001) (not b_lambda!5951) (not b!134760) (not b!135258) (not b!134137) (not d!42009) (not d!41617) (not d!41875) (not b!135175) (not mapNonEmpty!4660) (not b!134080) (not b!135187) (not b!133882) (not d!42341) (not b!134785) (not d!41525) (not b!135004) (not b!135271) (not d!41627) (not b!134131) (not b!134786) (not b!134954) (not b!135651) (not b!135559) (not b!134265) (not d!42237) (not b!134691) (not b!135521) (not d!42387) (not d!42091) (not d!41833) (not b!134103) (not b!134421) (not d!41809) (not d!41267) (not b!134211) (not d!40993) (not b!134170) (not d!42329) (not b!134176) (not bm!14850) (not b!134726) (not b!135328) (not d!41801) (not b!134888) (not b!135622) (not b!135135) (not b!134873) (not b!135595) (not d!42303) (not b!134857) (not b!134965) (not d!42177) (not bm!14876) (not d!41989) (not d!41261) (not b!133976) (not d!41651) (not d!42133) (not d!41017) (not b!134657) (not b_next!2923) (not bm!14820) (not b!135705) (not d!41711) (not b!134466) (not d!41233) (not d!42013) (not b!134354) (not d!42375) (not bm!14782) (not d!41103) (not b!134328) (not d!41299) (not d!41533) (not d!41731) (not b!134827) (not b!134523) (not b!135404) (not b!134496) (not d!41245) (not d!41189) (not d!41357) (not b!135710) (not b!133852) (not d!41773) (not b!134695) (not d!41951) (not d!41511) (not d!41157) (not d!42337) (not b!135603) (not b!135266) (not b!135277) (not b!135313) (not d!42291) (not b!134021) (not b_lambda!5949) (not b!133930) (not b!134075) (not b!134322) (not d!41799) (not b!135700) (not b!134637) (not b!133994) (not b!134982) (not b!133980) (not d!40925) (not b!134243) (not d!41835) (not b!134432) (not b!134486) (not b!134142) (not b!133918) (not b!135642) (not b!135127) (not b!134914) (not b_lambda!6035) (not d!41845) (not b!134508) (not bm!14856) (not b!134237) (not d!41303) (not bm!14791) (not b!135706) (not b!133913) (not b!135698) (not b!134744) (not b!135322) (not b!134360) (not b!134571) (not b!134757) (not b!134108) (not b!135663) (not b!134655) (not d!41429) (not d!40929) (not b!134502) (not b!134501) (not b!135680) (not d!42121) (not b!135185) (not b!134843) (not d!42401) (not b!134546) (not d!41993) (not b!133895) (not b!135359) (not d!41621) (not b!133977) (not b!134609) (not d!41319) (not b!135349) (not b!134085) (not b!134095) (not b!135111) (not b_lambda!5991) (not b!134847) (not b!134204) (not d!40873) (not d!42323) (not d!41395) (not b!134916) (not b_lambda!6001) (not b!134612) (not b!135441) (not b!134210) (not b!134934) (not b!134199) (not b!135538) (not b!135145) (not b!135290) (not b!135599) (not b!135193) (not b!134983) (not d!41931) (not b!134604) (not b!134595) (not b!134308) (not b_lambda!5965) (not b!134509) (not b!133904) (not d!42147) (not b!135669) (not b!133840) (not b!135427) (not b!134027) (not bm!14846) (not b!133952) (not d!41393) (not b!135536) (not d!42277) (not b!134828) (not d!42289) (not b!133933) (not b!134439) (not b!133956) (not b!134152) (not d!41285) (not b!135648) (not b!134277) (not b!134255) (not d!41113) (not b!134776) (not d!41849) (not b!133979) (not b!134052) (not d!42273) (not d!41317) (not d!40941) (not b!135320) (not b!135567) (not b!134358) (not b!135628) (not b!135666) (not d!41271) (not b!135401) (not b!133908) (not d!41237) (not b!135553) (not b!134608) (not d!41691) (not b!134980) (not b!133928) (not b!134015) (not d!40979) (not b!133969) (not b!133949) (not b!133893) (not d!41419) (not d!42005) (not d!41963) (not d!42335) (not b!134171) (not b!135205) (not b!134551) (not d!41101) (not d!41141) (not b!133876) (not b!134180) (not d!41521) (not b!133971) (not d!42405) (not b!134651) (not b!135573) (not b!135052) (not b!133902) (not d!41281) (not b!135609) (not b!134736) (not b!134970) (not b!135456) (not d!42007) (not d!41003) (not b!134330) (not d!42193) (not d!41147) (not b!134320) (not d!40875) (not d!42087) (not b!134967) (not b!134383) (not b!134260) (not d!41119) (not d!41935) (not b!135661) (not d!42189) (not d!41765) (not b!134662) (not b!135640) (not b!135036) (not b!135581) (not b!135169) (not b!134310) (not b!134476) (not d!41469) (not b!135278) (not b!133992) (not b!134332) (not d!41777) (not b!135524) (not d!42195) (not d!40999) (not d!42345) (not d!41767) (not b!134947) (not b!134535) (not b!134684) (not b!133888) (not d!41027) (not b!134561) (not d!41775) (not b!133987) (not b!135173) (not b!133875) (not b!135335) (not d!42333) (not bm!14833) (not b!134240) (not b!134230) (not d!41831) (not d!41201) (not b!134054) (not b!134586) (not d!40981) (not bm!14826) (not d!41127) (not b!134855) (not d!41351) (not b!135467) (not b!134316) (not b!134076) (not b!134159) (not b!134192) (not b!135210) (not b!134047) (not bm!14893) (not b!134943) (not b_lambda!6049) (not b!134140) (not b!134531) (not b!135582) (not b!135067) (not b!133901) (not b!134392) (not b!135496) (not b!133993) (not b!134590) (not b!135693) (not b!134543) (not d!41881) (not b!134796) (not b!135161) (not d!42169) (not b!134004) (not b!135055) (not b!134759) (not b!134087) (not b!134513) (not b!135154) (not b!133863) (not bm!14811) (not b_lambda!6057) (not b!134306) (not b!134452) (not b!135585) (not b!134182) (not b!133965) (not d!41455) (not bm!14891) (not d!41977) (not b!134885) (not d!42131) (not b!135703) (not b!134123) (not d!42149) (not b!135551) (not d!42163) (not b!134547) (not b!135671) (not d!41049) (not b!134653) (not d!41155) (not d!42373) (not b!134574) (not b!134920) (not b!135281) (not b!134031) (not b!134852) (not d!41763) (not b!134267) (not d!41207) (not bm!14808) (not d!41633) (not b!134111) (not d!41871) (not b!134233) (not d!41969) (not b!133899) (not b!135245) (not b!135024) (not d!42331) (not d!41839) (not b!134065) (not d!42301) (not b!135566) (not b!134842) (not b!134242) (not b!134747) (not d!42351) (not b!135174) (not d!40905) (not b!134517) (not b!134770) (not d!40985) (not b!135126) (not b!134819) (not d!42257) (not b!135287) (not b!135279) (not b!134068) (not b!135197) (not d!41433) (not d!41097) (not bm!14885) (not b!135422) (not b!135027) (not bm!14814) (not d!41325) (not d!41563) (not d!41971) (not b!134117) (not b!134135) (not d!41355) (not b_lambda!6039) (not mapNonEmpty!4659) (not d!40943) (not b!134929) (not d!41343) (not d!41225) (not d!42153) (not d!41379) (not b!134972) (not b!135614) (not b!133860) (not b!135561) (not d!41283) (not b!135077) (not b!134620) (not b!134390) (not d!41021) (not b!134700) (not d!40989) (not d!41477) (not d!41249) (not b!134841) (not b!134528) (not d!41481) (not b!135574) (not b!133850) (not b!135556) (not b!134932) (not b!135307) (not d!42181) (not b!134414) (not b!134951) (not b!134838) (not d!41431) (not b!135045) (not b!133905) (not b!135311) (not d!40917) (not b!134217) (not d!41915) (not d!42343) (not b!134206) (not b!135709) (not b!135447) (not bm!14852) (not d!41769) (not b!135623) (not b!135087) (not b!135227) (not b!135270) (not b!134774) (not b!134134) (not b!135453) (not b!135439) (not b!134749) (not b!133973) (not b!134830) (not bm!14803) (not b_lambda!6055) (not d!41409) (not d!42383) (not d!41457) (not d!41985) (not b_lambda!5909) (not d!42321) (not b!134621) (not bm!14835) (not b!135596) (not b!134779) (not d!40939) (not b!134287) (not d!42397) (not b!134046) (not d!41339) (not d!41593) (not bm!14792) (not d!42287) (not b!135288) (not b!134606) (not b_lambda!5955) (not bm!14895) (not d!41657) (not b!135492) (not b!134681) (not bm!14837) (not d!41869) (not d!41545) (not d!42263) (not b!135038) (not b!135565) (not b!135520) (not bm!14841) (not d!40877) (not b_lambda!5953) (not b!135151) (not d!41411) (not b_lambda!6051) (not b!134603) (not b!134798) (not b!134802) (not b!134756) (not b!134816) (not b!135092) (not b!135286) (not d!41337) (not b!134401) (not b!134490) (not d!41549) (not b!133854) (not b!133847) (not b_lambda!5975) (not b!134526) (not b_lambda!6047) (not d!42053) (not b!134338) (not b_lambda!5963) (not b!133937) (not b!133921) (not b!135119) (not b!135498) (not b!135261) (not b!135196) (not b!134614) (not d!41151) (not b!135238) (not d!41009) (not b!134654) (not b!134002) (not d!41857) (not d!42015) (not b!135107) (not b_lambda!6043) (not d!42089) (not b!134738) (not d!41109) (not b!135435) (not d!41507) (not d!42079) (not d!40923) (not b!135030) (not d!41259) (not d!40895) (not d!41055) (not d!41177) (not b!134035) (not d!40945) (not b!135215) (not d!41375) (not b!135371) (not d!41203) (not bm!14798) (not b!135315) (not b!135318) (not d!41959) (not b!135534) (not b!134128) (not b!133966) (not b!135530) (not b!134434) (not d!42359) tp_is_empty!2877 (not b!135351) (not d!41555) (not b!134556) (not b_lambda!6061) (not b!134907) (not b!135617) (not b!135494) (not b!135243) (not d!40961) (not b!134624) (not b!134034) (not d!40885) (not d!41415) (not b!134049) (not d!41427) (not d!40971) (not b!135177) (not d!41227) (not b!134973) (not b!134369) (not bm!14844) (not d!41645) (not b!135073) (not d!40915) (not b!134082) (not d!41081) (not d!41445) (not d!41093) (not b!135021) (not b!133897) (not b!134084) (not b!133958) (not b!135033) (not b!133963) (not b!134660) (not b!134643) (not b!133935) (not b!134875) (not d!41417) (not d!41615) (not b!135056) (not d!41751) (not b!134356) (not bm!14887) (not b!133856) (not d!41715) (not b!134713) (not b!134057) (not b!133954) (not b!133848) (not d!42051) (not b!133912) (not d!42021) (not d!41205) (not b!134200) (not bm!14817) (not d!41817) (not d!41183) (not bm!14801) (not d!41387) (not bm!14776) (not b!134665) (not b!134882) (not d!42221) (not b!134456) (not d!42119) (not b!134115) (not b!134373) (not b!135413) (not b!134165) (not b!134892) (not d!42001) (not d!40973) (not d!41023) (not b!134584) (not b!134044) (not b!134578) (not b!134318) (not b!135356) (not b!135089) (not b!134765) (not b!134956) (not b!135129) (not d!41167) (not d!42011) (not b!135647) (not b!134352) (not b!134059) (not d!42097) (not d!41345) (not b!135063) (not b!135365) (not b!134879) (not b!135260) (not b!135362) (not b!135619) (not b!135454) (not b!134949) (not b!134399) (not b!133851) (not b!134685) (not b!134219) (not bm!14866) (not b!134627) (not b!134389) (not b!134416) (not d!40991) (not b!134051) (not b!133871) (not b!134510) (not b!134537) (not d!40881) (not b!135007) (not d!41057) (not d!42275) (not d!41239) (not b!135044) (not b!135376) (not b!135410) (not d!41643) (not d!41423) (not d!41407) (not b!133972) (not d!42265) (not b!135178) (not b!135381) (not b!134398) (not b!134333) (not b!134896) (not b!135638) (not b!134850) (not b!134721) (not b!134150) (not d!40889) (not d!42215) (not b!134207) (not d!41475) (not d!42311) (not d!41983) (not b!135631) (not d!42421) (not b!135533) (not b!135621) (not b!133962) (not b!135157) (not b!135386) (not b!134344) (not d!41837) (not b!134493) (not d!41721) (not b!135611) (not b!134032) (not b!135593) (not d!42355) (not b_lambda!5971) (not b!134194) (not b!134601) (not d!41659) (not b!135310) (not bm!14839) (not b!135097) (not b!134013) (not b!134091) (not b!135711) (not b!135183) (not d!41139) (not d!41531) (not b!135558) (not b!134491) (not b_lambda!6033) (not b!135649) (not d!41571) (not bm!14863) (not b!133982) (not b!134507) (not b!134804) (not b!135389) (not b!135350) (not d!42209) (not b!134387) (not b!135625) (not b!135563) (not d!42023) (not d!41077) (not d!41421) (not b!134300) (not b!133974) (not b!134105) (not d!42027) (not b!135469) (not d!41467) (not b!135399) (not b!134910) (not d!40947) (not b!135296) (not d!42197) (not b!134056) (not d!41557) (not b!134252) (not b!134215) (not b!135450) (not b!134008) (not d!41661) (not b!134395) (not d!41459) (not d!40887) (not b!134788) (not b!133844) b_and!8385 (not d!42251) (not b!135424) (not d!42143) (not b!134979) (not b!134845) (not b!134924) (not b!135267) (not d!41577) (not d!41485) (not d!41187) (not d!42271) (not b!135419) (not b!134784) (not d!41277) (not b!134724) (not b!134220) (not b!134865) (not b!135681) (not b!134262) (not d!42381) (not d!41045) (not b!135608) (not d!41929) (not b!135228) (not b!135387) (not bm!14889) (not b!135113) (not b!135373) (not d!40975) (not b!134102) (not bm!14804) (not b!134640) (not b!135190) (not b!134198) (not b!134303) (not b!134821) (not b!135064) (not d!41681) (not d!42419) (not d!41011) (not d!42259) (not d!42347) (not b!135188) (not b!133945) (not b!134366) (not b!134179) (not b!135430) (not d!42081) (not b_lambda!5893) (not b!135537) (not bm!14784) (not b!134710) (not d!42253) (not b!134371) (not d!41121) (not b!133910) (not b!134871) (not b!134043) (not b!134616) (not b_lambda!6025) (not b!134762) (not d!41975) (not b!134504) (not b!135255) (not d!41755) (not b!133870) (not b_lambda!6063) (not b!135707) (not b!134554) (not d!40987) (not d!40879) (not b!135507) (not b!134397) (not d!41043) (not b!135028) (not b!134246) (not b!134139) (not b!134545) (not b!135501) (not b!135515) (not d!42391) (not d!41309) (not b!133911) (not d!41551) (not b!135163) (not d!40907) (not d!41289) (not b!134945) (not b!134407) (not b!134428) (not d!41793) (not b!135094) (not b!134525) (not bm!14789) (not d!41361) (not b!134599) (not b!135354) (not d!40931) (not d!41543) (not b!135006) (not b!134521) (not d!41829) (not bm!14854) (not d!41425) (not d!42063) (not b!135138) (not b!134268) (not b!134271) (not b!134415) (not b!134222) (not b!134296) (not bm!14796) (not d!41451) (not b!134772) (not b!135325) (not b!135541) (not d!42107) (not d!41895) (not b!135100) (not bm!14830) (not d!41471) (not d!42203) (not b!134579) (not d!42279) (not b!134818) (not b!135696) (not b!134167) (not b!135445) (not b!135471) (not b!135199) (not d!41015) (not b!134411) (not d!41927) (not d!42305) (not d!42417) (not b!134078) (not b!133978) (not b!134294) (not d!41509) (not b!135123) (not d!42055) b_and!8383 (not b!135466) (not b!134147) (not b!135035) (not d!41677) (not d!41061) (not b!134870) (not b!134375) (not d!40969) (not b!133889) (not d!41437) (not b!134079) (not d!41873) (not b!134688) (not b!135141) (not d!42205) (not b!134848) (not d!41727) (not d!41903) (not bm!14868) (not b!134950) (not d!41635) (not b!135309) (not d!41181) (not d!42247) (not b!134297) (not b_lambda!5961) (not b!134483) (not b!133927) (not b!134221) (not b!135085) (not b!134668) (not b!135570) (not d!41997) (not d!41079) (not b!134431) (not bm!14774) (not d!41197) (not b!135432) (not d!42283) (not b!135061) (not b!135353) (not b!134997) (not b!135110) (not b!135398) (not b_lambda!6029) (not b!134917) (not d!41353) (not b!135208) (not b!134335) (not d!41515) (not b!134519) (not b!135218) (not b!135600) (not d!41567) (not bm!14901) (not b!135634) (not b!134197) (not b!135023) (not b!133967) (not b!135390) (not b!134208) (not bm!14870) (not b!135511) (not b!135378) (not b!134993) (not d!40955) (not d!41603) (not d!41275) (not b!134341) (not b!134196) (not b!134642) (not b!134188) (not d!40901) (not b!133873) (not d!41945) (not bm!14824) (not d!41091) (not b!135464) (not b!134607) (not b!133879) (not d!41175) (not bm!14819) (not b!135230) (not d!41331) (not b!134565) (not b!134988) (not d!42075) (not b!135396) (not b!135555) (not d!41955) (not d!41051) (not d!40983) (not b!134436) (not d!41847) (not d!42315) (not d!41035) (not bm!14787) (not b!135462) (not d!42281) (not b!134777) (not d!41073) (not d!41363) (not d!41501) (not b!134900) (not b!133896) (not bm!14805) (not b!133857) (not d!41907) (not d!42129) (not b!134576) (not d!41005) (not d!41185) (not d!42415) (not d!42127) (not b!134454) (not b!134113) (not b!134443) (not b!135645) (not b!133985) (not b!134305) (not b!134156) (not b!135152) (not b!134944) (not d!41313) (not d!41699) (not d!42041) (not d!42069) (not b_lambda!6037) (not d!41863) (not b!134062) (not b!134862) (not b!134952) (not d!40935) (not d!41491) (not b!134144) (not b!134168) (not b!135040) (not b!134319) (not b!134235) (not d!41247) (not b!134735) (not b!135149) (not d!41199) (not d!41257) (not b!135019) (not bm!14883) (not d!42017) (not bm!14773) (not b!134244) (not b!135368) (not b!134498) (not b!135407) (not d!40919) (not b!135583) (not b_lambda!5989) (not d!41111) (not b!134485) (not d!40997) (not bm!14878) (not b!135674) (not b!135330) (not b!135473) (not b!134488) (not d!41349) (not b!135016) (not b!135304) (not d!41901) (not b!134499) (not b!135181) (not b!135672) (not d!41649) (not d!40959) (not b!134349) (not b!134258) (not b_lambda!5959) (not b!135010) (not b!135627) (not b!133924) (not d!41949) (not d!41161) (not d!42409) (not b!134989) (not b!134559) (not d!41059) (not d!41561) (not bm!14860) (not d!42183) (not b!135262) (not d!42083) (not b!134173) (not d!41297) (not b!135219) (not b!135246) (not b!135226) (not d!42137) (not d!42297) (not b!134859) (not b!134053) (not d!42313) (not b!133837) (not d!42161) (not b!135606) (not b!135031) (not b!135195) (not b!134670) (not d!42039) (not d!41779) (not b!134479) (not b!134423) (not b!135591) (not b!134213) (not b!134903) (not b!135431) (not b!134672) (not b!133891) (not d!41413) (not bm!14786) (not b!134378) (not b!134311) (not b_lambda!5917) (not b!134782) (not b!135576) (not b!134984) (not d!41251) (not b!135545) (not b!135269) (not d!41655) (not d!41539) (not d!41065) (not b!134717) (not b!134811) (not b!135080) (not d!41001) (not b!135394) (not b!135689) (not d!41995) (not b_lambda!5969) (not b!134832) (not b!135364) (not b_lambda!5913) (not d!41877) (not b!135384) (not b!134346) (not b!135240) (not b!134905) (not d!41771) (not d!40977) (not b!135025) (not b!135284) (not b!134858) (not b!134701) (not b!133866) (not d!41269) (not b!134927) (not b_lambda!6053) (not b!134931) (not b!134715) (not b_lambda!5957) (not d!40891) (not d!41855) (not b!135513) (not b_lambda!6023) (not d!42307) (not b!135337) (not d!41717) (not d!42379) (not b!134645) (not d!41789) (not bm!14848) (not b!134280) (not b!135482) (not d!41585) (not b!133906) (not bm!14780) (not b!133920) (not b!134385) (not d!41435) (not b_lambda!5915) (not d!42065) (not b!135597) (not d!41923) (not b!135217) (not d!40911) (not b!134839) (not bm!14794) (not d!42167) (not d!41693) (not b_lambda!5973) (not bm!14778) (not b!134999) (not b!134106) (not d!41707) (not d!41381) (not d!41033) (not b!134040) (not b!134911) (not d!41273) (not d!41999) (not b!134453) (not b!134853) (not d!42369) (not b_next!2921) (not b!135452) (not b!133984) (not b!134343) (not b!135429) (not b_lambda!5911) (not d!41171) (not d!41487) (not b!134912) (not b!134683) (not d!41241) (not b!135323) (not b!135272) (not d!41221) (not d!41853) (not d!41037) (not b_lambda!6045) (not d!42165) (not b!135679) (not d!41163) (not d!41787) (not b!134884) (not b_lambda!5967) (not b!134592) (not b!135236) (not b!133898) (not d!41535) (not b!134534) (not b!135657) (not d!42353) (not b!134072) (not b!135300) (not b!135093) (not b!135522) (not d!42003) (not b!134698) (not b!135091) (not b!134036) (not b!135692) (not d!41725) (not b!135039) (not b!135579) (not d!41581) (not b!134582) (not b!134800) (not d!41105) (not b!134814) (not b!135683) (not d!42073) (not b!134424) (not b!135264) (not d!41819) (not b!134562) (not b!135058) (not b!133916) (not b!134704) (not d!41719) (not d!41813) (not b!135402) (not b!135273) (not b!135083) (not b!134227) (not b!134445) (not b!134553) (not d!41365) (not bm!14880) (not b!134450) (not b!133886) (not b!134133) (not b!134474) (not d!41195) (not b!134702) (not d!41193) (not d!41629) (not b!134462) (not b!135478) (not d!41255) (not b!135518) (not b!134618) (not b!135677) (not d!41153) (not d!41143) (not b!134990) (not d!40921) (not b!133996) (not bm!14847) (not b!135247) (not d!40927) (not bm!14898) (not b!134429) (not d!42185) (not b_lambda!6027) (not b!134269) (not b!134623) (not b!135224) (not b!134588))
(check-sat b_and!8383 b_and!8385 (not b_next!2921) (not b_next!2923))
