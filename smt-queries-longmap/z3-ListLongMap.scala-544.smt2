; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!14262 () Bool)

(assert start!14262)

(declare-fun b!132380 () Bool)

(declare-fun b_free!2917 () Bool)

(declare-fun b_next!2917 () Bool)

(assert (=> b!132380 (= b_free!2917 (not b_next!2917))))

(declare-fun tp!11194 () Bool)

(declare-fun b_and!8181 () Bool)

(assert (=> b!132380 (= tp!11194 b_and!8181)))

(declare-fun b!132384 () Bool)

(declare-fun b_free!2919 () Bool)

(declare-fun b_next!2919 () Bool)

(assert (=> b!132384 (= b_free!2919 (not b_next!2919))))

(declare-fun tp!11195 () Bool)

(declare-fun b_and!8183 () Bool)

(assert (=> b!132384 (= tp!11195 b_and!8183)))

(declare-fun b!132368 () Bool)

(declare-fun e!86299 () Bool)

(declare-fun tp_is_empty!2875 () Bool)

(assert (=> b!132368 (= e!86299 tp_is_empty!2875)))

(declare-fun mapIsEmpty!4637 () Bool)

(declare-fun mapRes!4638 () Bool)

(assert (=> mapIsEmpty!4637 mapRes!4638))

(declare-fun mapIsEmpty!4638 () Bool)

(declare-fun mapRes!4637 () Bool)

(assert (=> mapIsEmpty!4638 mapRes!4637))

(declare-fun b!132370 () Bool)

(declare-fun e!86293 () Bool)

(declare-fun e!86292 () Bool)

(assert (=> b!132370 (= e!86293 (and e!86292 mapRes!4638))))

(declare-fun condMapEmpty!4638 () Bool)

(declare-datatypes ((V!3481 0))(
  ( (V!3482 (val!1482 Int)) )
))
(declare-datatypes ((array!4757 0))(
  ( (array!4758 (arr!2248 (Array (_ BitVec 32) (_ BitVec 64))) (size!2518 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1094 0))(
  ( (ValueCellFull!1094 (v!3191 V!3481)) (EmptyCell!1094) )
))
(declare-datatypes ((array!4759 0))(
  ( (array!4760 (arr!2249 (Array (_ BitVec 32) ValueCell!1094)) (size!2519 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!1096 0))(
  ( (LongMapFixedSize!1097 (defaultEntry!2864 Int) (mask!7163 (_ BitVec 32)) (extraKeys!2629 (_ BitVec 32)) (zeroValue!2719 V!3481) (minValue!2719 V!3481) (_size!597 (_ BitVec 32)) (_keys!4612 array!4757) (_values!2847 array!4759) (_vacant!597 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!880 0))(
  ( (Cell!881 (v!3192 LongMapFixedSize!1096)) )
))
(declare-datatypes ((LongMap!880 0))(
  ( (LongMap!881 (underlying!451 Cell!880)) )
))
(declare-fun thiss!992 () LongMap!880)

(declare-fun mapDefault!4638 () ValueCell!1094)

(assert (=> b!132370 (= condMapEmpty!4638 (= (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4638)))))

(declare-fun b!132371 () Bool)

(declare-fun e!86300 () Bool)

(declare-fun e!86290 () Bool)

(assert (=> b!132371 (= e!86300 e!86290)))

(declare-fun res!63720 () Bool)

(assert (=> b!132371 (=> (not res!63720) (not e!86290))))

(declare-datatypes ((tuple2!2584 0))(
  ( (tuple2!2585 (_1!1303 (_ BitVec 64)) (_2!1303 V!3481)) )
))
(declare-datatypes ((List!1710 0))(
  ( (Nil!1707) (Cons!1706 (h!2311 tuple2!2584) (t!6152 List!1710)) )
))
(declare-datatypes ((ListLongMap!1671 0))(
  ( (ListLongMap!1672 (toList!851 List!1710)) )
))
(declare-fun lt!69004 () ListLongMap!1671)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun lt!69005 () ListLongMap!1671)

(assert (=> b!132371 (= res!63720 (and (= lt!69004 lt!69005) (not (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun newMap!16 () LongMapFixedSize!1096)

(declare-fun map!1391 (LongMapFixedSize!1096) ListLongMap!1671)

(assert (=> b!132371 (= lt!69005 (map!1391 newMap!16))))

(declare-fun getCurrentListMap!519 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) Int) ListLongMap!1671)

(assert (=> b!132371 (= lt!69004 (getCurrentListMap!519 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun mapNonEmpty!4637 () Bool)

(declare-fun tp!11193 () Bool)

(assert (=> mapNonEmpty!4637 (= mapRes!4637 (and tp!11193 e!86299))))

(declare-fun mapKey!4638 () (_ BitVec 32))

(declare-fun mapRest!4638 () (Array (_ BitVec 32) ValueCell!1094))

(declare-fun mapValue!4637 () ValueCell!1094)

(assert (=> mapNonEmpty!4637 (= (arr!2249 (_values!2847 newMap!16)) (store mapRest!4638 mapKey!4638 mapValue!4637))))

(declare-fun b!132372 () Bool)

(declare-fun e!86294 () Bool)

(assert (=> b!132372 (= e!86294 tp_is_empty!2875)))

(declare-fun b!132373 () Bool)

(declare-fun e!86301 () Bool)

(declare-fun e!86298 () Bool)

(assert (=> b!132373 (= e!86301 e!86298)))

(declare-fun b!132374 () Bool)

(declare-fun e!86296 () Bool)

(declare-fun e!86289 () Bool)

(assert (=> b!132374 (= e!86296 (and e!86289 mapRes!4637))))

(declare-fun condMapEmpty!4637 () Bool)

(declare-fun mapDefault!4637 () ValueCell!1094)

(assert (=> b!132374 (= condMapEmpty!4637 (= (arr!2249 (_values!2847 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4637)))))

(declare-fun b!132375 () Bool)

(declare-fun res!63717 () Bool)

(assert (=> b!132375 (=> (not res!63717) (not e!86300))))

(assert (=> b!132375 (= res!63717 (bvsge (bvadd #b00000000000000000000000000000001 (mask!7163 newMap!16)) (_size!597 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!132376 () Bool)

(declare-fun res!63724 () Bool)

(declare-fun e!86297 () Bool)

(assert (=> b!132376 (=> (not res!63724) (not e!86297))))

(assert (=> b!132376 (= res!63724 (and (= (size!2519 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!7163 (v!3192 (underlying!451 thiss!992))))) (= (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (size!2519 (_values!2847 (v!3192 (underlying!451 thiss!992))))) (bvsge (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000000) (bvsge (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun mapNonEmpty!4638 () Bool)

(declare-fun tp!11196 () Bool)

(assert (=> mapNonEmpty!4638 (= mapRes!4638 (and tp!11196 e!86294))))

(declare-fun mapKey!4637 () (_ BitVec 32))

(declare-fun mapValue!4638 () ValueCell!1094)

(declare-fun mapRest!4637 () (Array (_ BitVec 32) ValueCell!1094))

(assert (=> mapNonEmpty!4638 (= (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (store mapRest!4637 mapKey!4637 mapValue!4638))))

(declare-fun b!132377 () Bool)

(declare-fun res!63722 () Bool)

(assert (=> b!132377 (=> (not res!63722) (not e!86297))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4757 (_ BitVec 32)) Bool)

(assert (=> b!132377 (= res!63722 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!132378 () Bool)

(assert (=> b!132378 (= e!86290 e!86297)))

(declare-fun res!63723 () Bool)

(assert (=> b!132378 (=> (not res!63723) (not e!86297))))

(declare-fun contains!886 (ListLongMap!1671 (_ BitVec 64)) Bool)

(assert (=> b!132378 (= res!63723 (contains!886 lt!69005 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-datatypes ((tuple2!2586 0))(
  ( (tuple2!2587 (_1!1304 Bool) (_2!1304 LongMapFixedSize!1096)) )
))
(declare-fun lt!69003 () tuple2!2586)

(declare-fun update!192 (LongMapFixedSize!1096 (_ BitVec 64) V!3481) tuple2!2586)

(declare-fun get!1478 (ValueCell!1094 V!3481) V!3481)

(declare-fun dynLambda!418 (Int (_ BitVec 64)) V!3481)

(assert (=> b!132378 (= lt!69003 (update!192 newMap!16 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!132379 () Bool)

(assert (=> b!132379 (= e!86289 tp_is_empty!2875)))

(declare-fun e!86291 () Bool)

(declare-fun array_inv!1429 (array!4757) Bool)

(declare-fun array_inv!1430 (array!4759) Bool)

(assert (=> b!132380 (= e!86291 (and tp!11194 tp_is_empty!2875 (array_inv!1429 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (array_inv!1430 (_values!2847 (v!3192 (underlying!451 thiss!992)))) e!86293))))

(declare-fun b!132381 () Bool)

(declare-fun res!63725 () Bool)

(assert (=> b!132381 (=> (not res!63725) (not e!86300))))

(assert (=> b!132381 (= res!63725 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!132369 () Bool)

(assert (=> b!132369 (= e!86298 e!86291)))

(declare-fun res!63719 () Bool)

(assert (=> start!14262 (=> (not res!63719) (not e!86300))))

(declare-fun valid!528 (LongMap!880) Bool)

(assert (=> start!14262 (= res!63719 (valid!528 thiss!992))))

(assert (=> start!14262 e!86300))

(assert (=> start!14262 e!86301))

(assert (=> start!14262 true))

(declare-fun e!86295 () Bool)

(assert (=> start!14262 e!86295))

(declare-fun b!132382 () Bool)

(declare-fun res!63716 () Bool)

(assert (=> b!132382 (=> (not res!63716) (not e!86297))))

(declare-datatypes ((List!1711 0))(
  ( (Nil!1708) (Cons!1707 (h!2312 (_ BitVec 64)) (t!6153 List!1711)) )
))
(declare-fun arrayNoDuplicates!0 (array!4757 (_ BitVec 32) List!1711) Bool)

(assert (=> b!132382 (= res!63716 (arrayNoDuplicates!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000000 Nil!1708))))

(declare-fun b!132383 () Bool)

(declare-fun res!63721 () Bool)

(assert (=> b!132383 (=> (not res!63721) (not e!86297))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!132383 (= res!63721 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(assert (=> b!132384 (= e!86295 (and tp!11195 tp_is_empty!2875 (array_inv!1429 (_keys!4612 newMap!16)) (array_inv!1430 (_values!2847 newMap!16)) e!86296))))

(declare-fun b!132385 () Bool)

(declare-fun res!63718 () Bool)

(assert (=> b!132385 (=> (not res!63718) (not e!86300))))

(declare-fun valid!529 (LongMapFixedSize!1096) Bool)

(assert (=> b!132385 (= res!63718 (valid!529 newMap!16))))

(declare-fun b!132386 () Bool)

(assert (=> b!132386 (= e!86297 (or (bvslt (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!132387 () Bool)

(assert (=> b!132387 (= e!86292 tp_is_empty!2875)))

(assert (= (and start!14262 res!63719) b!132381))

(assert (= (and b!132381 res!63725) b!132385))

(assert (= (and b!132385 res!63718) b!132375))

(assert (= (and b!132375 res!63717) b!132371))

(assert (= (and b!132371 res!63720) b!132378))

(assert (= (and b!132378 res!63723) b!132383))

(assert (= (and b!132383 res!63721) b!132376))

(assert (= (and b!132376 res!63724) b!132377))

(assert (= (and b!132377 res!63722) b!132382))

(assert (= (and b!132382 res!63716) b!132386))

(assert (= (and b!132370 condMapEmpty!4638) mapIsEmpty!4637))

(assert (= (and b!132370 (not condMapEmpty!4638)) mapNonEmpty!4638))

(get-info :version)

(assert (= (and mapNonEmpty!4638 ((_ is ValueCellFull!1094) mapValue!4638)) b!132372))

(assert (= (and b!132370 ((_ is ValueCellFull!1094) mapDefault!4638)) b!132387))

(assert (= b!132380 b!132370))

(assert (= b!132369 b!132380))

(assert (= b!132373 b!132369))

(assert (= start!14262 b!132373))

(assert (= (and b!132374 condMapEmpty!4637) mapIsEmpty!4638))

(assert (= (and b!132374 (not condMapEmpty!4637)) mapNonEmpty!4637))

(assert (= (and mapNonEmpty!4637 ((_ is ValueCellFull!1094) mapValue!4637)) b!132368))

(assert (= (and b!132374 ((_ is ValueCellFull!1094) mapDefault!4637)) b!132379))

(assert (= b!132384 b!132374))

(assert (= start!14262 b!132384))

(declare-fun b_lambda!5885 () Bool)

(assert (=> (not b_lambda!5885) (not b!132378)))

(declare-fun t!6149 () Bool)

(declare-fun tb!2405 () Bool)

(assert (=> (and b!132380 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992)))) t!6149) tb!2405))

(declare-fun result!3973 () Bool)

(assert (=> tb!2405 (= result!3973 tp_is_empty!2875)))

(assert (=> b!132378 t!6149))

(declare-fun b_and!8185 () Bool)

(assert (= b_and!8181 (and (=> t!6149 result!3973) b_and!8185)))

(declare-fun t!6151 () Bool)

(declare-fun tb!2407 () Bool)

(assert (=> (and b!132384 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992)))) t!6151) tb!2407))

(declare-fun result!3977 () Bool)

(assert (= result!3977 result!3973))

(assert (=> b!132378 t!6151))

(declare-fun b_and!8187 () Bool)

(assert (= b_and!8183 (and (=> t!6151 result!3977) b_and!8187)))

(declare-fun m!155835 () Bool)

(assert (=> b!132378 m!155835))

(declare-fun m!155837 () Bool)

(assert (=> b!132378 m!155837))

(declare-fun m!155839 () Bool)

(assert (=> b!132378 m!155839))

(declare-fun m!155841 () Bool)

(assert (=> b!132378 m!155841))

(declare-fun m!155843 () Bool)

(assert (=> b!132378 m!155843))

(assert (=> b!132378 m!155841))

(assert (=> b!132378 m!155837))

(assert (=> b!132378 m!155841))

(assert (=> b!132378 m!155839))

(declare-fun m!155845 () Bool)

(assert (=> b!132378 m!155845))

(assert (=> b!132378 m!155835))

(declare-fun m!155847 () Bool)

(assert (=> b!132380 m!155847))

(declare-fun m!155849 () Bool)

(assert (=> b!132380 m!155849))

(declare-fun m!155851 () Bool)

(assert (=> mapNonEmpty!4638 m!155851))

(declare-fun m!155853 () Bool)

(assert (=> b!132385 m!155853))

(declare-fun m!155855 () Bool)

(assert (=> b!132383 m!155855))

(declare-fun m!155857 () Bool)

(assert (=> b!132384 m!155857))

(declare-fun m!155859 () Bool)

(assert (=> b!132384 m!155859))

(assert (=> b!132371 m!155841))

(declare-fun m!155861 () Bool)

(assert (=> b!132371 m!155861))

(declare-fun m!155863 () Bool)

(assert (=> b!132371 m!155863))

(declare-fun m!155865 () Bool)

(assert (=> start!14262 m!155865))

(declare-fun m!155867 () Bool)

(assert (=> b!132377 m!155867))

(declare-fun m!155869 () Bool)

(assert (=> b!132382 m!155869))

(declare-fun m!155871 () Bool)

(assert (=> mapNonEmpty!4637 m!155871))

(check-sat (not b!132383) (not b_next!2917) tp_is_empty!2875 (not b!132382) (not b!132371) (not mapNonEmpty!4637) (not mapNonEmpty!4638) (not b!132380) (not b!132385) (not b!132377) (not b!132378) (not b_next!2919) (not b_lambda!5885) (not b!132384) (not start!14262) b_and!8185 b_and!8187)
(check-sat b_and!8185 b_and!8187 (not b_next!2917) (not b_next!2919))
(get-model)

(declare-fun b_lambda!5891 () Bool)

(assert (= b_lambda!5885 (or (and b!132380 b_free!2917) (and b!132384 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))))) b_lambda!5891)))

(check-sat (not b!132383) (not b_next!2917) tp_is_empty!2875 (not b_lambda!5891) (not b!132382) (not b!132371) (not mapNonEmpty!4637) (not mapNonEmpty!4638) (not b!132380) (not b!132385) (not b!132377) (not b!132378) (not b_next!2919) (not b!132384) (not start!14262) b_and!8185 b_and!8187)
(check-sat b_and!8185 b_and!8187 (not b_next!2917) (not b_next!2919))
(get-model)

(declare-fun d!40263 () Bool)

(declare-fun e!86397 () Bool)

(assert (=> d!40263 e!86397))

(declare-fun res!63788 () Bool)

(assert (=> d!40263 (=> res!63788 e!86397)))

(declare-fun lt!69033 () Bool)

(assert (=> d!40263 (= res!63788 (not lt!69033))))

(declare-fun lt!69035 () Bool)

(assert (=> d!40263 (= lt!69033 lt!69035)))

(declare-datatypes ((Unit!4132 0))(
  ( (Unit!4133) )
))
(declare-fun lt!69032 () Unit!4132)

(declare-fun e!86398 () Unit!4132)

(assert (=> d!40263 (= lt!69032 e!86398)))

(declare-fun c!24496 () Bool)

(assert (=> d!40263 (= c!24496 lt!69035)))

(declare-fun containsKey!174 (List!1710 (_ BitVec 64)) Bool)

(assert (=> d!40263 (= lt!69035 (containsKey!174 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> d!40263 (= (contains!886 lt!69005 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) lt!69033)))

(declare-fun b!132520 () Bool)

(declare-fun lt!69034 () Unit!4132)

(assert (=> b!132520 (= e!86398 lt!69034)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!123 (List!1710 (_ BitVec 64)) Unit!4132)

(assert (=> b!132520 (= lt!69034 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-datatypes ((Option!176 0))(
  ( (Some!175 (v!3198 V!3481)) (None!174) )
))
(declare-fun isDefined!124 (Option!176) Bool)

(declare-fun getValueByKey!170 (List!1710 (_ BitVec 64)) Option!176)

(assert (=> b!132520 (isDefined!124 (getValueByKey!170 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!132521 () Bool)

(declare-fun Unit!4134 () Unit!4132)

(assert (=> b!132521 (= e!86398 Unit!4134)))

(declare-fun b!132522 () Bool)

(assert (=> b!132522 (= e!86397 (isDefined!124 (getValueByKey!170 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(assert (= (and d!40263 c!24496) b!132520))

(assert (= (and d!40263 (not c!24496)) b!132521))

(assert (= (and d!40263 (not res!63788)) b!132522))

(assert (=> d!40263 m!155841))

(declare-fun m!155949 () Bool)

(assert (=> d!40263 m!155949))

(assert (=> b!132520 m!155841))

(declare-fun m!155951 () Bool)

(assert (=> b!132520 m!155951))

(assert (=> b!132520 m!155841))

(declare-fun m!155953 () Bool)

(assert (=> b!132520 m!155953))

(assert (=> b!132520 m!155953))

(declare-fun m!155955 () Bool)

(assert (=> b!132520 m!155955))

(assert (=> b!132522 m!155841))

(assert (=> b!132522 m!155953))

(assert (=> b!132522 m!155953))

(assert (=> b!132522 m!155955))

(assert (=> b!132378 d!40263))

(declare-fun b!132603 () Bool)

(declare-fun e!86452 () Bool)

(declare-fun e!86453 () Bool)

(assert (=> b!132603 (= e!86452 e!86453)))

(declare-fun c!24528 () Bool)

(declare-fun lt!69115 () tuple2!2586)

(assert (=> b!132603 (= c!24528 (_1!1304 lt!69115))))

(declare-fun b!132604 () Bool)

(declare-fun lt!69106 () Unit!4132)

(declare-fun e!86459 () Unit!4132)

(assert (=> b!132604 (= lt!69106 e!86459)))

(declare-fun c!24534 () Bool)

(declare-fun call!14578 () Bool)

(assert (=> b!132604 (= c!24534 call!14578)))

(declare-fun e!86448 () tuple2!2586)

(assert (=> b!132604 (= e!86448 (tuple2!2587 false newMap!16))))

(declare-fun b!132605 () Bool)

(declare-fun e!86442 () tuple2!2586)

(assert (=> b!132605 (= e!86442 e!86448)))

(declare-datatypes ((SeekEntryResult!278 0))(
  ( (MissingZero!278 (index!3272 (_ BitVec 32))) (Found!278 (index!3273 (_ BitVec 32))) (Intermediate!278 (undefined!1090 Bool) (index!3274 (_ BitVec 32)) (x!15594 (_ BitVec 32))) (Undefined!278) (MissingVacant!278 (index!3275 (_ BitVec 32))) )
))
(declare-fun lt!69116 () SeekEntryResult!278)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4757 (_ BitVec 32)) SeekEntryResult!278)

(assert (=> b!132605 (= lt!69116 (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(declare-fun c!24526 () Bool)

(assert (=> b!132605 (= c!24526 ((_ is Undefined!278) lt!69116))))

(declare-fun bm!14574 () Bool)

(declare-fun call!14585 () ListLongMap!1671)

(assert (=> bm!14574 (= call!14585 (map!1391 newMap!16))))

(declare-fun b!132606 () Bool)

(declare-fun e!86451 () Unit!4132)

(declare-fun lt!69109 () Unit!4132)

(assert (=> b!132606 (= e!86451 lt!69109)))

(declare-fun call!14596 () Unit!4132)

(assert (=> b!132606 (= lt!69109 call!14596)))

(declare-fun lt!69101 () SeekEntryResult!278)

(declare-fun call!14579 () SeekEntryResult!278)

(assert (=> b!132606 (= lt!69101 call!14579)))

(declare-fun res!63828 () Bool)

(assert (=> b!132606 (= res!63828 ((_ is Found!278) lt!69101))))

(declare-fun e!86441 () Bool)

(assert (=> b!132606 (=> (not res!63828) (not e!86441))))

(assert (=> b!132606 e!86441))

(declare-fun bm!14575 () Bool)

(declare-fun c!24531 () Bool)

(assert (=> bm!14575 (= c!24531 c!24526)))

(declare-fun e!86457 () ListLongMap!1671)

(assert (=> bm!14575 (= call!14578 (contains!886 e!86457 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!132607 () Bool)

(declare-fun e!86449 () Bool)

(declare-fun lt!69096 () SeekEntryResult!278)

(assert (=> b!132607 (= e!86449 ((_ is Undefined!278) lt!69096))))

(declare-fun b!132608 () Bool)

(declare-fun e!86461 () tuple2!2586)

(assert (=> b!132608 (= e!86442 e!86461)))

(declare-fun c!24530 () Bool)

(assert (=> b!132608 (= c!24530 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!14595 () ListLongMap!1671)

(declare-fun c!24523 () Bool)

(declare-fun call!14580 () ListLongMap!1671)

(declare-fun call!14599 () ListLongMap!1671)

(declare-fun bm!14576 () Bool)

(declare-fun +!163 (ListLongMap!1671 tuple2!2584) ListLongMap!1671)

(assert (=> bm!14576 (= call!14595 (+!163 (ite c!24523 call!14580 call!14599) (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!132609 () Bool)

(declare-fun e!86447 () Bool)

(declare-fun e!86458 () Bool)

(assert (=> b!132609 (= e!86447 e!86458)))

(declare-fun res!63826 () Bool)

(declare-fun call!14582 () Bool)

(assert (=> b!132609 (= res!63826 call!14582)))

(assert (=> b!132609 (=> (not res!63826) (not e!86458))))

(declare-fun b!132610 () Bool)

(declare-fun c!24524 () Bool)

(declare-fun lt!69092 () SeekEntryResult!278)

(assert (=> b!132610 (= c!24524 ((_ is MissingVacant!278) lt!69092))))

(declare-fun e!86460 () Bool)

(assert (=> b!132610 (= e!86460 e!86447)))

(declare-fun b!132611 () Bool)

(declare-fun res!63821 () Bool)

(assert (=> b!132611 (= res!63821 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3275 lt!69092)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132611 (=> (not res!63821) (not e!86458))))

(declare-fun bm!14577 () Bool)

(declare-fun call!14588 () Bool)

(declare-fun call!14577 () Bool)

(assert (=> bm!14577 (= call!14588 call!14577)))

(declare-fun call!14592 () ListLongMap!1671)

(declare-fun bm!14578 () Bool)

(assert (=> bm!14578 (= call!14592 (getCurrentListMap!519 (_keys!4612 newMap!16) (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun bm!14579 () Bool)

(declare-fun call!14600 () SeekEntryResult!278)

(declare-fun call!14584 () SeekEntryResult!278)

(assert (=> bm!14579 (= call!14600 call!14584)))

(declare-fun bm!14580 () Bool)

(assert (=> bm!14580 (= call!14580 call!14592)))

(declare-fun bm!14581 () Bool)

(declare-fun call!14589 () ListLongMap!1671)

(assert (=> bm!14581 (= call!14589 call!14592)))

(declare-fun b!132612 () Bool)

(declare-fun lt!69099 () tuple2!2586)

(declare-fun call!14591 () tuple2!2586)

(assert (=> b!132612 (= lt!69099 call!14591)))

(declare-fun e!86444 () tuple2!2586)

(assert (=> b!132612 (= e!86444 (tuple2!2587 (_1!1304 lt!69099) (_2!1304 lt!69099)))))

(declare-fun b!132613 () Bool)

(declare-fun e!86443 () Bool)

(assert (=> b!132613 (= e!86449 e!86443)))

(declare-fun res!63830 () Bool)

(declare-fun call!14598 () Bool)

(assert (=> b!132613 (= res!63830 call!14598)))

(assert (=> b!132613 (=> (not res!63830) (not e!86443))))

(declare-fun bm!14582 () Bool)

(declare-fun call!14597 () Bool)

(assert (=> bm!14582 (= call!14597 call!14577)))

(declare-fun b!132614 () Bool)

(declare-fun res!63820 () Bool)

(declare-fun e!86450 () Bool)

(assert (=> b!132614 (=> (not res!63820) (not e!86450))))

(assert (=> b!132614 (= res!63820 call!14582)))

(assert (=> b!132614 (= e!86460 e!86450)))

(declare-fun b!132615 () Bool)

(assert (=> b!132615 (= e!86441 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69101)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun bm!14583 () Bool)

(assert (=> bm!14583 (= call!14584 (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(declare-fun bm!14584 () Bool)

(declare-fun call!14586 () ListLongMap!1671)

(assert (=> bm!14584 (= call!14586 call!14599)))

(declare-fun b!132616 () Bool)

(declare-fun c!24529 () Bool)

(assert (=> b!132616 (= c!24529 ((_ is MissingVacant!278) lt!69096))))

(declare-fun e!86455 () Bool)

(assert (=> b!132616 (= e!86455 e!86449)))

(declare-fun b!132617 () Bool)

(declare-fun call!14590 () Bool)

(assert (=> b!132617 (= e!86450 (not call!14590))))

(declare-fun bm!14585 () Bool)

(assert (=> bm!14585 (= call!14582 call!14588)))

(declare-fun b!132618 () Bool)

(declare-fun res!63818 () Bool)

(assert (=> b!132618 (= res!63818 call!14588)))

(assert (=> b!132618 (=> (not res!63818) (not e!86441))))

(declare-fun b!132619 () Bool)

(declare-fun res!63827 () Bool)

(assert (=> b!132619 (=> (not res!63827) (not e!86450))))

(assert (=> b!132619 (= res!63827 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3272 lt!69092)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!69098 () (_ BitVec 32))

(declare-fun lt!69102 () (_ BitVec 32))

(declare-fun bm!14586 () Bool)

(assert (=> bm!14586 (= call!14599 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!132620 () Bool)

(declare-fun res!63823 () Bool)

(declare-fun e!86454 () Bool)

(assert (=> b!132620 (=> (not res!63823) (not e!86454))))

(assert (=> b!132620 (= res!63823 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3272 lt!69096)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!14587 () Bool)

(declare-fun call!14593 () Bool)

(assert (=> bm!14587 (= call!14590 call!14593)))

(declare-fun c!24525 () Bool)

(declare-fun bm!14588 () Bool)

(declare-fun lt!69093 () SeekEntryResult!278)

(declare-fun c!24535 () Bool)

(declare-fun c!24532 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!14588 (= call!14577 (inRange!0 (ite c!24526 (ite c!24534 (index!3273 lt!69093) (ite c!24535 (index!3272 lt!69096) (index!3275 lt!69096))) (ite c!24525 (index!3273 lt!69101) (ite c!24532 (index!3272 lt!69092) (index!3275 lt!69092)))) (mask!7163 newMap!16)))))

(declare-fun b!132621 () Bool)

(declare-fun c!24527 () Bool)

(assert (=> b!132621 (= c!24527 ((_ is MissingVacant!278) lt!69116))))

(declare-fun e!86446 () tuple2!2586)

(assert (=> b!132621 (= e!86448 e!86446)))

(declare-fun b!132622 () Bool)

(declare-fun Unit!4135 () Unit!4132)

(assert (=> b!132622 (= e!86459 Unit!4135)))

(declare-fun lt!69107 () Unit!4132)

(assert (=> b!132622 (= lt!69107 call!14596)))

(assert (=> b!132622 (= lt!69093 call!14600)))

(declare-fun res!63819 () Bool)

(assert (=> b!132622 (= res!63819 ((_ is Found!278) lt!69093))))

(declare-fun e!86445 () Bool)

(assert (=> b!132622 (=> (not res!63819) (not e!86445))))

(assert (=> b!132622 e!86445))

(declare-fun lt!69111 () Unit!4132)

(assert (=> b!132622 (= lt!69111 lt!69107)))

(assert (=> b!132622 false))

(declare-fun bm!14589 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 64) Int) Unit!4132)

(assert (=> bm!14589 (= call!14596 (lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)))))

(declare-fun call!14583 () ListLongMap!1671)

(declare-fun e!86456 () Bool)

(declare-fun b!132623 () Bool)

(assert (=> b!132623 (= e!86456 (= call!14583 (+!163 call!14585 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14590 () Bool)

(declare-fun call!14581 () Bool)

(assert (=> bm!14590 (= call!14581 call!14593)))

(declare-fun b!132624 () Bool)

(declare-fun res!63824 () Bool)

(assert (=> b!132624 (=> (not res!63824) (not e!86454))))

(assert (=> b!132624 (= res!63824 call!14598)))

(assert (=> b!132624 (= e!86455 e!86454)))

(declare-fun bm!14591 () Bool)

(declare-fun updateHelperNewKey!61 (LongMapFixedSize!1096 (_ BitVec 64) V!3481 (_ BitVec 32)) tuple2!2586)

(assert (=> bm!14591 (= call!14591 (updateHelperNewKey!61 newMap!16 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))))))

(declare-fun b!132625 () Bool)

(declare-fun lt!69110 () Unit!4132)

(assert (=> b!132625 (= e!86459 lt!69110)))

(declare-fun call!14587 () Unit!4132)

(assert (=> b!132625 (= lt!69110 call!14587)))

(assert (=> b!132625 (= lt!69096 call!14600)))

(assert (=> b!132625 (= c!24535 ((_ is MissingZero!278) lt!69096))))

(assert (=> b!132625 e!86455))

(declare-fun bm!14592 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 64) Int) Unit!4132)

(assert (=> bm!14592 (= call!14587 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)))))

(declare-fun b!132626 () Bool)

(declare-fun Unit!4136 () Unit!4132)

(assert (=> b!132626 (= e!86451 Unit!4136)))

(declare-fun lt!69097 () Unit!4132)

(assert (=> b!132626 (= lt!69097 call!14587)))

(assert (=> b!132626 (= lt!69092 call!14579)))

(assert (=> b!132626 (= c!24532 ((_ is MissingZero!278) lt!69092))))

(assert (=> b!132626 e!86460))

(declare-fun lt!69100 () Unit!4132)

(assert (=> b!132626 (= lt!69100 lt!69097)))

(assert (=> b!132626 false))

(declare-fun b!132627 () Bool)

(declare-fun lt!69112 () tuple2!2586)

(assert (=> b!132627 (= e!86446 (tuple2!2587 (_1!1304 lt!69112) (_2!1304 lt!69112)))))

(assert (=> b!132627 (= lt!69112 call!14591)))

(declare-fun b!132628 () Bool)

(declare-fun lt!69091 () Unit!4132)

(declare-fun lt!69105 () Unit!4132)

(assert (=> b!132628 (= lt!69091 lt!69105)))

(declare-fun call!14594 () ListLongMap!1671)

(assert (=> b!132628 (= call!14594 call!14586)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!61 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 V!3481 Int) Unit!4132)

(assert (=> b!132628 (= lt!69105 (lemmaChangeZeroKeyThenAddPairToListMap!61 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) lt!69098 (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) (defaultEntry!2864 newMap!16)))))

(assert (=> b!132628 (= lt!69098 (bvor (extraKeys!2629 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!132628 (= e!86461 (tuple2!2587 true (LongMapFixedSize!1097 (defaultEntry!2864 newMap!16) (mask!7163 newMap!16) (bvor (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) (_size!597 newMap!16) (_keys!4612 newMap!16) (_values!2847 newMap!16) (_vacant!597 newMap!16))))))

(declare-fun b!132629 () Bool)

(declare-fun lt!69108 () Unit!4132)

(declare-fun lt!69103 () Unit!4132)

(assert (=> b!132629 (= lt!69108 lt!69103)))

(assert (=> b!132629 (= call!14594 call!14586)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!61 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 V!3481 Int) Unit!4132)

(assert (=> b!132629 (= lt!69103 (lemmaChangeLongMinValueKeyThenAddPairToListMap!61 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) lt!69102 (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)))))

(assert (=> b!132629 (= lt!69102 (bvor (extraKeys!2629 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!132629 (= e!86461 (tuple2!2587 true (LongMapFixedSize!1097 (defaultEntry!2864 newMap!16) (mask!7163 newMap!16) (bvor (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!597 newMap!16) (_keys!4612 newMap!16) (_values!2847 newMap!16) (_vacant!597 newMap!16))))))

(declare-fun bm!14593 () Bool)

(assert (=> bm!14593 (= call!14583 (map!1391 (_2!1304 lt!69115)))))

(declare-fun b!132630 () Bool)

(declare-fun res!63825 () Bool)

(assert (=> b!132630 (= res!63825 call!14597)))

(assert (=> b!132630 (=> (not res!63825) (not e!86445))))

(declare-fun bm!14594 () Bool)

(assert (=> bm!14594 (= call!14579 call!14584)))

(declare-fun b!132631 () Bool)

(assert (=> b!132631 (= e!86446 e!86444)))

(declare-fun c!24533 () Bool)

(assert (=> b!132631 (= c!24533 ((_ is MissingZero!278) lt!69116))))

(declare-fun bm!14595 () Bool)

(assert (=> bm!14595 (= call!14594 call!14595)))

(declare-fun b!132632 () Bool)

(assert (=> b!132632 (= e!86454 (not call!14581))))

(declare-fun b!132633 () Bool)

(assert (=> b!132633 (= e!86453 (= call!14583 call!14585))))

(declare-fun b!132634 () Bool)

(assert (=> b!132634 (= e!86443 (not call!14581))))

(declare-fun bm!14596 () Bool)

(assert (=> bm!14596 (= call!14598 call!14597)))

(declare-fun b!132635 () Bool)

(declare-fun lt!69095 () Unit!4132)

(declare-fun lt!69104 () Unit!4132)

(assert (=> b!132635 (= lt!69095 lt!69104)))

(declare-fun lt!69094 () array!4759)

(assert (=> b!132635 (contains!886 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116)))))

(declare-fun lemmaValidKeyInArrayIsInListMap!120 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) Int) Unit!4132)

(assert (=> b!132635 (= lt!69104 (lemmaValidKeyInArrayIsInListMap!120 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3273 lt!69116) (defaultEntry!2864 newMap!16)))))

(assert (=> b!132635 (= lt!69094 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))))

(declare-fun lt!69113 () Unit!4132)

(declare-fun lt!69114 () Unit!4132)

(assert (=> b!132635 (= lt!69113 lt!69114)))

(assert (=> b!132635 (= call!14595 call!14589)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!61 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) (_ BitVec 64) V!3481 Int) Unit!4132)

(assert (=> b!132635 (= lt!69114 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!61 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3273 lt!69116) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69090 () Unit!4132)

(assert (=> b!132635 (= lt!69090 e!86451)))

(assert (=> b!132635 (= c!24525 call!14578)))

(assert (=> b!132635 (= e!86444 (tuple2!2587 true (LongMapFixedSize!1097 (defaultEntry!2864 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (_size!597 newMap!16) (_keys!4612 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (_vacant!597 newMap!16))))))

(declare-fun b!132636 () Bool)

(assert (=> b!132636 (= e!86447 ((_ is Undefined!278) lt!69092))))

(declare-fun d!40265 () Bool)

(assert (=> d!40265 e!86452))

(declare-fun res!63829 () Bool)

(assert (=> d!40265 (=> (not res!63829) (not e!86452))))

(assert (=> d!40265 (= res!63829 (valid!529 (_2!1304 lt!69115)))))

(assert (=> d!40265 (= lt!69115 e!86442)))

(assert (=> d!40265 (= c!24523 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (bvneg (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(assert (=> d!40265 (valid!529 newMap!16)))

(assert (=> d!40265 (= (update!192 newMap!16 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!69115)))

(declare-fun b!132637 () Bool)

(assert (=> b!132637 (= e!86458 (not call!14590))))

(declare-fun b!132638 () Bool)

(assert (=> b!132638 (= e!86445 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69093)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!132639 () Bool)

(assert (=> b!132639 (= e!86453 e!86456)))

(declare-fun res!63822 () Bool)

(assert (=> b!132639 (= res!63822 (contains!886 call!14583 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> b!132639 (=> (not res!63822) (not e!86456))))

(declare-fun bm!14597 () Bool)

(declare-fun arrayContainsKey!0 (array!4757 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> bm!14597 (= call!14593 (arrayContainsKey!0 (_keys!4612 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!132640 () Bool)

(assert (=> b!132640 (= e!86457 call!14599)))

(declare-fun b!132641 () Bool)

(declare-fun res!63817 () Bool)

(assert (=> b!132641 (= res!63817 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3275 lt!69096)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132641 (=> (not res!63817) (not e!86443))))

(declare-fun b!132642 () Bool)

(assert (=> b!132642 (= e!86457 call!14589)))

(assert (= (and d!40265 c!24523) b!132608))

(assert (= (and d!40265 (not c!24523)) b!132605))

(assert (= (and b!132608 c!24530) b!132628))

(assert (= (and b!132608 (not c!24530)) b!132629))

(assert (= (or b!132628 b!132629) bm!14584))

(assert (= (or b!132628 b!132629) bm!14580))

(assert (= (or b!132628 b!132629) bm!14595))

(assert (= (and b!132605 c!24526) b!132604))

(assert (= (and b!132605 (not c!24526)) b!132621))

(assert (= (and b!132604 c!24534) b!132622))

(assert (= (and b!132604 (not c!24534)) b!132625))

(assert (= (and b!132622 res!63819) b!132630))

(assert (= (and b!132630 res!63825) b!132638))

(assert (= (and b!132625 c!24535) b!132624))

(assert (= (and b!132625 (not c!24535)) b!132616))

(assert (= (and b!132624 res!63824) b!132620))

(assert (= (and b!132620 res!63823) b!132632))

(assert (= (and b!132616 c!24529) b!132613))

(assert (= (and b!132616 (not c!24529)) b!132607))

(assert (= (and b!132613 res!63830) b!132641))

(assert (= (and b!132641 res!63817) b!132634))

(assert (= (or b!132624 b!132613) bm!14596))

(assert (= (or b!132632 b!132634) bm!14590))

(assert (= (or b!132630 bm!14596) bm!14582))

(assert (= (or b!132622 b!132625) bm!14579))

(assert (= (and b!132621 c!24527) b!132627))

(assert (= (and b!132621 (not c!24527)) b!132631))

(assert (= (and b!132631 c!24533) b!132612))

(assert (= (and b!132631 (not c!24533)) b!132635))

(assert (= (and b!132635 c!24525) b!132606))

(assert (= (and b!132635 (not c!24525)) b!132626))

(assert (= (and b!132606 res!63828) b!132618))

(assert (= (and b!132618 res!63818) b!132615))

(assert (= (and b!132626 c!24532) b!132614))

(assert (= (and b!132626 (not c!24532)) b!132610))

(assert (= (and b!132614 res!63820) b!132619))

(assert (= (and b!132619 res!63827) b!132617))

(assert (= (and b!132610 c!24524) b!132609))

(assert (= (and b!132610 (not c!24524)) b!132636))

(assert (= (and b!132609 res!63826) b!132611))

(assert (= (and b!132611 res!63821) b!132637))

(assert (= (or b!132614 b!132609) bm!14585))

(assert (= (or b!132617 b!132637) bm!14587))

(assert (= (or b!132618 bm!14585) bm!14577))

(assert (= (or b!132606 b!132626) bm!14594))

(assert (= (or b!132627 b!132612) bm!14591))

(assert (= (or b!132622 b!132606) bm!14589))

(assert (= (or bm!14579 bm!14594) bm!14583))

(assert (= (or bm!14582 bm!14577) bm!14588))

(assert (= (or bm!14590 bm!14587) bm!14597))

(assert (= (or b!132625 b!132626) bm!14592))

(assert (= (or b!132604 b!132635) bm!14581))

(assert (= (or b!132604 b!132635) bm!14575))

(assert (= (and bm!14575 c!24531) b!132642))

(assert (= (and bm!14575 (not c!24531)) b!132640))

(assert (= (or bm!14580 bm!14581) bm!14578))

(assert (= (or bm!14584 b!132635 b!132640) bm!14586))

(assert (= (or bm!14595 b!132635) bm!14576))

(assert (= (and d!40265 res!63829) b!132603))

(assert (= (and b!132603 c!24528) b!132639))

(assert (= (and b!132603 (not c!24528)) b!132633))

(assert (= (and b!132639 res!63822) b!132623))

(assert (= (or b!132639 b!132623 b!132633) bm!14593))

(assert (= (or b!132623 b!132633) bm!14574))

(declare-fun m!155957 () Bool)

(assert (=> b!132619 m!155957))

(assert (=> b!132628 m!155839))

(declare-fun m!155959 () Bool)

(assert (=> b!132628 m!155959))

(assert (=> b!132605 m!155841))

(declare-fun m!155961 () Bool)

(assert (=> b!132605 m!155961))

(declare-fun m!155963 () Bool)

(assert (=> b!132641 m!155963))

(declare-fun m!155965 () Bool)

(assert (=> b!132635 m!155965))

(declare-fun m!155967 () Bool)

(assert (=> b!132635 m!155967))

(assert (=> b!132635 m!155841))

(assert (=> b!132635 m!155839))

(declare-fun m!155969 () Bool)

(assert (=> b!132635 m!155969))

(declare-fun m!155971 () Bool)

(assert (=> b!132635 m!155971))

(declare-fun m!155973 () Bool)

(assert (=> b!132635 m!155973))

(assert (=> b!132635 m!155965))

(assert (=> b!132635 m!155971))

(declare-fun m!155975 () Bool)

(assert (=> b!132635 m!155975))

(declare-fun m!155977 () Bool)

(assert (=> d!40265 m!155977))

(assert (=> d!40265 m!155853))

(declare-fun m!155979 () Bool)

(assert (=> b!132623 m!155979))

(assert (=> bm!14575 m!155841))

(declare-fun m!155981 () Bool)

(assert (=> bm!14575 m!155981))

(declare-fun m!155983 () Bool)

(assert (=> bm!14586 m!155983))

(assert (=> bm!14589 m!155841))

(declare-fun m!155985 () Bool)

(assert (=> bm!14589 m!155985))

(assert (=> bm!14574 m!155861))

(assert (=> bm!14597 m!155841))

(declare-fun m!155987 () Bool)

(assert (=> bm!14597 m!155987))

(declare-fun m!155989 () Bool)

(assert (=> b!132611 m!155989))

(declare-fun m!155991 () Bool)

(assert (=> b!132615 m!155991))

(assert (=> bm!14592 m!155841))

(declare-fun m!155993 () Bool)

(assert (=> bm!14592 m!155993))

(declare-fun m!155995 () Bool)

(assert (=> bm!14576 m!155995))

(assert (=> bm!14591 m!155841))

(assert (=> bm!14591 m!155839))

(declare-fun m!155997 () Bool)

(assert (=> bm!14591 m!155997))

(declare-fun m!155999 () Bool)

(assert (=> b!132620 m!155999))

(assert (=> bm!14578 m!155973))

(declare-fun m!156001 () Bool)

(assert (=> bm!14578 m!156001))

(assert (=> bm!14583 m!155841))

(assert (=> bm!14583 m!155961))

(declare-fun m!156003 () Bool)

(assert (=> b!132638 m!156003))

(declare-fun m!156005 () Bool)

(assert (=> bm!14588 m!156005))

(assert (=> b!132639 m!155841))

(declare-fun m!156007 () Bool)

(assert (=> b!132639 m!156007))

(assert (=> b!132629 m!155839))

(declare-fun m!156009 () Bool)

(assert (=> b!132629 m!156009))

(declare-fun m!156011 () Bool)

(assert (=> bm!14593 m!156011))

(assert (=> b!132378 d!40265))

(declare-fun d!40267 () Bool)

(declare-fun c!24538 () Bool)

(assert (=> d!40267 (= c!24538 ((_ is ValueCellFull!1094) (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun e!86464 () V!3481)

(assert (=> d!40267 (= (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!86464)))

(declare-fun b!132647 () Bool)

(declare-fun get!1480 (ValueCell!1094 V!3481) V!3481)

(assert (=> b!132647 (= e!86464 (get!1480 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!132648 () Bool)

(declare-fun get!1481 (ValueCell!1094 V!3481) V!3481)

(assert (=> b!132648 (= e!86464 (get!1481 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40267 c!24538) b!132647))

(assert (= (and d!40267 (not c!24538)) b!132648))

(assert (=> b!132647 m!155835))

(assert (=> b!132647 m!155837))

(declare-fun m!156013 () Bool)

(assert (=> b!132647 m!156013))

(assert (=> b!132648 m!155835))

(assert (=> b!132648 m!155837))

(declare-fun m!156015 () Bool)

(assert (=> b!132648 m!156015))

(assert (=> b!132378 d!40267))

(declare-fun d!40269 () Bool)

(assert (=> d!40269 (= (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992)))) (and (or (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000001111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000011111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000001111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000011111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000001111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000011111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000001111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000011111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000111111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000001111111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000011111111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000111111111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000001111111111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000011111111111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000111111111111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000001111111111111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000011111111111111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000111111111111111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000001111111111111111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000011111111111111111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000111111111111111111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00001111111111111111111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00011111111111111111111111111111) (= (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!132383 d!40269))

(declare-fun b!132657 () Bool)

(declare-fun e!86471 () Bool)

(declare-fun call!14603 () Bool)

(assert (=> b!132657 (= e!86471 call!14603)))

(declare-fun b!132658 () Bool)

(declare-fun e!86472 () Bool)

(assert (=> b!132658 (= e!86472 e!86471)))

(declare-fun lt!69123 () (_ BitVec 64))

(assert (=> b!132658 (= lt!69123 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!69125 () Unit!4132)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4757 (_ BitVec 64) (_ BitVec 32)) Unit!4132)

(assert (=> b!132658 (= lt!69125 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69123 #b00000000000000000000000000000000))))

(assert (=> b!132658 (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69123 #b00000000000000000000000000000000)))

(declare-fun lt!69124 () Unit!4132)

(assert (=> b!132658 (= lt!69124 lt!69125)))

(declare-fun res!63836 () Bool)

(assert (=> b!132658 (= res!63836 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (Found!278 #b00000000000000000000000000000000)))))

(assert (=> b!132658 (=> (not res!63836) (not e!86471))))

(declare-fun d!40271 () Bool)

(declare-fun res!63835 () Bool)

(declare-fun e!86473 () Bool)

(assert (=> d!40271 (=> res!63835 e!86473)))

(assert (=> d!40271 (= res!63835 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!40271 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) e!86473)))

(declare-fun b!132659 () Bool)

(assert (=> b!132659 (= e!86473 e!86472)))

(declare-fun c!24541 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!132659 (= c!24541 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!132660 () Bool)

(assert (=> b!132660 (= e!86472 call!14603)))

(declare-fun bm!14600 () Bool)

(assert (=> bm!14600 (= call!14603 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(assert (= (and d!40271 (not res!63835)) b!132659))

(assert (= (and b!132659 c!24541) b!132658))

(assert (= (and b!132659 (not c!24541)) b!132660))

(assert (= (and b!132658 res!63836) b!132657))

(assert (= (or b!132657 b!132660) bm!14600))

(declare-fun m!156017 () Bool)

(assert (=> b!132658 m!156017))

(declare-fun m!156019 () Bool)

(assert (=> b!132658 m!156019))

(declare-fun m!156021 () Bool)

(assert (=> b!132658 m!156021))

(assert (=> b!132658 m!156017))

(declare-fun m!156023 () Bool)

(assert (=> b!132658 m!156023))

(assert (=> b!132659 m!156017))

(assert (=> b!132659 m!156017))

(declare-fun m!156025 () Bool)

(assert (=> b!132659 m!156025))

(declare-fun m!156027 () Bool)

(assert (=> bm!14600 m!156027))

(assert (=> b!132377 d!40271))

(declare-fun b!132671 () Bool)

(declare-fun e!86485 () Bool)

(declare-fun e!86482 () Bool)

(assert (=> b!132671 (= e!86485 e!86482)))

(declare-fun res!63843 () Bool)

(assert (=> b!132671 (=> (not res!63843) (not e!86482))))

(declare-fun e!86483 () Bool)

(assert (=> b!132671 (= res!63843 (not e!86483))))

(declare-fun res!63845 () Bool)

(assert (=> b!132671 (=> (not res!63845) (not e!86483))))

(assert (=> b!132671 (= res!63845 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!14603 () Bool)

(declare-fun call!14606 () Bool)

(declare-fun c!24544 () Bool)

(assert (=> bm!14603 (= call!14606 (arrayNoDuplicates!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)))))

(declare-fun d!40273 () Bool)

(declare-fun res!63844 () Bool)

(assert (=> d!40273 (=> res!63844 e!86485)))

(assert (=> d!40273 (= res!63844 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!40273 (= (arrayNoDuplicates!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000000 Nil!1708) e!86485)))

(declare-fun b!132672 () Bool)

(declare-fun e!86484 () Bool)

(assert (=> b!132672 (= e!86484 call!14606)))

(declare-fun b!132673 () Bool)

(declare-fun contains!888 (List!1711 (_ BitVec 64)) Bool)

(assert (=> b!132673 (= e!86483 (contains!888 Nil!1708 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!132674 () Bool)

(assert (=> b!132674 (= e!86482 e!86484)))

(assert (=> b!132674 (= c!24544 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!132675 () Bool)

(assert (=> b!132675 (= e!86484 call!14606)))

(assert (= (and d!40273 (not res!63844)) b!132671))

(assert (= (and b!132671 res!63845) b!132673))

(assert (= (and b!132671 res!63843) b!132674))

(assert (= (and b!132674 c!24544) b!132672))

(assert (= (and b!132674 (not c!24544)) b!132675))

(assert (= (or b!132672 b!132675) bm!14603))

(assert (=> b!132671 m!156017))

(assert (=> b!132671 m!156017))

(assert (=> b!132671 m!156025))

(assert (=> bm!14603 m!156017))

(declare-fun m!156029 () Bool)

(assert (=> bm!14603 m!156029))

(assert (=> b!132673 m!156017))

(assert (=> b!132673 m!156017))

(declare-fun m!156031 () Bool)

(assert (=> b!132673 m!156031))

(assert (=> b!132674 m!156017))

(assert (=> b!132674 m!156017))

(assert (=> b!132674 m!156025))

(assert (=> b!132382 d!40273))

(declare-fun d!40275 () Bool)

(assert (=> d!40275 (= (array_inv!1429 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvsge (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!132380 d!40275))

(declare-fun d!40277 () Bool)

(assert (=> d!40277 (= (array_inv!1430 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvsge (size!2519 (_values!2847 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!132380 d!40277))

(declare-fun d!40279 () Bool)

(declare-fun res!63852 () Bool)

(declare-fun e!86488 () Bool)

(assert (=> d!40279 (=> (not res!63852) (not e!86488))))

(declare-fun simpleValid!92 (LongMapFixedSize!1096) Bool)

(assert (=> d!40279 (= res!63852 (simpleValid!92 newMap!16))))

(assert (=> d!40279 (= (valid!529 newMap!16) e!86488)))

(declare-fun b!132682 () Bool)

(declare-fun res!63853 () Bool)

(assert (=> b!132682 (=> (not res!63853) (not e!86488))))

(declare-fun arrayCountValidKeys!0 (array!4757 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!132682 (= res!63853 (= (arrayCountValidKeys!0 (_keys!4612 newMap!16) #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) (_size!597 newMap!16)))))

(declare-fun b!132683 () Bool)

(declare-fun res!63854 () Bool)

(assert (=> b!132683 (=> (not res!63854) (not e!86488))))

(assert (=> b!132683 (= res!63854 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(declare-fun b!132684 () Bool)

(assert (=> b!132684 (= e!86488 (arrayNoDuplicates!0 (_keys!4612 newMap!16) #b00000000000000000000000000000000 Nil!1708))))

(assert (= (and d!40279 res!63852) b!132682))

(assert (= (and b!132682 res!63853) b!132683))

(assert (= (and b!132683 res!63854) b!132684))

(declare-fun m!156033 () Bool)

(assert (=> d!40279 m!156033))

(declare-fun m!156035 () Bool)

(assert (=> b!132682 m!156035))

(declare-fun m!156037 () Bool)

(assert (=> b!132683 m!156037))

(declare-fun m!156039 () Bool)

(assert (=> b!132684 m!156039))

(assert (=> b!132385 d!40279))

(declare-fun d!40281 () Bool)

(assert (=> d!40281 (= (map!1391 newMap!16) (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun bs!5472 () Bool)

(assert (= bs!5472 d!40281))

(declare-fun m!156041 () Bool)

(assert (=> bs!5472 m!156041))

(assert (=> b!132371 d!40281))

(declare-fun b!132727 () Bool)

(declare-fun e!86527 () Bool)

(declare-fun e!86520 () Bool)

(assert (=> b!132727 (= e!86527 e!86520)))

(declare-fun res!63877 () Bool)

(declare-fun call!14625 () Bool)

(assert (=> b!132727 (= res!63877 call!14625)))

(assert (=> b!132727 (=> (not res!63877) (not e!86520))))

(declare-fun bm!14618 () Bool)

(declare-fun c!24560 () Bool)

(declare-fun c!24562 () Bool)

(declare-fun call!14621 () ListLongMap!1671)

(declare-fun call!14627 () ListLongMap!1671)

(declare-fun call!14624 () ListLongMap!1671)

(declare-fun call!14626 () ListLongMap!1671)

(assert (=> bm!14618 (= call!14621 (+!163 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)) (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun bm!14619 () Bool)

(declare-fun getCurrentListMapNoExtraKeys!128 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) Int) ListLongMap!1671)

(assert (=> bm!14619 (= call!14624 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!132728 () Bool)

(declare-fun e!86525 () Bool)

(assert (=> b!132728 (= e!86525 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!132729 () Bool)

(declare-fun e!86522 () Bool)

(assert (=> b!132729 (= e!86522 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!14620 () Bool)

(assert (=> bm!14620 (= call!14626 call!14627)))

(declare-fun b!132730 () Bool)

(declare-fun e!86524 () ListLongMap!1671)

(declare-fun e!86526 () ListLongMap!1671)

(assert (=> b!132730 (= e!86524 e!86526)))

(assert (=> b!132730 (= c!24560 (and (not (= (bvand (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132731 () Bool)

(declare-fun e!86517 () Bool)

(declare-fun e!86523 () Bool)

(assert (=> b!132731 (= e!86517 e!86523)))

(declare-fun res!63878 () Bool)

(assert (=> b!132731 (=> (not res!63878) (not e!86523))))

(declare-fun lt!69186 () ListLongMap!1671)

(assert (=> b!132731 (= res!63878 (contains!886 lt!69186 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!132731 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun bm!14621 () Bool)

(assert (=> bm!14621 (= call!14625 (contains!886 lt!69186 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132732 () Bool)

(declare-fun apply!116 (ListLongMap!1671 (_ BitVec 64)) V!3481)

(assert (=> b!132732 (= e!86523 (= (apply!116 lt!69186 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132732 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2519 (_values!2847 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> b!132732 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!132734 () Bool)

(declare-fun e!86515 () Bool)

(assert (=> b!132734 (= e!86515 (= (apply!116 lt!69186 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!132735 () Bool)

(declare-fun e!86519 () Unit!4132)

(declare-fun lt!69188 () Unit!4132)

(assert (=> b!132735 (= e!86519 lt!69188)))

(declare-fun lt!69176 () ListLongMap!1671)

(assert (=> b!132735 (= lt!69176 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun lt!69184 () (_ BitVec 64))

(assert (=> b!132735 (= lt!69184 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69182 () (_ BitVec 64))

(assert (=> b!132735 (= lt!69182 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!69191 () Unit!4132)

(declare-fun addStillContains!92 (ListLongMap!1671 (_ BitVec 64) V!3481 (_ BitVec 64)) Unit!4132)

(assert (=> b!132735 (= lt!69191 (addStillContains!92 lt!69176 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69182))))

(assert (=> b!132735 (contains!886 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69182)))

(declare-fun lt!69183 () Unit!4132)

(assert (=> b!132735 (= lt!69183 lt!69191)))

(declare-fun lt!69172 () ListLongMap!1671)

(assert (=> b!132735 (= lt!69172 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun lt!69189 () (_ BitVec 64))

(assert (=> b!132735 (= lt!69189 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69177 () (_ BitVec 64))

(assert (=> b!132735 (= lt!69177 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!69178 () Unit!4132)

(declare-fun addApplyDifferent!92 (ListLongMap!1671 (_ BitVec 64) V!3481 (_ BitVec 64)) Unit!4132)

(assert (=> b!132735 (= lt!69178 (addApplyDifferent!92 lt!69172 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69177))))

(assert (=> b!132735 (= (apply!116 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69177) (apply!116 lt!69172 lt!69177))))

(declare-fun lt!69187 () Unit!4132)

(assert (=> b!132735 (= lt!69187 lt!69178)))

(declare-fun lt!69170 () ListLongMap!1671)

(assert (=> b!132735 (= lt!69170 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun lt!69171 () (_ BitVec 64))

(assert (=> b!132735 (= lt!69171 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69174 () (_ BitVec 64))

(assert (=> b!132735 (= lt!69174 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!69173 () Unit!4132)

(assert (=> b!132735 (= lt!69173 (addApplyDifferent!92 lt!69170 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69174))))

(assert (=> b!132735 (= (apply!116 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69174) (apply!116 lt!69170 lt!69174))))

(declare-fun lt!69181 () Unit!4132)

(assert (=> b!132735 (= lt!69181 lt!69173)))

(declare-fun lt!69179 () ListLongMap!1671)

(assert (=> b!132735 (= lt!69179 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun lt!69180 () (_ BitVec 64))

(assert (=> b!132735 (= lt!69180 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69190 () (_ BitVec 64))

(assert (=> b!132735 (= lt!69190 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!132735 (= lt!69188 (addApplyDifferent!92 lt!69179 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69190))))

(assert (=> b!132735 (= (apply!116 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69190) (apply!116 lt!69179 lt!69190))))

(declare-fun b!132736 () Bool)

(declare-fun e!86516 () ListLongMap!1671)

(assert (=> b!132736 (= e!86516 call!14626)))

(declare-fun b!132737 () Bool)

(declare-fun call!14622 () ListLongMap!1671)

(assert (=> b!132737 (= e!86526 call!14622)))

(declare-fun b!132738 () Bool)

(declare-fun res!63874 () Bool)

(declare-fun e!86521 () Bool)

(assert (=> b!132738 (=> (not res!63874) (not e!86521))))

(declare-fun e!86518 () Bool)

(assert (=> b!132738 (= res!63874 e!86518)))

(declare-fun c!24559 () Bool)

(assert (=> b!132738 (= c!24559 (not (= (bvand (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!14622 () Bool)

(assert (=> bm!14622 (= call!14627 call!14624)))

(declare-fun b!132739 () Bool)

(assert (=> b!132739 (= e!86527 (not call!14625))))

(declare-fun b!132740 () Bool)

(declare-fun c!24561 () Bool)

(assert (=> b!132740 (= c!24561 (and (not (= (bvand (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!132740 (= e!86526 e!86516)))

(declare-fun b!132741 () Bool)

(declare-fun Unit!4137 () Unit!4132)

(assert (=> b!132741 (= e!86519 Unit!4137)))

(declare-fun b!132742 () Bool)

(assert (=> b!132742 (= e!86524 (+!163 call!14621 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun bm!14623 () Bool)

(assert (=> bm!14623 (= call!14622 call!14621)))

(declare-fun b!132743 () Bool)

(assert (=> b!132743 (= e!86516 call!14622)))

(declare-fun b!132744 () Bool)

(declare-fun call!14623 () Bool)

(assert (=> b!132744 (= e!86518 (not call!14623))))

(declare-fun b!132745 () Bool)

(assert (=> b!132745 (= e!86521 e!86527)))

(declare-fun c!24558 () Bool)

(assert (=> b!132745 (= c!24558 (not (= (bvand (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14624 () Bool)

(assert (=> bm!14624 (= call!14623 (contains!886 lt!69186 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132733 () Bool)

(assert (=> b!132733 (= e!86518 e!86515)))

(declare-fun res!63876 () Bool)

(assert (=> b!132733 (= res!63876 call!14623)))

(assert (=> b!132733 (=> (not res!63876) (not e!86515))))

(declare-fun d!40283 () Bool)

(assert (=> d!40283 e!86521))

(declare-fun res!63881 () Bool)

(assert (=> d!40283 (=> (not res!63881) (not e!86521))))

(assert (=> d!40283 (= res!63881 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun lt!69175 () ListLongMap!1671)

(assert (=> d!40283 (= lt!69186 lt!69175)))

(declare-fun lt!69185 () Unit!4132)

(assert (=> d!40283 (= lt!69185 e!86519)))

(declare-fun c!24557 () Bool)

(assert (=> d!40283 (= c!24557 e!86522)))

(declare-fun res!63880 () Bool)

(assert (=> d!40283 (=> (not res!63880) (not e!86522))))

(assert (=> d!40283 (= res!63880 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!40283 (= lt!69175 e!86524)))

(assert (=> d!40283 (= c!24562 (and (not (= (bvand (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40283 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!40283 (= (getCurrentListMap!519 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992)))) lt!69186)))

(declare-fun b!132746 () Bool)

(declare-fun res!63873 () Bool)

(assert (=> b!132746 (=> (not res!63873) (not e!86521))))

(assert (=> b!132746 (= res!63873 e!86517)))

(declare-fun res!63879 () Bool)

(assert (=> b!132746 (=> res!63879 e!86517)))

(assert (=> b!132746 (= res!63879 (not e!86525))))

(declare-fun res!63875 () Bool)

(assert (=> b!132746 (=> (not res!63875) (not e!86525))))

(assert (=> b!132746 (= res!63875 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!132747 () Bool)

(assert (=> b!132747 (= e!86520 (= (apply!116 lt!69186 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))

(assert (= (and d!40283 c!24562) b!132742))

(assert (= (and d!40283 (not c!24562)) b!132730))

(assert (= (and b!132730 c!24560) b!132737))

(assert (= (and b!132730 (not c!24560)) b!132740))

(assert (= (and b!132740 c!24561) b!132743))

(assert (= (and b!132740 (not c!24561)) b!132736))

(assert (= (or b!132743 b!132736) bm!14620))

(assert (= (or b!132737 bm!14620) bm!14622))

(assert (= (or b!132737 b!132743) bm!14623))

(assert (= (or b!132742 bm!14622) bm!14619))

(assert (= (or b!132742 bm!14623) bm!14618))

(assert (= (and d!40283 res!63880) b!132729))

(assert (= (and d!40283 c!24557) b!132735))

(assert (= (and d!40283 (not c!24557)) b!132741))

(assert (= (and d!40283 res!63881) b!132746))

(assert (= (and b!132746 res!63875) b!132728))

(assert (= (and b!132746 (not res!63879)) b!132731))

(assert (= (and b!132731 res!63878) b!132732))

(assert (= (and b!132746 res!63873) b!132738))

(assert (= (and b!132738 c!24559) b!132733))

(assert (= (and b!132738 (not c!24559)) b!132744))

(assert (= (and b!132733 res!63876) b!132734))

(assert (= (or b!132733 b!132744) bm!14624))

(assert (= (and b!132738 res!63874) b!132745))

(assert (= (and b!132745 c!24558) b!132727))

(assert (= (and b!132745 (not c!24558)) b!132739))

(assert (= (and b!132727 res!63877) b!132747))

(assert (= (or b!132727 b!132739) bm!14621))

(declare-fun b_lambda!5893 () Bool)

(assert (=> (not b_lambda!5893) (not b!132732)))

(assert (=> b!132732 t!6149))

(declare-fun b_and!8205 () Bool)

(assert (= b_and!8185 (and (=> t!6149 result!3973) b_and!8205)))

(assert (=> b!132732 t!6151))

(declare-fun b_and!8207 () Bool)

(assert (= b_and!8187 (and (=> t!6151 result!3977) b_and!8207)))

(declare-fun m!156043 () Bool)

(assert (=> b!132731 m!156043))

(assert (=> b!132731 m!156043))

(declare-fun m!156045 () Bool)

(assert (=> b!132731 m!156045))

(declare-fun m!156047 () Bool)

(assert (=> bm!14619 m!156047))

(declare-fun m!156049 () Bool)

(assert (=> bm!14618 m!156049))

(declare-fun m!156051 () Bool)

(assert (=> b!132732 m!156051))

(assert (=> b!132732 m!155837))

(declare-fun m!156053 () Bool)

(assert (=> b!132732 m!156053))

(assert (=> b!132732 m!155837))

(assert (=> b!132732 m!156043))

(assert (=> b!132732 m!156051))

(assert (=> b!132732 m!156043))

(declare-fun m!156055 () Bool)

(assert (=> b!132732 m!156055))

(assert (=> b!132728 m!156043))

(assert (=> b!132728 m!156043))

(declare-fun m!156057 () Bool)

(assert (=> b!132728 m!156057))

(assert (=> b!132729 m!156043))

(assert (=> b!132729 m!156043))

(assert (=> b!132729 m!156057))

(declare-fun m!156059 () Bool)

(assert (=> b!132734 m!156059))

(declare-fun m!156061 () Bool)

(assert (=> b!132742 m!156061))

(declare-fun m!156063 () Bool)

(assert (=> bm!14621 m!156063))

(declare-fun m!156065 () Bool)

(assert (=> b!132735 m!156065))

(declare-fun m!156067 () Bool)

(assert (=> b!132735 m!156067))

(declare-fun m!156069 () Bool)

(assert (=> b!132735 m!156069))

(declare-fun m!156071 () Bool)

(assert (=> b!132735 m!156071))

(assert (=> b!132735 m!156065))

(declare-fun m!156073 () Bool)

(assert (=> b!132735 m!156073))

(declare-fun m!156075 () Bool)

(assert (=> b!132735 m!156075))

(declare-fun m!156077 () Bool)

(assert (=> b!132735 m!156077))

(declare-fun m!156079 () Bool)

(assert (=> b!132735 m!156079))

(assert (=> b!132735 m!156069))

(declare-fun m!156081 () Bool)

(assert (=> b!132735 m!156081))

(declare-fun m!156083 () Bool)

(assert (=> b!132735 m!156083))

(declare-fun m!156085 () Bool)

(assert (=> b!132735 m!156085))

(declare-fun m!156087 () Bool)

(assert (=> b!132735 m!156087))

(declare-fun m!156089 () Bool)

(assert (=> b!132735 m!156089))

(assert (=> b!132735 m!156077))

(assert (=> b!132735 m!156043))

(assert (=> b!132735 m!156047))

(declare-fun m!156091 () Bool)

(assert (=> b!132735 m!156091))

(assert (=> b!132735 m!156071))

(declare-fun m!156093 () Bool)

(assert (=> b!132735 m!156093))

(declare-fun m!156095 () Bool)

(assert (=> b!132747 m!156095))

(declare-fun m!156097 () Bool)

(assert (=> bm!14624 m!156097))

(assert (=> d!40283 m!155855))

(assert (=> b!132371 d!40283))

(declare-fun d!40285 () Bool)

(assert (=> d!40285 (= (array_inv!1429 (_keys!4612 newMap!16)) (bvsge (size!2518 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!132384 d!40285))

(declare-fun d!40287 () Bool)

(assert (=> d!40287 (= (array_inv!1430 (_values!2847 newMap!16)) (bvsge (size!2519 (_values!2847 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!132384 d!40287))

(declare-fun d!40289 () Bool)

(assert (=> d!40289 (= (valid!528 thiss!992) (valid!529 (v!3192 (underlying!451 thiss!992))))))

(declare-fun bs!5473 () Bool)

(assert (= bs!5473 d!40289))

(declare-fun m!156099 () Bool)

(assert (=> bs!5473 m!156099))

(assert (=> start!14262 d!40289))

(declare-fun condMapEmpty!4653 () Bool)

(declare-fun mapDefault!4653 () ValueCell!1094)

(assert (=> mapNonEmpty!4638 (= condMapEmpty!4653 (= mapRest!4637 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4653)))))

(declare-fun e!86533 () Bool)

(declare-fun mapRes!4653 () Bool)

(assert (=> mapNonEmpty!4638 (= tp!11196 (and e!86533 mapRes!4653))))

(declare-fun b!132754 () Bool)

(declare-fun e!86532 () Bool)

(assert (=> b!132754 (= e!86532 tp_is_empty!2875)))

(declare-fun b!132755 () Bool)

(assert (=> b!132755 (= e!86533 tp_is_empty!2875)))

(declare-fun mapIsEmpty!4653 () Bool)

(assert (=> mapIsEmpty!4653 mapRes!4653))

(declare-fun mapNonEmpty!4653 () Bool)

(declare-fun tp!11223 () Bool)

(assert (=> mapNonEmpty!4653 (= mapRes!4653 (and tp!11223 e!86532))))

(declare-fun mapValue!4653 () ValueCell!1094)

(declare-fun mapKey!4653 () (_ BitVec 32))

(declare-fun mapRest!4653 () (Array (_ BitVec 32) ValueCell!1094))

(assert (=> mapNonEmpty!4653 (= mapRest!4637 (store mapRest!4653 mapKey!4653 mapValue!4653))))

(assert (= (and mapNonEmpty!4638 condMapEmpty!4653) mapIsEmpty!4653))

(assert (= (and mapNonEmpty!4638 (not condMapEmpty!4653)) mapNonEmpty!4653))

(assert (= (and mapNonEmpty!4653 ((_ is ValueCellFull!1094) mapValue!4653)) b!132754))

(assert (= (and mapNonEmpty!4638 ((_ is ValueCellFull!1094) mapDefault!4653)) b!132755))

(declare-fun m!156101 () Bool)

(assert (=> mapNonEmpty!4653 m!156101))

(declare-fun condMapEmpty!4654 () Bool)

(declare-fun mapDefault!4654 () ValueCell!1094)

(assert (=> mapNonEmpty!4637 (= condMapEmpty!4654 (= mapRest!4638 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4654)))))

(declare-fun e!86535 () Bool)

(declare-fun mapRes!4654 () Bool)

(assert (=> mapNonEmpty!4637 (= tp!11193 (and e!86535 mapRes!4654))))

(declare-fun b!132756 () Bool)

(declare-fun e!86534 () Bool)

(assert (=> b!132756 (= e!86534 tp_is_empty!2875)))

(declare-fun b!132757 () Bool)

(assert (=> b!132757 (= e!86535 tp_is_empty!2875)))

(declare-fun mapIsEmpty!4654 () Bool)

(assert (=> mapIsEmpty!4654 mapRes!4654))

(declare-fun mapNonEmpty!4654 () Bool)

(declare-fun tp!11224 () Bool)

(assert (=> mapNonEmpty!4654 (= mapRes!4654 (and tp!11224 e!86534))))

(declare-fun mapRest!4654 () (Array (_ BitVec 32) ValueCell!1094))

(declare-fun mapKey!4654 () (_ BitVec 32))

(declare-fun mapValue!4654 () ValueCell!1094)

(assert (=> mapNonEmpty!4654 (= mapRest!4638 (store mapRest!4654 mapKey!4654 mapValue!4654))))

(assert (= (and mapNonEmpty!4637 condMapEmpty!4654) mapIsEmpty!4654))

(assert (= (and mapNonEmpty!4637 (not condMapEmpty!4654)) mapNonEmpty!4654))

(assert (= (and mapNonEmpty!4654 ((_ is ValueCellFull!1094) mapValue!4654)) b!132756))

(assert (= (and mapNonEmpty!4637 ((_ is ValueCellFull!1094) mapDefault!4654)) b!132757))

(declare-fun m!156103 () Bool)

(assert (=> mapNonEmpty!4654 m!156103))

(declare-fun b_lambda!5895 () Bool)

(assert (= b_lambda!5893 (or (and b!132380 b_free!2917) (and b!132384 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))))) b_lambda!5895)))

(check-sat (not b!132647) (not b!132628) (not b!132605) (not d!40283) (not b!132648) (not bm!14591) (not d!40263) (not bm!14578) b_and!8207 (not d!40289) (not d!40279) (not b!132682) (not bm!14593) (not b!132674) (not b!132623) (not b!132659) (not b!132671) (not b!132673) (not bm!14583) (not b_next!2917) (not b_lambda!5895) (not bm!14597) (not b!132747) (not b!132731) (not b!132732) (not bm!14624) (not b!132635) tp_is_empty!2875 b_and!8205 (not b_lambda!5891) (not b!132658) (not bm!14589) (not d!40265) (not d!40281) (not b!132683) (not b!132742) (not b!132520) (not b!132684) (not bm!14600) (not bm!14586) (not b!132629) (not bm!14574) (not b!132735) (not bm!14603) (not bm!14575) (not b!132522) (not bm!14619) (not bm!14592) (not bm!14618) (not mapNonEmpty!4654) (not bm!14621) (not b!132639) (not b!132729) (not mapNonEmpty!4653) (not bm!14588) (not bm!14576) (not b!132734) (not b!132728) (not b_next!2919))
(check-sat b_and!8205 b_and!8207 (not b_next!2917) (not b_next!2919))
(get-model)

(declare-fun d!40291 () Bool)

(declare-fun e!86538 () Bool)

(assert (=> d!40291 e!86538))

(declare-fun res!63887 () Bool)

(assert (=> d!40291 (=> (not res!63887) (not e!86538))))

(declare-fun lt!69202 () ListLongMap!1671)

(assert (=> d!40291 (= res!63887 (contains!886 lt!69202 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69200 () List!1710)

(assert (=> d!40291 (= lt!69202 (ListLongMap!1672 lt!69200))))

(declare-fun lt!69203 () Unit!4132)

(declare-fun lt!69201 () Unit!4132)

(assert (=> d!40291 (= lt!69203 lt!69201)))

(assert (=> d!40291 (= (getValueByKey!170 lt!69200 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!88 (List!1710 (_ BitVec 64) V!3481) Unit!4132)

(assert (=> d!40291 (= lt!69201 (lemmaContainsTupThenGetReturnValue!88 lt!69200 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun insertStrictlySorted!91 (List!1710 (_ BitVec 64) V!3481) List!1710)

(assert (=> d!40291 (= lt!69200 (insertStrictlySorted!91 (toList!851 call!14585) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40291 (= (+!163 call!14585 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69202)))

(declare-fun b!132762 () Bool)

(declare-fun res!63886 () Bool)

(assert (=> b!132762 (=> (not res!63886) (not e!86538))))

(assert (=> b!132762 (= res!63886 (= (getValueByKey!170 (toList!851 lt!69202) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!132763 () Bool)

(declare-fun contains!889 (List!1710 tuple2!2584) Bool)

(assert (=> b!132763 (= e!86538 (contains!889 (toList!851 lt!69202) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40291 res!63887) b!132762))

(assert (= (and b!132762 res!63886) b!132763))

(declare-fun m!156105 () Bool)

(assert (=> d!40291 m!156105))

(declare-fun m!156107 () Bool)

(assert (=> d!40291 m!156107))

(declare-fun m!156109 () Bool)

(assert (=> d!40291 m!156109))

(declare-fun m!156111 () Bool)

(assert (=> d!40291 m!156111))

(declare-fun m!156113 () Bool)

(assert (=> b!132762 m!156113))

(declare-fun m!156115 () Bool)

(assert (=> b!132763 m!156115))

(assert (=> b!132623 d!40291))

(declare-fun d!40293 () Bool)

(declare-fun get!1482 (Option!176) V!3481)

(assert (=> d!40293 (= (apply!116 lt!69186 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5474 () Bool)

(assert (= bs!5474 d!40293))

(declare-fun m!156117 () Bool)

(assert (=> bs!5474 m!156117))

(assert (=> bs!5474 m!156117))

(declare-fun m!156119 () Bool)

(assert (=> bs!5474 m!156119))

(assert (=> b!132734 d!40293))

(declare-fun d!40295 () Bool)

(declare-fun res!63888 () Bool)

(declare-fun e!86539 () Bool)

(assert (=> d!40295 (=> (not res!63888) (not e!86539))))

(assert (=> d!40295 (= res!63888 (simpleValid!92 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!40295 (= (valid!529 (v!3192 (underlying!451 thiss!992))) e!86539)))

(declare-fun b!132764 () Bool)

(declare-fun res!63889 () Bool)

(assert (=> b!132764 (=> (not res!63889) (not e!86539))))

(assert (=> b!132764 (= res!63889 (= (arrayCountValidKeys!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000000 (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))) (_size!597 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!132765 () Bool)

(declare-fun res!63890 () Bool)

(assert (=> b!132765 (=> (not res!63890) (not e!86539))))

(assert (=> b!132765 (= res!63890 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!132766 () Bool)

(assert (=> b!132766 (= e!86539 (arrayNoDuplicates!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000000 Nil!1708))))

(assert (= (and d!40295 res!63888) b!132764))

(assert (= (and b!132764 res!63889) b!132765))

(assert (= (and b!132765 res!63890) b!132766))

(declare-fun m!156121 () Bool)

(assert (=> d!40295 m!156121))

(declare-fun m!156123 () Bool)

(assert (=> b!132764 m!156123))

(assert (=> b!132765 m!155867))

(assert (=> b!132766 m!155869))

(assert (=> d!40289 d!40295))

(declare-fun b!132767 () Bool)

(declare-fun e!86552 () Bool)

(declare-fun e!86545 () Bool)

(assert (=> b!132767 (= e!86552 e!86545)))

(declare-fun res!63895 () Bool)

(declare-fun call!14632 () Bool)

(assert (=> b!132767 (= res!63895 call!14632)))

(assert (=> b!132767 (=> (not res!63895) (not e!86545))))

(declare-fun call!14634 () ListLongMap!1671)

(declare-fun c!24566 () Bool)

(declare-fun call!14628 () ListLongMap!1671)

(declare-fun bm!14625 () Bool)

(declare-fun c!24568 () Bool)

(declare-fun call!14631 () ListLongMap!1671)

(declare-fun call!14633 () ListLongMap!1671)

(assert (=> bm!14625 (= call!14628 (+!163 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633)) (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun bm!14626 () Bool)

(assert (=> bm!14626 (= call!14631 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!132768 () Bool)

(declare-fun e!86550 () Bool)

(assert (=> b!132768 (= e!86550 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132769 () Bool)

(declare-fun e!86547 () Bool)

(assert (=> b!132769 (= e!86547 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14627 () Bool)

(assert (=> bm!14627 (= call!14633 call!14634)))

(declare-fun b!132770 () Bool)

(declare-fun e!86549 () ListLongMap!1671)

(declare-fun e!86551 () ListLongMap!1671)

(assert (=> b!132770 (= e!86549 e!86551)))

(assert (=> b!132770 (= c!24566 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132771 () Bool)

(declare-fun e!86542 () Bool)

(declare-fun e!86548 () Bool)

(assert (=> b!132771 (= e!86542 e!86548)))

(declare-fun res!63896 () Bool)

(assert (=> b!132771 (=> (not res!63896) (not e!86548))))

(declare-fun lt!69220 () ListLongMap!1671)

(assert (=> b!132771 (= res!63896 (contains!886 lt!69220 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!132771 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun bm!14628 () Bool)

(assert (=> bm!14628 (= call!14632 (contains!886 lt!69220 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132772 () Bool)

(assert (=> b!132772 (= e!86548 (= (apply!116 lt!69220 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132772 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))))))))

(assert (=> b!132772 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!132774 () Bool)

(declare-fun e!86540 () Bool)

(assert (=> b!132774 (= e!86540 (= (apply!116 lt!69220 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 newMap!16)))))

(declare-fun b!132775 () Bool)

(declare-fun e!86544 () Unit!4132)

(declare-fun lt!69222 () Unit!4132)

(assert (=> b!132775 (= e!86544 lt!69222)))

(declare-fun lt!69210 () ListLongMap!1671)

(assert (=> b!132775 (= lt!69210 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69218 () (_ BitVec 64))

(assert (=> b!132775 (= lt!69218 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69216 () (_ BitVec 64))

(assert (=> b!132775 (= lt!69216 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69225 () Unit!4132)

(assert (=> b!132775 (= lt!69225 (addStillContains!92 lt!69210 lt!69218 (zeroValue!2719 newMap!16) lt!69216))))

(assert (=> b!132775 (contains!886 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))) lt!69216)))

(declare-fun lt!69217 () Unit!4132)

(assert (=> b!132775 (= lt!69217 lt!69225)))

(declare-fun lt!69206 () ListLongMap!1671)

(assert (=> b!132775 (= lt!69206 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69223 () (_ BitVec 64))

(assert (=> b!132775 (= lt!69223 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69211 () (_ BitVec 64))

(assert (=> b!132775 (= lt!69211 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69212 () Unit!4132)

(assert (=> b!132775 (= lt!69212 (addApplyDifferent!92 lt!69206 lt!69223 (minValue!2719 newMap!16) lt!69211))))

(assert (=> b!132775 (= (apply!116 (+!163 lt!69206 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))) lt!69211) (apply!116 lt!69206 lt!69211))))

(declare-fun lt!69221 () Unit!4132)

(assert (=> b!132775 (= lt!69221 lt!69212)))

(declare-fun lt!69204 () ListLongMap!1671)

(assert (=> b!132775 (= lt!69204 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69205 () (_ BitVec 64))

(assert (=> b!132775 (= lt!69205 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69208 () (_ BitVec 64))

(assert (=> b!132775 (= lt!69208 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69207 () Unit!4132)

(assert (=> b!132775 (= lt!69207 (addApplyDifferent!92 lt!69204 lt!69205 (zeroValue!2719 newMap!16) lt!69208))))

(assert (=> b!132775 (= (apply!116 (+!163 lt!69204 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))) lt!69208) (apply!116 lt!69204 lt!69208))))

(declare-fun lt!69215 () Unit!4132)

(assert (=> b!132775 (= lt!69215 lt!69207)))

(declare-fun lt!69213 () ListLongMap!1671)

(assert (=> b!132775 (= lt!69213 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69214 () (_ BitVec 64))

(assert (=> b!132775 (= lt!69214 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69224 () (_ BitVec 64))

(assert (=> b!132775 (= lt!69224 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!132775 (= lt!69222 (addApplyDifferent!92 lt!69213 lt!69214 (minValue!2719 newMap!16) lt!69224))))

(assert (=> b!132775 (= (apply!116 (+!163 lt!69213 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))) lt!69224) (apply!116 lt!69213 lt!69224))))

(declare-fun b!132776 () Bool)

(declare-fun e!86541 () ListLongMap!1671)

(assert (=> b!132776 (= e!86541 call!14633)))

(declare-fun b!132777 () Bool)

(declare-fun call!14629 () ListLongMap!1671)

(assert (=> b!132777 (= e!86551 call!14629)))

(declare-fun b!132778 () Bool)

(declare-fun res!63892 () Bool)

(declare-fun e!86546 () Bool)

(assert (=> b!132778 (=> (not res!63892) (not e!86546))))

(declare-fun e!86543 () Bool)

(assert (=> b!132778 (= res!63892 e!86543)))

(declare-fun c!24565 () Bool)

(assert (=> b!132778 (= c!24565 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!14629 () Bool)

(assert (=> bm!14629 (= call!14634 call!14631)))

(declare-fun b!132779 () Bool)

(assert (=> b!132779 (= e!86552 (not call!14632))))

(declare-fun b!132780 () Bool)

(declare-fun c!24567 () Bool)

(assert (=> b!132780 (= c!24567 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!132780 (= e!86551 e!86541)))

(declare-fun b!132781 () Bool)

(declare-fun Unit!4138 () Unit!4132)

(assert (=> b!132781 (= e!86544 Unit!4138)))

(declare-fun b!132782 () Bool)

(assert (=> b!132782 (= e!86549 (+!163 call!14628 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun bm!14630 () Bool)

(assert (=> bm!14630 (= call!14629 call!14628)))

(declare-fun b!132783 () Bool)

(assert (=> b!132783 (= e!86541 call!14629)))

(declare-fun b!132784 () Bool)

(declare-fun call!14630 () Bool)

(assert (=> b!132784 (= e!86543 (not call!14630))))

(declare-fun b!132785 () Bool)

(assert (=> b!132785 (= e!86546 e!86552)))

(declare-fun c!24564 () Bool)

(assert (=> b!132785 (= c!24564 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14631 () Bool)

(assert (=> bm!14631 (= call!14630 (contains!886 lt!69220 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132773 () Bool)

(assert (=> b!132773 (= e!86543 e!86540)))

(declare-fun res!63894 () Bool)

(assert (=> b!132773 (= res!63894 call!14630)))

(assert (=> b!132773 (=> (not res!63894) (not e!86540))))

(declare-fun d!40297 () Bool)

(assert (=> d!40297 e!86546))

(declare-fun res!63899 () Bool)

(assert (=> d!40297 (=> (not res!63899) (not e!86546))))

(assert (=> d!40297 (= res!63899 (or (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))))

(declare-fun lt!69209 () ListLongMap!1671)

(assert (=> d!40297 (= lt!69220 lt!69209)))

(declare-fun lt!69219 () Unit!4132)

(assert (=> d!40297 (= lt!69219 e!86544)))

(declare-fun c!24563 () Bool)

(assert (=> d!40297 (= c!24563 e!86547)))

(declare-fun res!63898 () Bool)

(assert (=> d!40297 (=> (not res!63898) (not e!86547))))

(assert (=> d!40297 (= res!63898 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40297 (= lt!69209 e!86549)))

(assert (=> d!40297 (= c!24568 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40297 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40297 (= (getCurrentListMap!519 (_keys!4612 newMap!16) (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69220)))

(declare-fun b!132786 () Bool)

(declare-fun res!63891 () Bool)

(assert (=> b!132786 (=> (not res!63891) (not e!86546))))

(assert (=> b!132786 (= res!63891 e!86542)))

(declare-fun res!63897 () Bool)

(assert (=> b!132786 (=> res!63897 e!86542)))

(assert (=> b!132786 (= res!63897 (not e!86550))))

(declare-fun res!63893 () Bool)

(assert (=> b!132786 (=> (not res!63893) (not e!86550))))

(assert (=> b!132786 (= res!63893 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!132787 () Bool)

(assert (=> b!132787 (= e!86545 (= (apply!116 lt!69220 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 newMap!16)))))

(assert (= (and d!40297 c!24568) b!132782))

(assert (= (and d!40297 (not c!24568)) b!132770))

(assert (= (and b!132770 c!24566) b!132777))

(assert (= (and b!132770 (not c!24566)) b!132780))

(assert (= (and b!132780 c!24567) b!132783))

(assert (= (and b!132780 (not c!24567)) b!132776))

(assert (= (or b!132783 b!132776) bm!14627))

(assert (= (or b!132777 bm!14627) bm!14629))

(assert (= (or b!132777 b!132783) bm!14630))

(assert (= (or b!132782 bm!14629) bm!14626))

(assert (= (or b!132782 bm!14630) bm!14625))

(assert (= (and d!40297 res!63898) b!132769))

(assert (= (and d!40297 c!24563) b!132775))

(assert (= (and d!40297 (not c!24563)) b!132781))

(assert (= (and d!40297 res!63899) b!132786))

(assert (= (and b!132786 res!63893) b!132768))

(assert (= (and b!132786 (not res!63897)) b!132771))

(assert (= (and b!132771 res!63896) b!132772))

(assert (= (and b!132786 res!63891) b!132778))

(assert (= (and b!132778 c!24565) b!132773))

(assert (= (and b!132778 (not c!24565)) b!132784))

(assert (= (and b!132773 res!63894) b!132774))

(assert (= (or b!132773 b!132784) bm!14631))

(assert (= (and b!132778 res!63892) b!132785))

(assert (= (and b!132785 c!24564) b!132767))

(assert (= (and b!132785 (not c!24564)) b!132779))

(assert (= (and b!132767 res!63895) b!132787))

(assert (= (or b!132767 b!132779) bm!14628))

(declare-fun b_lambda!5897 () Bool)

(assert (=> (not b_lambda!5897) (not b!132772)))

(declare-fun t!6164 () Bool)

(declare-fun tb!2417 () Bool)

(assert (=> (and b!132380 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16)) t!6164) tb!2417))

(declare-fun result!3993 () Bool)

(assert (=> tb!2417 (= result!3993 tp_is_empty!2875)))

(assert (=> b!132772 t!6164))

(declare-fun b_and!8209 () Bool)

(assert (= b_and!8205 (and (=> t!6164 result!3993) b_and!8209)))

(declare-fun t!6166 () Bool)

(declare-fun tb!2419 () Bool)

(assert (=> (and b!132384 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 newMap!16)) t!6166) tb!2419))

(declare-fun result!3995 () Bool)

(assert (= result!3995 result!3993))

(assert (=> b!132772 t!6166))

(declare-fun b_and!8211 () Bool)

(assert (= b_and!8207 (and (=> t!6166 result!3995) b_and!8211)))

(declare-fun m!156125 () Bool)

(assert (=> b!132771 m!156125))

(assert (=> b!132771 m!156125))

(declare-fun m!156127 () Bool)

(assert (=> b!132771 m!156127))

(declare-fun m!156129 () Bool)

(assert (=> bm!14626 m!156129))

(declare-fun m!156131 () Bool)

(assert (=> bm!14625 m!156131))

(declare-fun m!156133 () Bool)

(assert (=> b!132772 m!156133))

(declare-fun m!156135 () Bool)

(assert (=> b!132772 m!156135))

(declare-fun m!156137 () Bool)

(assert (=> b!132772 m!156137))

(assert (=> b!132772 m!156135))

(assert (=> b!132772 m!156125))

(assert (=> b!132772 m!156133))

(assert (=> b!132772 m!156125))

(declare-fun m!156139 () Bool)

(assert (=> b!132772 m!156139))

(assert (=> b!132768 m!156125))

(assert (=> b!132768 m!156125))

(declare-fun m!156141 () Bool)

(assert (=> b!132768 m!156141))

(assert (=> b!132769 m!156125))

(assert (=> b!132769 m!156125))

(assert (=> b!132769 m!156141))

(declare-fun m!156143 () Bool)

(assert (=> b!132774 m!156143))

(declare-fun m!156145 () Bool)

(assert (=> b!132782 m!156145))

(declare-fun m!156147 () Bool)

(assert (=> bm!14628 m!156147))

(declare-fun m!156149 () Bool)

(assert (=> b!132775 m!156149))

(declare-fun m!156151 () Bool)

(assert (=> b!132775 m!156151))

(declare-fun m!156153 () Bool)

(assert (=> b!132775 m!156153))

(declare-fun m!156155 () Bool)

(assert (=> b!132775 m!156155))

(assert (=> b!132775 m!156149))

(declare-fun m!156157 () Bool)

(assert (=> b!132775 m!156157))

(declare-fun m!156159 () Bool)

(assert (=> b!132775 m!156159))

(declare-fun m!156161 () Bool)

(assert (=> b!132775 m!156161))

(declare-fun m!156163 () Bool)

(assert (=> b!132775 m!156163))

(assert (=> b!132775 m!156153))

(declare-fun m!156165 () Bool)

(assert (=> b!132775 m!156165))

(declare-fun m!156167 () Bool)

(assert (=> b!132775 m!156167))

(declare-fun m!156169 () Bool)

(assert (=> b!132775 m!156169))

(declare-fun m!156171 () Bool)

(assert (=> b!132775 m!156171))

(declare-fun m!156173 () Bool)

(assert (=> b!132775 m!156173))

(assert (=> b!132775 m!156161))

(assert (=> b!132775 m!156125))

(assert (=> b!132775 m!156129))

(declare-fun m!156175 () Bool)

(assert (=> b!132775 m!156175))

(assert (=> b!132775 m!156155))

(declare-fun m!156177 () Bool)

(assert (=> b!132775 m!156177))

(declare-fun m!156179 () Bool)

(assert (=> b!132787 m!156179))

(declare-fun m!156181 () Bool)

(assert (=> bm!14631 m!156181))

(declare-fun m!156183 () Bool)

(assert (=> d!40297 m!156183))

(assert (=> bm!14578 d!40297))

(declare-fun d!40299 () Bool)

(declare-fun e!86553 () Bool)

(assert (=> d!40299 e!86553))

(declare-fun res!63900 () Bool)

(assert (=> d!40299 (=> res!63900 e!86553)))

(declare-fun lt!69227 () Bool)

(assert (=> d!40299 (= res!63900 (not lt!69227))))

(declare-fun lt!69229 () Bool)

(assert (=> d!40299 (= lt!69227 lt!69229)))

(declare-fun lt!69226 () Unit!4132)

(declare-fun e!86554 () Unit!4132)

(assert (=> d!40299 (= lt!69226 e!86554)))

(declare-fun c!24569 () Bool)

(assert (=> d!40299 (= c!24569 lt!69229)))

(assert (=> d!40299 (= lt!69229 (containsKey!174 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> d!40299 (= (contains!886 call!14583 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) lt!69227)))

(declare-fun b!132788 () Bool)

(declare-fun lt!69228 () Unit!4132)

(assert (=> b!132788 (= e!86554 lt!69228)))

(assert (=> b!132788 (= lt!69228 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> b!132788 (isDefined!124 (getValueByKey!170 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!132789 () Bool)

(declare-fun Unit!4139 () Unit!4132)

(assert (=> b!132789 (= e!86554 Unit!4139)))

(declare-fun b!132790 () Bool)

(assert (=> b!132790 (= e!86553 (isDefined!124 (getValueByKey!170 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(assert (= (and d!40299 c!24569) b!132788))

(assert (= (and d!40299 (not c!24569)) b!132789))

(assert (= (and d!40299 (not res!63900)) b!132790))

(assert (=> d!40299 m!155841))

(declare-fun m!156185 () Bool)

(assert (=> d!40299 m!156185))

(assert (=> b!132788 m!155841))

(declare-fun m!156187 () Bool)

(assert (=> b!132788 m!156187))

(assert (=> b!132788 m!155841))

(declare-fun m!156189 () Bool)

(assert (=> b!132788 m!156189))

(assert (=> b!132788 m!156189))

(declare-fun m!156191 () Bool)

(assert (=> b!132788 m!156191))

(assert (=> b!132790 m!155841))

(assert (=> b!132790 m!156189))

(assert (=> b!132790 m!156189))

(assert (=> b!132790 m!156191))

(assert (=> b!132639 d!40299))

(declare-fun d!40301 () Bool)

(assert (=> d!40301 (= (get!1481 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132648 d!40301))

(declare-fun d!40303 () Bool)

(declare-fun res!63905 () Bool)

(declare-fun e!86559 () Bool)

(assert (=> d!40303 (=> res!63905 e!86559)))

(assert (=> d!40303 (= res!63905 (and ((_ is Cons!1706) (toList!851 lt!69005)) (= (_1!1303 (h!2311 (toList!851 lt!69005))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(assert (=> d!40303 (= (containsKey!174 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!86559)))

(declare-fun b!132795 () Bool)

(declare-fun e!86560 () Bool)

(assert (=> b!132795 (= e!86559 e!86560)))

(declare-fun res!63906 () Bool)

(assert (=> b!132795 (=> (not res!63906) (not e!86560))))

(assert (=> b!132795 (= res!63906 (and (or (not ((_ is Cons!1706) (toList!851 lt!69005))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69005))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) ((_ is Cons!1706) (toList!851 lt!69005)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69005))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun b!132796 () Bool)

(assert (=> b!132796 (= e!86560 (containsKey!174 (t!6152 (toList!851 lt!69005)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!40303 (not res!63905)) b!132795))

(assert (= (and b!132795 res!63906) b!132796))

(assert (=> b!132796 m!155841))

(declare-fun m!156193 () Bool)

(assert (=> b!132796 m!156193))

(assert (=> d!40263 d!40303))

(declare-fun d!40305 () Bool)

(assert (=> d!40305 (= (apply!116 lt!69186 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1482 (getValueByKey!170 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5475 () Bool)

(assert (= bs!5475 d!40305))

(assert (=> bs!5475 m!156043))

(declare-fun m!156195 () Bool)

(assert (=> bs!5475 m!156195))

(assert (=> bs!5475 m!156195))

(declare-fun m!156197 () Bool)

(assert (=> bs!5475 m!156197))

(assert (=> b!132732 d!40305))

(declare-fun d!40307 () Bool)

(declare-fun c!24570 () Bool)

(assert (=> d!40307 (= c!24570 ((_ is ValueCellFull!1094) (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!86561 () V!3481)

(assert (=> d!40307 (= (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!86561)))

(declare-fun b!132797 () Bool)

(assert (=> b!132797 (= e!86561 (get!1480 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!132798 () Bool)

(assert (=> b!132798 (= e!86561 (get!1481 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40307 c!24570) b!132797))

(assert (= (and d!40307 (not c!24570)) b!132798))

(assert (=> b!132797 m!156051))

(assert (=> b!132797 m!155837))

(declare-fun m!156199 () Bool)

(assert (=> b!132797 m!156199))

(assert (=> b!132798 m!156051))

(assert (=> b!132798 m!155837))

(declare-fun m!156201 () Bool)

(assert (=> b!132798 m!156201))

(assert (=> b!132732 d!40307))

(declare-fun d!40309 () Bool)

(declare-fun e!86562 () Bool)

(assert (=> d!40309 e!86562))

(declare-fun res!63907 () Bool)

(assert (=> d!40309 (=> res!63907 e!86562)))

(declare-fun lt!69231 () Bool)

(assert (=> d!40309 (= res!63907 (not lt!69231))))

(declare-fun lt!69233 () Bool)

(assert (=> d!40309 (= lt!69231 lt!69233)))

(declare-fun lt!69230 () Unit!4132)

(declare-fun e!86563 () Unit!4132)

(assert (=> d!40309 (= lt!69230 e!86563)))

(declare-fun c!24571 () Bool)

(assert (=> d!40309 (= c!24571 lt!69233)))

(assert (=> d!40309 (= lt!69233 (containsKey!174 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))

(assert (=> d!40309 (= (contains!886 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))) lt!69231)))

(declare-fun b!132799 () Bool)

(declare-fun lt!69232 () Unit!4132)

(assert (=> b!132799 (= e!86563 lt!69232)))

(assert (=> b!132799 (= lt!69232 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))

(assert (=> b!132799 (isDefined!124 (getValueByKey!170 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))

(declare-fun b!132800 () Bool)

(declare-fun Unit!4140 () Unit!4132)

(assert (=> b!132800 (= e!86563 Unit!4140)))

(declare-fun b!132801 () Bool)

(assert (=> b!132801 (= e!86562 (isDefined!124 (getValueByKey!170 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116)))))))

(assert (= (and d!40309 c!24571) b!132799))

(assert (= (and d!40309 (not c!24571)) b!132800))

(assert (= (and d!40309 (not res!63907)) b!132801))

(assert (=> d!40309 m!155971))

(declare-fun m!156203 () Bool)

(assert (=> d!40309 m!156203))

(assert (=> b!132799 m!155971))

(declare-fun m!156205 () Bool)

(assert (=> b!132799 m!156205))

(assert (=> b!132799 m!155971))

(declare-fun m!156207 () Bool)

(assert (=> b!132799 m!156207))

(assert (=> b!132799 m!156207))

(declare-fun m!156209 () Bool)

(assert (=> b!132799 m!156209))

(assert (=> b!132801 m!155971))

(assert (=> b!132801 m!156207))

(assert (=> b!132801 m!156207))

(assert (=> b!132801 m!156209))

(assert (=> b!132635 d!40309))

(declare-fun b!132802 () Bool)

(declare-fun e!86576 () Bool)

(declare-fun e!86569 () Bool)

(assert (=> b!132802 (= e!86576 e!86569)))

(declare-fun res!63912 () Bool)

(declare-fun call!14639 () Bool)

(assert (=> b!132802 (= res!63912 call!14639)))

(assert (=> b!132802 (=> (not res!63912) (not e!86569))))

(declare-fun call!14635 () ListLongMap!1671)

(declare-fun c!24575 () Bool)

(declare-fun call!14640 () ListLongMap!1671)

(declare-fun call!14641 () ListLongMap!1671)

(declare-fun bm!14632 () Bool)

(declare-fun call!14638 () ListLongMap!1671)

(declare-fun c!24577 () Bool)

(assert (=> bm!14632 (= call!14635 (+!163 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640)) (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun bm!14633 () Bool)

(assert (=> bm!14633 (= call!14638 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!132803 () Bool)

(declare-fun e!86574 () Bool)

(assert (=> b!132803 (= e!86574 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132804 () Bool)

(declare-fun e!86571 () Bool)

(assert (=> b!132804 (= e!86571 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14634 () Bool)

(assert (=> bm!14634 (= call!14640 call!14641)))

(declare-fun b!132805 () Bool)

(declare-fun e!86573 () ListLongMap!1671)

(declare-fun e!86575 () ListLongMap!1671)

(assert (=> b!132805 (= e!86573 e!86575)))

(assert (=> b!132805 (= c!24575 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132806 () Bool)

(declare-fun e!86566 () Bool)

(declare-fun e!86572 () Bool)

(assert (=> b!132806 (= e!86566 e!86572)))

(declare-fun res!63913 () Bool)

(assert (=> b!132806 (=> (not res!63913) (not e!86572))))

(declare-fun lt!69250 () ListLongMap!1671)

(assert (=> b!132806 (= res!63913 (contains!886 lt!69250 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!132806 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun bm!14635 () Bool)

(assert (=> bm!14635 (= call!14639 (contains!886 lt!69250 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132807 () Bool)

(assert (=> b!132807 (= e!86572 (= (apply!116 lt!69250 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132807 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 lt!69094)))))

(assert (=> b!132807 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!132809 () Bool)

(declare-fun e!86564 () Bool)

(assert (=> b!132809 (= e!86564 (= (apply!116 lt!69250 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 newMap!16)))))

(declare-fun b!132810 () Bool)

(declare-fun e!86568 () Unit!4132)

(declare-fun lt!69252 () Unit!4132)

(assert (=> b!132810 (= e!86568 lt!69252)))

(declare-fun lt!69240 () ListLongMap!1671)

(assert (=> b!132810 (= lt!69240 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69248 () (_ BitVec 64))

(assert (=> b!132810 (= lt!69248 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69246 () (_ BitVec 64))

(assert (=> b!132810 (= lt!69246 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69255 () Unit!4132)

(assert (=> b!132810 (= lt!69255 (addStillContains!92 lt!69240 lt!69248 (zeroValue!2719 newMap!16) lt!69246))))

(assert (=> b!132810 (contains!886 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))) lt!69246)))

(declare-fun lt!69247 () Unit!4132)

(assert (=> b!132810 (= lt!69247 lt!69255)))

(declare-fun lt!69236 () ListLongMap!1671)

(assert (=> b!132810 (= lt!69236 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69253 () (_ BitVec 64))

(assert (=> b!132810 (= lt!69253 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69241 () (_ BitVec 64))

(assert (=> b!132810 (= lt!69241 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69242 () Unit!4132)

(assert (=> b!132810 (= lt!69242 (addApplyDifferent!92 lt!69236 lt!69253 (minValue!2719 newMap!16) lt!69241))))

(assert (=> b!132810 (= (apply!116 (+!163 lt!69236 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))) lt!69241) (apply!116 lt!69236 lt!69241))))

(declare-fun lt!69251 () Unit!4132)

(assert (=> b!132810 (= lt!69251 lt!69242)))

(declare-fun lt!69234 () ListLongMap!1671)

(assert (=> b!132810 (= lt!69234 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69235 () (_ BitVec 64))

(assert (=> b!132810 (= lt!69235 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69238 () (_ BitVec 64))

(assert (=> b!132810 (= lt!69238 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69237 () Unit!4132)

(assert (=> b!132810 (= lt!69237 (addApplyDifferent!92 lt!69234 lt!69235 (zeroValue!2719 newMap!16) lt!69238))))

(assert (=> b!132810 (= (apply!116 (+!163 lt!69234 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))) lt!69238) (apply!116 lt!69234 lt!69238))))

(declare-fun lt!69245 () Unit!4132)

(assert (=> b!132810 (= lt!69245 lt!69237)))

(declare-fun lt!69243 () ListLongMap!1671)

(assert (=> b!132810 (= lt!69243 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69244 () (_ BitVec 64))

(assert (=> b!132810 (= lt!69244 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69254 () (_ BitVec 64))

(assert (=> b!132810 (= lt!69254 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!132810 (= lt!69252 (addApplyDifferent!92 lt!69243 lt!69244 (minValue!2719 newMap!16) lt!69254))))

(assert (=> b!132810 (= (apply!116 (+!163 lt!69243 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))) lt!69254) (apply!116 lt!69243 lt!69254))))

(declare-fun b!132811 () Bool)

(declare-fun e!86565 () ListLongMap!1671)

(assert (=> b!132811 (= e!86565 call!14640)))

(declare-fun b!132812 () Bool)

(declare-fun call!14636 () ListLongMap!1671)

(assert (=> b!132812 (= e!86575 call!14636)))

(declare-fun b!132813 () Bool)

(declare-fun res!63909 () Bool)

(declare-fun e!86570 () Bool)

(assert (=> b!132813 (=> (not res!63909) (not e!86570))))

(declare-fun e!86567 () Bool)

(assert (=> b!132813 (= res!63909 e!86567)))

(declare-fun c!24574 () Bool)

(assert (=> b!132813 (= c!24574 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!14636 () Bool)

(assert (=> bm!14636 (= call!14641 call!14638)))

(declare-fun b!132814 () Bool)

(assert (=> b!132814 (= e!86576 (not call!14639))))

(declare-fun b!132815 () Bool)

(declare-fun c!24576 () Bool)

(assert (=> b!132815 (= c!24576 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!132815 (= e!86575 e!86565)))

(declare-fun b!132816 () Bool)

(declare-fun Unit!4141 () Unit!4132)

(assert (=> b!132816 (= e!86568 Unit!4141)))

(declare-fun b!132817 () Bool)

(assert (=> b!132817 (= e!86573 (+!163 call!14635 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun bm!14637 () Bool)

(assert (=> bm!14637 (= call!14636 call!14635)))

(declare-fun b!132818 () Bool)

(assert (=> b!132818 (= e!86565 call!14636)))

(declare-fun b!132819 () Bool)

(declare-fun call!14637 () Bool)

(assert (=> b!132819 (= e!86567 (not call!14637))))

(declare-fun b!132820 () Bool)

(assert (=> b!132820 (= e!86570 e!86576)))

(declare-fun c!24573 () Bool)

(assert (=> b!132820 (= c!24573 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14638 () Bool)

(assert (=> bm!14638 (= call!14637 (contains!886 lt!69250 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132808 () Bool)

(assert (=> b!132808 (= e!86567 e!86564)))

(declare-fun res!63911 () Bool)

(assert (=> b!132808 (= res!63911 call!14637)))

(assert (=> b!132808 (=> (not res!63911) (not e!86564))))

(declare-fun d!40311 () Bool)

(assert (=> d!40311 e!86570))

(declare-fun res!63916 () Bool)

(assert (=> d!40311 (=> (not res!63916) (not e!86570))))

(assert (=> d!40311 (= res!63916 (or (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))))

(declare-fun lt!69239 () ListLongMap!1671)

(assert (=> d!40311 (= lt!69250 lt!69239)))

(declare-fun lt!69249 () Unit!4132)

(assert (=> d!40311 (= lt!69249 e!86568)))

(declare-fun c!24572 () Bool)

(assert (=> d!40311 (= c!24572 e!86571)))

(declare-fun res!63915 () Bool)

(assert (=> d!40311 (=> (not res!63915) (not e!86571))))

(assert (=> d!40311 (= res!63915 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40311 (= lt!69239 e!86573)))

(assert (=> d!40311 (= c!24577 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40311 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40311 (= (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69250)))

(declare-fun b!132821 () Bool)

(declare-fun res!63908 () Bool)

(assert (=> b!132821 (=> (not res!63908) (not e!86570))))

(assert (=> b!132821 (= res!63908 e!86566)))

(declare-fun res!63914 () Bool)

(assert (=> b!132821 (=> res!63914 e!86566)))

(assert (=> b!132821 (= res!63914 (not e!86574))))

(declare-fun res!63910 () Bool)

(assert (=> b!132821 (=> (not res!63910) (not e!86574))))

(assert (=> b!132821 (= res!63910 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!132822 () Bool)

(assert (=> b!132822 (= e!86569 (= (apply!116 lt!69250 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 newMap!16)))))

(assert (= (and d!40311 c!24577) b!132817))

(assert (= (and d!40311 (not c!24577)) b!132805))

(assert (= (and b!132805 c!24575) b!132812))

(assert (= (and b!132805 (not c!24575)) b!132815))

(assert (= (and b!132815 c!24576) b!132818))

(assert (= (and b!132815 (not c!24576)) b!132811))

(assert (= (or b!132818 b!132811) bm!14634))

(assert (= (or b!132812 bm!14634) bm!14636))

(assert (= (or b!132812 b!132818) bm!14637))

(assert (= (or b!132817 bm!14636) bm!14633))

(assert (= (or b!132817 bm!14637) bm!14632))

(assert (= (and d!40311 res!63915) b!132804))

(assert (= (and d!40311 c!24572) b!132810))

(assert (= (and d!40311 (not c!24572)) b!132816))

(assert (= (and d!40311 res!63916) b!132821))

(assert (= (and b!132821 res!63910) b!132803))

(assert (= (and b!132821 (not res!63914)) b!132806))

(assert (= (and b!132806 res!63913) b!132807))

(assert (= (and b!132821 res!63908) b!132813))

(assert (= (and b!132813 c!24574) b!132808))

(assert (= (and b!132813 (not c!24574)) b!132819))

(assert (= (and b!132808 res!63911) b!132809))

(assert (= (or b!132808 b!132819) bm!14638))

(assert (= (and b!132813 res!63909) b!132820))

(assert (= (and b!132820 c!24573) b!132802))

(assert (= (and b!132820 (not c!24573)) b!132814))

(assert (= (and b!132802 res!63912) b!132822))

(assert (= (or b!132802 b!132814) bm!14635))

(declare-fun b_lambda!5899 () Bool)

(assert (=> (not b_lambda!5899) (not b!132807)))

(assert (=> b!132807 t!6164))

(declare-fun b_and!8213 () Bool)

(assert (= b_and!8209 (and (=> t!6164 result!3993) b_and!8213)))

(assert (=> b!132807 t!6166))

(declare-fun b_and!8215 () Bool)

(assert (= b_and!8211 (and (=> t!6166 result!3995) b_and!8215)))

(assert (=> b!132806 m!156125))

(assert (=> b!132806 m!156125))

(declare-fun m!156211 () Bool)

(assert (=> b!132806 m!156211))

(declare-fun m!156213 () Bool)

(assert (=> bm!14633 m!156213))

(declare-fun m!156215 () Bool)

(assert (=> bm!14632 m!156215))

(declare-fun m!156217 () Bool)

(assert (=> b!132807 m!156217))

(assert (=> b!132807 m!156135))

(declare-fun m!156219 () Bool)

(assert (=> b!132807 m!156219))

(assert (=> b!132807 m!156135))

(assert (=> b!132807 m!156125))

(assert (=> b!132807 m!156217))

(assert (=> b!132807 m!156125))

(declare-fun m!156221 () Bool)

(assert (=> b!132807 m!156221))

(assert (=> b!132803 m!156125))

(assert (=> b!132803 m!156125))

(assert (=> b!132803 m!156141))

(assert (=> b!132804 m!156125))

(assert (=> b!132804 m!156125))

(assert (=> b!132804 m!156141))

(declare-fun m!156223 () Bool)

(assert (=> b!132809 m!156223))

(declare-fun m!156225 () Bool)

(assert (=> b!132817 m!156225))

(declare-fun m!156227 () Bool)

(assert (=> bm!14635 m!156227))

(declare-fun m!156229 () Bool)

(assert (=> b!132810 m!156229))

(declare-fun m!156231 () Bool)

(assert (=> b!132810 m!156231))

(declare-fun m!156233 () Bool)

(assert (=> b!132810 m!156233))

(declare-fun m!156235 () Bool)

(assert (=> b!132810 m!156235))

(assert (=> b!132810 m!156229))

(declare-fun m!156237 () Bool)

(assert (=> b!132810 m!156237))

(declare-fun m!156239 () Bool)

(assert (=> b!132810 m!156239))

(declare-fun m!156241 () Bool)

(assert (=> b!132810 m!156241))

(declare-fun m!156243 () Bool)

(assert (=> b!132810 m!156243))

(assert (=> b!132810 m!156233))

(declare-fun m!156245 () Bool)

(assert (=> b!132810 m!156245))

(declare-fun m!156247 () Bool)

(assert (=> b!132810 m!156247))

(declare-fun m!156249 () Bool)

(assert (=> b!132810 m!156249))

(declare-fun m!156251 () Bool)

(assert (=> b!132810 m!156251))

(declare-fun m!156253 () Bool)

(assert (=> b!132810 m!156253))

(assert (=> b!132810 m!156241))

(assert (=> b!132810 m!156125))

(assert (=> b!132810 m!156213))

(declare-fun m!156255 () Bool)

(assert (=> b!132810 m!156255))

(assert (=> b!132810 m!156235))

(declare-fun m!156257 () Bool)

(assert (=> b!132810 m!156257))

(declare-fun m!156259 () Bool)

(assert (=> b!132822 m!156259))

(declare-fun m!156261 () Bool)

(assert (=> bm!14638 m!156261))

(assert (=> d!40311 m!156183))

(assert (=> b!132635 d!40311))

(declare-fun d!40313 () Bool)

(declare-fun e!86579 () Bool)

(assert (=> d!40313 e!86579))

(declare-fun res!63919 () Bool)

(assert (=> d!40313 (=> (not res!63919) (not e!86579))))

(assert (=> d!40313 (= res!63919 (and (bvsge (index!3273 lt!69116) #b00000000000000000000000000000000) (bvslt (index!3273 lt!69116) (size!2518 (_keys!4612 newMap!16)))))))

(declare-fun lt!69258 () Unit!4132)

(declare-fun choose!824 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) Int) Unit!4132)

(assert (=> d!40313 (= lt!69258 (choose!824 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3273 lt!69116) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40313 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40313 (= (lemmaValidKeyInArrayIsInListMap!120 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3273 lt!69116) (defaultEntry!2864 newMap!16)) lt!69258)))

(declare-fun b!132825 () Bool)

(assert (=> b!132825 (= e!86579 (contains!886 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))

(assert (= (and d!40313 res!63919) b!132825))

(declare-fun m!156263 () Bool)

(assert (=> d!40313 m!156263))

(assert (=> d!40313 m!156183))

(assert (=> b!132825 m!155965))

(assert (=> b!132825 m!155971))

(assert (=> b!132825 m!155965))

(assert (=> b!132825 m!155971))

(assert (=> b!132825 m!155975))

(assert (=> b!132635 d!40313))

(declare-fun d!40315 () Bool)

(declare-fun e!86582 () Bool)

(assert (=> d!40315 e!86582))

(declare-fun res!63922 () Bool)

(assert (=> d!40315 (=> (not res!63922) (not e!86582))))

(assert (=> d!40315 (= res!63922 (and (bvsge (index!3273 lt!69116) #b00000000000000000000000000000000) (bvslt (index!3273 lt!69116) (size!2519 (_values!2847 newMap!16)))))))

(declare-fun lt!69261 () Unit!4132)

(declare-fun choose!825 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) (_ BitVec 64) V!3481 Int) Unit!4132)

(assert (=> d!40315 (= lt!69261 (choose!825 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3273 lt!69116) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40315 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40315 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!61 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3273 lt!69116) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)) lt!69261)))

(declare-fun b!132828 () Bool)

(assert (=> b!132828 (= e!86582 (= (+!163 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!519 (_keys!4612 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))

(assert (= (and d!40315 res!63922) b!132828))

(assert (=> d!40315 m!155841))

(assert (=> d!40315 m!155839))

(declare-fun m!156265 () Bool)

(assert (=> d!40315 m!156265))

(assert (=> d!40315 m!156183))

(assert (=> b!132828 m!156041))

(assert (=> b!132828 m!156041))

(declare-fun m!156267 () Bool)

(assert (=> b!132828 m!156267))

(assert (=> b!132828 m!155973))

(declare-fun m!156269 () Bool)

(assert (=> b!132828 m!156269))

(assert (=> b!132635 d!40315))

(declare-fun d!40317 () Bool)

(assert (=> d!40317 (= (inRange!0 (ite c!24526 (ite c!24534 (index!3273 lt!69093) (ite c!24535 (index!3272 lt!69096) (index!3275 lt!69096))) (ite c!24525 (index!3273 lt!69101) (ite c!24532 (index!3272 lt!69092) (index!3275 lt!69092)))) (mask!7163 newMap!16)) (and (bvsge (ite c!24526 (ite c!24534 (index!3273 lt!69093) (ite c!24535 (index!3272 lt!69096) (index!3275 lt!69096))) (ite c!24525 (index!3273 lt!69101) (ite c!24532 (index!3272 lt!69092) (index!3275 lt!69092)))) #b00000000000000000000000000000000) (bvslt (ite c!24526 (ite c!24534 (index!3273 lt!69093) (ite c!24535 (index!3272 lt!69096) (index!3275 lt!69096))) (ite c!24525 (index!3273 lt!69101) (ite c!24532 (index!3272 lt!69092) (index!3275 lt!69092)))) (bvadd (mask!7163 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14588 d!40317))

(declare-fun d!40319 () Bool)

(declare-fun e!86583 () Bool)

(assert (=> d!40319 e!86583))

(declare-fun res!63923 () Bool)

(assert (=> d!40319 (=> res!63923 e!86583)))

(declare-fun lt!69263 () Bool)

(assert (=> d!40319 (= res!63923 (not lt!69263))))

(declare-fun lt!69265 () Bool)

(assert (=> d!40319 (= lt!69263 lt!69265)))

(declare-fun lt!69262 () Unit!4132)

(declare-fun e!86584 () Unit!4132)

(assert (=> d!40319 (= lt!69262 e!86584)))

(declare-fun c!24578 () Bool)

(assert (=> d!40319 (= c!24578 lt!69265)))

(assert (=> d!40319 (= lt!69265 (containsKey!174 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!40319 (= (contains!886 lt!69186 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!69263)))

(declare-fun b!132829 () Bool)

(declare-fun lt!69264 () Unit!4132)

(assert (=> b!132829 (= e!86584 lt!69264)))

(assert (=> b!132829 (= lt!69264 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!132829 (isDefined!124 (getValueByKey!170 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!132830 () Bool)

(declare-fun Unit!4142 () Unit!4132)

(assert (=> b!132830 (= e!86584 Unit!4142)))

(declare-fun b!132831 () Bool)

(assert (=> b!132831 (= e!86583 (isDefined!124 (getValueByKey!170 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!40319 c!24578) b!132829))

(assert (= (and d!40319 (not c!24578)) b!132830))

(assert (= (and d!40319 (not res!63923)) b!132831))

(assert (=> d!40319 m!156043))

(declare-fun m!156271 () Bool)

(assert (=> d!40319 m!156271))

(assert (=> b!132829 m!156043))

(declare-fun m!156273 () Bool)

(assert (=> b!132829 m!156273))

(assert (=> b!132829 m!156043))

(assert (=> b!132829 m!156195))

(assert (=> b!132829 m!156195))

(declare-fun m!156275 () Bool)

(assert (=> b!132829 m!156275))

(assert (=> b!132831 m!156043))

(assert (=> b!132831 m!156195))

(assert (=> b!132831 m!156195))

(assert (=> b!132831 m!156275))

(assert (=> b!132731 d!40319))

(declare-fun d!40321 () Bool)

(declare-fun lt!69268 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!132 (List!1711) (InoxSet (_ BitVec 64)))

(assert (=> d!40321 (= lt!69268 (select (content!132 Nil!1708) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!86590 () Bool)

(assert (=> d!40321 (= lt!69268 e!86590)))

(declare-fun res!63929 () Bool)

(assert (=> d!40321 (=> (not res!63929) (not e!86590))))

(assert (=> d!40321 (= res!63929 ((_ is Cons!1707) Nil!1708))))

(assert (=> d!40321 (= (contains!888 Nil!1708 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)) lt!69268)))

(declare-fun b!132836 () Bool)

(declare-fun e!86589 () Bool)

(assert (=> b!132836 (= e!86590 e!86589)))

(declare-fun res!63928 () Bool)

(assert (=> b!132836 (=> res!63928 e!86589)))

(assert (=> b!132836 (= res!63928 (= (h!2312 Nil!1708) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!132837 () Bool)

(assert (=> b!132837 (= e!86589 (contains!888 (t!6153 Nil!1708) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!40321 res!63929) b!132836))

(assert (= (and b!132836 (not res!63928)) b!132837))

(declare-fun m!156277 () Bool)

(assert (=> d!40321 m!156277))

(assert (=> d!40321 m!156017))

(declare-fun m!156279 () Bool)

(assert (=> d!40321 m!156279))

(assert (=> b!132837 m!156017))

(declare-fun m!156281 () Bool)

(assert (=> b!132837 m!156281))

(assert (=> b!132673 d!40321))

(declare-fun b!132838 () Bool)

(declare-fun e!86594 () Bool)

(declare-fun e!86591 () Bool)

(assert (=> b!132838 (= e!86594 e!86591)))

(declare-fun res!63930 () Bool)

(assert (=> b!132838 (=> (not res!63930) (not e!86591))))

(declare-fun e!86592 () Bool)

(assert (=> b!132838 (= res!63930 (not e!86592))))

(declare-fun res!63932 () Bool)

(assert (=> b!132838 (=> (not res!63932) (not e!86592))))

(assert (=> b!132838 (= res!63932 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14639 () Bool)

(declare-fun call!14642 () Bool)

(declare-fun c!24579 () Bool)

(assert (=> bm!14639 (= call!14642 (arrayNoDuplicates!0 (_keys!4612 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708)))))

(declare-fun d!40323 () Bool)

(declare-fun res!63931 () Bool)

(assert (=> d!40323 (=> res!63931 e!86594)))

(assert (=> d!40323 (= res!63931 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40323 (= (arrayNoDuplicates!0 (_keys!4612 newMap!16) #b00000000000000000000000000000000 Nil!1708) e!86594)))

(declare-fun b!132839 () Bool)

(declare-fun e!86593 () Bool)

(assert (=> b!132839 (= e!86593 call!14642)))

(declare-fun b!132840 () Bool)

(assert (=> b!132840 (= e!86592 (contains!888 Nil!1708 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132841 () Bool)

(assert (=> b!132841 (= e!86591 e!86593)))

(assert (=> b!132841 (= c!24579 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132842 () Bool)

(assert (=> b!132842 (= e!86593 call!14642)))

(assert (= (and d!40323 (not res!63931)) b!132838))

(assert (= (and b!132838 res!63932) b!132840))

(assert (= (and b!132838 res!63930) b!132841))

(assert (= (and b!132841 c!24579) b!132839))

(assert (= (and b!132841 (not c!24579)) b!132842))

(assert (= (or b!132839 b!132842) bm!14639))

(assert (=> b!132838 m!156125))

(assert (=> b!132838 m!156125))

(assert (=> b!132838 m!156141))

(assert (=> bm!14639 m!156125))

(declare-fun m!156283 () Bool)

(assert (=> bm!14639 m!156283))

(assert (=> b!132840 m!156125))

(assert (=> b!132840 m!156125))

(declare-fun m!156285 () Bool)

(assert (=> b!132840 m!156285))

(assert (=> b!132841 m!156125))

(assert (=> b!132841 m!156125))

(assert (=> b!132841 m!156141))

(assert (=> b!132684 d!40323))

(declare-fun d!40325 () Bool)

(assert (=> d!40325 (= (map!1391 (_2!1304 lt!69115)) (getCurrentListMap!519 (_keys!4612 (_2!1304 lt!69115)) (_values!2847 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115)) (extraKeys!2629 (_2!1304 lt!69115)) (zeroValue!2719 (_2!1304 lt!69115)) (minValue!2719 (_2!1304 lt!69115)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1304 lt!69115))))))

(declare-fun bs!5476 () Bool)

(assert (= bs!5476 d!40325))

(declare-fun m!156287 () Bool)

(assert (=> bs!5476 m!156287))

(assert (=> bm!14593 d!40325))

(declare-fun d!40327 () Bool)

(assert (=> d!40327 (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69123 #b00000000000000000000000000000000)))

(declare-fun lt!69271 () Unit!4132)

(declare-fun choose!13 (array!4757 (_ BitVec 64) (_ BitVec 32)) Unit!4132)

(assert (=> d!40327 (= lt!69271 (choose!13 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69123 #b00000000000000000000000000000000))))

(assert (=> d!40327 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!40327 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69123 #b00000000000000000000000000000000) lt!69271)))

(declare-fun bs!5477 () Bool)

(assert (= bs!5477 d!40327))

(assert (=> bs!5477 m!156021))

(declare-fun m!156289 () Bool)

(assert (=> bs!5477 m!156289))

(assert (=> b!132658 d!40327))

(declare-fun d!40329 () Bool)

(declare-fun res!63937 () Bool)

(declare-fun e!86599 () Bool)

(assert (=> d!40329 (=> res!63937 e!86599)))

(assert (=> d!40329 (= res!63937 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) lt!69123))))

(assert (=> d!40329 (= (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69123 #b00000000000000000000000000000000) e!86599)))

(declare-fun b!132847 () Bool)

(declare-fun e!86600 () Bool)

(assert (=> b!132847 (= e!86599 e!86600)))

(declare-fun res!63938 () Bool)

(assert (=> b!132847 (=> (not res!63938) (not e!86600))))

(assert (=> b!132847 (= res!63938 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!132848 () Bool)

(assert (=> b!132848 (= e!86600 (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69123 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40329 (not res!63937)) b!132847))

(assert (= (and b!132847 res!63938) b!132848))

(assert (=> d!40329 m!156017))

(declare-fun m!156291 () Bool)

(assert (=> b!132848 m!156291))

(assert (=> b!132658 d!40329))

(declare-fun b!132861 () Bool)

(declare-fun c!24588 () Bool)

(declare-fun lt!69280 () (_ BitVec 64))

(assert (=> b!132861 (= c!24588 (= lt!69280 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86608 () SeekEntryResult!278)

(declare-fun e!86609 () SeekEntryResult!278)

(assert (=> b!132861 (= e!86608 e!86609)))

(declare-fun b!132862 () Bool)

(declare-fun e!86607 () SeekEntryResult!278)

(assert (=> b!132862 (= e!86607 Undefined!278)))

(declare-fun b!132863 () Bool)

(declare-fun lt!69279 () SeekEntryResult!278)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4757 (_ BitVec 32)) SeekEntryResult!278)

(assert (=> b!132863 (= e!86609 (seekKeyOrZeroReturnVacant!0 (x!15594 lt!69279) (index!3274 lt!69279) (index!3274 lt!69279) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!132864 () Bool)

(assert (=> b!132864 (= e!86608 (Found!278 (index!3274 lt!69279)))))

(declare-fun b!132865 () Bool)

(assert (=> b!132865 (= e!86607 e!86608)))

(assert (=> b!132865 (= lt!69280 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!69279)))))

(declare-fun c!24587 () Bool)

(assert (=> b!132865 (= c!24587 (= lt!69280 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!132866 () Bool)

(assert (=> b!132866 (= e!86609 (MissingZero!278 (index!3274 lt!69279)))))

(declare-fun d!40331 () Bool)

(declare-fun lt!69278 () SeekEntryResult!278)

(assert (=> d!40331 (and (or ((_ is Undefined!278) lt!69278) (not ((_ is Found!278) lt!69278)) (and (bvsge (index!3273 lt!69278) #b00000000000000000000000000000000) (bvslt (index!3273 lt!69278) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))) (or ((_ is Undefined!278) lt!69278) ((_ is Found!278) lt!69278) (not ((_ is MissingZero!278) lt!69278)) (and (bvsge (index!3272 lt!69278) #b00000000000000000000000000000000) (bvslt (index!3272 lt!69278) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))) (or ((_ is Undefined!278) lt!69278) ((_ is Found!278) lt!69278) ((_ is MissingZero!278) lt!69278) (not ((_ is MissingVacant!278) lt!69278)) (and (bvsge (index!3275 lt!69278) #b00000000000000000000000000000000) (bvslt (index!3275 lt!69278) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))) (or ((_ is Undefined!278) lt!69278) (ite ((_ is Found!278) lt!69278) (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3273 lt!69278)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!278) lt!69278) (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3272 lt!69278)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!278) lt!69278) (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3275 lt!69278)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40331 (= lt!69278 e!86607)))

(declare-fun c!24586 () Bool)

(assert (=> d!40331 (= c!24586 (and ((_ is Intermediate!278) lt!69279) (undefined!1090 lt!69279)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4757 (_ BitVec 32)) SeekEntryResult!278)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!40331 (= lt!69279 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(assert (=> d!40331 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!40331 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) lt!69278)))

(assert (= (and d!40331 c!24586) b!132862))

(assert (= (and d!40331 (not c!24586)) b!132865))

(assert (= (and b!132865 c!24587) b!132864))

(assert (= (and b!132865 (not c!24587)) b!132861))

(assert (= (and b!132861 c!24588) b!132866))

(assert (= (and b!132861 (not c!24588)) b!132863))

(assert (=> b!132863 m!156017))

(declare-fun m!156293 () Bool)

(assert (=> b!132863 m!156293))

(declare-fun m!156295 () Bool)

(assert (=> b!132865 m!156295))

(assert (=> d!40331 m!155855))

(declare-fun m!156297 () Bool)

(assert (=> d!40331 m!156297))

(declare-fun m!156299 () Bool)

(assert (=> d!40331 m!156299))

(assert (=> d!40331 m!156017))

(declare-fun m!156301 () Bool)

(assert (=> d!40331 m!156301))

(declare-fun m!156303 () Bool)

(assert (=> d!40331 m!156303))

(assert (=> d!40331 m!156301))

(assert (=> d!40331 m!156017))

(declare-fun m!156305 () Bool)

(assert (=> d!40331 m!156305))

(assert (=> b!132658 d!40331))

(declare-fun d!40333 () Bool)

(declare-fun isEmpty!413 (Option!176) Bool)

(assert (=> d!40333 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(declare-fun bs!5478 () Bool)

(assert (= bs!5478 d!40333))

(assert (=> bs!5478 m!155953))

(declare-fun m!156307 () Bool)

(assert (=> bs!5478 m!156307))

(assert (=> b!132522 d!40333))

(declare-fun d!40335 () Bool)

(declare-fun c!24593 () Bool)

(assert (=> d!40335 (= c!24593 (and ((_ is Cons!1706) (toList!851 lt!69005)) (= (_1!1303 (h!2311 (toList!851 lt!69005))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun e!86614 () Option!176)

(assert (=> d!40335 (= (getValueByKey!170 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!86614)))

(declare-fun b!132877 () Bool)

(declare-fun e!86615 () Option!176)

(assert (=> b!132877 (= e!86615 (getValueByKey!170 (t!6152 (toList!851 lt!69005)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!132876 () Bool)

(assert (=> b!132876 (= e!86614 e!86615)))

(declare-fun c!24594 () Bool)

(assert (=> b!132876 (= c!24594 (and ((_ is Cons!1706) (toList!851 lt!69005)) (not (= (_1!1303 (h!2311 (toList!851 lt!69005))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(declare-fun b!132875 () Bool)

(assert (=> b!132875 (= e!86614 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69005)))))))

(declare-fun b!132878 () Bool)

(assert (=> b!132878 (= e!86615 None!174)))

(assert (= (and d!40335 c!24593) b!132875))

(assert (= (and d!40335 (not c!24593)) b!132876))

(assert (= (and b!132876 c!24594) b!132877))

(assert (= (and b!132876 (not c!24594)) b!132878))

(assert (=> b!132877 m!155841))

(declare-fun m!156309 () Bool)

(assert (=> b!132877 m!156309))

(assert (=> b!132522 d!40335))

(declare-fun d!40337 () Bool)

(assert (=> d!40337 (= (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132729 d!40337))

(declare-fun d!40339 () Bool)

(declare-fun e!86616 () Bool)

(assert (=> d!40339 e!86616))

(declare-fun res!63939 () Bool)

(assert (=> d!40339 (=> res!63939 e!86616)))

(declare-fun lt!69282 () Bool)

(assert (=> d!40339 (= res!63939 (not lt!69282))))

(declare-fun lt!69284 () Bool)

(assert (=> d!40339 (= lt!69282 lt!69284)))

(declare-fun lt!69281 () Unit!4132)

(declare-fun e!86617 () Unit!4132)

(assert (=> d!40339 (= lt!69281 e!86617)))

(declare-fun c!24595 () Bool)

(assert (=> d!40339 (= c!24595 lt!69284)))

(assert (=> d!40339 (= lt!69284 (containsKey!174 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40339 (= (contains!886 lt!69186 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69282)))

(declare-fun b!132879 () Bool)

(declare-fun lt!69283 () Unit!4132)

(assert (=> b!132879 (= e!86617 lt!69283)))

(assert (=> b!132879 (= lt!69283 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132879 (isDefined!124 (getValueByKey!170 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132880 () Bool)

(declare-fun Unit!4143 () Unit!4132)

(assert (=> b!132880 (= e!86617 Unit!4143)))

(declare-fun b!132881 () Bool)

(assert (=> b!132881 (= e!86616 (isDefined!124 (getValueByKey!170 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40339 c!24595) b!132879))

(assert (= (and d!40339 (not c!24595)) b!132880))

(assert (= (and d!40339 (not res!63939)) b!132881))

(declare-fun m!156311 () Bool)

(assert (=> d!40339 m!156311))

(declare-fun m!156313 () Bool)

(assert (=> b!132879 m!156313))

(assert (=> b!132879 m!156117))

(assert (=> b!132879 m!156117))

(declare-fun m!156315 () Bool)

(assert (=> b!132879 m!156315))

(assert (=> b!132881 m!156117))

(assert (=> b!132881 m!156117))

(assert (=> b!132881 m!156315))

(assert (=> bm!14624 d!40339))

(declare-fun b!132906 () Bool)

(assert (=> b!132906 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> b!132906 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2519 (_values!2847 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun e!86632 () Bool)

(declare-fun lt!69301 () ListLongMap!1671)

(assert (=> b!132906 (= e!86632 (= (apply!116 lt!69301 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!14642 () Bool)

(declare-fun call!14645 () ListLongMap!1671)

(assert (=> bm!14642 (= call!14645 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!132907 () Bool)

(declare-fun e!86635 () ListLongMap!1671)

(assert (=> b!132907 (= e!86635 call!14645)))

(declare-fun b!132908 () Bool)

(declare-fun e!86637 () Bool)

(declare-fun e!86634 () Bool)

(assert (=> b!132908 (= e!86637 e!86634)))

(declare-fun c!24607 () Bool)

(assert (=> b!132908 (= c!24607 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!132909 () Bool)

(declare-fun isEmpty!414 (ListLongMap!1671) Bool)

(assert (=> b!132909 (= e!86634 (isEmpty!414 lt!69301))))

(declare-fun b!132910 () Bool)

(declare-fun e!86638 () Bool)

(assert (=> b!132910 (= e!86638 e!86637)))

(declare-fun c!24604 () Bool)

(declare-fun e!86633 () Bool)

(assert (=> b!132910 (= c!24604 e!86633)))

(declare-fun res!63950 () Bool)

(assert (=> b!132910 (=> (not res!63950) (not e!86633))))

(assert (=> b!132910 (= res!63950 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!132911 () Bool)

(assert (=> b!132911 (= e!86633 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!132911 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!132912 () Bool)

(declare-fun lt!69300 () Unit!4132)

(declare-fun lt!69305 () Unit!4132)

(assert (=> b!132912 (= lt!69300 lt!69305)))

(declare-fun lt!69302 () (_ BitVec 64))

(declare-fun lt!69299 () ListLongMap!1671)

(declare-fun lt!69303 () V!3481)

(declare-fun lt!69304 () (_ BitVec 64))

(assert (=> b!132912 (not (contains!886 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303)) lt!69304))))

(declare-fun addStillNotContains!62 (ListLongMap!1671 (_ BitVec 64) V!3481 (_ BitVec 64)) Unit!4132)

(assert (=> b!132912 (= lt!69305 (addStillNotContains!62 lt!69299 lt!69302 lt!69303 lt!69304))))

(assert (=> b!132912 (= lt!69304 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!132912 (= lt!69303 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!132912 (= lt!69302 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!132912 (= lt!69299 call!14645)))

(assert (=> b!132912 (= e!86635 (+!163 call!14645 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!132913 () Bool)

(declare-fun e!86636 () ListLongMap!1671)

(assert (=> b!132913 (= e!86636 e!86635)))

(declare-fun c!24605 () Bool)

(assert (=> b!132913 (= c!24605 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!132914 () Bool)

(assert (=> b!132914 (= e!86636 (ListLongMap!1672 Nil!1707))))

(declare-fun d!40341 () Bool)

(assert (=> d!40341 e!86638))

(declare-fun res!63949 () Bool)

(assert (=> d!40341 (=> (not res!63949) (not e!86638))))

(assert (=> d!40341 (= res!63949 (not (contains!886 lt!69301 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40341 (= lt!69301 e!86636)))

(declare-fun c!24606 () Bool)

(assert (=> d!40341 (= c!24606 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!40341 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!40341 (= (getCurrentListMapNoExtraKeys!128 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992)))) lt!69301)))

(declare-fun b!132915 () Bool)

(assert (=> b!132915 (= e!86634 (= lt!69301 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!132916 () Bool)

(declare-fun res!63951 () Bool)

(assert (=> b!132916 (=> (not res!63951) (not e!86638))))

(assert (=> b!132916 (= res!63951 (not (contains!886 lt!69301 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!132917 () Bool)

(assert (=> b!132917 (= e!86637 e!86632)))

(assert (=> b!132917 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun res!63948 () Bool)

(assert (=> b!132917 (= res!63948 (contains!886 lt!69301 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!132917 (=> (not res!63948) (not e!86632))))

(assert (= (and d!40341 c!24606) b!132914))

(assert (= (and d!40341 (not c!24606)) b!132913))

(assert (= (and b!132913 c!24605) b!132912))

(assert (= (and b!132913 (not c!24605)) b!132907))

(assert (= (or b!132912 b!132907) bm!14642))

(assert (= (and d!40341 res!63949) b!132916))

(assert (= (and b!132916 res!63951) b!132910))

(assert (= (and b!132910 res!63950) b!132911))

(assert (= (and b!132910 c!24604) b!132917))

(assert (= (and b!132910 (not c!24604)) b!132908))

(assert (= (and b!132917 res!63948) b!132906))

(assert (= (and b!132908 c!24607) b!132915))

(assert (= (and b!132908 (not c!24607)) b!132909))

(declare-fun b_lambda!5901 () Bool)

(assert (=> (not b_lambda!5901) (not b!132906)))

(assert (=> b!132906 t!6149))

(declare-fun b_and!8217 () Bool)

(assert (= b_and!8213 (and (=> t!6149 result!3973) b_and!8217)))

(assert (=> b!132906 t!6151))

(declare-fun b_and!8219 () Bool)

(assert (= b_and!8215 (and (=> t!6151 result!3977) b_and!8219)))

(declare-fun b_lambda!5903 () Bool)

(assert (=> (not b_lambda!5903) (not b!132912)))

(assert (=> b!132912 t!6149))

(declare-fun b_and!8221 () Bool)

(assert (= b_and!8217 (and (=> t!6149 result!3973) b_and!8221)))

(assert (=> b!132912 t!6151))

(declare-fun b_and!8223 () Bool)

(assert (= b_and!8219 (and (=> t!6151 result!3977) b_and!8223)))

(assert (=> b!132911 m!156043))

(assert (=> b!132911 m!156043))

(assert (=> b!132911 m!156057))

(declare-fun m!156317 () Bool)

(assert (=> b!132916 m!156317))

(assert (=> b!132912 m!156051))

(declare-fun m!156319 () Bool)

(assert (=> b!132912 m!156319))

(assert (=> b!132912 m!156043))

(assert (=> b!132912 m!156051))

(assert (=> b!132912 m!155837))

(assert (=> b!132912 m!156053))

(declare-fun m!156321 () Bool)

(assert (=> b!132912 m!156321))

(declare-fun m!156323 () Bool)

(assert (=> b!132912 m!156323))

(assert (=> b!132912 m!155837))

(declare-fun m!156325 () Bool)

(assert (=> b!132912 m!156325))

(assert (=> b!132912 m!156321))

(declare-fun m!156327 () Bool)

(assert (=> b!132915 m!156327))

(assert (=> b!132917 m!156043))

(assert (=> b!132917 m!156043))

(declare-fun m!156329 () Bool)

(assert (=> b!132917 m!156329))

(declare-fun m!156331 () Bool)

(assert (=> b!132909 m!156331))

(assert (=> bm!14642 m!156327))

(declare-fun m!156333 () Bool)

(assert (=> d!40341 m!156333))

(assert (=> d!40341 m!155855))

(assert (=> b!132913 m!156043))

(assert (=> b!132913 m!156043))

(assert (=> b!132913 m!156057))

(assert (=> b!132906 m!156051))

(assert (=> b!132906 m!156043))

(assert (=> b!132906 m!156051))

(assert (=> b!132906 m!155837))

(assert (=> b!132906 m!156053))

(assert (=> b!132906 m!155837))

(assert (=> b!132906 m!156043))

(declare-fun m!156335 () Bool)

(assert (=> b!132906 m!156335))

(assert (=> bm!14619 d!40341))

(declare-fun d!40343 () Bool)

(assert (=> d!40343 (isDefined!124 (getValueByKey!170 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun lt!69308 () Unit!4132)

(declare-fun choose!826 (List!1710 (_ BitVec 64)) Unit!4132)

(assert (=> d!40343 (= lt!69308 (choose!826 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun e!86641 () Bool)

(assert (=> d!40343 e!86641))

(declare-fun res!63954 () Bool)

(assert (=> d!40343 (=> (not res!63954) (not e!86641))))

(declare-fun isStrictlySorted!317 (List!1710) Bool)

(assert (=> d!40343 (= res!63954 (isStrictlySorted!317 (toList!851 lt!69005)))))

(assert (=> d!40343 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) lt!69308)))

(declare-fun b!132920 () Bool)

(assert (=> b!132920 (= e!86641 (containsKey!174 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!40343 res!63954) b!132920))

(assert (=> d!40343 m!155841))

(assert (=> d!40343 m!155953))

(assert (=> d!40343 m!155953))

(assert (=> d!40343 m!155955))

(assert (=> d!40343 m!155841))

(declare-fun m!156337 () Bool)

(assert (=> d!40343 m!156337))

(declare-fun m!156339 () Bool)

(assert (=> d!40343 m!156339))

(assert (=> b!132920 m!155841))

(assert (=> b!132920 m!155949))

(assert (=> b!132520 d!40343))

(assert (=> b!132520 d!40333))

(assert (=> b!132520 d!40335))

(declare-fun b!132929 () Bool)

(declare-fun e!86646 () (_ BitVec 32))

(declare-fun e!86647 () (_ BitVec 32))

(assert (=> b!132929 (= e!86646 e!86647)))

(declare-fun c!24613 () Bool)

(assert (=> b!132929 (= c!24613 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132930 () Bool)

(declare-fun call!14648 () (_ BitVec 32))

(assert (=> b!132930 (= e!86647 (bvadd #b00000000000000000000000000000001 call!14648))))

(declare-fun d!40345 () Bool)

(declare-fun lt!69311 () (_ BitVec 32))

(assert (=> d!40345 (and (bvsge lt!69311 #b00000000000000000000000000000000) (bvsle lt!69311 (bvsub (size!2518 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40345 (= lt!69311 e!86646)))

(declare-fun c!24612 () Bool)

(assert (=> d!40345 (= c!24612 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40345 (and (bvsle #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2518 (_keys!4612 newMap!16)) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40345 (= (arrayCountValidKeys!0 (_keys!4612 newMap!16) #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) lt!69311)))

(declare-fun b!132931 () Bool)

(assert (=> b!132931 (= e!86647 call!14648)))

(declare-fun b!132932 () Bool)

(assert (=> b!132932 (= e!86646 #b00000000000000000000000000000000)))

(declare-fun bm!14645 () Bool)

(assert (=> bm!14645 (= call!14648 (arrayCountValidKeys!0 (_keys!4612 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (= (and d!40345 c!24612) b!132932))

(assert (= (and d!40345 (not c!24612)) b!132929))

(assert (= (and b!132929 c!24613) b!132930))

(assert (= (and b!132929 (not c!24613)) b!132931))

(assert (= (or b!132930 b!132931) bm!14645))

(assert (=> b!132929 m!156125))

(assert (=> b!132929 m!156125))

(assert (=> b!132929 m!156141))

(declare-fun m!156341 () Bool)

(assert (=> bm!14645 m!156341))

(assert (=> b!132682 d!40345))

(declare-fun d!40347 () Bool)

(assert (=> d!40347 (= (+!163 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69098 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69314 () Unit!4132)

(declare-fun choose!827 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 V!3481 Int) Unit!4132)

(assert (=> d!40347 (= lt!69314 (choose!827 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) lt!69098 (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40347 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40347 (= (lemmaChangeZeroKeyThenAddPairToListMap!61 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) lt!69098 (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) (defaultEntry!2864 newMap!16)) lt!69314)))

(declare-fun bs!5479 () Bool)

(assert (= bs!5479 d!40347))

(assert (=> bs!5479 m!156041))

(declare-fun m!156343 () Bool)

(assert (=> bs!5479 m!156343))

(assert (=> bs!5479 m!156041))

(assert (=> bs!5479 m!155839))

(declare-fun m!156345 () Bool)

(assert (=> bs!5479 m!156345))

(assert (=> bs!5479 m!155839))

(declare-fun m!156347 () Bool)

(assert (=> bs!5479 m!156347))

(assert (=> bs!5479 m!156183))

(assert (=> b!132628 d!40347))

(declare-fun b!132933 () Bool)

(declare-fun e!86651 () Bool)

(declare-fun e!86648 () Bool)

(assert (=> b!132933 (= e!86651 e!86648)))

(declare-fun res!63955 () Bool)

(assert (=> b!132933 (=> (not res!63955) (not e!86648))))

(declare-fun e!86649 () Bool)

(assert (=> b!132933 (= res!63955 (not e!86649))))

(declare-fun res!63957 () Bool)

(assert (=> b!132933 (=> (not res!63957) (not e!86649))))

(assert (=> b!132933 (= res!63957 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!14646 () Bool)

(declare-fun c!24614 () Bool)

(declare-fun call!14649 () Bool)

(assert (=> bm!14646 (= call!14649 (arrayNoDuplicates!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))))))

(declare-fun d!40349 () Bool)

(declare-fun res!63956 () Bool)

(assert (=> d!40349 (=> res!63956 e!86651)))

(assert (=> d!40349 (= res!63956 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!40349 (= (arrayNoDuplicates!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) e!86651)))

(declare-fun b!132934 () Bool)

(declare-fun e!86650 () Bool)

(assert (=> b!132934 (= e!86650 call!14649)))

(declare-fun b!132935 () Bool)

(assert (=> b!132935 (= e!86649 (contains!888 (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!132936 () Bool)

(assert (=> b!132936 (= e!86648 e!86650)))

(assert (=> b!132936 (= c!24614 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!132937 () Bool)

(assert (=> b!132937 (= e!86650 call!14649)))

(assert (= (and d!40349 (not res!63956)) b!132933))

(assert (= (and b!132933 res!63957) b!132935))

(assert (= (and b!132933 res!63955) b!132936))

(assert (= (and b!132936 c!24614) b!132934))

(assert (= (and b!132936 (not c!24614)) b!132937))

(assert (= (or b!132934 b!132937) bm!14646))

(declare-fun m!156349 () Bool)

(assert (=> b!132933 m!156349))

(assert (=> b!132933 m!156349))

(declare-fun m!156351 () Bool)

(assert (=> b!132933 m!156351))

(assert (=> bm!14646 m!156349))

(declare-fun m!156353 () Bool)

(assert (=> bm!14646 m!156353))

(assert (=> b!132935 m!156349))

(assert (=> b!132935 m!156349))

(declare-fun m!156355 () Bool)

(assert (=> b!132935 m!156355))

(assert (=> b!132936 m!156349))

(assert (=> b!132936 m!156349))

(assert (=> b!132936 m!156351))

(assert (=> bm!14603 d!40349))

(declare-fun b!132938 () Bool)

(declare-fun c!24617 () Bool)

(declare-fun lt!69317 () (_ BitVec 64))

(assert (=> b!132938 (= c!24617 (= lt!69317 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86653 () SeekEntryResult!278)

(declare-fun e!86654 () SeekEntryResult!278)

(assert (=> b!132938 (= e!86653 e!86654)))

(declare-fun b!132939 () Bool)

(declare-fun e!86652 () SeekEntryResult!278)

(assert (=> b!132939 (= e!86652 Undefined!278)))

(declare-fun b!132940 () Bool)

(declare-fun lt!69316 () SeekEntryResult!278)

(assert (=> b!132940 (= e!86654 (seekKeyOrZeroReturnVacant!0 (x!15594 lt!69316) (index!3274 lt!69316) (index!3274 lt!69316) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(declare-fun b!132941 () Bool)

(assert (=> b!132941 (= e!86653 (Found!278 (index!3274 lt!69316)))))

(declare-fun b!132942 () Bool)

(assert (=> b!132942 (= e!86652 e!86653)))

(assert (=> b!132942 (= lt!69317 (select (arr!2248 (_keys!4612 newMap!16)) (index!3274 lt!69316)))))

(declare-fun c!24616 () Bool)

(assert (=> b!132942 (= c!24616 (= lt!69317 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!132943 () Bool)

(assert (=> b!132943 (= e!86654 (MissingZero!278 (index!3274 lt!69316)))))

(declare-fun lt!69315 () SeekEntryResult!278)

(declare-fun d!40351 () Bool)

(assert (=> d!40351 (and (or ((_ is Undefined!278) lt!69315) (not ((_ is Found!278) lt!69315)) (and (bvsge (index!3273 lt!69315) #b00000000000000000000000000000000) (bvslt (index!3273 lt!69315) (size!2518 (_keys!4612 newMap!16))))) (or ((_ is Undefined!278) lt!69315) ((_ is Found!278) lt!69315) (not ((_ is MissingZero!278) lt!69315)) (and (bvsge (index!3272 lt!69315) #b00000000000000000000000000000000) (bvslt (index!3272 lt!69315) (size!2518 (_keys!4612 newMap!16))))) (or ((_ is Undefined!278) lt!69315) ((_ is Found!278) lt!69315) ((_ is MissingZero!278) lt!69315) (not ((_ is MissingVacant!278) lt!69315)) (and (bvsge (index!3275 lt!69315) #b00000000000000000000000000000000) (bvslt (index!3275 lt!69315) (size!2518 (_keys!4612 newMap!16))))) (or ((_ is Undefined!278) lt!69315) (ite ((_ is Found!278) lt!69315) (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69315)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite ((_ is MissingZero!278) lt!69315) (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3272 lt!69315)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!278) lt!69315) (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3275 lt!69315)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40351 (= lt!69315 e!86652)))

(declare-fun c!24615 () Bool)

(assert (=> d!40351 (= c!24615 (and ((_ is Intermediate!278) lt!69316) (undefined!1090 lt!69316)))))

(assert (=> d!40351 (= lt!69316 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (mask!7163 newMap!16)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(assert (=> d!40351 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40351 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)) lt!69315)))

(assert (= (and d!40351 c!24615) b!132939))

(assert (= (and d!40351 (not c!24615)) b!132942))

(assert (= (and b!132942 c!24616) b!132941))

(assert (= (and b!132942 (not c!24616)) b!132938))

(assert (= (and b!132938 c!24617) b!132943))

(assert (= (and b!132938 (not c!24617)) b!132940))

(assert (=> b!132940 m!155841))

(declare-fun m!156357 () Bool)

(assert (=> b!132940 m!156357))

(declare-fun m!156359 () Bool)

(assert (=> b!132942 m!156359))

(assert (=> d!40351 m!156183))

(declare-fun m!156361 () Bool)

(assert (=> d!40351 m!156361))

(declare-fun m!156363 () Bool)

(assert (=> d!40351 m!156363))

(assert (=> d!40351 m!155841))

(declare-fun m!156365 () Bool)

(assert (=> d!40351 m!156365))

(declare-fun m!156367 () Bool)

(assert (=> d!40351 m!156367))

(assert (=> d!40351 m!156365))

(assert (=> d!40351 m!155841))

(declare-fun m!156369 () Bool)

(assert (=> d!40351 m!156369))

(assert (=> b!132605 d!40351))

(declare-fun d!40353 () Bool)

(assert (=> d!40353 (= (apply!116 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69177) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69177)))))

(declare-fun bs!5480 () Bool)

(assert (= bs!5480 d!40353))

(declare-fun m!156371 () Bool)

(assert (=> bs!5480 m!156371))

(assert (=> bs!5480 m!156371))

(declare-fun m!156373 () Bool)

(assert (=> bs!5480 m!156373))

(assert (=> b!132735 d!40353))

(declare-fun d!40355 () Bool)

(declare-fun e!86655 () Bool)

(assert (=> d!40355 e!86655))

(declare-fun res!63959 () Bool)

(assert (=> d!40355 (=> (not res!63959) (not e!86655))))

(declare-fun lt!69320 () ListLongMap!1671)

(assert (=> d!40355 (= res!63959 (contains!886 lt!69320 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun lt!69318 () List!1710)

(assert (=> d!40355 (= lt!69320 (ListLongMap!1672 lt!69318))))

(declare-fun lt!69321 () Unit!4132)

(declare-fun lt!69319 () Unit!4132)

(assert (=> d!40355 (= lt!69321 lt!69319)))

(assert (=> d!40355 (= (getValueByKey!170 lt!69318 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40355 (= lt!69319 (lemmaContainsTupThenGetReturnValue!88 lt!69318 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40355 (= lt!69318 (insertStrictlySorted!91 (toList!851 lt!69170) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40355 (= (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69320)))

(declare-fun b!132944 () Bool)

(declare-fun res!63958 () Bool)

(assert (=> b!132944 (=> (not res!63958) (not e!86655))))

(assert (=> b!132944 (= res!63958 (= (getValueByKey!170 (toList!851 lt!69320) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!132945 () Bool)

(assert (=> b!132945 (= e!86655 (contains!889 (toList!851 lt!69320) (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!40355 res!63959) b!132944))

(assert (= (and b!132944 res!63958) b!132945))

(declare-fun m!156375 () Bool)

(assert (=> d!40355 m!156375))

(declare-fun m!156377 () Bool)

(assert (=> d!40355 m!156377))

(declare-fun m!156379 () Bool)

(assert (=> d!40355 m!156379))

(declare-fun m!156381 () Bool)

(assert (=> d!40355 m!156381))

(declare-fun m!156383 () Bool)

(assert (=> b!132944 m!156383))

(declare-fun m!156385 () Bool)

(assert (=> b!132945 m!156385))

(assert (=> b!132735 d!40355))

(declare-fun d!40357 () Bool)

(assert (=> d!40357 (= (apply!116 lt!69179 lt!69190) (get!1482 (getValueByKey!170 (toList!851 lt!69179) lt!69190)))))

(declare-fun bs!5481 () Bool)

(assert (= bs!5481 d!40357))

(declare-fun m!156387 () Bool)

(assert (=> bs!5481 m!156387))

(assert (=> bs!5481 m!156387))

(declare-fun m!156389 () Bool)

(assert (=> bs!5481 m!156389))

(assert (=> b!132735 d!40357))

(assert (=> b!132735 d!40341))

(declare-fun d!40359 () Bool)

(assert (=> d!40359 (= (apply!116 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69174) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69174)))))

(declare-fun bs!5482 () Bool)

(assert (= bs!5482 d!40359))

(declare-fun m!156391 () Bool)

(assert (=> bs!5482 m!156391))

(assert (=> bs!5482 m!156391))

(declare-fun m!156393 () Bool)

(assert (=> bs!5482 m!156393))

(assert (=> b!132735 d!40359))

(declare-fun d!40361 () Bool)

(assert (=> d!40361 (= (apply!116 lt!69172 lt!69177) (get!1482 (getValueByKey!170 (toList!851 lt!69172) lt!69177)))))

(declare-fun bs!5483 () Bool)

(assert (= bs!5483 d!40361))

(declare-fun m!156395 () Bool)

(assert (=> bs!5483 m!156395))

(assert (=> bs!5483 m!156395))

(declare-fun m!156397 () Bool)

(assert (=> bs!5483 m!156397))

(assert (=> b!132735 d!40361))

(declare-fun d!40363 () Bool)

(assert (=> d!40363 (= (apply!116 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69177) (apply!116 lt!69172 lt!69177))))

(declare-fun lt!69324 () Unit!4132)

(declare-fun choose!828 (ListLongMap!1671 (_ BitVec 64) V!3481 (_ BitVec 64)) Unit!4132)

(assert (=> d!40363 (= lt!69324 (choose!828 lt!69172 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69177))))

(declare-fun e!86658 () Bool)

(assert (=> d!40363 e!86658))

(declare-fun res!63962 () Bool)

(assert (=> d!40363 (=> (not res!63962) (not e!86658))))

(assert (=> d!40363 (= res!63962 (contains!886 lt!69172 lt!69177))))

(assert (=> d!40363 (= (addApplyDifferent!92 lt!69172 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69177) lt!69324)))

(declare-fun b!132949 () Bool)

(assert (=> b!132949 (= e!86658 (not (= lt!69177 lt!69189)))))

(assert (= (and d!40363 res!63962) b!132949))

(assert (=> d!40363 m!156077))

(assert (=> d!40363 m!156079))

(declare-fun m!156399 () Bool)

(assert (=> d!40363 m!156399))

(assert (=> d!40363 m!156087))

(declare-fun m!156401 () Bool)

(assert (=> d!40363 m!156401))

(assert (=> d!40363 m!156077))

(assert (=> b!132735 d!40363))

(declare-fun d!40365 () Bool)

(declare-fun e!86659 () Bool)

(assert (=> d!40365 e!86659))

(declare-fun res!63964 () Bool)

(assert (=> d!40365 (=> (not res!63964) (not e!86659))))

(declare-fun lt!69327 () ListLongMap!1671)

(assert (=> d!40365 (= res!63964 (contains!886 lt!69327 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun lt!69325 () List!1710)

(assert (=> d!40365 (= lt!69327 (ListLongMap!1672 lt!69325))))

(declare-fun lt!69328 () Unit!4132)

(declare-fun lt!69326 () Unit!4132)

(assert (=> d!40365 (= lt!69328 lt!69326)))

(assert (=> d!40365 (= (getValueByKey!170 lt!69325 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40365 (= lt!69326 (lemmaContainsTupThenGetReturnValue!88 lt!69325 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40365 (= lt!69325 (insertStrictlySorted!91 (toList!851 lt!69172) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40365 (= (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69327)))

(declare-fun b!132950 () Bool)

(declare-fun res!63963 () Bool)

(assert (=> b!132950 (=> (not res!63963) (not e!86659))))

(assert (=> b!132950 (= res!63963 (= (getValueByKey!170 (toList!851 lt!69327) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!132951 () Bool)

(assert (=> b!132951 (= e!86659 (contains!889 (toList!851 lt!69327) (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!40365 res!63964) b!132950))

(assert (= (and b!132950 res!63963) b!132951))

(declare-fun m!156403 () Bool)

(assert (=> d!40365 m!156403))

(declare-fun m!156405 () Bool)

(assert (=> d!40365 m!156405))

(declare-fun m!156407 () Bool)

(assert (=> d!40365 m!156407))

(declare-fun m!156409 () Bool)

(assert (=> d!40365 m!156409))

(declare-fun m!156411 () Bool)

(assert (=> b!132950 m!156411))

(declare-fun m!156413 () Bool)

(assert (=> b!132951 m!156413))

(assert (=> b!132735 d!40365))

(declare-fun d!40367 () Bool)

(declare-fun e!86660 () Bool)

(assert (=> d!40367 e!86660))

(declare-fun res!63966 () Bool)

(assert (=> d!40367 (=> (not res!63966) (not e!86660))))

(declare-fun lt!69331 () ListLongMap!1671)

(assert (=> d!40367 (= res!63966 (contains!886 lt!69331 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun lt!69329 () List!1710)

(assert (=> d!40367 (= lt!69331 (ListLongMap!1672 lt!69329))))

(declare-fun lt!69332 () Unit!4132)

(declare-fun lt!69330 () Unit!4132)

(assert (=> d!40367 (= lt!69332 lt!69330)))

(assert (=> d!40367 (= (getValueByKey!170 lt!69329 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40367 (= lt!69330 (lemmaContainsTupThenGetReturnValue!88 lt!69329 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40367 (= lt!69329 (insertStrictlySorted!91 (toList!851 lt!69179) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40367 (= (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69331)))

(declare-fun b!132952 () Bool)

(declare-fun res!63965 () Bool)

(assert (=> b!132952 (=> (not res!63965) (not e!86660))))

(assert (=> b!132952 (= res!63965 (= (getValueByKey!170 (toList!851 lt!69331) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!132953 () Bool)

(assert (=> b!132953 (= e!86660 (contains!889 (toList!851 lt!69331) (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!40367 res!63966) b!132952))

(assert (= (and b!132952 res!63965) b!132953))

(declare-fun m!156415 () Bool)

(assert (=> d!40367 m!156415))

(declare-fun m!156417 () Bool)

(assert (=> d!40367 m!156417))

(declare-fun m!156419 () Bool)

(assert (=> d!40367 m!156419))

(declare-fun m!156421 () Bool)

(assert (=> d!40367 m!156421))

(declare-fun m!156423 () Bool)

(assert (=> b!132952 m!156423))

(declare-fun m!156425 () Bool)

(assert (=> b!132953 m!156425))

(assert (=> b!132735 d!40367))

(declare-fun d!40369 () Bool)

(assert (=> d!40369 (= (apply!116 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69190) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69190)))))

(declare-fun bs!5484 () Bool)

(assert (= bs!5484 d!40369))

(declare-fun m!156427 () Bool)

(assert (=> bs!5484 m!156427))

(assert (=> bs!5484 m!156427))

(declare-fun m!156429 () Bool)

(assert (=> bs!5484 m!156429))

(assert (=> b!132735 d!40369))

(declare-fun d!40371 () Bool)

(declare-fun e!86661 () Bool)

(assert (=> d!40371 e!86661))

(declare-fun res!63968 () Bool)

(assert (=> d!40371 (=> (not res!63968) (not e!86661))))

(declare-fun lt!69335 () ListLongMap!1671)

(assert (=> d!40371 (= res!63968 (contains!886 lt!69335 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun lt!69333 () List!1710)

(assert (=> d!40371 (= lt!69335 (ListLongMap!1672 lt!69333))))

(declare-fun lt!69336 () Unit!4132)

(declare-fun lt!69334 () Unit!4132)

(assert (=> d!40371 (= lt!69336 lt!69334)))

(assert (=> d!40371 (= (getValueByKey!170 lt!69333 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40371 (= lt!69334 (lemmaContainsTupThenGetReturnValue!88 lt!69333 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40371 (= lt!69333 (insertStrictlySorted!91 (toList!851 lt!69176) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40371 (= (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69335)))

(declare-fun b!132954 () Bool)

(declare-fun res!63967 () Bool)

(assert (=> b!132954 (=> (not res!63967) (not e!86661))))

(assert (=> b!132954 (= res!63967 (= (getValueByKey!170 (toList!851 lt!69335) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!132955 () Bool)

(assert (=> b!132955 (= e!86661 (contains!889 (toList!851 lt!69335) (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!40371 res!63968) b!132954))

(assert (= (and b!132954 res!63967) b!132955))

(declare-fun m!156431 () Bool)

(assert (=> d!40371 m!156431))

(declare-fun m!156433 () Bool)

(assert (=> d!40371 m!156433))

(declare-fun m!156435 () Bool)

(assert (=> d!40371 m!156435))

(declare-fun m!156437 () Bool)

(assert (=> d!40371 m!156437))

(declare-fun m!156439 () Bool)

(assert (=> b!132954 m!156439))

(declare-fun m!156441 () Bool)

(assert (=> b!132955 m!156441))

(assert (=> b!132735 d!40371))

(declare-fun d!40373 () Bool)

(declare-fun e!86662 () Bool)

(assert (=> d!40373 e!86662))

(declare-fun res!63969 () Bool)

(assert (=> d!40373 (=> res!63969 e!86662)))

(declare-fun lt!69338 () Bool)

(assert (=> d!40373 (= res!63969 (not lt!69338))))

(declare-fun lt!69340 () Bool)

(assert (=> d!40373 (= lt!69338 lt!69340)))

(declare-fun lt!69337 () Unit!4132)

(declare-fun e!86663 () Unit!4132)

(assert (=> d!40373 (= lt!69337 e!86663)))

(declare-fun c!24618 () Bool)

(assert (=> d!40373 (= c!24618 lt!69340)))

(assert (=> d!40373 (= lt!69340 (containsKey!174 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182))))

(assert (=> d!40373 (= (contains!886 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69182) lt!69338)))

(declare-fun b!132956 () Bool)

(declare-fun lt!69339 () Unit!4132)

(assert (=> b!132956 (= e!86663 lt!69339)))

(assert (=> b!132956 (= lt!69339 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182))))

(assert (=> b!132956 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182))))

(declare-fun b!132957 () Bool)

(declare-fun Unit!4144 () Unit!4132)

(assert (=> b!132957 (= e!86663 Unit!4144)))

(declare-fun b!132958 () Bool)

(assert (=> b!132958 (= e!86662 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182)))))

(assert (= (and d!40373 c!24618) b!132956))

(assert (= (and d!40373 (not c!24618)) b!132957))

(assert (= (and d!40373 (not res!63969)) b!132958))

(declare-fun m!156443 () Bool)

(assert (=> d!40373 m!156443))

(declare-fun m!156445 () Bool)

(assert (=> b!132956 m!156445))

(declare-fun m!156447 () Bool)

(assert (=> b!132956 m!156447))

(assert (=> b!132956 m!156447))

(declare-fun m!156449 () Bool)

(assert (=> b!132956 m!156449))

(assert (=> b!132958 m!156447))

(assert (=> b!132958 m!156447))

(assert (=> b!132958 m!156449))

(assert (=> b!132735 d!40373))

(declare-fun d!40375 () Bool)

(assert (=> d!40375 (= (apply!116 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69174) (apply!116 lt!69170 lt!69174))))

(declare-fun lt!69341 () Unit!4132)

(assert (=> d!40375 (= lt!69341 (choose!828 lt!69170 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69174))))

(declare-fun e!86664 () Bool)

(assert (=> d!40375 e!86664))

(declare-fun res!63970 () Bool)

(assert (=> d!40375 (=> (not res!63970) (not e!86664))))

(assert (=> d!40375 (= res!63970 (contains!886 lt!69170 lt!69174))))

(assert (=> d!40375 (= (addApplyDifferent!92 lt!69170 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69174) lt!69341)))

(declare-fun b!132959 () Bool)

(assert (=> b!132959 (= e!86664 (not (= lt!69174 lt!69171)))))

(assert (= (and d!40375 res!63970) b!132959))

(assert (=> d!40375 m!156065))

(assert (=> d!40375 m!156073))

(declare-fun m!156451 () Bool)

(assert (=> d!40375 m!156451))

(assert (=> d!40375 m!156075))

(declare-fun m!156453 () Bool)

(assert (=> d!40375 m!156453))

(assert (=> d!40375 m!156065))

(assert (=> b!132735 d!40375))

(declare-fun d!40377 () Bool)

(assert (=> d!40377 (= (apply!116 lt!69170 lt!69174) (get!1482 (getValueByKey!170 (toList!851 lt!69170) lt!69174)))))

(declare-fun bs!5485 () Bool)

(assert (= bs!5485 d!40377))

(declare-fun m!156455 () Bool)

(assert (=> bs!5485 m!156455))

(assert (=> bs!5485 m!156455))

(declare-fun m!156457 () Bool)

(assert (=> bs!5485 m!156457))

(assert (=> b!132735 d!40377))

(declare-fun d!40379 () Bool)

(assert (=> d!40379 (= (apply!116 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69190) (apply!116 lt!69179 lt!69190))))

(declare-fun lt!69342 () Unit!4132)

(assert (=> d!40379 (= lt!69342 (choose!828 lt!69179 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69190))))

(declare-fun e!86665 () Bool)

(assert (=> d!40379 e!86665))

(declare-fun res!63971 () Bool)

(assert (=> d!40379 (=> (not res!63971) (not e!86665))))

(assert (=> d!40379 (= res!63971 (contains!886 lt!69179 lt!69190))))

(assert (=> d!40379 (= (addApplyDifferent!92 lt!69179 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69190) lt!69342)))

(declare-fun b!132960 () Bool)

(assert (=> b!132960 (= e!86665 (not (= lt!69190 lt!69180)))))

(assert (= (and d!40379 res!63971) b!132960))

(assert (=> d!40379 m!156071))

(assert (=> d!40379 m!156093))

(declare-fun m!156459 () Bool)

(assert (=> d!40379 m!156459))

(assert (=> d!40379 m!156091))

(declare-fun m!156461 () Bool)

(assert (=> d!40379 m!156461))

(assert (=> d!40379 m!156071))

(assert (=> b!132735 d!40379))

(declare-fun d!40381 () Bool)

(assert (=> d!40381 (contains!886 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69182)))

(declare-fun lt!69345 () Unit!4132)

(declare-fun choose!829 (ListLongMap!1671 (_ BitVec 64) V!3481 (_ BitVec 64)) Unit!4132)

(assert (=> d!40381 (= lt!69345 (choose!829 lt!69176 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69182))))

(assert (=> d!40381 (contains!886 lt!69176 lt!69182)))

(assert (=> d!40381 (= (addStillContains!92 lt!69176 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69182) lt!69345)))

(declare-fun bs!5486 () Bool)

(assert (= bs!5486 d!40381))

(assert (=> bs!5486 m!156069))

(assert (=> bs!5486 m!156069))

(assert (=> bs!5486 m!156081))

(declare-fun m!156463 () Bool)

(assert (=> bs!5486 m!156463))

(declare-fun m!156465 () Bool)

(assert (=> bs!5486 m!156465))

(assert (=> b!132735 d!40381))

(declare-fun b!132962 () Bool)

(declare-fun e!86678 () Bool)

(declare-fun e!86671 () Bool)

(assert (=> b!132962 (= e!86678 e!86671)))

(declare-fun res!63976 () Bool)

(declare-fun call!14654 () Bool)

(assert (=> b!132962 (= res!63976 call!14654)))

(assert (=> b!132962 (=> (not res!63976) (not e!86671))))

(declare-fun call!14650 () ListLongMap!1671)

(declare-fun call!14653 () ListLongMap!1671)

(declare-fun c!24622 () Bool)

(declare-fun call!14656 () ListLongMap!1671)

(declare-fun call!14655 () ListLongMap!1671)

(declare-fun bm!14647 () Bool)

(declare-fun c!24624 () Bool)

(assert (=> bm!14647 (= call!14650 (+!163 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655)) (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun bm!14648 () Bool)

(assert (=> bm!14648 (= call!14653 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!132963 () Bool)

(declare-fun e!86676 () Bool)

(assert (=> b!132963 (= e!86676 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132964 () Bool)

(declare-fun e!86673 () Bool)

(assert (=> b!132964 (= e!86673 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14649 () Bool)

(assert (=> bm!14649 (= call!14655 call!14656)))

(declare-fun b!132965 () Bool)

(declare-fun e!86675 () ListLongMap!1671)

(declare-fun e!86677 () ListLongMap!1671)

(assert (=> b!132965 (= e!86675 e!86677)))

(assert (=> b!132965 (= c!24622 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132966 () Bool)

(declare-fun e!86668 () Bool)

(declare-fun e!86674 () Bool)

(assert (=> b!132966 (= e!86668 e!86674)))

(declare-fun res!63977 () Bool)

(assert (=> b!132966 (=> (not res!63977) (not e!86674))))

(declare-fun lt!69362 () ListLongMap!1671)

(assert (=> b!132966 (= res!63977 (contains!886 lt!69362 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!132966 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun bm!14650 () Bool)

(assert (=> bm!14650 (= call!14654 (contains!886 lt!69362 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132967 () Bool)

(assert (=> b!132967 (= e!86674 (= (apply!116 lt!69362 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132967 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (_values!2847 newMap!16))))))

(assert (=> b!132967 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!132969 () Bool)

(declare-fun e!86666 () Bool)

(assert (=> b!132969 (= e!86666 (= (apply!116 lt!69362 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 newMap!16)))))

(declare-fun b!132970 () Bool)

(declare-fun e!86670 () Unit!4132)

(declare-fun lt!69364 () Unit!4132)

(assert (=> b!132970 (= e!86670 lt!69364)))

(declare-fun lt!69352 () ListLongMap!1671)

(assert (=> b!132970 (= lt!69352 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69360 () (_ BitVec 64))

(assert (=> b!132970 (= lt!69360 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69358 () (_ BitVec 64))

(assert (=> b!132970 (= lt!69358 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69367 () Unit!4132)

(assert (=> b!132970 (= lt!69367 (addStillContains!92 lt!69352 lt!69360 (zeroValue!2719 newMap!16) lt!69358))))

(assert (=> b!132970 (contains!886 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))) lt!69358)))

(declare-fun lt!69359 () Unit!4132)

(assert (=> b!132970 (= lt!69359 lt!69367)))

(declare-fun lt!69348 () ListLongMap!1671)

(assert (=> b!132970 (= lt!69348 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69365 () (_ BitVec 64))

(assert (=> b!132970 (= lt!69365 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69353 () (_ BitVec 64))

(assert (=> b!132970 (= lt!69353 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69354 () Unit!4132)

(assert (=> b!132970 (= lt!69354 (addApplyDifferent!92 lt!69348 lt!69365 (minValue!2719 newMap!16) lt!69353))))

(assert (=> b!132970 (= (apply!116 (+!163 lt!69348 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))) lt!69353) (apply!116 lt!69348 lt!69353))))

(declare-fun lt!69363 () Unit!4132)

(assert (=> b!132970 (= lt!69363 lt!69354)))

(declare-fun lt!69346 () ListLongMap!1671)

(assert (=> b!132970 (= lt!69346 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69347 () (_ BitVec 64))

(assert (=> b!132970 (= lt!69347 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69350 () (_ BitVec 64))

(assert (=> b!132970 (= lt!69350 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69349 () Unit!4132)

(assert (=> b!132970 (= lt!69349 (addApplyDifferent!92 lt!69346 lt!69347 (zeroValue!2719 newMap!16) lt!69350))))

(assert (=> b!132970 (= (apply!116 (+!163 lt!69346 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))) lt!69350) (apply!116 lt!69346 lt!69350))))

(declare-fun lt!69357 () Unit!4132)

(assert (=> b!132970 (= lt!69357 lt!69349)))

(declare-fun lt!69355 () ListLongMap!1671)

(assert (=> b!132970 (= lt!69355 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69356 () (_ BitVec 64))

(assert (=> b!132970 (= lt!69356 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69366 () (_ BitVec 64))

(assert (=> b!132970 (= lt!69366 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!132970 (= lt!69364 (addApplyDifferent!92 lt!69355 lt!69356 (minValue!2719 newMap!16) lt!69366))))

(assert (=> b!132970 (= (apply!116 (+!163 lt!69355 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))) lt!69366) (apply!116 lt!69355 lt!69366))))

(declare-fun b!132971 () Bool)

(declare-fun e!86667 () ListLongMap!1671)

(assert (=> b!132971 (= e!86667 call!14655)))

(declare-fun b!132972 () Bool)

(declare-fun call!14651 () ListLongMap!1671)

(assert (=> b!132972 (= e!86677 call!14651)))

(declare-fun b!132973 () Bool)

(declare-fun res!63973 () Bool)

(declare-fun e!86672 () Bool)

(assert (=> b!132973 (=> (not res!63973) (not e!86672))))

(declare-fun e!86669 () Bool)

(assert (=> b!132973 (= res!63973 e!86669)))

(declare-fun c!24621 () Bool)

(assert (=> b!132973 (= c!24621 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!14651 () Bool)

(assert (=> bm!14651 (= call!14656 call!14653)))

(declare-fun b!132974 () Bool)

(assert (=> b!132974 (= e!86678 (not call!14654))))

(declare-fun b!132975 () Bool)

(declare-fun c!24623 () Bool)

(assert (=> b!132975 (= c!24623 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!132975 (= e!86677 e!86667)))

(declare-fun b!132976 () Bool)

(declare-fun Unit!4145 () Unit!4132)

(assert (=> b!132976 (= e!86670 Unit!4145)))

(declare-fun b!132977 () Bool)

(assert (=> b!132977 (= e!86675 (+!163 call!14650 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun bm!14652 () Bool)

(assert (=> bm!14652 (= call!14651 call!14650)))

(declare-fun b!132978 () Bool)

(assert (=> b!132978 (= e!86667 call!14651)))

(declare-fun b!132979 () Bool)

(declare-fun call!14652 () Bool)

(assert (=> b!132979 (= e!86669 (not call!14652))))

(declare-fun b!132980 () Bool)

(assert (=> b!132980 (= e!86672 e!86678)))

(declare-fun c!24620 () Bool)

(assert (=> b!132980 (= c!24620 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14653 () Bool)

(assert (=> bm!14653 (= call!14652 (contains!886 lt!69362 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132968 () Bool)

(assert (=> b!132968 (= e!86669 e!86666)))

(declare-fun res!63975 () Bool)

(assert (=> b!132968 (= res!63975 call!14652)))

(assert (=> b!132968 (=> (not res!63975) (not e!86666))))

(declare-fun d!40383 () Bool)

(assert (=> d!40383 e!86672))

(declare-fun res!63980 () Bool)

(assert (=> d!40383 (=> (not res!63980) (not e!86672))))

(assert (=> d!40383 (= res!63980 (or (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))))

(declare-fun lt!69351 () ListLongMap!1671)

(assert (=> d!40383 (= lt!69362 lt!69351)))

(declare-fun lt!69361 () Unit!4132)

(assert (=> d!40383 (= lt!69361 e!86670)))

(declare-fun c!24619 () Bool)

(assert (=> d!40383 (= c!24619 e!86673)))

(declare-fun res!63979 () Bool)

(assert (=> d!40383 (=> (not res!63979) (not e!86673))))

(assert (=> d!40383 (= res!63979 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40383 (= lt!69351 e!86675)))

(assert (=> d!40383 (= c!24624 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40383 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40383 (= (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69362)))

(declare-fun b!132981 () Bool)

(declare-fun res!63972 () Bool)

(assert (=> b!132981 (=> (not res!63972) (not e!86672))))

(assert (=> b!132981 (= res!63972 e!86668)))

(declare-fun res!63978 () Bool)

(assert (=> b!132981 (=> res!63978 e!86668)))

(assert (=> b!132981 (= res!63978 (not e!86676))))

(declare-fun res!63974 () Bool)

(assert (=> b!132981 (=> (not res!63974) (not e!86676))))

(assert (=> b!132981 (= res!63974 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!132982 () Bool)

(assert (=> b!132982 (= e!86671 (= (apply!116 lt!69362 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 newMap!16)))))

(assert (= (and d!40383 c!24624) b!132977))

(assert (= (and d!40383 (not c!24624)) b!132965))

(assert (= (and b!132965 c!24622) b!132972))

(assert (= (and b!132965 (not c!24622)) b!132975))

(assert (= (and b!132975 c!24623) b!132978))

(assert (= (and b!132975 (not c!24623)) b!132971))

(assert (= (or b!132978 b!132971) bm!14649))

(assert (= (or b!132972 bm!14649) bm!14651))

(assert (= (or b!132972 b!132978) bm!14652))

(assert (= (or b!132977 bm!14651) bm!14648))

(assert (= (or b!132977 bm!14652) bm!14647))

(assert (= (and d!40383 res!63979) b!132964))

(assert (= (and d!40383 c!24619) b!132970))

(assert (= (and d!40383 (not c!24619)) b!132976))

(assert (= (and d!40383 res!63980) b!132981))

(assert (= (and b!132981 res!63974) b!132963))

(assert (= (and b!132981 (not res!63978)) b!132966))

(assert (= (and b!132966 res!63977) b!132967))

(assert (= (and b!132981 res!63972) b!132973))

(assert (= (and b!132973 c!24621) b!132968))

(assert (= (and b!132973 (not c!24621)) b!132979))

(assert (= (and b!132968 res!63975) b!132969))

(assert (= (or b!132968 b!132979) bm!14653))

(assert (= (and b!132973 res!63973) b!132980))

(assert (= (and b!132980 c!24620) b!132962))

(assert (= (and b!132980 (not c!24620)) b!132974))

(assert (= (and b!132962 res!63976) b!132982))

(assert (= (or b!132962 b!132974) bm!14650))

(declare-fun b_lambda!5905 () Bool)

(assert (=> (not b_lambda!5905) (not b!132967)))

(assert (=> b!132967 t!6164))

(declare-fun b_and!8225 () Bool)

(assert (= b_and!8221 (and (=> t!6164 result!3993) b_and!8225)))

(assert (=> b!132967 t!6166))

(declare-fun b_and!8227 () Bool)

(assert (= b_and!8223 (and (=> t!6166 result!3995) b_and!8227)))

(assert (=> b!132966 m!156125))

(assert (=> b!132966 m!156125))

(declare-fun m!156467 () Bool)

(assert (=> b!132966 m!156467))

(declare-fun m!156469 () Bool)

(assert (=> bm!14648 m!156469))

(declare-fun m!156471 () Bool)

(assert (=> bm!14647 m!156471))

(declare-fun m!156473 () Bool)

(assert (=> b!132967 m!156473))

(assert (=> b!132967 m!156135))

(declare-fun m!156475 () Bool)

(assert (=> b!132967 m!156475))

(assert (=> b!132967 m!156135))

(assert (=> b!132967 m!156125))

(assert (=> b!132967 m!156473))

(assert (=> b!132967 m!156125))

(declare-fun m!156477 () Bool)

(assert (=> b!132967 m!156477))

(assert (=> b!132963 m!156125))

(assert (=> b!132963 m!156125))

(assert (=> b!132963 m!156141))

(assert (=> b!132964 m!156125))

(assert (=> b!132964 m!156125))

(assert (=> b!132964 m!156141))

(declare-fun m!156479 () Bool)

(assert (=> b!132969 m!156479))

(declare-fun m!156481 () Bool)

(assert (=> b!132977 m!156481))

(declare-fun m!156483 () Bool)

(assert (=> bm!14650 m!156483))

(declare-fun m!156485 () Bool)

(assert (=> b!132970 m!156485))

(declare-fun m!156487 () Bool)

(assert (=> b!132970 m!156487))

(declare-fun m!156489 () Bool)

(assert (=> b!132970 m!156489))

(declare-fun m!156491 () Bool)

(assert (=> b!132970 m!156491))

(assert (=> b!132970 m!156485))

(declare-fun m!156493 () Bool)

(assert (=> b!132970 m!156493))

(declare-fun m!156495 () Bool)

(assert (=> b!132970 m!156495))

(declare-fun m!156497 () Bool)

(assert (=> b!132970 m!156497))

(declare-fun m!156499 () Bool)

(assert (=> b!132970 m!156499))

(assert (=> b!132970 m!156489))

(declare-fun m!156501 () Bool)

(assert (=> b!132970 m!156501))

(declare-fun m!156503 () Bool)

(assert (=> b!132970 m!156503))

(declare-fun m!156505 () Bool)

(assert (=> b!132970 m!156505))

(declare-fun m!156507 () Bool)

(assert (=> b!132970 m!156507))

(declare-fun m!156509 () Bool)

(assert (=> b!132970 m!156509))

(assert (=> b!132970 m!156497))

(assert (=> b!132970 m!156125))

(assert (=> b!132970 m!156469))

(declare-fun m!156511 () Bool)

(assert (=> b!132970 m!156511))

(assert (=> b!132970 m!156491))

(declare-fun m!156513 () Bool)

(assert (=> b!132970 m!156513))

(declare-fun m!156515 () Bool)

(assert (=> b!132982 m!156515))

(declare-fun m!156517 () Bool)

(assert (=> bm!14653 m!156517))

(assert (=> d!40383 m!156183))

(assert (=> d!40281 d!40383))

(declare-fun d!40385 () Bool)

(declare-fun e!86681 () Bool)

(assert (=> d!40385 e!86681))

(declare-fun res!63985 () Bool)

(assert (=> d!40385 (=> (not res!63985) (not e!86681))))

(declare-fun lt!69372 () SeekEntryResult!278)

(assert (=> d!40385 (= res!63985 ((_ is Found!278) lt!69372))))

(assert (=> d!40385 (= lt!69372 (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(declare-fun lt!69373 () Unit!4132)

(declare-fun choose!830 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 64) Int) Unit!4132)

(assert (=> d!40385 (= lt!69373 (choose!830 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40385 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40385 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)) lt!69373)))

(declare-fun b!132987 () Bool)

(declare-fun res!63986 () Bool)

(assert (=> b!132987 (=> (not res!63986) (not e!86681))))

(assert (=> b!132987 (= res!63986 (inRange!0 (index!3273 lt!69372) (mask!7163 newMap!16)))))

(declare-fun b!132988 () Bool)

(assert (=> b!132988 (= e!86681 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69372)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> b!132988 (and (bvsge (index!3273 lt!69372) #b00000000000000000000000000000000) (bvslt (index!3273 lt!69372) (size!2518 (_keys!4612 newMap!16))))))

(assert (= (and d!40385 res!63985) b!132987))

(assert (= (and b!132987 res!63986) b!132988))

(assert (=> d!40385 m!155841))

(assert (=> d!40385 m!155961))

(assert (=> d!40385 m!155841))

(declare-fun m!156519 () Bool)

(assert (=> d!40385 m!156519))

(assert (=> d!40385 m!156183))

(declare-fun m!156521 () Bool)

(assert (=> b!132987 m!156521))

(declare-fun m!156523 () Bool)

(assert (=> b!132988 m!156523))

(assert (=> bm!14589 d!40385))

(declare-fun d!40387 () Bool)

(declare-fun res!63987 () Bool)

(declare-fun e!86682 () Bool)

(assert (=> d!40387 (=> res!63987 e!86682)))

(assert (=> d!40387 (= res!63987 (= (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> d!40387 (= (arrayContainsKey!0 (_keys!4612 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b00000000000000000000000000000000) e!86682)))

(declare-fun b!132989 () Bool)

(declare-fun e!86683 () Bool)

(assert (=> b!132989 (= e!86682 e!86683)))

(declare-fun res!63988 () Bool)

(assert (=> b!132989 (=> (not res!63988) (not e!86683))))

(assert (=> b!132989 (= res!63988 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!132990 () Bool)

(assert (=> b!132990 (= e!86683 (arrayContainsKey!0 (_keys!4612 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40387 (not res!63987)) b!132989))

(assert (= (and b!132989 res!63988) b!132990))

(assert (=> d!40387 m!156125))

(assert (=> b!132990 m!155841))

(declare-fun m!156525 () Bool)

(assert (=> b!132990 m!156525))

(assert (=> bm!14597 d!40387))

(declare-fun d!40389 () Bool)

(declare-fun res!63989 () Bool)

(declare-fun e!86684 () Bool)

(assert (=> d!40389 (=> (not res!63989) (not e!86684))))

(assert (=> d!40389 (= res!63989 (simpleValid!92 (_2!1304 lt!69115)))))

(assert (=> d!40389 (= (valid!529 (_2!1304 lt!69115)) e!86684)))

(declare-fun b!132991 () Bool)

(declare-fun res!63990 () Bool)

(assert (=> b!132991 (=> (not res!63990) (not e!86684))))

(assert (=> b!132991 (= res!63990 (= (arrayCountValidKeys!0 (_keys!4612 (_2!1304 lt!69115)) #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))) (_size!597 (_2!1304 lt!69115))))))

(declare-fun b!132992 () Bool)

(declare-fun res!63991 () Bool)

(assert (=> b!132992 (=> (not res!63991) (not e!86684))))

(assert (=> b!132992 (= res!63991 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4612 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115))))))

(declare-fun b!132993 () Bool)

(assert (=> b!132993 (= e!86684 (arrayNoDuplicates!0 (_keys!4612 (_2!1304 lt!69115)) #b00000000000000000000000000000000 Nil!1708))))

(assert (= (and d!40389 res!63989) b!132991))

(assert (= (and b!132991 res!63990) b!132992))

(assert (= (and b!132992 res!63991) b!132993))

(declare-fun m!156527 () Bool)

(assert (=> d!40389 m!156527))

(declare-fun m!156529 () Bool)

(assert (=> b!132991 m!156529))

(declare-fun m!156531 () Bool)

(assert (=> b!132992 m!156531))

(declare-fun m!156533 () Bool)

(assert (=> b!132993 m!156533))

(assert (=> d!40265 d!40389))

(assert (=> d!40265 d!40279))

(declare-fun b!133028 () Bool)

(declare-fun e!86704 () Bool)

(declare-fun lt!69462 () SeekEntryResult!278)

(assert (=> b!133028 (= e!86704 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69462)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!133029 () Bool)

(declare-fun e!86705 () Bool)

(declare-fun e!86708 () Bool)

(assert (=> b!133029 (= e!86705 e!86708)))

(declare-fun res!64015 () Bool)

(declare-fun call!14665 () Bool)

(assert (=> b!133029 (= res!64015 call!14665)))

(assert (=> b!133029 (=> (not res!64015) (not e!86708))))

(declare-fun b!133030 () Bool)

(declare-fun e!86701 () Unit!4132)

(declare-fun Unit!4146 () Unit!4132)

(assert (=> b!133030 (= e!86701 Unit!4146)))

(declare-fun bm!14662 () Bool)

(declare-fun call!14667 () SeekEntryResult!278)

(assert (=> bm!14662 (= call!14667 (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(declare-fun c!24633 () Bool)

(declare-fun call!14668 () Bool)

(declare-fun bm!14663 () Bool)

(declare-fun c!24635 () Bool)

(declare-fun lt!69459 () SeekEntryResult!278)

(assert (=> bm!14663 (= call!14668 (inRange!0 (ite c!24635 (index!3273 lt!69462) (ite c!24633 (index!3272 lt!69459) (index!3275 lt!69459))) (mask!7163 newMap!16)))))

(declare-fun b!133031 () Bool)

(declare-fun call!14666 () Bool)

(assert (=> b!133031 (= e!86708 (not call!14666))))

(declare-fun bm!14664 () Bool)

(assert (=> bm!14664 (= call!14666 (arrayContainsKey!0 (_keys!4612 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!40391 () Bool)

(declare-fun e!86706 () Bool)

(assert (=> d!40391 e!86706))

(declare-fun res!64017 () Bool)

(assert (=> d!40391 (=> (not res!64017) (not e!86706))))

(declare-fun lt!69440 () tuple2!2586)

(assert (=> d!40391 (= res!64017 (_1!1304 lt!69440))))

(assert (=> d!40391 (= lt!69440 (tuple2!2587 true (LongMapFixedSize!1097 (defaultEntry!2864 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd (_size!597 newMap!16) #b00000000000000000000000000000001) (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (_vacant!597 newMap!16))))))

(declare-fun lt!69456 () Unit!4132)

(declare-fun lt!69458 () Unit!4132)

(assert (=> d!40391 (= lt!69456 lt!69458)))

(declare-fun lt!69447 () array!4757)

(declare-fun lt!69436 () array!4759)

(assert (=> d!40391 (contains!886 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))))))

(assert (=> d!40391 (= lt!69458 (lemmaValidKeyInArrayIsInListMap!120 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40391 (= lt!69436 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))))

(assert (=> d!40391 (= lt!69447 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun lt!69441 () Unit!4132)

(declare-fun lt!69445 () Unit!4132)

(assert (=> d!40391 (= lt!69441 lt!69445)))

(declare-fun lt!69449 () array!4757)

(assert (=> d!40391 (= (arrayCountValidKeys!0 lt!69449 (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4757 (_ BitVec 32)) Unit!4132)

(assert (=> d!40391 (= lt!69445 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!69449 (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))))))

(assert (=> d!40391 (= lt!69449 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun lt!69438 () Unit!4132)

(declare-fun lt!69443 () Unit!4132)

(assert (=> d!40391 (= lt!69438 lt!69443)))

(declare-fun lt!69444 () array!4757)

(assert (=> d!40391 (arrayContainsKey!0 lt!69444 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!40391 (= lt!69443 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!69444 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))))))

(assert (=> d!40391 (= lt!69444 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun lt!69451 () Unit!4132)

(declare-fun lt!69446 () Unit!4132)

(assert (=> d!40391 (= lt!69451 lt!69446)))

(assert (=> d!40391 (= (+!163 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!519 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!42 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) (_ BitVec 64) V!3481 Int) Unit!4132)

(assert (=> d!40391 (= lt!69446 (lemmaAddValidKeyToArrayThenAddPairToListMap!42 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69463 () Unit!4132)

(declare-fun lt!69454 () Unit!4132)

(assert (=> d!40391 (= lt!69463 lt!69454)))

(assert (=> d!40391 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (mask!7163 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4757 (_ BitVec 32) (_ BitVec 32)) Unit!4132)

(assert (=> d!40391 (= lt!69454 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (mask!7163 newMap!16)))))

(declare-fun lt!69452 () Unit!4132)

(declare-fun lt!69448 () Unit!4132)

(assert (=> d!40391 (= lt!69452 lt!69448)))

(assert (=> d!40391 (= (arrayCountValidKeys!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4612 newMap!16) #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4757 (_ BitVec 32) (_ BitVec 64)) Unit!4132)

(assert (=> d!40391 (= lt!69448 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4612 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun lt!69461 () Unit!4132)

(declare-fun lt!69442 () Unit!4132)

(assert (=> d!40391 (= lt!69461 lt!69442)))

(declare-fun lt!69450 () (_ BitVec 32))

(declare-fun lt!69457 () List!1711)

(assert (=> d!40391 (arrayNoDuplicates!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) lt!69450 lt!69457)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4757 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1711) Unit!4132)

(assert (=> d!40391 (= lt!69442 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4612 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) lt!69450 lt!69457))))

(assert (=> d!40391 (= lt!69457 Nil!1708)))

(assert (=> d!40391 (= lt!69450 #b00000000000000000000000000000000)))

(declare-fun lt!69435 () Unit!4132)

(assert (=> d!40391 (= lt!69435 e!86701)))

(declare-fun c!24634 () Bool)

(assert (=> d!40391 (= c!24634 (arrayContainsKey!0 (_keys!4612 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!69434 () Unit!4132)

(declare-fun e!86703 () Unit!4132)

(assert (=> d!40391 (= lt!69434 e!86703)))

(assert (=> d!40391 (= c!24635 (contains!886 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> d!40391 (valid!529 newMap!16)))

(assert (=> d!40391 (= (updateHelperNewKey!61 newMap!16 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))) lt!69440)))

(declare-fun b!133032 () Bool)

(declare-fun res!64010 () Bool)

(declare-fun e!86702 () Bool)

(assert (=> b!133032 (=> (not res!64010) (not e!86702))))

(assert (=> b!133032 (= res!64010 call!14665)))

(declare-fun e!86707 () Bool)

(assert (=> b!133032 (= e!86707 e!86702)))

(declare-fun b!133033 () Bool)

(declare-fun res!64011 () Bool)

(assert (=> b!133033 (=> (not res!64011) (not e!86706))))

(assert (=> b!133033 (= res!64011 (contains!886 (map!1391 (_2!1304 lt!69440)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun bm!14665 () Bool)

(assert (=> bm!14665 (= call!14665 call!14668)))

(declare-fun b!133034 () Bool)

(assert (=> b!133034 (= e!86706 (= (map!1391 (_2!1304 lt!69440)) (+!163 (map!1391 newMap!16) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133035 () Bool)

(assert (=> b!133035 (= e!86705 ((_ is Undefined!278) lt!69459))))

(declare-fun b!133036 () Bool)

(declare-fun res!64012 () Bool)

(assert (=> b!133036 (= res!64012 call!14668)))

(assert (=> b!133036 (=> (not res!64012) (not e!86704))))

(declare-fun b!133037 () Bool)

(declare-fun Unit!4147 () Unit!4132)

(assert (=> b!133037 (= e!86701 Unit!4147)))

(declare-fun lt!69437 () Unit!4132)

(declare-fun lemmaArrayContainsKeyThenInListMap!42 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 64) (_ BitVec 32) Int) Unit!4132)

(assert (=> b!133037 (= lt!69437 (lemmaArrayContainsKeyThenInListMap!42 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(assert (=> b!133037 (contains!886 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))

(declare-fun lt!69455 () Unit!4132)

(assert (=> b!133037 (= lt!69455 lt!69437)))

(assert (=> b!133037 false))

(declare-fun b!133038 () Bool)

(declare-fun lt!69460 () Unit!4132)

(assert (=> b!133038 (= e!86703 lt!69460)))

(assert (=> b!133038 (= lt!69460 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)))))

(assert (=> b!133038 (= lt!69459 call!14667)))

(assert (=> b!133038 (= c!24633 ((_ is MissingZero!278) lt!69459))))

(assert (=> b!133038 e!86707))

(declare-fun b!133039 () Bool)

(declare-fun c!24636 () Bool)

(assert (=> b!133039 (= c!24636 ((_ is MissingVacant!278) lt!69459))))

(assert (=> b!133039 (= e!86707 e!86705)))

(declare-fun b!133040 () Bool)

(declare-fun res!64018 () Bool)

(assert (=> b!133040 (=> (not res!64018) (not e!86706))))

(assert (=> b!133040 (= res!64018 (valid!529 (_2!1304 lt!69440)))))

(declare-fun b!133041 () Bool)

(declare-fun res!64014 () Bool)

(assert (=> b!133041 (= res!64014 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3275 lt!69459)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133041 (=> (not res!64014) (not e!86708))))

(declare-fun b!133042 () Bool)

(declare-fun Unit!4148 () Unit!4132)

(assert (=> b!133042 (= e!86703 Unit!4148)))

(declare-fun lt!69453 () Unit!4132)

(assert (=> b!133042 (= lt!69453 (lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)))))

(assert (=> b!133042 (= lt!69462 call!14667)))

(declare-fun res!64016 () Bool)

(assert (=> b!133042 (= res!64016 ((_ is Found!278) lt!69462))))

(assert (=> b!133042 (=> (not res!64016) (not e!86704))))

(assert (=> b!133042 e!86704))

(declare-fun lt!69439 () Unit!4132)

(assert (=> b!133042 (= lt!69439 lt!69453)))

(assert (=> b!133042 false))

(declare-fun b!133043 () Bool)

(declare-fun res!64013 () Bool)

(assert (=> b!133043 (=> (not res!64013) (not e!86702))))

(assert (=> b!133043 (= res!64013 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3272 lt!69459)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133044 () Bool)

(assert (=> b!133044 (= e!86702 (not call!14666))))

(assert (= (and d!40391 c!24635) b!133042))

(assert (= (and d!40391 (not c!24635)) b!133038))

(assert (= (and b!133042 res!64016) b!133036))

(assert (= (and b!133036 res!64012) b!133028))

(assert (= (and b!133038 c!24633) b!133032))

(assert (= (and b!133038 (not c!24633)) b!133039))

(assert (= (and b!133032 res!64010) b!133043))

(assert (= (and b!133043 res!64013) b!133044))

(assert (= (and b!133039 c!24636) b!133029))

(assert (= (and b!133039 (not c!24636)) b!133035))

(assert (= (and b!133029 res!64015) b!133041))

(assert (= (and b!133041 res!64014) b!133031))

(assert (= (or b!133032 b!133029) bm!14665))

(assert (= (or b!133044 b!133031) bm!14664))

(assert (= (or b!133036 bm!14665) bm!14663))

(assert (= (or b!133042 b!133038) bm!14662))

(assert (= (and d!40391 c!24634) b!133037))

(assert (= (and d!40391 (not c!24634)) b!133030))

(assert (= (and d!40391 res!64017) b!133040))

(assert (= (and b!133040 res!64018) b!133033))

(assert (= (and b!133033 res!64011) b!133034))

(assert (=> b!133038 m!155841))

(assert (=> b!133038 m!155993))

(declare-fun m!156535 () Bool)

(assert (=> b!133043 m!156535))

(declare-fun m!156537 () Bool)

(assert (=> b!133040 m!156537))

(declare-fun m!156539 () Bool)

(assert (=> b!133033 m!156539))

(assert (=> b!133033 m!156539))

(assert (=> b!133033 m!155841))

(declare-fun m!156541 () Bool)

(assert (=> b!133033 m!156541))

(assert (=> b!133037 m!155841))

(declare-fun m!156543 () Bool)

(assert (=> b!133037 m!156543))

(assert (=> b!133037 m!156041))

(assert (=> b!133037 m!156041))

(assert (=> b!133037 m!155841))

(declare-fun m!156545 () Bool)

(assert (=> b!133037 m!156545))

(declare-fun m!156547 () Bool)

(assert (=> bm!14663 m!156547))

(declare-fun m!156549 () Bool)

(assert (=> b!133028 m!156549))

(assert (=> b!133034 m!156539))

(assert (=> b!133034 m!155861))

(assert (=> b!133034 m!155861))

(declare-fun m!156551 () Bool)

(assert (=> b!133034 m!156551))

(declare-fun m!156553 () Bool)

(assert (=> b!133041 m!156553))

(assert (=> bm!14662 m!155841))

(assert (=> bm!14662 m!155961))

(assert (=> bm!14664 m!155841))

(assert (=> bm!14664 m!155987))

(assert (=> b!133042 m!155841))

(assert (=> b!133042 m!155985))

(assert (=> d!40391 m!155841))

(declare-fun m!156555 () Bool)

(assert (=> d!40391 m!156555))

(declare-fun m!156557 () Bool)

(assert (=> d!40391 m!156557))

(assert (=> d!40391 m!156035))

(assert (=> d!40391 m!156041))

(assert (=> d!40391 m!156267))

(assert (=> d!40391 m!156041))

(assert (=> d!40391 m!155853))

(declare-fun m!156559 () Bool)

(assert (=> d!40391 m!156559))

(assert (=> d!40391 m!155841))

(declare-fun m!156561 () Bool)

(assert (=> d!40391 m!156561))

(declare-fun m!156563 () Bool)

(assert (=> d!40391 m!156563))

(assert (=> d!40391 m!155841))

(declare-fun m!156565 () Bool)

(assert (=> d!40391 m!156565))

(declare-fun m!156567 () Bool)

(assert (=> d!40391 m!156567))

(declare-fun m!156569 () Bool)

(assert (=> d!40391 m!156569))

(assert (=> d!40391 m!156567))

(declare-fun m!156571 () Bool)

(assert (=> d!40391 m!156571))

(assert (=> d!40391 m!155841))

(assert (=> d!40391 m!155839))

(declare-fun m!156573 () Bool)

(assert (=> d!40391 m!156573))

(assert (=> d!40391 m!155841))

(declare-fun m!156575 () Bool)

(assert (=> d!40391 m!156575))

(assert (=> d!40391 m!156569))

(declare-fun m!156577 () Bool)

(assert (=> d!40391 m!156577))

(declare-fun m!156579 () Bool)

(assert (=> d!40391 m!156579))

(declare-fun m!156581 () Bool)

(assert (=> d!40391 m!156581))

(declare-fun m!156583 () Bool)

(assert (=> d!40391 m!156583))

(assert (=> d!40391 m!156041))

(assert (=> d!40391 m!155841))

(assert (=> d!40391 m!156545))

(assert (=> d!40391 m!155841))

(assert (=> d!40391 m!155987))

(assert (=> d!40391 m!155841))

(declare-fun m!156585 () Bool)

(assert (=> d!40391 m!156585))

(declare-fun m!156587 () Bool)

(assert (=> d!40391 m!156587))

(declare-fun m!156589 () Bool)

(assert (=> d!40391 m!156589))

(assert (=> bm!14591 d!40391))

(declare-fun d!40393 () Bool)

(assert (=> d!40393 (= (apply!116 lt!69186 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5487 () Bool)

(assert (= bs!5487 d!40393))

(declare-fun m!156591 () Bool)

(assert (=> bs!5487 m!156591))

(assert (=> bs!5487 m!156591))

(declare-fun m!156593 () Bool)

(assert (=> bs!5487 m!156593))

(assert (=> b!132747 d!40393))

(declare-fun d!40395 () Bool)

(assert (=> d!40395 (= (get!1480 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3191 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> b!132647 d!40395))

(declare-fun d!40397 () Bool)

(declare-fun e!86709 () Bool)

(assert (=> d!40397 e!86709))

(declare-fun res!64020 () Bool)

(assert (=> d!40397 (=> (not res!64020) (not e!86709))))

(declare-fun lt!69466 () ListLongMap!1671)

(assert (=> d!40397 (= res!64020 (contains!886 lt!69466 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!69464 () List!1710)

(assert (=> d!40397 (= lt!69466 (ListLongMap!1672 lt!69464))))

(declare-fun lt!69467 () Unit!4132)

(declare-fun lt!69465 () Unit!4132)

(assert (=> d!40397 (= lt!69467 lt!69465)))

(assert (=> d!40397 (= (getValueByKey!170 lt!69464 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!175 (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40397 (= lt!69465 (lemmaContainsTupThenGetReturnValue!88 lt!69464 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40397 (= lt!69464 (insertStrictlySorted!91 (toList!851 (ite c!24523 call!14580 call!14599)) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40397 (= (+!163 (ite c!24523 call!14580 call!14599) (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69466)))

(declare-fun b!133045 () Bool)

(declare-fun res!64019 () Bool)

(assert (=> b!133045 (=> (not res!64019) (not e!86709))))

(assert (=> b!133045 (= res!64019 (= (getValueByKey!170 (toList!851 lt!69466) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!175 (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!133046 () Bool)

(assert (=> b!133046 (= e!86709 (contains!889 (toList!851 lt!69466) (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!40397 res!64020) b!133045))

(assert (= (and b!133045 res!64019) b!133046))

(declare-fun m!156595 () Bool)

(assert (=> d!40397 m!156595))

(declare-fun m!156597 () Bool)

(assert (=> d!40397 m!156597))

(declare-fun m!156599 () Bool)

(assert (=> d!40397 m!156599))

(declare-fun m!156601 () Bool)

(assert (=> d!40397 m!156601))

(declare-fun m!156603 () Bool)

(assert (=> b!133045 m!156603))

(declare-fun m!156605 () Bool)

(assert (=> b!133046 m!156605))

(assert (=> bm!14576 d!40397))

(declare-fun b!133047 () Bool)

(declare-fun e!86722 () Bool)

(declare-fun e!86715 () Bool)

(assert (=> b!133047 (= e!86722 e!86715)))

(declare-fun res!64025 () Bool)

(declare-fun call!14673 () Bool)

(assert (=> b!133047 (= res!64025 call!14673)))

(assert (=> b!133047 (=> (not res!64025) (not e!86715))))

(declare-fun call!14669 () ListLongMap!1671)

(declare-fun c!24642 () Bool)

(declare-fun call!14674 () ListLongMap!1671)

(declare-fun call!14675 () ListLongMap!1671)

(declare-fun call!14672 () ListLongMap!1671)

(declare-fun c!24640 () Bool)

(declare-fun bm!14666 () Bool)

(assert (=> bm!14666 (= call!14669 (+!163 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674)) (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun bm!14667 () Bool)

(assert (=> bm!14667 (= call!14672 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!133048 () Bool)

(declare-fun e!86720 () Bool)

(assert (=> b!133048 (= e!86720 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133049 () Bool)

(declare-fun e!86717 () Bool)

(assert (=> b!133049 (= e!86717 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14668 () Bool)

(assert (=> bm!14668 (= call!14674 call!14675)))

(declare-fun b!133050 () Bool)

(declare-fun e!86719 () ListLongMap!1671)

(declare-fun e!86721 () ListLongMap!1671)

(assert (=> b!133050 (= e!86719 e!86721)))

(assert (=> b!133050 (= c!24640 (and (not (= (bvand (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133051 () Bool)

(declare-fun e!86712 () Bool)

(declare-fun e!86718 () Bool)

(assert (=> b!133051 (= e!86712 e!86718)))

(declare-fun res!64026 () Bool)

(assert (=> b!133051 (=> (not res!64026) (not e!86718))))

(declare-fun lt!69484 () ListLongMap!1671)

(assert (=> b!133051 (= res!64026 (contains!886 lt!69484 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133051 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun bm!14669 () Bool)

(assert (=> bm!14669 (= call!14673 (contains!886 lt!69484 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133052 () Bool)

(assert (=> b!133052 (= e!86718 (= (apply!116 lt!69484 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133052 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (_values!2847 newMap!16))))))

(assert (=> b!133052 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133054 () Bool)

(declare-fun e!86710 () Bool)

(assert (=> b!133054 (= e!86710 (= (apply!116 lt!69484 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))

(declare-fun b!133055 () Bool)

(declare-fun e!86714 () Unit!4132)

(declare-fun lt!69486 () Unit!4132)

(assert (=> b!133055 (= e!86714 lt!69486)))

(declare-fun lt!69474 () ListLongMap!1671)

(assert (=> b!133055 (= lt!69474 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69482 () (_ BitVec 64))

(assert (=> b!133055 (= lt!69482 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69480 () (_ BitVec 64))

(assert (=> b!133055 (= lt!69480 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69489 () Unit!4132)

(assert (=> b!133055 (= lt!69489 (addStillContains!92 lt!69474 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69480))))

(assert (=> b!133055 (contains!886 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69480)))

(declare-fun lt!69481 () Unit!4132)

(assert (=> b!133055 (= lt!69481 lt!69489)))

(declare-fun lt!69470 () ListLongMap!1671)

(assert (=> b!133055 (= lt!69470 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69487 () (_ BitVec 64))

(assert (=> b!133055 (= lt!69487 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69475 () (_ BitVec 64))

(assert (=> b!133055 (= lt!69475 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69476 () Unit!4132)

(assert (=> b!133055 (= lt!69476 (addApplyDifferent!92 lt!69470 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69475))))

(assert (=> b!133055 (= (apply!116 (+!163 lt!69470 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69475) (apply!116 lt!69470 lt!69475))))

(declare-fun lt!69485 () Unit!4132)

(assert (=> b!133055 (= lt!69485 lt!69476)))

(declare-fun lt!69468 () ListLongMap!1671)

(assert (=> b!133055 (= lt!69468 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69469 () (_ BitVec 64))

(assert (=> b!133055 (= lt!69469 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69472 () (_ BitVec 64))

(assert (=> b!133055 (= lt!69472 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69471 () Unit!4132)

(assert (=> b!133055 (= lt!69471 (addApplyDifferent!92 lt!69468 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69472))))

(assert (=> b!133055 (= (apply!116 (+!163 lt!69468 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69472) (apply!116 lt!69468 lt!69472))))

(declare-fun lt!69479 () Unit!4132)

(assert (=> b!133055 (= lt!69479 lt!69471)))

(declare-fun lt!69477 () ListLongMap!1671)

(assert (=> b!133055 (= lt!69477 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69478 () (_ BitVec 64))

(assert (=> b!133055 (= lt!69478 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69488 () (_ BitVec 64))

(assert (=> b!133055 (= lt!69488 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133055 (= lt!69486 (addApplyDifferent!92 lt!69477 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69488))))

(assert (=> b!133055 (= (apply!116 (+!163 lt!69477 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69488) (apply!116 lt!69477 lt!69488))))

(declare-fun b!133056 () Bool)

(declare-fun e!86711 () ListLongMap!1671)

(assert (=> b!133056 (= e!86711 call!14674)))

(declare-fun b!133057 () Bool)

(declare-fun call!14670 () ListLongMap!1671)

(assert (=> b!133057 (= e!86721 call!14670)))

(declare-fun b!133058 () Bool)

(declare-fun res!64022 () Bool)

(declare-fun e!86716 () Bool)

(assert (=> b!133058 (=> (not res!64022) (not e!86716))))

(declare-fun e!86713 () Bool)

(assert (=> b!133058 (= res!64022 e!86713)))

(declare-fun c!24639 () Bool)

(assert (=> b!133058 (= c!24639 (not (= (bvand (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!14670 () Bool)

(assert (=> bm!14670 (= call!14675 call!14672)))

(declare-fun b!133059 () Bool)

(assert (=> b!133059 (= e!86722 (not call!14673))))

(declare-fun c!24641 () Bool)

(declare-fun b!133060 () Bool)

(assert (=> b!133060 (= c!24641 (and (not (= (bvand (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!133060 (= e!86721 e!86711)))

(declare-fun b!133061 () Bool)

(declare-fun Unit!4149 () Unit!4132)

(assert (=> b!133061 (= e!86714 Unit!4149)))

(declare-fun b!133062 () Bool)

(assert (=> b!133062 (= e!86719 (+!163 call!14669 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(declare-fun bm!14671 () Bool)

(assert (=> bm!14671 (= call!14670 call!14669)))

(declare-fun b!133063 () Bool)

(assert (=> b!133063 (= e!86711 call!14670)))

(declare-fun b!133064 () Bool)

(declare-fun call!14671 () Bool)

(assert (=> b!133064 (= e!86713 (not call!14671))))

(declare-fun b!133065 () Bool)

(assert (=> b!133065 (= e!86716 e!86722)))

(declare-fun c!24638 () Bool)

(assert (=> b!133065 (= c!24638 (not (= (bvand (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14672 () Bool)

(assert (=> bm!14672 (= call!14671 (contains!886 lt!69484 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133053 () Bool)

(assert (=> b!133053 (= e!86713 e!86710)))

(declare-fun res!64024 () Bool)

(assert (=> b!133053 (= res!64024 call!14671)))

(assert (=> b!133053 (=> (not res!64024) (not e!86710))))

(declare-fun d!40399 () Bool)

(assert (=> d!40399 e!86716))

(declare-fun res!64029 () Bool)

(assert (=> d!40399 (=> (not res!64029) (not e!86716))))

(assert (=> d!40399 (= res!64029 (or (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))))

(declare-fun lt!69473 () ListLongMap!1671)

(assert (=> d!40399 (= lt!69484 lt!69473)))

(declare-fun lt!69483 () Unit!4132)

(assert (=> d!40399 (= lt!69483 e!86714)))

(declare-fun c!24637 () Bool)

(assert (=> d!40399 (= c!24637 e!86717)))

(declare-fun res!64028 () Bool)

(assert (=> d!40399 (=> (not res!64028) (not e!86717))))

(assert (=> d!40399 (= res!64028 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40399 (= lt!69473 e!86719)))

(assert (=> d!40399 (= c!24642 (and (not (= (bvand (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40399 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40399 (= (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69484)))

(declare-fun b!133066 () Bool)

(declare-fun res!64021 () Bool)

(assert (=> b!133066 (=> (not res!64021) (not e!86716))))

(assert (=> b!133066 (= res!64021 e!86712)))

(declare-fun res!64027 () Bool)

(assert (=> b!133066 (=> res!64027 e!86712)))

(assert (=> b!133066 (= res!64027 (not e!86720))))

(declare-fun res!64023 () Bool)

(assert (=> b!133066 (=> (not res!64023) (not e!86720))))

(assert (=> b!133066 (= res!64023 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133067 () Bool)

(assert (=> b!133067 (= e!86715 (= (apply!116 lt!69484 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))

(assert (= (and d!40399 c!24642) b!133062))

(assert (= (and d!40399 (not c!24642)) b!133050))

(assert (= (and b!133050 c!24640) b!133057))

(assert (= (and b!133050 (not c!24640)) b!133060))

(assert (= (and b!133060 c!24641) b!133063))

(assert (= (and b!133060 (not c!24641)) b!133056))

(assert (= (or b!133063 b!133056) bm!14668))

(assert (= (or b!133057 bm!14668) bm!14670))

(assert (= (or b!133057 b!133063) bm!14671))

(assert (= (or b!133062 bm!14670) bm!14667))

(assert (= (or b!133062 bm!14671) bm!14666))

(assert (= (and d!40399 res!64028) b!133049))

(assert (= (and d!40399 c!24637) b!133055))

(assert (= (and d!40399 (not c!24637)) b!133061))

(assert (= (and d!40399 res!64029) b!133066))

(assert (= (and b!133066 res!64023) b!133048))

(assert (= (and b!133066 (not res!64027)) b!133051))

(assert (= (and b!133051 res!64026) b!133052))

(assert (= (and b!133066 res!64021) b!133058))

(assert (= (and b!133058 c!24639) b!133053))

(assert (= (and b!133058 (not c!24639)) b!133064))

(assert (= (and b!133053 res!64024) b!133054))

(assert (= (or b!133053 b!133064) bm!14672))

(assert (= (and b!133058 res!64022) b!133065))

(assert (= (and b!133065 c!24638) b!133047))

(assert (= (and b!133065 (not c!24638)) b!133059))

(assert (= (and b!133047 res!64025) b!133067))

(assert (= (or b!133047 b!133059) bm!14669))

(declare-fun b_lambda!5907 () Bool)

(assert (=> (not b_lambda!5907) (not b!133052)))

(assert (=> b!133052 t!6164))

(declare-fun b_and!8229 () Bool)

(assert (= b_and!8225 (and (=> t!6164 result!3993) b_and!8229)))

(assert (=> b!133052 t!6166))

(declare-fun b_and!8231 () Bool)

(assert (= b_and!8227 (and (=> t!6166 result!3995) b_and!8231)))

(assert (=> b!133051 m!156125))

(assert (=> b!133051 m!156125))

(declare-fun m!156607 () Bool)

(assert (=> b!133051 m!156607))

(declare-fun m!156609 () Bool)

(assert (=> bm!14667 m!156609))

(declare-fun m!156611 () Bool)

(assert (=> bm!14666 m!156611))

(assert (=> b!133052 m!156473))

(assert (=> b!133052 m!156135))

(assert (=> b!133052 m!156475))

(assert (=> b!133052 m!156135))

(assert (=> b!133052 m!156125))

(assert (=> b!133052 m!156473))

(assert (=> b!133052 m!156125))

(declare-fun m!156613 () Bool)

(assert (=> b!133052 m!156613))

(assert (=> b!133048 m!156125))

(assert (=> b!133048 m!156125))

(assert (=> b!133048 m!156141))

(assert (=> b!133049 m!156125))

(assert (=> b!133049 m!156125))

(assert (=> b!133049 m!156141))

(declare-fun m!156615 () Bool)

(assert (=> b!133054 m!156615))

(declare-fun m!156617 () Bool)

(assert (=> b!133062 m!156617))

(declare-fun m!156619 () Bool)

(assert (=> bm!14669 m!156619))

(declare-fun m!156621 () Bool)

(assert (=> b!133055 m!156621))

(declare-fun m!156623 () Bool)

(assert (=> b!133055 m!156623))

(declare-fun m!156625 () Bool)

(assert (=> b!133055 m!156625))

(declare-fun m!156627 () Bool)

(assert (=> b!133055 m!156627))

(assert (=> b!133055 m!156621))

(declare-fun m!156629 () Bool)

(assert (=> b!133055 m!156629))

(declare-fun m!156631 () Bool)

(assert (=> b!133055 m!156631))

(declare-fun m!156633 () Bool)

(assert (=> b!133055 m!156633))

(declare-fun m!156635 () Bool)

(assert (=> b!133055 m!156635))

(assert (=> b!133055 m!156625))

(declare-fun m!156637 () Bool)

(assert (=> b!133055 m!156637))

(declare-fun m!156639 () Bool)

(assert (=> b!133055 m!156639))

(declare-fun m!156641 () Bool)

(assert (=> b!133055 m!156641))

(declare-fun m!156643 () Bool)

(assert (=> b!133055 m!156643))

(declare-fun m!156645 () Bool)

(assert (=> b!133055 m!156645))

(assert (=> b!133055 m!156633))

(assert (=> b!133055 m!156125))

(assert (=> b!133055 m!156609))

(declare-fun m!156647 () Bool)

(assert (=> b!133055 m!156647))

(assert (=> b!133055 m!156627))

(declare-fun m!156649 () Bool)

(assert (=> b!133055 m!156649))

(declare-fun m!156651 () Bool)

(assert (=> b!133067 m!156651))

(declare-fun m!156653 () Bool)

(assert (=> bm!14672 m!156653))

(assert (=> d!40399 m!156183))

(assert (=> bm!14586 d!40399))

(declare-fun d!40401 () Bool)

(declare-fun e!86723 () Bool)

(assert (=> d!40401 e!86723))

(declare-fun res!64030 () Bool)

(assert (=> d!40401 (=> res!64030 e!86723)))

(declare-fun lt!69491 () Bool)

(assert (=> d!40401 (= res!64030 (not lt!69491))))

(declare-fun lt!69493 () Bool)

(assert (=> d!40401 (= lt!69491 lt!69493)))

(declare-fun lt!69490 () Unit!4132)

(declare-fun e!86724 () Unit!4132)

(assert (=> d!40401 (= lt!69490 e!86724)))

(declare-fun c!24643 () Bool)

(assert (=> d!40401 (= c!24643 lt!69493)))

(assert (=> d!40401 (= lt!69493 (containsKey!174 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40401 (= (contains!886 lt!69186 #b1000000000000000000000000000000000000000000000000000000000000000) lt!69491)))

(declare-fun b!133068 () Bool)

(declare-fun lt!69492 () Unit!4132)

(assert (=> b!133068 (= e!86724 lt!69492)))

(assert (=> b!133068 (= lt!69492 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133068 (isDefined!124 (getValueByKey!170 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133069 () Bool)

(declare-fun Unit!4150 () Unit!4132)

(assert (=> b!133069 (= e!86724 Unit!4150)))

(declare-fun b!133070 () Bool)

(assert (=> b!133070 (= e!86723 (isDefined!124 (getValueByKey!170 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40401 c!24643) b!133068))

(assert (= (and d!40401 (not c!24643)) b!133069))

(assert (= (and d!40401 (not res!64030)) b!133070))

(declare-fun m!156655 () Bool)

(assert (=> d!40401 m!156655))

(declare-fun m!156657 () Bool)

(assert (=> b!133068 m!156657))

(assert (=> b!133068 m!156591))

(assert (=> b!133068 m!156591))

(declare-fun m!156659 () Bool)

(assert (=> b!133068 m!156659))

(assert (=> b!133070 m!156591))

(assert (=> b!133070 m!156591))

(assert (=> b!133070 m!156659))

(assert (=> bm!14621 d!40401))

(declare-fun d!40403 () Bool)

(assert (=> d!40403 (= (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132659 d!40403))

(declare-fun d!40405 () Bool)

(declare-fun e!86725 () Bool)

(assert (=> d!40405 e!86725))

(declare-fun res!64032 () Bool)

(assert (=> d!40405 (=> (not res!64032) (not e!86725))))

(declare-fun lt!69496 () ListLongMap!1671)

(assert (=> d!40405 (= res!64032 (contains!886 lt!69496 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun lt!69494 () List!1710)

(assert (=> d!40405 (= lt!69496 (ListLongMap!1672 lt!69494))))

(declare-fun lt!69497 () Unit!4132)

(declare-fun lt!69495 () Unit!4132)

(assert (=> d!40405 (= lt!69497 lt!69495)))

(assert (=> d!40405 (= (getValueByKey!170 lt!69494 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) (Some!175 (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!40405 (= lt!69495 (lemmaContainsTupThenGetReturnValue!88 lt!69494 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!40405 (= lt!69494 (insertStrictlySorted!91 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!40405 (= (+!163 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)) (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69496)))

(declare-fun b!133071 () Bool)

(declare-fun res!64031 () Bool)

(assert (=> b!133071 (=> (not res!64031) (not e!86725))))

(assert (=> b!133071 (= res!64031 (= (getValueByKey!170 (toList!851 lt!69496) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) (Some!175 (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!133072 () Bool)

(assert (=> b!133072 (= e!86725 (contains!889 (toList!851 lt!69496) (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!40405 res!64032) b!133071))

(assert (= (and b!133071 res!64031) b!133072))

(declare-fun m!156661 () Bool)

(assert (=> d!40405 m!156661))

(declare-fun m!156663 () Bool)

(assert (=> d!40405 m!156663))

(declare-fun m!156665 () Bool)

(assert (=> d!40405 m!156665))

(declare-fun m!156667 () Bool)

(assert (=> d!40405 m!156667))

(declare-fun m!156669 () Bool)

(assert (=> b!133071 m!156669))

(declare-fun m!156671 () Bool)

(assert (=> b!133072 m!156671))

(assert (=> bm!14618 d!40405))

(declare-fun b!133073 () Bool)

(declare-fun e!86726 () Bool)

(declare-fun call!14676 () Bool)

(assert (=> b!133073 (= e!86726 call!14676)))

(declare-fun b!133074 () Bool)

(declare-fun e!86727 () Bool)

(assert (=> b!133074 (= e!86727 e!86726)))

(declare-fun lt!69498 () (_ BitVec 64))

(assert (=> b!133074 (= lt!69498 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69500 () Unit!4132)

(assert (=> b!133074 (= lt!69500 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 newMap!16) lt!69498 #b00000000000000000000000000000000))))

(assert (=> b!133074 (arrayContainsKey!0 (_keys!4612 newMap!16) lt!69498 #b00000000000000000000000000000000)))

(declare-fun lt!69499 () Unit!4132)

(assert (=> b!133074 (= lt!69499 lt!69500)))

(declare-fun res!64034 () Bool)

(assert (=> b!133074 (= res!64034 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (_keys!4612 newMap!16) (mask!7163 newMap!16)) (Found!278 #b00000000000000000000000000000000)))))

(assert (=> b!133074 (=> (not res!64034) (not e!86726))))

(declare-fun d!40407 () Bool)

(declare-fun res!64033 () Bool)

(declare-fun e!86728 () Bool)

(assert (=> d!40407 (=> res!64033 e!86728)))

(assert (=> d!40407 (= res!64033 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40407 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4612 newMap!16) (mask!7163 newMap!16)) e!86728)))

(declare-fun b!133075 () Bool)

(assert (=> b!133075 (= e!86728 e!86727)))

(declare-fun c!24644 () Bool)

(assert (=> b!133075 (= c!24644 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133076 () Bool)

(assert (=> b!133076 (= e!86727 call!14676)))

(declare-fun bm!14673 () Bool)

(assert (=> bm!14673 (= call!14676 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(assert (= (and d!40407 (not res!64033)) b!133075))

(assert (= (and b!133075 c!24644) b!133074))

(assert (= (and b!133075 (not c!24644)) b!133076))

(assert (= (and b!133074 res!64034) b!133073))

(assert (= (or b!133073 b!133076) bm!14673))

(assert (=> b!133074 m!156125))

(declare-fun m!156673 () Bool)

(assert (=> b!133074 m!156673))

(declare-fun m!156675 () Bool)

(assert (=> b!133074 m!156675))

(assert (=> b!133074 m!156125))

(declare-fun m!156677 () Bool)

(assert (=> b!133074 m!156677))

(assert (=> b!133075 m!156125))

(assert (=> b!133075 m!156125))

(assert (=> b!133075 m!156141))

(declare-fun m!156679 () Bool)

(assert (=> bm!14673 m!156679))

(assert (=> b!132683 d!40407))

(declare-fun d!40409 () Bool)

(assert (=> d!40409 (= (+!163 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69102 (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69503 () Unit!4132)

(declare-fun choose!831 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 V!3481 Int) Unit!4132)

(assert (=> d!40409 (= lt!69503 (choose!831 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) lt!69102 (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40409 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40409 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!61 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) lt!69102 (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)) lt!69503)))

(declare-fun bs!5488 () Bool)

(assert (= bs!5488 d!40409))

(assert (=> bs!5488 m!156041))

(declare-fun m!156681 () Bool)

(assert (=> bs!5488 m!156681))

(assert (=> bs!5488 m!155839))

(declare-fun m!156683 () Bool)

(assert (=> bs!5488 m!156683))

(assert (=> bs!5488 m!156183))

(assert (=> bs!5488 m!155839))

(declare-fun m!156685 () Bool)

(assert (=> bs!5488 m!156685))

(assert (=> bs!5488 m!156041))

(assert (=> b!132629 d!40409))

(assert (=> bm!14574 d!40281))

(assert (=> b!132728 d!40337))

(assert (=> b!132674 d!40403))

(declare-fun d!40411 () Bool)

(declare-fun e!86729 () Bool)

(assert (=> d!40411 e!86729))

(declare-fun res!64035 () Bool)

(assert (=> d!40411 (=> res!64035 e!86729)))

(declare-fun lt!69505 () Bool)

(assert (=> d!40411 (= res!64035 (not lt!69505))))

(declare-fun lt!69507 () Bool)

(assert (=> d!40411 (= lt!69505 lt!69507)))

(declare-fun lt!69504 () Unit!4132)

(declare-fun e!86730 () Unit!4132)

(assert (=> d!40411 (= lt!69504 e!86730)))

(declare-fun c!24645 () Bool)

(assert (=> d!40411 (= c!24645 lt!69507)))

(assert (=> d!40411 (= lt!69507 (containsKey!174 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> d!40411 (= (contains!886 e!86457 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) lt!69505)))

(declare-fun b!133077 () Bool)

(declare-fun lt!69506 () Unit!4132)

(assert (=> b!133077 (= e!86730 lt!69506)))

(assert (=> b!133077 (= lt!69506 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> b!133077 (isDefined!124 (getValueByKey!170 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!133078 () Bool)

(declare-fun Unit!4151 () Unit!4132)

(assert (=> b!133078 (= e!86730 Unit!4151)))

(declare-fun b!133079 () Bool)

(assert (=> b!133079 (= e!86729 (isDefined!124 (getValueByKey!170 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(assert (= (and d!40411 c!24645) b!133077))

(assert (= (and d!40411 (not c!24645)) b!133078))

(assert (= (and d!40411 (not res!64035)) b!133079))

(assert (=> d!40411 m!155841))

(declare-fun m!156687 () Bool)

(assert (=> d!40411 m!156687))

(assert (=> b!133077 m!155841))

(declare-fun m!156689 () Bool)

(assert (=> b!133077 m!156689))

(assert (=> b!133077 m!155841))

(declare-fun m!156691 () Bool)

(assert (=> b!133077 m!156691))

(assert (=> b!133077 m!156691))

(declare-fun m!156693 () Bool)

(assert (=> b!133077 m!156693))

(assert (=> b!133079 m!155841))

(assert (=> b!133079 m!156691))

(assert (=> b!133079 m!156691))

(assert (=> b!133079 m!156693))

(assert (=> bm!14575 d!40411))

(declare-fun b!133080 () Bool)

(declare-fun e!86731 () Bool)

(declare-fun call!14677 () Bool)

(assert (=> b!133080 (= e!86731 call!14677)))

(declare-fun b!133081 () Bool)

(declare-fun e!86732 () Bool)

(assert (=> b!133081 (= e!86732 e!86731)))

(declare-fun lt!69508 () (_ BitVec 64))

(assert (=> b!133081 (= lt!69508 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!69510 () Unit!4132)

(assert (=> b!133081 (= lt!69510 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69508 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!133081 (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69508 #b00000000000000000000000000000000)))

(declare-fun lt!69509 () Unit!4132)

(assert (=> b!133081 (= lt!69509 lt!69510)))

(declare-fun res!64037 () Bool)

(assert (=> b!133081 (= res!64037 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (Found!278 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!133081 (=> (not res!64037) (not e!86731))))

(declare-fun d!40413 () Bool)

(declare-fun res!64036 () Bool)

(declare-fun e!86733 () Bool)

(assert (=> d!40413 (=> res!64036 e!86733)))

(assert (=> d!40413 (= res!64036 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!40413 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) e!86733)))

(declare-fun b!133082 () Bool)

(assert (=> b!133082 (= e!86733 e!86732)))

(declare-fun c!24646 () Bool)

(assert (=> b!133082 (= c!24646 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133083 () Bool)

(assert (=> b!133083 (= e!86732 call!14677)))

(declare-fun bm!14674 () Bool)

(assert (=> bm!14674 (= call!14677 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(assert (= (and d!40413 (not res!64036)) b!133082))

(assert (= (and b!133082 c!24646) b!133081))

(assert (= (and b!133082 (not c!24646)) b!133083))

(assert (= (and b!133081 res!64037) b!133080))

(assert (= (or b!133080 b!133083) bm!14674))

(assert (=> b!133081 m!156349))

(declare-fun m!156695 () Bool)

(assert (=> b!133081 m!156695))

(declare-fun m!156697 () Bool)

(assert (=> b!133081 m!156697))

(assert (=> b!133081 m!156349))

(declare-fun m!156699 () Bool)

(assert (=> b!133081 m!156699))

(assert (=> b!133082 m!156349))

(assert (=> b!133082 m!156349))

(assert (=> b!133082 m!156351))

(declare-fun m!156701 () Bool)

(assert (=> bm!14674 m!156701))

(assert (=> bm!14600 d!40413))

(declare-fun b!133100 () Bool)

(declare-fun e!86743 () Bool)

(declare-fun e!86745 () Bool)

(assert (=> b!133100 (= e!86743 e!86745)))

(declare-fun c!24652 () Bool)

(declare-fun lt!69516 () SeekEntryResult!278)

(assert (=> b!133100 (= c!24652 ((_ is MissingVacant!278) lt!69516))))

(declare-fun c!24651 () Bool)

(declare-fun call!14683 () Bool)

(declare-fun bm!14679 () Bool)

(assert (=> bm!14679 (= call!14683 (inRange!0 (ite c!24651 (index!3272 lt!69516) (index!3275 lt!69516)) (mask!7163 newMap!16)))))

(declare-fun b!133101 () Bool)

(declare-fun e!86742 () Bool)

(assert (=> b!133101 (= e!86743 e!86742)))

(declare-fun res!64049 () Bool)

(assert (=> b!133101 (= res!64049 call!14683)))

(assert (=> b!133101 (=> (not res!64049) (not e!86742))))

(declare-fun b!133102 () Bool)

(declare-fun e!86744 () Bool)

(declare-fun call!14682 () Bool)

(assert (=> b!133102 (= e!86744 (not call!14682))))

(declare-fun bm!14680 () Bool)

(assert (=> bm!14680 (= call!14682 (arrayContainsKey!0 (_keys!4612 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!133103 () Bool)

(assert (=> b!133103 (= e!86745 ((_ is Undefined!278) lt!69516))))

(declare-fun b!133104 () Bool)

(declare-fun res!64046 () Bool)

(assert (=> b!133104 (=> (not res!64046) (not e!86744))))

(assert (=> b!133104 (= res!64046 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3275 lt!69516)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133104 (and (bvsge (index!3275 lt!69516) #b00000000000000000000000000000000) (bvslt (index!3275 lt!69516) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133105 () Bool)

(assert (=> b!133105 (and (bvsge (index!3272 lt!69516) #b00000000000000000000000000000000) (bvslt (index!3272 lt!69516) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64048 () Bool)

(assert (=> b!133105 (= res!64048 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3272 lt!69516)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133105 (=> (not res!64048) (not e!86742))))

(declare-fun d!40415 () Bool)

(assert (=> d!40415 e!86743))

(assert (=> d!40415 (= c!24651 ((_ is MissingZero!278) lt!69516))))

(assert (=> d!40415 (= lt!69516 (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(declare-fun lt!69515 () Unit!4132)

(declare-fun choose!832 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 64) Int) Unit!4132)

(assert (=> d!40415 (= lt!69515 (choose!832 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40415 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40415 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)) lt!69515)))

(declare-fun b!133106 () Bool)

(assert (=> b!133106 (= e!86742 (not call!14682))))

(declare-fun b!133107 () Bool)

(declare-fun res!64047 () Bool)

(assert (=> b!133107 (=> (not res!64047) (not e!86744))))

(assert (=> b!133107 (= res!64047 call!14683)))

(assert (=> b!133107 (= e!86745 e!86744)))

(assert (= (and d!40415 c!24651) b!133101))

(assert (= (and d!40415 (not c!24651)) b!133100))

(assert (= (and b!133101 res!64049) b!133105))

(assert (= (and b!133105 res!64048) b!133106))

(assert (= (and b!133100 c!24652) b!133107))

(assert (= (and b!133100 (not c!24652)) b!133103))

(assert (= (and b!133107 res!64047) b!133104))

(assert (= (and b!133104 res!64046) b!133102))

(assert (= (or b!133101 b!133107) bm!14679))

(assert (= (or b!133106 b!133102) bm!14680))

(declare-fun m!156703 () Bool)

(assert (=> b!133104 m!156703))

(declare-fun m!156705 () Bool)

(assert (=> bm!14679 m!156705))

(assert (=> bm!14680 m!155841))

(assert (=> bm!14680 m!155987))

(assert (=> d!40415 m!155841))

(assert (=> d!40415 m!155961))

(assert (=> d!40415 m!155841))

(declare-fun m!156707 () Bool)

(assert (=> d!40415 m!156707))

(assert (=> d!40415 m!156183))

(declare-fun m!156709 () Bool)

(assert (=> b!133105 m!156709))

(assert (=> bm!14592 d!40415))

(assert (=> b!132671 d!40403))

(declare-fun d!40417 () Bool)

(declare-fun e!86746 () Bool)

(assert (=> d!40417 e!86746))

(declare-fun res!64051 () Bool)

(assert (=> d!40417 (=> (not res!64051) (not e!86746))))

(declare-fun lt!69519 () ListLongMap!1671)

(assert (=> d!40417 (= res!64051 (contains!886 lt!69519 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun lt!69517 () List!1710)

(assert (=> d!40417 (= lt!69519 (ListLongMap!1672 lt!69517))))

(declare-fun lt!69520 () Unit!4132)

(declare-fun lt!69518 () Unit!4132)

(assert (=> d!40417 (= lt!69520 lt!69518)))

(assert (=> d!40417 (= (getValueByKey!170 lt!69517 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40417 (= lt!69518 (lemmaContainsTupThenGetReturnValue!88 lt!69517 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40417 (= lt!69517 (insertStrictlySorted!91 (toList!851 call!14621) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40417 (= (+!163 call!14621 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69519)))

(declare-fun b!133108 () Bool)

(declare-fun res!64050 () Bool)

(assert (=> b!133108 (=> (not res!64050) (not e!86746))))

(assert (=> b!133108 (= res!64050 (= (getValueByKey!170 (toList!851 lt!69519) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!133109 () Bool)

(assert (=> b!133109 (= e!86746 (contains!889 (toList!851 lt!69519) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!40417 res!64051) b!133108))

(assert (= (and b!133108 res!64050) b!133109))

(declare-fun m!156711 () Bool)

(assert (=> d!40417 m!156711))

(declare-fun m!156713 () Bool)

(assert (=> d!40417 m!156713))

(declare-fun m!156715 () Bool)

(assert (=> d!40417 m!156715))

(declare-fun m!156717 () Bool)

(assert (=> d!40417 m!156717))

(declare-fun m!156719 () Bool)

(assert (=> b!133108 m!156719))

(declare-fun m!156721 () Bool)

(assert (=> b!133109 m!156721))

(assert (=> b!132742 d!40417))

(assert (=> d!40283 d!40269))

(declare-fun d!40419 () Bool)

(declare-fun res!64063 () Bool)

(declare-fun e!86749 () Bool)

(assert (=> d!40419 (=> (not res!64063) (not e!86749))))

(assert (=> d!40419 (= res!64063 (validMask!0 (mask!7163 newMap!16)))))

(assert (=> d!40419 (= (simpleValid!92 newMap!16) e!86749)))

(declare-fun b!133118 () Bool)

(declare-fun res!64060 () Bool)

(assert (=> b!133118 (=> (not res!64060) (not e!86749))))

(assert (=> b!133118 (= res!64060 (and (= (size!2519 (_values!2847 newMap!16)) (bvadd (mask!7163 newMap!16) #b00000000000000000000000000000001)) (= (size!2518 (_keys!4612 newMap!16)) (size!2519 (_values!2847 newMap!16))) (bvsge (_size!597 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!597 newMap!16) (bvadd (mask!7163 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!133120 () Bool)

(declare-fun res!64062 () Bool)

(assert (=> b!133120 (=> (not res!64062) (not e!86749))))

(declare-fun size!2524 (LongMapFixedSize!1096) (_ BitVec 32))

(assert (=> b!133120 (= res!64062 (= (size!2524 newMap!16) (bvadd (_size!597 newMap!16) (bvsdiv (bvadd (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!133119 () Bool)

(declare-fun res!64061 () Bool)

(assert (=> b!133119 (=> (not res!64061) (not e!86749))))

(assert (=> b!133119 (= res!64061 (bvsge (size!2524 newMap!16) (_size!597 newMap!16)))))

(declare-fun b!133121 () Bool)

(assert (=> b!133121 (= e!86749 (and (bvsge (extraKeys!2629 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2629 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!597 newMap!16) #b00000000000000000000000000000000)))))

(assert (= (and d!40419 res!64063) b!133118))

(assert (= (and b!133118 res!64060) b!133119))

(assert (= (and b!133119 res!64061) b!133120))

(assert (= (and b!133120 res!64062) b!133121))

(assert (=> d!40419 m!156183))

(declare-fun m!156723 () Bool)

(assert (=> b!133120 m!156723))

(assert (=> b!133119 m!156723))

(assert (=> d!40279 d!40419))

(assert (=> bm!14583 d!40351))

(declare-fun condMapEmpty!4655 () Bool)

(declare-fun mapDefault!4655 () ValueCell!1094)

(assert (=> mapNonEmpty!4654 (= condMapEmpty!4655 (= mapRest!4654 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4655)))))

(declare-fun e!86751 () Bool)

(declare-fun mapRes!4655 () Bool)

(assert (=> mapNonEmpty!4654 (= tp!11224 (and e!86751 mapRes!4655))))

(declare-fun b!133122 () Bool)

(declare-fun e!86750 () Bool)

(assert (=> b!133122 (= e!86750 tp_is_empty!2875)))

(declare-fun b!133123 () Bool)

(assert (=> b!133123 (= e!86751 tp_is_empty!2875)))

(declare-fun mapIsEmpty!4655 () Bool)

(assert (=> mapIsEmpty!4655 mapRes!4655))

(declare-fun mapNonEmpty!4655 () Bool)

(declare-fun tp!11225 () Bool)

(assert (=> mapNonEmpty!4655 (= mapRes!4655 (and tp!11225 e!86750))))

(declare-fun mapRest!4655 () (Array (_ BitVec 32) ValueCell!1094))

(declare-fun mapValue!4655 () ValueCell!1094)

(declare-fun mapKey!4655 () (_ BitVec 32))

(assert (=> mapNonEmpty!4655 (= mapRest!4654 (store mapRest!4655 mapKey!4655 mapValue!4655))))

(assert (= (and mapNonEmpty!4654 condMapEmpty!4655) mapIsEmpty!4655))

(assert (= (and mapNonEmpty!4654 (not condMapEmpty!4655)) mapNonEmpty!4655))

(assert (= (and mapNonEmpty!4655 ((_ is ValueCellFull!1094) mapValue!4655)) b!133122))

(assert (= (and mapNonEmpty!4654 ((_ is ValueCellFull!1094) mapDefault!4655)) b!133123))

(declare-fun m!156725 () Bool)

(assert (=> mapNonEmpty!4655 m!156725))

(declare-fun condMapEmpty!4656 () Bool)

(declare-fun mapDefault!4656 () ValueCell!1094)

(assert (=> mapNonEmpty!4653 (= condMapEmpty!4656 (= mapRest!4653 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4656)))))

(declare-fun e!86753 () Bool)

(declare-fun mapRes!4656 () Bool)

(assert (=> mapNonEmpty!4653 (= tp!11223 (and e!86753 mapRes!4656))))

(declare-fun b!133124 () Bool)

(declare-fun e!86752 () Bool)

(assert (=> b!133124 (= e!86752 tp_is_empty!2875)))

(declare-fun b!133125 () Bool)

(assert (=> b!133125 (= e!86753 tp_is_empty!2875)))

(declare-fun mapIsEmpty!4656 () Bool)

(assert (=> mapIsEmpty!4656 mapRes!4656))

(declare-fun mapNonEmpty!4656 () Bool)

(declare-fun tp!11226 () Bool)

(assert (=> mapNonEmpty!4656 (= mapRes!4656 (and tp!11226 e!86752))))

(declare-fun mapRest!4656 () (Array (_ BitVec 32) ValueCell!1094))

(declare-fun mapValue!4656 () ValueCell!1094)

(declare-fun mapKey!4656 () (_ BitVec 32))

(assert (=> mapNonEmpty!4656 (= mapRest!4653 (store mapRest!4656 mapKey!4656 mapValue!4656))))

(assert (= (and mapNonEmpty!4653 condMapEmpty!4656) mapIsEmpty!4656))

(assert (= (and mapNonEmpty!4653 (not condMapEmpty!4656)) mapNonEmpty!4656))

(assert (= (and mapNonEmpty!4656 ((_ is ValueCellFull!1094) mapValue!4656)) b!133124))

(assert (= (and mapNonEmpty!4653 ((_ is ValueCellFull!1094) mapDefault!4656)) b!133125))

(declare-fun m!156727 () Bool)

(assert (=> mapNonEmpty!4656 m!156727))

(declare-fun b_lambda!5909 () Bool)

(assert (= b_lambda!5901 (or (and b!132380 b_free!2917) (and b!132384 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))))) b_lambda!5909)))

(declare-fun b_lambda!5911 () Bool)

(assert (= b_lambda!5905 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5911)))

(declare-fun b_lambda!5913 () Bool)

(assert (= b_lambda!5903 (or (and b!132380 b_free!2917) (and b!132384 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))))) b_lambda!5913)))

(declare-fun b_lambda!5915 () Bool)

(assert (= b_lambda!5899 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5915)))

(declare-fun b_lambda!5917 () Bool)

(assert (= b_lambda!5907 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5917)))

(declare-fun b_lambda!5919 () Bool)

(assert (= b_lambda!5897 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5919)))

(check-sat (not b!133045) (not b!132881) (not b!132828) (not bm!14626) (not b!133071) (not d!40417) (not b!133068) (not d!40389) (not b!132817) (not d!40325) (not b!132935) (not b!132956) (not b_lambda!5919) (not b!132765) (not b!133070) (not b!132952) (not b!133033) (not b!132951) (not b!133034) (not d!40319) (not b!132772) (not d!40313) (not d!40293) (not b!132771) (not d!40369) (not b_next!2917) (not b_lambda!5895) (not bm!14639) (not d!40341) (not d!40399) (not b!133055) (not d!40311) (not b!133038) (not b!133040) (not b!132940) (not b!132993) (not b!132822) (not b!132766) (not d!40419) (not bm!14669) (not b!133120) (not b!132762) (not bm!14662) (not b!132966) (not b!132944) tp_is_empty!2875 (not b!132775) (not b!132933) (not b!132863) (not b_lambda!5891) b_and!8229 (not bm!14628) (not d!40373) (not d!40411) (not d!40375) (not bm!14680) (not d!40343) (not d!40397) (not bm!14646) (not d!40359) (not b!132841) (not d!40383) (not bm!14653) (not b!132801) (not b!133046) (not b!133048) (not d!40381) (not b!132838) (not b!132848) (not b!132982) (not d!40351) (not b!132992) (not b!133108) (not b!132829) (not bm!14663) (not b!132987) (not b!132774) (not b!132991) (not mapNonEmpty!4656) (not b_lambda!5911) (not b!133054) (not b!133082) (not d!40291) (not b!132954) (not bm!14638) (not b!132803) (not b!132825) (not d!40355) (not b!133079) (not b!132911) (not d!40357) (not bm!14633) (not d!40409) (not b!133072) (not b!132915) (not d!40377) (not b_lambda!5915) (not b!132796) (not b!133074) (not bm!14631) (not d!40333) (not d!40361) (not b!132953) (not d!40295) (not b!132917) (not b!132945) (not b!132787) (not b!133042) (not d!40379) (not d!40347) (not b!132768) (not b_lambda!5909) (not b!132963) (not b!132970) (not b!132764) (not b!132806) (not b_lambda!5917) (not b!132769) (not b!133119) (not b!132877) (not b!132936) (not b!132810) (not b!132967) (not b!132990) (not b!132929) (not bm!14625) b_and!8231 (not b!132804) (not b!133081) (not b!133075) (not b!132913) (not bm!14674) (not d!40327) (not bm!14648) (not bm!14673) (not d!40365) (not d!40321) (not bm!14635) (not b!133037) (not bm!14632) (not d!40405) (not b!132763) (not d!40363) (not b!132977) (not b!132831) (not d!40339) (not bm!14667) (not d!40367) (not b!132920) (not b!132912) (not b!132809) (not bm!14645) (not b!132840) (not d!40385) (not bm!14672) (not b!132782) (not d!40391) (not bm!14642) (not b!133067) (not bm!14666) (not bm!14647) (not d!40371) (not d!40299) (not b!132837) (not b!132807) (not d!40315) (not b!133052) (not b!133049) (not d!40393) (not b!132798) (not b!133109) (not b!132955) (not b!132797) (not bm!14679) (not bm!14650) (not d!40331) (not b!133062) (not b!132916) (not d!40353) (not b!132788) (not b!132958) (not b!132909) (not b!132879) (not b!132799) (not d!40309) (not b!133077) (not bm!14664) (not b!132906) (not b!132950) (not mapNonEmpty!4655) (not b_lambda!5913) (not d!40415) (not d!40297) (not d!40401) (not b!132969) (not b!132964) (not b!132790) (not d!40305) (not b!133051) (not b_next!2919))
(check-sat b_and!8229 b_and!8231 (not b_next!2917) (not b_next!2919))
(get-model)

(declare-fun d!40421 () Bool)

(assert (=> d!40421 (= (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182)) (not (isEmpty!413 (getValueByKey!170 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182))))))

(declare-fun bs!5489 () Bool)

(assert (= bs!5489 d!40421))

(assert (=> bs!5489 m!156447))

(declare-fun m!156729 () Bool)

(assert (=> bs!5489 m!156729))

(assert (=> b!132958 d!40421))

(declare-fun d!40423 () Bool)

(declare-fun c!24653 () Bool)

(assert (=> d!40423 (= c!24653 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69182)))))

(declare-fun e!86754 () Option!176)

(assert (=> d!40423 (= (getValueByKey!170 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182) e!86754)))

(declare-fun e!86755 () Option!176)

(declare-fun b!133128 () Bool)

(assert (=> b!133128 (= e!86755 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!69182))))

(declare-fun b!133127 () Bool)

(assert (=> b!133127 (= e!86754 e!86755)))

(declare-fun c!24654 () Bool)

(assert (=> b!133127 (= c!24654 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69182))))))

(declare-fun b!133126 () Bool)

(assert (=> b!133126 (= e!86754 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))))

(declare-fun b!133129 () Bool)

(assert (=> b!133129 (= e!86755 None!174)))

(assert (= (and d!40423 c!24653) b!133126))

(assert (= (and d!40423 (not c!24653)) b!133127))

(assert (= (and b!133127 c!24654) b!133128))

(assert (= (and b!133127 (not c!24654)) b!133129))

(declare-fun m!156731 () Bool)

(assert (=> b!133128 m!156731))

(assert (=> b!132958 d!40423))

(declare-fun d!40425 () Bool)

(assert (=> d!40425 (= (validMask!0 (mask!7163 newMap!16)) (and (or (= (mask!7163 newMap!16) #b00000000000000000000000000000111) (= (mask!7163 newMap!16) #b00000000000000000000000000001111) (= (mask!7163 newMap!16) #b00000000000000000000000000011111) (= (mask!7163 newMap!16) #b00000000000000000000000000111111) (= (mask!7163 newMap!16) #b00000000000000000000000001111111) (= (mask!7163 newMap!16) #b00000000000000000000000011111111) (= (mask!7163 newMap!16) #b00000000000000000000000111111111) (= (mask!7163 newMap!16) #b00000000000000000000001111111111) (= (mask!7163 newMap!16) #b00000000000000000000011111111111) (= (mask!7163 newMap!16) #b00000000000000000000111111111111) (= (mask!7163 newMap!16) #b00000000000000000001111111111111) (= (mask!7163 newMap!16) #b00000000000000000011111111111111) (= (mask!7163 newMap!16) #b00000000000000000111111111111111) (= (mask!7163 newMap!16) #b00000000000000001111111111111111) (= (mask!7163 newMap!16) #b00000000000000011111111111111111) (= (mask!7163 newMap!16) #b00000000000000111111111111111111) (= (mask!7163 newMap!16) #b00000000000001111111111111111111) (= (mask!7163 newMap!16) #b00000000000011111111111111111111) (= (mask!7163 newMap!16) #b00000000000111111111111111111111) (= (mask!7163 newMap!16) #b00000000001111111111111111111111) (= (mask!7163 newMap!16) #b00000000011111111111111111111111) (= (mask!7163 newMap!16) #b00000000111111111111111111111111) (= (mask!7163 newMap!16) #b00000001111111111111111111111111) (= (mask!7163 newMap!16) #b00000011111111111111111111111111) (= (mask!7163 newMap!16) #b00000111111111111111111111111111) (= (mask!7163 newMap!16) #b00001111111111111111111111111111) (= (mask!7163 newMap!16) #b00011111111111111111111111111111) (= (mask!7163 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!7163 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!40311 d!40425))

(assert (=> d!40297 d!40425))

(declare-fun d!40427 () Bool)

(declare-fun res!64064 () Bool)

(declare-fun e!86756 () Bool)

(assert (=> d!40427 (=> res!64064 e!86756)))

(assert (=> d!40427 (= res!64064 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116)))))))

(assert (=> d!40427 (= (containsKey!174 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))) e!86756)))

(declare-fun b!133130 () Bool)

(declare-fun e!86757 () Bool)

(assert (=> b!133130 (= e!86756 e!86757)))

(declare-fun res!64065 () Bool)

(assert (=> b!133130 (=> (not res!64065) (not e!86757))))

(assert (=> b!133130 (= res!64065 (and (or (not ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (bvsle (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116)))) ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvslt (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116)))))))

(declare-fun b!133131 () Bool)

(assert (=> b!133131 (= e!86757 (containsKey!174 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))

(assert (= (and d!40427 (not res!64064)) b!133130))

(assert (= (and b!133130 res!64065) b!133131))

(assert (=> b!133131 m!155971))

(declare-fun m!156733 () Bool)

(assert (=> b!133131 m!156733))

(assert (=> d!40309 d!40427))

(declare-fun d!40429 () Bool)

(assert (=> d!40429 (contains!886 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))

(declare-fun lt!69523 () Unit!4132)

(declare-fun choose!833 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 64) (_ BitVec 32) Int) Unit!4132)

(assert (=> d!40429 (= lt!69523 (choose!833 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(assert (=> d!40429 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40429 (= (lemmaArrayContainsKeyThenInListMap!42 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69523)))

(declare-fun bs!5490 () Bool)

(assert (= bs!5490 d!40429))

(assert (=> bs!5490 m!156041))

(assert (=> bs!5490 m!156041))

(assert (=> bs!5490 m!155841))

(assert (=> bs!5490 m!156545))

(assert (=> bs!5490 m!155841))

(declare-fun m!156735 () Bool)

(assert (=> bs!5490 m!156735))

(assert (=> bs!5490 m!156183))

(assert (=> b!133037 d!40429))

(declare-fun d!40431 () Bool)

(declare-fun e!86758 () Bool)

(assert (=> d!40431 e!86758))

(declare-fun res!64066 () Bool)

(assert (=> d!40431 (=> res!64066 e!86758)))

(declare-fun lt!69525 () Bool)

(assert (=> d!40431 (= res!64066 (not lt!69525))))

(declare-fun lt!69527 () Bool)

(assert (=> d!40431 (= lt!69525 lt!69527)))

(declare-fun lt!69524 () Unit!4132)

(declare-fun e!86759 () Unit!4132)

(assert (=> d!40431 (= lt!69524 e!86759)))

(declare-fun c!24655 () Bool)

(assert (=> d!40431 (= c!24655 lt!69527)))

(assert (=> d!40431 (= lt!69527 (containsKey!174 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> d!40431 (= (contains!886 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) lt!69525)))

(declare-fun b!133132 () Bool)

(declare-fun lt!69526 () Unit!4132)

(assert (=> b!133132 (= e!86759 lt!69526)))

(assert (=> b!133132 (= lt!69526 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> b!133132 (isDefined!124 (getValueByKey!170 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!133133 () Bool)

(declare-fun Unit!4152 () Unit!4132)

(assert (=> b!133133 (= e!86759 Unit!4152)))

(declare-fun b!133134 () Bool)

(assert (=> b!133134 (= e!86758 (isDefined!124 (getValueByKey!170 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(assert (= (and d!40431 c!24655) b!133132))

(assert (= (and d!40431 (not c!24655)) b!133133))

(assert (= (and d!40431 (not res!64066)) b!133134))

(assert (=> d!40431 m!155841))

(declare-fun m!156737 () Bool)

(assert (=> d!40431 m!156737))

(assert (=> b!133132 m!155841))

(declare-fun m!156739 () Bool)

(assert (=> b!133132 m!156739))

(assert (=> b!133132 m!155841))

(declare-fun m!156741 () Bool)

(assert (=> b!133132 m!156741))

(assert (=> b!133132 m!156741))

(declare-fun m!156743 () Bool)

(assert (=> b!133132 m!156743))

(assert (=> b!133134 m!155841))

(assert (=> b!133134 m!156741))

(assert (=> b!133134 m!156741))

(assert (=> b!133134 m!156743))

(assert (=> b!133037 d!40431))

(assert (=> b!133037 d!40383))

(declare-fun d!40433 () Bool)

(declare-fun e!86774 () Bool)

(assert (=> d!40433 e!86774))

(declare-fun c!24662 () Bool)

(declare-fun lt!69532 () SeekEntryResult!278)

(assert (=> d!40433 (= c!24662 (and ((_ is Intermediate!278) lt!69532) (undefined!1090 lt!69532)))))

(declare-fun e!86770 () SeekEntryResult!278)

(assert (=> d!40433 (= lt!69532 e!86770)))

(declare-fun c!24663 () Bool)

(assert (=> d!40433 (= c!24663 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!69533 () (_ BitVec 64))

(assert (=> d!40433 (= lt!69533 (select (arr!2248 (_keys!4612 newMap!16)) (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (mask!7163 newMap!16))))))

(assert (=> d!40433 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40433 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (mask!7163 newMap!16)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)) lt!69532)))

(declare-fun b!133153 () Bool)

(assert (=> b!133153 (and (bvsge (index!3274 lt!69532) #b00000000000000000000000000000000) (bvslt (index!3274 lt!69532) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun e!86773 () Bool)

(assert (=> b!133153 (= e!86773 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3274 lt!69532)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133154 () Bool)

(assert (=> b!133154 (and (bvsge (index!3274 lt!69532) #b00000000000000000000000000000000) (bvslt (index!3274 lt!69532) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64075 () Bool)

(assert (=> b!133154 (= res!64075 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3274 lt!69532)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133154 (=> res!64075 e!86773)))

(declare-fun b!133155 () Bool)

(declare-fun e!86772 () SeekEntryResult!278)

(assert (=> b!133155 (= e!86770 e!86772)))

(declare-fun c!24664 () Bool)

(assert (=> b!133155 (= c!24664 (or (= lt!69533 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (= (bvadd lt!69533 lt!69533) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133156 () Bool)

(declare-fun e!86771 () Bool)

(assert (=> b!133156 (= e!86774 e!86771)))

(declare-fun res!64074 () Bool)

(assert (=> b!133156 (= res!64074 (and ((_ is Intermediate!278) lt!69532) (not (undefined!1090 lt!69532)) (bvslt (x!15594 lt!69532) #b01111111111111111111111111111110) (bvsge (x!15594 lt!69532) #b00000000000000000000000000000000) (bvsge (x!15594 lt!69532) #b00000000000000000000000000000000)))))

(assert (=> b!133156 (=> (not res!64074) (not e!86771))))

(declare-fun b!133157 () Bool)

(assert (=> b!133157 (= e!86772 (Intermediate!278 false (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (mask!7163 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!133158 () Bool)

(assert (=> b!133158 (= e!86770 (Intermediate!278 true (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (mask!7163 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!133159 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!133159 (= e!86772 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (mask!7163 newMap!16)) #b00000000000000000000000000000000 (mask!7163 newMap!16)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(declare-fun b!133160 () Bool)

(assert (=> b!133160 (= e!86774 (bvsge (x!15594 lt!69532) #b01111111111111111111111111111110))))

(declare-fun b!133161 () Bool)

(assert (=> b!133161 (and (bvsge (index!3274 lt!69532) #b00000000000000000000000000000000) (bvslt (index!3274 lt!69532) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64073 () Bool)

(assert (=> b!133161 (= res!64073 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3274 lt!69532)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> b!133161 (=> res!64073 e!86773)))

(assert (=> b!133161 (= e!86771 e!86773)))

(assert (= (and d!40433 c!24663) b!133158))

(assert (= (and d!40433 (not c!24663)) b!133155))

(assert (= (and b!133155 c!24664) b!133157))

(assert (= (and b!133155 (not c!24664)) b!133159))

(assert (= (and d!40433 c!24662) b!133160))

(assert (= (and d!40433 (not c!24662)) b!133156))

(assert (= (and b!133156 res!64074) b!133161))

(assert (= (and b!133161 (not res!64073)) b!133154))

(assert (= (and b!133154 (not res!64075)) b!133153))

(declare-fun m!156745 () Bool)

(assert (=> b!133154 m!156745))

(assert (=> d!40433 m!156365))

(declare-fun m!156747 () Bool)

(assert (=> d!40433 m!156747))

(assert (=> d!40433 m!156183))

(assert (=> b!133153 m!156745))

(assert (=> b!133159 m!156365))

(declare-fun m!156749 () Bool)

(assert (=> b!133159 m!156749))

(assert (=> b!133159 m!156749))

(assert (=> b!133159 m!155841))

(declare-fun m!156751 () Bool)

(assert (=> b!133159 m!156751))

(assert (=> b!133161 m!156745))

(assert (=> d!40351 d!40433))

(declare-fun d!40435 () Bool)

(declare-fun lt!69539 () (_ BitVec 32))

(declare-fun lt!69538 () (_ BitVec 32))

(assert (=> d!40435 (= lt!69539 (bvmul (bvxor lt!69538 (bvlshr lt!69538 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!40435 (= lt!69538 ((_ extract 31 0) (bvand (bvxor (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (bvlshr (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!40435 (and (bvsge (mask!7163 newMap!16) #b00000000000000000000000000000000) (let ((res!64076 (let ((h!2314 ((_ extract 31 0) (bvand (bvxor (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (bvlshr (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15697 (bvmul (bvxor h!2314 (bvlshr h!2314 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15697 (bvlshr x!15697 #b00000000000000000000000000001101)) (mask!7163 newMap!16)))))) (and (bvslt res!64076 (bvadd (mask!7163 newMap!16) #b00000000000000000000000000000001)) (bvsge res!64076 #b00000000000000000000000000000000))))))

(assert (=> d!40435 (= (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (mask!7163 newMap!16)) (bvand (bvxor lt!69539 (bvlshr lt!69539 #b00000000000000000000000000001101)) (mask!7163 newMap!16)))))

(assert (=> d!40351 d!40435))

(assert (=> d!40351 d!40425))

(declare-fun d!40437 () Bool)

(declare-fun res!64077 () Bool)

(declare-fun e!86775 () Bool)

(assert (=> d!40437 (=> res!64077 e!86775)))

(assert (=> d!40437 (= res!64077 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69005))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69005)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(assert (=> d!40437 (= (containsKey!174 (t!6152 (toList!851 lt!69005)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!86775)))

(declare-fun b!133162 () Bool)

(declare-fun e!86776 () Bool)

(assert (=> b!133162 (= e!86775 e!86776)))

(declare-fun res!64078 () Bool)

(assert (=> b!133162 (=> (not res!64078) (not e!86776))))

(assert (=> b!133162 (= res!64078 (and (or (not ((_ is Cons!1706) (t!6152 (toList!851 lt!69005)))) (bvsle (_1!1303 (h!2311 (t!6152 (toList!851 lt!69005)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) ((_ is Cons!1706) (t!6152 (toList!851 lt!69005))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 lt!69005)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun b!133163 () Bool)

(assert (=> b!133163 (= e!86776 (containsKey!174 (t!6152 (t!6152 (toList!851 lt!69005))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!40437 (not res!64077)) b!133162))

(assert (= (and b!133162 res!64078) b!133163))

(assert (=> b!133163 m!155841))

(declare-fun m!156753 () Bool)

(assert (=> b!133163 m!156753))

(assert (=> b!132796 d!40437))

(declare-fun d!40439 () Bool)

(assert (=> d!40439 (arrayContainsKey!0 (_keys!4612 newMap!16) lt!69498 #b00000000000000000000000000000000)))

(declare-fun lt!69540 () Unit!4132)

(assert (=> d!40439 (= lt!69540 (choose!13 (_keys!4612 newMap!16) lt!69498 #b00000000000000000000000000000000))))

(assert (=> d!40439 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!40439 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 newMap!16) lt!69498 #b00000000000000000000000000000000) lt!69540)))

(declare-fun bs!5491 () Bool)

(assert (= bs!5491 d!40439))

(assert (=> bs!5491 m!156675))

(declare-fun m!156755 () Bool)

(assert (=> bs!5491 m!156755))

(assert (=> b!133074 d!40439))

(declare-fun d!40441 () Bool)

(declare-fun res!64079 () Bool)

(declare-fun e!86777 () Bool)

(assert (=> d!40441 (=> res!64079 e!86777)))

(assert (=> d!40441 (= res!64079 (= (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) lt!69498))))

(assert (=> d!40441 (= (arrayContainsKey!0 (_keys!4612 newMap!16) lt!69498 #b00000000000000000000000000000000) e!86777)))

(declare-fun b!133164 () Bool)

(declare-fun e!86778 () Bool)

(assert (=> b!133164 (= e!86777 e!86778)))

(declare-fun res!64080 () Bool)

(assert (=> b!133164 (=> (not res!64080) (not e!86778))))

(assert (=> b!133164 (= res!64080 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133165 () Bool)

(assert (=> b!133165 (= e!86778 (arrayContainsKey!0 (_keys!4612 newMap!16) lt!69498 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40441 (not res!64079)) b!133164))

(assert (= (and b!133164 res!64080) b!133165))

(assert (=> d!40441 m!156125))

(declare-fun m!156757 () Bool)

(assert (=> b!133165 m!156757))

(assert (=> b!133074 d!40441))

(declare-fun b!133166 () Bool)

(declare-fun c!24667 () Bool)

(declare-fun lt!69543 () (_ BitVec 64))

(assert (=> b!133166 (= c!24667 (= lt!69543 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86780 () SeekEntryResult!278)

(declare-fun e!86781 () SeekEntryResult!278)

(assert (=> b!133166 (= e!86780 e!86781)))

(declare-fun b!133167 () Bool)

(declare-fun e!86779 () SeekEntryResult!278)

(assert (=> b!133167 (= e!86779 Undefined!278)))

(declare-fun b!133168 () Bool)

(declare-fun lt!69542 () SeekEntryResult!278)

(assert (=> b!133168 (= e!86781 (seekKeyOrZeroReturnVacant!0 (x!15594 lt!69542) (index!3274 lt!69542) (index!3274 lt!69542) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(declare-fun b!133169 () Bool)

(assert (=> b!133169 (= e!86780 (Found!278 (index!3274 lt!69542)))))

(declare-fun b!133170 () Bool)

(assert (=> b!133170 (= e!86779 e!86780)))

(assert (=> b!133170 (= lt!69543 (select (arr!2248 (_keys!4612 newMap!16)) (index!3274 lt!69542)))))

(declare-fun c!24666 () Bool)

(assert (=> b!133170 (= c!24666 (= lt!69543 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133171 () Bool)

(assert (=> b!133171 (= e!86781 (MissingZero!278 (index!3274 lt!69542)))))

(declare-fun d!40443 () Bool)

(declare-fun lt!69541 () SeekEntryResult!278)

(assert (=> d!40443 (and (or ((_ is Undefined!278) lt!69541) (not ((_ is Found!278) lt!69541)) (and (bvsge (index!3273 lt!69541) #b00000000000000000000000000000000) (bvslt (index!3273 lt!69541) (size!2518 (_keys!4612 newMap!16))))) (or ((_ is Undefined!278) lt!69541) ((_ is Found!278) lt!69541) (not ((_ is MissingZero!278) lt!69541)) (and (bvsge (index!3272 lt!69541) #b00000000000000000000000000000000) (bvslt (index!3272 lt!69541) (size!2518 (_keys!4612 newMap!16))))) (or ((_ is Undefined!278) lt!69541) ((_ is Found!278) lt!69541) ((_ is MissingZero!278) lt!69541) (not ((_ is MissingVacant!278) lt!69541)) (and (bvsge (index!3275 lt!69541) #b00000000000000000000000000000000) (bvslt (index!3275 lt!69541) (size!2518 (_keys!4612 newMap!16))))) (or ((_ is Undefined!278) lt!69541) (ite ((_ is Found!278) lt!69541) (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69541)) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!278) lt!69541) (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3272 lt!69541)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!278) lt!69541) (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3275 lt!69541)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40443 (= lt!69541 e!86779)))

(declare-fun c!24665 () Bool)

(assert (=> d!40443 (= c!24665 (and ((_ is Intermediate!278) lt!69542) (undefined!1090 lt!69542)))))

(assert (=> d!40443 (= lt!69542 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (mask!7163 newMap!16)) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(assert (=> d!40443 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40443 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (_keys!4612 newMap!16) (mask!7163 newMap!16)) lt!69541)))

(assert (= (and d!40443 c!24665) b!133167))

(assert (= (and d!40443 (not c!24665)) b!133170))

(assert (= (and b!133170 c!24666) b!133169))

(assert (= (and b!133170 (not c!24666)) b!133166))

(assert (= (and b!133166 c!24667) b!133171))

(assert (= (and b!133166 (not c!24667)) b!133168))

(assert (=> b!133168 m!156125))

(declare-fun m!156759 () Bool)

(assert (=> b!133168 m!156759))

(declare-fun m!156761 () Bool)

(assert (=> b!133170 m!156761))

(assert (=> d!40443 m!156183))

(declare-fun m!156763 () Bool)

(assert (=> d!40443 m!156763))

(declare-fun m!156765 () Bool)

(assert (=> d!40443 m!156765))

(assert (=> d!40443 m!156125))

(declare-fun m!156767 () Bool)

(assert (=> d!40443 m!156767))

(declare-fun m!156769 () Bool)

(assert (=> d!40443 m!156769))

(assert (=> d!40443 m!156767))

(assert (=> d!40443 m!156125))

(declare-fun m!156771 () Bool)

(assert (=> d!40443 m!156771))

(assert (=> b!133074 d!40443))

(declare-fun d!40445 () Bool)

(declare-fun c!24668 () Bool)

(assert (=> d!40445 (= c!24668 (and ((_ is Cons!1706) (toList!851 lt!69320)) (= (_1!1303 (h!2311 (toList!851 lt!69320))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!86782 () Option!176)

(assert (=> d!40445 (= (getValueByKey!170 (toList!851 lt!69320) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!86782)))

(declare-fun b!133174 () Bool)

(declare-fun e!86783 () Option!176)

(assert (=> b!133174 (= e!86783 (getValueByKey!170 (t!6152 (toList!851 lt!69320)) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133173 () Bool)

(assert (=> b!133173 (= e!86782 e!86783)))

(declare-fun c!24669 () Bool)

(assert (=> b!133173 (= c!24669 (and ((_ is Cons!1706) (toList!851 lt!69320)) (not (= (_1!1303 (h!2311 (toList!851 lt!69320))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!133172 () Bool)

(assert (=> b!133172 (= e!86782 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69320)))))))

(declare-fun b!133175 () Bool)

(assert (=> b!133175 (= e!86783 None!174)))

(assert (= (and d!40445 c!24668) b!133172))

(assert (= (and d!40445 (not c!24668)) b!133173))

(assert (= (and b!133173 c!24669) b!133174))

(assert (= (and b!133173 (not c!24669)) b!133175))

(declare-fun m!156773 () Bool)

(assert (=> b!133174 m!156773))

(assert (=> b!132944 d!40445))

(declare-fun d!40447 () Bool)

(assert (=> d!40447 (= (get!1482 (getValueByKey!170 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3198 (getValueByKey!170 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!40305 d!40447))

(declare-fun d!40449 () Bool)

(declare-fun c!24670 () Bool)

(assert (=> d!40449 (= c!24670 (and ((_ is Cons!1706) (toList!851 lt!69186)) (= (_1!1303 (h!2311 (toList!851 lt!69186))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!86784 () Option!176)

(assert (=> d!40449 (= (getValueByKey!170 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!86784)))

(declare-fun e!86785 () Option!176)

(declare-fun b!133178 () Bool)

(assert (=> b!133178 (= e!86785 (getValueByKey!170 (t!6152 (toList!851 lt!69186)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!133177 () Bool)

(assert (=> b!133177 (= e!86784 e!86785)))

(declare-fun c!24671 () Bool)

(assert (=> b!133177 (= c!24671 (and ((_ is Cons!1706) (toList!851 lt!69186)) (not (= (_1!1303 (h!2311 (toList!851 lt!69186))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!133176 () Bool)

(assert (=> b!133176 (= e!86784 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69186)))))))

(declare-fun b!133179 () Bool)

(assert (=> b!133179 (= e!86785 None!174)))

(assert (= (and d!40449 c!24670) b!133176))

(assert (= (and d!40449 (not c!24670)) b!133177))

(assert (= (and b!133177 c!24671) b!133178))

(assert (= (and b!133177 (not c!24671)) b!133179))

(assert (=> b!133178 m!156043))

(declare-fun m!156775 () Bool)

(assert (=> b!133178 m!156775))

(assert (=> d!40305 d!40449))

(declare-fun lt!69546 () Bool)

(declare-fun d!40451 () Bool)

(declare-fun content!133 (List!1710) (InoxSet tuple2!2584))

(assert (=> d!40451 (= lt!69546 (select (content!133 (toList!851 lt!69202)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!86791 () Bool)

(assert (=> d!40451 (= lt!69546 e!86791)))

(declare-fun res!64085 () Bool)

(assert (=> d!40451 (=> (not res!64085) (not e!86791))))

(assert (=> d!40451 (= res!64085 ((_ is Cons!1706) (toList!851 lt!69202)))))

(assert (=> d!40451 (= (contains!889 (toList!851 lt!69202) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69546)))

(declare-fun b!133184 () Bool)

(declare-fun e!86790 () Bool)

(assert (=> b!133184 (= e!86791 e!86790)))

(declare-fun res!64086 () Bool)

(assert (=> b!133184 (=> res!64086 e!86790)))

(assert (=> b!133184 (= res!64086 (= (h!2311 (toList!851 lt!69202)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133185 () Bool)

(assert (=> b!133185 (= e!86790 (contains!889 (t!6152 (toList!851 lt!69202)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40451 res!64085) b!133184))

(assert (= (and b!133184 (not res!64086)) b!133185))

(declare-fun m!156777 () Bool)

(assert (=> d!40451 m!156777))

(declare-fun m!156779 () Bool)

(assert (=> d!40451 m!156779))

(declare-fun m!156781 () Bool)

(assert (=> b!133185 m!156781))

(assert (=> b!132763 d!40451))

(declare-fun d!40453 () Bool)

(assert (=> d!40453 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5492 () Bool)

(assert (= bs!5492 d!40453))

(assert (=> bs!5492 m!156117))

(declare-fun m!156783 () Bool)

(assert (=> bs!5492 m!156783))

(assert (=> b!132881 d!40453))

(declare-fun d!40455 () Bool)

(declare-fun c!24672 () Bool)

(assert (=> d!40455 (= c!24672 (and ((_ is Cons!1706) (toList!851 lt!69186)) (= (_1!1303 (h!2311 (toList!851 lt!69186))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!86792 () Option!176)

(assert (=> d!40455 (= (getValueByKey!170 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000) e!86792)))

(declare-fun b!133188 () Bool)

(declare-fun e!86793 () Option!176)

(assert (=> b!133188 (= e!86793 (getValueByKey!170 (t!6152 (toList!851 lt!69186)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133187 () Bool)

(assert (=> b!133187 (= e!86792 e!86793)))

(declare-fun c!24673 () Bool)

(assert (=> b!133187 (= c!24673 (and ((_ is Cons!1706) (toList!851 lt!69186)) (not (= (_1!1303 (h!2311 (toList!851 lt!69186))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133186 () Bool)

(assert (=> b!133186 (= e!86792 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69186)))))))

(declare-fun b!133189 () Bool)

(assert (=> b!133189 (= e!86793 None!174)))

(assert (= (and d!40455 c!24672) b!133186))

(assert (= (and d!40455 (not c!24672)) b!133187))

(assert (= (and b!133187 c!24673) b!133188))

(assert (= (and b!133187 (not c!24673)) b!133189))

(declare-fun m!156785 () Bool)

(assert (=> b!133188 m!156785))

(assert (=> b!132881 d!40455))

(declare-fun d!40457 () Bool)

(assert (=> d!40457 (= (apply!116 lt!69220 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (getValueByKey!170 (toList!851 lt!69220) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5493 () Bool)

(assert (= bs!5493 d!40457))

(assert (=> bs!5493 m!156125))

(declare-fun m!156787 () Bool)

(assert (=> bs!5493 m!156787))

(assert (=> bs!5493 m!156787))

(declare-fun m!156789 () Bool)

(assert (=> bs!5493 m!156789))

(assert (=> b!132772 d!40457))

(declare-fun d!40459 () Bool)

(declare-fun c!24674 () Bool)

(assert (=> d!40459 (= c!24674 ((_ is ValueCellFull!1094) (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!86794 () V!3481)

(assert (=> d!40459 (= (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!86794)))

(declare-fun b!133190 () Bool)

(assert (=> b!133190 (= e!86794 (get!1480 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133191 () Bool)

(assert (=> b!133191 (= e!86794 (get!1481 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40459 c!24674) b!133190))

(assert (= (and d!40459 (not c!24674)) b!133191))

(assert (=> b!133190 m!156133))

(assert (=> b!133190 m!156135))

(declare-fun m!156791 () Bool)

(assert (=> b!133190 m!156791))

(assert (=> b!133191 m!156133))

(assert (=> b!133191 m!156135))

(declare-fun m!156793 () Bool)

(assert (=> b!133191 m!156793))

(assert (=> b!132772 d!40459))

(declare-fun d!40461 () Bool)

(declare-fun e!86795 () Bool)

(assert (=> d!40461 e!86795))

(declare-fun res!64087 () Bool)

(assert (=> d!40461 (=> res!64087 e!86795)))

(declare-fun lt!69548 () Bool)

(assert (=> d!40461 (= res!64087 (not lt!69548))))

(declare-fun lt!69550 () Bool)

(assert (=> d!40461 (= lt!69548 lt!69550)))

(declare-fun lt!69547 () Unit!4132)

(declare-fun e!86796 () Unit!4132)

(assert (=> d!40461 (= lt!69547 e!86796)))

(declare-fun c!24675 () Bool)

(assert (=> d!40461 (= c!24675 lt!69550)))

(assert (=> d!40461 (= lt!69550 (containsKey!174 (toList!851 lt!69301) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40461 (= (contains!886 lt!69301 #b1000000000000000000000000000000000000000000000000000000000000000) lt!69548)))

(declare-fun b!133192 () Bool)

(declare-fun lt!69549 () Unit!4132)

(assert (=> b!133192 (= e!86796 lt!69549)))

(assert (=> b!133192 (= lt!69549 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69301) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133192 (isDefined!124 (getValueByKey!170 (toList!851 lt!69301) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133193 () Bool)

(declare-fun Unit!4153 () Unit!4132)

(assert (=> b!133193 (= e!86796 Unit!4153)))

(declare-fun b!133194 () Bool)

(assert (=> b!133194 (= e!86795 (isDefined!124 (getValueByKey!170 (toList!851 lt!69301) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40461 c!24675) b!133192))

(assert (= (and d!40461 (not c!24675)) b!133193))

(assert (= (and d!40461 (not res!64087)) b!133194))

(declare-fun m!156795 () Bool)

(assert (=> d!40461 m!156795))

(declare-fun m!156797 () Bool)

(assert (=> b!133192 m!156797))

(declare-fun m!156799 () Bool)

(assert (=> b!133192 m!156799))

(assert (=> b!133192 m!156799))

(declare-fun m!156801 () Bool)

(assert (=> b!133192 m!156801))

(assert (=> b!133194 m!156799))

(assert (=> b!133194 m!156799))

(assert (=> b!133194 m!156801))

(assert (=> b!132916 d!40461))

(declare-fun d!40463 () Bool)

(assert (=> d!40463 (= (apply!116 lt!69250 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (getValueByKey!170 (toList!851 lt!69250) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5494 () Bool)

(assert (= bs!5494 d!40463))

(assert (=> bs!5494 m!156125))

(declare-fun m!156803 () Bool)

(assert (=> bs!5494 m!156803))

(assert (=> bs!5494 m!156803))

(declare-fun m!156805 () Bool)

(assert (=> bs!5494 m!156805))

(assert (=> b!132807 d!40463))

(declare-fun d!40465 () Bool)

(declare-fun c!24676 () Bool)

(assert (=> d!40465 (= c!24676 ((_ is ValueCellFull!1094) (select (arr!2249 lt!69094) #b00000000000000000000000000000000)))))

(declare-fun e!86797 () V!3481)

(assert (=> d!40465 (= (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!86797)))

(declare-fun b!133195 () Bool)

(assert (=> b!133195 (= e!86797 (get!1480 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133196 () Bool)

(assert (=> b!133196 (= e!86797 (get!1481 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40465 c!24676) b!133195))

(assert (= (and d!40465 (not c!24676)) b!133196))

(assert (=> b!133195 m!156217))

(assert (=> b!133195 m!156135))

(declare-fun m!156807 () Bool)

(assert (=> b!133195 m!156807))

(assert (=> b!133196 m!156217))

(assert (=> b!133196 m!156135))

(declare-fun m!156809 () Bool)

(assert (=> b!133196 m!156809))

(assert (=> b!132807 d!40465))

(declare-fun d!40467 () Bool)

(declare-fun e!86798 () Bool)

(assert (=> d!40467 e!86798))

(declare-fun res!64088 () Bool)

(assert (=> d!40467 (=> res!64088 e!86798)))

(declare-fun lt!69552 () Bool)

(assert (=> d!40467 (= res!64088 (not lt!69552))))

(declare-fun lt!69554 () Bool)

(assert (=> d!40467 (= lt!69552 lt!69554)))

(declare-fun lt!69551 () Unit!4132)

(declare-fun e!86799 () Unit!4132)

(assert (=> d!40467 (= lt!69551 e!86799)))

(declare-fun c!24677 () Bool)

(assert (=> d!40467 (= c!24677 lt!69554)))

(assert (=> d!40467 (= lt!69554 (containsKey!174 (toList!851 lt!69320) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40467 (= (contains!886 lt!69320 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69552)))

(declare-fun b!133197 () Bool)

(declare-fun lt!69553 () Unit!4132)

(assert (=> b!133197 (= e!86799 lt!69553)))

(assert (=> b!133197 (= lt!69553 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69320) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> b!133197 (isDefined!124 (getValueByKey!170 (toList!851 lt!69320) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133198 () Bool)

(declare-fun Unit!4154 () Unit!4132)

(assert (=> b!133198 (= e!86799 Unit!4154)))

(declare-fun b!133199 () Bool)

(assert (=> b!133199 (= e!86798 (isDefined!124 (getValueByKey!170 (toList!851 lt!69320) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!40467 c!24677) b!133197))

(assert (= (and d!40467 (not c!24677)) b!133198))

(assert (= (and d!40467 (not res!64088)) b!133199))

(declare-fun m!156811 () Bool)

(assert (=> d!40467 m!156811))

(declare-fun m!156813 () Bool)

(assert (=> b!133197 m!156813))

(assert (=> b!133197 m!156383))

(assert (=> b!133197 m!156383))

(declare-fun m!156815 () Bool)

(assert (=> b!133197 m!156815))

(assert (=> b!133199 m!156383))

(assert (=> b!133199 m!156383))

(assert (=> b!133199 m!156815))

(assert (=> d!40355 d!40467))

(declare-fun d!40469 () Bool)

(declare-fun c!24678 () Bool)

(assert (=> d!40469 (= c!24678 (and ((_ is Cons!1706) lt!69318) (= (_1!1303 (h!2311 lt!69318)) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!86800 () Option!176)

(assert (=> d!40469 (= (getValueByKey!170 lt!69318 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!86800)))

(declare-fun b!133202 () Bool)

(declare-fun e!86801 () Option!176)

(assert (=> b!133202 (= e!86801 (getValueByKey!170 (t!6152 lt!69318) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133201 () Bool)

(assert (=> b!133201 (= e!86800 e!86801)))

(declare-fun c!24679 () Bool)

(assert (=> b!133201 (= c!24679 (and ((_ is Cons!1706) lt!69318) (not (= (_1!1303 (h!2311 lt!69318)) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!133200 () Bool)

(assert (=> b!133200 (= e!86800 (Some!175 (_2!1303 (h!2311 lt!69318))))))

(declare-fun b!133203 () Bool)

(assert (=> b!133203 (= e!86801 None!174)))

(assert (= (and d!40469 c!24678) b!133200))

(assert (= (and d!40469 (not c!24678)) b!133201))

(assert (= (and b!133201 c!24679) b!133202))

(assert (= (and b!133201 (not c!24679)) b!133203))

(declare-fun m!156817 () Bool)

(assert (=> b!133202 m!156817))

(assert (=> d!40355 d!40469))

(declare-fun d!40471 () Bool)

(assert (=> d!40471 (= (getValueByKey!170 lt!69318 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun lt!69557 () Unit!4132)

(declare-fun choose!834 (List!1710 (_ BitVec 64) V!3481) Unit!4132)

(assert (=> d!40471 (= lt!69557 (choose!834 lt!69318 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun e!86804 () Bool)

(assert (=> d!40471 e!86804))

(declare-fun res!64093 () Bool)

(assert (=> d!40471 (=> (not res!64093) (not e!86804))))

(assert (=> d!40471 (= res!64093 (isStrictlySorted!317 lt!69318))))

(assert (=> d!40471 (= (lemmaContainsTupThenGetReturnValue!88 lt!69318 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69557)))

(declare-fun b!133208 () Bool)

(declare-fun res!64094 () Bool)

(assert (=> b!133208 (=> (not res!64094) (not e!86804))))

(assert (=> b!133208 (= res!64094 (containsKey!174 lt!69318 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133209 () Bool)

(assert (=> b!133209 (= e!86804 (contains!889 lt!69318 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!40471 res!64093) b!133208))

(assert (= (and b!133208 res!64094) b!133209))

(assert (=> d!40471 m!156377))

(declare-fun m!156819 () Bool)

(assert (=> d!40471 m!156819))

(declare-fun m!156821 () Bool)

(assert (=> d!40471 m!156821))

(declare-fun m!156823 () Bool)

(assert (=> b!133208 m!156823))

(declare-fun m!156825 () Bool)

(assert (=> b!133209 m!156825))

(assert (=> d!40355 d!40471))

(declare-fun e!86819 () List!1710)

(declare-fun b!133230 () Bool)

(assert (=> b!133230 (= e!86819 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69170)) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133231 () Bool)

(declare-fun e!86818 () List!1710)

(declare-fun call!14692 () List!1710)

(assert (=> b!133231 (= e!86818 call!14692)))

(declare-fun b!133232 () Bool)

(declare-fun res!64100 () Bool)

(declare-fun e!86816 () Bool)

(assert (=> b!133232 (=> (not res!64100) (not e!86816))))

(declare-fun lt!69560 () List!1710)

(assert (=> b!133232 (= res!64100 (containsKey!174 lt!69560 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun c!24689 () Bool)

(declare-fun bm!14687 () Bool)

(declare-fun $colon$colon!91 (List!1710 tuple2!2584) List!1710)

(assert (=> bm!14687 (= call!14692 ($colon$colon!91 e!86819 (ite c!24689 (h!2311 (toList!851 lt!69170)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun c!24690 () Bool)

(assert (=> bm!14687 (= c!24690 c!24689)))

(declare-fun c!24691 () Bool)

(declare-fun b!133233 () Bool)

(declare-fun c!24688 () Bool)

(assert (=> b!133233 (= e!86819 (ite c!24688 (t!6152 (toList!851 lt!69170)) (ite c!24691 (Cons!1706 (h!2311 (toList!851 lt!69170)) (t!6152 (toList!851 lt!69170))) Nil!1707)))))

(declare-fun d!40473 () Bool)

(assert (=> d!40473 e!86816))

(declare-fun res!64099 () Bool)

(assert (=> d!40473 (=> (not res!64099) (not e!86816))))

(assert (=> d!40473 (= res!64099 (isStrictlySorted!317 lt!69560))))

(assert (=> d!40473 (= lt!69560 e!86818)))

(assert (=> d!40473 (= c!24689 (and ((_ is Cons!1706) (toList!851 lt!69170)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69170))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!40473 (isStrictlySorted!317 (toList!851 lt!69170))))

(assert (=> d!40473 (= (insertStrictlySorted!91 (toList!851 lt!69170) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69560)))

(declare-fun b!133234 () Bool)

(declare-fun e!86815 () List!1710)

(assert (=> b!133234 (= e!86818 e!86815)))

(assert (=> b!133234 (= c!24688 (and ((_ is Cons!1706) (toList!851 lt!69170)) (= (_1!1303 (h!2311 (toList!851 lt!69170))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!133235 () Bool)

(declare-fun e!86817 () List!1710)

(declare-fun call!14690 () List!1710)

(assert (=> b!133235 (= e!86817 call!14690)))

(declare-fun b!133236 () Bool)

(declare-fun call!14691 () List!1710)

(assert (=> b!133236 (= e!86815 call!14691)))

(declare-fun b!133237 () Bool)

(assert (=> b!133237 (= e!86816 (contains!889 lt!69560 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun bm!14688 () Bool)

(assert (=> bm!14688 (= call!14691 call!14692)))

(declare-fun bm!14689 () Bool)

(assert (=> bm!14689 (= call!14690 call!14691)))

(declare-fun b!133238 () Bool)

(assert (=> b!133238 (= c!24691 (and ((_ is Cons!1706) (toList!851 lt!69170)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69170))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> b!133238 (= e!86815 e!86817)))

(declare-fun b!133239 () Bool)

(assert (=> b!133239 (= e!86817 call!14690)))

(assert (= (and d!40473 c!24689) b!133231))

(assert (= (and d!40473 (not c!24689)) b!133234))

(assert (= (and b!133234 c!24688) b!133236))

(assert (= (and b!133234 (not c!24688)) b!133238))

(assert (= (and b!133238 c!24691) b!133239))

(assert (= (and b!133238 (not c!24691)) b!133235))

(assert (= (or b!133239 b!133235) bm!14689))

(assert (= (or b!133236 bm!14689) bm!14688))

(assert (= (or b!133231 bm!14688) bm!14687))

(assert (= (and bm!14687 c!24690) b!133230))

(assert (= (and bm!14687 (not c!24690)) b!133233))

(assert (= (and d!40473 res!64099) b!133232))

(assert (= (and b!133232 res!64100) b!133237))

(declare-fun m!156827 () Bool)

(assert (=> b!133237 m!156827))

(declare-fun m!156829 () Bool)

(assert (=> b!133232 m!156829))

(declare-fun m!156831 () Bool)

(assert (=> b!133230 m!156831))

(declare-fun m!156833 () Bool)

(assert (=> d!40473 m!156833))

(declare-fun m!156835 () Bool)

(assert (=> d!40473 m!156835))

(declare-fun m!156837 () Bool)

(assert (=> bm!14687 m!156837))

(assert (=> d!40355 d!40473))

(declare-fun d!40475 () Bool)

(assert (=> d!40475 (= (apply!116 lt!69362 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69362) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5495 () Bool)

(assert (= bs!5495 d!40475))

(declare-fun m!156839 () Bool)

(assert (=> bs!5495 m!156839))

(assert (=> bs!5495 m!156839))

(declare-fun m!156841 () Bool)

(assert (=> bs!5495 m!156841))

(assert (=> b!132969 d!40475))

(declare-fun d!40477 () Bool)

(declare-fun res!64101 () Bool)

(declare-fun e!86820 () Bool)

(assert (=> d!40477 (=> res!64101 e!86820)))

(assert (=> d!40477 (= res!64101 (and ((_ is Cons!1706) (toList!851 lt!69186)) (= (_1!1303 (h!2311 (toList!851 lt!69186))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!40477 (= (containsKey!174 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!86820)))

(declare-fun b!133240 () Bool)

(declare-fun e!86821 () Bool)

(assert (=> b!133240 (= e!86820 e!86821)))

(declare-fun res!64102 () Bool)

(assert (=> b!133240 (=> (not res!64102) (not e!86821))))

(assert (=> b!133240 (= res!64102 (and (or (not ((_ is Cons!1706) (toList!851 lt!69186))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69186))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1706) (toList!851 lt!69186)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69186))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!133241 () Bool)

(assert (=> b!133241 (= e!86821 (containsKey!174 (t!6152 (toList!851 lt!69186)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!40477 (not res!64101)) b!133240))

(assert (= (and b!133240 res!64102) b!133241))

(assert (=> b!133241 m!156043))

(declare-fun m!156843 () Bool)

(assert (=> b!133241 m!156843))

(assert (=> d!40319 d!40477))

(declare-fun d!40479 () Bool)

(declare-fun e!86822 () Bool)

(assert (=> d!40479 e!86822))

(declare-fun res!64104 () Bool)

(assert (=> d!40479 (=> (not res!64104) (not e!86822))))

(declare-fun lt!69563 () ListLongMap!1671)

(assert (=> d!40479 (= res!64104 (contains!886 lt!69563 (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!69561 () List!1710)

(assert (=> d!40479 (= lt!69563 (ListLongMap!1672 lt!69561))))

(declare-fun lt!69564 () Unit!4132)

(declare-fun lt!69562 () Unit!4132)

(assert (=> d!40479 (= lt!69564 lt!69562)))

(assert (=> d!40479 (= (getValueByKey!170 lt!69561 (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!40479 (= lt!69562 (lemmaContainsTupThenGetReturnValue!88 lt!69561 (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!40479 (= lt!69561 (insertStrictlySorted!91 (toList!851 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633))) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!40479 (= (+!163 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633)) (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!69563)))

(declare-fun b!133242 () Bool)

(declare-fun res!64103 () Bool)

(assert (=> b!133242 (=> (not res!64103) (not e!86822))))

(assert (=> b!133242 (= res!64103 (= (getValueByKey!170 (toList!851 lt!69563) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!133243 () Bool)

(assert (=> b!133243 (= e!86822 (contains!889 (toList!851 lt!69563) (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!40479 res!64104) b!133242))

(assert (= (and b!133242 res!64103) b!133243))

(declare-fun m!156845 () Bool)

(assert (=> d!40479 m!156845))

(declare-fun m!156847 () Bool)

(assert (=> d!40479 m!156847))

(declare-fun m!156849 () Bool)

(assert (=> d!40479 m!156849))

(declare-fun m!156851 () Bool)

(assert (=> d!40479 m!156851))

(declare-fun m!156853 () Bool)

(assert (=> b!133242 m!156853))

(declare-fun m!156855 () Bool)

(assert (=> b!133243 m!156855))

(assert (=> bm!14625 d!40479))

(declare-fun d!40481 () Bool)

(declare-fun e!86823 () Bool)

(assert (=> d!40481 e!86823))

(declare-fun res!64106 () Bool)

(assert (=> d!40481 (=> (not res!64106) (not e!86823))))

(declare-fun lt!69567 () ListLongMap!1671)

(assert (=> d!40481 (= res!64106 (contains!886 lt!69567 (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!69565 () List!1710)

(assert (=> d!40481 (= lt!69567 (ListLongMap!1672 lt!69565))))

(declare-fun lt!69568 () Unit!4132)

(declare-fun lt!69566 () Unit!4132)

(assert (=> d!40481 (= lt!69568 lt!69566)))

(assert (=> d!40481 (= (getValueByKey!170 lt!69565 (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!40481 (= lt!69566 (lemmaContainsTupThenGetReturnValue!88 lt!69565 (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!40481 (= lt!69565 (insertStrictlySorted!91 (toList!851 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640))) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!40481 (= (+!163 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640)) (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!69567)))

(declare-fun b!133244 () Bool)

(declare-fun res!64105 () Bool)

(assert (=> b!133244 (=> (not res!64105) (not e!86823))))

(assert (=> b!133244 (= res!64105 (= (getValueByKey!170 (toList!851 lt!69567) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!133245 () Bool)

(assert (=> b!133245 (= e!86823 (contains!889 (toList!851 lt!69567) (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!40481 res!64106) b!133244))

(assert (= (and b!133244 res!64105) b!133245))

(declare-fun m!156857 () Bool)

(assert (=> d!40481 m!156857))

(declare-fun m!156859 () Bool)

(assert (=> d!40481 m!156859))

(declare-fun m!156861 () Bool)

(assert (=> d!40481 m!156861))

(declare-fun m!156863 () Bool)

(assert (=> d!40481 m!156863))

(declare-fun m!156865 () Bool)

(assert (=> b!133244 m!156865))

(declare-fun m!156867 () Bool)

(assert (=> b!133245 m!156867))

(assert (=> bm!14632 d!40481))

(assert (=> d!40399 d!40425))

(declare-fun b!133246 () Bool)

(declare-fun e!86827 () Bool)

(declare-fun e!86824 () Bool)

(assert (=> b!133246 (= e!86827 e!86824)))

(declare-fun res!64107 () Bool)

(assert (=> b!133246 (=> (not res!64107) (not e!86824))))

(declare-fun e!86825 () Bool)

(assert (=> b!133246 (= res!64107 (not e!86825))))

(declare-fun res!64109 () Bool)

(assert (=> b!133246 (=> (not res!64109) (not e!86825))))

(assert (=> b!133246 (= res!64109 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun c!24692 () Bool)

(declare-fun call!14693 () Bool)

(declare-fun bm!14690 () Bool)

(assert (=> bm!14690 (= call!14693 (arrayNoDuplicates!0 (_keys!4612 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24692 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708))))))

(declare-fun d!40483 () Bool)

(declare-fun res!64108 () Bool)

(assert (=> d!40483 (=> res!64108 e!86827)))

(assert (=> d!40483 (= res!64108 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40483 (= (arrayNoDuplicates!0 (_keys!4612 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) e!86827)))

(declare-fun b!133247 () Bool)

(declare-fun e!86826 () Bool)

(assert (=> b!133247 (= e!86826 call!14693)))

(declare-fun b!133248 () Bool)

(assert (=> b!133248 (= e!86825 (contains!888 (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708) (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133249 () Bool)

(assert (=> b!133249 (= e!86824 e!86826)))

(assert (=> b!133249 (= c!24692 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133250 () Bool)

(assert (=> b!133250 (= e!86826 call!14693)))

(assert (= (and d!40483 (not res!64108)) b!133246))

(assert (= (and b!133246 res!64109) b!133248))

(assert (= (and b!133246 res!64107) b!133249))

(assert (= (and b!133249 c!24692) b!133247))

(assert (= (and b!133249 (not c!24692)) b!133250))

(assert (= (or b!133247 b!133250) bm!14690))

(declare-fun m!156869 () Bool)

(assert (=> b!133246 m!156869))

(assert (=> b!133246 m!156869))

(declare-fun m!156871 () Bool)

(assert (=> b!133246 m!156871))

(assert (=> bm!14690 m!156869))

(declare-fun m!156873 () Bool)

(assert (=> bm!14690 m!156873))

(assert (=> b!133248 m!156869))

(assert (=> b!133248 m!156869))

(declare-fun m!156875 () Bool)

(assert (=> b!133248 m!156875))

(assert (=> b!133249 m!156869))

(assert (=> b!133249 m!156869))

(assert (=> b!133249 m!156871))

(assert (=> bm!14639 d!40483))

(assert (=> b!132912 d!40307))

(declare-fun d!40485 () Bool)

(assert (=> d!40485 (not (contains!886 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303)) lt!69304))))

(declare-fun lt!69571 () Unit!4132)

(declare-fun choose!835 (ListLongMap!1671 (_ BitVec 64) V!3481 (_ BitVec 64)) Unit!4132)

(assert (=> d!40485 (= lt!69571 (choose!835 lt!69299 lt!69302 lt!69303 lt!69304))))

(declare-fun e!86830 () Bool)

(assert (=> d!40485 e!86830))

(declare-fun res!64112 () Bool)

(assert (=> d!40485 (=> (not res!64112) (not e!86830))))

(assert (=> d!40485 (= res!64112 (not (contains!886 lt!69299 lt!69304)))))

(assert (=> d!40485 (= (addStillNotContains!62 lt!69299 lt!69302 lt!69303 lt!69304) lt!69571)))

(declare-fun b!133254 () Bool)

(assert (=> b!133254 (= e!86830 (not (= lt!69302 lt!69304)))))

(assert (= (and d!40485 res!64112) b!133254))

(assert (=> d!40485 m!156321))

(assert (=> d!40485 m!156321))

(assert (=> d!40485 m!156323))

(declare-fun m!156877 () Bool)

(assert (=> d!40485 m!156877))

(declare-fun m!156879 () Bool)

(assert (=> d!40485 m!156879))

(assert (=> b!132912 d!40485))

(declare-fun d!40487 () Bool)

(declare-fun e!86831 () Bool)

(assert (=> d!40487 e!86831))

(declare-fun res!64113 () Bool)

(assert (=> d!40487 (=> res!64113 e!86831)))

(declare-fun lt!69573 () Bool)

(assert (=> d!40487 (= res!64113 (not lt!69573))))

(declare-fun lt!69575 () Bool)

(assert (=> d!40487 (= lt!69573 lt!69575)))

(declare-fun lt!69572 () Unit!4132)

(declare-fun e!86832 () Unit!4132)

(assert (=> d!40487 (= lt!69572 e!86832)))

(declare-fun c!24693 () Bool)

(assert (=> d!40487 (= c!24693 lt!69575)))

(assert (=> d!40487 (= lt!69575 (containsKey!174 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))) lt!69304))))

(assert (=> d!40487 (= (contains!886 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303)) lt!69304) lt!69573)))

(declare-fun b!133255 () Bool)

(declare-fun lt!69574 () Unit!4132)

(assert (=> b!133255 (= e!86832 lt!69574)))

(assert (=> b!133255 (= lt!69574 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))) lt!69304))))

(assert (=> b!133255 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))) lt!69304))))

(declare-fun b!133256 () Bool)

(declare-fun Unit!4155 () Unit!4132)

(assert (=> b!133256 (= e!86832 Unit!4155)))

(declare-fun b!133257 () Bool)

(assert (=> b!133257 (= e!86831 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))) lt!69304)))))

(assert (= (and d!40487 c!24693) b!133255))

(assert (= (and d!40487 (not c!24693)) b!133256))

(assert (= (and d!40487 (not res!64113)) b!133257))

(declare-fun m!156881 () Bool)

(assert (=> d!40487 m!156881))

(declare-fun m!156883 () Bool)

(assert (=> b!133255 m!156883))

(declare-fun m!156885 () Bool)

(assert (=> b!133255 m!156885))

(assert (=> b!133255 m!156885))

(declare-fun m!156887 () Bool)

(assert (=> b!133255 m!156887))

(assert (=> b!133257 m!156885))

(assert (=> b!133257 m!156885))

(assert (=> b!133257 m!156887))

(assert (=> b!132912 d!40487))

(declare-fun d!40489 () Bool)

(declare-fun e!86833 () Bool)

(assert (=> d!40489 e!86833))

(declare-fun res!64115 () Bool)

(assert (=> d!40489 (=> (not res!64115) (not e!86833))))

(declare-fun lt!69578 () ListLongMap!1671)

(assert (=> d!40489 (= res!64115 (contains!886 lt!69578 (_1!1303 (tuple2!2585 lt!69302 lt!69303))))))

(declare-fun lt!69576 () List!1710)

(assert (=> d!40489 (= lt!69578 (ListLongMap!1672 lt!69576))))

(declare-fun lt!69579 () Unit!4132)

(declare-fun lt!69577 () Unit!4132)

(assert (=> d!40489 (= lt!69579 lt!69577)))

(assert (=> d!40489 (= (getValueByKey!170 lt!69576 (_1!1303 (tuple2!2585 lt!69302 lt!69303))) (Some!175 (_2!1303 (tuple2!2585 lt!69302 lt!69303))))))

(assert (=> d!40489 (= lt!69577 (lemmaContainsTupThenGetReturnValue!88 lt!69576 (_1!1303 (tuple2!2585 lt!69302 lt!69303)) (_2!1303 (tuple2!2585 lt!69302 lt!69303))))))

(assert (=> d!40489 (= lt!69576 (insertStrictlySorted!91 (toList!851 lt!69299) (_1!1303 (tuple2!2585 lt!69302 lt!69303)) (_2!1303 (tuple2!2585 lt!69302 lt!69303))))))

(assert (=> d!40489 (= (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303)) lt!69578)))

(declare-fun b!133258 () Bool)

(declare-fun res!64114 () Bool)

(assert (=> b!133258 (=> (not res!64114) (not e!86833))))

(assert (=> b!133258 (= res!64114 (= (getValueByKey!170 (toList!851 lt!69578) (_1!1303 (tuple2!2585 lt!69302 lt!69303))) (Some!175 (_2!1303 (tuple2!2585 lt!69302 lt!69303)))))))

(declare-fun b!133259 () Bool)

(assert (=> b!133259 (= e!86833 (contains!889 (toList!851 lt!69578) (tuple2!2585 lt!69302 lt!69303)))))

(assert (= (and d!40489 res!64115) b!133258))

(assert (= (and b!133258 res!64114) b!133259))

(declare-fun m!156889 () Bool)

(assert (=> d!40489 m!156889))

(declare-fun m!156891 () Bool)

(assert (=> d!40489 m!156891))

(declare-fun m!156893 () Bool)

(assert (=> d!40489 m!156893))

(declare-fun m!156895 () Bool)

(assert (=> d!40489 m!156895))

(declare-fun m!156897 () Bool)

(assert (=> b!133258 m!156897))

(declare-fun m!156899 () Bool)

(assert (=> b!133259 m!156899))

(assert (=> b!132912 d!40489))

(declare-fun d!40491 () Bool)

(declare-fun e!86834 () Bool)

(assert (=> d!40491 e!86834))

(declare-fun res!64117 () Bool)

(assert (=> d!40491 (=> (not res!64117) (not e!86834))))

(declare-fun lt!69582 () ListLongMap!1671)

(assert (=> d!40491 (= res!64117 (contains!886 lt!69582 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69580 () List!1710)

(assert (=> d!40491 (= lt!69582 (ListLongMap!1672 lt!69580))))

(declare-fun lt!69583 () Unit!4132)

(declare-fun lt!69581 () Unit!4132)

(assert (=> d!40491 (= lt!69583 lt!69581)))

(assert (=> d!40491 (= (getValueByKey!170 lt!69580 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40491 (= lt!69581 (lemmaContainsTupThenGetReturnValue!88 lt!69580 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40491 (= lt!69580 (insertStrictlySorted!91 (toList!851 call!14645) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40491 (= (+!163 call!14645 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69582)))

(declare-fun b!133260 () Bool)

(declare-fun res!64116 () Bool)

(assert (=> b!133260 (=> (not res!64116) (not e!86834))))

(assert (=> b!133260 (= res!64116 (= (getValueByKey!170 (toList!851 lt!69582) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133261 () Bool)

(assert (=> b!133261 (= e!86834 (contains!889 (toList!851 lt!69582) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40491 res!64117) b!133260))

(assert (= (and b!133260 res!64116) b!133261))

(declare-fun m!156901 () Bool)

(assert (=> d!40491 m!156901))

(declare-fun m!156903 () Bool)

(assert (=> d!40491 m!156903))

(declare-fun m!156905 () Bool)

(assert (=> d!40491 m!156905))

(declare-fun m!156907 () Bool)

(assert (=> d!40491 m!156907))

(declare-fun m!156909 () Bool)

(assert (=> b!133260 m!156909))

(declare-fun m!156911 () Bool)

(assert (=> b!133261 m!156911))

(assert (=> b!132912 d!40491))

(declare-fun b!133262 () Bool)

(declare-fun e!86835 () (_ BitVec 32))

(declare-fun e!86836 () (_ BitVec 32))

(assert (=> b!133262 (= e!86835 e!86836)))

(declare-fun c!24695 () Bool)

(assert (=> b!133262 (= c!24695 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(declare-fun b!133263 () Bool)

(declare-fun call!14694 () (_ BitVec 32))

(assert (=> b!133263 (= e!86836 (bvadd #b00000000000000000000000000000001 call!14694))))

(declare-fun d!40493 () Bool)

(declare-fun lt!69584 () (_ BitVec 32))

(assert (=> d!40493 (and (bvsge lt!69584 #b00000000000000000000000000000000) (bvsle lt!69584 (bvsub (size!2518 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(assert (=> d!40493 (= lt!69584 e!86835)))

(declare-fun c!24694 () Bool)

(assert (=> d!40493 (= c!24694 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(assert (=> d!40493 (and (bvsle #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2518 (_keys!4612 (_2!1304 lt!69115))) (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(assert (=> d!40493 (= (arrayCountValidKeys!0 (_keys!4612 (_2!1304 lt!69115)) #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))) lt!69584)))

(declare-fun b!133264 () Bool)

(assert (=> b!133264 (= e!86836 call!14694)))

(declare-fun b!133265 () Bool)

(assert (=> b!133265 (= e!86835 #b00000000000000000000000000000000)))

(declare-fun bm!14691 () Bool)

(assert (=> bm!14691 (= call!14694 (arrayCountValidKeys!0 (_keys!4612 (_2!1304 lt!69115)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(assert (= (and d!40493 c!24694) b!133265))

(assert (= (and d!40493 (not c!24694)) b!133262))

(assert (= (and b!133262 c!24695) b!133263))

(assert (= (and b!133262 (not c!24695)) b!133264))

(assert (= (or b!133263 b!133264) bm!14691))

(declare-fun m!156913 () Bool)

(assert (=> b!133262 m!156913))

(assert (=> b!133262 m!156913))

(declare-fun m!156915 () Bool)

(assert (=> b!133262 m!156915))

(declare-fun m!156917 () Bool)

(assert (=> bm!14691 m!156917))

(assert (=> b!132991 d!40493))

(declare-fun d!40495 () Bool)

(assert (=> d!40495 (= (apply!116 lt!69484 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (getValueByKey!170 (toList!851 lt!69484) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5496 () Bool)

(assert (= bs!5496 d!40495))

(assert (=> bs!5496 m!156125))

(declare-fun m!156919 () Bool)

(assert (=> bs!5496 m!156919))

(assert (=> bs!5496 m!156919))

(declare-fun m!156921 () Bool)

(assert (=> bs!5496 m!156921))

(assert (=> b!133052 d!40495))

(declare-fun d!40497 () Bool)

(declare-fun c!24696 () Bool)

(assert (=> d!40497 (= c!24696 ((_ is ValueCellFull!1094) (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!86837 () V!3481)

(assert (=> d!40497 (= (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!86837)))

(declare-fun b!133266 () Bool)

(assert (=> b!133266 (= e!86837 (get!1480 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133267 () Bool)

(assert (=> b!133267 (= e!86837 (get!1481 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40497 c!24696) b!133266))

(assert (= (and d!40497 (not c!24696)) b!133267))

(assert (=> b!133266 m!156473))

(assert (=> b!133266 m!156135))

(declare-fun m!156923 () Bool)

(assert (=> b!133266 m!156923))

(assert (=> b!133267 m!156473))

(assert (=> b!133267 m!156135))

(declare-fun m!156925 () Bool)

(assert (=> b!133267 m!156925))

(assert (=> b!133052 d!40497))

(declare-fun lt!69585 () Bool)

(declare-fun d!40499 () Bool)

(assert (=> d!40499 (= lt!69585 (select (content!133 (toList!851 lt!69335)) (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun e!86839 () Bool)

(assert (=> d!40499 (= lt!69585 e!86839)))

(declare-fun res!64118 () Bool)

(assert (=> d!40499 (=> (not res!64118) (not e!86839))))

(assert (=> d!40499 (= res!64118 ((_ is Cons!1706) (toList!851 lt!69335)))))

(assert (=> d!40499 (= (contains!889 (toList!851 lt!69335) (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69585)))

(declare-fun b!133268 () Bool)

(declare-fun e!86838 () Bool)

(assert (=> b!133268 (= e!86839 e!86838)))

(declare-fun res!64119 () Bool)

(assert (=> b!133268 (=> res!64119 e!86838)))

(assert (=> b!133268 (= res!64119 (= (h!2311 (toList!851 lt!69335)) (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!133269 () Bool)

(assert (=> b!133269 (= e!86838 (contains!889 (t!6152 (toList!851 lt!69335)) (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!40499 res!64118) b!133268))

(assert (= (and b!133268 (not res!64119)) b!133269))

(declare-fun m!156927 () Bool)

(assert (=> d!40499 m!156927))

(declare-fun m!156929 () Bool)

(assert (=> d!40499 m!156929))

(declare-fun m!156931 () Bool)

(assert (=> b!133269 m!156931))

(assert (=> b!132955 d!40499))

(declare-fun d!40501 () Bool)

(assert (=> d!40501 (= (apply!116 lt!69362 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69362) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5497 () Bool)

(assert (= bs!5497 d!40501))

(declare-fun m!156933 () Bool)

(assert (=> bs!5497 m!156933))

(assert (=> bs!5497 m!156933))

(declare-fun m!156935 () Bool)

(assert (=> bs!5497 m!156935))

(assert (=> b!132982 d!40501))

(declare-fun b!133282 () Bool)

(declare-fun e!86848 () SeekEntryResult!278)

(assert (=> b!133282 (= e!86848 Undefined!278)))

(declare-fun b!133283 () Bool)

(declare-fun e!86847 () SeekEntryResult!278)

(assert (=> b!133283 (= e!86847 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15594 lt!69316) #b00000000000000000000000000000001) (nextIndex!0 (index!3274 lt!69316) (x!15594 lt!69316) (mask!7163 newMap!16)) (index!3274 lt!69316) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(declare-fun b!133284 () Bool)

(declare-fun e!86846 () SeekEntryResult!278)

(assert (=> b!133284 (= e!86846 (Found!278 (index!3274 lt!69316)))))

(declare-fun d!40503 () Bool)

(declare-fun lt!69590 () SeekEntryResult!278)

(assert (=> d!40503 (and (or ((_ is Undefined!278) lt!69590) (not ((_ is Found!278) lt!69590)) (and (bvsge (index!3273 lt!69590) #b00000000000000000000000000000000) (bvslt (index!3273 lt!69590) (size!2518 (_keys!4612 newMap!16))))) (or ((_ is Undefined!278) lt!69590) ((_ is Found!278) lt!69590) (not ((_ is MissingVacant!278) lt!69590)) (not (= (index!3275 lt!69590) (index!3274 lt!69316))) (and (bvsge (index!3275 lt!69590) #b00000000000000000000000000000000) (bvslt (index!3275 lt!69590) (size!2518 (_keys!4612 newMap!16))))) (or ((_ is Undefined!278) lt!69590) (ite ((_ is Found!278) lt!69590) (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69590)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (and ((_ is MissingVacant!278) lt!69590) (= (index!3275 lt!69590) (index!3274 lt!69316)) (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3275 lt!69590)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!40503 (= lt!69590 e!86848)))

(declare-fun c!24705 () Bool)

(assert (=> d!40503 (= c!24705 (bvsge (x!15594 lt!69316) #b01111111111111111111111111111110))))

(declare-fun lt!69591 () (_ BitVec 64))

(assert (=> d!40503 (= lt!69591 (select (arr!2248 (_keys!4612 newMap!16)) (index!3274 lt!69316)))))

(assert (=> d!40503 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40503 (= (seekKeyOrZeroReturnVacant!0 (x!15594 lt!69316) (index!3274 lt!69316) (index!3274 lt!69316) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)) lt!69590)))

(declare-fun b!133285 () Bool)

(declare-fun c!24704 () Bool)

(assert (=> b!133285 (= c!24704 (= lt!69591 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133285 (= e!86846 e!86847)))

(declare-fun b!133286 () Bool)

(assert (=> b!133286 (= e!86847 (MissingVacant!278 (index!3274 lt!69316)))))

(declare-fun b!133287 () Bool)

(assert (=> b!133287 (= e!86848 e!86846)))

(declare-fun c!24703 () Bool)

(assert (=> b!133287 (= c!24703 (= lt!69591 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!40503 c!24705) b!133282))

(assert (= (and d!40503 (not c!24705)) b!133287))

(assert (= (and b!133287 c!24703) b!133284))

(assert (= (and b!133287 (not c!24703)) b!133285))

(assert (= (and b!133285 c!24704) b!133286))

(assert (= (and b!133285 (not c!24704)) b!133283))

(declare-fun m!156937 () Bool)

(assert (=> b!133283 m!156937))

(assert (=> b!133283 m!156937))

(assert (=> b!133283 m!155841))

(declare-fun m!156939 () Bool)

(assert (=> b!133283 m!156939))

(declare-fun m!156941 () Bool)

(assert (=> d!40503 m!156941))

(declare-fun m!156943 () Bool)

(assert (=> d!40503 m!156943))

(assert (=> d!40503 m!156359))

(assert (=> d!40503 m!156183))

(assert (=> b!132940 d!40503))

(assert (=> bm!14680 d!40387))

(declare-fun d!40505 () Bool)

(declare-fun e!86849 () Bool)

(assert (=> d!40505 e!86849))

(declare-fun res!64120 () Bool)

(assert (=> d!40505 (=> res!64120 e!86849)))

(declare-fun lt!69593 () Bool)

(assert (=> d!40505 (= res!64120 (not lt!69593))))

(declare-fun lt!69595 () Bool)

(assert (=> d!40505 (= lt!69593 lt!69595)))

(declare-fun lt!69592 () Unit!4132)

(declare-fun e!86850 () Unit!4132)

(assert (=> d!40505 (= lt!69592 e!86850)))

(declare-fun c!24706 () Bool)

(assert (=> d!40505 (= c!24706 lt!69595)))

(assert (=> d!40505 (= lt!69595 (containsKey!174 (toList!851 lt!69301) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40505 (= (contains!886 lt!69301 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69593)))

(declare-fun b!133288 () Bool)

(declare-fun lt!69594 () Unit!4132)

(assert (=> b!133288 (= e!86850 lt!69594)))

(assert (=> b!133288 (= lt!69594 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69301) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133288 (isDefined!124 (getValueByKey!170 (toList!851 lt!69301) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133289 () Bool)

(declare-fun Unit!4156 () Unit!4132)

(assert (=> b!133289 (= e!86850 Unit!4156)))

(declare-fun b!133290 () Bool)

(assert (=> b!133290 (= e!86849 (isDefined!124 (getValueByKey!170 (toList!851 lt!69301) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40505 c!24706) b!133288))

(assert (= (and d!40505 (not c!24706)) b!133289))

(assert (= (and d!40505 (not res!64120)) b!133290))

(declare-fun m!156945 () Bool)

(assert (=> d!40505 m!156945))

(declare-fun m!156947 () Bool)

(assert (=> b!133288 m!156947))

(declare-fun m!156949 () Bool)

(assert (=> b!133288 m!156949))

(assert (=> b!133288 m!156949))

(declare-fun m!156951 () Bool)

(assert (=> b!133288 m!156951))

(assert (=> b!133290 m!156949))

(assert (=> b!133290 m!156949))

(assert (=> b!133290 m!156951))

(assert (=> d!40341 d!40505))

(assert (=> d!40341 d!40269))

(declare-fun lt!69596 () Bool)

(declare-fun d!40507 () Bool)

(assert (=> d!40507 (= lt!69596 (select (content!133 (toList!851 lt!69331)) (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun e!86852 () Bool)

(assert (=> d!40507 (= lt!69596 e!86852)))

(declare-fun res!64121 () Bool)

(assert (=> d!40507 (=> (not res!64121) (not e!86852))))

(assert (=> d!40507 (= res!64121 ((_ is Cons!1706) (toList!851 lt!69331)))))

(assert (=> d!40507 (= (contains!889 (toList!851 lt!69331) (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69596)))

(declare-fun b!133291 () Bool)

(declare-fun e!86851 () Bool)

(assert (=> b!133291 (= e!86852 e!86851)))

(declare-fun res!64122 () Bool)

(assert (=> b!133291 (=> res!64122 e!86851)))

(assert (=> b!133291 (= res!64122 (= (h!2311 (toList!851 lt!69331)) (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!133292 () Bool)

(assert (=> b!133292 (= e!86851 (contains!889 (t!6152 (toList!851 lt!69331)) (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!40507 res!64121) b!133291))

(assert (= (and b!133291 (not res!64122)) b!133292))

(declare-fun m!156953 () Bool)

(assert (=> d!40507 m!156953))

(declare-fun m!156955 () Bool)

(assert (=> d!40507 m!156955))

(declare-fun m!156957 () Bool)

(assert (=> b!133292 m!156957))

(assert (=> b!132953 d!40507))

(declare-fun d!40509 () Bool)

(assert (=> d!40509 (= (get!1482 (getValueByKey!170 (toList!851 lt!69172) lt!69177)) (v!3198 (getValueByKey!170 (toList!851 lt!69172) lt!69177)))))

(assert (=> d!40361 d!40509))

(declare-fun d!40511 () Bool)

(declare-fun c!24707 () Bool)

(assert (=> d!40511 (= c!24707 (and ((_ is Cons!1706) (toList!851 lt!69172)) (= (_1!1303 (h!2311 (toList!851 lt!69172))) lt!69177)))))

(declare-fun e!86853 () Option!176)

(assert (=> d!40511 (= (getValueByKey!170 (toList!851 lt!69172) lt!69177) e!86853)))

(declare-fun b!133295 () Bool)

(declare-fun e!86854 () Option!176)

(assert (=> b!133295 (= e!86854 (getValueByKey!170 (t!6152 (toList!851 lt!69172)) lt!69177))))

(declare-fun b!133294 () Bool)

(assert (=> b!133294 (= e!86853 e!86854)))

(declare-fun c!24708 () Bool)

(assert (=> b!133294 (= c!24708 (and ((_ is Cons!1706) (toList!851 lt!69172)) (not (= (_1!1303 (h!2311 (toList!851 lt!69172))) lt!69177))))))

(declare-fun b!133293 () Bool)

(assert (=> b!133293 (= e!86853 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69172)))))))

(declare-fun b!133296 () Bool)

(assert (=> b!133296 (= e!86854 None!174)))

(assert (= (and d!40511 c!24707) b!133293))

(assert (= (and d!40511 (not c!24707)) b!133294))

(assert (= (and b!133294 c!24708) b!133295))

(assert (= (and b!133294 (not c!24708)) b!133296))

(declare-fun m!156959 () Bool)

(assert (=> b!133295 m!156959))

(assert (=> d!40361 d!40511))

(declare-fun d!40513 () Bool)

(assert (=> d!40513 (= (inRange!0 (ite c!24635 (index!3273 lt!69462) (ite c!24633 (index!3272 lt!69459) (index!3275 lt!69459))) (mask!7163 newMap!16)) (and (bvsge (ite c!24635 (index!3273 lt!69462) (ite c!24633 (index!3272 lt!69459) (index!3275 lt!69459))) #b00000000000000000000000000000000) (bvslt (ite c!24635 (index!3273 lt!69462) (ite c!24633 (index!3272 lt!69459) (index!3275 lt!69459))) (bvadd (mask!7163 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14663 d!40513))

(declare-fun d!40515 () Bool)

(assert (=> d!40515 (= (size!2524 newMap!16) (bvadd (_size!597 newMap!16) (bvsdiv (bvadd (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!133120 d!40515))

(declare-fun d!40517 () Bool)

(declare-fun res!64126 () Bool)

(declare-fun e!86855 () Bool)

(assert (=> d!40517 (=> (not res!64126) (not e!86855))))

(assert (=> d!40517 (= res!64126 (validMask!0 (mask!7163 (_2!1304 lt!69115))))))

(assert (=> d!40517 (= (simpleValid!92 (_2!1304 lt!69115)) e!86855)))

(declare-fun b!133297 () Bool)

(declare-fun res!64123 () Bool)

(assert (=> b!133297 (=> (not res!64123) (not e!86855))))

(assert (=> b!133297 (= res!64123 (and (= (size!2519 (_values!2847 (_2!1304 lt!69115))) (bvadd (mask!7163 (_2!1304 lt!69115)) #b00000000000000000000000000000001)) (= (size!2518 (_keys!4612 (_2!1304 lt!69115))) (size!2519 (_values!2847 (_2!1304 lt!69115)))) (bvsge (_size!597 (_2!1304 lt!69115)) #b00000000000000000000000000000000) (bvsle (_size!597 (_2!1304 lt!69115)) (bvadd (mask!7163 (_2!1304 lt!69115)) #b00000000000000000000000000000001))))))

(declare-fun b!133299 () Bool)

(declare-fun res!64125 () Bool)

(assert (=> b!133299 (=> (not res!64125) (not e!86855))))

(assert (=> b!133299 (= res!64125 (= (size!2524 (_2!1304 lt!69115)) (bvadd (_size!597 (_2!1304 lt!69115)) (bvsdiv (bvadd (extraKeys!2629 (_2!1304 lt!69115)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!133298 () Bool)

(declare-fun res!64124 () Bool)

(assert (=> b!133298 (=> (not res!64124) (not e!86855))))

(assert (=> b!133298 (= res!64124 (bvsge (size!2524 (_2!1304 lt!69115)) (_size!597 (_2!1304 lt!69115))))))

(declare-fun b!133300 () Bool)

(assert (=> b!133300 (= e!86855 (and (bvsge (extraKeys!2629 (_2!1304 lt!69115)) #b00000000000000000000000000000000) (bvsle (extraKeys!2629 (_2!1304 lt!69115)) #b00000000000000000000000000000011) (bvsge (_vacant!597 (_2!1304 lt!69115)) #b00000000000000000000000000000000)))))

(assert (= (and d!40517 res!64126) b!133297))

(assert (= (and b!133297 res!64123) b!133298))

(assert (= (and b!133298 res!64124) b!133299))

(assert (= (and b!133299 res!64125) b!133300))

(declare-fun m!156961 () Bool)

(assert (=> d!40517 m!156961))

(declare-fun m!156963 () Bool)

(assert (=> b!133299 m!156963))

(assert (=> b!133298 m!156963))

(assert (=> d!40389 d!40517))

(declare-fun d!40519 () Bool)

(assert (=> d!40519 (= (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133049 d!40519))

(declare-fun d!40521 () Bool)

(declare-fun e!86856 () Bool)

(assert (=> d!40521 e!86856))

(declare-fun res!64127 () Bool)

(assert (=> d!40521 (=> res!64127 e!86856)))

(declare-fun lt!69598 () Bool)

(assert (=> d!40521 (= res!64127 (not lt!69598))))

(declare-fun lt!69600 () Bool)

(assert (=> d!40521 (= lt!69598 lt!69600)))

(declare-fun lt!69597 () Unit!4132)

(declare-fun e!86857 () Unit!4132)

(assert (=> d!40521 (= lt!69597 e!86857)))

(declare-fun c!24709 () Bool)

(assert (=> d!40521 (= c!24709 lt!69600)))

(assert (=> d!40521 (= lt!69600 (containsKey!174 (toList!851 lt!69484) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40521 (= (contains!886 lt!69484 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69598)))

(declare-fun b!133301 () Bool)

(declare-fun lt!69599 () Unit!4132)

(assert (=> b!133301 (= e!86857 lt!69599)))

(assert (=> b!133301 (= lt!69599 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69484) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133301 (isDefined!124 (getValueByKey!170 (toList!851 lt!69484) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133302 () Bool)

(declare-fun Unit!4157 () Unit!4132)

(assert (=> b!133302 (= e!86857 Unit!4157)))

(declare-fun b!133303 () Bool)

(assert (=> b!133303 (= e!86856 (isDefined!124 (getValueByKey!170 (toList!851 lt!69484) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40521 c!24709) b!133301))

(assert (= (and d!40521 (not c!24709)) b!133302))

(assert (= (and d!40521 (not res!64127)) b!133303))

(declare-fun m!156965 () Bool)

(assert (=> d!40521 m!156965))

(declare-fun m!156967 () Bool)

(assert (=> b!133301 m!156967))

(declare-fun m!156969 () Bool)

(assert (=> b!133301 m!156969))

(assert (=> b!133301 m!156969))

(declare-fun m!156971 () Bool)

(assert (=> b!133301 m!156971))

(assert (=> b!133303 m!156969))

(assert (=> b!133303 m!156969))

(assert (=> b!133303 m!156971))

(assert (=> bm!14672 d!40521))

(assert (=> d!40419 d!40425))

(declare-fun c!24710 () Bool)

(declare-fun d!40523 () Bool)

(assert (=> d!40523 (= c!24710 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69005))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69005)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun e!86858 () Option!176)

(assert (=> d!40523 (= (getValueByKey!170 (t!6152 (toList!851 lt!69005)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!86858)))

(declare-fun e!86859 () Option!176)

(declare-fun b!133306 () Bool)

(assert (=> b!133306 (= e!86859 (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69005))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!133305 () Bool)

(assert (=> b!133305 (= e!86858 e!86859)))

(declare-fun c!24711 () Bool)

(assert (=> b!133305 (= c!24711 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69005))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69005)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(declare-fun b!133304 () Bool)

(assert (=> b!133304 (= e!86858 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 lt!69005))))))))

(declare-fun b!133307 () Bool)

(assert (=> b!133307 (= e!86859 None!174)))

(assert (= (and d!40523 c!24710) b!133304))

(assert (= (and d!40523 (not c!24710)) b!133305))

(assert (= (and b!133305 c!24711) b!133306))

(assert (= (and b!133305 (not c!24711)) b!133307))

(assert (=> b!133306 m!155841))

(declare-fun m!156973 () Bool)

(assert (=> b!133306 m!156973))

(assert (=> b!132877 d!40523))

(declare-fun d!40525 () Bool)

(assert (=> d!40525 (= (isDefined!124 (getValueByKey!170 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) (not (isEmpty!413 (getValueByKey!170 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(declare-fun bs!5498 () Bool)

(assert (= bs!5498 d!40525))

(assert (=> bs!5498 m!156189))

(declare-fun m!156975 () Bool)

(assert (=> bs!5498 m!156975))

(assert (=> b!132790 d!40525))

(declare-fun c!24712 () Bool)

(declare-fun d!40527 () Bool)

(assert (=> d!40527 (= c!24712 (and ((_ is Cons!1706) (toList!851 call!14583)) (= (_1!1303 (h!2311 (toList!851 call!14583))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun e!86860 () Option!176)

(assert (=> d!40527 (= (getValueByKey!170 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!86860)))

(declare-fun b!133310 () Bool)

(declare-fun e!86861 () Option!176)

(assert (=> b!133310 (= e!86861 (getValueByKey!170 (t!6152 (toList!851 call!14583)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!133309 () Bool)

(assert (=> b!133309 (= e!86860 e!86861)))

(declare-fun c!24713 () Bool)

(assert (=> b!133309 (= c!24713 (and ((_ is Cons!1706) (toList!851 call!14583)) (not (= (_1!1303 (h!2311 (toList!851 call!14583))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(declare-fun b!133308 () Bool)

(assert (=> b!133308 (= e!86860 (Some!175 (_2!1303 (h!2311 (toList!851 call!14583)))))))

(declare-fun b!133311 () Bool)

(assert (=> b!133311 (= e!86861 None!174)))

(assert (= (and d!40527 c!24712) b!133308))

(assert (= (and d!40527 (not c!24712)) b!133309))

(assert (= (and b!133309 c!24713) b!133310))

(assert (= (and b!133309 (not c!24713)) b!133311))

(assert (=> b!133310 m!155841))

(declare-fun m!156977 () Bool)

(assert (=> b!133310 m!156977))

(assert (=> b!132790 d!40527))

(declare-fun d!40529 () Bool)

(declare-fun e!86862 () Bool)

(assert (=> d!40529 e!86862))

(declare-fun res!64128 () Bool)

(assert (=> d!40529 (=> res!64128 e!86862)))

(declare-fun lt!69602 () Bool)

(assert (=> d!40529 (= res!64128 (not lt!69602))))

(declare-fun lt!69604 () Bool)

(assert (=> d!40529 (= lt!69602 lt!69604)))

(declare-fun lt!69601 () Unit!4132)

(declare-fun e!86863 () Unit!4132)

(assert (=> d!40529 (= lt!69601 e!86863)))

(declare-fun c!24714 () Bool)

(assert (=> d!40529 (= c!24714 lt!69604)))

(assert (=> d!40529 (= lt!69604 (containsKey!174 (toList!851 lt!69335) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40529 (= (contains!886 lt!69335 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69602)))

(declare-fun b!133312 () Bool)

(declare-fun lt!69603 () Unit!4132)

(assert (=> b!133312 (= e!86863 lt!69603)))

(assert (=> b!133312 (= lt!69603 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69335) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> b!133312 (isDefined!124 (getValueByKey!170 (toList!851 lt!69335) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133313 () Bool)

(declare-fun Unit!4158 () Unit!4132)

(assert (=> b!133313 (= e!86863 Unit!4158)))

(declare-fun b!133314 () Bool)

(assert (=> b!133314 (= e!86862 (isDefined!124 (getValueByKey!170 (toList!851 lt!69335) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!40529 c!24714) b!133312))

(assert (= (and d!40529 (not c!24714)) b!133313))

(assert (= (and d!40529 (not res!64128)) b!133314))

(declare-fun m!156979 () Bool)

(assert (=> d!40529 m!156979))

(declare-fun m!156981 () Bool)

(assert (=> b!133312 m!156981))

(assert (=> b!133312 m!156439))

(assert (=> b!133312 m!156439))

(declare-fun m!156983 () Bool)

(assert (=> b!133312 m!156983))

(assert (=> b!133314 m!156439))

(assert (=> b!133314 m!156439))

(assert (=> b!133314 m!156983))

(assert (=> d!40371 d!40529))

(declare-fun d!40531 () Bool)

(declare-fun c!24715 () Bool)

(assert (=> d!40531 (= c!24715 (and ((_ is Cons!1706) lt!69333) (= (_1!1303 (h!2311 lt!69333)) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!86864 () Option!176)

(assert (=> d!40531 (= (getValueByKey!170 lt!69333 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!86864)))

(declare-fun b!133317 () Bool)

(declare-fun e!86865 () Option!176)

(assert (=> b!133317 (= e!86865 (getValueByKey!170 (t!6152 lt!69333) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133316 () Bool)

(assert (=> b!133316 (= e!86864 e!86865)))

(declare-fun c!24716 () Bool)

(assert (=> b!133316 (= c!24716 (and ((_ is Cons!1706) lt!69333) (not (= (_1!1303 (h!2311 lt!69333)) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!133315 () Bool)

(assert (=> b!133315 (= e!86864 (Some!175 (_2!1303 (h!2311 lt!69333))))))

(declare-fun b!133318 () Bool)

(assert (=> b!133318 (= e!86865 None!174)))

(assert (= (and d!40531 c!24715) b!133315))

(assert (= (and d!40531 (not c!24715)) b!133316))

(assert (= (and b!133316 c!24716) b!133317))

(assert (= (and b!133316 (not c!24716)) b!133318))

(declare-fun m!156985 () Bool)

(assert (=> b!133317 m!156985))

(assert (=> d!40371 d!40531))

(declare-fun d!40533 () Bool)

(assert (=> d!40533 (= (getValueByKey!170 lt!69333 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun lt!69605 () Unit!4132)

(assert (=> d!40533 (= lt!69605 (choose!834 lt!69333 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun e!86866 () Bool)

(assert (=> d!40533 e!86866))

(declare-fun res!64129 () Bool)

(assert (=> d!40533 (=> (not res!64129) (not e!86866))))

(assert (=> d!40533 (= res!64129 (isStrictlySorted!317 lt!69333))))

(assert (=> d!40533 (= (lemmaContainsTupThenGetReturnValue!88 lt!69333 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69605)))

(declare-fun b!133319 () Bool)

(declare-fun res!64130 () Bool)

(assert (=> b!133319 (=> (not res!64130) (not e!86866))))

(assert (=> b!133319 (= res!64130 (containsKey!174 lt!69333 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133320 () Bool)

(assert (=> b!133320 (= e!86866 (contains!889 lt!69333 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!40533 res!64129) b!133319))

(assert (= (and b!133319 res!64130) b!133320))

(assert (=> d!40533 m!156433))

(declare-fun m!156987 () Bool)

(assert (=> d!40533 m!156987))

(declare-fun m!156989 () Bool)

(assert (=> d!40533 m!156989))

(declare-fun m!156991 () Bool)

(assert (=> b!133319 m!156991))

(declare-fun m!156993 () Bool)

(assert (=> b!133320 m!156993))

(assert (=> d!40371 d!40533))

(declare-fun b!133321 () Bool)

(declare-fun e!86871 () List!1710)

(assert (=> b!133321 (= e!86871 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69176)) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133322 () Bool)

(declare-fun e!86870 () List!1710)

(declare-fun call!14697 () List!1710)

(assert (=> b!133322 (= e!86870 call!14697)))

(declare-fun b!133323 () Bool)

(declare-fun res!64132 () Bool)

(declare-fun e!86868 () Bool)

(assert (=> b!133323 (=> (not res!64132) (not e!86868))))

(declare-fun lt!69606 () List!1710)

(assert (=> b!133323 (= res!64132 (containsKey!174 lt!69606 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun bm!14692 () Bool)

(declare-fun c!24718 () Bool)

(assert (=> bm!14692 (= call!14697 ($colon$colon!91 e!86871 (ite c!24718 (h!2311 (toList!851 lt!69176)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun c!24719 () Bool)

(assert (=> bm!14692 (= c!24719 c!24718)))

(declare-fun b!133324 () Bool)

(declare-fun c!24717 () Bool)

(declare-fun c!24720 () Bool)

(assert (=> b!133324 (= e!86871 (ite c!24717 (t!6152 (toList!851 lt!69176)) (ite c!24720 (Cons!1706 (h!2311 (toList!851 lt!69176)) (t!6152 (toList!851 lt!69176))) Nil!1707)))))

(declare-fun d!40535 () Bool)

(assert (=> d!40535 e!86868))

(declare-fun res!64131 () Bool)

(assert (=> d!40535 (=> (not res!64131) (not e!86868))))

(assert (=> d!40535 (= res!64131 (isStrictlySorted!317 lt!69606))))

(assert (=> d!40535 (= lt!69606 e!86870)))

(assert (=> d!40535 (= c!24718 (and ((_ is Cons!1706) (toList!851 lt!69176)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69176))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!40535 (isStrictlySorted!317 (toList!851 lt!69176))))

(assert (=> d!40535 (= (insertStrictlySorted!91 (toList!851 lt!69176) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69606)))

(declare-fun b!133325 () Bool)

(declare-fun e!86867 () List!1710)

(assert (=> b!133325 (= e!86870 e!86867)))

(assert (=> b!133325 (= c!24717 (and ((_ is Cons!1706) (toList!851 lt!69176)) (= (_1!1303 (h!2311 (toList!851 lt!69176))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!133326 () Bool)

(declare-fun e!86869 () List!1710)

(declare-fun call!14695 () List!1710)

(assert (=> b!133326 (= e!86869 call!14695)))

(declare-fun b!133327 () Bool)

(declare-fun call!14696 () List!1710)

(assert (=> b!133327 (= e!86867 call!14696)))

(declare-fun b!133328 () Bool)

(assert (=> b!133328 (= e!86868 (contains!889 lt!69606 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun bm!14693 () Bool)

(assert (=> bm!14693 (= call!14696 call!14697)))

(declare-fun bm!14694 () Bool)

(assert (=> bm!14694 (= call!14695 call!14696)))

(declare-fun b!133329 () Bool)

(assert (=> b!133329 (= c!24720 (and ((_ is Cons!1706) (toList!851 lt!69176)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69176))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> b!133329 (= e!86867 e!86869)))

(declare-fun b!133330 () Bool)

(assert (=> b!133330 (= e!86869 call!14695)))

(assert (= (and d!40535 c!24718) b!133322))

(assert (= (and d!40535 (not c!24718)) b!133325))

(assert (= (and b!133325 c!24717) b!133327))

(assert (= (and b!133325 (not c!24717)) b!133329))

(assert (= (and b!133329 c!24720) b!133330))

(assert (= (and b!133329 (not c!24720)) b!133326))

(assert (= (or b!133330 b!133326) bm!14694))

(assert (= (or b!133327 bm!14694) bm!14693))

(assert (= (or b!133322 bm!14693) bm!14692))

(assert (= (and bm!14692 c!24719) b!133321))

(assert (= (and bm!14692 (not c!24719)) b!133324))

(assert (= (and d!40535 res!64131) b!133323))

(assert (= (and b!133323 res!64132) b!133328))

(declare-fun m!156995 () Bool)

(assert (=> b!133328 m!156995))

(declare-fun m!156997 () Bool)

(assert (=> b!133323 m!156997))

(declare-fun m!156999 () Bool)

(assert (=> b!133321 m!156999))

(declare-fun m!157001 () Bool)

(assert (=> d!40535 m!157001))

(declare-fun m!157003 () Bool)

(assert (=> d!40535 m!157003))

(declare-fun m!157005 () Bool)

(assert (=> bm!14692 m!157005))

(assert (=> d!40371 d!40535))

(declare-fun b!133331 () Bool)

(assert (=> b!133331 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> b!133331 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (_values!2847 newMap!16))))))

(declare-fun e!86872 () Bool)

(declare-fun lt!69609 () ListLongMap!1671)

(assert (=> b!133331 (= e!86872 (= (apply!116 lt!69609 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!14695 () Bool)

(declare-fun call!14698 () ListLongMap!1671)

(assert (=> bm!14695 (= call!14698 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!133332 () Bool)

(declare-fun e!86875 () ListLongMap!1671)

(assert (=> b!133332 (= e!86875 call!14698)))

(declare-fun b!133333 () Bool)

(declare-fun e!86877 () Bool)

(declare-fun e!86874 () Bool)

(assert (=> b!133333 (= e!86877 e!86874)))

(declare-fun c!24724 () Bool)

(assert (=> b!133333 (= c!24724 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133334 () Bool)

(assert (=> b!133334 (= e!86874 (isEmpty!414 lt!69609))))

(declare-fun b!133335 () Bool)

(declare-fun e!86878 () Bool)

(assert (=> b!133335 (= e!86878 e!86877)))

(declare-fun c!24721 () Bool)

(declare-fun e!86873 () Bool)

(assert (=> b!133335 (= c!24721 e!86873)))

(declare-fun res!64135 () Bool)

(assert (=> b!133335 (=> (not res!64135) (not e!86873))))

(assert (=> b!133335 (= res!64135 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133336 () Bool)

(assert (=> b!133336 (= e!86873 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133336 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!133337 () Bool)

(declare-fun lt!69608 () Unit!4132)

(declare-fun lt!69613 () Unit!4132)

(assert (=> b!133337 (= lt!69608 lt!69613)))

(declare-fun lt!69610 () (_ BitVec 64))

(declare-fun lt!69611 () V!3481)

(declare-fun lt!69607 () ListLongMap!1671)

(declare-fun lt!69612 () (_ BitVec 64))

(assert (=> b!133337 (not (contains!886 (+!163 lt!69607 (tuple2!2585 lt!69610 lt!69611)) lt!69612))))

(assert (=> b!133337 (= lt!69613 (addStillNotContains!62 lt!69607 lt!69610 lt!69611 lt!69612))))

(assert (=> b!133337 (= lt!69612 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133337 (= lt!69611 (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133337 (= lt!69610 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133337 (= lt!69607 call!14698)))

(assert (=> b!133337 (= e!86875 (+!163 call!14698 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133338 () Bool)

(declare-fun e!86876 () ListLongMap!1671)

(assert (=> b!133338 (= e!86876 e!86875)))

(declare-fun c!24722 () Bool)

(assert (=> b!133338 (= c!24722 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133339 () Bool)

(assert (=> b!133339 (= e!86876 (ListLongMap!1672 Nil!1707))))

(declare-fun d!40537 () Bool)

(assert (=> d!40537 e!86878))

(declare-fun res!64134 () Bool)

(assert (=> d!40537 (=> (not res!64134) (not e!86878))))

(assert (=> d!40537 (= res!64134 (not (contains!886 lt!69609 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40537 (= lt!69609 e!86876)))

(declare-fun c!24723 () Bool)

(assert (=> d!40537 (= c!24723 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40537 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40537 (= (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69609)))

(declare-fun b!133340 () Bool)

(assert (=> b!133340 (= e!86874 (= lt!69609 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun b!133341 () Bool)

(declare-fun res!64136 () Bool)

(assert (=> b!133341 (=> (not res!64136) (not e!86878))))

(assert (=> b!133341 (= res!64136 (not (contains!886 lt!69609 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133342 () Bool)

(assert (=> b!133342 (= e!86877 e!86872)))

(assert (=> b!133342 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64133 () Bool)

(assert (=> b!133342 (= res!64133 (contains!886 lt!69609 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133342 (=> (not res!64133) (not e!86872))))

(assert (= (and d!40537 c!24723) b!133339))

(assert (= (and d!40537 (not c!24723)) b!133338))

(assert (= (and b!133338 c!24722) b!133337))

(assert (= (and b!133338 (not c!24722)) b!133332))

(assert (= (or b!133337 b!133332) bm!14695))

(assert (= (and d!40537 res!64134) b!133341))

(assert (= (and b!133341 res!64136) b!133335))

(assert (= (and b!133335 res!64135) b!133336))

(assert (= (and b!133335 c!24721) b!133342))

(assert (= (and b!133335 (not c!24721)) b!133333))

(assert (= (and b!133342 res!64133) b!133331))

(assert (= (and b!133333 c!24724) b!133340))

(assert (= (and b!133333 (not c!24724)) b!133334))

(declare-fun b_lambda!5921 () Bool)

(assert (=> (not b_lambda!5921) (not b!133331)))

(assert (=> b!133331 t!6164))

(declare-fun b_and!8233 () Bool)

(assert (= b_and!8229 (and (=> t!6164 result!3993) b_and!8233)))

(assert (=> b!133331 t!6166))

(declare-fun b_and!8235 () Bool)

(assert (= b_and!8231 (and (=> t!6166 result!3995) b_and!8235)))

(declare-fun b_lambda!5923 () Bool)

(assert (=> (not b_lambda!5923) (not b!133337)))

(assert (=> b!133337 t!6164))

(declare-fun b_and!8237 () Bool)

(assert (= b_and!8233 (and (=> t!6164 result!3993) b_and!8237)))

(assert (=> b!133337 t!6166))

(declare-fun b_and!8239 () Bool)

(assert (= b_and!8235 (and (=> t!6166 result!3995) b_and!8239)))

(assert (=> b!133336 m!156125))

(assert (=> b!133336 m!156125))

(assert (=> b!133336 m!156141))

(declare-fun m!157007 () Bool)

(assert (=> b!133341 m!157007))

(assert (=> b!133337 m!156473))

(declare-fun m!157009 () Bool)

(assert (=> b!133337 m!157009))

(assert (=> b!133337 m!156125))

(assert (=> b!133337 m!156473))

(assert (=> b!133337 m!156135))

(assert (=> b!133337 m!156475))

(declare-fun m!157011 () Bool)

(assert (=> b!133337 m!157011))

(declare-fun m!157013 () Bool)

(assert (=> b!133337 m!157013))

(assert (=> b!133337 m!156135))

(declare-fun m!157015 () Bool)

(assert (=> b!133337 m!157015))

(assert (=> b!133337 m!157011))

(declare-fun m!157017 () Bool)

(assert (=> b!133340 m!157017))

(assert (=> b!133342 m!156125))

(assert (=> b!133342 m!156125))

(declare-fun m!157019 () Bool)

(assert (=> b!133342 m!157019))

(declare-fun m!157021 () Bool)

(assert (=> b!133334 m!157021))

(assert (=> bm!14695 m!157017))

(declare-fun m!157023 () Bool)

(assert (=> d!40537 m!157023))

(assert (=> d!40537 m!156183))

(assert (=> b!133338 m!156125))

(assert (=> b!133338 m!156125))

(assert (=> b!133338 m!156141))

(assert (=> b!133331 m!156473))

(assert (=> b!133331 m!156125))

(assert (=> b!133331 m!156473))

(assert (=> b!133331 m!156135))

(assert (=> b!133331 m!156475))

(assert (=> b!133331 m!156135))

(assert (=> b!133331 m!156125))

(declare-fun m!157025 () Bool)

(assert (=> b!133331 m!157025))

(assert (=> bm!14648 d!40537))

(declare-fun d!40539 () Bool)

(declare-fun res!64140 () Bool)

(declare-fun e!86879 () Bool)

(assert (=> d!40539 (=> (not res!64140) (not e!86879))))

(assert (=> d!40539 (= res!64140 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(assert (=> d!40539 (= (simpleValid!92 (v!3192 (underlying!451 thiss!992))) e!86879)))

(declare-fun b!133343 () Bool)

(declare-fun res!64137 () Bool)

(assert (=> b!133343 (=> (not res!64137) (not e!86879))))

(assert (=> b!133343 (= res!64137 (and (= (size!2519 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000001)) (= (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (size!2519 (_values!2847 (v!3192 (underlying!451 thiss!992))))) (bvsge (_size!597 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!597 (v!3192 (underlying!451 thiss!992))) (bvadd (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!133345 () Bool)

(declare-fun res!64139 () Bool)

(assert (=> b!133345 (=> (not res!64139) (not e!86879))))

(assert (=> b!133345 (= res!64139 (= (size!2524 (v!3192 (underlying!451 thiss!992))) (bvadd (_size!597 (v!3192 (underlying!451 thiss!992))) (bvsdiv (bvadd (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!133344 () Bool)

(declare-fun res!64138 () Bool)

(assert (=> b!133344 (=> (not res!64138) (not e!86879))))

(assert (=> b!133344 (= res!64138 (bvsge (size!2524 (v!3192 (underlying!451 thiss!992))) (_size!597 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!133346 () Bool)

(assert (=> b!133346 (= e!86879 (and (bvsge (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!597 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000000)))))

(assert (= (and d!40539 res!64140) b!133343))

(assert (= (and b!133343 res!64137) b!133344))

(assert (= (and b!133344 res!64138) b!133345))

(assert (= (and b!133345 res!64139) b!133346))

(assert (=> d!40539 m!155855))

(declare-fun m!157027 () Bool)

(assert (=> b!133345 m!157027))

(assert (=> b!133344 m!157027))

(assert (=> d!40295 d!40539))

(declare-fun d!40541 () Bool)

(declare-fun res!64141 () Bool)

(declare-fun e!86880 () Bool)

(assert (=> d!40541 (=> res!64141 e!86880)))

(assert (=> d!40541 (= res!64141 (= (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> d!40541 (= (arrayContainsKey!0 (_keys!4612 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!86880)))

(declare-fun b!133347 () Bool)

(declare-fun e!86881 () Bool)

(assert (=> b!133347 (= e!86880 e!86881)))

(declare-fun res!64142 () Bool)

(assert (=> b!133347 (=> (not res!64142) (not e!86881))))

(assert (=> b!133347 (= res!64142 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133348 () Bool)

(assert (=> b!133348 (= e!86881 (arrayContainsKey!0 (_keys!4612 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!40541 (not res!64141)) b!133347))

(assert (= (and b!133347 res!64142) b!133348))

(assert (=> d!40541 m!156869))

(assert (=> b!133348 m!155841))

(declare-fun m!157029 () Bool)

(assert (=> b!133348 m!157029))

(assert (=> b!132990 d!40541))

(declare-fun d!40543 () Bool)

(declare-fun e!86882 () Bool)

(assert (=> d!40543 e!86882))

(declare-fun res!64144 () Bool)

(assert (=> d!40543 (=> (not res!64144) (not e!86882))))

(declare-fun lt!69616 () ListLongMap!1671)

(assert (=> d!40543 (= res!64144 (contains!886 lt!69616 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69614 () List!1710)

(assert (=> d!40543 (= lt!69616 (ListLongMap!1672 lt!69614))))

(declare-fun lt!69617 () Unit!4132)

(declare-fun lt!69615 () Unit!4132)

(assert (=> d!40543 (= lt!69617 lt!69615)))

(assert (=> d!40543 (= (getValueByKey!170 lt!69614 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40543 (= lt!69615 (lemmaContainsTupThenGetReturnValue!88 lt!69614 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40543 (= lt!69614 (insertStrictlySorted!91 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40543 (= (+!163 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69616)))

(declare-fun b!133349 () Bool)

(declare-fun res!64143 () Bool)

(assert (=> b!133349 (=> (not res!64143) (not e!86882))))

(assert (=> b!133349 (= res!64143 (= (getValueByKey!170 (toList!851 lt!69616) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133350 () Bool)

(assert (=> b!133350 (= e!86882 (contains!889 (toList!851 lt!69616) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40543 res!64144) b!133349))

(assert (= (and b!133349 res!64143) b!133350))

(declare-fun m!157031 () Bool)

(assert (=> d!40543 m!157031))

(declare-fun m!157033 () Bool)

(assert (=> d!40543 m!157033))

(declare-fun m!157035 () Bool)

(assert (=> d!40543 m!157035))

(declare-fun m!157037 () Bool)

(assert (=> d!40543 m!157037))

(declare-fun m!157039 () Bool)

(assert (=> b!133349 m!157039))

(declare-fun m!157041 () Bool)

(assert (=> b!133350 m!157041))

(assert (=> d!40391 d!40543))

(declare-fun d!40545 () Bool)

(assert (=> d!40545 (= (arrayCountValidKeys!0 lt!69449 (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!69620 () Unit!4132)

(declare-fun choose!2 (array!4757 (_ BitVec 32)) Unit!4132)

(assert (=> d!40545 (= lt!69620 (choose!2 lt!69449 (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))))))

(declare-fun e!86885 () Bool)

(assert (=> d!40545 e!86885))

(declare-fun res!64149 () Bool)

(assert (=> d!40545 (=> (not res!64149) (not e!86885))))

(assert (=> d!40545 (= res!64149 (and (bvsge (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000000) (bvslt (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (size!2518 lt!69449))))))

(assert (=> d!40545 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!69449 (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))) lt!69620)))

(declare-fun b!133355 () Bool)

(declare-fun res!64150 () Bool)

(assert (=> b!133355 (=> (not res!64150) (not e!86885))))

(assert (=> b!133355 (= res!64150 (validKeyInArray!0 (select (arr!2248 lt!69449) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))

(declare-fun b!133356 () Bool)

(assert (=> b!133356 (= e!86885 (bvslt (size!2518 lt!69449) #b01111111111111111111111111111111))))

(assert (= (and d!40545 res!64149) b!133355))

(assert (= (and b!133355 res!64150) b!133356))

(assert (=> d!40545 m!156559))

(declare-fun m!157043 () Bool)

(assert (=> d!40545 m!157043))

(declare-fun m!157045 () Bool)

(assert (=> b!133355 m!157045))

(assert (=> b!133355 m!157045))

(declare-fun m!157047 () Bool)

(assert (=> b!133355 m!157047))

(assert (=> d!40391 d!40545))

(declare-fun b!133357 () Bool)

(declare-fun e!86886 () Bool)

(declare-fun call!14699 () Bool)

(assert (=> b!133357 (= e!86886 call!14699)))

(declare-fun b!133358 () Bool)

(declare-fun e!86887 () Bool)

(assert (=> b!133358 (= e!86887 e!86886)))

(declare-fun lt!69621 () (_ BitVec 64))

(assert (=> b!133358 (= lt!69621 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!69623 () Unit!4132)

(assert (=> b!133358 (= lt!69623 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) lt!69621 #b00000000000000000000000000000000))))

(assert (=> b!133358 (arrayContainsKey!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) lt!69621 #b00000000000000000000000000000000)))

(declare-fun lt!69622 () Unit!4132)

(assert (=> b!133358 (= lt!69622 lt!69623)))

(declare-fun res!64152 () Bool)

(assert (=> b!133358 (= res!64152 (= (seekEntryOrOpen!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000) (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (mask!7163 newMap!16)) (Found!278 #b00000000000000000000000000000000)))))

(assert (=> b!133358 (=> (not res!64152) (not e!86886))))

(declare-fun d!40547 () Bool)

(declare-fun res!64151 () Bool)

(declare-fun e!86888 () Bool)

(assert (=> d!40547 (=> res!64151 e!86888)))

(assert (=> d!40547 (= res!64151 (bvsge #b00000000000000000000000000000000 (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(assert (=> d!40547 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (mask!7163 newMap!16)) e!86888)))

(declare-fun b!133359 () Bool)

(assert (=> b!133359 (= e!86888 e!86887)))

(declare-fun c!24725 () Bool)

(assert (=> b!133359 (= c!24725 (validKeyInArray!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!133360 () Bool)

(assert (=> b!133360 (= e!86887 call!14699)))

(declare-fun bm!14696 () Bool)

(assert (=> bm!14696 (= call!14699 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (mask!7163 newMap!16)))))

(assert (= (and d!40547 (not res!64151)) b!133359))

(assert (= (and b!133359 c!24725) b!133358))

(assert (= (and b!133359 (not c!24725)) b!133360))

(assert (= (and b!133358 res!64152) b!133357))

(assert (= (or b!133357 b!133360) bm!14696))

(declare-fun m!157049 () Bool)

(assert (=> b!133358 m!157049))

(declare-fun m!157051 () Bool)

(assert (=> b!133358 m!157051))

(declare-fun m!157053 () Bool)

(assert (=> b!133358 m!157053))

(assert (=> b!133358 m!157049))

(declare-fun m!157055 () Bool)

(assert (=> b!133358 m!157055))

(assert (=> b!133359 m!157049))

(assert (=> b!133359 m!157049))

(declare-fun m!157057 () Bool)

(assert (=> b!133359 m!157057))

(declare-fun m!157059 () Bool)

(assert (=> bm!14696 m!157059))

(assert (=> d!40391 d!40547))

(assert (=> d!40391 d!40383))

(assert (=> d!40391 d!40279))

(assert (=> d!40391 d!40387))

(assert (=> d!40391 d!40345))

(declare-fun b!133361 () Bool)

(declare-fun e!86889 () (_ BitVec 32))

(declare-fun e!86890 () (_ BitVec 32))

(assert (=> b!133361 (= e!86889 e!86890)))

(declare-fun c!24727 () Bool)

(assert (=> b!133361 (= c!24727 (validKeyInArray!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!133362 () Bool)

(declare-fun call!14700 () (_ BitVec 32))

(assert (=> b!133362 (= e!86890 (bvadd #b00000000000000000000000000000001 call!14700))))

(declare-fun lt!69624 () (_ BitVec 32))

(declare-fun d!40549 () Bool)

(assert (=> d!40549 (and (bvsge lt!69624 #b00000000000000000000000000000000) (bvsle lt!69624 (bvsub (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!40549 (= lt!69624 e!86889)))

(declare-fun c!24726 () Bool)

(assert (=> d!40549 (= c!24726 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40549 (and (bvsle #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2518 (_keys!4612 newMap!16)) (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(assert (=> d!40549 (= (arrayCountValidKeys!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) lt!69624)))

(declare-fun b!133363 () Bool)

(assert (=> b!133363 (= e!86890 call!14700)))

(declare-fun b!133364 () Bool)

(assert (=> b!133364 (= e!86889 #b00000000000000000000000000000000)))

(declare-fun bm!14697 () Bool)

(assert (=> bm!14697 (= call!14700 (arrayCountValidKeys!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (= (and d!40549 c!24726) b!133364))

(assert (= (and d!40549 (not c!24726)) b!133361))

(assert (= (and b!133361 c!24727) b!133362))

(assert (= (and b!133361 (not c!24727)) b!133363))

(assert (= (or b!133362 b!133363) bm!14697))

(assert (=> b!133361 m!157049))

(assert (=> b!133361 m!157049))

(assert (=> b!133361 m!157057))

(declare-fun m!157061 () Bool)

(assert (=> bm!14697 m!157061))

(assert (=> d!40391 d!40549))

(declare-fun b!133365 () Bool)

(declare-fun e!86903 () Bool)

(declare-fun e!86896 () Bool)

(assert (=> b!133365 (= e!86903 e!86896)))

(declare-fun res!64157 () Bool)

(declare-fun call!14705 () Bool)

(assert (=> b!133365 (= res!64157 call!14705)))

(assert (=> b!133365 (=> (not res!64157) (not e!86896))))

(declare-fun c!24733 () Bool)

(declare-fun call!14706 () ListLongMap!1671)

(declare-fun call!14707 () ListLongMap!1671)

(declare-fun call!14704 () ListLongMap!1671)

(declare-fun c!24731 () Bool)

(declare-fun bm!14698 () Bool)

(declare-fun call!14701 () ListLongMap!1671)

(assert (=> bm!14698 (= call!14701 (+!163 (ite c!24733 call!14704 (ite c!24731 call!14707 call!14706)) (ite (or c!24733 c!24731) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun bm!14699 () Bool)

(assert (=> bm!14699 (= call!14704 (getCurrentListMapNoExtraKeys!128 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!133366 () Bool)

(declare-fun e!86901 () Bool)

(assert (=> b!133366 (= e!86901 (validKeyInArray!0 (select (arr!2248 lt!69447) #b00000000000000000000000000000000)))))

(declare-fun b!133367 () Bool)

(declare-fun e!86898 () Bool)

(assert (=> b!133367 (= e!86898 (validKeyInArray!0 (select (arr!2248 lt!69447) #b00000000000000000000000000000000)))))

(declare-fun bm!14700 () Bool)

(assert (=> bm!14700 (= call!14706 call!14707)))

(declare-fun b!133368 () Bool)

(declare-fun e!86900 () ListLongMap!1671)

(declare-fun e!86902 () ListLongMap!1671)

(assert (=> b!133368 (= e!86900 e!86902)))

(assert (=> b!133368 (= c!24731 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133369 () Bool)

(declare-fun e!86893 () Bool)

(declare-fun e!86899 () Bool)

(assert (=> b!133369 (= e!86893 e!86899)))

(declare-fun res!64158 () Bool)

(assert (=> b!133369 (=> (not res!64158) (not e!86899))))

(declare-fun lt!69641 () ListLongMap!1671)

(assert (=> b!133369 (= res!64158 (contains!886 lt!69641 (select (arr!2248 lt!69447) #b00000000000000000000000000000000)))))

(assert (=> b!133369 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 lt!69447)))))

(declare-fun bm!14701 () Bool)

(assert (=> bm!14701 (= call!14705 (contains!886 lt!69641 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133370 () Bool)

(assert (=> b!133370 (= e!86899 (= (apply!116 lt!69641 (select (arr!2248 lt!69447) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 lt!69436) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133370 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 lt!69436)))))

(assert (=> b!133370 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 lt!69447)))))

(declare-fun b!133372 () Bool)

(declare-fun e!86891 () Bool)

(assert (=> b!133372 (= e!86891 (= (apply!116 lt!69641 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 newMap!16)))))

(declare-fun b!133373 () Bool)

(declare-fun e!86895 () Unit!4132)

(declare-fun lt!69643 () Unit!4132)

(assert (=> b!133373 (= e!86895 lt!69643)))

(declare-fun lt!69631 () ListLongMap!1671)

(assert (=> b!133373 (= lt!69631 (getCurrentListMapNoExtraKeys!128 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69639 () (_ BitVec 64))

(assert (=> b!133373 (= lt!69639 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69637 () (_ BitVec 64))

(assert (=> b!133373 (= lt!69637 (select (arr!2248 lt!69447) #b00000000000000000000000000000000))))

(declare-fun lt!69646 () Unit!4132)

(assert (=> b!133373 (= lt!69646 (addStillContains!92 lt!69631 lt!69639 (zeroValue!2719 newMap!16) lt!69637))))

(assert (=> b!133373 (contains!886 (+!163 lt!69631 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16))) lt!69637)))

(declare-fun lt!69638 () Unit!4132)

(assert (=> b!133373 (= lt!69638 lt!69646)))

(declare-fun lt!69627 () ListLongMap!1671)

(assert (=> b!133373 (= lt!69627 (getCurrentListMapNoExtraKeys!128 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69644 () (_ BitVec 64))

(assert (=> b!133373 (= lt!69644 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69632 () (_ BitVec 64))

(assert (=> b!133373 (= lt!69632 (select (arr!2248 lt!69447) #b00000000000000000000000000000000))))

(declare-fun lt!69633 () Unit!4132)

(assert (=> b!133373 (= lt!69633 (addApplyDifferent!92 lt!69627 lt!69644 (minValue!2719 newMap!16) lt!69632))))

(assert (=> b!133373 (= (apply!116 (+!163 lt!69627 (tuple2!2585 lt!69644 (minValue!2719 newMap!16))) lt!69632) (apply!116 lt!69627 lt!69632))))

(declare-fun lt!69642 () Unit!4132)

(assert (=> b!133373 (= lt!69642 lt!69633)))

(declare-fun lt!69625 () ListLongMap!1671)

(assert (=> b!133373 (= lt!69625 (getCurrentListMapNoExtraKeys!128 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69626 () (_ BitVec 64))

(assert (=> b!133373 (= lt!69626 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69629 () (_ BitVec 64))

(assert (=> b!133373 (= lt!69629 (select (arr!2248 lt!69447) #b00000000000000000000000000000000))))

(declare-fun lt!69628 () Unit!4132)

(assert (=> b!133373 (= lt!69628 (addApplyDifferent!92 lt!69625 lt!69626 (zeroValue!2719 newMap!16) lt!69629))))

(assert (=> b!133373 (= (apply!116 (+!163 lt!69625 (tuple2!2585 lt!69626 (zeroValue!2719 newMap!16))) lt!69629) (apply!116 lt!69625 lt!69629))))

(declare-fun lt!69636 () Unit!4132)

(assert (=> b!133373 (= lt!69636 lt!69628)))

(declare-fun lt!69634 () ListLongMap!1671)

(assert (=> b!133373 (= lt!69634 (getCurrentListMapNoExtraKeys!128 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69635 () (_ BitVec 64))

(assert (=> b!133373 (= lt!69635 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69645 () (_ BitVec 64))

(assert (=> b!133373 (= lt!69645 (select (arr!2248 lt!69447) #b00000000000000000000000000000000))))

(assert (=> b!133373 (= lt!69643 (addApplyDifferent!92 lt!69634 lt!69635 (minValue!2719 newMap!16) lt!69645))))

(assert (=> b!133373 (= (apply!116 (+!163 lt!69634 (tuple2!2585 lt!69635 (minValue!2719 newMap!16))) lt!69645) (apply!116 lt!69634 lt!69645))))

(declare-fun b!133374 () Bool)

(declare-fun e!86892 () ListLongMap!1671)

(assert (=> b!133374 (= e!86892 call!14706)))

(declare-fun b!133375 () Bool)

(declare-fun call!14702 () ListLongMap!1671)

(assert (=> b!133375 (= e!86902 call!14702)))

(declare-fun b!133376 () Bool)

(declare-fun res!64154 () Bool)

(declare-fun e!86897 () Bool)

(assert (=> b!133376 (=> (not res!64154) (not e!86897))))

(declare-fun e!86894 () Bool)

(assert (=> b!133376 (= res!64154 e!86894)))

(declare-fun c!24730 () Bool)

(assert (=> b!133376 (= c!24730 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!14702 () Bool)

(assert (=> bm!14702 (= call!14707 call!14704)))

(declare-fun b!133377 () Bool)

(assert (=> b!133377 (= e!86903 (not call!14705))))

(declare-fun b!133378 () Bool)

(declare-fun c!24732 () Bool)

(assert (=> b!133378 (= c!24732 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!133378 (= e!86902 e!86892)))

(declare-fun b!133379 () Bool)

(declare-fun Unit!4159 () Unit!4132)

(assert (=> b!133379 (= e!86895 Unit!4159)))

(declare-fun b!133380 () Bool)

(assert (=> b!133380 (= e!86900 (+!163 call!14701 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun bm!14703 () Bool)

(assert (=> bm!14703 (= call!14702 call!14701)))

(declare-fun b!133381 () Bool)

(assert (=> b!133381 (= e!86892 call!14702)))

(declare-fun b!133382 () Bool)

(declare-fun call!14703 () Bool)

(assert (=> b!133382 (= e!86894 (not call!14703))))

(declare-fun b!133383 () Bool)

(assert (=> b!133383 (= e!86897 e!86903)))

(declare-fun c!24729 () Bool)

(assert (=> b!133383 (= c!24729 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14704 () Bool)

(assert (=> bm!14704 (= call!14703 (contains!886 lt!69641 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133371 () Bool)

(assert (=> b!133371 (= e!86894 e!86891)))

(declare-fun res!64156 () Bool)

(assert (=> b!133371 (= res!64156 call!14703)))

(assert (=> b!133371 (=> (not res!64156) (not e!86891))))

(declare-fun d!40551 () Bool)

(assert (=> d!40551 e!86897))

(declare-fun res!64161 () Bool)

(assert (=> d!40551 (=> (not res!64161) (not e!86897))))

(assert (=> d!40551 (= res!64161 (or (bvsge #b00000000000000000000000000000000 (size!2518 lt!69447)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 lt!69447)))))))

(declare-fun lt!69630 () ListLongMap!1671)

(assert (=> d!40551 (= lt!69641 lt!69630)))

(declare-fun lt!69640 () Unit!4132)

(assert (=> d!40551 (= lt!69640 e!86895)))

(declare-fun c!24728 () Bool)

(assert (=> d!40551 (= c!24728 e!86898)))

(declare-fun res!64160 () Bool)

(assert (=> d!40551 (=> (not res!64160) (not e!86898))))

(assert (=> d!40551 (= res!64160 (bvslt #b00000000000000000000000000000000 (size!2518 lt!69447)))))

(assert (=> d!40551 (= lt!69630 e!86900)))

(assert (=> d!40551 (= c!24733 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40551 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40551 (= (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69641)))

(declare-fun b!133384 () Bool)

(declare-fun res!64153 () Bool)

(assert (=> b!133384 (=> (not res!64153) (not e!86897))))

(assert (=> b!133384 (= res!64153 e!86893)))

(declare-fun res!64159 () Bool)

(assert (=> b!133384 (=> res!64159 e!86893)))

(assert (=> b!133384 (= res!64159 (not e!86901))))

(declare-fun res!64155 () Bool)

(assert (=> b!133384 (=> (not res!64155) (not e!86901))))

(assert (=> b!133384 (= res!64155 (bvslt #b00000000000000000000000000000000 (size!2518 lt!69447)))))

(declare-fun b!133385 () Bool)

(assert (=> b!133385 (= e!86896 (= (apply!116 lt!69641 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 newMap!16)))))

(assert (= (and d!40551 c!24733) b!133380))

(assert (= (and d!40551 (not c!24733)) b!133368))

(assert (= (and b!133368 c!24731) b!133375))

(assert (= (and b!133368 (not c!24731)) b!133378))

(assert (= (and b!133378 c!24732) b!133381))

(assert (= (and b!133378 (not c!24732)) b!133374))

(assert (= (or b!133381 b!133374) bm!14700))

(assert (= (or b!133375 bm!14700) bm!14702))

(assert (= (or b!133375 b!133381) bm!14703))

(assert (= (or b!133380 bm!14702) bm!14699))

(assert (= (or b!133380 bm!14703) bm!14698))

(assert (= (and d!40551 res!64160) b!133367))

(assert (= (and d!40551 c!24728) b!133373))

(assert (= (and d!40551 (not c!24728)) b!133379))

(assert (= (and d!40551 res!64161) b!133384))

(assert (= (and b!133384 res!64155) b!133366))

(assert (= (and b!133384 (not res!64159)) b!133369))

(assert (= (and b!133369 res!64158) b!133370))

(assert (= (and b!133384 res!64153) b!133376))

(assert (= (and b!133376 c!24730) b!133371))

(assert (= (and b!133376 (not c!24730)) b!133382))

(assert (= (and b!133371 res!64156) b!133372))

(assert (= (or b!133371 b!133382) bm!14704))

(assert (= (and b!133376 res!64154) b!133383))

(assert (= (and b!133383 c!24729) b!133365))

(assert (= (and b!133383 (not c!24729)) b!133377))

(assert (= (and b!133365 res!64157) b!133385))

(assert (= (or b!133365 b!133377) bm!14701))

(declare-fun b_lambda!5925 () Bool)

(assert (=> (not b_lambda!5925) (not b!133370)))

(assert (=> b!133370 t!6164))

(declare-fun b_and!8241 () Bool)

(assert (= b_and!8237 (and (=> t!6164 result!3993) b_and!8241)))

(assert (=> b!133370 t!6166))

(declare-fun b_and!8243 () Bool)

(assert (= b_and!8239 (and (=> t!6166 result!3995) b_and!8243)))

(declare-fun m!157063 () Bool)

(assert (=> b!133369 m!157063))

(assert (=> b!133369 m!157063))

(declare-fun m!157065 () Bool)

(assert (=> b!133369 m!157065))

(declare-fun m!157067 () Bool)

(assert (=> bm!14699 m!157067))

(declare-fun m!157069 () Bool)

(assert (=> bm!14698 m!157069))

(declare-fun m!157071 () Bool)

(assert (=> b!133370 m!157071))

(assert (=> b!133370 m!156135))

(declare-fun m!157073 () Bool)

(assert (=> b!133370 m!157073))

(assert (=> b!133370 m!156135))

(assert (=> b!133370 m!157063))

(assert (=> b!133370 m!157071))

(assert (=> b!133370 m!157063))

(declare-fun m!157075 () Bool)

(assert (=> b!133370 m!157075))

(assert (=> b!133366 m!157063))

(assert (=> b!133366 m!157063))

(declare-fun m!157077 () Bool)

(assert (=> b!133366 m!157077))

(assert (=> b!133367 m!157063))

(assert (=> b!133367 m!157063))

(assert (=> b!133367 m!157077))

(declare-fun m!157079 () Bool)

(assert (=> b!133372 m!157079))

(declare-fun m!157081 () Bool)

(assert (=> b!133380 m!157081))

(declare-fun m!157083 () Bool)

(assert (=> bm!14701 m!157083))

(declare-fun m!157085 () Bool)

(assert (=> b!133373 m!157085))

(declare-fun m!157087 () Bool)

(assert (=> b!133373 m!157087))

(declare-fun m!157089 () Bool)

(assert (=> b!133373 m!157089))

(declare-fun m!157091 () Bool)

(assert (=> b!133373 m!157091))

(assert (=> b!133373 m!157085))

(declare-fun m!157093 () Bool)

(assert (=> b!133373 m!157093))

(declare-fun m!157095 () Bool)

(assert (=> b!133373 m!157095))

(declare-fun m!157097 () Bool)

(assert (=> b!133373 m!157097))

(declare-fun m!157099 () Bool)

(assert (=> b!133373 m!157099))

(assert (=> b!133373 m!157089))

(declare-fun m!157101 () Bool)

(assert (=> b!133373 m!157101))

(declare-fun m!157103 () Bool)

(assert (=> b!133373 m!157103))

(declare-fun m!157105 () Bool)

(assert (=> b!133373 m!157105))

(declare-fun m!157107 () Bool)

(assert (=> b!133373 m!157107))

(declare-fun m!157109 () Bool)

(assert (=> b!133373 m!157109))

(assert (=> b!133373 m!157097))

(assert (=> b!133373 m!157063))

(assert (=> b!133373 m!157067))

(declare-fun m!157111 () Bool)

(assert (=> b!133373 m!157111))

(assert (=> b!133373 m!157091))

(declare-fun m!157113 () Bool)

(assert (=> b!133373 m!157113))

(declare-fun m!157115 () Bool)

(assert (=> b!133385 m!157115))

(declare-fun m!157117 () Bool)

(assert (=> bm!14704 m!157117))

(assert (=> d!40551 m!156183))

(assert (=> d!40391 d!40551))

(declare-fun d!40553 () Bool)

(declare-fun e!86904 () Bool)

(assert (=> d!40553 e!86904))

(declare-fun res!64162 () Bool)

(assert (=> d!40553 (=> (not res!64162) (not e!86904))))

(assert (=> d!40553 (= res!64162 (and (bvsge (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000000) (bvslt (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (size!2518 lt!69447))))))

(declare-fun lt!69647 () Unit!4132)

(assert (=> d!40553 (= lt!69647 (choose!824 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40553 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40553 (= (lemmaValidKeyInArrayIsInListMap!120 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (defaultEntry!2864 newMap!16)) lt!69647)))

(declare-fun b!133386 () Bool)

(assert (=> b!133386 (= e!86904 (contains!886 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2248 lt!69447) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))

(assert (= (and d!40553 res!64162) b!133386))

(declare-fun m!157119 () Bool)

(assert (=> d!40553 m!157119))

(assert (=> d!40553 m!156183))

(assert (=> b!133386 m!156569))

(declare-fun m!157121 () Bool)

(assert (=> b!133386 m!157121))

(assert (=> b!133386 m!156569))

(assert (=> b!133386 m!157121))

(declare-fun m!157123 () Bool)

(assert (=> b!133386 m!157123))

(assert (=> d!40391 d!40553))

(declare-fun d!40555 () Bool)

(declare-fun e!86907 () Bool)

(assert (=> d!40555 e!86907))

(declare-fun res!64165 () Bool)

(assert (=> d!40555 (=> (not res!64165) (not e!86907))))

(assert (=> d!40555 (= res!64165 (and (bvsge (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000000) (bvslt (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (size!2518 (_keys!4612 newMap!16)))))))

(declare-fun lt!69650 () Unit!4132)

(declare-fun choose!41 (array!4757 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1711) Unit!4132)

(assert (=> d!40555 (= lt!69650 (choose!41 (_keys!4612 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) lt!69450 lt!69457))))

(assert (=> d!40555 (bvslt (size!2518 (_keys!4612 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!40555 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4612 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) lt!69450 lt!69457) lt!69650)))

(declare-fun b!133389 () Bool)

(assert (=> b!133389 (= e!86907 (arrayNoDuplicates!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) lt!69450 lt!69457))))

(assert (= (and d!40555 res!64165) b!133389))

(assert (=> d!40555 m!155841))

(declare-fun m!157125 () Bool)

(assert (=> d!40555 m!157125))

(assert (=> b!133389 m!156563))

(assert (=> b!133389 m!156557))

(assert (=> d!40391 d!40555))

(declare-fun d!40557 () Bool)

(declare-fun e!86910 () Bool)

(assert (=> d!40557 e!86910))

(declare-fun res!64168 () Bool)

(assert (=> d!40557 (=> (not res!64168) (not e!86910))))

(assert (=> d!40557 (= res!64168 (and (bvsge (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000000) (bvslt (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (size!2518 (_keys!4612 newMap!16))) (bvslt (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (size!2519 (_values!2847 newMap!16)))))))

(declare-fun lt!69653 () Unit!4132)

(declare-fun choose!836 (array!4757 array!4759 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) (_ BitVec 64) V!3481 Int) Unit!4132)

(assert (=> d!40557 (= lt!69653 (choose!836 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40557 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40557 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!42 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)) lt!69653)))

(declare-fun b!133392 () Bool)

(assert (=> b!133392 (= e!86910 (= (+!163 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!519 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))

(assert (= (and d!40557 res!64168) b!133392))

(assert (=> d!40557 m!155841))

(assert (=> d!40557 m!155839))

(declare-fun m!157127 () Bool)

(assert (=> d!40557 m!157127))

(assert (=> d!40557 m!156183))

(assert (=> b!133392 m!156041))

(assert (=> b!133392 m!156041))

(assert (=> b!133392 m!156267))

(assert (=> b!133392 m!156563))

(assert (=> b!133392 m!156579))

(assert (=> b!133392 m!156589))

(assert (=> d!40391 d!40557))

(declare-fun d!40559 () Bool)

(declare-fun e!86911 () Bool)

(assert (=> d!40559 e!86911))

(declare-fun res!64169 () Bool)

(assert (=> d!40559 (=> res!64169 e!86911)))

(declare-fun lt!69655 () Bool)

(assert (=> d!40559 (= res!64169 (not lt!69655))))

(declare-fun lt!69657 () Bool)

(assert (=> d!40559 (= lt!69655 lt!69657)))

(declare-fun lt!69654 () Unit!4132)

(declare-fun e!86912 () Unit!4132)

(assert (=> d!40559 (= lt!69654 e!86912)))

(declare-fun c!24734 () Bool)

(assert (=> d!40559 (= c!24734 lt!69657)))

(assert (=> d!40559 (= lt!69657 (containsKey!174 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))

(assert (=> d!40559 (= (contains!886 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))) lt!69655)))

(declare-fun b!133393 () Bool)

(declare-fun lt!69656 () Unit!4132)

(assert (=> b!133393 (= e!86912 lt!69656)))

(assert (=> b!133393 (= lt!69656 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))

(assert (=> b!133393 (isDefined!124 (getValueByKey!170 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))

(declare-fun b!133394 () Bool)

(declare-fun Unit!4160 () Unit!4132)

(assert (=> b!133394 (= e!86912 Unit!4160)))

(declare-fun b!133395 () Bool)

(assert (=> b!133395 (= e!86911 (isDefined!124 (getValueByKey!170 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))))))))

(assert (= (and d!40559 c!24734) b!133393))

(assert (= (and d!40559 (not c!24734)) b!133394))

(assert (= (and d!40559 (not res!64169)) b!133395))

(assert (=> d!40559 m!156567))

(declare-fun m!157129 () Bool)

(assert (=> d!40559 m!157129))

(assert (=> b!133393 m!156567))

(declare-fun m!157131 () Bool)

(assert (=> b!133393 m!157131))

(assert (=> b!133393 m!156567))

(declare-fun m!157133 () Bool)

(assert (=> b!133393 m!157133))

(assert (=> b!133393 m!157133))

(declare-fun m!157135 () Bool)

(assert (=> b!133393 m!157135))

(assert (=> b!133395 m!156567))

(assert (=> b!133395 m!157133))

(assert (=> b!133395 m!157133))

(assert (=> b!133395 m!157135))

(assert (=> d!40391 d!40559))

(declare-fun b!133396 () Bool)

(declare-fun e!86925 () Bool)

(declare-fun e!86918 () Bool)

(assert (=> b!133396 (= e!86925 e!86918)))

(declare-fun res!64174 () Bool)

(declare-fun call!14712 () Bool)

(assert (=> b!133396 (= res!64174 call!14712)))

(assert (=> b!133396 (=> (not res!64174) (not e!86918))))

(declare-fun bm!14705 () Bool)

(declare-fun call!14708 () ListLongMap!1671)

(declare-fun call!14714 () ListLongMap!1671)

(declare-fun c!24740 () Bool)

(declare-fun c!24738 () Bool)

(declare-fun call!14711 () ListLongMap!1671)

(declare-fun call!14713 () ListLongMap!1671)

(assert (=> bm!14705 (= call!14708 (+!163 (ite c!24740 call!14711 (ite c!24738 call!14714 call!14713)) (ite (or c!24740 c!24738) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun bm!14706 () Bool)

(assert (=> bm!14706 (= call!14711 (getCurrentListMapNoExtraKeys!128 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!133397 () Bool)

(declare-fun e!86923 () Bool)

(assert (=> b!133397 (= e!86923 (validKeyInArray!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!86920 () Bool)

(declare-fun b!133398 () Bool)

(assert (=> b!133398 (= e!86920 (validKeyInArray!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!14707 () Bool)

(assert (=> bm!14707 (= call!14713 call!14714)))

(declare-fun b!133399 () Bool)

(declare-fun e!86922 () ListLongMap!1671)

(declare-fun e!86924 () ListLongMap!1671)

(assert (=> b!133399 (= e!86922 e!86924)))

(assert (=> b!133399 (= c!24738 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133400 () Bool)

(declare-fun e!86915 () Bool)

(declare-fun e!86921 () Bool)

(assert (=> b!133400 (= e!86915 e!86921)))

(declare-fun res!64175 () Bool)

(assert (=> b!133400 (=> (not res!64175) (not e!86921))))

(declare-fun lt!69674 () ListLongMap!1671)

(assert (=> b!133400 (= res!64175 (contains!886 lt!69674 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!133400 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(declare-fun bm!14708 () Bool)

(assert (=> bm!14708 (= call!14712 (contains!886 lt!69674 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133401 () Bool)

(assert (=> b!133401 (= e!86921 (= (apply!116 lt!69674 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133401 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))))))

(assert (=> b!133401 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(declare-fun b!133403 () Bool)

(declare-fun e!86913 () Bool)

(assert (=> b!133403 (= e!86913 (= (apply!116 lt!69674 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 newMap!16)))))

(declare-fun b!133404 () Bool)

(declare-fun e!86917 () Unit!4132)

(declare-fun lt!69676 () Unit!4132)

(assert (=> b!133404 (= e!86917 lt!69676)))

(declare-fun lt!69664 () ListLongMap!1671)

(assert (=> b!133404 (= lt!69664 (getCurrentListMapNoExtraKeys!128 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69672 () (_ BitVec 64))

(assert (=> b!133404 (= lt!69672 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69670 () (_ BitVec 64))

(assert (=> b!133404 (= lt!69670 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!69679 () Unit!4132)

(assert (=> b!133404 (= lt!69679 (addStillContains!92 lt!69664 lt!69672 (zeroValue!2719 newMap!16) lt!69670))))

(assert (=> b!133404 (contains!886 (+!163 lt!69664 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16))) lt!69670)))

(declare-fun lt!69671 () Unit!4132)

(assert (=> b!133404 (= lt!69671 lt!69679)))

(declare-fun lt!69660 () ListLongMap!1671)

(assert (=> b!133404 (= lt!69660 (getCurrentListMapNoExtraKeys!128 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69677 () (_ BitVec 64))

(assert (=> b!133404 (= lt!69677 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69665 () (_ BitVec 64))

(assert (=> b!133404 (= lt!69665 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!69666 () Unit!4132)

(assert (=> b!133404 (= lt!69666 (addApplyDifferent!92 lt!69660 lt!69677 (minValue!2719 newMap!16) lt!69665))))

(assert (=> b!133404 (= (apply!116 (+!163 lt!69660 (tuple2!2585 lt!69677 (minValue!2719 newMap!16))) lt!69665) (apply!116 lt!69660 lt!69665))))

(declare-fun lt!69675 () Unit!4132)

(assert (=> b!133404 (= lt!69675 lt!69666)))

(declare-fun lt!69658 () ListLongMap!1671)

(assert (=> b!133404 (= lt!69658 (getCurrentListMapNoExtraKeys!128 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69659 () (_ BitVec 64))

(assert (=> b!133404 (= lt!69659 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69662 () (_ BitVec 64))

(assert (=> b!133404 (= lt!69662 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!69661 () Unit!4132)

(assert (=> b!133404 (= lt!69661 (addApplyDifferent!92 lt!69658 lt!69659 (zeroValue!2719 newMap!16) lt!69662))))

(assert (=> b!133404 (= (apply!116 (+!163 lt!69658 (tuple2!2585 lt!69659 (zeroValue!2719 newMap!16))) lt!69662) (apply!116 lt!69658 lt!69662))))

(declare-fun lt!69669 () Unit!4132)

(assert (=> b!133404 (= lt!69669 lt!69661)))

(declare-fun lt!69667 () ListLongMap!1671)

(assert (=> b!133404 (= lt!69667 (getCurrentListMapNoExtraKeys!128 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69668 () (_ BitVec 64))

(assert (=> b!133404 (= lt!69668 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69678 () (_ BitVec 64))

(assert (=> b!133404 (= lt!69678 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!133404 (= lt!69676 (addApplyDifferent!92 lt!69667 lt!69668 (minValue!2719 newMap!16) lt!69678))))

(assert (=> b!133404 (= (apply!116 (+!163 lt!69667 (tuple2!2585 lt!69668 (minValue!2719 newMap!16))) lt!69678) (apply!116 lt!69667 lt!69678))))

(declare-fun b!133405 () Bool)

(declare-fun e!86914 () ListLongMap!1671)

(assert (=> b!133405 (= e!86914 call!14713)))

(declare-fun b!133406 () Bool)

(declare-fun call!14709 () ListLongMap!1671)

(assert (=> b!133406 (= e!86924 call!14709)))

(declare-fun b!133407 () Bool)

(declare-fun res!64171 () Bool)

(declare-fun e!86919 () Bool)

(assert (=> b!133407 (=> (not res!64171) (not e!86919))))

(declare-fun e!86916 () Bool)

(assert (=> b!133407 (= res!64171 e!86916)))

(declare-fun c!24737 () Bool)

(assert (=> b!133407 (= c!24737 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!14709 () Bool)

(assert (=> bm!14709 (= call!14714 call!14711)))

(declare-fun b!133408 () Bool)

(assert (=> b!133408 (= e!86925 (not call!14712))))

(declare-fun b!133409 () Bool)

(declare-fun c!24739 () Bool)

(assert (=> b!133409 (= c!24739 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!133409 (= e!86924 e!86914)))

(declare-fun b!133410 () Bool)

(declare-fun Unit!4161 () Unit!4132)

(assert (=> b!133410 (= e!86917 Unit!4161)))

(declare-fun b!133411 () Bool)

(assert (=> b!133411 (= e!86922 (+!163 call!14708 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun bm!14710 () Bool)

(assert (=> bm!14710 (= call!14709 call!14708)))

(declare-fun b!133412 () Bool)

(assert (=> b!133412 (= e!86914 call!14709)))

(declare-fun b!133413 () Bool)

(declare-fun call!14710 () Bool)

(assert (=> b!133413 (= e!86916 (not call!14710))))

(declare-fun b!133414 () Bool)

(assert (=> b!133414 (= e!86919 e!86925)))

(declare-fun c!24736 () Bool)

(assert (=> b!133414 (= c!24736 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14711 () Bool)

(assert (=> bm!14711 (= call!14710 (contains!886 lt!69674 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133402 () Bool)

(assert (=> b!133402 (= e!86916 e!86913)))

(declare-fun res!64173 () Bool)

(assert (=> b!133402 (= res!64173 call!14710)))

(assert (=> b!133402 (=> (not res!64173) (not e!86913))))

(declare-fun d!40561 () Bool)

(assert (=> d!40561 e!86919))

(declare-fun res!64178 () Bool)

(assert (=> d!40561 (=> (not res!64178) (not e!86919))))

(assert (=> d!40561 (= res!64178 (or (bvsge #b00000000000000000000000000000000 (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))))

(declare-fun lt!69663 () ListLongMap!1671)

(assert (=> d!40561 (= lt!69674 lt!69663)))

(declare-fun lt!69673 () Unit!4132)

(assert (=> d!40561 (= lt!69673 e!86917)))

(declare-fun c!24735 () Bool)

(assert (=> d!40561 (= c!24735 e!86920)))

(declare-fun res!64177 () Bool)

(assert (=> d!40561 (=> (not res!64177) (not e!86920))))

(assert (=> d!40561 (= res!64177 (bvslt #b00000000000000000000000000000000 (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(assert (=> d!40561 (= lt!69663 e!86922)))

(assert (=> d!40561 (= c!24740 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40561 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40561 (= (getCurrentListMap!519 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69674)))

(declare-fun b!133415 () Bool)

(declare-fun res!64170 () Bool)

(assert (=> b!133415 (=> (not res!64170) (not e!86919))))

(assert (=> b!133415 (= res!64170 e!86915)))

(declare-fun res!64176 () Bool)

(assert (=> b!133415 (=> res!64176 e!86915)))

(assert (=> b!133415 (= res!64176 (not e!86923))))

(declare-fun res!64172 () Bool)

(assert (=> b!133415 (=> (not res!64172) (not e!86923))))

(assert (=> b!133415 (= res!64172 (bvslt #b00000000000000000000000000000000 (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(declare-fun b!133416 () Bool)

(assert (=> b!133416 (= e!86918 (= (apply!116 lt!69674 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 newMap!16)))))

(assert (= (and d!40561 c!24740) b!133411))

(assert (= (and d!40561 (not c!24740)) b!133399))

(assert (= (and b!133399 c!24738) b!133406))

(assert (= (and b!133399 (not c!24738)) b!133409))

(assert (= (and b!133409 c!24739) b!133412))

(assert (= (and b!133409 (not c!24739)) b!133405))

(assert (= (or b!133412 b!133405) bm!14707))

(assert (= (or b!133406 bm!14707) bm!14709))

(assert (= (or b!133406 b!133412) bm!14710))

(assert (= (or b!133411 bm!14709) bm!14706))

(assert (= (or b!133411 bm!14710) bm!14705))

(assert (= (and d!40561 res!64177) b!133398))

(assert (= (and d!40561 c!24735) b!133404))

(assert (= (and d!40561 (not c!24735)) b!133410))

(assert (= (and d!40561 res!64178) b!133415))

(assert (= (and b!133415 res!64172) b!133397))

(assert (= (and b!133415 (not res!64176)) b!133400))

(assert (= (and b!133400 res!64175) b!133401))

(assert (= (and b!133415 res!64170) b!133407))

(assert (= (and b!133407 c!24737) b!133402))

(assert (= (and b!133407 (not c!24737)) b!133413))

(assert (= (and b!133402 res!64173) b!133403))

(assert (= (or b!133402 b!133413) bm!14711))

(assert (= (and b!133407 res!64171) b!133414))

(assert (= (and b!133414 c!24736) b!133396))

(assert (= (and b!133414 (not c!24736)) b!133408))

(assert (= (and b!133396 res!64174) b!133416))

(assert (= (or b!133396 b!133408) bm!14708))

(declare-fun b_lambda!5927 () Bool)

(assert (=> (not b_lambda!5927) (not b!133401)))

(assert (=> b!133401 t!6164))

(declare-fun b_and!8245 () Bool)

(assert (= b_and!8241 (and (=> t!6164 result!3993) b_and!8245)))

(assert (=> b!133401 t!6166))

(declare-fun b_and!8247 () Bool)

(assert (= b_and!8243 (and (=> t!6166 result!3995) b_and!8247)))

(assert (=> b!133400 m!157049))

(assert (=> b!133400 m!157049))

(declare-fun m!157137 () Bool)

(assert (=> b!133400 m!157137))

(declare-fun m!157139 () Bool)

(assert (=> bm!14706 m!157139))

(declare-fun m!157141 () Bool)

(assert (=> bm!14705 m!157141))

(declare-fun m!157143 () Bool)

(assert (=> b!133401 m!157143))

(assert (=> b!133401 m!156135))

(declare-fun m!157145 () Bool)

(assert (=> b!133401 m!157145))

(assert (=> b!133401 m!156135))

(assert (=> b!133401 m!157049))

(assert (=> b!133401 m!157143))

(assert (=> b!133401 m!157049))

(declare-fun m!157147 () Bool)

(assert (=> b!133401 m!157147))

(assert (=> b!133397 m!157049))

(assert (=> b!133397 m!157049))

(assert (=> b!133397 m!157057))

(assert (=> b!133398 m!157049))

(assert (=> b!133398 m!157049))

(assert (=> b!133398 m!157057))

(declare-fun m!157149 () Bool)

(assert (=> b!133403 m!157149))

(declare-fun m!157151 () Bool)

(assert (=> b!133411 m!157151))

(declare-fun m!157153 () Bool)

(assert (=> bm!14708 m!157153))

(declare-fun m!157155 () Bool)

(assert (=> b!133404 m!157155))

(declare-fun m!157157 () Bool)

(assert (=> b!133404 m!157157))

(declare-fun m!157159 () Bool)

(assert (=> b!133404 m!157159))

(declare-fun m!157161 () Bool)

(assert (=> b!133404 m!157161))

(assert (=> b!133404 m!157155))

(declare-fun m!157163 () Bool)

(assert (=> b!133404 m!157163))

(declare-fun m!157165 () Bool)

(assert (=> b!133404 m!157165))

(declare-fun m!157167 () Bool)

(assert (=> b!133404 m!157167))

(declare-fun m!157169 () Bool)

(assert (=> b!133404 m!157169))

(assert (=> b!133404 m!157159))

(declare-fun m!157171 () Bool)

(assert (=> b!133404 m!157171))

(declare-fun m!157173 () Bool)

(assert (=> b!133404 m!157173))

(declare-fun m!157175 () Bool)

(assert (=> b!133404 m!157175))

(declare-fun m!157177 () Bool)

(assert (=> b!133404 m!157177))

(declare-fun m!157179 () Bool)

(assert (=> b!133404 m!157179))

(assert (=> b!133404 m!157167))

(assert (=> b!133404 m!157049))

(assert (=> b!133404 m!157139))

(declare-fun m!157181 () Bool)

(assert (=> b!133404 m!157181))

(assert (=> b!133404 m!157161))

(declare-fun m!157183 () Bool)

(assert (=> b!133404 m!157183))

(declare-fun m!157185 () Bool)

(assert (=> b!133416 m!157185))

(declare-fun m!157187 () Bool)

(assert (=> bm!14711 m!157187))

(assert (=> d!40561 m!156183))

(assert (=> d!40391 d!40561))

(declare-fun b!133417 () Bool)

(declare-fun e!86929 () Bool)

(declare-fun e!86926 () Bool)

(assert (=> b!133417 (= e!86929 e!86926)))

(declare-fun res!64179 () Bool)

(assert (=> b!133417 (=> (not res!64179) (not e!86926))))

(declare-fun e!86927 () Bool)

(assert (=> b!133417 (= res!64179 (not e!86927))))

(declare-fun res!64181 () Bool)

(assert (=> b!133417 (=> (not res!64181) (not e!86927))))

(assert (=> b!133417 (= res!64181 (validKeyInArray!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) lt!69450)))))

(declare-fun bm!14712 () Bool)

(declare-fun c!24741 () Bool)

(declare-fun call!14715 () Bool)

(assert (=> bm!14712 (= call!14715 (arrayNoDuplicates!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (bvadd lt!69450 #b00000000000000000000000000000001) (ite c!24741 (Cons!1707 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) lt!69450) lt!69457) lt!69457)))))

(declare-fun d!40563 () Bool)

(declare-fun res!64180 () Bool)

(assert (=> d!40563 (=> res!64180 e!86929)))

(assert (=> d!40563 (= res!64180 (bvsge lt!69450 (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(assert (=> d!40563 (= (arrayNoDuplicates!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) lt!69450 lt!69457) e!86929)))

(declare-fun b!133418 () Bool)

(declare-fun e!86928 () Bool)

(assert (=> b!133418 (= e!86928 call!14715)))

(declare-fun b!133419 () Bool)

(assert (=> b!133419 (= e!86927 (contains!888 lt!69457 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) lt!69450)))))

(declare-fun b!133420 () Bool)

(assert (=> b!133420 (= e!86926 e!86928)))

(assert (=> b!133420 (= c!24741 (validKeyInArray!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) lt!69450)))))

(declare-fun b!133421 () Bool)

(assert (=> b!133421 (= e!86928 call!14715)))

(assert (= (and d!40563 (not res!64180)) b!133417))

(assert (= (and b!133417 res!64181) b!133419))

(assert (= (and b!133417 res!64179) b!133420))

(assert (= (and b!133420 c!24741) b!133418))

(assert (= (and b!133420 (not c!24741)) b!133421))

(assert (= (or b!133418 b!133421) bm!14712))

(declare-fun m!157189 () Bool)

(assert (=> b!133417 m!157189))

(assert (=> b!133417 m!157189))

(declare-fun m!157191 () Bool)

(assert (=> b!133417 m!157191))

(assert (=> bm!14712 m!157189))

(declare-fun m!157193 () Bool)

(assert (=> bm!14712 m!157193))

(assert (=> b!133419 m!157189))

(assert (=> b!133419 m!157189))

(declare-fun m!157195 () Bool)

(assert (=> b!133419 m!157195))

(assert (=> b!133420 m!157189))

(assert (=> b!133420 m!157189))

(assert (=> b!133420 m!157191))

(assert (=> d!40391 d!40563))

(declare-fun d!40565 () Bool)

(assert (=> d!40565 (arrayContainsKey!0 lt!69444 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!69680 () Unit!4132)

(assert (=> d!40565 (= lt!69680 (choose!13 lt!69444 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))))))

(assert (=> d!40565 (bvsge (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000000)))

(assert (=> d!40565 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!69444 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))) lt!69680)))

(declare-fun bs!5499 () Bool)

(assert (= bs!5499 d!40565))

(assert (=> bs!5499 m!155841))

(assert (=> bs!5499 m!156565))

(assert (=> bs!5499 m!155841))

(declare-fun m!157197 () Bool)

(assert (=> bs!5499 m!157197))

(assert (=> d!40391 d!40565))

(assert (=> d!40391 d!40431))

(declare-fun d!40567 () Bool)

(declare-fun e!86932 () Bool)

(assert (=> d!40567 e!86932))

(declare-fun res!64184 () Bool)

(assert (=> d!40567 (=> (not res!64184) (not e!86932))))

(assert (=> d!40567 (= res!64184 (and (bvsge (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000000) (bvslt (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (size!2518 (_keys!4612 newMap!16)))))))

(declare-fun lt!69683 () Unit!4132)

(declare-fun choose!102 ((_ BitVec 64) array!4757 (_ BitVec 32) (_ BitVec 32)) Unit!4132)

(assert (=> d!40567 (= lt!69683 (choose!102 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (mask!7163 newMap!16)))))

(assert (=> d!40567 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40567 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (mask!7163 newMap!16)) lt!69683)))

(declare-fun b!133424 () Bool)

(assert (=> b!133424 (= e!86932 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (mask!7163 newMap!16)))))

(assert (= (and d!40567 res!64184) b!133424))

(assert (=> d!40567 m!155841))

(declare-fun m!157199 () Bool)

(assert (=> d!40567 m!157199))

(assert (=> d!40567 m!156183))

(assert (=> b!133424 m!156563))

(assert (=> b!133424 m!156581))

(assert (=> d!40391 d!40567))

(declare-fun b!133435 () Bool)

(declare-fun e!86938 () Bool)

(assert (=> b!133435 (= e!86938 (bvslt (size!2518 (_keys!4612 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!40569 () Bool)

(declare-fun e!86937 () Bool)

(assert (=> d!40569 e!86937))

(declare-fun res!64194 () Bool)

(assert (=> d!40569 (=> (not res!64194) (not e!86937))))

(assert (=> d!40569 (= res!64194 (and (bvsge (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000000) (bvslt (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (size!2518 (_keys!4612 newMap!16)))))))

(declare-fun lt!69686 () Unit!4132)

(declare-fun choose!1 (array!4757 (_ BitVec 32) (_ BitVec 64)) Unit!4132)

(assert (=> d!40569 (= lt!69686 (choose!1 (_keys!4612 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> d!40569 e!86938))

(declare-fun res!64195 () Bool)

(assert (=> d!40569 (=> (not res!64195) (not e!86938))))

(assert (=> d!40569 (= res!64195 (and (bvsge (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000000) (bvslt (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (size!2518 (_keys!4612 newMap!16)))))))

(assert (=> d!40569 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4612 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) lt!69686)))

(declare-fun b!133433 () Bool)

(declare-fun res!64196 () Bool)

(assert (=> b!133433 (=> (not res!64196) (not e!86938))))

(assert (=> b!133433 (= res!64196 (not (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))))))))

(declare-fun b!133436 () Bool)

(assert (=> b!133436 (= e!86937 (= (arrayCountValidKeys!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4612 newMap!16) #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!133434 () Bool)

(declare-fun res!64193 () Bool)

(assert (=> b!133434 (=> (not res!64193) (not e!86938))))

(assert (=> b!133434 (= res!64193 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!40569 res!64195) b!133433))

(assert (= (and b!133433 res!64196) b!133434))

(assert (= (and b!133434 res!64193) b!133435))

(assert (= (and d!40569 res!64194) b!133436))

(assert (=> d!40569 m!155841))

(declare-fun m!157201 () Bool)

(assert (=> d!40569 m!157201))

(declare-fun m!157203 () Bool)

(assert (=> b!133433 m!157203))

(assert (=> b!133433 m!157203))

(declare-fun m!157205 () Bool)

(assert (=> b!133433 m!157205))

(assert (=> b!133436 m!156563))

(assert (=> b!133436 m!156583))

(assert (=> b!133436 m!156035))

(assert (=> b!133434 m!155841))

(declare-fun m!157207 () Bool)

(assert (=> b!133434 m!157207))

(assert (=> d!40391 d!40569))

(declare-fun b!133437 () Bool)

(declare-fun e!86939 () (_ BitVec 32))

(declare-fun e!86940 () (_ BitVec 32))

(assert (=> b!133437 (= e!86939 e!86940)))

(declare-fun c!24743 () Bool)

(assert (=> b!133437 (= c!24743 (validKeyInArray!0 (select (arr!2248 lt!69449) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))

(declare-fun b!133438 () Bool)

(declare-fun call!14716 () (_ BitVec 32))

(assert (=> b!133438 (= e!86940 (bvadd #b00000000000000000000000000000001 call!14716))))

(declare-fun lt!69687 () (_ BitVec 32))

(declare-fun d!40571 () Bool)

(assert (=> d!40571 (and (bvsge lt!69687 #b00000000000000000000000000000000) (bvsle lt!69687 (bvsub (size!2518 lt!69449) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))

(assert (=> d!40571 (= lt!69687 e!86939)))

(declare-fun c!24742 () Bool)

(assert (=> d!40571 (= c!24742 (bvsge (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001)))))

(assert (=> d!40571 (and (bvsle (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001)) (bvsge (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001) (size!2518 lt!69449)))))

(assert (=> d!40571 (= (arrayCountValidKeys!0 lt!69449 (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001)) lt!69687)))

(declare-fun b!133439 () Bool)

(assert (=> b!133439 (= e!86940 call!14716)))

(declare-fun b!133440 () Bool)

(assert (=> b!133440 (= e!86939 #b00000000000000000000000000000000)))

(declare-fun bm!14713 () Bool)

(assert (=> bm!14713 (= call!14716 (arrayCountValidKeys!0 lt!69449 (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001) (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001)))))

(assert (= (and d!40571 c!24742) b!133440))

(assert (= (and d!40571 (not c!24742)) b!133437))

(assert (= (and b!133437 c!24743) b!133438))

(assert (= (and b!133437 (not c!24743)) b!133439))

(assert (= (or b!133438 b!133439) bm!14713))

(assert (=> b!133437 m!157045))

(assert (=> b!133437 m!157045))

(assert (=> b!133437 m!157047))

(declare-fun m!157209 () Bool)

(assert (=> bm!14713 m!157209))

(assert (=> d!40391 d!40571))

(declare-fun d!40573 () Bool)

(declare-fun res!64197 () Bool)

(declare-fun e!86941 () Bool)

(assert (=> d!40573 (=> res!64197 e!86941)))

(assert (=> d!40573 (= res!64197 (= (select (arr!2248 lt!69444) #b00000000000000000000000000000000) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> d!40573 (= (arrayContainsKey!0 lt!69444 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b00000000000000000000000000000000) e!86941)))

(declare-fun b!133441 () Bool)

(declare-fun e!86942 () Bool)

(assert (=> b!133441 (= e!86941 e!86942)))

(declare-fun res!64198 () Bool)

(assert (=> b!133441 (=> (not res!64198) (not e!86942))))

(assert (=> b!133441 (= res!64198 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 lt!69444)))))

(declare-fun b!133442 () Bool)

(assert (=> b!133442 (= e!86942 (arrayContainsKey!0 lt!69444 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40573 (not res!64197)) b!133441))

(assert (= (and b!133441 res!64198) b!133442))

(declare-fun m!157211 () Bool)

(assert (=> d!40573 m!157211))

(assert (=> b!133442 m!155841))

(declare-fun m!157213 () Bool)

(assert (=> b!133442 m!157213))

(assert (=> d!40391 d!40573))

(declare-fun d!40575 () Bool)

(declare-fun e!86943 () Bool)

(assert (=> d!40575 e!86943))

(declare-fun res!64199 () Bool)

(assert (=> d!40575 (=> res!64199 e!86943)))

(declare-fun lt!69689 () Bool)

(assert (=> d!40575 (= res!64199 (not lt!69689))))

(declare-fun lt!69691 () Bool)

(assert (=> d!40575 (= lt!69689 lt!69691)))

(declare-fun lt!69688 () Unit!4132)

(declare-fun e!86944 () Unit!4132)

(assert (=> d!40575 (= lt!69688 e!86944)))

(declare-fun c!24744 () Bool)

(assert (=> d!40575 (= c!24744 lt!69691)))

(assert (=> d!40575 (= lt!69691 (containsKey!174 (toList!851 lt!69331) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40575 (= (contains!886 lt!69331 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69689)))

(declare-fun b!133443 () Bool)

(declare-fun lt!69690 () Unit!4132)

(assert (=> b!133443 (= e!86944 lt!69690)))

(assert (=> b!133443 (= lt!69690 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69331) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> b!133443 (isDefined!124 (getValueByKey!170 (toList!851 lt!69331) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133444 () Bool)

(declare-fun Unit!4162 () Unit!4132)

(assert (=> b!133444 (= e!86944 Unit!4162)))

(declare-fun b!133445 () Bool)

(assert (=> b!133445 (= e!86943 (isDefined!124 (getValueByKey!170 (toList!851 lt!69331) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!40575 c!24744) b!133443))

(assert (= (and d!40575 (not c!24744)) b!133444))

(assert (= (and d!40575 (not res!64199)) b!133445))

(declare-fun m!157215 () Bool)

(assert (=> d!40575 m!157215))

(declare-fun m!157217 () Bool)

(assert (=> b!133443 m!157217))

(assert (=> b!133443 m!156423))

(assert (=> b!133443 m!156423))

(declare-fun m!157219 () Bool)

(assert (=> b!133443 m!157219))

(assert (=> b!133445 m!156423))

(assert (=> b!133445 m!156423))

(assert (=> b!133445 m!157219))

(assert (=> d!40367 d!40575))

(declare-fun d!40577 () Bool)

(declare-fun c!24745 () Bool)

(assert (=> d!40577 (= c!24745 (and ((_ is Cons!1706) lt!69329) (= (_1!1303 (h!2311 lt!69329)) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!86945 () Option!176)

(assert (=> d!40577 (= (getValueByKey!170 lt!69329 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!86945)))

(declare-fun e!86946 () Option!176)

(declare-fun b!133448 () Bool)

(assert (=> b!133448 (= e!86946 (getValueByKey!170 (t!6152 lt!69329) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133447 () Bool)

(assert (=> b!133447 (= e!86945 e!86946)))

(declare-fun c!24746 () Bool)

(assert (=> b!133447 (= c!24746 (and ((_ is Cons!1706) lt!69329) (not (= (_1!1303 (h!2311 lt!69329)) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!133446 () Bool)

(assert (=> b!133446 (= e!86945 (Some!175 (_2!1303 (h!2311 lt!69329))))))

(declare-fun b!133449 () Bool)

(assert (=> b!133449 (= e!86946 None!174)))

(assert (= (and d!40577 c!24745) b!133446))

(assert (= (and d!40577 (not c!24745)) b!133447))

(assert (= (and b!133447 c!24746) b!133448))

(assert (= (and b!133447 (not c!24746)) b!133449))

(declare-fun m!157221 () Bool)

(assert (=> b!133448 m!157221))

(assert (=> d!40367 d!40577))

(declare-fun d!40579 () Bool)

(assert (=> d!40579 (= (getValueByKey!170 lt!69329 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun lt!69692 () Unit!4132)

(assert (=> d!40579 (= lt!69692 (choose!834 lt!69329 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun e!86947 () Bool)

(assert (=> d!40579 e!86947))

(declare-fun res!64200 () Bool)

(assert (=> d!40579 (=> (not res!64200) (not e!86947))))

(assert (=> d!40579 (= res!64200 (isStrictlySorted!317 lt!69329))))

(assert (=> d!40579 (= (lemmaContainsTupThenGetReturnValue!88 lt!69329 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69692)))

(declare-fun b!133450 () Bool)

(declare-fun res!64201 () Bool)

(assert (=> b!133450 (=> (not res!64201) (not e!86947))))

(assert (=> b!133450 (= res!64201 (containsKey!174 lt!69329 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133451 () Bool)

(assert (=> b!133451 (= e!86947 (contains!889 lt!69329 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!40579 res!64200) b!133450))

(assert (= (and b!133450 res!64201) b!133451))

(assert (=> d!40579 m!156417))

(declare-fun m!157223 () Bool)

(assert (=> d!40579 m!157223))

(declare-fun m!157225 () Bool)

(assert (=> d!40579 m!157225))

(declare-fun m!157227 () Bool)

(assert (=> b!133450 m!157227))

(declare-fun m!157229 () Bool)

(assert (=> b!133451 m!157229))

(assert (=> d!40367 d!40579))

(declare-fun b!133452 () Bool)

(declare-fun e!86952 () List!1710)

(assert (=> b!133452 (= e!86952 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69179)) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133453 () Bool)

(declare-fun e!86951 () List!1710)

(declare-fun call!14719 () List!1710)

(assert (=> b!133453 (= e!86951 call!14719)))

(declare-fun b!133454 () Bool)

(declare-fun res!64203 () Bool)

(declare-fun e!86949 () Bool)

(assert (=> b!133454 (=> (not res!64203) (not e!86949))))

(declare-fun lt!69693 () List!1710)

(assert (=> b!133454 (= res!64203 (containsKey!174 lt!69693 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun bm!14714 () Bool)

(declare-fun c!24748 () Bool)

(assert (=> bm!14714 (= call!14719 ($colon$colon!91 e!86952 (ite c!24748 (h!2311 (toList!851 lt!69179)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun c!24749 () Bool)

(assert (=> bm!14714 (= c!24749 c!24748)))

(declare-fun c!24750 () Bool)

(declare-fun c!24747 () Bool)

(declare-fun b!133455 () Bool)

(assert (=> b!133455 (= e!86952 (ite c!24747 (t!6152 (toList!851 lt!69179)) (ite c!24750 (Cons!1706 (h!2311 (toList!851 lt!69179)) (t!6152 (toList!851 lt!69179))) Nil!1707)))))

(declare-fun d!40581 () Bool)

(assert (=> d!40581 e!86949))

(declare-fun res!64202 () Bool)

(assert (=> d!40581 (=> (not res!64202) (not e!86949))))

(assert (=> d!40581 (= res!64202 (isStrictlySorted!317 lt!69693))))

(assert (=> d!40581 (= lt!69693 e!86951)))

(assert (=> d!40581 (= c!24748 (and ((_ is Cons!1706) (toList!851 lt!69179)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69179))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!40581 (isStrictlySorted!317 (toList!851 lt!69179))))

(assert (=> d!40581 (= (insertStrictlySorted!91 (toList!851 lt!69179) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69693)))

(declare-fun b!133456 () Bool)

(declare-fun e!86948 () List!1710)

(assert (=> b!133456 (= e!86951 e!86948)))

(assert (=> b!133456 (= c!24747 (and ((_ is Cons!1706) (toList!851 lt!69179)) (= (_1!1303 (h!2311 (toList!851 lt!69179))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!133457 () Bool)

(declare-fun e!86950 () List!1710)

(declare-fun call!14717 () List!1710)

(assert (=> b!133457 (= e!86950 call!14717)))

(declare-fun b!133458 () Bool)

(declare-fun call!14718 () List!1710)

(assert (=> b!133458 (= e!86948 call!14718)))

(declare-fun b!133459 () Bool)

(assert (=> b!133459 (= e!86949 (contains!889 lt!69693 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun bm!14715 () Bool)

(assert (=> bm!14715 (= call!14718 call!14719)))

(declare-fun bm!14716 () Bool)

(assert (=> bm!14716 (= call!14717 call!14718)))

(declare-fun b!133460 () Bool)

(assert (=> b!133460 (= c!24750 (and ((_ is Cons!1706) (toList!851 lt!69179)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69179))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> b!133460 (= e!86948 e!86950)))

(declare-fun b!133461 () Bool)

(assert (=> b!133461 (= e!86950 call!14717)))

(assert (= (and d!40581 c!24748) b!133453))

(assert (= (and d!40581 (not c!24748)) b!133456))

(assert (= (and b!133456 c!24747) b!133458))

(assert (= (and b!133456 (not c!24747)) b!133460))

(assert (= (and b!133460 c!24750) b!133461))

(assert (= (and b!133460 (not c!24750)) b!133457))

(assert (= (or b!133461 b!133457) bm!14716))

(assert (= (or b!133458 bm!14716) bm!14715))

(assert (= (or b!133453 bm!14715) bm!14714))

(assert (= (and bm!14714 c!24749) b!133452))

(assert (= (and bm!14714 (not c!24749)) b!133455))

(assert (= (and d!40581 res!64202) b!133454))

(assert (= (and b!133454 res!64203) b!133459))

(declare-fun m!157231 () Bool)

(assert (=> b!133459 m!157231))

(declare-fun m!157233 () Bool)

(assert (=> b!133454 m!157233))

(declare-fun m!157235 () Bool)

(assert (=> b!133452 m!157235))

(declare-fun m!157237 () Bool)

(assert (=> d!40581 m!157237))

(declare-fun m!157239 () Bool)

(assert (=> d!40581 m!157239))

(declare-fun m!157241 () Bool)

(assert (=> bm!14714 m!157241))

(assert (=> d!40367 d!40581))

(declare-fun b!133462 () Bool)

(assert (=> b!133462 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> b!133462 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2519 (_values!2847 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun e!86953 () Bool)

(declare-fun lt!69696 () ListLongMap!1671)

(assert (=> b!133462 (= e!86953 (= (apply!116 lt!69696 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!14717 () Bool)

(declare-fun call!14720 () ListLongMap!1671)

(assert (=> bm!14717 (= call!14720 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!133463 () Bool)

(declare-fun e!86956 () ListLongMap!1671)

(assert (=> b!133463 (= e!86956 call!14720)))

(declare-fun b!133464 () Bool)

(declare-fun e!86958 () Bool)

(declare-fun e!86955 () Bool)

(assert (=> b!133464 (= e!86958 e!86955)))

(declare-fun c!24754 () Bool)

(assert (=> b!133464 (= c!24754 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!133465 () Bool)

(assert (=> b!133465 (= e!86955 (isEmpty!414 lt!69696))))

(declare-fun b!133466 () Bool)

(declare-fun e!86959 () Bool)

(assert (=> b!133466 (= e!86959 e!86958)))

(declare-fun c!24751 () Bool)

(declare-fun e!86954 () Bool)

(assert (=> b!133466 (= c!24751 e!86954)))

(declare-fun res!64206 () Bool)

(assert (=> b!133466 (=> (not res!64206) (not e!86954))))

(assert (=> b!133466 (= res!64206 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!133467 () Bool)

(assert (=> b!133467 (= e!86954 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!133467 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!133468 () Bool)

(declare-fun lt!69695 () Unit!4132)

(declare-fun lt!69700 () Unit!4132)

(assert (=> b!133468 (= lt!69695 lt!69700)))

(declare-fun lt!69697 () (_ BitVec 64))

(declare-fun lt!69699 () (_ BitVec 64))

(declare-fun lt!69698 () V!3481)

(declare-fun lt!69694 () ListLongMap!1671)

(assert (=> b!133468 (not (contains!886 (+!163 lt!69694 (tuple2!2585 lt!69697 lt!69698)) lt!69699))))

(assert (=> b!133468 (= lt!69700 (addStillNotContains!62 lt!69694 lt!69697 lt!69698 lt!69699))))

(assert (=> b!133468 (= lt!69699 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133468 (= lt!69698 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133468 (= lt!69697 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!133468 (= lt!69694 call!14720)))

(assert (=> b!133468 (= e!86956 (+!163 call!14720 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133469 () Bool)

(declare-fun e!86957 () ListLongMap!1671)

(assert (=> b!133469 (= e!86957 e!86956)))

(declare-fun c!24752 () Bool)

(assert (=> b!133469 (= c!24752 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!133470 () Bool)

(assert (=> b!133470 (= e!86957 (ListLongMap!1672 Nil!1707))))

(declare-fun d!40583 () Bool)

(assert (=> d!40583 e!86959))

(declare-fun res!64205 () Bool)

(assert (=> d!40583 (=> (not res!64205) (not e!86959))))

(assert (=> d!40583 (= res!64205 (not (contains!886 lt!69696 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40583 (= lt!69696 e!86957)))

(declare-fun c!24753 () Bool)

(assert (=> d!40583 (= c!24753 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!40583 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!40583 (= (getCurrentListMapNoExtraKeys!128 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992)))) lt!69696)))

(declare-fun b!133471 () Bool)

(assert (=> b!133471 (= e!86955 (= lt!69696 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!133472 () Bool)

(declare-fun res!64207 () Bool)

(assert (=> b!133472 (=> (not res!64207) (not e!86959))))

(assert (=> b!133472 (= res!64207 (not (contains!886 lt!69696 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133473 () Bool)

(assert (=> b!133473 (= e!86958 e!86953)))

(assert (=> b!133473 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun res!64204 () Bool)

(assert (=> b!133473 (= res!64204 (contains!886 lt!69696 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!133473 (=> (not res!64204) (not e!86953))))

(assert (= (and d!40583 c!24753) b!133470))

(assert (= (and d!40583 (not c!24753)) b!133469))

(assert (= (and b!133469 c!24752) b!133468))

(assert (= (and b!133469 (not c!24752)) b!133463))

(assert (= (or b!133468 b!133463) bm!14717))

(assert (= (and d!40583 res!64205) b!133472))

(assert (= (and b!133472 res!64207) b!133466))

(assert (= (and b!133466 res!64206) b!133467))

(assert (= (and b!133466 c!24751) b!133473))

(assert (= (and b!133466 (not c!24751)) b!133464))

(assert (= (and b!133473 res!64204) b!133462))

(assert (= (and b!133464 c!24754) b!133471))

(assert (= (and b!133464 (not c!24754)) b!133465))

(declare-fun b_lambda!5929 () Bool)

(assert (=> (not b_lambda!5929) (not b!133462)))

(assert (=> b!133462 t!6149))

(declare-fun b_and!8249 () Bool)

(assert (= b_and!8245 (and (=> t!6149 result!3973) b_and!8249)))

(assert (=> b!133462 t!6151))

(declare-fun b_and!8251 () Bool)

(assert (= b_and!8247 (and (=> t!6151 result!3977) b_and!8251)))

(declare-fun b_lambda!5931 () Bool)

(assert (=> (not b_lambda!5931) (not b!133468)))

(assert (=> b!133468 t!6149))

(declare-fun b_and!8253 () Bool)

(assert (= b_and!8249 (and (=> t!6149 result!3973) b_and!8253)))

(assert (=> b!133468 t!6151))

(declare-fun b_and!8255 () Bool)

(assert (= b_and!8251 (and (=> t!6151 result!3977) b_and!8255)))

(declare-fun m!157243 () Bool)

(assert (=> b!133467 m!157243))

(assert (=> b!133467 m!157243))

(declare-fun m!157245 () Bool)

(assert (=> b!133467 m!157245))

(declare-fun m!157247 () Bool)

(assert (=> b!133472 m!157247))

(declare-fun m!157249 () Bool)

(assert (=> b!133468 m!157249))

(declare-fun m!157251 () Bool)

(assert (=> b!133468 m!157251))

(assert (=> b!133468 m!157243))

(assert (=> b!133468 m!157249))

(assert (=> b!133468 m!155837))

(declare-fun m!157253 () Bool)

(assert (=> b!133468 m!157253))

(declare-fun m!157255 () Bool)

(assert (=> b!133468 m!157255))

(declare-fun m!157257 () Bool)

(assert (=> b!133468 m!157257))

(assert (=> b!133468 m!155837))

(declare-fun m!157259 () Bool)

(assert (=> b!133468 m!157259))

(assert (=> b!133468 m!157255))

(declare-fun m!157261 () Bool)

(assert (=> b!133471 m!157261))

(assert (=> b!133473 m!157243))

(assert (=> b!133473 m!157243))

(declare-fun m!157263 () Bool)

(assert (=> b!133473 m!157263))

(declare-fun m!157265 () Bool)

(assert (=> b!133465 m!157265))

(assert (=> bm!14717 m!157261))

(declare-fun m!157267 () Bool)

(assert (=> d!40583 m!157267))

(assert (=> d!40583 m!155855))

(assert (=> b!133469 m!157243))

(assert (=> b!133469 m!157243))

(assert (=> b!133469 m!157245))

(assert (=> b!133462 m!157249))

(assert (=> b!133462 m!157243))

(assert (=> b!133462 m!157249))

(assert (=> b!133462 m!155837))

(assert (=> b!133462 m!157253))

(assert (=> b!133462 m!155837))

(assert (=> b!133462 m!157243))

(declare-fun m!157269 () Bool)

(assert (=> b!133462 m!157269))

(assert (=> b!132915 d!40583))

(declare-fun d!40585 () Bool)

(declare-fun e!86960 () Bool)

(assert (=> d!40585 e!86960))

(declare-fun res!64208 () Bool)

(assert (=> d!40585 (=> res!64208 e!86960)))

(declare-fun lt!69702 () Bool)

(assert (=> d!40585 (= res!64208 (not lt!69702))))

(declare-fun lt!69704 () Bool)

(assert (=> d!40585 (= lt!69702 lt!69704)))

(declare-fun lt!69701 () Unit!4132)

(declare-fun e!86961 () Unit!4132)

(assert (=> d!40585 (= lt!69701 e!86961)))

(declare-fun c!24755 () Bool)

(assert (=> d!40585 (= c!24755 lt!69704)))

(assert (=> d!40585 (= lt!69704 (containsKey!174 (toList!851 lt!69250) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40585 (= (contains!886 lt!69250 #b1000000000000000000000000000000000000000000000000000000000000000) lt!69702)))

(declare-fun b!133474 () Bool)

(declare-fun lt!69703 () Unit!4132)

(assert (=> b!133474 (= e!86961 lt!69703)))

(assert (=> b!133474 (= lt!69703 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69250) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133474 (isDefined!124 (getValueByKey!170 (toList!851 lt!69250) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133475 () Bool)

(declare-fun Unit!4163 () Unit!4132)

(assert (=> b!133475 (= e!86961 Unit!4163)))

(declare-fun b!133476 () Bool)

(assert (=> b!133476 (= e!86960 (isDefined!124 (getValueByKey!170 (toList!851 lt!69250) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40585 c!24755) b!133474))

(assert (= (and d!40585 (not c!24755)) b!133475))

(assert (= (and d!40585 (not res!64208)) b!133476))

(declare-fun m!157271 () Bool)

(assert (=> d!40585 m!157271))

(declare-fun m!157273 () Bool)

(assert (=> b!133474 m!157273))

(declare-fun m!157275 () Bool)

(assert (=> b!133474 m!157275))

(assert (=> b!133474 m!157275))

(declare-fun m!157277 () Bool)

(assert (=> b!133474 m!157277))

(assert (=> b!133476 m!157275))

(assert (=> b!133476 m!157275))

(assert (=> b!133476 m!157277))

(assert (=> bm!14635 d!40585))

(declare-fun d!40587 () Bool)

(declare-fun e!86962 () Bool)

(assert (=> d!40587 e!86962))

(declare-fun res!64209 () Bool)

(assert (=> d!40587 (=> res!64209 e!86962)))

(declare-fun lt!69706 () Bool)

(assert (=> d!40587 (= res!64209 (not lt!69706))))

(declare-fun lt!69708 () Bool)

(assert (=> d!40587 (= lt!69706 lt!69708)))

(declare-fun lt!69705 () Unit!4132)

(declare-fun e!86963 () Unit!4132)

(assert (=> d!40587 (= lt!69705 e!86963)))

(declare-fun c!24756 () Bool)

(assert (=> d!40587 (= c!24756 lt!69708)))

(assert (=> d!40587 (= lt!69708 (containsKey!174 (toList!851 lt!69220) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40587 (= (contains!886 lt!69220 #b1000000000000000000000000000000000000000000000000000000000000000) lt!69706)))

(declare-fun b!133477 () Bool)

(declare-fun lt!69707 () Unit!4132)

(assert (=> b!133477 (= e!86963 lt!69707)))

(assert (=> b!133477 (= lt!69707 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69220) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133477 (isDefined!124 (getValueByKey!170 (toList!851 lt!69220) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133478 () Bool)

(declare-fun Unit!4164 () Unit!4132)

(assert (=> b!133478 (= e!86963 Unit!4164)))

(declare-fun b!133479 () Bool)

(assert (=> b!133479 (= e!86962 (isDefined!124 (getValueByKey!170 (toList!851 lt!69220) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40587 c!24756) b!133477))

(assert (= (and d!40587 (not c!24756)) b!133478))

(assert (= (and d!40587 (not res!64209)) b!133479))

(declare-fun m!157279 () Bool)

(assert (=> d!40587 m!157279))

(declare-fun m!157281 () Bool)

(assert (=> b!133477 m!157281))

(declare-fun m!157283 () Bool)

(assert (=> b!133477 m!157283))

(assert (=> b!133477 m!157283))

(declare-fun m!157285 () Bool)

(assert (=> b!133477 m!157285))

(assert (=> b!133479 m!157283))

(assert (=> b!133479 m!157283))

(assert (=> b!133479 m!157285))

(assert (=> bm!14628 d!40587))

(declare-fun d!40589 () Bool)

(assert (=> d!40589 (= (apply!116 (+!163 lt!69477 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69488) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69477 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69488)))))

(declare-fun bs!5500 () Bool)

(assert (= bs!5500 d!40589))

(declare-fun m!157287 () Bool)

(assert (=> bs!5500 m!157287))

(assert (=> bs!5500 m!157287))

(declare-fun m!157289 () Bool)

(assert (=> bs!5500 m!157289))

(assert (=> b!133055 d!40589))

(declare-fun d!40591 () Bool)

(assert (=> d!40591 (= (apply!116 lt!69468 lt!69472) (get!1482 (getValueByKey!170 (toList!851 lt!69468) lt!69472)))))

(declare-fun bs!5501 () Bool)

(assert (= bs!5501 d!40591))

(declare-fun m!157291 () Bool)

(assert (=> bs!5501 m!157291))

(assert (=> bs!5501 m!157291))

(declare-fun m!157293 () Bool)

(assert (=> bs!5501 m!157293))

(assert (=> b!133055 d!40591))

(declare-fun d!40593 () Bool)

(assert (=> d!40593 (= (apply!116 (+!163 lt!69470 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69475) (apply!116 lt!69470 lt!69475))))

(declare-fun lt!69709 () Unit!4132)

(assert (=> d!40593 (= lt!69709 (choose!828 lt!69470 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69475))))

(declare-fun e!86964 () Bool)

(assert (=> d!40593 e!86964))

(declare-fun res!64210 () Bool)

(assert (=> d!40593 (=> (not res!64210) (not e!86964))))

(assert (=> d!40593 (= res!64210 (contains!886 lt!69470 lt!69475))))

(assert (=> d!40593 (= (addApplyDifferent!92 lt!69470 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69475) lt!69709)))

(declare-fun b!133480 () Bool)

(assert (=> b!133480 (= e!86964 (not (= lt!69475 lt!69487)))))

(assert (= (and d!40593 res!64210) b!133480))

(assert (=> d!40593 m!156633))

(assert (=> d!40593 m!156635))

(declare-fun m!157295 () Bool)

(assert (=> d!40593 m!157295))

(assert (=> d!40593 m!156643))

(declare-fun m!157297 () Bool)

(assert (=> d!40593 m!157297))

(assert (=> d!40593 m!156633))

(assert (=> b!133055 d!40593))

(declare-fun d!40595 () Bool)

(declare-fun e!86965 () Bool)

(assert (=> d!40595 e!86965))

(declare-fun res!64212 () Bool)

(assert (=> d!40595 (=> (not res!64212) (not e!86965))))

(declare-fun lt!69712 () ListLongMap!1671)

(assert (=> d!40595 (= res!64212 (contains!886 lt!69712 (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun lt!69710 () List!1710)

(assert (=> d!40595 (= lt!69712 (ListLongMap!1672 lt!69710))))

(declare-fun lt!69713 () Unit!4132)

(declare-fun lt!69711 () Unit!4132)

(assert (=> d!40595 (= lt!69713 lt!69711)))

(assert (=> d!40595 (= (getValueByKey!170 lt!69710 (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!40595 (= lt!69711 (lemmaContainsTupThenGetReturnValue!88 lt!69710 (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!40595 (= lt!69710 (insertStrictlySorted!91 (toList!851 lt!69477) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!40595 (= (+!163 lt!69477 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69712)))

(declare-fun b!133481 () Bool)

(declare-fun res!64211 () Bool)

(assert (=> b!133481 (=> (not res!64211) (not e!86965))))

(assert (=> b!133481 (= res!64211 (= (getValueByKey!170 (toList!851 lt!69712) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!133482 () Bool)

(assert (=> b!133482 (= e!86965 (contains!889 (toList!851 lt!69712) (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(assert (= (and d!40595 res!64212) b!133481))

(assert (= (and b!133481 res!64211) b!133482))

(declare-fun m!157299 () Bool)

(assert (=> d!40595 m!157299))

(declare-fun m!157301 () Bool)

(assert (=> d!40595 m!157301))

(declare-fun m!157303 () Bool)

(assert (=> d!40595 m!157303))

(declare-fun m!157305 () Bool)

(assert (=> d!40595 m!157305))

(declare-fun m!157307 () Bool)

(assert (=> b!133481 m!157307))

(declare-fun m!157309 () Bool)

(assert (=> b!133482 m!157309))

(assert (=> b!133055 d!40595))

(declare-fun d!40597 () Bool)

(assert (=> d!40597 (= (apply!116 (+!163 lt!69470 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69475) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69470 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69475)))))

(declare-fun bs!5502 () Bool)

(assert (= bs!5502 d!40597))

(declare-fun m!157311 () Bool)

(assert (=> bs!5502 m!157311))

(assert (=> bs!5502 m!157311))

(declare-fun m!157313 () Bool)

(assert (=> bs!5502 m!157313))

(assert (=> b!133055 d!40597))

(declare-fun d!40599 () Bool)

(assert (=> d!40599 (= (apply!116 lt!69477 lt!69488) (get!1482 (getValueByKey!170 (toList!851 lt!69477) lt!69488)))))

(declare-fun bs!5503 () Bool)

(assert (= bs!5503 d!40599))

(declare-fun m!157315 () Bool)

(assert (=> bs!5503 m!157315))

(assert (=> bs!5503 m!157315))

(declare-fun m!157317 () Bool)

(assert (=> bs!5503 m!157317))

(assert (=> b!133055 d!40599))

(declare-fun d!40601 () Bool)

(assert (=> d!40601 (contains!886 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69480)))

(declare-fun lt!69714 () Unit!4132)

(assert (=> d!40601 (= lt!69714 (choose!829 lt!69474 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69480))))

(assert (=> d!40601 (contains!886 lt!69474 lt!69480)))

(assert (=> d!40601 (= (addStillContains!92 lt!69474 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69480) lt!69714)))

(declare-fun bs!5504 () Bool)

(assert (= bs!5504 d!40601))

(assert (=> bs!5504 m!156625))

(assert (=> bs!5504 m!156625))

(assert (=> bs!5504 m!156637))

(declare-fun m!157319 () Bool)

(assert (=> bs!5504 m!157319))

(declare-fun m!157321 () Bool)

(assert (=> bs!5504 m!157321))

(assert (=> b!133055 d!40601))

(declare-fun d!40603 () Bool)

(assert (=> d!40603 (= (apply!116 (+!163 lt!69468 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69472) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69468 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69472)))))

(declare-fun bs!5505 () Bool)

(assert (= bs!5505 d!40603))

(declare-fun m!157323 () Bool)

(assert (=> bs!5505 m!157323))

(assert (=> bs!5505 m!157323))

(declare-fun m!157325 () Bool)

(assert (=> bs!5505 m!157325))

(assert (=> b!133055 d!40603))

(declare-fun d!40605 () Bool)

(declare-fun e!86966 () Bool)

(assert (=> d!40605 e!86966))

(declare-fun res!64213 () Bool)

(assert (=> d!40605 (=> res!64213 e!86966)))

(declare-fun lt!69716 () Bool)

(assert (=> d!40605 (= res!64213 (not lt!69716))))

(declare-fun lt!69718 () Bool)

(assert (=> d!40605 (= lt!69716 lt!69718)))

(declare-fun lt!69715 () Unit!4132)

(declare-fun e!86967 () Unit!4132)

(assert (=> d!40605 (= lt!69715 e!86967)))

(declare-fun c!24757 () Bool)

(assert (=> d!40605 (= c!24757 lt!69718)))

(assert (=> d!40605 (= lt!69718 (containsKey!174 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69480))))

(assert (=> d!40605 (= (contains!886 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69480) lt!69716)))

(declare-fun b!133483 () Bool)

(declare-fun lt!69717 () Unit!4132)

(assert (=> b!133483 (= e!86967 lt!69717)))

(assert (=> b!133483 (= lt!69717 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69480))))

(assert (=> b!133483 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69480))))

(declare-fun b!133484 () Bool)

(declare-fun Unit!4165 () Unit!4132)

(assert (=> b!133484 (= e!86967 Unit!4165)))

(declare-fun b!133485 () Bool)

(assert (=> b!133485 (= e!86966 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69480)))))

(assert (= (and d!40605 c!24757) b!133483))

(assert (= (and d!40605 (not c!24757)) b!133484))

(assert (= (and d!40605 (not res!64213)) b!133485))

(declare-fun m!157327 () Bool)

(assert (=> d!40605 m!157327))

(declare-fun m!157329 () Bool)

(assert (=> b!133483 m!157329))

(declare-fun m!157331 () Bool)

(assert (=> b!133483 m!157331))

(assert (=> b!133483 m!157331))

(declare-fun m!157333 () Bool)

(assert (=> b!133483 m!157333))

(assert (=> b!133485 m!157331))

(assert (=> b!133485 m!157331))

(assert (=> b!133485 m!157333))

(assert (=> b!133055 d!40605))

(declare-fun d!40607 () Bool)

(declare-fun e!86968 () Bool)

(assert (=> d!40607 e!86968))

(declare-fun res!64215 () Bool)

(assert (=> d!40607 (=> (not res!64215) (not e!86968))))

(declare-fun lt!69721 () ListLongMap!1671)

(assert (=> d!40607 (= res!64215 (contains!886 lt!69721 (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun lt!69719 () List!1710)

(assert (=> d!40607 (= lt!69721 (ListLongMap!1672 lt!69719))))

(declare-fun lt!69722 () Unit!4132)

(declare-fun lt!69720 () Unit!4132)

(assert (=> d!40607 (= lt!69722 lt!69720)))

(assert (=> d!40607 (= (getValueByKey!170 lt!69719 (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!40607 (= lt!69720 (lemmaContainsTupThenGetReturnValue!88 lt!69719 (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!40607 (= lt!69719 (insertStrictlySorted!91 (toList!851 lt!69470) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!40607 (= (+!163 lt!69470 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69721)))

(declare-fun b!133486 () Bool)

(declare-fun res!64214 () Bool)

(assert (=> b!133486 (=> (not res!64214) (not e!86968))))

(assert (=> b!133486 (= res!64214 (= (getValueByKey!170 (toList!851 lt!69721) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!133487 () Bool)

(assert (=> b!133487 (= e!86968 (contains!889 (toList!851 lt!69721) (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(assert (= (and d!40607 res!64215) b!133486))

(assert (= (and b!133486 res!64214) b!133487))

(declare-fun m!157335 () Bool)

(assert (=> d!40607 m!157335))

(declare-fun m!157337 () Bool)

(assert (=> d!40607 m!157337))

(declare-fun m!157339 () Bool)

(assert (=> d!40607 m!157339))

(declare-fun m!157341 () Bool)

(assert (=> d!40607 m!157341))

(declare-fun m!157343 () Bool)

(assert (=> b!133486 m!157343))

(declare-fun m!157345 () Bool)

(assert (=> b!133487 m!157345))

(assert (=> b!133055 d!40607))

(declare-fun d!40609 () Bool)

(assert (=> d!40609 (= (apply!116 (+!163 lt!69477 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69488) (apply!116 lt!69477 lt!69488))))

(declare-fun lt!69723 () Unit!4132)

(assert (=> d!40609 (= lt!69723 (choose!828 lt!69477 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69488))))

(declare-fun e!86969 () Bool)

(assert (=> d!40609 e!86969))

(declare-fun res!64216 () Bool)

(assert (=> d!40609 (=> (not res!64216) (not e!86969))))

(assert (=> d!40609 (= res!64216 (contains!886 lt!69477 lt!69488))))

(assert (=> d!40609 (= (addApplyDifferent!92 lt!69477 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69488) lt!69723)))

(declare-fun b!133488 () Bool)

(assert (=> b!133488 (= e!86969 (not (= lt!69488 lt!69478)))))

(assert (= (and d!40609 res!64216) b!133488))

(assert (=> d!40609 m!156627))

(assert (=> d!40609 m!156649))

(declare-fun m!157347 () Bool)

(assert (=> d!40609 m!157347))

(assert (=> d!40609 m!156647))

(declare-fun m!157349 () Bool)

(assert (=> d!40609 m!157349))

(assert (=> d!40609 m!156627))

(assert (=> b!133055 d!40609))

(declare-fun d!40611 () Bool)

(assert (=> d!40611 (= (apply!116 lt!69470 lt!69475) (get!1482 (getValueByKey!170 (toList!851 lt!69470) lt!69475)))))

(declare-fun bs!5506 () Bool)

(assert (= bs!5506 d!40611))

(declare-fun m!157351 () Bool)

(assert (=> bs!5506 m!157351))

(assert (=> bs!5506 m!157351))

(declare-fun m!157353 () Bool)

(assert (=> bs!5506 m!157353))

(assert (=> b!133055 d!40611))

(declare-fun d!40613 () Bool)

(declare-fun e!86970 () Bool)

(assert (=> d!40613 e!86970))

(declare-fun res!64218 () Bool)

(assert (=> d!40613 (=> (not res!64218) (not e!86970))))

(declare-fun lt!69726 () ListLongMap!1671)

(assert (=> d!40613 (= res!64218 (contains!886 lt!69726 (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun lt!69724 () List!1710)

(assert (=> d!40613 (= lt!69726 (ListLongMap!1672 lt!69724))))

(declare-fun lt!69727 () Unit!4132)

(declare-fun lt!69725 () Unit!4132)

(assert (=> d!40613 (= lt!69727 lt!69725)))

(assert (=> d!40613 (= (getValueByKey!170 lt!69724 (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) (Some!175 (_2!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!40613 (= lt!69725 (lemmaContainsTupThenGetReturnValue!88 lt!69724 (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!40613 (= lt!69724 (insertStrictlySorted!91 (toList!851 lt!69468) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!40613 (= (+!163 lt!69468 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69726)))

(declare-fun b!133489 () Bool)

(declare-fun res!64217 () Bool)

(assert (=> b!133489 (=> (not res!64217) (not e!86970))))

(assert (=> b!133489 (= res!64217 (= (getValueByKey!170 (toList!851 lt!69726) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) (Some!175 (_2!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun b!133490 () Bool)

(assert (=> b!133490 (= e!86970 (contains!889 (toList!851 lt!69726) (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(assert (= (and d!40613 res!64218) b!133489))

(assert (= (and b!133489 res!64217) b!133490))

(declare-fun m!157355 () Bool)

(assert (=> d!40613 m!157355))

(declare-fun m!157357 () Bool)

(assert (=> d!40613 m!157357))

(declare-fun m!157359 () Bool)

(assert (=> d!40613 m!157359))

(declare-fun m!157361 () Bool)

(assert (=> d!40613 m!157361))

(declare-fun m!157363 () Bool)

(assert (=> b!133489 m!157363))

(declare-fun m!157365 () Bool)

(assert (=> b!133490 m!157365))

(assert (=> b!133055 d!40613))

(declare-fun d!40615 () Bool)

(assert (=> d!40615 (= (apply!116 (+!163 lt!69468 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69472) (apply!116 lt!69468 lt!69472))))

(declare-fun lt!69728 () Unit!4132)

(assert (=> d!40615 (= lt!69728 (choose!828 lt!69468 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69472))))

(declare-fun e!86971 () Bool)

(assert (=> d!40615 e!86971))

(declare-fun res!64219 () Bool)

(assert (=> d!40615 (=> (not res!64219) (not e!86971))))

(assert (=> d!40615 (= res!64219 (contains!886 lt!69468 lt!69472))))

(assert (=> d!40615 (= (addApplyDifferent!92 lt!69468 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69472) lt!69728)))

(declare-fun b!133491 () Bool)

(assert (=> b!133491 (= e!86971 (not (= lt!69472 lt!69469)))))

(assert (= (and d!40615 res!64219) b!133491))

(assert (=> d!40615 m!156621))

(assert (=> d!40615 m!156629))

(declare-fun m!157367 () Bool)

(assert (=> d!40615 m!157367))

(assert (=> d!40615 m!156631))

(declare-fun m!157369 () Bool)

(assert (=> d!40615 m!157369))

(assert (=> d!40615 m!156621))

(assert (=> b!133055 d!40615))

(declare-fun d!40617 () Bool)

(declare-fun e!86972 () Bool)

(assert (=> d!40617 e!86972))

(declare-fun res!64221 () Bool)

(assert (=> d!40617 (=> (not res!64221) (not e!86972))))

(declare-fun lt!69731 () ListLongMap!1671)

(assert (=> d!40617 (= res!64221 (contains!886 lt!69731 (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun lt!69729 () List!1710)

(assert (=> d!40617 (= lt!69731 (ListLongMap!1672 lt!69729))))

(declare-fun lt!69732 () Unit!4132)

(declare-fun lt!69730 () Unit!4132)

(assert (=> d!40617 (= lt!69732 lt!69730)))

(assert (=> d!40617 (= (getValueByKey!170 lt!69729 (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) (Some!175 (_2!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!40617 (= lt!69730 (lemmaContainsTupThenGetReturnValue!88 lt!69729 (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!40617 (= lt!69729 (insertStrictlySorted!91 (toList!851 lt!69474) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!40617 (= (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69731)))

(declare-fun b!133492 () Bool)

(declare-fun res!64220 () Bool)

(assert (=> b!133492 (=> (not res!64220) (not e!86972))))

(assert (=> b!133492 (= res!64220 (= (getValueByKey!170 (toList!851 lt!69731) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) (Some!175 (_2!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun b!133493 () Bool)

(assert (=> b!133493 (= e!86972 (contains!889 (toList!851 lt!69731) (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(assert (= (and d!40617 res!64221) b!133492))

(assert (= (and b!133492 res!64220) b!133493))

(declare-fun m!157371 () Bool)

(assert (=> d!40617 m!157371))

(declare-fun m!157373 () Bool)

(assert (=> d!40617 m!157373))

(declare-fun m!157375 () Bool)

(assert (=> d!40617 m!157375))

(declare-fun m!157377 () Bool)

(assert (=> d!40617 m!157377))

(declare-fun m!157379 () Bool)

(assert (=> b!133492 m!157379))

(declare-fun m!157381 () Bool)

(assert (=> b!133493 m!157381))

(assert (=> b!133055 d!40617))

(declare-fun b!133494 () Bool)

(assert (=> b!133494 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> b!133494 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (_values!2847 newMap!16))))))

(declare-fun e!86973 () Bool)

(declare-fun lt!69735 () ListLongMap!1671)

(assert (=> b!133494 (= e!86973 (= (apply!116 lt!69735 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun call!14721 () ListLongMap!1671)

(declare-fun bm!14718 () Bool)

(assert (=> bm!14718 (= call!14721 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!133495 () Bool)

(declare-fun e!86976 () ListLongMap!1671)

(assert (=> b!133495 (= e!86976 call!14721)))

(declare-fun b!133496 () Bool)

(declare-fun e!86978 () Bool)

(declare-fun e!86975 () Bool)

(assert (=> b!133496 (= e!86978 e!86975)))

(declare-fun c!24761 () Bool)

(assert (=> b!133496 (= c!24761 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133497 () Bool)

(assert (=> b!133497 (= e!86975 (isEmpty!414 lt!69735))))

(declare-fun b!133498 () Bool)

(declare-fun e!86979 () Bool)

(assert (=> b!133498 (= e!86979 e!86978)))

(declare-fun c!24758 () Bool)

(declare-fun e!86974 () Bool)

(assert (=> b!133498 (= c!24758 e!86974)))

(declare-fun res!64224 () Bool)

(assert (=> b!133498 (=> (not res!64224) (not e!86974))))

(assert (=> b!133498 (= res!64224 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133499 () Bool)

(assert (=> b!133499 (= e!86974 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133499 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!133500 () Bool)

(declare-fun lt!69734 () Unit!4132)

(declare-fun lt!69739 () Unit!4132)

(assert (=> b!133500 (= lt!69734 lt!69739)))

(declare-fun lt!69738 () (_ BitVec 64))

(declare-fun lt!69736 () (_ BitVec 64))

(declare-fun lt!69733 () ListLongMap!1671)

(declare-fun lt!69737 () V!3481)

(assert (=> b!133500 (not (contains!886 (+!163 lt!69733 (tuple2!2585 lt!69736 lt!69737)) lt!69738))))

(assert (=> b!133500 (= lt!69739 (addStillNotContains!62 lt!69733 lt!69736 lt!69737 lt!69738))))

(assert (=> b!133500 (= lt!69738 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133500 (= lt!69737 (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133500 (= lt!69736 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133500 (= lt!69733 call!14721)))

(assert (=> b!133500 (= e!86976 (+!163 call!14721 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133501 () Bool)

(declare-fun e!86977 () ListLongMap!1671)

(assert (=> b!133501 (= e!86977 e!86976)))

(declare-fun c!24759 () Bool)

(assert (=> b!133501 (= c!24759 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133502 () Bool)

(assert (=> b!133502 (= e!86977 (ListLongMap!1672 Nil!1707))))

(declare-fun d!40619 () Bool)

(assert (=> d!40619 e!86979))

(declare-fun res!64223 () Bool)

(assert (=> d!40619 (=> (not res!64223) (not e!86979))))

(assert (=> d!40619 (= res!64223 (not (contains!886 lt!69735 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40619 (= lt!69735 e!86977)))

(declare-fun c!24760 () Bool)

(assert (=> d!40619 (= c!24760 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40619 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40619 (= (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69735)))

(declare-fun b!133503 () Bool)

(assert (=> b!133503 (= e!86975 (= lt!69735 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun b!133504 () Bool)

(declare-fun res!64225 () Bool)

(assert (=> b!133504 (=> (not res!64225) (not e!86979))))

(assert (=> b!133504 (= res!64225 (not (contains!886 lt!69735 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133505 () Bool)

(assert (=> b!133505 (= e!86978 e!86973)))

(assert (=> b!133505 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64222 () Bool)

(assert (=> b!133505 (= res!64222 (contains!886 lt!69735 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133505 (=> (not res!64222) (not e!86973))))

(assert (= (and d!40619 c!24760) b!133502))

(assert (= (and d!40619 (not c!24760)) b!133501))

(assert (= (and b!133501 c!24759) b!133500))

(assert (= (and b!133501 (not c!24759)) b!133495))

(assert (= (or b!133500 b!133495) bm!14718))

(assert (= (and d!40619 res!64223) b!133504))

(assert (= (and b!133504 res!64225) b!133498))

(assert (= (and b!133498 res!64224) b!133499))

(assert (= (and b!133498 c!24758) b!133505))

(assert (= (and b!133498 (not c!24758)) b!133496))

(assert (= (and b!133505 res!64222) b!133494))

(assert (= (and b!133496 c!24761) b!133503))

(assert (= (and b!133496 (not c!24761)) b!133497))

(declare-fun b_lambda!5933 () Bool)

(assert (=> (not b_lambda!5933) (not b!133494)))

(assert (=> b!133494 t!6164))

(declare-fun b_and!8257 () Bool)

(assert (= b_and!8253 (and (=> t!6164 result!3993) b_and!8257)))

(assert (=> b!133494 t!6166))

(declare-fun b_and!8259 () Bool)

(assert (= b_and!8255 (and (=> t!6166 result!3995) b_and!8259)))

(declare-fun b_lambda!5935 () Bool)

(assert (=> (not b_lambda!5935) (not b!133500)))

(assert (=> b!133500 t!6164))

(declare-fun b_and!8261 () Bool)

(assert (= b_and!8257 (and (=> t!6164 result!3993) b_and!8261)))

(assert (=> b!133500 t!6166))

(declare-fun b_and!8263 () Bool)

(assert (= b_and!8259 (and (=> t!6166 result!3995) b_and!8263)))

(assert (=> b!133499 m!156125))

(assert (=> b!133499 m!156125))

(assert (=> b!133499 m!156141))

(declare-fun m!157383 () Bool)

(assert (=> b!133504 m!157383))

(assert (=> b!133500 m!156473))

(declare-fun m!157385 () Bool)

(assert (=> b!133500 m!157385))

(assert (=> b!133500 m!156125))

(assert (=> b!133500 m!156473))

(assert (=> b!133500 m!156135))

(assert (=> b!133500 m!156475))

(declare-fun m!157387 () Bool)

(assert (=> b!133500 m!157387))

(declare-fun m!157389 () Bool)

(assert (=> b!133500 m!157389))

(assert (=> b!133500 m!156135))

(declare-fun m!157391 () Bool)

(assert (=> b!133500 m!157391))

(assert (=> b!133500 m!157387))

(declare-fun m!157393 () Bool)

(assert (=> b!133503 m!157393))

(assert (=> b!133505 m!156125))

(assert (=> b!133505 m!156125))

(declare-fun m!157395 () Bool)

(assert (=> b!133505 m!157395))

(declare-fun m!157397 () Bool)

(assert (=> b!133497 m!157397))

(assert (=> bm!14718 m!157393))

(declare-fun m!157399 () Bool)

(assert (=> d!40619 m!157399))

(assert (=> d!40619 m!156183))

(assert (=> b!133501 m!156125))

(assert (=> b!133501 m!156125))

(assert (=> b!133501 m!156141))

(assert (=> b!133494 m!156473))

(assert (=> b!133494 m!156125))

(assert (=> b!133494 m!156473))

(assert (=> b!133494 m!156135))

(assert (=> b!133494 m!156475))

(assert (=> b!133494 m!156135))

(assert (=> b!133494 m!156125))

(declare-fun m!157401 () Bool)

(assert (=> b!133494 m!157401))

(assert (=> b!133055 d!40619))

(declare-fun d!40621 () Bool)

(assert (=> d!40621 (= (get!1482 (getValueByKey!170 (toList!851 lt!69170) lt!69174)) (v!3198 (getValueByKey!170 (toList!851 lt!69170) lt!69174)))))

(assert (=> d!40377 d!40621))

(declare-fun d!40623 () Bool)

(declare-fun c!24762 () Bool)

(assert (=> d!40623 (= c!24762 (and ((_ is Cons!1706) (toList!851 lt!69170)) (= (_1!1303 (h!2311 (toList!851 lt!69170))) lt!69174)))))

(declare-fun e!86980 () Option!176)

(assert (=> d!40623 (= (getValueByKey!170 (toList!851 lt!69170) lt!69174) e!86980)))

(declare-fun b!133508 () Bool)

(declare-fun e!86981 () Option!176)

(assert (=> b!133508 (= e!86981 (getValueByKey!170 (t!6152 (toList!851 lt!69170)) lt!69174))))

(declare-fun b!133507 () Bool)

(assert (=> b!133507 (= e!86980 e!86981)))

(declare-fun c!24763 () Bool)

(assert (=> b!133507 (= c!24763 (and ((_ is Cons!1706) (toList!851 lt!69170)) (not (= (_1!1303 (h!2311 (toList!851 lt!69170))) lt!69174))))))

(declare-fun b!133506 () Bool)

(assert (=> b!133506 (= e!86980 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69170)))))))

(declare-fun b!133509 () Bool)

(assert (=> b!133509 (= e!86981 None!174)))

(assert (= (and d!40623 c!24762) b!133506))

(assert (= (and d!40623 (not c!24762)) b!133507))

(assert (= (and b!133507 c!24763) b!133508))

(assert (= (and b!133507 (not c!24763)) b!133509))

(declare-fun m!157403 () Bool)

(assert (=> b!133508 m!157403))

(assert (=> d!40377 d!40623))

(declare-fun d!40625 () Bool)

(assert (=> d!40625 (= (+!163 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!519 (_keys!4612 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(assert (=> d!40625 true))

(declare-fun _$5!134 () Unit!4132)

(assert (=> d!40625 (= (choose!825 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3273 lt!69116) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)) _$5!134)))

(declare-fun bs!5507 () Bool)

(assert (= bs!5507 d!40625))

(assert (=> bs!5507 m!156041))

(assert (=> bs!5507 m!156041))

(assert (=> bs!5507 m!156267))

(assert (=> bs!5507 m!155973))

(assert (=> bs!5507 m!156269))

(assert (=> d!40315 d!40625))

(assert (=> d!40315 d!40425))

(assert (=> b!132828 d!40543))

(assert (=> b!132828 d!40383))

(declare-fun b!133510 () Bool)

(declare-fun e!86994 () Bool)

(declare-fun e!86987 () Bool)

(assert (=> b!133510 (= e!86994 e!86987)))

(declare-fun res!64230 () Bool)

(declare-fun call!14726 () Bool)

(assert (=> b!133510 (= res!64230 call!14726)))

(assert (=> b!133510 (=> (not res!64230) (not e!86987))))

(declare-fun call!14722 () ListLongMap!1671)

(declare-fun bm!14719 () Bool)

(declare-fun call!14728 () ListLongMap!1671)

(declare-fun c!24767 () Bool)

(declare-fun call!14725 () ListLongMap!1671)

(declare-fun c!24769 () Bool)

(declare-fun call!14727 () ListLongMap!1671)

(assert (=> bm!14719 (= call!14722 (+!163 (ite c!24769 call!14725 (ite c!24767 call!14728 call!14727)) (ite (or c!24769 c!24767) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun bm!14720 () Bool)

(assert (=> bm!14720 (= call!14725 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!133511 () Bool)

(declare-fun e!86992 () Bool)

(assert (=> b!133511 (= e!86992 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133512 () Bool)

(declare-fun e!86989 () Bool)

(assert (=> b!133512 (= e!86989 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14721 () Bool)

(assert (=> bm!14721 (= call!14727 call!14728)))

(declare-fun b!133513 () Bool)

(declare-fun e!86991 () ListLongMap!1671)

(declare-fun e!86993 () ListLongMap!1671)

(assert (=> b!133513 (= e!86991 e!86993)))

(assert (=> b!133513 (= c!24767 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133514 () Bool)

(declare-fun e!86984 () Bool)

(declare-fun e!86990 () Bool)

(assert (=> b!133514 (= e!86984 e!86990)))

(declare-fun res!64231 () Bool)

(assert (=> b!133514 (=> (not res!64231) (not e!86990))))

(declare-fun lt!69756 () ListLongMap!1671)

(assert (=> b!133514 (= res!64231 (contains!886 lt!69756 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133514 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun bm!14722 () Bool)

(assert (=> bm!14722 (= call!14726 (contains!886 lt!69756 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133515 () Bool)

(assert (=> b!133515 (= e!86990 (= (apply!116 lt!69756 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133515 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))))))

(assert (=> b!133515 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133517 () Bool)

(declare-fun e!86982 () Bool)

(assert (=> b!133517 (= e!86982 (= (apply!116 lt!69756 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 newMap!16)))))

(declare-fun b!133518 () Bool)

(declare-fun e!86986 () Unit!4132)

(declare-fun lt!69758 () Unit!4132)

(assert (=> b!133518 (= e!86986 lt!69758)))

(declare-fun lt!69746 () ListLongMap!1671)

(assert (=> b!133518 (= lt!69746 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69754 () (_ BitVec 64))

(assert (=> b!133518 (= lt!69754 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69752 () (_ BitVec 64))

(assert (=> b!133518 (= lt!69752 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69761 () Unit!4132)

(assert (=> b!133518 (= lt!69761 (addStillContains!92 lt!69746 lt!69754 (zeroValue!2719 newMap!16) lt!69752))))

(assert (=> b!133518 (contains!886 (+!163 lt!69746 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16))) lt!69752)))

(declare-fun lt!69753 () Unit!4132)

(assert (=> b!133518 (= lt!69753 lt!69761)))

(declare-fun lt!69742 () ListLongMap!1671)

(assert (=> b!133518 (= lt!69742 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69759 () (_ BitVec 64))

(assert (=> b!133518 (= lt!69759 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69747 () (_ BitVec 64))

(assert (=> b!133518 (= lt!69747 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69748 () Unit!4132)

(assert (=> b!133518 (= lt!69748 (addApplyDifferent!92 lt!69742 lt!69759 (minValue!2719 newMap!16) lt!69747))))

(assert (=> b!133518 (= (apply!116 (+!163 lt!69742 (tuple2!2585 lt!69759 (minValue!2719 newMap!16))) lt!69747) (apply!116 lt!69742 lt!69747))))

(declare-fun lt!69757 () Unit!4132)

(assert (=> b!133518 (= lt!69757 lt!69748)))

(declare-fun lt!69740 () ListLongMap!1671)

(assert (=> b!133518 (= lt!69740 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69741 () (_ BitVec 64))

(assert (=> b!133518 (= lt!69741 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69744 () (_ BitVec 64))

(assert (=> b!133518 (= lt!69744 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69743 () Unit!4132)

(assert (=> b!133518 (= lt!69743 (addApplyDifferent!92 lt!69740 lt!69741 (zeroValue!2719 newMap!16) lt!69744))))

(assert (=> b!133518 (= (apply!116 (+!163 lt!69740 (tuple2!2585 lt!69741 (zeroValue!2719 newMap!16))) lt!69744) (apply!116 lt!69740 lt!69744))))

(declare-fun lt!69751 () Unit!4132)

(assert (=> b!133518 (= lt!69751 lt!69743)))

(declare-fun lt!69749 () ListLongMap!1671)

(assert (=> b!133518 (= lt!69749 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69750 () (_ BitVec 64))

(assert (=> b!133518 (= lt!69750 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69760 () (_ BitVec 64))

(assert (=> b!133518 (= lt!69760 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133518 (= lt!69758 (addApplyDifferent!92 lt!69749 lt!69750 (minValue!2719 newMap!16) lt!69760))))

(assert (=> b!133518 (= (apply!116 (+!163 lt!69749 (tuple2!2585 lt!69750 (minValue!2719 newMap!16))) lt!69760) (apply!116 lt!69749 lt!69760))))

(declare-fun b!133519 () Bool)

(declare-fun e!86983 () ListLongMap!1671)

(assert (=> b!133519 (= e!86983 call!14727)))

(declare-fun b!133520 () Bool)

(declare-fun call!14723 () ListLongMap!1671)

(assert (=> b!133520 (= e!86993 call!14723)))

(declare-fun b!133521 () Bool)

(declare-fun res!64227 () Bool)

(declare-fun e!86988 () Bool)

(assert (=> b!133521 (=> (not res!64227) (not e!86988))))

(declare-fun e!86985 () Bool)

(assert (=> b!133521 (= res!64227 e!86985)))

(declare-fun c!24766 () Bool)

(assert (=> b!133521 (= c!24766 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!14723 () Bool)

(assert (=> bm!14723 (= call!14728 call!14725)))

(declare-fun b!133522 () Bool)

(assert (=> b!133522 (= e!86994 (not call!14726))))

(declare-fun b!133523 () Bool)

(declare-fun c!24768 () Bool)

(assert (=> b!133523 (= c!24768 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!133523 (= e!86993 e!86983)))

(declare-fun b!133524 () Bool)

(declare-fun Unit!4166 () Unit!4132)

(assert (=> b!133524 (= e!86986 Unit!4166)))

(declare-fun b!133525 () Bool)

(assert (=> b!133525 (= e!86991 (+!163 call!14722 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun bm!14724 () Bool)

(assert (=> bm!14724 (= call!14723 call!14722)))

(declare-fun b!133526 () Bool)

(assert (=> b!133526 (= e!86983 call!14723)))

(declare-fun b!133527 () Bool)

(declare-fun call!14724 () Bool)

(assert (=> b!133527 (= e!86985 (not call!14724))))

(declare-fun b!133528 () Bool)

(assert (=> b!133528 (= e!86988 e!86994)))

(declare-fun c!24765 () Bool)

(assert (=> b!133528 (= c!24765 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14725 () Bool)

(assert (=> bm!14725 (= call!14724 (contains!886 lt!69756 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133516 () Bool)

(assert (=> b!133516 (= e!86985 e!86982)))

(declare-fun res!64229 () Bool)

(assert (=> b!133516 (= res!64229 call!14724)))

(assert (=> b!133516 (=> (not res!64229) (not e!86982))))

(declare-fun d!40627 () Bool)

(assert (=> d!40627 e!86988))

(declare-fun res!64234 () Bool)

(assert (=> d!40627 (=> (not res!64234) (not e!86988))))

(assert (=> d!40627 (= res!64234 (or (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))))

(declare-fun lt!69745 () ListLongMap!1671)

(assert (=> d!40627 (= lt!69756 lt!69745)))

(declare-fun lt!69755 () Unit!4132)

(assert (=> d!40627 (= lt!69755 e!86986)))

(declare-fun c!24764 () Bool)

(assert (=> d!40627 (= c!24764 e!86989)))

(declare-fun res!64233 () Bool)

(assert (=> d!40627 (=> (not res!64233) (not e!86989))))

(assert (=> d!40627 (= res!64233 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40627 (= lt!69745 e!86991)))

(assert (=> d!40627 (= c!24769 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40627 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40627 (= (getCurrentListMap!519 (_keys!4612 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69756)))

(declare-fun b!133529 () Bool)

(declare-fun res!64226 () Bool)

(assert (=> b!133529 (=> (not res!64226) (not e!86988))))

(assert (=> b!133529 (= res!64226 e!86984)))

(declare-fun res!64232 () Bool)

(assert (=> b!133529 (=> res!64232 e!86984)))

(assert (=> b!133529 (= res!64232 (not e!86992))))

(declare-fun res!64228 () Bool)

(assert (=> b!133529 (=> (not res!64228) (not e!86992))))

(assert (=> b!133529 (= res!64228 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133530 () Bool)

(assert (=> b!133530 (= e!86987 (= (apply!116 lt!69756 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 newMap!16)))))

(assert (= (and d!40627 c!24769) b!133525))

(assert (= (and d!40627 (not c!24769)) b!133513))

(assert (= (and b!133513 c!24767) b!133520))

(assert (= (and b!133513 (not c!24767)) b!133523))

(assert (= (and b!133523 c!24768) b!133526))

(assert (= (and b!133523 (not c!24768)) b!133519))

(assert (= (or b!133526 b!133519) bm!14721))

(assert (= (or b!133520 bm!14721) bm!14723))

(assert (= (or b!133520 b!133526) bm!14724))

(assert (= (or b!133525 bm!14723) bm!14720))

(assert (= (or b!133525 bm!14724) bm!14719))

(assert (= (and d!40627 res!64233) b!133512))

(assert (= (and d!40627 c!24764) b!133518))

(assert (= (and d!40627 (not c!24764)) b!133524))

(assert (= (and d!40627 res!64234) b!133529))

(assert (= (and b!133529 res!64228) b!133511))

(assert (= (and b!133529 (not res!64232)) b!133514))

(assert (= (and b!133514 res!64231) b!133515))

(assert (= (and b!133529 res!64226) b!133521))

(assert (= (and b!133521 c!24766) b!133516))

(assert (= (and b!133521 (not c!24766)) b!133527))

(assert (= (and b!133516 res!64229) b!133517))

(assert (= (or b!133516 b!133527) bm!14725))

(assert (= (and b!133521 res!64227) b!133528))

(assert (= (and b!133528 c!24765) b!133510))

(assert (= (and b!133528 (not c!24765)) b!133522))

(assert (= (and b!133510 res!64230) b!133530))

(assert (= (or b!133510 b!133522) bm!14722))

(declare-fun b_lambda!5937 () Bool)

(assert (=> (not b_lambda!5937) (not b!133515)))

(assert (=> b!133515 t!6164))

(declare-fun b_and!8265 () Bool)

(assert (= b_and!8261 (and (=> t!6164 result!3993) b_and!8265)))

(assert (=> b!133515 t!6166))

(declare-fun b_and!8267 () Bool)

(assert (= b_and!8263 (and (=> t!6166 result!3995) b_and!8267)))

(assert (=> b!133514 m!156125))

(assert (=> b!133514 m!156125))

(declare-fun m!157405 () Bool)

(assert (=> b!133514 m!157405))

(declare-fun m!157407 () Bool)

(assert (=> bm!14720 m!157407))

(declare-fun m!157409 () Bool)

(assert (=> bm!14719 m!157409))

(declare-fun m!157411 () Bool)

(assert (=> b!133515 m!157411))

(assert (=> b!133515 m!156135))

(declare-fun m!157413 () Bool)

(assert (=> b!133515 m!157413))

(assert (=> b!133515 m!156135))

(assert (=> b!133515 m!156125))

(assert (=> b!133515 m!157411))

(assert (=> b!133515 m!156125))

(declare-fun m!157415 () Bool)

(assert (=> b!133515 m!157415))

(assert (=> b!133511 m!156125))

(assert (=> b!133511 m!156125))

(assert (=> b!133511 m!156141))

(assert (=> b!133512 m!156125))

(assert (=> b!133512 m!156125))

(assert (=> b!133512 m!156141))

(declare-fun m!157417 () Bool)

(assert (=> b!133517 m!157417))

(declare-fun m!157419 () Bool)

(assert (=> b!133525 m!157419))

(declare-fun m!157421 () Bool)

(assert (=> bm!14722 m!157421))

(declare-fun m!157423 () Bool)

(assert (=> b!133518 m!157423))

(declare-fun m!157425 () Bool)

(assert (=> b!133518 m!157425))

(declare-fun m!157427 () Bool)

(assert (=> b!133518 m!157427))

(declare-fun m!157429 () Bool)

(assert (=> b!133518 m!157429))

(assert (=> b!133518 m!157423))

(declare-fun m!157431 () Bool)

(assert (=> b!133518 m!157431))

(declare-fun m!157433 () Bool)

(assert (=> b!133518 m!157433))

(declare-fun m!157435 () Bool)

(assert (=> b!133518 m!157435))

(declare-fun m!157437 () Bool)

(assert (=> b!133518 m!157437))

(assert (=> b!133518 m!157427))

(declare-fun m!157439 () Bool)

(assert (=> b!133518 m!157439))

(declare-fun m!157441 () Bool)

(assert (=> b!133518 m!157441))

(declare-fun m!157443 () Bool)

(assert (=> b!133518 m!157443))

(declare-fun m!157445 () Bool)

(assert (=> b!133518 m!157445))

(declare-fun m!157447 () Bool)

(assert (=> b!133518 m!157447))

(assert (=> b!133518 m!157435))

(assert (=> b!133518 m!156125))

(assert (=> b!133518 m!157407))

(declare-fun m!157449 () Bool)

(assert (=> b!133518 m!157449))

(assert (=> b!133518 m!157429))

(declare-fun m!157451 () Bool)

(assert (=> b!133518 m!157451))

(declare-fun m!157453 () Bool)

(assert (=> b!133530 m!157453))

(declare-fun m!157455 () Bool)

(assert (=> bm!14725 m!157455))

(assert (=> d!40627 m!156183))

(assert (=> b!132828 d!40627))

(declare-fun d!40629 () Bool)

(assert (=> d!40629 (isDefined!124 (getValueByKey!170 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun lt!69762 () Unit!4132)

(assert (=> d!40629 (= lt!69762 (choose!826 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun e!86995 () Bool)

(assert (=> d!40629 e!86995))

(declare-fun res!64235 () Bool)

(assert (=> d!40629 (=> (not res!64235) (not e!86995))))

(assert (=> d!40629 (= res!64235 (isStrictlySorted!317 (toList!851 e!86457)))))

(assert (=> d!40629 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) lt!69762)))

(declare-fun b!133531 () Bool)

(assert (=> b!133531 (= e!86995 (containsKey!174 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!40629 res!64235) b!133531))

(assert (=> d!40629 m!155841))

(assert (=> d!40629 m!156691))

(assert (=> d!40629 m!156691))

(assert (=> d!40629 m!156693))

(assert (=> d!40629 m!155841))

(declare-fun m!157457 () Bool)

(assert (=> d!40629 m!157457))

(declare-fun m!157459 () Bool)

(assert (=> d!40629 m!157459))

(assert (=> b!133531 m!155841))

(assert (=> b!133531 m!156687))

(assert (=> b!133077 d!40629))

(declare-fun d!40631 () Bool)

(assert (=> d!40631 (= (isDefined!124 (getValueByKey!170 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) (not (isEmpty!413 (getValueByKey!170 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(declare-fun bs!5508 () Bool)

(assert (= bs!5508 d!40631))

(assert (=> bs!5508 m!156691))

(declare-fun m!157461 () Bool)

(assert (=> bs!5508 m!157461))

(assert (=> b!133077 d!40631))

(declare-fun c!24770 () Bool)

(declare-fun d!40633 () Bool)

(assert (=> d!40633 (= c!24770 (and ((_ is Cons!1706) (toList!851 e!86457)) (= (_1!1303 (h!2311 (toList!851 e!86457))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun e!86996 () Option!176)

(assert (=> d!40633 (= (getValueByKey!170 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!86996)))

(declare-fun e!86997 () Option!176)

(declare-fun b!133534 () Bool)

(assert (=> b!133534 (= e!86997 (getValueByKey!170 (t!6152 (toList!851 e!86457)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!133533 () Bool)

(assert (=> b!133533 (= e!86996 e!86997)))

(declare-fun c!24771 () Bool)

(assert (=> b!133533 (= c!24771 (and ((_ is Cons!1706) (toList!851 e!86457)) (not (= (_1!1303 (h!2311 (toList!851 e!86457))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(declare-fun b!133532 () Bool)

(assert (=> b!133532 (= e!86996 (Some!175 (_2!1303 (h!2311 (toList!851 e!86457)))))))

(declare-fun b!133535 () Bool)

(assert (=> b!133535 (= e!86997 None!174)))

(assert (= (and d!40633 c!24770) b!133532))

(assert (= (and d!40633 (not c!24770)) b!133533))

(assert (= (and b!133533 c!24771) b!133534))

(assert (= (and b!133533 (not c!24771)) b!133535))

(assert (=> b!133534 m!155841))

(declare-fun m!157463 () Bool)

(assert (=> b!133534 m!157463))

(assert (=> b!133077 d!40633))

(declare-fun lt!69763 () Bool)

(declare-fun d!40635 () Bool)

(assert (=> d!40635 (= lt!69763 (select (content!133 (toList!851 lt!69466)) (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!86999 () Bool)

(assert (=> d!40635 (= lt!69763 e!86999)))

(declare-fun res!64236 () Bool)

(assert (=> d!40635 (=> (not res!64236) (not e!86999))))

(assert (=> d!40635 (= res!64236 ((_ is Cons!1706) (toList!851 lt!69466)))))

(assert (=> d!40635 (= (contains!889 (toList!851 lt!69466) (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69763)))

(declare-fun b!133536 () Bool)

(declare-fun e!86998 () Bool)

(assert (=> b!133536 (= e!86999 e!86998)))

(declare-fun res!64237 () Bool)

(assert (=> b!133536 (=> res!64237 e!86998)))

(assert (=> b!133536 (= res!64237 (= (h!2311 (toList!851 lt!69466)) (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133537 () Bool)

(assert (=> b!133537 (= e!86998 (contains!889 (t!6152 (toList!851 lt!69466)) (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!40635 res!64236) b!133536))

(assert (= (and b!133536 (not res!64237)) b!133537))

(declare-fun m!157465 () Bool)

(assert (=> d!40635 m!157465))

(declare-fun m!157467 () Bool)

(assert (=> d!40635 m!157467))

(declare-fun m!157469 () Bool)

(assert (=> b!133537 m!157469))

(assert (=> b!133046 d!40635))

(declare-fun d!40637 () Bool)

(declare-fun res!64238 () Bool)

(declare-fun e!87000 () Bool)

(assert (=> d!40637 (=> (not res!64238) (not e!87000))))

(assert (=> d!40637 (= res!64238 (simpleValid!92 (_2!1304 lt!69440)))))

(assert (=> d!40637 (= (valid!529 (_2!1304 lt!69440)) e!87000)))

(declare-fun b!133538 () Bool)

(declare-fun res!64239 () Bool)

(assert (=> b!133538 (=> (not res!64239) (not e!87000))))

(assert (=> b!133538 (= res!64239 (= (arrayCountValidKeys!0 (_keys!4612 (_2!1304 lt!69440)) #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69440)))) (_size!597 (_2!1304 lt!69440))))))

(declare-fun b!133539 () Bool)

(declare-fun res!64240 () Bool)

(assert (=> b!133539 (=> (not res!64240) (not e!87000))))

(assert (=> b!133539 (= res!64240 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4612 (_2!1304 lt!69440)) (mask!7163 (_2!1304 lt!69440))))))

(declare-fun b!133540 () Bool)

(assert (=> b!133540 (= e!87000 (arrayNoDuplicates!0 (_keys!4612 (_2!1304 lt!69440)) #b00000000000000000000000000000000 Nil!1708))))

(assert (= (and d!40637 res!64238) b!133538))

(assert (= (and b!133538 res!64239) b!133539))

(assert (= (and b!133539 res!64240) b!133540))

(declare-fun m!157471 () Bool)

(assert (=> d!40637 m!157471))

(declare-fun m!157473 () Bool)

(assert (=> b!133538 m!157473))

(declare-fun m!157475 () Bool)

(assert (=> b!133539 m!157475))

(declare-fun m!157477 () Bool)

(assert (=> b!133540 m!157477))

(assert (=> b!133040 d!40637))

(declare-fun c!24772 () Bool)

(declare-fun d!40639 () Bool)

(assert (=> d!40639 (= c!24772 (and ((_ is Cons!1706) (toList!851 lt!69202)) (= (_1!1303 (h!2311 (toList!851 lt!69202))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87001 () Option!176)

(assert (=> d!40639 (= (getValueByKey!170 (toList!851 lt!69202) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87001)))

(declare-fun b!133543 () Bool)

(declare-fun e!87002 () Option!176)

(assert (=> b!133543 (= e!87002 (getValueByKey!170 (t!6152 (toList!851 lt!69202)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133542 () Bool)

(assert (=> b!133542 (= e!87001 e!87002)))

(declare-fun c!24773 () Bool)

(assert (=> b!133542 (= c!24773 (and ((_ is Cons!1706) (toList!851 lt!69202)) (not (= (_1!1303 (h!2311 (toList!851 lt!69202))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!133541 () Bool)

(assert (=> b!133541 (= e!87001 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69202)))))))

(declare-fun b!133544 () Bool)

(assert (=> b!133544 (= e!87002 None!174)))

(assert (= (and d!40639 c!24772) b!133541))

(assert (= (and d!40639 (not c!24772)) b!133542))

(assert (= (and b!133542 c!24773) b!133543))

(assert (= (and b!133542 (not c!24773)) b!133544))

(declare-fun m!157479 () Bool)

(assert (=> b!133543 m!157479))

(assert (=> b!132762 d!40639))

(declare-fun b!133545 () Bool)

(declare-fun e!87003 () Bool)

(declare-fun call!14729 () Bool)

(assert (=> b!133545 (= e!87003 call!14729)))

(declare-fun b!133546 () Bool)

(declare-fun e!87004 () Bool)

(assert (=> b!133546 (= e!87004 e!87003)))

(declare-fun lt!69764 () (_ BitVec 64))

(assert (=> b!133546 (= lt!69764 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!69766 () Unit!4132)

(assert (=> b!133546 (= lt!69766 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 newMap!16) lt!69764 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!133546 (arrayContainsKey!0 (_keys!4612 newMap!16) lt!69764 #b00000000000000000000000000000000)))

(declare-fun lt!69765 () Unit!4132)

(assert (=> b!133546 (= lt!69765 lt!69766)))

(declare-fun res!64242 () Bool)

(assert (=> b!133546 (= res!64242 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4612 newMap!16) (mask!7163 newMap!16)) (Found!278 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!133546 (=> (not res!64242) (not e!87003))))

(declare-fun d!40641 () Bool)

(declare-fun res!64241 () Bool)

(declare-fun e!87005 () Bool)

(assert (=> d!40641 (=> res!64241 e!87005)))

(assert (=> d!40641 (= res!64241 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40641 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4612 newMap!16) (mask!7163 newMap!16)) e!87005)))

(declare-fun b!133547 () Bool)

(assert (=> b!133547 (= e!87005 e!87004)))

(declare-fun c!24774 () Bool)

(assert (=> b!133547 (= c!24774 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133548 () Bool)

(assert (=> b!133548 (= e!87004 call!14729)))

(declare-fun bm!14726 () Bool)

(assert (=> bm!14726 (= call!14729 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(assert (= (and d!40641 (not res!64241)) b!133547))

(assert (= (and b!133547 c!24774) b!133546))

(assert (= (and b!133547 (not c!24774)) b!133548))

(assert (= (and b!133546 res!64242) b!133545))

(assert (= (or b!133545 b!133548) bm!14726))

(assert (=> b!133546 m!156869))

(declare-fun m!157481 () Bool)

(assert (=> b!133546 m!157481))

(declare-fun m!157483 () Bool)

(assert (=> b!133546 m!157483))

(assert (=> b!133546 m!156869))

(declare-fun m!157485 () Bool)

(assert (=> b!133546 m!157485))

(assert (=> b!133547 m!156869))

(assert (=> b!133547 m!156869))

(assert (=> b!133547 m!156871))

(declare-fun m!157487 () Bool)

(assert (=> bm!14726 m!157487))

(assert (=> bm!14673 d!40641))

(assert (=> d!40381 d!40373))

(assert (=> d!40381 d!40371))

(declare-fun d!40643 () Bool)

(assert (=> d!40643 (contains!886 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69182)))

(assert (=> d!40643 true))

(declare-fun _$35!381 () Unit!4132)

(assert (=> d!40643 (= (choose!829 lt!69176 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69182) _$35!381)))

(declare-fun bs!5509 () Bool)

(assert (= bs!5509 d!40643))

(assert (=> bs!5509 m!156069))

(assert (=> bs!5509 m!156069))

(assert (=> bs!5509 m!156081))

(assert (=> d!40381 d!40643))

(declare-fun d!40645 () Bool)

(declare-fun e!87006 () Bool)

(assert (=> d!40645 e!87006))

(declare-fun res!64243 () Bool)

(assert (=> d!40645 (=> res!64243 e!87006)))

(declare-fun lt!69768 () Bool)

(assert (=> d!40645 (= res!64243 (not lt!69768))))

(declare-fun lt!69770 () Bool)

(assert (=> d!40645 (= lt!69768 lt!69770)))

(declare-fun lt!69767 () Unit!4132)

(declare-fun e!87007 () Unit!4132)

(assert (=> d!40645 (= lt!69767 e!87007)))

(declare-fun c!24775 () Bool)

(assert (=> d!40645 (= c!24775 lt!69770)))

(assert (=> d!40645 (= lt!69770 (containsKey!174 (toList!851 lt!69176) lt!69182))))

(assert (=> d!40645 (= (contains!886 lt!69176 lt!69182) lt!69768)))

(declare-fun b!133550 () Bool)

(declare-fun lt!69769 () Unit!4132)

(assert (=> b!133550 (= e!87007 lt!69769)))

(assert (=> b!133550 (= lt!69769 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69176) lt!69182))))

(assert (=> b!133550 (isDefined!124 (getValueByKey!170 (toList!851 lt!69176) lt!69182))))

(declare-fun b!133551 () Bool)

(declare-fun Unit!4167 () Unit!4132)

(assert (=> b!133551 (= e!87007 Unit!4167)))

(declare-fun b!133552 () Bool)

(assert (=> b!133552 (= e!87006 (isDefined!124 (getValueByKey!170 (toList!851 lt!69176) lt!69182)))))

(assert (= (and d!40645 c!24775) b!133550))

(assert (= (and d!40645 (not c!24775)) b!133551))

(assert (= (and d!40645 (not res!64243)) b!133552))

(declare-fun m!157489 () Bool)

(assert (=> d!40645 m!157489))

(declare-fun m!157491 () Bool)

(assert (=> b!133550 m!157491))

(declare-fun m!157493 () Bool)

(assert (=> b!133550 m!157493))

(assert (=> b!133550 m!157493))

(declare-fun m!157495 () Bool)

(assert (=> b!133550 m!157495))

(assert (=> b!133552 m!157493))

(assert (=> b!133552 m!157493))

(assert (=> b!133552 m!157495))

(assert (=> d!40381 d!40645))

(assert (=> b!132825 d!40309))

(assert (=> b!132825 d!40311))

(declare-fun d!40647 () Bool)

(declare-fun c!24776 () Bool)

(assert (=> d!40647 (= c!24776 (and ((_ is Cons!1706) (toList!851 lt!69335)) (= (_1!1303 (h!2311 (toList!851 lt!69335))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87008 () Option!176)

(assert (=> d!40647 (= (getValueByKey!170 (toList!851 lt!69335) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87008)))

(declare-fun e!87009 () Option!176)

(declare-fun b!133555 () Bool)

(assert (=> b!133555 (= e!87009 (getValueByKey!170 (t!6152 (toList!851 lt!69335)) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133554 () Bool)

(assert (=> b!133554 (= e!87008 e!87009)))

(declare-fun c!24777 () Bool)

(assert (=> b!133554 (= c!24777 (and ((_ is Cons!1706) (toList!851 lt!69335)) (not (= (_1!1303 (h!2311 (toList!851 lt!69335))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!133553 () Bool)

(assert (=> b!133553 (= e!87008 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69335)))))))

(declare-fun b!133556 () Bool)

(assert (=> b!133556 (= e!87009 None!174)))

(assert (= (and d!40647 c!24776) b!133553))

(assert (= (and d!40647 (not c!24776)) b!133554))

(assert (= (and b!133554 c!24777) b!133555))

(assert (= (and b!133554 (not c!24777)) b!133556))

(declare-fun m!157497 () Bool)

(assert (=> b!133555 m!157497))

(assert (=> b!132954 d!40647))

(assert (=> b!132838 d!40519))

(declare-fun d!40649 () Bool)

(assert (=> d!40649 (isDefined!124 (getValueByKey!170 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!69771 () Unit!4132)

(assert (=> d!40649 (= lt!69771 (choose!826 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87010 () Bool)

(assert (=> d!40649 e!87010))

(declare-fun res!64244 () Bool)

(assert (=> d!40649 (=> (not res!64244) (not e!87010))))

(assert (=> d!40649 (= res!64244 (isStrictlySorted!317 (toList!851 lt!69186)))))

(assert (=> d!40649 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000) lt!69771)))

(declare-fun b!133557 () Bool)

(assert (=> b!133557 (= e!87010 (containsKey!174 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40649 res!64244) b!133557))

(assert (=> d!40649 m!156591))

(assert (=> d!40649 m!156591))

(assert (=> d!40649 m!156659))

(declare-fun m!157499 () Bool)

(assert (=> d!40649 m!157499))

(declare-fun m!157501 () Bool)

(assert (=> d!40649 m!157501))

(assert (=> b!133557 m!156655))

(assert (=> b!133068 d!40649))

(declare-fun d!40651 () Bool)

(assert (=> d!40651 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5510 () Bool)

(assert (= bs!5510 d!40651))

(assert (=> bs!5510 m!156591))

(declare-fun m!157503 () Bool)

(assert (=> bs!5510 m!157503))

(assert (=> b!133068 d!40651))

(declare-fun d!40653 () Bool)

(declare-fun c!24778 () Bool)

(assert (=> d!40653 (= c!24778 (and ((_ is Cons!1706) (toList!851 lt!69186)) (= (_1!1303 (h!2311 (toList!851 lt!69186))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87011 () Option!176)

(assert (=> d!40653 (= (getValueByKey!170 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000) e!87011)))

(declare-fun b!133560 () Bool)

(declare-fun e!87012 () Option!176)

(assert (=> b!133560 (= e!87012 (getValueByKey!170 (t!6152 (toList!851 lt!69186)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133559 () Bool)

(assert (=> b!133559 (= e!87011 e!87012)))

(declare-fun c!24779 () Bool)

(assert (=> b!133559 (= c!24779 (and ((_ is Cons!1706) (toList!851 lt!69186)) (not (= (_1!1303 (h!2311 (toList!851 lt!69186))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133558 () Bool)

(assert (=> b!133558 (= e!87011 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69186)))))))

(declare-fun b!133561 () Bool)

(assert (=> b!133561 (= e!87012 None!174)))

(assert (= (and d!40653 c!24778) b!133558))

(assert (= (and d!40653 (not c!24778)) b!133559))

(assert (= (and b!133559 c!24779) b!133560))

(assert (= (and b!133559 (not c!24779)) b!133561))

(declare-fun m!157505 () Bool)

(assert (=> b!133560 m!157505))

(assert (=> b!133068 d!40653))

(declare-fun d!40655 () Bool)

(declare-fun e!87013 () Bool)

(assert (=> d!40655 e!87013))

(declare-fun res!64245 () Bool)

(assert (=> d!40655 (=> res!64245 e!87013)))

(declare-fun lt!69773 () Bool)

(assert (=> d!40655 (= res!64245 (not lt!69773))))

(declare-fun lt!69775 () Bool)

(assert (=> d!40655 (= lt!69773 lt!69775)))

(declare-fun lt!69772 () Unit!4132)

(declare-fun e!87014 () Unit!4132)

(assert (=> d!40655 (= lt!69772 e!87014)))

(declare-fun c!24780 () Bool)

(assert (=> d!40655 (= c!24780 lt!69775)))

(assert (=> d!40655 (= lt!69775 (containsKey!174 (toList!851 (map!1391 (_2!1304 lt!69440))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> d!40655 (= (contains!886 (map!1391 (_2!1304 lt!69440)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) lt!69773)))

(declare-fun b!133562 () Bool)

(declare-fun lt!69774 () Unit!4132)

(assert (=> b!133562 (= e!87014 lt!69774)))

(assert (=> b!133562 (= lt!69774 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (map!1391 (_2!1304 lt!69440))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> b!133562 (isDefined!124 (getValueByKey!170 (toList!851 (map!1391 (_2!1304 lt!69440))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!133563 () Bool)

(declare-fun Unit!4168 () Unit!4132)

(assert (=> b!133563 (= e!87014 Unit!4168)))

(declare-fun b!133564 () Bool)

(assert (=> b!133564 (= e!87013 (isDefined!124 (getValueByKey!170 (toList!851 (map!1391 (_2!1304 lt!69440))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(assert (= (and d!40655 c!24780) b!133562))

(assert (= (and d!40655 (not c!24780)) b!133563))

(assert (= (and d!40655 (not res!64245)) b!133564))

(assert (=> d!40655 m!155841))

(declare-fun m!157507 () Bool)

(assert (=> d!40655 m!157507))

(assert (=> b!133562 m!155841))

(declare-fun m!157509 () Bool)

(assert (=> b!133562 m!157509))

(assert (=> b!133562 m!155841))

(declare-fun m!157511 () Bool)

(assert (=> b!133562 m!157511))

(assert (=> b!133562 m!157511))

(declare-fun m!157513 () Bool)

(assert (=> b!133562 m!157513))

(assert (=> b!133564 m!155841))

(assert (=> b!133564 m!157511))

(assert (=> b!133564 m!157511))

(assert (=> b!133564 m!157513))

(assert (=> b!133033 d!40655))

(declare-fun d!40657 () Bool)

(assert (=> d!40657 (= (map!1391 (_2!1304 lt!69440)) (getCurrentListMap!519 (_keys!4612 (_2!1304 lt!69440)) (_values!2847 (_2!1304 lt!69440)) (mask!7163 (_2!1304 lt!69440)) (extraKeys!2629 (_2!1304 lt!69440)) (zeroValue!2719 (_2!1304 lt!69440)) (minValue!2719 (_2!1304 lt!69440)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1304 lt!69440))))))

(declare-fun bs!5511 () Bool)

(assert (= bs!5511 d!40657))

(declare-fun m!157515 () Bool)

(assert (=> bs!5511 m!157515))

(assert (=> b!133033 d!40657))

(declare-fun lt!69776 () Bool)

(declare-fun d!40659 () Bool)

(assert (=> d!40659 (= lt!69776 (select (content!133 (toList!851 lt!69496)) (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun e!87016 () Bool)

(assert (=> d!40659 (= lt!69776 e!87016)))

(declare-fun res!64246 () Bool)

(assert (=> d!40659 (=> (not res!64246) (not e!87016))))

(assert (=> d!40659 (= res!64246 ((_ is Cons!1706) (toList!851 lt!69496)))))

(assert (=> d!40659 (= (contains!889 (toList!851 lt!69496) (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69776)))

(declare-fun b!133565 () Bool)

(declare-fun e!87015 () Bool)

(assert (=> b!133565 (= e!87016 e!87015)))

(declare-fun res!64247 () Bool)

(assert (=> b!133565 (=> res!64247 e!87015)))

(assert (=> b!133565 (= res!64247 (= (h!2311 (toList!851 lt!69496)) (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133566 () Bool)

(assert (=> b!133566 (= e!87015 (contains!889 (t!6152 (toList!851 lt!69496)) (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!40659 res!64246) b!133565))

(assert (= (and b!133565 (not res!64247)) b!133566))

(declare-fun m!157517 () Bool)

(assert (=> d!40659 m!157517))

(declare-fun m!157519 () Bool)

(assert (=> d!40659 m!157519))

(declare-fun m!157521 () Bool)

(assert (=> b!133566 m!157521))

(assert (=> b!133072 d!40659))

(assert (=> b!132841 d!40519))

(declare-fun d!40661 () Bool)

(declare-fun e!87017 () Bool)

(assert (=> d!40661 e!87017))

(declare-fun res!64248 () Bool)

(assert (=> d!40661 (=> res!64248 e!87017)))

(declare-fun lt!69778 () Bool)

(assert (=> d!40661 (= res!64248 (not lt!69778))))

(declare-fun lt!69780 () Bool)

(assert (=> d!40661 (= lt!69778 lt!69780)))

(declare-fun lt!69777 () Unit!4132)

(declare-fun e!87018 () Unit!4132)

(assert (=> d!40661 (= lt!69777 e!87018)))

(declare-fun c!24781 () Bool)

(assert (=> d!40661 (= c!24781 lt!69780)))

(assert (=> d!40661 (= lt!69780 (containsKey!174 (toList!851 lt!69484) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40661 (= (contains!886 lt!69484 #b1000000000000000000000000000000000000000000000000000000000000000) lt!69778)))

(declare-fun b!133567 () Bool)

(declare-fun lt!69779 () Unit!4132)

(assert (=> b!133567 (= e!87018 lt!69779)))

(assert (=> b!133567 (= lt!69779 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69484) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133567 (isDefined!124 (getValueByKey!170 (toList!851 lt!69484) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133568 () Bool)

(declare-fun Unit!4169 () Unit!4132)

(assert (=> b!133568 (= e!87018 Unit!4169)))

(declare-fun b!133569 () Bool)

(assert (=> b!133569 (= e!87017 (isDefined!124 (getValueByKey!170 (toList!851 lt!69484) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40661 c!24781) b!133567))

(assert (= (and d!40661 (not c!24781)) b!133568))

(assert (= (and d!40661 (not res!64248)) b!133569))

(declare-fun m!157523 () Bool)

(assert (=> d!40661 m!157523))

(declare-fun m!157525 () Bool)

(assert (=> b!133567 m!157525))

(declare-fun m!157527 () Bool)

(assert (=> b!133567 m!157527))

(assert (=> b!133567 m!157527))

(declare-fun m!157529 () Bool)

(assert (=> b!133567 m!157529))

(assert (=> b!133569 m!157527))

(assert (=> b!133569 m!157527))

(assert (=> b!133569 m!157529))

(assert (=> bm!14669 d!40661))

(declare-fun d!40663 () Bool)

(declare-fun e!87019 () Bool)

(assert (=> d!40663 e!87019))

(declare-fun res!64249 () Bool)

(assert (=> d!40663 (=> res!64249 e!87019)))

(declare-fun lt!69782 () Bool)

(assert (=> d!40663 (= res!64249 (not lt!69782))))

(declare-fun lt!69784 () Bool)

(assert (=> d!40663 (= lt!69782 lt!69784)))

(declare-fun lt!69781 () Unit!4132)

(declare-fun e!87020 () Unit!4132)

(assert (=> d!40663 (= lt!69781 e!87020)))

(declare-fun c!24782 () Bool)

(assert (=> d!40663 (= c!24782 lt!69784)))

(assert (=> d!40663 (= lt!69784 (containsKey!174 (toList!851 lt!69220) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40663 (= (contains!886 lt!69220 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69782)))

(declare-fun b!133570 () Bool)

(declare-fun lt!69783 () Unit!4132)

(assert (=> b!133570 (= e!87020 lt!69783)))

(assert (=> b!133570 (= lt!69783 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69220) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133570 (isDefined!124 (getValueByKey!170 (toList!851 lt!69220) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133571 () Bool)

(declare-fun Unit!4170 () Unit!4132)

(assert (=> b!133571 (= e!87020 Unit!4170)))

(declare-fun b!133572 () Bool)

(assert (=> b!133572 (= e!87019 (isDefined!124 (getValueByKey!170 (toList!851 lt!69220) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40663 c!24782) b!133570))

(assert (= (and d!40663 (not c!24782)) b!133571))

(assert (= (and d!40663 (not res!64249)) b!133572))

(declare-fun m!157531 () Bool)

(assert (=> d!40663 m!157531))

(declare-fun m!157533 () Bool)

(assert (=> b!133570 m!157533))

(declare-fun m!157535 () Bool)

(assert (=> b!133570 m!157535))

(assert (=> b!133570 m!157535))

(declare-fun m!157537 () Bool)

(assert (=> b!133570 m!157537))

(assert (=> b!133572 m!157535))

(assert (=> b!133572 m!157535))

(assert (=> b!133572 m!157537))

(assert (=> bm!14631 d!40663))

(declare-fun d!40665 () Bool)

(declare-fun e!87021 () Bool)

(assert (=> d!40665 e!87021))

(declare-fun res!64250 () Bool)

(assert (=> d!40665 (=> res!64250 e!87021)))

(declare-fun lt!69786 () Bool)

(assert (=> d!40665 (= res!64250 (not lt!69786))))

(declare-fun lt!69788 () Bool)

(assert (=> d!40665 (= lt!69786 lt!69788)))

(declare-fun lt!69785 () Unit!4132)

(declare-fun e!87022 () Unit!4132)

(assert (=> d!40665 (= lt!69785 e!87022)))

(declare-fun c!24783 () Bool)

(assert (=> d!40665 (= c!24783 lt!69788)))

(assert (=> d!40665 (= lt!69788 (containsKey!174 (toList!851 lt!69250) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40665 (= (contains!886 lt!69250 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69786)))

(declare-fun b!133573 () Bool)

(declare-fun lt!69787 () Unit!4132)

(assert (=> b!133573 (= e!87022 lt!69787)))

(assert (=> b!133573 (= lt!69787 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69250) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133573 (isDefined!124 (getValueByKey!170 (toList!851 lt!69250) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133574 () Bool)

(declare-fun Unit!4171 () Unit!4132)

(assert (=> b!133574 (= e!87022 Unit!4171)))

(declare-fun b!133575 () Bool)

(assert (=> b!133575 (= e!87021 (isDefined!124 (getValueByKey!170 (toList!851 lt!69250) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40665 c!24783) b!133573))

(assert (= (and d!40665 (not c!24783)) b!133574))

(assert (= (and d!40665 (not res!64250)) b!133575))

(declare-fun m!157539 () Bool)

(assert (=> d!40665 m!157539))

(declare-fun m!157541 () Bool)

(assert (=> b!133573 m!157541))

(declare-fun m!157543 () Bool)

(assert (=> b!133573 m!157543))

(assert (=> b!133573 m!157543))

(declare-fun m!157545 () Bool)

(assert (=> b!133573 m!157545))

(assert (=> b!133575 m!157543))

(assert (=> b!133575 m!157543))

(assert (=> b!133575 m!157545))

(assert (=> bm!14638 d!40665))

(assert (=> b!132911 d!40337))

(assert (=> b!132804 d!40519))

(assert (=> b!132769 d!40519))

(declare-fun b!133576 () Bool)

(declare-fun e!87023 () (_ BitVec 32))

(declare-fun e!87024 () (_ BitVec 32))

(assert (=> b!133576 (= e!87023 e!87024)))

(declare-fun c!24785 () Bool)

(assert (=> b!133576 (= c!24785 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133577 () Bool)

(declare-fun call!14730 () (_ BitVec 32))

(assert (=> b!133577 (= e!87024 (bvadd #b00000000000000000000000000000001 call!14730))))

(declare-fun d!40667 () Bool)

(declare-fun lt!69789 () (_ BitVec 32))

(assert (=> d!40667 (and (bvsge lt!69789 #b00000000000000000000000000000000) (bvsle lt!69789 (bvsub (size!2518 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!40667 (= lt!69789 e!87023)))

(declare-fun c!24784 () Bool)

(assert (=> d!40667 (= c!24784 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40667 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2518 (_keys!4612 newMap!16)) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40667 (= (arrayCountValidKeys!0 (_keys!4612 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))) lt!69789)))

(declare-fun b!133578 () Bool)

(assert (=> b!133578 (= e!87024 call!14730)))

(declare-fun b!133579 () Bool)

(assert (=> b!133579 (= e!87023 #b00000000000000000000000000000000)))

(declare-fun bm!14727 () Bool)

(assert (=> bm!14727 (= call!14730 (arrayCountValidKeys!0 (_keys!4612 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (= (and d!40667 c!24784) b!133579))

(assert (= (and d!40667 (not c!24784)) b!133576))

(assert (= (and b!133576 c!24785) b!133577))

(assert (= (and b!133576 (not c!24785)) b!133578))

(assert (= (or b!133577 b!133578) bm!14727))

(assert (=> b!133576 m!156869))

(assert (=> b!133576 m!156869))

(assert (=> b!133576 m!156871))

(declare-fun m!157547 () Bool)

(assert (=> bm!14727 m!157547))

(assert (=> bm!14645 d!40667))

(declare-fun d!40669 () Bool)

(assert (=> d!40669 (= (isEmpty!413 (getValueByKey!170 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) (not ((_ is Some!175) (getValueByKey!170 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(assert (=> d!40333 d!40669))

(assert (=> d!40327 d!40329))

(declare-fun d!40671 () Bool)

(assert (=> d!40671 (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69123 #b00000000000000000000000000000000)))

(assert (=> d!40671 true))

(declare-fun _$60!360 () Unit!4132)

(assert (=> d!40671 (= (choose!13 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69123 #b00000000000000000000000000000000) _$60!360)))

(declare-fun bs!5512 () Bool)

(assert (= bs!5512 d!40671))

(assert (=> bs!5512 m!156021))

(assert (=> d!40327 d!40671))

(assert (=> b!133119 d!40515))

(declare-fun d!40673 () Bool)

(assert (=> d!40673 (= (isDefined!124 (getValueByKey!170 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116)))) (not (isEmpty!413 (getValueByKey!170 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))))

(declare-fun bs!5513 () Bool)

(assert (= bs!5513 d!40673))

(assert (=> bs!5513 m!156207))

(declare-fun m!157549 () Bool)

(assert (=> bs!5513 m!157549))

(assert (=> b!132801 d!40673))

(declare-fun c!24786 () Bool)

(declare-fun d!40675 () Bool)

(assert (=> d!40675 (= c!24786 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116)))))))

(declare-fun e!87025 () Option!176)

(assert (=> d!40675 (= (getValueByKey!170 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))) e!87025)))

(declare-fun b!133582 () Bool)

(declare-fun e!87026 () Option!176)

(assert (=> b!133582 (= e!87026 (getValueByKey!170 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))

(declare-fun b!133581 () Bool)

(assert (=> b!133581 (= e!87025 e!87026)))

(declare-fun c!24787 () Bool)

(assert (=> b!133581 (= c!24787 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (not (= (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))))

(declare-fun b!133580 () Bool)

(assert (=> b!133580 (= e!87025 (Some!175 (_2!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))))))

(declare-fun b!133583 () Bool)

(assert (=> b!133583 (= e!87026 None!174)))

(assert (= (and d!40675 c!24786) b!133580))

(assert (= (and d!40675 (not c!24786)) b!133581))

(assert (= (and b!133581 c!24787) b!133582))

(assert (= (and b!133581 (not c!24787)) b!133583))

(assert (=> b!133582 m!155971))

(declare-fun m!157551 () Bool)

(assert (=> b!133582 m!157551))

(assert (=> b!132801 d!40675))

(assert (=> d!40383 d!40425))

(declare-fun d!40677 () Bool)

(declare-fun lt!69790 () Bool)

(assert (=> d!40677 (= lt!69790 (select (content!133 (toList!851 lt!69519)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun e!87028 () Bool)

(assert (=> d!40677 (= lt!69790 e!87028)))

(declare-fun res!64251 () Bool)

(assert (=> d!40677 (=> (not res!64251) (not e!87028))))

(assert (=> d!40677 (= res!64251 ((_ is Cons!1706) (toList!851 lt!69519)))))

(assert (=> d!40677 (= (contains!889 (toList!851 lt!69519) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69790)))

(declare-fun b!133584 () Bool)

(declare-fun e!87027 () Bool)

(assert (=> b!133584 (= e!87028 e!87027)))

(declare-fun res!64252 () Bool)

(assert (=> b!133584 (=> res!64252 e!87027)))

(assert (=> b!133584 (= res!64252 (= (h!2311 (toList!851 lt!69519)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!133585 () Bool)

(assert (=> b!133585 (= e!87027 (contains!889 (t!6152 (toList!851 lt!69519)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!40677 res!64251) b!133584))

(assert (= (and b!133584 (not res!64252)) b!133585))

(declare-fun m!157553 () Bool)

(assert (=> d!40677 m!157553))

(declare-fun m!157555 () Bool)

(assert (=> d!40677 m!157555))

(declare-fun m!157557 () Bool)

(assert (=> b!133585 m!157557))

(assert (=> b!133109 d!40677))

(assert (=> b!132766 d!40273))

(declare-fun d!40679 () Bool)

(assert (=> d!40679 (= (content!132 Nil!1708) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!40321 d!40679))

(declare-fun d!40681 () Bool)

(assert (=> d!40681 (= (get!1481 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132798 d!40681))

(assert (=> bm!14662 d!40351))

(declare-fun d!40683 () Bool)

(declare-fun e!87029 () Bool)

(assert (=> d!40683 e!87029))

(declare-fun res!64254 () Bool)

(assert (=> d!40683 (=> (not res!64254) (not e!87029))))

(declare-fun lt!69793 () ListLongMap!1671)

(assert (=> d!40683 (= res!64254 (contains!886 lt!69793 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!69791 () List!1710)

(assert (=> d!40683 (= lt!69793 (ListLongMap!1672 lt!69791))))

(declare-fun lt!69794 () Unit!4132)

(declare-fun lt!69792 () Unit!4132)

(assert (=> d!40683 (= lt!69794 lt!69792)))

(assert (=> d!40683 (= (getValueByKey!170 lt!69791 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!40683 (= lt!69792 (lemmaContainsTupThenGetReturnValue!88 lt!69791 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!40683 (= lt!69791 (insertStrictlySorted!91 (toList!851 call!14635) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!40683 (= (+!163 call!14635 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!69793)))

(declare-fun b!133586 () Bool)

(declare-fun res!64253 () Bool)

(assert (=> b!133586 (=> (not res!64253) (not e!87029))))

(assert (=> b!133586 (= res!64253 (= (getValueByKey!170 (toList!851 lt!69793) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!133587 () Bool)

(assert (=> b!133587 (= e!87029 (contains!889 (toList!851 lt!69793) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!40683 res!64254) b!133586))

(assert (= (and b!133586 res!64253) b!133587))

(declare-fun m!157559 () Bool)

(assert (=> d!40683 m!157559))

(declare-fun m!157561 () Bool)

(assert (=> d!40683 m!157561))

(declare-fun m!157563 () Bool)

(assert (=> d!40683 m!157563))

(declare-fun m!157565 () Bool)

(assert (=> d!40683 m!157565))

(declare-fun m!157567 () Bool)

(assert (=> b!133586 m!157567))

(declare-fun m!157569 () Bool)

(assert (=> b!133587 m!157569))

(assert (=> b!132817 d!40683))

(declare-fun d!40685 () Bool)

(assert (=> d!40685 (= (apply!116 lt!69362 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (getValueByKey!170 (toList!851 lt!69362) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5514 () Bool)

(assert (= bs!5514 d!40685))

(assert (=> bs!5514 m!156125))

(declare-fun m!157571 () Bool)

(assert (=> bs!5514 m!157571))

(assert (=> bs!5514 m!157571))

(declare-fun m!157573 () Bool)

(assert (=> bs!5514 m!157573))

(assert (=> b!132967 d!40685))

(assert (=> b!132967 d!40497))

(declare-fun d!40687 () Bool)

(declare-fun e!87030 () Bool)

(assert (=> d!40687 e!87030))

(declare-fun res!64256 () Bool)

(assert (=> d!40687 (=> (not res!64256) (not e!87030))))

(declare-fun lt!69797 () ListLongMap!1671)

(assert (=> d!40687 (= res!64256 (contains!886 lt!69797 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!69795 () List!1710)

(assert (=> d!40687 (= lt!69797 (ListLongMap!1672 lt!69795))))

(declare-fun lt!69798 () Unit!4132)

(declare-fun lt!69796 () Unit!4132)

(assert (=> d!40687 (= lt!69798 lt!69796)))

(assert (=> d!40687 (= (getValueByKey!170 lt!69795 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!40687 (= lt!69796 (lemmaContainsTupThenGetReturnValue!88 lt!69795 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!40687 (= lt!69795 (insertStrictlySorted!91 (toList!851 call!14628) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!40687 (= (+!163 call!14628 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!69797)))

(declare-fun b!133588 () Bool)

(declare-fun res!64255 () Bool)

(assert (=> b!133588 (=> (not res!64255) (not e!87030))))

(assert (=> b!133588 (= res!64255 (= (getValueByKey!170 (toList!851 lt!69797) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!133589 () Bool)

(assert (=> b!133589 (= e!87030 (contains!889 (toList!851 lt!69797) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!40687 res!64256) b!133588))

(assert (= (and b!133588 res!64255) b!133589))

(declare-fun m!157575 () Bool)

(assert (=> d!40687 m!157575))

(declare-fun m!157577 () Bool)

(assert (=> d!40687 m!157577))

(declare-fun m!157579 () Bool)

(assert (=> d!40687 m!157579))

(declare-fun m!157581 () Bool)

(assert (=> d!40687 m!157581))

(declare-fun m!157583 () Bool)

(assert (=> b!133588 m!157583))

(declare-fun m!157585 () Bool)

(assert (=> b!133589 m!157585))

(assert (=> b!132782 d!40687))

(assert (=> bm!14642 d!40583))

(assert (=> b!133048 d!40519))

(declare-fun d!40689 () Bool)

(assert (=> d!40689 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5515 () Bool)

(assert (= bs!5515 d!40689))

(assert (=> bs!5515 m!156195))

(declare-fun m!157587 () Bool)

(assert (=> bs!5515 m!157587))

(assert (=> b!132831 d!40689))

(assert (=> b!132831 d!40449))

(declare-fun d!40691 () Bool)

(assert (=> d!40691 (= (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and (not (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133082 d!40691))

(declare-fun d!40693 () Bool)

(declare-fun e!87031 () Bool)

(assert (=> d!40693 e!87031))

(declare-fun res!64258 () Bool)

(assert (=> d!40693 (=> (not res!64258) (not e!87031))))

(declare-fun lt!69801 () ListLongMap!1671)

(assert (=> d!40693 (= res!64258 (contains!886 lt!69801 (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))

(declare-fun lt!69799 () List!1710)

(assert (=> d!40693 (= lt!69801 (ListLongMap!1672 lt!69799))))

(declare-fun lt!69802 () Unit!4132)

(declare-fun lt!69800 () Unit!4132)

(assert (=> d!40693 (= lt!69802 lt!69800)))

(assert (=> d!40693 (= (getValueByKey!170 lt!69799 (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))

(assert (=> d!40693 (= lt!69800 (lemmaContainsTupThenGetReturnValue!88 lt!69799 (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))

(assert (=> d!40693 (= lt!69799 (insertStrictlySorted!91 (toList!851 lt!69243) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))

(assert (=> d!40693 (= (+!163 lt!69243 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))) lt!69801)))

(declare-fun b!133590 () Bool)

(declare-fun res!64257 () Bool)

(assert (=> b!133590 (=> (not res!64257) (not e!87031))))

(assert (=> b!133590 (= res!64257 (= (getValueByKey!170 (toList!851 lt!69801) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))))))

(declare-fun b!133591 () Bool)

(assert (=> b!133591 (= e!87031 (contains!889 (toList!851 lt!69801) (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))))

(assert (= (and d!40693 res!64258) b!133590))

(assert (= (and b!133590 res!64257) b!133591))

(declare-fun m!157589 () Bool)

(assert (=> d!40693 m!157589))

(declare-fun m!157591 () Bool)

(assert (=> d!40693 m!157591))

(declare-fun m!157593 () Bool)

(assert (=> d!40693 m!157593))

(declare-fun m!157595 () Bool)

(assert (=> d!40693 m!157595))

(declare-fun m!157597 () Bool)

(assert (=> b!133590 m!157597))

(declare-fun m!157599 () Bool)

(assert (=> b!133591 m!157599))

(assert (=> b!132810 d!40693))

(declare-fun d!40695 () Bool)

(assert (=> d!40695 (= (apply!116 (+!163 lt!69236 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))) lt!69241) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69236 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))) lt!69241)))))

(declare-fun bs!5516 () Bool)

(assert (= bs!5516 d!40695))

(declare-fun m!157601 () Bool)

(assert (=> bs!5516 m!157601))

(assert (=> bs!5516 m!157601))

(declare-fun m!157603 () Bool)

(assert (=> bs!5516 m!157603))

(assert (=> b!132810 d!40695))

(declare-fun d!40697 () Bool)

(assert (=> d!40697 (= (apply!116 lt!69236 lt!69241) (get!1482 (getValueByKey!170 (toList!851 lt!69236) lt!69241)))))

(declare-fun bs!5517 () Bool)

(assert (= bs!5517 d!40697))

(declare-fun m!157605 () Bool)

(assert (=> bs!5517 m!157605))

(assert (=> bs!5517 m!157605))

(declare-fun m!157607 () Bool)

(assert (=> bs!5517 m!157607))

(assert (=> b!132810 d!40697))

(declare-fun d!40699 () Bool)

(assert (=> d!40699 (= (apply!116 lt!69243 lt!69254) (get!1482 (getValueByKey!170 (toList!851 lt!69243) lt!69254)))))

(declare-fun bs!5518 () Bool)

(assert (= bs!5518 d!40699))

(declare-fun m!157609 () Bool)

(assert (=> bs!5518 m!157609))

(assert (=> bs!5518 m!157609))

(declare-fun m!157611 () Bool)

(assert (=> bs!5518 m!157611))

(assert (=> b!132810 d!40699))

(declare-fun d!40701 () Bool)

(declare-fun e!87032 () Bool)

(assert (=> d!40701 e!87032))

(declare-fun res!64260 () Bool)

(assert (=> d!40701 (=> (not res!64260) (not e!87032))))

(declare-fun lt!69805 () ListLongMap!1671)

(assert (=> d!40701 (= res!64260 (contains!886 lt!69805 (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!69803 () List!1710)

(assert (=> d!40701 (= lt!69805 (ListLongMap!1672 lt!69803))))

(declare-fun lt!69806 () Unit!4132)

(declare-fun lt!69804 () Unit!4132)

(assert (=> d!40701 (= lt!69806 lt!69804)))

(assert (=> d!40701 (= (getValueByKey!170 lt!69803 (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40701 (= lt!69804 (lemmaContainsTupThenGetReturnValue!88 lt!69803 (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40701 (= lt!69803 (insertStrictlySorted!91 (toList!851 lt!69234) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40701 (= (+!163 lt!69234 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))) lt!69805)))

(declare-fun b!133592 () Bool)

(declare-fun res!64259 () Bool)

(assert (=> b!133592 (=> (not res!64259) (not e!87032))))

(assert (=> b!133592 (= res!64259 (= (getValueByKey!170 (toList!851 lt!69805) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))))))

(declare-fun b!133593 () Bool)

(assert (=> b!133593 (= e!87032 (contains!889 (toList!851 lt!69805) (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))))

(assert (= (and d!40701 res!64260) b!133592))

(assert (= (and b!133592 res!64259) b!133593))

(declare-fun m!157613 () Bool)

(assert (=> d!40701 m!157613))

(declare-fun m!157615 () Bool)

(assert (=> d!40701 m!157615))

(declare-fun m!157617 () Bool)

(assert (=> d!40701 m!157617))

(declare-fun m!157619 () Bool)

(assert (=> d!40701 m!157619))

(declare-fun m!157621 () Bool)

(assert (=> b!133592 m!157621))

(declare-fun m!157623 () Bool)

(assert (=> b!133593 m!157623))

(assert (=> b!132810 d!40701))

(declare-fun d!40703 () Bool)

(assert (=> d!40703 (= (apply!116 (+!163 lt!69234 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))) lt!69238) (apply!116 lt!69234 lt!69238))))

(declare-fun lt!69807 () Unit!4132)

(assert (=> d!40703 (= lt!69807 (choose!828 lt!69234 lt!69235 (zeroValue!2719 newMap!16) lt!69238))))

(declare-fun e!87033 () Bool)

(assert (=> d!40703 e!87033))

(declare-fun res!64261 () Bool)

(assert (=> d!40703 (=> (not res!64261) (not e!87033))))

(assert (=> d!40703 (= res!64261 (contains!886 lt!69234 lt!69238))))

(assert (=> d!40703 (= (addApplyDifferent!92 lt!69234 lt!69235 (zeroValue!2719 newMap!16) lt!69238) lt!69807)))

(declare-fun b!133594 () Bool)

(assert (=> b!133594 (= e!87033 (not (= lt!69238 lt!69235)))))

(assert (= (and d!40703 res!64261) b!133594))

(assert (=> d!40703 m!156229))

(assert (=> d!40703 m!156237))

(declare-fun m!157625 () Bool)

(assert (=> d!40703 m!157625))

(assert (=> d!40703 m!156239))

(declare-fun m!157627 () Bool)

(assert (=> d!40703 m!157627))

(assert (=> d!40703 m!156229))

(assert (=> b!132810 d!40703))

(declare-fun d!40705 () Bool)

(declare-fun e!87034 () Bool)

(assert (=> d!40705 e!87034))

(declare-fun res!64263 () Bool)

(assert (=> d!40705 (=> (not res!64263) (not e!87034))))

(declare-fun lt!69810 () ListLongMap!1671)

(assert (=> d!40705 (= res!64263 (contains!886 lt!69810 (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!69808 () List!1710)

(assert (=> d!40705 (= lt!69810 (ListLongMap!1672 lt!69808))))

(declare-fun lt!69811 () Unit!4132)

(declare-fun lt!69809 () Unit!4132)

(assert (=> d!40705 (= lt!69811 lt!69809)))

(assert (=> d!40705 (= (getValueByKey!170 lt!69808 (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40705 (= lt!69809 (lemmaContainsTupThenGetReturnValue!88 lt!69808 (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40705 (= lt!69808 (insertStrictlySorted!91 (toList!851 lt!69240) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40705 (= (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))) lt!69810)))

(declare-fun b!133595 () Bool)

(declare-fun res!64262 () Bool)

(assert (=> b!133595 (=> (not res!64262) (not e!87034))))

(assert (=> b!133595 (= res!64262 (= (getValueByKey!170 (toList!851 lt!69810) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))))))

(declare-fun b!133596 () Bool)

(assert (=> b!133596 (= e!87034 (contains!889 (toList!851 lt!69810) (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))))

(assert (= (and d!40705 res!64263) b!133595))

(assert (= (and b!133595 res!64262) b!133596))

(declare-fun m!157629 () Bool)

(assert (=> d!40705 m!157629))

(declare-fun m!157631 () Bool)

(assert (=> d!40705 m!157631))

(declare-fun m!157633 () Bool)

(assert (=> d!40705 m!157633))

(declare-fun m!157635 () Bool)

(assert (=> d!40705 m!157635))

(declare-fun m!157637 () Bool)

(assert (=> b!133595 m!157637))

(declare-fun m!157639 () Bool)

(assert (=> b!133596 m!157639))

(assert (=> b!132810 d!40705))

(declare-fun d!40707 () Bool)

(assert (=> d!40707 (= (apply!116 (+!163 lt!69236 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))) lt!69241) (apply!116 lt!69236 lt!69241))))

(declare-fun lt!69812 () Unit!4132)

(assert (=> d!40707 (= lt!69812 (choose!828 lt!69236 lt!69253 (minValue!2719 newMap!16) lt!69241))))

(declare-fun e!87035 () Bool)

(assert (=> d!40707 e!87035))

(declare-fun res!64264 () Bool)

(assert (=> d!40707 (=> (not res!64264) (not e!87035))))

(assert (=> d!40707 (= res!64264 (contains!886 lt!69236 lt!69241))))

(assert (=> d!40707 (= (addApplyDifferent!92 lt!69236 lt!69253 (minValue!2719 newMap!16) lt!69241) lt!69812)))

(declare-fun b!133597 () Bool)

(assert (=> b!133597 (= e!87035 (not (= lt!69241 lt!69253)))))

(assert (= (and d!40707 res!64264) b!133597))

(assert (=> d!40707 m!156241))

(assert (=> d!40707 m!156243))

(declare-fun m!157641 () Bool)

(assert (=> d!40707 m!157641))

(assert (=> d!40707 m!156251))

(declare-fun m!157643 () Bool)

(assert (=> d!40707 m!157643))

(assert (=> d!40707 m!156241))

(assert (=> b!132810 d!40707))

(declare-fun d!40709 () Bool)

(assert (=> d!40709 (= (apply!116 (+!163 lt!69243 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))) lt!69254) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69243 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))) lt!69254)))))

(declare-fun bs!5519 () Bool)

(assert (= bs!5519 d!40709))

(declare-fun m!157645 () Bool)

(assert (=> bs!5519 m!157645))

(assert (=> bs!5519 m!157645))

(declare-fun m!157647 () Bool)

(assert (=> bs!5519 m!157647))

(assert (=> b!132810 d!40709))

(declare-fun d!40711 () Bool)

(declare-fun e!87036 () Bool)

(assert (=> d!40711 e!87036))

(declare-fun res!64266 () Bool)

(assert (=> d!40711 (=> (not res!64266) (not e!87036))))

(declare-fun lt!69815 () ListLongMap!1671)

(assert (=> d!40711 (= res!64266 (contains!886 lt!69815 (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))

(declare-fun lt!69813 () List!1710)

(assert (=> d!40711 (= lt!69815 (ListLongMap!1672 lt!69813))))

(declare-fun lt!69816 () Unit!4132)

(declare-fun lt!69814 () Unit!4132)

(assert (=> d!40711 (= lt!69816 lt!69814)))

(assert (=> d!40711 (= (getValueByKey!170 lt!69813 (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))

(assert (=> d!40711 (= lt!69814 (lemmaContainsTupThenGetReturnValue!88 lt!69813 (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))

(assert (=> d!40711 (= lt!69813 (insertStrictlySorted!91 (toList!851 lt!69236) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))

(assert (=> d!40711 (= (+!163 lt!69236 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))) lt!69815)))

(declare-fun b!133598 () Bool)

(declare-fun res!64265 () Bool)

(assert (=> b!133598 (=> (not res!64265) (not e!87036))))

(assert (=> b!133598 (= res!64265 (= (getValueByKey!170 (toList!851 lt!69815) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))))))

(declare-fun b!133599 () Bool)

(assert (=> b!133599 (= e!87036 (contains!889 (toList!851 lt!69815) (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))))

(assert (= (and d!40711 res!64266) b!133598))

(assert (= (and b!133598 res!64265) b!133599))

(declare-fun m!157649 () Bool)

(assert (=> d!40711 m!157649))

(declare-fun m!157651 () Bool)

(assert (=> d!40711 m!157651))

(declare-fun m!157653 () Bool)

(assert (=> d!40711 m!157653))

(declare-fun m!157655 () Bool)

(assert (=> d!40711 m!157655))

(declare-fun m!157657 () Bool)

(assert (=> b!133598 m!157657))

(declare-fun m!157659 () Bool)

(assert (=> b!133599 m!157659))

(assert (=> b!132810 d!40711))

(declare-fun d!40713 () Bool)

(declare-fun e!87037 () Bool)

(assert (=> d!40713 e!87037))

(declare-fun res!64267 () Bool)

(assert (=> d!40713 (=> res!64267 e!87037)))

(declare-fun lt!69818 () Bool)

(assert (=> d!40713 (= res!64267 (not lt!69818))))

(declare-fun lt!69820 () Bool)

(assert (=> d!40713 (= lt!69818 lt!69820)))

(declare-fun lt!69817 () Unit!4132)

(declare-fun e!87038 () Unit!4132)

(assert (=> d!40713 (= lt!69817 e!87038)))

(declare-fun c!24788 () Bool)

(assert (=> d!40713 (= c!24788 lt!69820)))

(assert (=> d!40713 (= lt!69820 (containsKey!174 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) lt!69246))))

(assert (=> d!40713 (= (contains!886 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))) lt!69246) lt!69818)))

(declare-fun b!133600 () Bool)

(declare-fun lt!69819 () Unit!4132)

(assert (=> b!133600 (= e!87038 lt!69819)))

(assert (=> b!133600 (= lt!69819 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) lt!69246))))

(assert (=> b!133600 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) lt!69246))))

(declare-fun b!133601 () Bool)

(declare-fun Unit!4172 () Unit!4132)

(assert (=> b!133601 (= e!87038 Unit!4172)))

(declare-fun b!133602 () Bool)

(assert (=> b!133602 (= e!87037 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) lt!69246)))))

(assert (= (and d!40713 c!24788) b!133600))

(assert (= (and d!40713 (not c!24788)) b!133601))

(assert (= (and d!40713 (not res!64267)) b!133602))

(declare-fun m!157661 () Bool)

(assert (=> d!40713 m!157661))

(declare-fun m!157663 () Bool)

(assert (=> b!133600 m!157663))

(declare-fun m!157665 () Bool)

(assert (=> b!133600 m!157665))

(assert (=> b!133600 m!157665))

(declare-fun m!157667 () Bool)

(assert (=> b!133600 m!157667))

(assert (=> b!133602 m!157665))

(assert (=> b!133602 m!157665))

(assert (=> b!133602 m!157667))

(assert (=> b!132810 d!40713))

(declare-fun d!40715 () Bool)

(assert (=> d!40715 (= (apply!116 lt!69234 lt!69238) (get!1482 (getValueByKey!170 (toList!851 lt!69234) lt!69238)))))

(declare-fun bs!5520 () Bool)

(assert (= bs!5520 d!40715))

(declare-fun m!157669 () Bool)

(assert (=> bs!5520 m!157669))

(assert (=> bs!5520 m!157669))

(declare-fun m!157671 () Bool)

(assert (=> bs!5520 m!157671))

(assert (=> b!132810 d!40715))

(declare-fun b!133603 () Bool)

(assert (=> b!133603 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> b!133603 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 lt!69094)))))

(declare-fun lt!69823 () ListLongMap!1671)

(declare-fun e!87039 () Bool)

(assert (=> b!133603 (= e!87039 (= (apply!116 lt!69823 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!14728 () Bool)

(declare-fun call!14731 () ListLongMap!1671)

(assert (=> bm!14728 (= call!14731 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!133604 () Bool)

(declare-fun e!87042 () ListLongMap!1671)

(assert (=> b!133604 (= e!87042 call!14731)))

(declare-fun b!133605 () Bool)

(declare-fun e!87044 () Bool)

(declare-fun e!87041 () Bool)

(assert (=> b!133605 (= e!87044 e!87041)))

(declare-fun c!24792 () Bool)

(assert (=> b!133605 (= c!24792 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133606 () Bool)

(assert (=> b!133606 (= e!87041 (isEmpty!414 lt!69823))))

(declare-fun b!133607 () Bool)

(declare-fun e!87045 () Bool)

(assert (=> b!133607 (= e!87045 e!87044)))

(declare-fun c!24789 () Bool)

(declare-fun e!87040 () Bool)

(assert (=> b!133607 (= c!24789 e!87040)))

(declare-fun res!64270 () Bool)

(assert (=> b!133607 (=> (not res!64270) (not e!87040))))

(assert (=> b!133607 (= res!64270 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133608 () Bool)

(assert (=> b!133608 (= e!87040 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133608 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!133609 () Bool)

(declare-fun lt!69822 () Unit!4132)

(declare-fun lt!69827 () Unit!4132)

(assert (=> b!133609 (= lt!69822 lt!69827)))

(declare-fun lt!69821 () ListLongMap!1671)

(declare-fun lt!69825 () V!3481)

(declare-fun lt!69826 () (_ BitVec 64))

(declare-fun lt!69824 () (_ BitVec 64))

(assert (=> b!133609 (not (contains!886 (+!163 lt!69821 (tuple2!2585 lt!69824 lt!69825)) lt!69826))))

(assert (=> b!133609 (= lt!69827 (addStillNotContains!62 lt!69821 lt!69824 lt!69825 lt!69826))))

(assert (=> b!133609 (= lt!69826 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133609 (= lt!69825 (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133609 (= lt!69824 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133609 (= lt!69821 call!14731)))

(assert (=> b!133609 (= e!87042 (+!163 call!14731 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133610 () Bool)

(declare-fun e!87043 () ListLongMap!1671)

(assert (=> b!133610 (= e!87043 e!87042)))

(declare-fun c!24790 () Bool)

(assert (=> b!133610 (= c!24790 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133611 () Bool)

(assert (=> b!133611 (= e!87043 (ListLongMap!1672 Nil!1707))))

(declare-fun d!40717 () Bool)

(assert (=> d!40717 e!87045))

(declare-fun res!64269 () Bool)

(assert (=> d!40717 (=> (not res!64269) (not e!87045))))

(assert (=> d!40717 (= res!64269 (not (contains!886 lt!69823 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40717 (= lt!69823 e!87043)))

(declare-fun c!24791 () Bool)

(assert (=> d!40717 (= c!24791 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40717 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40717 (= (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69823)))

(declare-fun b!133612 () Bool)

(assert (=> b!133612 (= e!87041 (= lt!69823 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun b!133613 () Bool)

(declare-fun res!64271 () Bool)

(assert (=> b!133613 (=> (not res!64271) (not e!87045))))

(assert (=> b!133613 (= res!64271 (not (contains!886 lt!69823 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133614 () Bool)

(assert (=> b!133614 (= e!87044 e!87039)))

(assert (=> b!133614 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64268 () Bool)

(assert (=> b!133614 (= res!64268 (contains!886 lt!69823 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133614 (=> (not res!64268) (not e!87039))))

(assert (= (and d!40717 c!24791) b!133611))

(assert (= (and d!40717 (not c!24791)) b!133610))

(assert (= (and b!133610 c!24790) b!133609))

(assert (= (and b!133610 (not c!24790)) b!133604))

(assert (= (or b!133609 b!133604) bm!14728))

(assert (= (and d!40717 res!64269) b!133613))

(assert (= (and b!133613 res!64271) b!133607))

(assert (= (and b!133607 res!64270) b!133608))

(assert (= (and b!133607 c!24789) b!133614))

(assert (= (and b!133607 (not c!24789)) b!133605))

(assert (= (and b!133614 res!64268) b!133603))

(assert (= (and b!133605 c!24792) b!133612))

(assert (= (and b!133605 (not c!24792)) b!133606))

(declare-fun b_lambda!5939 () Bool)

(assert (=> (not b_lambda!5939) (not b!133603)))

(assert (=> b!133603 t!6164))

(declare-fun b_and!8269 () Bool)

(assert (= b_and!8265 (and (=> t!6164 result!3993) b_and!8269)))

(assert (=> b!133603 t!6166))

(declare-fun b_and!8271 () Bool)

(assert (= b_and!8267 (and (=> t!6166 result!3995) b_and!8271)))

(declare-fun b_lambda!5941 () Bool)

(assert (=> (not b_lambda!5941) (not b!133609)))

(assert (=> b!133609 t!6164))

(declare-fun b_and!8273 () Bool)

(assert (= b_and!8269 (and (=> t!6164 result!3993) b_and!8273)))

(assert (=> b!133609 t!6166))

(declare-fun b_and!8275 () Bool)

(assert (= b_and!8271 (and (=> t!6166 result!3995) b_and!8275)))

(assert (=> b!133608 m!156125))

(assert (=> b!133608 m!156125))

(assert (=> b!133608 m!156141))

(declare-fun m!157673 () Bool)

(assert (=> b!133613 m!157673))

(assert (=> b!133609 m!156217))

(declare-fun m!157675 () Bool)

(assert (=> b!133609 m!157675))

(assert (=> b!133609 m!156125))

(assert (=> b!133609 m!156217))

(assert (=> b!133609 m!156135))

(assert (=> b!133609 m!156219))

(declare-fun m!157677 () Bool)

(assert (=> b!133609 m!157677))

(declare-fun m!157679 () Bool)

(assert (=> b!133609 m!157679))

(assert (=> b!133609 m!156135))

(declare-fun m!157681 () Bool)

(assert (=> b!133609 m!157681))

(assert (=> b!133609 m!157677))

(declare-fun m!157683 () Bool)

(assert (=> b!133612 m!157683))

(assert (=> b!133614 m!156125))

(assert (=> b!133614 m!156125))

(declare-fun m!157685 () Bool)

(assert (=> b!133614 m!157685))

(declare-fun m!157687 () Bool)

(assert (=> b!133606 m!157687))

(assert (=> bm!14728 m!157683))

(declare-fun m!157689 () Bool)

(assert (=> d!40717 m!157689))

(assert (=> d!40717 m!156183))

(assert (=> b!133610 m!156125))

(assert (=> b!133610 m!156125))

(assert (=> b!133610 m!156141))

(assert (=> b!133603 m!156217))

(assert (=> b!133603 m!156125))

(assert (=> b!133603 m!156217))

(assert (=> b!133603 m!156135))

(assert (=> b!133603 m!156219))

(assert (=> b!133603 m!156135))

(assert (=> b!133603 m!156125))

(declare-fun m!157691 () Bool)

(assert (=> b!133603 m!157691))

(assert (=> b!132810 d!40717))

(declare-fun d!40719 () Bool)

(assert (=> d!40719 (= (apply!116 (+!163 lt!69234 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))) lt!69238) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69234 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))) lt!69238)))))

(declare-fun bs!5521 () Bool)

(assert (= bs!5521 d!40719))

(declare-fun m!157693 () Bool)

(assert (=> bs!5521 m!157693))

(assert (=> bs!5521 m!157693))

(declare-fun m!157695 () Bool)

(assert (=> bs!5521 m!157695))

(assert (=> b!132810 d!40719))

(declare-fun d!40721 () Bool)

(assert (=> d!40721 (contains!886 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))) lt!69246)))

(declare-fun lt!69828 () Unit!4132)

(assert (=> d!40721 (= lt!69828 (choose!829 lt!69240 lt!69248 (zeroValue!2719 newMap!16) lt!69246))))

(assert (=> d!40721 (contains!886 lt!69240 lt!69246)))

(assert (=> d!40721 (= (addStillContains!92 lt!69240 lt!69248 (zeroValue!2719 newMap!16) lt!69246) lt!69828)))

(declare-fun bs!5522 () Bool)

(assert (= bs!5522 d!40721))

(assert (=> bs!5522 m!156233))

(assert (=> bs!5522 m!156233))

(assert (=> bs!5522 m!156245))

(declare-fun m!157697 () Bool)

(assert (=> bs!5522 m!157697))

(declare-fun m!157699 () Bool)

(assert (=> bs!5522 m!157699))

(assert (=> b!132810 d!40721))

(declare-fun d!40723 () Bool)

(assert (=> d!40723 (= (apply!116 (+!163 lt!69243 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))) lt!69254) (apply!116 lt!69243 lt!69254))))

(declare-fun lt!69829 () Unit!4132)

(assert (=> d!40723 (= lt!69829 (choose!828 lt!69243 lt!69244 (minValue!2719 newMap!16) lt!69254))))

(declare-fun e!87046 () Bool)

(assert (=> d!40723 e!87046))

(declare-fun res!64272 () Bool)

(assert (=> d!40723 (=> (not res!64272) (not e!87046))))

(assert (=> d!40723 (= res!64272 (contains!886 lt!69243 lt!69254))))

(assert (=> d!40723 (= (addApplyDifferent!92 lt!69243 lt!69244 (minValue!2719 newMap!16) lt!69254) lt!69829)))

(declare-fun b!133615 () Bool)

(assert (=> b!133615 (= e!87046 (not (= lt!69254 lt!69244)))))

(assert (= (and d!40723 res!64272) b!133615))

(assert (=> d!40723 m!156235))

(assert (=> d!40723 m!156257))

(declare-fun m!157701 () Bool)

(assert (=> d!40723 m!157701))

(assert (=> d!40723 m!156255))

(declare-fun m!157703 () Bool)

(assert (=> d!40723 m!157703))

(assert (=> d!40723 m!156235))

(assert (=> b!132810 d!40723))

(declare-fun d!40725 () Bool)

(declare-fun e!87047 () Bool)

(assert (=> d!40725 e!87047))

(declare-fun res!64274 () Bool)

(assert (=> d!40725 (=> (not res!64274) (not e!87047))))

(declare-fun lt!69832 () ListLongMap!1671)

(assert (=> d!40725 (= res!64274 (contains!886 lt!69832 (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!69830 () List!1710)

(assert (=> d!40725 (= lt!69832 (ListLongMap!1672 lt!69830))))

(declare-fun lt!69833 () Unit!4132)

(declare-fun lt!69831 () Unit!4132)

(assert (=> d!40725 (= lt!69833 lt!69831)))

(assert (=> d!40725 (= (getValueByKey!170 lt!69830 (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!40725 (= lt!69831 (lemmaContainsTupThenGetReturnValue!88 lt!69830 (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!40725 (= lt!69830 (insertStrictlySorted!91 (toList!851 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655))) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!40725 (= (+!163 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655)) (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!69832)))

(declare-fun b!133616 () Bool)

(declare-fun res!64273 () Bool)

(assert (=> b!133616 (=> (not res!64273) (not e!87047))))

(assert (=> b!133616 (= res!64273 (= (getValueByKey!170 (toList!851 lt!69832) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!133617 () Bool)

(assert (=> b!133617 (= e!87047 (contains!889 (toList!851 lt!69832) (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!40725 res!64274) b!133616))

(assert (= (and b!133616 res!64273) b!133617))

(declare-fun m!157705 () Bool)

(assert (=> d!40725 m!157705))

(declare-fun m!157707 () Bool)

(assert (=> d!40725 m!157707))

(declare-fun m!157709 () Bool)

(assert (=> d!40725 m!157709))

(declare-fun m!157711 () Bool)

(assert (=> d!40725 m!157711))

(declare-fun m!157713 () Bool)

(assert (=> b!133616 m!157713))

(declare-fun m!157715 () Bool)

(assert (=> b!133617 m!157715))

(assert (=> bm!14647 d!40725))

(declare-fun d!40727 () Bool)

(assert (=> d!40727 (= (apply!116 (+!163 lt!69206 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))) lt!69211) (apply!116 lt!69206 lt!69211))))

(declare-fun lt!69834 () Unit!4132)

(assert (=> d!40727 (= lt!69834 (choose!828 lt!69206 lt!69223 (minValue!2719 newMap!16) lt!69211))))

(declare-fun e!87048 () Bool)

(assert (=> d!40727 e!87048))

(declare-fun res!64275 () Bool)

(assert (=> d!40727 (=> (not res!64275) (not e!87048))))

(assert (=> d!40727 (= res!64275 (contains!886 lt!69206 lt!69211))))

(assert (=> d!40727 (= (addApplyDifferent!92 lt!69206 lt!69223 (minValue!2719 newMap!16) lt!69211) lt!69834)))

(declare-fun b!133618 () Bool)

(assert (=> b!133618 (= e!87048 (not (= lt!69211 lt!69223)))))

(assert (= (and d!40727 res!64275) b!133618))

(assert (=> d!40727 m!156161))

(assert (=> d!40727 m!156163))

(declare-fun m!157717 () Bool)

(assert (=> d!40727 m!157717))

(assert (=> d!40727 m!156171))

(declare-fun m!157719 () Bool)

(assert (=> d!40727 m!157719))

(assert (=> d!40727 m!156161))

(assert (=> b!132775 d!40727))

(declare-fun d!40729 () Bool)

(assert (=> d!40729 (= (apply!116 (+!163 lt!69213 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))) lt!69224) (apply!116 lt!69213 lt!69224))))

(declare-fun lt!69835 () Unit!4132)

(assert (=> d!40729 (= lt!69835 (choose!828 lt!69213 lt!69214 (minValue!2719 newMap!16) lt!69224))))

(declare-fun e!87049 () Bool)

(assert (=> d!40729 e!87049))

(declare-fun res!64276 () Bool)

(assert (=> d!40729 (=> (not res!64276) (not e!87049))))

(assert (=> d!40729 (= res!64276 (contains!886 lt!69213 lt!69224))))

(assert (=> d!40729 (= (addApplyDifferent!92 lt!69213 lt!69214 (minValue!2719 newMap!16) lt!69224) lt!69835)))

(declare-fun b!133619 () Bool)

(assert (=> b!133619 (= e!87049 (not (= lt!69224 lt!69214)))))

(assert (= (and d!40729 res!64276) b!133619))

(assert (=> d!40729 m!156155))

(assert (=> d!40729 m!156177))

(declare-fun m!157721 () Bool)

(assert (=> d!40729 m!157721))

(assert (=> d!40729 m!156175))

(declare-fun m!157723 () Bool)

(assert (=> d!40729 m!157723))

(assert (=> d!40729 m!156155))

(assert (=> b!132775 d!40729))

(declare-fun d!40731 () Bool)

(declare-fun e!87050 () Bool)

(assert (=> d!40731 e!87050))

(declare-fun res!64278 () Bool)

(assert (=> d!40731 (=> (not res!64278) (not e!87050))))

(declare-fun lt!69838 () ListLongMap!1671)

(assert (=> d!40731 (= res!64278 (contains!886 lt!69838 (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))

(declare-fun lt!69836 () List!1710)

(assert (=> d!40731 (= lt!69838 (ListLongMap!1672 lt!69836))))

(declare-fun lt!69839 () Unit!4132)

(declare-fun lt!69837 () Unit!4132)

(assert (=> d!40731 (= lt!69839 lt!69837)))

(assert (=> d!40731 (= (getValueByKey!170 lt!69836 (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))

(assert (=> d!40731 (= lt!69837 (lemmaContainsTupThenGetReturnValue!88 lt!69836 (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))

(assert (=> d!40731 (= lt!69836 (insertStrictlySorted!91 (toList!851 lt!69213) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))

(assert (=> d!40731 (= (+!163 lt!69213 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))) lt!69838)))

(declare-fun b!133620 () Bool)

(declare-fun res!64277 () Bool)

(assert (=> b!133620 (=> (not res!64277) (not e!87050))))

(assert (=> b!133620 (= res!64277 (= (getValueByKey!170 (toList!851 lt!69838) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))))))

(declare-fun b!133621 () Bool)

(assert (=> b!133621 (= e!87050 (contains!889 (toList!851 lt!69838) (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))))

(assert (= (and d!40731 res!64278) b!133620))

(assert (= (and b!133620 res!64277) b!133621))

(declare-fun m!157725 () Bool)

(assert (=> d!40731 m!157725))

(declare-fun m!157727 () Bool)

(assert (=> d!40731 m!157727))

(declare-fun m!157729 () Bool)

(assert (=> d!40731 m!157729))

(declare-fun m!157731 () Bool)

(assert (=> d!40731 m!157731))

(declare-fun m!157733 () Bool)

(assert (=> b!133620 m!157733))

(declare-fun m!157735 () Bool)

(assert (=> b!133621 m!157735))

(assert (=> b!132775 d!40731))

(declare-fun b!133622 () Bool)

(assert (=> b!133622 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> b!133622 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))))))))

(declare-fun lt!69842 () ListLongMap!1671)

(declare-fun e!87051 () Bool)

(assert (=> b!133622 (= e!87051 (= (apply!116 lt!69842 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!14729 () Bool)

(declare-fun call!14732 () ListLongMap!1671)

(assert (=> bm!14729 (= call!14732 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!133623 () Bool)

(declare-fun e!87054 () ListLongMap!1671)

(assert (=> b!133623 (= e!87054 call!14732)))

(declare-fun b!133624 () Bool)

(declare-fun e!87056 () Bool)

(declare-fun e!87053 () Bool)

(assert (=> b!133624 (= e!87056 e!87053)))

(declare-fun c!24796 () Bool)

(assert (=> b!133624 (= c!24796 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133625 () Bool)

(assert (=> b!133625 (= e!87053 (isEmpty!414 lt!69842))))

(declare-fun b!133626 () Bool)

(declare-fun e!87057 () Bool)

(assert (=> b!133626 (= e!87057 e!87056)))

(declare-fun c!24793 () Bool)

(declare-fun e!87052 () Bool)

(assert (=> b!133626 (= c!24793 e!87052)))

(declare-fun res!64281 () Bool)

(assert (=> b!133626 (=> (not res!64281) (not e!87052))))

(assert (=> b!133626 (= res!64281 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133627 () Bool)

(assert (=> b!133627 (= e!87052 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133627 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!133628 () Bool)

(declare-fun lt!69841 () Unit!4132)

(declare-fun lt!69846 () Unit!4132)

(assert (=> b!133628 (= lt!69841 lt!69846)))

(declare-fun lt!69843 () (_ BitVec 64))

(declare-fun lt!69840 () ListLongMap!1671)

(declare-fun lt!69845 () (_ BitVec 64))

(declare-fun lt!69844 () V!3481)

(assert (=> b!133628 (not (contains!886 (+!163 lt!69840 (tuple2!2585 lt!69843 lt!69844)) lt!69845))))

(assert (=> b!133628 (= lt!69846 (addStillNotContains!62 lt!69840 lt!69843 lt!69844 lt!69845))))

(assert (=> b!133628 (= lt!69845 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133628 (= lt!69844 (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133628 (= lt!69843 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133628 (= lt!69840 call!14732)))

(assert (=> b!133628 (= e!87054 (+!163 call!14732 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133629 () Bool)

(declare-fun e!87055 () ListLongMap!1671)

(assert (=> b!133629 (= e!87055 e!87054)))

(declare-fun c!24794 () Bool)

(assert (=> b!133629 (= c!24794 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133630 () Bool)

(assert (=> b!133630 (= e!87055 (ListLongMap!1672 Nil!1707))))

(declare-fun d!40733 () Bool)

(assert (=> d!40733 e!87057))

(declare-fun res!64280 () Bool)

(assert (=> d!40733 (=> (not res!64280) (not e!87057))))

(assert (=> d!40733 (= res!64280 (not (contains!886 lt!69842 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40733 (= lt!69842 e!87055)))

(declare-fun c!24795 () Bool)

(assert (=> d!40733 (= c!24795 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40733 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40733 (= (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69842)))

(declare-fun b!133631 () Bool)

(assert (=> b!133631 (= e!87053 (= lt!69842 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun b!133632 () Bool)

(declare-fun res!64282 () Bool)

(assert (=> b!133632 (=> (not res!64282) (not e!87057))))

(assert (=> b!133632 (= res!64282 (not (contains!886 lt!69842 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133633 () Bool)

(assert (=> b!133633 (= e!87056 e!87051)))

(assert (=> b!133633 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64279 () Bool)

(assert (=> b!133633 (= res!64279 (contains!886 lt!69842 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133633 (=> (not res!64279) (not e!87051))))

(assert (= (and d!40733 c!24795) b!133630))

(assert (= (and d!40733 (not c!24795)) b!133629))

(assert (= (and b!133629 c!24794) b!133628))

(assert (= (and b!133629 (not c!24794)) b!133623))

(assert (= (or b!133628 b!133623) bm!14729))

(assert (= (and d!40733 res!64280) b!133632))

(assert (= (and b!133632 res!64282) b!133626))

(assert (= (and b!133626 res!64281) b!133627))

(assert (= (and b!133626 c!24793) b!133633))

(assert (= (and b!133626 (not c!24793)) b!133624))

(assert (= (and b!133633 res!64279) b!133622))

(assert (= (and b!133624 c!24796) b!133631))

(assert (= (and b!133624 (not c!24796)) b!133625))

(declare-fun b_lambda!5943 () Bool)

(assert (=> (not b_lambda!5943) (not b!133622)))

(assert (=> b!133622 t!6164))

(declare-fun b_and!8277 () Bool)

(assert (= b_and!8273 (and (=> t!6164 result!3993) b_and!8277)))

(assert (=> b!133622 t!6166))

(declare-fun b_and!8279 () Bool)

(assert (= b_and!8275 (and (=> t!6166 result!3995) b_and!8279)))

(declare-fun b_lambda!5945 () Bool)

(assert (=> (not b_lambda!5945) (not b!133628)))

(assert (=> b!133628 t!6164))

(declare-fun b_and!8281 () Bool)

(assert (= b_and!8277 (and (=> t!6164 result!3993) b_and!8281)))

(assert (=> b!133628 t!6166))

(declare-fun b_and!8283 () Bool)

(assert (= b_and!8279 (and (=> t!6166 result!3995) b_and!8283)))

(assert (=> b!133627 m!156125))

(assert (=> b!133627 m!156125))

(assert (=> b!133627 m!156141))

(declare-fun m!157737 () Bool)

(assert (=> b!133632 m!157737))

(assert (=> b!133628 m!156133))

(declare-fun m!157739 () Bool)

(assert (=> b!133628 m!157739))

(assert (=> b!133628 m!156125))

(assert (=> b!133628 m!156133))

(assert (=> b!133628 m!156135))

(assert (=> b!133628 m!156137))

(declare-fun m!157741 () Bool)

(assert (=> b!133628 m!157741))

(declare-fun m!157743 () Bool)

(assert (=> b!133628 m!157743))

(assert (=> b!133628 m!156135))

(declare-fun m!157745 () Bool)

(assert (=> b!133628 m!157745))

(assert (=> b!133628 m!157741))

(declare-fun m!157747 () Bool)

(assert (=> b!133631 m!157747))

(assert (=> b!133633 m!156125))

(assert (=> b!133633 m!156125))

(declare-fun m!157749 () Bool)

(assert (=> b!133633 m!157749))

(declare-fun m!157751 () Bool)

(assert (=> b!133625 m!157751))

(assert (=> bm!14729 m!157747))

(declare-fun m!157753 () Bool)

(assert (=> d!40733 m!157753))

(assert (=> d!40733 m!156183))

(assert (=> b!133629 m!156125))

(assert (=> b!133629 m!156125))

(assert (=> b!133629 m!156141))

(assert (=> b!133622 m!156133))

(assert (=> b!133622 m!156125))

(assert (=> b!133622 m!156133))

(assert (=> b!133622 m!156135))

(assert (=> b!133622 m!156137))

(assert (=> b!133622 m!156135))

(assert (=> b!133622 m!156125))

(declare-fun m!157755 () Bool)

(assert (=> b!133622 m!157755))

(assert (=> b!132775 d!40733))

(declare-fun d!40735 () Bool)

(assert (=> d!40735 (= (apply!116 (+!163 lt!69204 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))) lt!69208) (apply!116 lt!69204 lt!69208))))

(declare-fun lt!69847 () Unit!4132)

(assert (=> d!40735 (= lt!69847 (choose!828 lt!69204 lt!69205 (zeroValue!2719 newMap!16) lt!69208))))

(declare-fun e!87058 () Bool)

(assert (=> d!40735 e!87058))

(declare-fun res!64283 () Bool)

(assert (=> d!40735 (=> (not res!64283) (not e!87058))))

(assert (=> d!40735 (= res!64283 (contains!886 lt!69204 lt!69208))))

(assert (=> d!40735 (= (addApplyDifferent!92 lt!69204 lt!69205 (zeroValue!2719 newMap!16) lt!69208) lt!69847)))

(declare-fun b!133634 () Bool)

(assert (=> b!133634 (= e!87058 (not (= lt!69208 lt!69205)))))

(assert (= (and d!40735 res!64283) b!133634))

(assert (=> d!40735 m!156149))

(assert (=> d!40735 m!156157))

(declare-fun m!157757 () Bool)

(assert (=> d!40735 m!157757))

(assert (=> d!40735 m!156159))

(declare-fun m!157759 () Bool)

(assert (=> d!40735 m!157759))

(assert (=> d!40735 m!156149))

(assert (=> b!132775 d!40735))

(declare-fun d!40737 () Bool)

(assert (=> d!40737 (= (apply!116 (+!163 lt!69204 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))) lt!69208) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69204 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))) lt!69208)))))

(declare-fun bs!5523 () Bool)

(assert (= bs!5523 d!40737))

(declare-fun m!157761 () Bool)

(assert (=> bs!5523 m!157761))

(assert (=> bs!5523 m!157761))

(declare-fun m!157763 () Bool)

(assert (=> bs!5523 m!157763))

(assert (=> b!132775 d!40737))

(declare-fun d!40739 () Bool)

(declare-fun e!87059 () Bool)

(assert (=> d!40739 e!87059))

(declare-fun res!64285 () Bool)

(assert (=> d!40739 (=> (not res!64285) (not e!87059))))

(declare-fun lt!69850 () ListLongMap!1671)

(assert (=> d!40739 (= res!64285 (contains!886 lt!69850 (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!69848 () List!1710)

(assert (=> d!40739 (= lt!69850 (ListLongMap!1672 lt!69848))))

(declare-fun lt!69851 () Unit!4132)

(declare-fun lt!69849 () Unit!4132)

(assert (=> d!40739 (= lt!69851 lt!69849)))

(assert (=> d!40739 (= (getValueByKey!170 lt!69848 (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40739 (= lt!69849 (lemmaContainsTupThenGetReturnValue!88 lt!69848 (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40739 (= lt!69848 (insertStrictlySorted!91 (toList!851 lt!69210) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40739 (= (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))) lt!69850)))

(declare-fun b!133635 () Bool)

(declare-fun res!64284 () Bool)

(assert (=> b!133635 (=> (not res!64284) (not e!87059))))

(assert (=> b!133635 (= res!64284 (= (getValueByKey!170 (toList!851 lt!69850) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))))))

(declare-fun b!133636 () Bool)

(assert (=> b!133636 (= e!87059 (contains!889 (toList!851 lt!69850) (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))))

(assert (= (and d!40739 res!64285) b!133635))

(assert (= (and b!133635 res!64284) b!133636))

(declare-fun m!157765 () Bool)

(assert (=> d!40739 m!157765))

(declare-fun m!157767 () Bool)

(assert (=> d!40739 m!157767))

(declare-fun m!157769 () Bool)

(assert (=> d!40739 m!157769))

(declare-fun m!157771 () Bool)

(assert (=> d!40739 m!157771))

(declare-fun m!157773 () Bool)

(assert (=> b!133635 m!157773))

(declare-fun m!157775 () Bool)

(assert (=> b!133636 m!157775))

(assert (=> b!132775 d!40739))

(declare-fun d!40741 () Bool)

(assert (=> d!40741 (= (apply!116 lt!69204 lt!69208) (get!1482 (getValueByKey!170 (toList!851 lt!69204) lt!69208)))))

(declare-fun bs!5524 () Bool)

(assert (= bs!5524 d!40741))

(declare-fun m!157777 () Bool)

(assert (=> bs!5524 m!157777))

(assert (=> bs!5524 m!157777))

(declare-fun m!157779 () Bool)

(assert (=> bs!5524 m!157779))

(assert (=> b!132775 d!40741))

(declare-fun d!40743 () Bool)

(assert (=> d!40743 (= (apply!116 (+!163 lt!69206 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))) lt!69211) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69206 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))) lt!69211)))))

(declare-fun bs!5525 () Bool)

(assert (= bs!5525 d!40743))

(declare-fun m!157781 () Bool)

(assert (=> bs!5525 m!157781))

(assert (=> bs!5525 m!157781))

(declare-fun m!157783 () Bool)

(assert (=> bs!5525 m!157783))

(assert (=> b!132775 d!40743))

(declare-fun d!40745 () Bool)

(assert (=> d!40745 (= (apply!116 (+!163 lt!69213 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))) lt!69224) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69213 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))) lt!69224)))))

(declare-fun bs!5526 () Bool)

(assert (= bs!5526 d!40745))

(declare-fun m!157785 () Bool)

(assert (=> bs!5526 m!157785))

(assert (=> bs!5526 m!157785))

(declare-fun m!157787 () Bool)

(assert (=> bs!5526 m!157787))

(assert (=> b!132775 d!40745))

(declare-fun d!40747 () Bool)

(assert (=> d!40747 (= (apply!116 lt!69213 lt!69224) (get!1482 (getValueByKey!170 (toList!851 lt!69213) lt!69224)))))

(declare-fun bs!5527 () Bool)

(assert (= bs!5527 d!40747))

(declare-fun m!157789 () Bool)

(assert (=> bs!5527 m!157789))

(assert (=> bs!5527 m!157789))

(declare-fun m!157791 () Bool)

(assert (=> bs!5527 m!157791))

(assert (=> b!132775 d!40747))

(declare-fun d!40749 () Bool)

(declare-fun e!87060 () Bool)

(assert (=> d!40749 e!87060))

(declare-fun res!64287 () Bool)

(assert (=> d!40749 (=> (not res!64287) (not e!87060))))

(declare-fun lt!69854 () ListLongMap!1671)

(assert (=> d!40749 (= res!64287 (contains!886 lt!69854 (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))

(declare-fun lt!69852 () List!1710)

(assert (=> d!40749 (= lt!69854 (ListLongMap!1672 lt!69852))))

(declare-fun lt!69855 () Unit!4132)

(declare-fun lt!69853 () Unit!4132)

(assert (=> d!40749 (= lt!69855 lt!69853)))

(assert (=> d!40749 (= (getValueByKey!170 lt!69852 (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))

(assert (=> d!40749 (= lt!69853 (lemmaContainsTupThenGetReturnValue!88 lt!69852 (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))

(assert (=> d!40749 (= lt!69852 (insertStrictlySorted!91 (toList!851 lt!69206) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))

(assert (=> d!40749 (= (+!163 lt!69206 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))) lt!69854)))

(declare-fun b!133637 () Bool)

(declare-fun res!64286 () Bool)

(assert (=> b!133637 (=> (not res!64286) (not e!87060))))

(assert (=> b!133637 (= res!64286 (= (getValueByKey!170 (toList!851 lt!69854) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))))))

(declare-fun b!133638 () Bool)

(assert (=> b!133638 (= e!87060 (contains!889 (toList!851 lt!69854) (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))))

(assert (= (and d!40749 res!64287) b!133637))

(assert (= (and b!133637 res!64286) b!133638))

(declare-fun m!157793 () Bool)

(assert (=> d!40749 m!157793))

(declare-fun m!157795 () Bool)

(assert (=> d!40749 m!157795))

(declare-fun m!157797 () Bool)

(assert (=> d!40749 m!157797))

(declare-fun m!157799 () Bool)

(assert (=> d!40749 m!157799))

(declare-fun m!157801 () Bool)

(assert (=> b!133637 m!157801))

(declare-fun m!157803 () Bool)

(assert (=> b!133638 m!157803))

(assert (=> b!132775 d!40749))

(declare-fun d!40751 () Bool)

(assert (=> d!40751 (contains!886 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))) lt!69216)))

(declare-fun lt!69856 () Unit!4132)

(assert (=> d!40751 (= lt!69856 (choose!829 lt!69210 lt!69218 (zeroValue!2719 newMap!16) lt!69216))))

(assert (=> d!40751 (contains!886 lt!69210 lt!69216)))

(assert (=> d!40751 (= (addStillContains!92 lt!69210 lt!69218 (zeroValue!2719 newMap!16) lt!69216) lt!69856)))

(declare-fun bs!5528 () Bool)

(assert (= bs!5528 d!40751))

(assert (=> bs!5528 m!156153))

(assert (=> bs!5528 m!156153))

(assert (=> bs!5528 m!156165))

(declare-fun m!157805 () Bool)

(assert (=> bs!5528 m!157805))

(declare-fun m!157807 () Bool)

(assert (=> bs!5528 m!157807))

(assert (=> b!132775 d!40751))

(declare-fun d!40753 () Bool)

(declare-fun e!87061 () Bool)

(assert (=> d!40753 e!87061))

(declare-fun res!64288 () Bool)

(assert (=> d!40753 (=> res!64288 e!87061)))

(declare-fun lt!69858 () Bool)

(assert (=> d!40753 (= res!64288 (not lt!69858))))

(declare-fun lt!69860 () Bool)

(assert (=> d!40753 (= lt!69858 lt!69860)))

(declare-fun lt!69857 () Unit!4132)

(declare-fun e!87062 () Unit!4132)

(assert (=> d!40753 (= lt!69857 e!87062)))

(declare-fun c!24797 () Bool)

(assert (=> d!40753 (= c!24797 lt!69860)))

(assert (=> d!40753 (= lt!69860 (containsKey!174 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) lt!69216))))

(assert (=> d!40753 (= (contains!886 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))) lt!69216) lt!69858)))

(declare-fun b!133639 () Bool)

(declare-fun lt!69859 () Unit!4132)

(assert (=> b!133639 (= e!87062 lt!69859)))

(assert (=> b!133639 (= lt!69859 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) lt!69216))))

(assert (=> b!133639 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) lt!69216))))

(declare-fun b!133640 () Bool)

(declare-fun Unit!4173 () Unit!4132)

(assert (=> b!133640 (= e!87062 Unit!4173)))

(declare-fun b!133641 () Bool)

(assert (=> b!133641 (= e!87061 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) lt!69216)))))

(assert (= (and d!40753 c!24797) b!133639))

(assert (= (and d!40753 (not c!24797)) b!133640))

(assert (= (and d!40753 (not res!64288)) b!133641))

(declare-fun m!157809 () Bool)

(assert (=> d!40753 m!157809))

(declare-fun m!157811 () Bool)

(assert (=> b!133639 m!157811))

(declare-fun m!157813 () Bool)

(assert (=> b!133639 m!157813))

(assert (=> b!133639 m!157813))

(declare-fun m!157815 () Bool)

(assert (=> b!133639 m!157815))

(assert (=> b!133641 m!157813))

(assert (=> b!133641 m!157813))

(assert (=> b!133641 m!157815))

(assert (=> b!132775 d!40753))

(declare-fun d!40755 () Bool)

(assert (=> d!40755 (= (apply!116 lt!69206 lt!69211) (get!1482 (getValueByKey!170 (toList!851 lt!69206) lt!69211)))))

(declare-fun bs!5529 () Bool)

(assert (= bs!5529 d!40755))

(declare-fun m!157817 () Bool)

(assert (=> bs!5529 m!157817))

(assert (=> bs!5529 m!157817))

(declare-fun m!157819 () Bool)

(assert (=> bs!5529 m!157819))

(assert (=> b!132775 d!40755))

(declare-fun d!40757 () Bool)

(declare-fun e!87063 () Bool)

(assert (=> d!40757 e!87063))

(declare-fun res!64290 () Bool)

(assert (=> d!40757 (=> (not res!64290) (not e!87063))))

(declare-fun lt!69863 () ListLongMap!1671)

(assert (=> d!40757 (= res!64290 (contains!886 lt!69863 (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!69861 () List!1710)

(assert (=> d!40757 (= lt!69863 (ListLongMap!1672 lt!69861))))

(declare-fun lt!69864 () Unit!4132)

(declare-fun lt!69862 () Unit!4132)

(assert (=> d!40757 (= lt!69864 lt!69862)))

(assert (=> d!40757 (= (getValueByKey!170 lt!69861 (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40757 (= lt!69862 (lemmaContainsTupThenGetReturnValue!88 lt!69861 (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40757 (= lt!69861 (insertStrictlySorted!91 (toList!851 lt!69204) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40757 (= (+!163 lt!69204 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))) lt!69863)))

(declare-fun b!133642 () Bool)

(declare-fun res!64289 () Bool)

(assert (=> b!133642 (=> (not res!64289) (not e!87063))))

(assert (=> b!133642 (= res!64289 (= (getValueByKey!170 (toList!851 lt!69863) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))))))

(declare-fun b!133643 () Bool)

(assert (=> b!133643 (= e!87063 (contains!889 (toList!851 lt!69863) (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))))

(assert (= (and d!40757 res!64290) b!133642))

(assert (= (and b!133642 res!64289) b!133643))

(declare-fun m!157821 () Bool)

(assert (=> d!40757 m!157821))

(declare-fun m!157823 () Bool)

(assert (=> d!40757 m!157823))

(declare-fun m!157825 () Bool)

(assert (=> d!40757 m!157825))

(declare-fun m!157827 () Bool)

(assert (=> d!40757 m!157827))

(declare-fun m!157829 () Bool)

(assert (=> b!133642 m!157829))

(declare-fun m!157831 () Bool)

(assert (=> b!133643 m!157831))

(assert (=> b!132775 d!40757))

(declare-fun d!40759 () Bool)

(declare-fun e!87064 () Bool)

(assert (=> d!40759 e!87064))

(declare-fun res!64291 () Bool)

(assert (=> d!40759 (=> res!64291 e!87064)))

(declare-fun lt!69866 () Bool)

(assert (=> d!40759 (= res!64291 (not lt!69866))))

(declare-fun lt!69868 () Bool)

(assert (=> d!40759 (= lt!69866 lt!69868)))

(declare-fun lt!69865 () Unit!4132)

(declare-fun e!87065 () Unit!4132)

(assert (=> d!40759 (= lt!69865 e!87065)))

(declare-fun c!24798 () Bool)

(assert (=> d!40759 (= c!24798 lt!69868)))

(assert (=> d!40759 (= lt!69868 (containsKey!174 (toList!851 lt!69496) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!40759 (= (contains!886 lt!69496 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!69866)))

(declare-fun b!133644 () Bool)

(declare-fun lt!69867 () Unit!4132)

(assert (=> b!133644 (= e!87065 lt!69867)))

(assert (=> b!133644 (= lt!69867 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69496) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> b!133644 (isDefined!124 (getValueByKey!170 (toList!851 lt!69496) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!133645 () Bool)

(declare-fun Unit!4174 () Unit!4132)

(assert (=> b!133645 (= e!87065 Unit!4174)))

(declare-fun b!133646 () Bool)

(assert (=> b!133646 (= e!87064 (isDefined!124 (getValueByKey!170 (toList!851 lt!69496) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(assert (= (and d!40759 c!24798) b!133644))

(assert (= (and d!40759 (not c!24798)) b!133645))

(assert (= (and d!40759 (not res!64291)) b!133646))

(declare-fun m!157833 () Bool)

(assert (=> d!40759 m!157833))

(declare-fun m!157835 () Bool)

(assert (=> b!133644 m!157835))

(assert (=> b!133644 m!156669))

(assert (=> b!133644 m!156669))

(declare-fun m!157837 () Bool)

(assert (=> b!133644 m!157837))

(assert (=> b!133646 m!156669))

(assert (=> b!133646 m!156669))

(assert (=> b!133646 m!157837))

(assert (=> d!40405 d!40759))

(declare-fun d!40761 () Bool)

(declare-fun c!24799 () Bool)

(assert (=> d!40761 (= c!24799 (and ((_ is Cons!1706) lt!69494) (= (_1!1303 (h!2311 lt!69494)) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun e!87066 () Option!176)

(assert (=> d!40761 (= (getValueByKey!170 lt!69494 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) e!87066)))

(declare-fun b!133649 () Bool)

(declare-fun e!87067 () Option!176)

(assert (=> b!133649 (= e!87067 (getValueByKey!170 (t!6152 lt!69494) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!133648 () Bool)

(assert (=> b!133648 (= e!87066 e!87067)))

(declare-fun c!24800 () Bool)

(assert (=> b!133648 (= c!24800 (and ((_ is Cons!1706) lt!69494) (not (= (_1!1303 (h!2311 lt!69494)) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))))

(declare-fun b!133647 () Bool)

(assert (=> b!133647 (= e!87066 (Some!175 (_2!1303 (h!2311 lt!69494))))))

(declare-fun b!133650 () Bool)

(assert (=> b!133650 (= e!87067 None!174)))

(assert (= (and d!40761 c!24799) b!133647))

(assert (= (and d!40761 (not c!24799)) b!133648))

(assert (= (and b!133648 c!24800) b!133649))

(assert (= (and b!133648 (not c!24800)) b!133650))

(declare-fun m!157839 () Bool)

(assert (=> b!133649 m!157839))

(assert (=> d!40405 d!40761))

(declare-fun d!40763 () Bool)

(assert (=> d!40763 (= (getValueByKey!170 lt!69494 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) (Some!175 (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun lt!69869 () Unit!4132)

(assert (=> d!40763 (= lt!69869 (choose!834 lt!69494 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87068 () Bool)

(assert (=> d!40763 e!87068))

(declare-fun res!64292 () Bool)

(assert (=> d!40763 (=> (not res!64292) (not e!87068))))

(assert (=> d!40763 (= res!64292 (isStrictlySorted!317 lt!69494))))

(assert (=> d!40763 (= (lemmaContainsTupThenGetReturnValue!88 lt!69494 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!69869)))

(declare-fun b!133651 () Bool)

(declare-fun res!64293 () Bool)

(assert (=> b!133651 (=> (not res!64293) (not e!87068))))

(assert (=> b!133651 (= res!64293 (containsKey!174 lt!69494 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!133652 () Bool)

(assert (=> b!133652 (= e!87068 (contains!889 lt!69494 (tuple2!2585 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(assert (= (and d!40763 res!64292) b!133651))

(assert (= (and b!133651 res!64293) b!133652))

(assert (=> d!40763 m!156663))

(declare-fun m!157841 () Bool)

(assert (=> d!40763 m!157841))

(declare-fun m!157843 () Bool)

(assert (=> d!40763 m!157843))

(declare-fun m!157845 () Bool)

(assert (=> b!133651 m!157845))

(declare-fun m!157847 () Bool)

(assert (=> b!133652 m!157847))

(assert (=> d!40405 d!40763))

(declare-fun e!87073 () List!1710)

(declare-fun b!133653 () Bool)

(assert (=> b!133653 (= e!87073 (insertStrictlySorted!91 (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!133654 () Bool)

(declare-fun e!87072 () List!1710)

(declare-fun call!14735 () List!1710)

(assert (=> b!133654 (= e!87072 call!14735)))

(declare-fun b!133655 () Bool)

(declare-fun res!64295 () Bool)

(declare-fun e!87070 () Bool)

(assert (=> b!133655 (=> (not res!64295) (not e!87070))))

(declare-fun lt!69870 () List!1710)

(assert (=> b!133655 (= res!64295 (containsKey!174 lt!69870 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun bm!14730 () Bool)

(declare-fun c!24802 () Bool)

(assert (=> bm!14730 (= call!14735 ($colon$colon!91 e!87073 (ite c!24802 (h!2311 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))) (tuple2!2585 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))))

(declare-fun c!24803 () Bool)

(assert (=> bm!14730 (= c!24803 c!24802)))

(declare-fun c!24801 () Bool)

(declare-fun c!24804 () Bool)

(declare-fun b!133656 () Bool)

(assert (=> b!133656 (= e!87073 (ite c!24801 (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))) (ite c!24804 (Cons!1706 (h!2311 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))) (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))))) Nil!1707)))))

(declare-fun d!40765 () Bool)

(assert (=> d!40765 e!87070))

(declare-fun res!64294 () Bool)

(assert (=> d!40765 (=> (not res!64294) (not e!87070))))

(assert (=> d!40765 (= res!64294 (isStrictlySorted!317 lt!69870))))

(assert (=> d!40765 (= lt!69870 e!87072)))

(assert (=> d!40765 (= c!24802 (and ((_ is Cons!1706) (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))) (bvslt (_1!1303 (h!2311 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(assert (=> d!40765 (isStrictlySorted!317 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))))))

(assert (=> d!40765 (= (insertStrictlySorted!91 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!69870)))

(declare-fun b!133657 () Bool)

(declare-fun e!87069 () List!1710)

(assert (=> b!133657 (= e!87072 e!87069)))

(assert (=> b!133657 (= c!24801 (and ((_ is Cons!1706) (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))) (= (_1!1303 (h!2311 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!133658 () Bool)

(declare-fun e!87071 () List!1710)

(declare-fun call!14733 () List!1710)

(assert (=> b!133658 (= e!87071 call!14733)))

(declare-fun b!133659 () Bool)

(declare-fun call!14734 () List!1710)

(assert (=> b!133659 (= e!87069 call!14734)))

(declare-fun b!133660 () Bool)

(assert (=> b!133660 (= e!87070 (contains!889 lt!69870 (tuple2!2585 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun bm!14731 () Bool)

(assert (=> bm!14731 (= call!14734 call!14735)))

(declare-fun bm!14732 () Bool)

(assert (=> bm!14732 (= call!14733 call!14734)))

(declare-fun b!133661 () Bool)

(assert (=> b!133661 (= c!24804 (and ((_ is Cons!1706) (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))) (bvsgt (_1!1303 (h!2311 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(assert (=> b!133661 (= e!87069 e!87071)))

(declare-fun b!133662 () Bool)

(assert (=> b!133662 (= e!87071 call!14733)))

(assert (= (and d!40765 c!24802) b!133654))

(assert (= (and d!40765 (not c!24802)) b!133657))

(assert (= (and b!133657 c!24801) b!133659))

(assert (= (and b!133657 (not c!24801)) b!133661))

(assert (= (and b!133661 c!24804) b!133662))

(assert (= (and b!133661 (not c!24804)) b!133658))

(assert (= (or b!133662 b!133658) bm!14732))

(assert (= (or b!133659 bm!14732) bm!14731))

(assert (= (or b!133654 bm!14731) bm!14730))

(assert (= (and bm!14730 c!24803) b!133653))

(assert (= (and bm!14730 (not c!24803)) b!133656))

(assert (= (and d!40765 res!64294) b!133655))

(assert (= (and b!133655 res!64295) b!133660))

(declare-fun m!157849 () Bool)

(assert (=> b!133660 m!157849))

(declare-fun m!157851 () Bool)

(assert (=> b!133655 m!157851))

(declare-fun m!157853 () Bool)

(assert (=> b!133653 m!157853))

(declare-fun m!157855 () Bool)

(assert (=> d!40765 m!157855))

(declare-fun m!157857 () Bool)

(assert (=> d!40765 m!157857))

(declare-fun m!157859 () Bool)

(assert (=> bm!14730 m!157859))

(assert (=> d!40405 d!40765))

(declare-fun c!24805 () Bool)

(declare-fun d!40767 () Bool)

(assert (=> d!40767 (= c!24805 (and ((_ is Cons!1706) (toList!851 lt!69331)) (= (_1!1303 (h!2311 (toList!851 lt!69331))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87074 () Option!176)

(assert (=> d!40767 (= (getValueByKey!170 (toList!851 lt!69331) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87074)))

(declare-fun b!133665 () Bool)

(declare-fun e!87075 () Option!176)

(assert (=> b!133665 (= e!87075 (getValueByKey!170 (t!6152 (toList!851 lt!69331)) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133664 () Bool)

(assert (=> b!133664 (= e!87074 e!87075)))

(declare-fun c!24806 () Bool)

(assert (=> b!133664 (= c!24806 (and ((_ is Cons!1706) (toList!851 lt!69331)) (not (= (_1!1303 (h!2311 (toList!851 lt!69331))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!133663 () Bool)

(assert (=> b!133663 (= e!87074 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69331)))))))

(declare-fun b!133666 () Bool)

(assert (=> b!133666 (= e!87075 None!174)))

(assert (= (and d!40767 c!24805) b!133663))

(assert (= (and d!40767 (not c!24805)) b!133664))

(assert (= (and b!133664 c!24806) b!133665))

(assert (= (and b!133664 (not c!24806)) b!133666))

(declare-fun m!157861 () Bool)

(assert (=> b!133665 m!157861))

(assert (=> b!132952 d!40767))

(declare-fun b!133667 () Bool)

(declare-fun e!87079 () Bool)

(declare-fun e!87076 () Bool)

(assert (=> b!133667 (= e!87079 e!87076)))

(declare-fun res!64296 () Bool)

(assert (=> b!133667 (=> (not res!64296) (not e!87076))))

(declare-fun e!87077 () Bool)

(assert (=> b!133667 (= res!64296 (not e!87077))))

(declare-fun res!64298 () Bool)

(assert (=> b!133667 (=> (not res!64298) (not e!87077))))

(assert (=> b!133667 (= res!64298 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun call!14736 () Bool)

(declare-fun c!24807 () Bool)

(declare-fun bm!14733 () Bool)

(assert (=> bm!14733 (= call!14736 (arrayNoDuplicates!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24807 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))) (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)))))))

(declare-fun d!40769 () Bool)

(declare-fun res!64297 () Bool)

(assert (=> d!40769 (=> res!64297 e!87079)))

(assert (=> d!40769 (= res!64297 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!40769 (= (arrayNoDuplicates!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))) e!87079)))

(declare-fun b!133668 () Bool)

(declare-fun e!87078 () Bool)

(assert (=> b!133668 (= e!87078 call!14736)))

(declare-fun b!133669 () Bool)

(assert (=> b!133669 (= e!87077 (contains!888 (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!133670 () Bool)

(assert (=> b!133670 (= e!87076 e!87078)))

(assert (=> b!133670 (= c!24807 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!133671 () Bool)

(assert (=> b!133671 (= e!87078 call!14736)))

(assert (= (and d!40769 (not res!64297)) b!133667))

(assert (= (and b!133667 res!64298) b!133669))

(assert (= (and b!133667 res!64296) b!133670))

(assert (= (and b!133670 c!24807) b!133668))

(assert (= (and b!133670 (not c!24807)) b!133671))

(assert (= (or b!133668 b!133671) bm!14733))

(declare-fun m!157863 () Bool)

(assert (=> b!133667 m!157863))

(assert (=> b!133667 m!157863))

(declare-fun m!157865 () Bool)

(assert (=> b!133667 m!157865))

(assert (=> bm!14733 m!157863))

(declare-fun m!157867 () Bool)

(assert (=> bm!14733 m!157867))

(assert (=> b!133669 m!157863))

(assert (=> b!133669 m!157863))

(declare-fun m!157869 () Bool)

(assert (=> b!133669 m!157869))

(assert (=> b!133670 m!157863))

(assert (=> b!133670 m!157863))

(assert (=> b!133670 m!157865))

(assert (=> bm!14646 d!40769))

(declare-fun d!40771 () Bool)

(declare-fun e!87080 () Bool)

(assert (=> d!40771 e!87080))

(declare-fun res!64300 () Bool)

(assert (=> d!40771 (=> (not res!64300) (not e!87080))))

(declare-fun lt!69873 () ListLongMap!1671)

(assert (=> d!40771 (= res!64300 (contains!886 lt!69873 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun lt!69871 () List!1710)

(assert (=> d!40771 (= lt!69873 (ListLongMap!1672 lt!69871))))

(declare-fun lt!69874 () Unit!4132)

(declare-fun lt!69872 () Unit!4132)

(assert (=> d!40771 (= lt!69874 lt!69872)))

(assert (=> d!40771 (= (getValueByKey!170 lt!69871 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!40771 (= lt!69872 (lemmaContainsTupThenGetReturnValue!88 lt!69871 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!40771 (= lt!69871 (insertStrictlySorted!91 (toList!851 call!14669) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!40771 (= (+!163 call!14669 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69873)))

(declare-fun b!133672 () Bool)

(declare-fun res!64299 () Bool)

(assert (=> b!133672 (=> (not res!64299) (not e!87080))))

(assert (=> b!133672 (= res!64299 (= (getValueByKey!170 (toList!851 lt!69873) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!133673 () Bool)

(assert (=> b!133673 (= e!87080 (contains!889 (toList!851 lt!69873) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(assert (= (and d!40771 res!64300) b!133672))

(assert (= (and b!133672 res!64299) b!133673))

(declare-fun m!157871 () Bool)

(assert (=> d!40771 m!157871))

(declare-fun m!157873 () Bool)

(assert (=> d!40771 m!157873))

(declare-fun m!157875 () Bool)

(assert (=> d!40771 m!157875))

(declare-fun m!157877 () Bool)

(assert (=> d!40771 m!157877))

(declare-fun m!157879 () Bool)

(assert (=> b!133672 m!157879))

(declare-fun m!157881 () Bool)

(assert (=> b!133673 m!157881))

(assert (=> b!133062 d!40771))

(assert (=> b!132929 d!40519))

(declare-fun d!40773 () Bool)

(declare-fun res!64301 () Bool)

(declare-fun e!87081 () Bool)

(assert (=> d!40773 (=> res!64301 e!87081)))

(assert (=> d!40773 (= res!64301 (and ((_ is Cons!1706) (toList!851 lt!69186)) (= (_1!1303 (h!2311 (toList!851 lt!69186))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40773 (= (containsKey!174 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000) e!87081)))

(declare-fun b!133674 () Bool)

(declare-fun e!87082 () Bool)

(assert (=> b!133674 (= e!87081 e!87082)))

(declare-fun res!64302 () Bool)

(assert (=> b!133674 (=> (not res!64302) (not e!87082))))

(assert (=> b!133674 (= res!64302 (and (or (not ((_ is Cons!1706) (toList!851 lt!69186))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69186))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1706) (toList!851 lt!69186)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69186))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133675 () Bool)

(assert (=> b!133675 (= e!87082 (containsKey!174 (t!6152 (toList!851 lt!69186)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40773 (not res!64301)) b!133674))

(assert (= (and b!133674 res!64302) b!133675))

(declare-fun m!157883 () Bool)

(assert (=> b!133675 m!157883))

(assert (=> d!40401 d!40773))

(declare-fun d!40775 () Bool)

(declare-fun e!87083 () Bool)

(assert (=> d!40775 e!87083))

(declare-fun res!64303 () Bool)

(assert (=> d!40775 (=> res!64303 e!87083)))

(declare-fun lt!69876 () Bool)

(assert (=> d!40775 (= res!64303 (not lt!69876))))

(declare-fun lt!69878 () Bool)

(assert (=> d!40775 (= lt!69876 lt!69878)))

(declare-fun lt!69875 () Unit!4132)

(declare-fun e!87084 () Unit!4132)

(assert (=> d!40775 (= lt!69875 e!87084)))

(declare-fun c!24808 () Bool)

(assert (=> d!40775 (= c!24808 lt!69878)))

(assert (=> d!40775 (= lt!69878 (containsKey!174 (toList!851 lt!69220) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40775 (= (contains!886 lt!69220 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!69876)))

(declare-fun b!133676 () Bool)

(declare-fun lt!69877 () Unit!4132)

(assert (=> b!133676 (= e!87084 lt!69877)))

(assert (=> b!133676 (= lt!69877 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69220) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133676 (isDefined!124 (getValueByKey!170 (toList!851 lt!69220) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133677 () Bool)

(declare-fun Unit!4175 () Unit!4132)

(assert (=> b!133677 (= e!87084 Unit!4175)))

(declare-fun b!133678 () Bool)

(assert (=> b!133678 (= e!87083 (isDefined!124 (getValueByKey!170 (toList!851 lt!69220) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!40775 c!24808) b!133676))

(assert (= (and d!40775 (not c!24808)) b!133677))

(assert (= (and d!40775 (not res!64303)) b!133678))

(assert (=> d!40775 m!156125))

(declare-fun m!157885 () Bool)

(assert (=> d!40775 m!157885))

(assert (=> b!133676 m!156125))

(declare-fun m!157887 () Bool)

(assert (=> b!133676 m!157887))

(assert (=> b!133676 m!156125))

(assert (=> b!133676 m!156787))

(assert (=> b!133676 m!156787))

(declare-fun m!157889 () Bool)

(assert (=> b!133676 m!157889))

(assert (=> b!133678 m!156125))

(assert (=> b!133678 m!156787))

(assert (=> b!133678 m!156787))

(assert (=> b!133678 m!157889))

(assert (=> b!132771 d!40775))

(declare-fun d!40777 () Bool)

(declare-fun e!87085 () Bool)

(assert (=> d!40777 e!87085))

(declare-fun res!64304 () Bool)

(assert (=> d!40777 (=> res!64304 e!87085)))

(declare-fun lt!69880 () Bool)

(assert (=> d!40777 (= res!64304 (not lt!69880))))

(declare-fun lt!69882 () Bool)

(assert (=> d!40777 (= lt!69880 lt!69882)))

(declare-fun lt!69879 () Unit!4132)

(declare-fun e!87086 () Unit!4132)

(assert (=> d!40777 (= lt!69879 e!87086)))

(declare-fun c!24809 () Bool)

(assert (=> d!40777 (= c!24809 lt!69882)))

(assert (=> d!40777 (= lt!69882 (containsKey!174 (toList!851 lt!69250) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40777 (= (contains!886 lt!69250 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!69880)))

(declare-fun b!133679 () Bool)

(declare-fun lt!69881 () Unit!4132)

(assert (=> b!133679 (= e!87086 lt!69881)))

(assert (=> b!133679 (= lt!69881 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69250) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133679 (isDefined!124 (getValueByKey!170 (toList!851 lt!69250) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133680 () Bool)

(declare-fun Unit!4176 () Unit!4132)

(assert (=> b!133680 (= e!87086 Unit!4176)))

(declare-fun b!133681 () Bool)

(assert (=> b!133681 (= e!87085 (isDefined!124 (getValueByKey!170 (toList!851 lt!69250) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!40777 c!24809) b!133679))

(assert (= (and d!40777 (not c!24809)) b!133680))

(assert (= (and d!40777 (not res!64304)) b!133681))

(assert (=> d!40777 m!156125))

(declare-fun m!157891 () Bool)

(assert (=> d!40777 m!157891))

(assert (=> b!133679 m!156125))

(declare-fun m!157893 () Bool)

(assert (=> b!133679 m!157893))

(assert (=> b!133679 m!156125))

(assert (=> b!133679 m!156803))

(assert (=> b!133679 m!156803))

(declare-fun m!157895 () Bool)

(assert (=> b!133679 m!157895))

(assert (=> b!133681 m!156125))

(assert (=> b!133681 m!156803))

(assert (=> b!133681 m!156803))

(assert (=> b!133681 m!157895))

(assert (=> b!132806 d!40777))

(declare-fun d!40779 () Bool)

(assert (=> d!40779 (= (apply!116 lt!69484 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69484) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5530 () Bool)

(assert (= bs!5530 d!40779))

(assert (=> bs!5530 m!156969))

(assert (=> bs!5530 m!156969))

(declare-fun m!157897 () Bool)

(assert (=> bs!5530 m!157897))

(assert (=> b!133054 d!40779))

(declare-fun d!40781 () Bool)

(assert (=> d!40781 (= (apply!116 lt!69220 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69220) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5531 () Bool)

(assert (= bs!5531 d!40781))

(assert (=> bs!5531 m!157535))

(assert (=> bs!5531 m!157535))

(declare-fun m!157899 () Bool)

(assert (=> bs!5531 m!157899))

(assert (=> b!132774 d!40781))

(declare-fun d!40783 () Bool)

(assert (=> d!40783 (= (get!1482 (getValueByKey!170 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3198 (getValueByKey!170 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40393 d!40783))

(assert (=> d!40393 d!40653))

(declare-fun d!40785 () Bool)

(assert (=> d!40785 (= (apply!116 lt!69250 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69250) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5532 () Bool)

(assert (= bs!5532 d!40785))

(assert (=> bs!5532 m!157543))

(assert (=> bs!5532 m!157543))

(declare-fun m!157901 () Bool)

(assert (=> bs!5532 m!157901))

(assert (=> b!132809 d!40785))

(declare-fun d!40787 () Bool)

(declare-fun c!24810 () Bool)

(assert (=> d!40787 (= c!24810 (and ((_ is Cons!1706) (toList!851 lt!69466)) (= (_1!1303 (h!2311 (toList!851 lt!69466))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!87087 () Option!176)

(assert (=> d!40787 (= (getValueByKey!170 (toList!851 lt!69466) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!87087)))

(declare-fun b!133684 () Bool)

(declare-fun e!87088 () Option!176)

(assert (=> b!133684 (= e!87088 (getValueByKey!170 (t!6152 (toList!851 lt!69466)) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133683 () Bool)

(assert (=> b!133683 (= e!87087 e!87088)))

(declare-fun c!24811 () Bool)

(assert (=> b!133683 (= c!24811 (and ((_ is Cons!1706) (toList!851 lt!69466)) (not (= (_1!1303 (h!2311 (toList!851 lt!69466))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!133682 () Bool)

(assert (=> b!133682 (= e!87087 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69466)))))))

(declare-fun b!133685 () Bool)

(assert (=> b!133685 (= e!87088 None!174)))

(assert (= (and d!40787 c!24810) b!133682))

(assert (= (and d!40787 (not c!24810)) b!133683))

(assert (= (and b!133683 c!24811) b!133684))

(assert (= (and b!133683 (not c!24811)) b!133685))

(declare-fun m!157903 () Bool)

(assert (=> b!133684 m!157903))

(assert (=> b!133045 d!40787))

(declare-fun d!40789 () Bool)

(assert (=> d!40789 (isDefined!124 (getValueByKey!170 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!69883 () Unit!4132)

(assert (=> d!40789 (= lt!69883 (choose!826 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87089 () Bool)

(assert (=> d!40789 e!87089))

(declare-fun res!64305 () Bool)

(assert (=> d!40789 (=> (not res!64305) (not e!87089))))

(assert (=> d!40789 (= res!64305 (isStrictlySorted!317 (toList!851 lt!69186)))))

(assert (=> d!40789 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000) lt!69883)))

(declare-fun b!133686 () Bool)

(assert (=> b!133686 (= e!87089 (containsKey!174 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40789 res!64305) b!133686))

(assert (=> d!40789 m!156117))

(assert (=> d!40789 m!156117))

(assert (=> d!40789 m!156315))

(declare-fun m!157905 () Bool)

(assert (=> d!40789 m!157905))

(assert (=> d!40789 m!157501))

(assert (=> b!133686 m!156311))

(assert (=> b!132879 d!40789))

(assert (=> b!132879 d!40453))

(assert (=> b!132879 d!40455))

(declare-fun d!40791 () Bool)

(declare-fun e!87090 () Bool)

(assert (=> d!40791 e!87090))

(declare-fun res!64306 () Bool)

(assert (=> d!40791 (=> res!64306 e!87090)))

(declare-fun lt!69885 () Bool)

(assert (=> d!40791 (= res!64306 (not lt!69885))))

(declare-fun lt!69887 () Bool)

(assert (=> d!40791 (= lt!69885 lt!69887)))

(declare-fun lt!69884 () Unit!4132)

(declare-fun e!87091 () Unit!4132)

(assert (=> d!40791 (= lt!69884 e!87091)))

(declare-fun c!24812 () Bool)

(assert (=> d!40791 (= c!24812 lt!69887)))

(assert (=> d!40791 (= lt!69887 (containsKey!174 (toList!851 lt!69519) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40791 (= (contains!886 lt!69519 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69885)))

(declare-fun b!133687 () Bool)

(declare-fun lt!69886 () Unit!4132)

(assert (=> b!133687 (= e!87091 lt!69886)))

(assert (=> b!133687 (= lt!69886 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69519) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> b!133687 (isDefined!124 (getValueByKey!170 (toList!851 lt!69519) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133688 () Bool)

(declare-fun Unit!4177 () Unit!4132)

(assert (=> b!133688 (= e!87091 Unit!4177)))

(declare-fun b!133689 () Bool)

(assert (=> b!133689 (= e!87090 (isDefined!124 (getValueByKey!170 (toList!851 lt!69519) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!40791 c!24812) b!133687))

(assert (= (and d!40791 (not c!24812)) b!133688))

(assert (= (and d!40791 (not res!64306)) b!133689))

(declare-fun m!157907 () Bool)

(assert (=> d!40791 m!157907))

(declare-fun m!157909 () Bool)

(assert (=> b!133687 m!157909))

(assert (=> b!133687 m!156719))

(assert (=> b!133687 m!156719))

(declare-fun m!157911 () Bool)

(assert (=> b!133687 m!157911))

(assert (=> b!133689 m!156719))

(assert (=> b!133689 m!156719))

(assert (=> b!133689 m!157911))

(assert (=> d!40417 d!40791))

(declare-fun d!40793 () Bool)

(declare-fun c!24813 () Bool)

(assert (=> d!40793 (= c!24813 (and ((_ is Cons!1706) lt!69517) (= (_1!1303 (h!2311 lt!69517)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87092 () Option!176)

(assert (=> d!40793 (= (getValueByKey!170 lt!69517 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87092)))

(declare-fun b!133692 () Bool)

(declare-fun e!87093 () Option!176)

(assert (=> b!133692 (= e!87093 (getValueByKey!170 (t!6152 lt!69517) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133691 () Bool)

(assert (=> b!133691 (= e!87092 e!87093)))

(declare-fun c!24814 () Bool)

(assert (=> b!133691 (= c!24814 (and ((_ is Cons!1706) lt!69517) (not (= (_1!1303 (h!2311 lt!69517)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!133690 () Bool)

(assert (=> b!133690 (= e!87092 (Some!175 (_2!1303 (h!2311 lt!69517))))))

(declare-fun b!133693 () Bool)

(assert (=> b!133693 (= e!87093 None!174)))

(assert (= (and d!40793 c!24813) b!133690))

(assert (= (and d!40793 (not c!24813)) b!133691))

(assert (= (and b!133691 c!24814) b!133692))

(assert (= (and b!133691 (not c!24814)) b!133693))

(declare-fun m!157913 () Bool)

(assert (=> b!133692 m!157913))

(assert (=> d!40417 d!40793))

(declare-fun d!40795 () Bool)

(assert (=> d!40795 (= (getValueByKey!170 lt!69517 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun lt!69888 () Unit!4132)

(assert (=> d!40795 (= lt!69888 (choose!834 lt!69517 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun e!87094 () Bool)

(assert (=> d!40795 e!87094))

(declare-fun res!64307 () Bool)

(assert (=> d!40795 (=> (not res!64307) (not e!87094))))

(assert (=> d!40795 (= res!64307 (isStrictlySorted!317 lt!69517))))

(assert (=> d!40795 (= (lemmaContainsTupThenGetReturnValue!88 lt!69517 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69888)))

(declare-fun b!133694 () Bool)

(declare-fun res!64308 () Bool)

(assert (=> b!133694 (=> (not res!64308) (not e!87094))))

(assert (=> b!133694 (= res!64308 (containsKey!174 lt!69517 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133695 () Bool)

(assert (=> b!133695 (= e!87094 (contains!889 lt!69517 (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!40795 res!64307) b!133694))

(assert (= (and b!133694 res!64308) b!133695))

(assert (=> d!40795 m!156713))

(declare-fun m!157915 () Bool)

(assert (=> d!40795 m!157915))

(declare-fun m!157917 () Bool)

(assert (=> d!40795 m!157917))

(declare-fun m!157919 () Bool)

(assert (=> b!133694 m!157919))

(declare-fun m!157921 () Bool)

(assert (=> b!133695 m!157921))

(assert (=> d!40417 d!40795))

(declare-fun b!133696 () Bool)

(declare-fun e!87099 () List!1710)

(assert (=> b!133696 (= e!87099 (insertStrictlySorted!91 (t!6152 (toList!851 call!14621)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133697 () Bool)

(declare-fun e!87098 () List!1710)

(declare-fun call!14739 () List!1710)

(assert (=> b!133697 (= e!87098 call!14739)))

(declare-fun b!133698 () Bool)

(declare-fun res!64310 () Bool)

(declare-fun e!87096 () Bool)

(assert (=> b!133698 (=> (not res!64310) (not e!87096))))

(declare-fun lt!69889 () List!1710)

(assert (=> b!133698 (= res!64310 (containsKey!174 lt!69889 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun c!24816 () Bool)

(declare-fun bm!14734 () Bool)

(assert (=> bm!14734 (= call!14739 ($colon$colon!91 e!87099 (ite c!24816 (h!2311 (toList!851 call!14621)) (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun c!24817 () Bool)

(assert (=> bm!14734 (= c!24817 c!24816)))

(declare-fun b!133699 () Bool)

(declare-fun c!24818 () Bool)

(declare-fun c!24815 () Bool)

(assert (=> b!133699 (= e!87099 (ite c!24815 (t!6152 (toList!851 call!14621)) (ite c!24818 (Cons!1706 (h!2311 (toList!851 call!14621)) (t!6152 (toList!851 call!14621))) Nil!1707)))))

(declare-fun d!40797 () Bool)

(assert (=> d!40797 e!87096))

(declare-fun res!64309 () Bool)

(assert (=> d!40797 (=> (not res!64309) (not e!87096))))

(assert (=> d!40797 (= res!64309 (isStrictlySorted!317 lt!69889))))

(assert (=> d!40797 (= lt!69889 e!87098)))

(assert (=> d!40797 (= c!24816 (and ((_ is Cons!1706) (toList!851 call!14621)) (bvslt (_1!1303 (h!2311 (toList!851 call!14621))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!40797 (isStrictlySorted!317 (toList!851 call!14621))))

(assert (=> d!40797 (= (insertStrictlySorted!91 (toList!851 call!14621) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69889)))

(declare-fun b!133700 () Bool)

(declare-fun e!87095 () List!1710)

(assert (=> b!133700 (= e!87098 e!87095)))

(assert (=> b!133700 (= c!24815 (and ((_ is Cons!1706) (toList!851 call!14621)) (= (_1!1303 (h!2311 (toList!851 call!14621))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!133701 () Bool)

(declare-fun e!87097 () List!1710)

(declare-fun call!14737 () List!1710)

(assert (=> b!133701 (= e!87097 call!14737)))

(declare-fun b!133702 () Bool)

(declare-fun call!14738 () List!1710)

(assert (=> b!133702 (= e!87095 call!14738)))

(declare-fun b!133703 () Bool)

(assert (=> b!133703 (= e!87096 (contains!889 lt!69889 (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun bm!14735 () Bool)

(assert (=> bm!14735 (= call!14738 call!14739)))

(declare-fun bm!14736 () Bool)

(assert (=> bm!14736 (= call!14737 call!14738)))

(declare-fun b!133704 () Bool)

(assert (=> b!133704 (= c!24818 (and ((_ is Cons!1706) (toList!851 call!14621)) (bvsgt (_1!1303 (h!2311 (toList!851 call!14621))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> b!133704 (= e!87095 e!87097)))

(declare-fun b!133705 () Bool)

(assert (=> b!133705 (= e!87097 call!14737)))

(assert (= (and d!40797 c!24816) b!133697))

(assert (= (and d!40797 (not c!24816)) b!133700))

(assert (= (and b!133700 c!24815) b!133702))

(assert (= (and b!133700 (not c!24815)) b!133704))

(assert (= (and b!133704 c!24818) b!133705))

(assert (= (and b!133704 (not c!24818)) b!133701))

(assert (= (or b!133705 b!133701) bm!14736))

(assert (= (or b!133702 bm!14736) bm!14735))

(assert (= (or b!133697 bm!14735) bm!14734))

(assert (= (and bm!14734 c!24817) b!133696))

(assert (= (and bm!14734 (not c!24817)) b!133699))

(assert (= (and d!40797 res!64309) b!133698))

(assert (= (and b!133698 res!64310) b!133703))

(declare-fun m!157923 () Bool)

(assert (=> b!133703 m!157923))

(declare-fun m!157925 () Bool)

(assert (=> b!133698 m!157925))

(declare-fun m!157927 () Bool)

(assert (=> b!133696 m!157927))

(declare-fun m!157929 () Bool)

(assert (=> d!40797 m!157929))

(declare-fun m!157931 () Bool)

(assert (=> d!40797 m!157931))

(declare-fun m!157933 () Bool)

(assert (=> bm!14734 m!157933))

(assert (=> d!40417 d!40797))

(declare-fun d!40799 () Bool)

(assert (=> d!40799 (isDefined!124 (getValueByKey!170 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun lt!69890 () Unit!4132)

(assert (=> d!40799 (= lt!69890 (choose!826 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun e!87100 () Bool)

(assert (=> d!40799 e!87100))

(declare-fun res!64311 () Bool)

(assert (=> d!40799 (=> (not res!64311) (not e!87100))))

(assert (=> d!40799 (= res!64311 (isStrictlySorted!317 (toList!851 call!14583)))))

(assert (=> d!40799 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) lt!69890)))

(declare-fun b!133706 () Bool)

(assert (=> b!133706 (= e!87100 (containsKey!174 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!40799 res!64311) b!133706))

(assert (=> d!40799 m!155841))

(assert (=> d!40799 m!156189))

(assert (=> d!40799 m!156189))

(assert (=> d!40799 m!156191))

(assert (=> d!40799 m!155841))

(declare-fun m!157935 () Bool)

(assert (=> d!40799 m!157935))

(declare-fun m!157937 () Bool)

(assert (=> d!40799 m!157937))

(assert (=> b!133706 m!155841))

(assert (=> b!133706 m!156185))

(assert (=> b!132788 d!40799))

(assert (=> b!132788 d!40525))

(assert (=> b!132788 d!40527))

(declare-fun c!24819 () Bool)

(declare-fun d!40801 () Bool)

(assert (=> d!40801 (= c!24819 (and ((_ is Cons!1706) (toList!851 lt!69496)) (= (_1!1303 (h!2311 (toList!851 lt!69496))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun e!87101 () Option!176)

(assert (=> d!40801 (= (getValueByKey!170 (toList!851 lt!69496) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) e!87101)))

(declare-fun b!133709 () Bool)

(declare-fun e!87102 () Option!176)

(assert (=> b!133709 (= e!87102 (getValueByKey!170 (t!6152 (toList!851 lt!69496)) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!133708 () Bool)

(assert (=> b!133708 (= e!87101 e!87102)))

(declare-fun c!24820 () Bool)

(assert (=> b!133708 (= c!24820 (and ((_ is Cons!1706) (toList!851 lt!69496)) (not (= (_1!1303 (h!2311 (toList!851 lt!69496))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))))

(declare-fun b!133707 () Bool)

(assert (=> b!133707 (= e!87101 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69496)))))))

(declare-fun b!133710 () Bool)

(assert (=> b!133710 (= e!87102 None!174)))

(assert (= (and d!40801 c!24819) b!133707))

(assert (= (and d!40801 (not c!24819)) b!133708))

(assert (= (and b!133708 c!24820) b!133709))

(assert (= (and b!133708 (not c!24820)) b!133710))

(declare-fun m!157939 () Bool)

(assert (=> b!133709 m!157939))

(assert (=> b!133071 d!40801))

(assert (=> b!132768 d!40519))

(assert (=> b!132803 d!40519))

(declare-fun d!40803 () Bool)

(declare-fun res!64312 () Bool)

(declare-fun e!87103 () Bool)

(assert (=> d!40803 (=> res!64312 e!87103)))

(assert (=> d!40803 (= res!64312 (and ((_ is Cons!1706) (toList!851 e!86457)) (= (_1!1303 (h!2311 (toList!851 e!86457))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(assert (=> d!40803 (= (containsKey!174 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!87103)))

(declare-fun b!133711 () Bool)

(declare-fun e!87104 () Bool)

(assert (=> b!133711 (= e!87103 e!87104)))

(declare-fun res!64313 () Bool)

(assert (=> b!133711 (=> (not res!64313) (not e!87104))))

(assert (=> b!133711 (= res!64313 (and (or (not ((_ is Cons!1706) (toList!851 e!86457))) (bvsle (_1!1303 (h!2311 (toList!851 e!86457))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) ((_ is Cons!1706) (toList!851 e!86457)) (bvslt (_1!1303 (h!2311 (toList!851 e!86457))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun b!133712 () Bool)

(assert (=> b!133712 (= e!87104 (containsKey!174 (t!6152 (toList!851 e!86457)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!40803 (not res!64312)) b!133711))

(assert (= (and b!133711 res!64313) b!133712))

(assert (=> b!133712 m!155841))

(declare-fun m!157941 () Bool)

(assert (=> b!133712 m!157941))

(assert (=> d!40411 d!40803))

(declare-fun d!40805 () Bool)

(declare-fun e!87105 () Bool)

(assert (=> d!40805 e!87105))

(declare-fun res!64314 () Bool)

(assert (=> d!40805 (=> res!64314 e!87105)))

(declare-fun lt!69892 () Bool)

(assert (=> d!40805 (= res!64314 (not lt!69892))))

(declare-fun lt!69894 () Bool)

(assert (=> d!40805 (= lt!69892 lt!69894)))

(declare-fun lt!69891 () Unit!4132)

(declare-fun e!87106 () Unit!4132)

(assert (=> d!40805 (= lt!69891 e!87106)))

(declare-fun c!24821 () Bool)

(assert (=> d!40805 (= c!24821 lt!69894)))

(assert (=> d!40805 (= lt!69894 (containsKey!174 (toList!851 lt!69466) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40805 (= (contains!886 lt!69466 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!69892)))

(declare-fun b!133713 () Bool)

(declare-fun lt!69893 () Unit!4132)

(assert (=> b!133713 (= e!87106 lt!69893)))

(assert (=> b!133713 (= lt!69893 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69466) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!133713 (isDefined!124 (getValueByKey!170 (toList!851 lt!69466) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133714 () Bool)

(declare-fun Unit!4178 () Unit!4132)

(assert (=> b!133714 (= e!87106 Unit!4178)))

(declare-fun b!133715 () Bool)

(assert (=> b!133715 (= e!87105 (isDefined!124 (getValueByKey!170 (toList!851 lt!69466) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!40805 c!24821) b!133713))

(assert (= (and d!40805 (not c!24821)) b!133714))

(assert (= (and d!40805 (not res!64314)) b!133715))

(declare-fun m!157943 () Bool)

(assert (=> d!40805 m!157943))

(declare-fun m!157945 () Bool)

(assert (=> b!133713 m!157945))

(assert (=> b!133713 m!156603))

(assert (=> b!133713 m!156603))

(declare-fun m!157947 () Bool)

(assert (=> b!133713 m!157947))

(assert (=> b!133715 m!156603))

(assert (=> b!133715 m!156603))

(assert (=> b!133715 m!157947))

(assert (=> d!40397 d!40805))

(declare-fun c!24822 () Bool)

(declare-fun d!40807 () Bool)

(assert (=> d!40807 (= c!24822 (and ((_ is Cons!1706) lt!69464) (= (_1!1303 (h!2311 lt!69464)) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!87107 () Option!176)

(assert (=> d!40807 (= (getValueByKey!170 lt!69464 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!87107)))

(declare-fun e!87108 () Option!176)

(declare-fun b!133718 () Bool)

(assert (=> b!133718 (= e!87108 (getValueByKey!170 (t!6152 lt!69464) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133717 () Bool)

(assert (=> b!133717 (= e!87107 e!87108)))

(declare-fun c!24823 () Bool)

(assert (=> b!133717 (= c!24823 (and ((_ is Cons!1706) lt!69464) (not (= (_1!1303 (h!2311 lt!69464)) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!133716 () Bool)

(assert (=> b!133716 (= e!87107 (Some!175 (_2!1303 (h!2311 lt!69464))))))

(declare-fun b!133719 () Bool)

(assert (=> b!133719 (= e!87108 None!174)))

(assert (= (and d!40807 c!24822) b!133716))

(assert (= (and d!40807 (not c!24822)) b!133717))

(assert (= (and b!133717 c!24823) b!133718))

(assert (= (and b!133717 (not c!24823)) b!133719))

(declare-fun m!157949 () Bool)

(assert (=> b!133718 m!157949))

(assert (=> d!40397 d!40807))

(declare-fun d!40809 () Bool)

(assert (=> d!40809 (= (getValueByKey!170 lt!69464 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!175 (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!69895 () Unit!4132)

(assert (=> d!40809 (= lt!69895 (choose!834 lt!69464 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87109 () Bool)

(assert (=> d!40809 e!87109))

(declare-fun res!64315 () Bool)

(assert (=> d!40809 (=> (not res!64315) (not e!87109))))

(assert (=> d!40809 (= res!64315 (isStrictlySorted!317 lt!69464))))

(assert (=> d!40809 (= (lemmaContainsTupThenGetReturnValue!88 lt!69464 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!69895)))

(declare-fun b!133720 () Bool)

(declare-fun res!64316 () Bool)

(assert (=> b!133720 (=> (not res!64316) (not e!87109))))

(assert (=> b!133720 (= res!64316 (containsKey!174 lt!69464 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133721 () Bool)

(assert (=> b!133721 (= e!87109 (contains!889 lt!69464 (tuple2!2585 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!40809 res!64315) b!133720))

(assert (= (and b!133720 res!64316) b!133721))

(assert (=> d!40809 m!156597))

(declare-fun m!157951 () Bool)

(assert (=> d!40809 m!157951))

(declare-fun m!157953 () Bool)

(assert (=> d!40809 m!157953))

(declare-fun m!157955 () Bool)

(assert (=> b!133720 m!157955))

(declare-fun m!157957 () Bool)

(assert (=> b!133721 m!157957))

(assert (=> d!40397 d!40809))

(declare-fun b!133722 () Bool)

(declare-fun e!87114 () List!1710)

(assert (=> b!133722 (= e!87114 (insertStrictlySorted!91 (t!6152 (toList!851 (ite c!24523 call!14580 call!14599))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133723 () Bool)

(declare-fun e!87113 () List!1710)

(declare-fun call!14742 () List!1710)

(assert (=> b!133723 (= e!87113 call!14742)))

(declare-fun b!133724 () Bool)

(declare-fun res!64318 () Bool)

(declare-fun e!87111 () Bool)

(assert (=> b!133724 (=> (not res!64318) (not e!87111))))

(declare-fun lt!69896 () List!1710)

(assert (=> b!133724 (= res!64318 (containsKey!174 lt!69896 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14737 () Bool)

(declare-fun c!24825 () Bool)

(assert (=> bm!14737 (= call!14742 ($colon$colon!91 e!87114 (ite c!24825 (h!2311 (toList!851 (ite c!24523 call!14580 call!14599))) (tuple2!2585 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!24826 () Bool)

(assert (=> bm!14737 (= c!24826 c!24825)))

(declare-fun b!133725 () Bool)

(declare-fun c!24827 () Bool)

(declare-fun c!24824 () Bool)

(assert (=> b!133725 (= e!87114 (ite c!24824 (t!6152 (toList!851 (ite c!24523 call!14580 call!14599))) (ite c!24827 (Cons!1706 (h!2311 (toList!851 (ite c!24523 call!14580 call!14599))) (t!6152 (toList!851 (ite c!24523 call!14580 call!14599)))) Nil!1707)))))

(declare-fun d!40811 () Bool)

(assert (=> d!40811 e!87111))

(declare-fun res!64317 () Bool)

(assert (=> d!40811 (=> (not res!64317) (not e!87111))))

(assert (=> d!40811 (= res!64317 (isStrictlySorted!317 lt!69896))))

(assert (=> d!40811 (= lt!69896 e!87113)))

(assert (=> d!40811 (= c!24825 (and ((_ is Cons!1706) (toList!851 (ite c!24523 call!14580 call!14599))) (bvslt (_1!1303 (h!2311 (toList!851 (ite c!24523 call!14580 call!14599)))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!40811 (isStrictlySorted!317 (toList!851 (ite c!24523 call!14580 call!14599)))))

(assert (=> d!40811 (= (insertStrictlySorted!91 (toList!851 (ite c!24523 call!14580 call!14599)) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!69896)))

(declare-fun b!133726 () Bool)

(declare-fun e!87110 () List!1710)

(assert (=> b!133726 (= e!87113 e!87110)))

(assert (=> b!133726 (= c!24824 (and ((_ is Cons!1706) (toList!851 (ite c!24523 call!14580 call!14599))) (= (_1!1303 (h!2311 (toList!851 (ite c!24523 call!14580 call!14599)))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!133727 () Bool)

(declare-fun e!87112 () List!1710)

(declare-fun call!14740 () List!1710)

(assert (=> b!133727 (= e!87112 call!14740)))

(declare-fun b!133728 () Bool)

(declare-fun call!14741 () List!1710)

(assert (=> b!133728 (= e!87110 call!14741)))

(declare-fun b!133729 () Bool)

(assert (=> b!133729 (= e!87111 (contains!889 lt!69896 (tuple2!2585 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bm!14738 () Bool)

(assert (=> bm!14738 (= call!14741 call!14742)))

(declare-fun bm!14739 () Bool)

(assert (=> bm!14739 (= call!14740 call!14741)))

(declare-fun b!133730 () Bool)

(assert (=> b!133730 (= c!24827 (and ((_ is Cons!1706) (toList!851 (ite c!24523 call!14580 call!14599))) (bvsgt (_1!1303 (h!2311 (toList!851 (ite c!24523 call!14580 call!14599)))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!133730 (= e!87110 e!87112)))

(declare-fun b!133731 () Bool)

(assert (=> b!133731 (= e!87112 call!14740)))

(assert (= (and d!40811 c!24825) b!133723))

(assert (= (and d!40811 (not c!24825)) b!133726))

(assert (= (and b!133726 c!24824) b!133728))

(assert (= (and b!133726 (not c!24824)) b!133730))

(assert (= (and b!133730 c!24827) b!133731))

(assert (= (and b!133730 (not c!24827)) b!133727))

(assert (= (or b!133731 b!133727) bm!14739))

(assert (= (or b!133728 bm!14739) bm!14738))

(assert (= (or b!133723 bm!14738) bm!14737))

(assert (= (and bm!14737 c!24826) b!133722))

(assert (= (and bm!14737 (not c!24826)) b!133725))

(assert (= (and d!40811 res!64317) b!133724))

(assert (= (and b!133724 res!64318) b!133729))

(declare-fun m!157959 () Bool)

(assert (=> b!133729 m!157959))

(declare-fun m!157961 () Bool)

(assert (=> b!133724 m!157961))

(declare-fun m!157963 () Bool)

(assert (=> b!133722 m!157963))

(declare-fun m!157965 () Bool)

(assert (=> d!40811 m!157965))

(declare-fun m!157967 () Bool)

(assert (=> d!40811 m!157967))

(declare-fun m!157969 () Bool)

(assert (=> bm!14737 m!157969))

(assert (=> d!40397 d!40811))

(declare-fun d!40813 () Bool)

(declare-fun e!87115 () Bool)

(assert (=> d!40813 e!87115))

(declare-fun res!64319 () Bool)

(assert (=> d!40813 (=> res!64319 e!87115)))

(declare-fun lt!69898 () Bool)

(assert (=> d!40813 (= res!64319 (not lt!69898))))

(declare-fun lt!69900 () Bool)

(assert (=> d!40813 (= lt!69898 lt!69900)))

(declare-fun lt!69897 () Unit!4132)

(declare-fun e!87116 () Unit!4132)

(assert (=> d!40813 (= lt!69897 e!87116)))

(declare-fun c!24828 () Bool)

(assert (=> d!40813 (= c!24828 lt!69900)))

(assert (=> d!40813 (= lt!69900 (containsKey!174 (toList!851 lt!69202) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40813 (= (contains!886 lt!69202 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69898)))

(declare-fun b!133732 () Bool)

(declare-fun lt!69899 () Unit!4132)

(assert (=> b!133732 (= e!87116 lt!69899)))

(assert (=> b!133732 (= lt!69899 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69202) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!133732 (isDefined!124 (getValueByKey!170 (toList!851 lt!69202) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133733 () Bool)

(declare-fun Unit!4179 () Unit!4132)

(assert (=> b!133733 (= e!87116 Unit!4179)))

(declare-fun b!133734 () Bool)

(assert (=> b!133734 (= e!87115 (isDefined!124 (getValueByKey!170 (toList!851 lt!69202) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!40813 c!24828) b!133732))

(assert (= (and d!40813 (not c!24828)) b!133733))

(assert (= (and d!40813 (not res!64319)) b!133734))

(declare-fun m!157971 () Bool)

(assert (=> d!40813 m!157971))

(declare-fun m!157973 () Bool)

(assert (=> b!133732 m!157973))

(assert (=> b!133732 m!156113))

(assert (=> b!133732 m!156113))

(declare-fun m!157975 () Bool)

(assert (=> b!133732 m!157975))

(assert (=> b!133734 m!156113))

(assert (=> b!133734 m!156113))

(assert (=> b!133734 m!157975))

(assert (=> d!40291 d!40813))

(declare-fun d!40815 () Bool)

(declare-fun c!24829 () Bool)

(assert (=> d!40815 (= c!24829 (and ((_ is Cons!1706) lt!69200) (= (_1!1303 (h!2311 lt!69200)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87117 () Option!176)

(assert (=> d!40815 (= (getValueByKey!170 lt!69200 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87117)))

(declare-fun b!133737 () Bool)

(declare-fun e!87118 () Option!176)

(assert (=> b!133737 (= e!87118 (getValueByKey!170 (t!6152 lt!69200) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133736 () Bool)

(assert (=> b!133736 (= e!87117 e!87118)))

(declare-fun c!24830 () Bool)

(assert (=> b!133736 (= c!24830 (and ((_ is Cons!1706) lt!69200) (not (= (_1!1303 (h!2311 lt!69200)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!133735 () Bool)

(assert (=> b!133735 (= e!87117 (Some!175 (_2!1303 (h!2311 lt!69200))))))

(declare-fun b!133738 () Bool)

(assert (=> b!133738 (= e!87118 None!174)))

(assert (= (and d!40815 c!24829) b!133735))

(assert (= (and d!40815 (not c!24829)) b!133736))

(assert (= (and b!133736 c!24830) b!133737))

(assert (= (and b!133736 (not c!24830)) b!133738))

(declare-fun m!157977 () Bool)

(assert (=> b!133737 m!157977))

(assert (=> d!40291 d!40815))

(declare-fun d!40817 () Bool)

(assert (=> d!40817 (= (getValueByKey!170 lt!69200 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69901 () Unit!4132)

(assert (=> d!40817 (= lt!69901 (choose!834 lt!69200 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87119 () Bool)

(assert (=> d!40817 e!87119))

(declare-fun res!64320 () Bool)

(assert (=> d!40817 (=> (not res!64320) (not e!87119))))

(assert (=> d!40817 (= res!64320 (isStrictlySorted!317 lt!69200))))

(assert (=> d!40817 (= (lemmaContainsTupThenGetReturnValue!88 lt!69200 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69901)))

(declare-fun b!133739 () Bool)

(declare-fun res!64321 () Bool)

(assert (=> b!133739 (=> (not res!64321) (not e!87119))))

(assert (=> b!133739 (= res!64321 (containsKey!174 lt!69200 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133740 () Bool)

(assert (=> b!133740 (= e!87119 (contains!889 lt!69200 (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!40817 res!64320) b!133739))

(assert (= (and b!133739 res!64321) b!133740))

(assert (=> d!40817 m!156107))

(declare-fun m!157979 () Bool)

(assert (=> d!40817 m!157979))

(declare-fun m!157981 () Bool)

(assert (=> d!40817 m!157981))

(declare-fun m!157983 () Bool)

(assert (=> b!133739 m!157983))

(declare-fun m!157985 () Bool)

(assert (=> b!133740 m!157985))

(assert (=> d!40291 d!40817))

(declare-fun e!87124 () List!1710)

(declare-fun b!133741 () Bool)

(assert (=> b!133741 (= e!87124 (insertStrictlySorted!91 (t!6152 (toList!851 call!14585)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133742 () Bool)

(declare-fun e!87123 () List!1710)

(declare-fun call!14745 () List!1710)

(assert (=> b!133742 (= e!87123 call!14745)))

(declare-fun b!133743 () Bool)

(declare-fun res!64323 () Bool)

(declare-fun e!87121 () Bool)

(assert (=> b!133743 (=> (not res!64323) (not e!87121))))

(declare-fun lt!69902 () List!1710)

(assert (=> b!133743 (= res!64323 (containsKey!174 lt!69902 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14740 () Bool)

(declare-fun c!24832 () Bool)

(assert (=> bm!14740 (= call!14745 ($colon$colon!91 e!87124 (ite c!24832 (h!2311 (toList!851 call!14585)) (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!24833 () Bool)

(assert (=> bm!14740 (= c!24833 c!24832)))

(declare-fun b!133744 () Bool)

(declare-fun c!24834 () Bool)

(declare-fun c!24831 () Bool)

(assert (=> b!133744 (= e!87124 (ite c!24831 (t!6152 (toList!851 call!14585)) (ite c!24834 (Cons!1706 (h!2311 (toList!851 call!14585)) (t!6152 (toList!851 call!14585))) Nil!1707)))))

(declare-fun d!40819 () Bool)

(assert (=> d!40819 e!87121))

(declare-fun res!64322 () Bool)

(assert (=> d!40819 (=> (not res!64322) (not e!87121))))

(assert (=> d!40819 (= res!64322 (isStrictlySorted!317 lt!69902))))

(assert (=> d!40819 (= lt!69902 e!87123)))

(assert (=> d!40819 (= c!24832 (and ((_ is Cons!1706) (toList!851 call!14585)) (bvslt (_1!1303 (h!2311 (toList!851 call!14585))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40819 (isStrictlySorted!317 (toList!851 call!14585))))

(assert (=> d!40819 (= (insertStrictlySorted!91 (toList!851 call!14585) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69902)))

(declare-fun b!133745 () Bool)

(declare-fun e!87120 () List!1710)

(assert (=> b!133745 (= e!87123 e!87120)))

(assert (=> b!133745 (= c!24831 (and ((_ is Cons!1706) (toList!851 call!14585)) (= (_1!1303 (h!2311 (toList!851 call!14585))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133746 () Bool)

(declare-fun e!87122 () List!1710)

(declare-fun call!14743 () List!1710)

(assert (=> b!133746 (= e!87122 call!14743)))

(declare-fun b!133747 () Bool)

(declare-fun call!14744 () List!1710)

(assert (=> b!133747 (= e!87120 call!14744)))

(declare-fun b!133748 () Bool)

(assert (=> b!133748 (= e!87121 (contains!889 lt!69902 (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14741 () Bool)

(assert (=> bm!14741 (= call!14744 call!14745)))

(declare-fun bm!14742 () Bool)

(assert (=> bm!14742 (= call!14743 call!14744)))

(declare-fun b!133749 () Bool)

(assert (=> b!133749 (= c!24834 (and ((_ is Cons!1706) (toList!851 call!14585)) (bvsgt (_1!1303 (h!2311 (toList!851 call!14585))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!133749 (= e!87120 e!87122)))

(declare-fun b!133750 () Bool)

(assert (=> b!133750 (= e!87122 call!14743)))

(assert (= (and d!40819 c!24832) b!133742))

(assert (= (and d!40819 (not c!24832)) b!133745))

(assert (= (and b!133745 c!24831) b!133747))

(assert (= (and b!133745 (not c!24831)) b!133749))

(assert (= (and b!133749 c!24834) b!133750))

(assert (= (and b!133749 (not c!24834)) b!133746))

(assert (= (or b!133750 b!133746) bm!14742))

(assert (= (or b!133747 bm!14742) bm!14741))

(assert (= (or b!133742 bm!14741) bm!14740))

(assert (= (and bm!14740 c!24833) b!133741))

(assert (= (and bm!14740 (not c!24833)) b!133744))

(assert (= (and d!40819 res!64322) b!133743))

(assert (= (and b!133743 res!64323) b!133748))

(declare-fun m!157987 () Bool)

(assert (=> b!133748 m!157987))

(declare-fun m!157989 () Bool)

(assert (=> b!133743 m!157989))

(declare-fun m!157991 () Bool)

(assert (=> b!133741 m!157991))

(declare-fun m!157993 () Bool)

(assert (=> d!40819 m!157993))

(declare-fun m!157995 () Bool)

(assert (=> d!40819 m!157995))

(declare-fun m!157997 () Bool)

(assert (=> bm!14740 m!157997))

(assert (=> d!40291 d!40819))

(declare-fun d!40821 () Bool)

(declare-fun e!87125 () Bool)

(assert (=> d!40821 e!87125))

(declare-fun res!64325 () Bool)

(assert (=> d!40821 (=> (not res!64325) (not e!87125))))

(declare-fun lt!69905 () ListLongMap!1671)

(assert (=> d!40821 (= res!64325 (contains!886 lt!69905 (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69903 () List!1710)

(assert (=> d!40821 (= lt!69905 (ListLongMap!1672 lt!69903))))

(declare-fun lt!69906 () Unit!4132)

(declare-fun lt!69904 () Unit!4132)

(assert (=> d!40821 (= lt!69906 lt!69904)))

(assert (=> d!40821 (= (getValueByKey!170 lt!69903 (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40821 (= lt!69904 (lemmaContainsTupThenGetReturnValue!88 lt!69903 (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40821 (= lt!69903 (insertStrictlySorted!91 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40821 (= (+!163 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69905)))

(declare-fun b!133751 () Bool)

(declare-fun res!64324 () Bool)

(assert (=> b!133751 (=> (not res!64324) (not e!87125))))

(assert (=> b!133751 (= res!64324 (= (getValueByKey!170 (toList!851 lt!69905) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133752 () Bool)

(assert (=> b!133752 (= e!87125 (contains!889 (toList!851 lt!69905) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40821 res!64325) b!133751))

(assert (= (and b!133751 res!64324) b!133752))

(declare-fun m!157999 () Bool)

(assert (=> d!40821 m!157999))

(declare-fun m!158001 () Bool)

(assert (=> d!40821 m!158001))

(declare-fun m!158003 () Bool)

(assert (=> d!40821 m!158003))

(declare-fun m!158005 () Bool)

(assert (=> d!40821 m!158005))

(declare-fun m!158007 () Bool)

(assert (=> b!133751 m!158007))

(declare-fun m!158009 () Bool)

(assert (=> b!133752 m!158009))

(assert (=> d!40347 d!40821))

(assert (=> d!40347 d!40383))

(assert (=> d!40347 d!40425))

(declare-fun d!40823 () Bool)

(assert (=> d!40823 (= (+!163 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69098 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(assert (=> d!40823 true))

(declare-fun _$7!116 () Unit!4132)

(assert (=> d!40823 (= (choose!827 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) lt!69098 (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) (defaultEntry!2864 newMap!16)) _$7!116)))

(declare-fun bs!5533 () Bool)

(assert (= bs!5533 d!40823))

(assert (=> bs!5533 m!156041))

(assert (=> bs!5533 m!156041))

(assert (=> bs!5533 m!156343))

(assert (=> bs!5533 m!155839))

(assert (=> bs!5533 m!156345))

(assert (=> d!40347 d!40823))

(declare-fun b!133753 () Bool)

(declare-fun e!87138 () Bool)

(declare-fun e!87131 () Bool)

(assert (=> b!133753 (= e!87138 e!87131)))

(declare-fun res!64330 () Bool)

(declare-fun call!14750 () Bool)

(assert (=> b!133753 (= res!64330 call!14750)))

(assert (=> b!133753 (=> (not res!64330) (not e!87131))))

(declare-fun call!14751 () ListLongMap!1671)

(declare-fun call!14746 () ListLongMap!1671)

(declare-fun bm!14743 () Bool)

(declare-fun c!24840 () Bool)

(declare-fun c!24838 () Bool)

(declare-fun call!14752 () ListLongMap!1671)

(declare-fun call!14749 () ListLongMap!1671)

(assert (=> bm!14743 (= call!14746 (+!163 (ite c!24840 call!14749 (ite c!24838 call!14752 call!14751)) (ite (or c!24840 c!24838) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun bm!14744 () Bool)

(assert (=> bm!14744 (= call!14749 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69098 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!133754 () Bool)

(declare-fun e!87136 () Bool)

(assert (=> b!133754 (= e!87136 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133755 () Bool)

(declare-fun e!87133 () Bool)

(assert (=> b!133755 (= e!87133 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14745 () Bool)

(assert (=> bm!14745 (= call!14751 call!14752)))

(declare-fun b!133756 () Bool)

(declare-fun e!87135 () ListLongMap!1671)

(declare-fun e!87137 () ListLongMap!1671)

(assert (=> b!133756 (= e!87135 e!87137)))

(assert (=> b!133756 (= c!24838 (and (not (= (bvand lt!69098 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!69098 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133757 () Bool)

(declare-fun e!87128 () Bool)

(declare-fun e!87134 () Bool)

(assert (=> b!133757 (= e!87128 e!87134)))

(declare-fun res!64331 () Bool)

(assert (=> b!133757 (=> (not res!64331) (not e!87134))))

(declare-fun lt!69923 () ListLongMap!1671)

(assert (=> b!133757 (= res!64331 (contains!886 lt!69923 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133757 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun bm!14746 () Bool)

(assert (=> bm!14746 (= call!14750 (contains!886 lt!69923 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133758 () Bool)

(assert (=> b!133758 (= e!87134 (= (apply!116 lt!69923 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133758 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (_values!2847 newMap!16))))))

(assert (=> b!133758 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun e!87126 () Bool)

(declare-fun b!133760 () Bool)

(assert (=> b!133760 (= e!87126 (= (apply!116 lt!69923 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133761 () Bool)

(declare-fun e!87130 () Unit!4132)

(declare-fun lt!69925 () Unit!4132)

(assert (=> b!133761 (= e!87130 lt!69925)))

(declare-fun lt!69913 () ListLongMap!1671)

(assert (=> b!133761 (= lt!69913 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69098 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69921 () (_ BitVec 64))

(assert (=> b!133761 (= lt!69921 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69919 () (_ BitVec 64))

(assert (=> b!133761 (= lt!69919 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69928 () Unit!4132)

(assert (=> b!133761 (= lt!69928 (addStillContains!92 lt!69913 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69919))))

(assert (=> b!133761 (contains!886 (+!163 lt!69913 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69919)))

(declare-fun lt!69920 () Unit!4132)

(assert (=> b!133761 (= lt!69920 lt!69928)))

(declare-fun lt!69909 () ListLongMap!1671)

(assert (=> b!133761 (= lt!69909 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69098 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69926 () (_ BitVec 64))

(assert (=> b!133761 (= lt!69926 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69914 () (_ BitVec 64))

(assert (=> b!133761 (= lt!69914 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69915 () Unit!4132)

(assert (=> b!133761 (= lt!69915 (addApplyDifferent!92 lt!69909 lt!69926 (minValue!2719 newMap!16) lt!69914))))

(assert (=> b!133761 (= (apply!116 (+!163 lt!69909 (tuple2!2585 lt!69926 (minValue!2719 newMap!16))) lt!69914) (apply!116 lt!69909 lt!69914))))

(declare-fun lt!69924 () Unit!4132)

(assert (=> b!133761 (= lt!69924 lt!69915)))

(declare-fun lt!69907 () ListLongMap!1671)

(assert (=> b!133761 (= lt!69907 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69098 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69908 () (_ BitVec 64))

(assert (=> b!133761 (= lt!69908 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69911 () (_ BitVec 64))

(assert (=> b!133761 (= lt!69911 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69910 () Unit!4132)

(assert (=> b!133761 (= lt!69910 (addApplyDifferent!92 lt!69907 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69911))))

(assert (=> b!133761 (= (apply!116 (+!163 lt!69907 (tuple2!2585 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69911) (apply!116 lt!69907 lt!69911))))

(declare-fun lt!69918 () Unit!4132)

(assert (=> b!133761 (= lt!69918 lt!69910)))

(declare-fun lt!69916 () ListLongMap!1671)

(assert (=> b!133761 (= lt!69916 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69098 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69917 () (_ BitVec 64))

(assert (=> b!133761 (= lt!69917 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69927 () (_ BitVec 64))

(assert (=> b!133761 (= lt!69927 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133761 (= lt!69925 (addApplyDifferent!92 lt!69916 lt!69917 (minValue!2719 newMap!16) lt!69927))))

(assert (=> b!133761 (= (apply!116 (+!163 lt!69916 (tuple2!2585 lt!69917 (minValue!2719 newMap!16))) lt!69927) (apply!116 lt!69916 lt!69927))))

(declare-fun b!133762 () Bool)

(declare-fun e!87127 () ListLongMap!1671)

(assert (=> b!133762 (= e!87127 call!14751)))

(declare-fun b!133763 () Bool)

(declare-fun call!14747 () ListLongMap!1671)

(assert (=> b!133763 (= e!87137 call!14747)))

(declare-fun b!133764 () Bool)

(declare-fun res!64327 () Bool)

(declare-fun e!87132 () Bool)

(assert (=> b!133764 (=> (not res!64327) (not e!87132))))

(declare-fun e!87129 () Bool)

(assert (=> b!133764 (= res!64327 e!87129)))

(declare-fun c!24837 () Bool)

(assert (=> b!133764 (= c!24837 (not (= (bvand lt!69098 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!14747 () Bool)

(assert (=> bm!14747 (= call!14752 call!14749)))

(declare-fun b!133765 () Bool)

(assert (=> b!133765 (= e!87138 (not call!14750))))

(declare-fun b!133766 () Bool)

(declare-fun c!24839 () Bool)

(assert (=> b!133766 (= c!24839 (and (not (= (bvand lt!69098 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!69098 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!133766 (= e!87137 e!87127)))

(declare-fun b!133767 () Bool)

(declare-fun Unit!4180 () Unit!4132)

(assert (=> b!133767 (= e!87130 Unit!4180)))

(declare-fun b!133768 () Bool)

(assert (=> b!133768 (= e!87135 (+!163 call!14746 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun bm!14748 () Bool)

(assert (=> bm!14748 (= call!14747 call!14746)))

(declare-fun b!133769 () Bool)

(assert (=> b!133769 (= e!87127 call!14747)))

(declare-fun b!133770 () Bool)

(declare-fun call!14748 () Bool)

(assert (=> b!133770 (= e!87129 (not call!14748))))

(declare-fun b!133771 () Bool)

(assert (=> b!133771 (= e!87132 e!87138)))

(declare-fun c!24836 () Bool)

(assert (=> b!133771 (= c!24836 (not (= (bvand lt!69098 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14749 () Bool)

(assert (=> bm!14749 (= call!14748 (contains!886 lt!69923 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133759 () Bool)

(assert (=> b!133759 (= e!87129 e!87126)))

(declare-fun res!64329 () Bool)

(assert (=> b!133759 (= res!64329 call!14748)))

(assert (=> b!133759 (=> (not res!64329) (not e!87126))))

(declare-fun d!40825 () Bool)

(assert (=> d!40825 e!87132))

(declare-fun res!64334 () Bool)

(assert (=> d!40825 (=> (not res!64334) (not e!87132))))

(assert (=> d!40825 (= res!64334 (or (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))))

(declare-fun lt!69912 () ListLongMap!1671)

(assert (=> d!40825 (= lt!69923 lt!69912)))

(declare-fun lt!69922 () Unit!4132)

(assert (=> d!40825 (= lt!69922 e!87130)))

(declare-fun c!24835 () Bool)

(assert (=> d!40825 (= c!24835 e!87133)))

(declare-fun res!64333 () Bool)

(assert (=> d!40825 (=> (not res!64333) (not e!87133))))

(assert (=> d!40825 (= res!64333 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40825 (= lt!69912 e!87135)))

(assert (=> d!40825 (= c!24840 (and (not (= (bvand lt!69098 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!69098 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40825 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40825 (= (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69098 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69923)))

(declare-fun b!133772 () Bool)

(declare-fun res!64326 () Bool)

(assert (=> b!133772 (=> (not res!64326) (not e!87132))))

(assert (=> b!133772 (= res!64326 e!87128)))

(declare-fun res!64332 () Bool)

(assert (=> b!133772 (=> res!64332 e!87128)))

(assert (=> b!133772 (= res!64332 (not e!87136))))

(declare-fun res!64328 () Bool)

(assert (=> b!133772 (=> (not res!64328) (not e!87136))))

(assert (=> b!133772 (= res!64328 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133773 () Bool)

(assert (=> b!133773 (= e!87131 (= (apply!116 lt!69923 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 newMap!16)))))

(assert (= (and d!40825 c!24840) b!133768))

(assert (= (and d!40825 (not c!24840)) b!133756))

(assert (= (and b!133756 c!24838) b!133763))

(assert (= (and b!133756 (not c!24838)) b!133766))

(assert (= (and b!133766 c!24839) b!133769))

(assert (= (and b!133766 (not c!24839)) b!133762))

(assert (= (or b!133769 b!133762) bm!14745))

(assert (= (or b!133763 bm!14745) bm!14747))

(assert (= (or b!133763 b!133769) bm!14748))

(assert (= (or b!133768 bm!14747) bm!14744))

(assert (= (or b!133768 bm!14748) bm!14743))

(assert (= (and d!40825 res!64333) b!133755))

(assert (= (and d!40825 c!24835) b!133761))

(assert (= (and d!40825 (not c!24835)) b!133767))

(assert (= (and d!40825 res!64334) b!133772))

(assert (= (and b!133772 res!64328) b!133754))

(assert (= (and b!133772 (not res!64332)) b!133757))

(assert (= (and b!133757 res!64331) b!133758))

(assert (= (and b!133772 res!64326) b!133764))

(assert (= (and b!133764 c!24837) b!133759))

(assert (= (and b!133764 (not c!24837)) b!133770))

(assert (= (and b!133759 res!64329) b!133760))

(assert (= (or b!133759 b!133770) bm!14749))

(assert (= (and b!133764 res!64327) b!133771))

(assert (= (and b!133771 c!24836) b!133753))

(assert (= (and b!133771 (not c!24836)) b!133765))

(assert (= (and b!133753 res!64330) b!133773))

(assert (= (or b!133753 b!133765) bm!14746))

(declare-fun b_lambda!5947 () Bool)

(assert (=> (not b_lambda!5947) (not b!133758)))

(assert (=> b!133758 t!6164))

(declare-fun b_and!8285 () Bool)

(assert (= b_and!8281 (and (=> t!6164 result!3993) b_and!8285)))

(assert (=> b!133758 t!6166))

(declare-fun b_and!8287 () Bool)

(assert (= b_and!8283 (and (=> t!6166 result!3995) b_and!8287)))

(assert (=> b!133757 m!156125))

(assert (=> b!133757 m!156125))

(declare-fun m!158011 () Bool)

(assert (=> b!133757 m!158011))

(assert (=> bm!14744 m!155839))

(declare-fun m!158013 () Bool)

(assert (=> bm!14744 m!158013))

(declare-fun m!158015 () Bool)

(assert (=> bm!14743 m!158015))

(assert (=> b!133758 m!156473))

(assert (=> b!133758 m!156135))

(assert (=> b!133758 m!156475))

(assert (=> b!133758 m!156135))

(assert (=> b!133758 m!156125))

(assert (=> b!133758 m!156473))

(assert (=> b!133758 m!156125))

(declare-fun m!158017 () Bool)

(assert (=> b!133758 m!158017))

(assert (=> b!133754 m!156125))

(assert (=> b!133754 m!156125))

(assert (=> b!133754 m!156141))

(assert (=> b!133755 m!156125))

(assert (=> b!133755 m!156125))

(assert (=> b!133755 m!156141))

(declare-fun m!158019 () Bool)

(assert (=> b!133760 m!158019))

(declare-fun m!158021 () Bool)

(assert (=> b!133768 m!158021))

(declare-fun m!158023 () Bool)

(assert (=> bm!14746 m!158023))

(declare-fun m!158025 () Bool)

(assert (=> b!133761 m!158025))

(declare-fun m!158027 () Bool)

(assert (=> b!133761 m!158027))

(declare-fun m!158029 () Bool)

(assert (=> b!133761 m!158029))

(declare-fun m!158031 () Bool)

(assert (=> b!133761 m!158031))

(assert (=> b!133761 m!158025))

(declare-fun m!158033 () Bool)

(assert (=> b!133761 m!158033))

(declare-fun m!158035 () Bool)

(assert (=> b!133761 m!158035))

(declare-fun m!158037 () Bool)

(assert (=> b!133761 m!158037))

(declare-fun m!158039 () Bool)

(assert (=> b!133761 m!158039))

(assert (=> b!133761 m!158029))

(declare-fun m!158041 () Bool)

(assert (=> b!133761 m!158041))

(assert (=> b!133761 m!155839))

(declare-fun m!158043 () Bool)

(assert (=> b!133761 m!158043))

(assert (=> b!133761 m!155839))

(declare-fun m!158045 () Bool)

(assert (=> b!133761 m!158045))

(declare-fun m!158047 () Bool)

(assert (=> b!133761 m!158047))

(declare-fun m!158049 () Bool)

(assert (=> b!133761 m!158049))

(assert (=> b!133761 m!158037))

(assert (=> b!133761 m!156125))

(assert (=> b!133761 m!155839))

(assert (=> b!133761 m!158013))

(declare-fun m!158051 () Bool)

(assert (=> b!133761 m!158051))

(assert (=> b!133761 m!158031))

(declare-fun m!158053 () Bool)

(assert (=> b!133761 m!158053))

(declare-fun m!158055 () Bool)

(assert (=> b!133773 m!158055))

(declare-fun m!158057 () Bool)

(assert (=> bm!14749 m!158057))

(assert (=> d!40825 m!156183))

(assert (=> d!40347 d!40825))

(declare-fun d!40827 () Bool)

(assert (=> d!40827 (contains!886 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116)))))

(assert (=> d!40827 true))

(declare-fun _$16!151 () Unit!4132)

(assert (=> d!40827 (= (choose!824 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3273 lt!69116) (defaultEntry!2864 newMap!16)) _$16!151)))

(declare-fun bs!5534 () Bool)

(assert (= bs!5534 d!40827))

(assert (=> bs!5534 m!155965))

(assert (=> bs!5534 m!155971))

(assert (=> bs!5534 m!155965))

(assert (=> bs!5534 m!155971))

(assert (=> bs!5534 m!155975))

(assert (=> d!40313 d!40827))

(assert (=> d!40313 d!40425))

(assert (=> d!40415 d!40351))

(declare-fun b!133790 () Bool)

(declare-fun e!87149 () Bool)

(declare-fun lt!69931 () SeekEntryResult!278)

(assert (=> b!133790 (= e!87149 ((_ is Undefined!278) lt!69931))))

(declare-fun b!133791 () Bool)

(declare-fun res!64344 () Bool)

(declare-fun e!87150 () Bool)

(assert (=> b!133791 (=> (not res!64344) (not e!87150))))

(declare-fun call!14758 () Bool)

(assert (=> b!133791 (= res!64344 call!14758)))

(assert (=> b!133791 (= e!87149 e!87150)))

(declare-fun b!133792 () Bool)

(declare-fun e!87148 () Bool)

(declare-fun e!87147 () Bool)

(assert (=> b!133792 (= e!87148 e!87147)))

(declare-fun res!64346 () Bool)

(assert (=> b!133792 (= res!64346 call!14758)))

(assert (=> b!133792 (=> (not res!64346) (not e!87147))))

(declare-fun b!133793 () Bool)

(declare-fun call!14757 () Bool)

(assert (=> b!133793 (= e!87150 (not call!14757))))

(declare-fun b!133794 () Bool)

(declare-fun res!64345 () Bool)

(assert (=> b!133794 (= res!64345 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3272 lt!69931)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133794 (=> (not res!64345) (not e!87147))))

(declare-fun bm!14754 () Bool)

(assert (=> bm!14754 (= call!14757 (arrayContainsKey!0 (_keys!4612 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!133795 () Bool)

(assert (=> b!133795 (= e!87148 e!87149)))

(declare-fun c!24845 () Bool)

(assert (=> b!133795 (= c!24845 ((_ is MissingVacant!278) lt!69931))))

(declare-fun b!133796 () Bool)

(declare-fun res!64343 () Bool)

(assert (=> b!133796 (=> (not res!64343) (not e!87150))))

(assert (=> b!133796 (= res!64343 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3275 lt!69931)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133797 () Bool)

(assert (=> b!133797 (= e!87147 (not call!14757))))

(declare-fun d!40829 () Bool)

(assert (=> d!40829 e!87148))

(declare-fun c!24846 () Bool)

(assert (=> d!40829 (= c!24846 ((_ is MissingZero!278) lt!69931))))

(assert (=> d!40829 (= lt!69931 (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(assert (=> d!40829 true))

(declare-fun _$34!974 () Unit!4132)

(assert (=> d!40829 (= (choose!832 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)) _$34!974)))

(declare-fun bm!14755 () Bool)

(assert (=> bm!14755 (= call!14758 (inRange!0 (ite c!24846 (index!3272 lt!69931) (index!3275 lt!69931)) (mask!7163 newMap!16)))))

(assert (= (and d!40829 c!24846) b!133792))

(assert (= (and d!40829 (not c!24846)) b!133795))

(assert (= (and b!133792 res!64346) b!133794))

(assert (= (and b!133794 res!64345) b!133797))

(assert (= (and b!133795 c!24845) b!133791))

(assert (= (and b!133795 (not c!24845)) b!133790))

(assert (= (and b!133791 res!64344) b!133796))

(assert (= (and b!133796 res!64343) b!133793))

(assert (= (or b!133792 b!133791) bm!14755))

(assert (= (or b!133797 b!133793) bm!14754))

(assert (=> d!40829 m!155841))

(assert (=> d!40829 m!155961))

(declare-fun m!158059 () Bool)

(assert (=> bm!14755 m!158059))

(declare-fun m!158061 () Bool)

(assert (=> b!133794 m!158061))

(declare-fun m!158063 () Bool)

(assert (=> b!133796 m!158063))

(assert (=> bm!14754 m!155841))

(assert (=> bm!14754 m!155987))

(assert (=> d!40415 d!40829))

(assert (=> d!40415 d!40425))

(declare-fun d!40831 () Bool)

(assert (=> d!40831 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182))))

(declare-fun lt!69932 () Unit!4132)

(assert (=> d!40831 (= lt!69932 (choose!826 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182))))

(declare-fun e!87151 () Bool)

(assert (=> d!40831 e!87151))

(declare-fun res!64347 () Bool)

(assert (=> d!40831 (=> (not res!64347) (not e!87151))))

(assert (=> d!40831 (= res!64347 (isStrictlySorted!317 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!40831 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182) lt!69932)))

(declare-fun b!133798 () Bool)

(assert (=> b!133798 (= e!87151 (containsKey!174 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182))))

(assert (= (and d!40831 res!64347) b!133798))

(assert (=> d!40831 m!156447))

(assert (=> d!40831 m!156447))

(assert (=> d!40831 m!156449))

(declare-fun m!158065 () Bool)

(assert (=> d!40831 m!158065))

(declare-fun m!158067 () Bool)

(assert (=> d!40831 m!158067))

(assert (=> b!133798 m!156443))

(assert (=> b!132956 d!40831))

(assert (=> b!132956 d!40421))

(assert (=> b!132956 d!40423))

(declare-fun d!40833 () Bool)

(declare-fun e!87152 () Bool)

(assert (=> d!40833 e!87152))

(declare-fun res!64348 () Bool)

(assert (=> d!40833 (=> res!64348 e!87152)))

(declare-fun lt!69934 () Bool)

(assert (=> d!40833 (= res!64348 (not lt!69934))))

(declare-fun lt!69936 () Bool)

(assert (=> d!40833 (= lt!69934 lt!69936)))

(declare-fun lt!69933 () Unit!4132)

(declare-fun e!87153 () Unit!4132)

(assert (=> d!40833 (= lt!69933 e!87153)))

(declare-fun c!24847 () Bool)

(assert (=> d!40833 (= c!24847 lt!69936)))

(assert (=> d!40833 (= lt!69936 (containsKey!174 (toList!851 lt!69484) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40833 (= (contains!886 lt!69484 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!69934)))

(declare-fun b!133799 () Bool)

(declare-fun lt!69935 () Unit!4132)

(assert (=> b!133799 (= e!87153 lt!69935)))

(assert (=> b!133799 (= lt!69935 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69484) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133799 (isDefined!124 (getValueByKey!170 (toList!851 lt!69484) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133800 () Bool)

(declare-fun Unit!4181 () Unit!4132)

(assert (=> b!133800 (= e!87153 Unit!4181)))

(declare-fun b!133801 () Bool)

(assert (=> b!133801 (= e!87152 (isDefined!124 (getValueByKey!170 (toList!851 lt!69484) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!40833 c!24847) b!133799))

(assert (= (and d!40833 (not c!24847)) b!133800))

(assert (= (and d!40833 (not res!64348)) b!133801))

(assert (=> d!40833 m!156125))

(declare-fun m!158069 () Bool)

(assert (=> d!40833 m!158069))

(assert (=> b!133799 m!156125))

(declare-fun m!158071 () Bool)

(assert (=> b!133799 m!158071))

(assert (=> b!133799 m!156125))

(assert (=> b!133799 m!156919))

(assert (=> b!133799 m!156919))

(declare-fun m!158073 () Bool)

(assert (=> b!133799 m!158073))

(assert (=> b!133801 m!156125))

(assert (=> b!133801 m!156919))

(assert (=> b!133801 m!156919))

(assert (=> b!133801 m!158073))

(assert (=> b!133051 d!40833))

(assert (=> d!40363 d!40353))

(declare-fun d!40835 () Bool)

(assert (=> d!40835 (= (apply!116 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69177) (apply!116 lt!69172 lt!69177))))

(assert (=> d!40835 true))

(declare-fun _$34!977 () Unit!4132)

(assert (=> d!40835 (= (choose!828 lt!69172 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69177) _$34!977)))

(declare-fun bs!5535 () Bool)

(assert (= bs!5535 d!40835))

(assert (=> bs!5535 m!156077))

(assert (=> bs!5535 m!156077))

(assert (=> bs!5535 m!156079))

(assert (=> bs!5535 m!156087))

(assert (=> d!40363 d!40835))

(assert (=> d!40363 d!40365))

(assert (=> d!40363 d!40361))

(declare-fun d!40837 () Bool)

(declare-fun e!87154 () Bool)

(assert (=> d!40837 e!87154))

(declare-fun res!64349 () Bool)

(assert (=> d!40837 (=> res!64349 e!87154)))

(declare-fun lt!69938 () Bool)

(assert (=> d!40837 (= res!64349 (not lt!69938))))

(declare-fun lt!69940 () Bool)

(assert (=> d!40837 (= lt!69938 lt!69940)))

(declare-fun lt!69937 () Unit!4132)

(declare-fun e!87155 () Unit!4132)

(assert (=> d!40837 (= lt!69937 e!87155)))

(declare-fun c!24848 () Bool)

(assert (=> d!40837 (= c!24848 lt!69940)))

(assert (=> d!40837 (= lt!69940 (containsKey!174 (toList!851 lt!69172) lt!69177))))

(assert (=> d!40837 (= (contains!886 lt!69172 lt!69177) lt!69938)))

(declare-fun b!133803 () Bool)

(declare-fun lt!69939 () Unit!4132)

(assert (=> b!133803 (= e!87155 lt!69939)))

(assert (=> b!133803 (= lt!69939 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69172) lt!69177))))

(assert (=> b!133803 (isDefined!124 (getValueByKey!170 (toList!851 lt!69172) lt!69177))))

(declare-fun b!133804 () Bool)

(declare-fun Unit!4182 () Unit!4132)

(assert (=> b!133804 (= e!87155 Unit!4182)))

(declare-fun b!133805 () Bool)

(assert (=> b!133805 (= e!87154 (isDefined!124 (getValueByKey!170 (toList!851 lt!69172) lt!69177)))))

(assert (= (and d!40837 c!24848) b!133803))

(assert (= (and d!40837 (not c!24848)) b!133804))

(assert (= (and d!40837 (not res!64349)) b!133805))

(declare-fun m!158075 () Bool)

(assert (=> d!40837 m!158075))

(declare-fun m!158077 () Bool)

(assert (=> b!133803 m!158077))

(assert (=> b!133803 m!156395))

(assert (=> b!133803 m!156395))

(declare-fun m!158079 () Bool)

(assert (=> b!133803 m!158079))

(assert (=> b!133805 m!156395))

(assert (=> b!133805 m!156395))

(assert (=> b!133805 m!158079))

(assert (=> d!40363 d!40837))

(declare-fun b!133806 () Bool)

(declare-fun e!87159 () Bool)

(declare-fun e!87156 () Bool)

(assert (=> b!133806 (= e!87159 e!87156)))

(declare-fun res!64350 () Bool)

(assert (=> b!133806 (=> (not res!64350) (not e!87156))))

(declare-fun e!87157 () Bool)

(assert (=> b!133806 (= res!64350 (not e!87157))))

(declare-fun res!64352 () Bool)

(assert (=> b!133806 (=> (not res!64352) (not e!87157))))

(assert (=> b!133806 (= res!64352 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(declare-fun bm!14756 () Bool)

(declare-fun call!14759 () Bool)

(declare-fun c!24849 () Bool)

(assert (=> bm!14756 (= call!14759 (arrayNoDuplicates!0 (_keys!4612 (_2!1304 lt!69115)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24849 (Cons!1707 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)))))

(declare-fun d!40839 () Bool)

(declare-fun res!64351 () Bool)

(assert (=> d!40839 (=> res!64351 e!87159)))

(assert (=> d!40839 (= res!64351 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(assert (=> d!40839 (= (arrayNoDuplicates!0 (_keys!4612 (_2!1304 lt!69115)) #b00000000000000000000000000000000 Nil!1708) e!87159)))

(declare-fun b!133807 () Bool)

(declare-fun e!87158 () Bool)

(assert (=> b!133807 (= e!87158 call!14759)))

(declare-fun b!133808 () Bool)

(assert (=> b!133808 (= e!87157 (contains!888 Nil!1708 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(declare-fun b!133809 () Bool)

(assert (=> b!133809 (= e!87156 e!87158)))

(assert (=> b!133809 (= c!24849 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(declare-fun b!133810 () Bool)

(assert (=> b!133810 (= e!87158 call!14759)))

(assert (= (and d!40839 (not res!64351)) b!133806))

(assert (= (and b!133806 res!64352) b!133808))

(assert (= (and b!133806 res!64350) b!133809))

(assert (= (and b!133809 c!24849) b!133807))

(assert (= (and b!133809 (not c!24849)) b!133810))

(assert (= (or b!133807 b!133810) bm!14756))

(assert (=> b!133806 m!156913))

(assert (=> b!133806 m!156913))

(assert (=> b!133806 m!156915))

(assert (=> bm!14756 m!156913))

(declare-fun m!158081 () Bool)

(assert (=> bm!14756 m!158081))

(assert (=> b!133808 m!156913))

(assert (=> b!133808 m!156913))

(declare-fun m!158083 () Bool)

(assert (=> b!133808 m!158083))

(assert (=> b!133809 m!156913))

(assert (=> b!133809 m!156913))

(assert (=> b!133809 m!156915))

(assert (=> b!132993 d!40839))

(declare-fun d!40841 () Bool)

(assert (=> d!40841 (= (get!1482 (getValueByKey!170 (toList!851 lt!69179) lt!69190)) (v!3198 (getValueByKey!170 (toList!851 lt!69179) lt!69190)))))

(assert (=> d!40357 d!40841))

(declare-fun d!40843 () Bool)

(declare-fun c!24850 () Bool)

(assert (=> d!40843 (= c!24850 (and ((_ is Cons!1706) (toList!851 lt!69179)) (= (_1!1303 (h!2311 (toList!851 lt!69179))) lt!69190)))))

(declare-fun e!87160 () Option!176)

(assert (=> d!40843 (= (getValueByKey!170 (toList!851 lt!69179) lt!69190) e!87160)))

(declare-fun b!133813 () Bool)

(declare-fun e!87161 () Option!176)

(assert (=> b!133813 (= e!87161 (getValueByKey!170 (t!6152 (toList!851 lt!69179)) lt!69190))))

(declare-fun b!133812 () Bool)

(assert (=> b!133812 (= e!87160 e!87161)))

(declare-fun c!24851 () Bool)

(assert (=> b!133812 (= c!24851 (and ((_ is Cons!1706) (toList!851 lt!69179)) (not (= (_1!1303 (h!2311 (toList!851 lt!69179))) lt!69190))))))

(declare-fun b!133811 () Bool)

(assert (=> b!133811 (= e!87160 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69179)))))))

(declare-fun b!133814 () Bool)

(assert (=> b!133814 (= e!87161 None!174)))

(assert (= (and d!40843 c!24850) b!133811))

(assert (= (and d!40843 (not c!24850)) b!133812))

(assert (= (and b!133812 c!24851) b!133813))

(assert (= (and b!133812 (not c!24851)) b!133814))

(declare-fun m!158085 () Bool)

(assert (=> b!133813 m!158085))

(assert (=> d!40357 d!40843))

(declare-fun d!40845 () Bool)

(declare-fun lt!69941 () Bool)

(assert (=> d!40845 (= lt!69941 (select (content!132 Nil!1708) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!87163 () Bool)

(assert (=> d!40845 (= lt!69941 e!87163)))

(declare-fun res!64354 () Bool)

(assert (=> d!40845 (=> (not res!64354) (not e!87163))))

(assert (=> d!40845 (= res!64354 ((_ is Cons!1707) Nil!1708))))

(assert (=> d!40845 (= (contains!888 Nil!1708 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!69941)))

(declare-fun b!133815 () Bool)

(declare-fun e!87162 () Bool)

(assert (=> b!133815 (= e!87163 e!87162)))

(declare-fun res!64353 () Bool)

(assert (=> b!133815 (=> res!64353 e!87162)))

(assert (=> b!133815 (= res!64353 (= (h!2312 Nil!1708) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133816 () Bool)

(assert (=> b!133816 (= e!87162 (contains!888 (t!6153 Nil!1708) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!40845 res!64354) b!133815))

(assert (= (and b!133815 (not res!64353)) b!133816))

(assert (=> d!40845 m!156277))

(assert (=> d!40845 m!156125))

(declare-fun m!158087 () Bool)

(assert (=> d!40845 m!158087))

(assert (=> b!133816 m!156125))

(declare-fun m!158089 () Bool)

(assert (=> b!133816 m!158089))

(assert (=> b!132840 d!40845))

(declare-fun d!40847 () Bool)

(assert (not d!40847))

(assert (=> b!132837 d!40847))

(declare-fun d!40849 () Bool)

(declare-fun res!64355 () Bool)

(declare-fun e!87164 () Bool)

(assert (=> d!40849 (=> res!64355 e!87164)))

(assert (=> d!40849 (= res!64355 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69182)))))

(assert (=> d!40849 (= (containsKey!174 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182) e!87164)))

(declare-fun b!133817 () Bool)

(declare-fun e!87165 () Bool)

(assert (=> b!133817 (= e!87164 e!87165)))

(declare-fun res!64356 () Bool)

(assert (=> b!133817 (=> (not res!64356) (not e!87165))))

(assert (=> b!133817 (= res!64356 (and (or (not ((_ is Cons!1706) (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (bvsle (_1!1303 (h!2311 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69182)) ((_ is Cons!1706) (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) (bvslt (_1!1303 (h!2311 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69182)))))

(declare-fun b!133818 () Bool)

(assert (=> b!133818 (= e!87165 (containsKey!174 (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!69182))))

(assert (= (and d!40849 (not res!64355)) b!133817))

(assert (= (and b!133817 res!64356) b!133818))

(declare-fun m!158091 () Bool)

(assert (=> b!133818 m!158091))

(assert (=> d!40373 d!40849))

(assert (=> b!132936 d!40691))

(declare-fun d!40851 () Bool)

(declare-fun c!24852 () Bool)

(assert (=> d!40851 (= c!24852 (and ((_ is Cons!1706) (toList!851 lt!69519)) (= (_1!1303 (h!2311 (toList!851 lt!69519))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87166 () Option!176)

(assert (=> d!40851 (= (getValueByKey!170 (toList!851 lt!69519) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87166)))

(declare-fun b!133821 () Bool)

(declare-fun e!87167 () Option!176)

(assert (=> b!133821 (= e!87167 (getValueByKey!170 (t!6152 (toList!851 lt!69519)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133820 () Bool)

(assert (=> b!133820 (= e!87166 e!87167)))

(declare-fun c!24853 () Bool)

(assert (=> b!133820 (= c!24853 (and ((_ is Cons!1706) (toList!851 lt!69519)) (not (= (_1!1303 (h!2311 (toList!851 lt!69519))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!133819 () Bool)

(assert (=> b!133819 (= e!87166 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69519)))))))

(declare-fun b!133822 () Bool)

(assert (=> b!133822 (= e!87167 None!174)))

(assert (= (and d!40851 c!24852) b!133819))

(assert (= (and d!40851 (not c!24852)) b!133820))

(assert (= (and b!133820 c!24853) b!133821))

(assert (= (and b!133820 (not c!24853)) b!133822))

(declare-fun m!158093 () Bool)

(assert (=> b!133821 m!158093))

(assert (=> b!133108 d!40851))

(assert (=> d!40375 d!40355))

(declare-fun d!40853 () Bool)

(declare-fun e!87168 () Bool)

(assert (=> d!40853 e!87168))

(declare-fun res!64357 () Bool)

(assert (=> d!40853 (=> res!64357 e!87168)))

(declare-fun lt!69943 () Bool)

(assert (=> d!40853 (= res!64357 (not lt!69943))))

(declare-fun lt!69945 () Bool)

(assert (=> d!40853 (= lt!69943 lt!69945)))

(declare-fun lt!69942 () Unit!4132)

(declare-fun e!87169 () Unit!4132)

(assert (=> d!40853 (= lt!69942 e!87169)))

(declare-fun c!24854 () Bool)

(assert (=> d!40853 (= c!24854 lt!69945)))

(assert (=> d!40853 (= lt!69945 (containsKey!174 (toList!851 lt!69170) lt!69174))))

(assert (=> d!40853 (= (contains!886 lt!69170 lt!69174) lt!69943)))

(declare-fun b!133823 () Bool)

(declare-fun lt!69944 () Unit!4132)

(assert (=> b!133823 (= e!87169 lt!69944)))

(assert (=> b!133823 (= lt!69944 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69170) lt!69174))))

(assert (=> b!133823 (isDefined!124 (getValueByKey!170 (toList!851 lt!69170) lt!69174))))

(declare-fun b!133824 () Bool)

(declare-fun Unit!4183 () Unit!4132)

(assert (=> b!133824 (= e!87169 Unit!4183)))

(declare-fun b!133825 () Bool)

(assert (=> b!133825 (= e!87168 (isDefined!124 (getValueByKey!170 (toList!851 lt!69170) lt!69174)))))

(assert (= (and d!40853 c!24854) b!133823))

(assert (= (and d!40853 (not c!24854)) b!133824))

(assert (= (and d!40853 (not res!64357)) b!133825))

(declare-fun m!158095 () Bool)

(assert (=> d!40853 m!158095))

(declare-fun m!158097 () Bool)

(assert (=> b!133823 m!158097))

(assert (=> b!133823 m!156455))

(assert (=> b!133823 m!156455))

(declare-fun m!158099 () Bool)

(assert (=> b!133823 m!158099))

(assert (=> b!133825 m!156455))

(assert (=> b!133825 m!156455))

(assert (=> b!133825 m!158099))

(assert (=> d!40375 d!40853))

(assert (=> d!40375 d!40359))

(declare-fun d!40855 () Bool)

(assert (=> d!40855 (= (apply!116 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69174) (apply!116 lt!69170 lt!69174))))

(assert (=> d!40855 true))

(declare-fun _$34!978 () Unit!4132)

(assert (=> d!40855 (= (choose!828 lt!69170 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69174) _$34!978)))

(declare-fun bs!5536 () Bool)

(assert (= bs!5536 d!40855))

(assert (=> bs!5536 m!156065))

(assert (=> bs!5536 m!156065))

(assert (=> bs!5536 m!156073))

(assert (=> bs!5536 m!156075))

(assert (=> d!40375 d!40855))

(assert (=> d!40375 d!40377))

(declare-fun d!40857 () Bool)

(assert (=> d!40857 (= (get!1480 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3191 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!132797 d!40857))

(declare-fun d!40859 () Bool)

(declare-fun e!87170 () Bool)

(assert (=> d!40859 e!87170))

(declare-fun res!64358 () Bool)

(assert (=> d!40859 (=> res!64358 e!87170)))

(declare-fun lt!69947 () Bool)

(assert (=> d!40859 (= res!64358 (not lt!69947))))

(declare-fun lt!69949 () Bool)

(assert (=> d!40859 (= lt!69947 lt!69949)))

(declare-fun lt!69946 () Unit!4132)

(declare-fun e!87171 () Unit!4132)

(assert (=> d!40859 (= lt!69946 e!87171)))

(declare-fun c!24855 () Bool)

(assert (=> d!40859 (= c!24855 lt!69949)))

(assert (=> d!40859 (= lt!69949 (containsKey!174 (toList!851 lt!69362) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40859 (= (contains!886 lt!69362 #b1000000000000000000000000000000000000000000000000000000000000000) lt!69947)))

(declare-fun b!133826 () Bool)

(declare-fun lt!69948 () Unit!4132)

(assert (=> b!133826 (= e!87171 lt!69948)))

(assert (=> b!133826 (= lt!69948 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69362) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133826 (isDefined!124 (getValueByKey!170 (toList!851 lt!69362) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133827 () Bool)

(declare-fun Unit!4184 () Unit!4132)

(assert (=> b!133827 (= e!87171 Unit!4184)))

(declare-fun b!133828 () Bool)

(assert (=> b!133828 (= e!87170 (isDefined!124 (getValueByKey!170 (toList!851 lt!69362) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40859 c!24855) b!133826))

(assert (= (and d!40859 (not c!24855)) b!133827))

(assert (= (and d!40859 (not res!64358)) b!133828))

(declare-fun m!158101 () Bool)

(assert (=> d!40859 m!158101))

(declare-fun m!158103 () Bool)

(assert (=> b!133826 m!158103))

(assert (=> b!133826 m!156933))

(assert (=> b!133826 m!156933))

(declare-fun m!158105 () Bool)

(assert (=> b!133826 m!158105))

(assert (=> b!133828 m!156933))

(assert (=> b!133828 m!156933))

(assert (=> b!133828 m!158105))

(assert (=> bm!14650 d!40859))

(declare-fun d!40861 () Bool)

(declare-fun res!64359 () Bool)

(declare-fun e!87172 () Bool)

(assert (=> d!40861 (=> res!64359 e!87172)))

(assert (=> d!40861 (= res!64359 (and ((_ is Cons!1706) (toList!851 lt!69186)) (= (_1!1303 (h!2311 (toList!851 lt!69186))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40861 (= (containsKey!174 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000) e!87172)))

(declare-fun b!133829 () Bool)

(declare-fun e!87173 () Bool)

(assert (=> b!133829 (= e!87172 e!87173)))

(declare-fun res!64360 () Bool)

(assert (=> b!133829 (=> (not res!64360) (not e!87173))))

(assert (=> b!133829 (= res!64360 (and (or (not ((_ is Cons!1706) (toList!851 lt!69186))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69186))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1706) (toList!851 lt!69186)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69186))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133830 () Bool)

(assert (=> b!133830 (= e!87173 (containsKey!174 (t!6152 (toList!851 lt!69186)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40861 (not res!64359)) b!133829))

(assert (= (and b!133829 res!64360) b!133830))

(declare-fun m!158107 () Bool)

(assert (=> b!133830 m!158107))

(assert (=> d!40339 d!40861))

(assert (=> bm!14667 d!40619))

(declare-fun d!40863 () Bool)

(declare-fun res!64361 () Bool)

(declare-fun e!87174 () Bool)

(assert (=> d!40863 (=> res!64361 e!87174)))

(assert (=> d!40863 (= res!64361 (and ((_ is Cons!1706) (toList!851 call!14583)) (= (_1!1303 (h!2311 (toList!851 call!14583))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(assert (=> d!40863 (= (containsKey!174 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!87174)))

(declare-fun b!133831 () Bool)

(declare-fun e!87175 () Bool)

(assert (=> b!133831 (= e!87174 e!87175)))

(declare-fun res!64362 () Bool)

(assert (=> b!133831 (=> (not res!64362) (not e!87175))))

(assert (=> b!133831 (= res!64362 (and (or (not ((_ is Cons!1706) (toList!851 call!14583))) (bvsle (_1!1303 (h!2311 (toList!851 call!14583))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) ((_ is Cons!1706) (toList!851 call!14583)) (bvslt (_1!1303 (h!2311 (toList!851 call!14583))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun b!133832 () Bool)

(assert (=> b!133832 (= e!87175 (containsKey!174 (t!6152 (toList!851 call!14583)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!40863 (not res!64361)) b!133831))

(assert (= (and b!133831 res!64362) b!133832))

(assert (=> b!133832 m!155841))

(declare-fun m!158109 () Bool)

(assert (=> b!133832 m!158109))

(assert (=> d!40299 d!40863))

(declare-fun d!40865 () Bool)

(assert (=> d!40865 (= (apply!116 lt!69301 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1482 (getValueByKey!170 (toList!851 lt!69301) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5537 () Bool)

(assert (= bs!5537 d!40865))

(assert (=> bs!5537 m!156043))

(declare-fun m!158111 () Bool)

(assert (=> bs!5537 m!158111))

(assert (=> bs!5537 m!158111))

(declare-fun m!158113 () Bool)

(assert (=> bs!5537 m!158113))

(assert (=> b!132906 d!40865))

(assert (=> b!132906 d!40307))

(assert (=> b!132765 d!40271))

(declare-fun d!40867 () Bool)

(assert (=> d!40867 (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69508 #b00000000000000000000000000000000)))

(declare-fun lt!69950 () Unit!4132)

(assert (=> d!40867 (= lt!69950 (choose!13 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69508 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> d!40867 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!40867 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69508 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!69950)))

(declare-fun bs!5538 () Bool)

(assert (= bs!5538 d!40867))

(assert (=> bs!5538 m!156697))

(declare-fun m!158115 () Bool)

(assert (=> bs!5538 m!158115))

(assert (=> b!133081 d!40867))

(declare-fun d!40869 () Bool)

(declare-fun res!64363 () Bool)

(declare-fun e!87176 () Bool)

(assert (=> d!40869 (=> res!64363 e!87176)))

(assert (=> d!40869 (= res!64363 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) lt!69508))))

(assert (=> d!40869 (= (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69508 #b00000000000000000000000000000000) e!87176)))

(declare-fun b!133833 () Bool)

(declare-fun e!87177 () Bool)

(assert (=> b!133833 (= e!87176 e!87177)))

(declare-fun res!64364 () Bool)

(assert (=> b!133833 (=> (not res!64364) (not e!87177))))

(assert (=> b!133833 (= res!64364 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!133834 () Bool)

(assert (=> b!133834 (= e!87177 (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69508 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40869 (not res!64363)) b!133833))

(assert (= (and b!133833 res!64364) b!133834))

(assert (=> d!40869 m!156017))

(declare-fun m!158117 () Bool)

(assert (=> b!133834 m!158117))

(assert (=> b!133081 d!40869))

(declare-fun b!133835 () Bool)

(declare-fun c!24858 () Bool)

(declare-fun lt!69953 () (_ BitVec 64))

(assert (=> b!133835 (= c!24858 (= lt!69953 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87179 () SeekEntryResult!278)

(declare-fun e!87180 () SeekEntryResult!278)

(assert (=> b!133835 (= e!87179 e!87180)))

(declare-fun b!133836 () Bool)

(declare-fun e!87178 () SeekEntryResult!278)

(assert (=> b!133836 (= e!87178 Undefined!278)))

(declare-fun b!133837 () Bool)

(declare-fun lt!69952 () SeekEntryResult!278)

(assert (=> b!133837 (= e!87180 (seekKeyOrZeroReturnVacant!0 (x!15594 lt!69952) (index!3274 lt!69952) (index!3274 lt!69952) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!133838 () Bool)

(assert (=> b!133838 (= e!87179 (Found!278 (index!3274 lt!69952)))))

(declare-fun b!133839 () Bool)

(assert (=> b!133839 (= e!87178 e!87179)))

(assert (=> b!133839 (= lt!69953 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!69952)))))

(declare-fun c!24857 () Bool)

(assert (=> b!133839 (= c!24857 (= lt!69953 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133840 () Bool)

(assert (=> b!133840 (= e!87180 (MissingZero!278 (index!3274 lt!69952)))))

(declare-fun d!40871 () Bool)

(declare-fun lt!69951 () SeekEntryResult!278)

(assert (=> d!40871 (and (or ((_ is Undefined!278) lt!69951) (not ((_ is Found!278) lt!69951)) (and (bvsge (index!3273 lt!69951) #b00000000000000000000000000000000) (bvslt (index!3273 lt!69951) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))) (or ((_ is Undefined!278) lt!69951) ((_ is Found!278) lt!69951) (not ((_ is MissingZero!278) lt!69951)) (and (bvsge (index!3272 lt!69951) #b00000000000000000000000000000000) (bvslt (index!3272 lt!69951) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))) (or ((_ is Undefined!278) lt!69951) ((_ is Found!278) lt!69951) ((_ is MissingZero!278) lt!69951) (not ((_ is MissingVacant!278) lt!69951)) (and (bvsge (index!3275 lt!69951) #b00000000000000000000000000000000) (bvslt (index!3275 lt!69951) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))) (or ((_ is Undefined!278) lt!69951) (ite ((_ is Found!278) lt!69951) (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3273 lt!69951)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!278) lt!69951) (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3272 lt!69951)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!278) lt!69951) (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3275 lt!69951)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40871 (= lt!69951 e!87178)))

(declare-fun c!24856 () Bool)

(assert (=> d!40871 (= c!24856 (and ((_ is Intermediate!278) lt!69952) (undefined!1090 lt!69952)))))

(assert (=> d!40871 (= lt!69952 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(assert (=> d!40871 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!40871 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) lt!69951)))

(assert (= (and d!40871 c!24856) b!133836))

(assert (= (and d!40871 (not c!24856)) b!133839))

(assert (= (and b!133839 c!24857) b!133838))

(assert (= (and b!133839 (not c!24857)) b!133835))

(assert (= (and b!133835 c!24858) b!133840))

(assert (= (and b!133835 (not c!24858)) b!133837))

(assert (=> b!133837 m!156349))

(declare-fun m!158119 () Bool)

(assert (=> b!133837 m!158119))

(declare-fun m!158121 () Bool)

(assert (=> b!133839 m!158121))

(assert (=> d!40871 m!155855))

(declare-fun m!158123 () Bool)

(assert (=> d!40871 m!158123))

(declare-fun m!158125 () Bool)

(assert (=> d!40871 m!158125))

(assert (=> d!40871 m!156349))

(declare-fun m!158127 () Bool)

(assert (=> d!40871 m!158127))

(declare-fun m!158129 () Bool)

(assert (=> d!40871 m!158129))

(assert (=> d!40871 m!158127))

(assert (=> d!40871 m!156349))

(declare-fun m!158131 () Bool)

(assert (=> d!40871 m!158131))

(assert (=> b!133081 d!40871))

(assert (=> b!132933 d!40691))

(assert (=> d!40379 d!40357))

(declare-fun d!40873 () Bool)

(assert (=> d!40873 (= (apply!116 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69190) (apply!116 lt!69179 lt!69190))))

(assert (=> d!40873 true))

(declare-fun _$34!979 () Unit!4132)

(assert (=> d!40873 (= (choose!828 lt!69179 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))) lt!69190) _$34!979)))

(declare-fun bs!5539 () Bool)

(assert (= bs!5539 d!40873))

(assert (=> bs!5539 m!156071))

(assert (=> bs!5539 m!156071))

(assert (=> bs!5539 m!156093))

(assert (=> bs!5539 m!156091))

(assert (=> d!40379 d!40873))

(declare-fun d!40875 () Bool)

(declare-fun e!87181 () Bool)

(assert (=> d!40875 e!87181))

(declare-fun res!64365 () Bool)

(assert (=> d!40875 (=> res!64365 e!87181)))

(declare-fun lt!69955 () Bool)

(assert (=> d!40875 (= res!64365 (not lt!69955))))

(declare-fun lt!69957 () Bool)

(assert (=> d!40875 (= lt!69955 lt!69957)))

(declare-fun lt!69954 () Unit!4132)

(declare-fun e!87182 () Unit!4132)

(assert (=> d!40875 (= lt!69954 e!87182)))

(declare-fun c!24859 () Bool)

(assert (=> d!40875 (= c!24859 lt!69957)))

(assert (=> d!40875 (= lt!69957 (containsKey!174 (toList!851 lt!69179) lt!69190))))

(assert (=> d!40875 (= (contains!886 lt!69179 lt!69190) lt!69955)))

(declare-fun b!133841 () Bool)

(declare-fun lt!69956 () Unit!4132)

(assert (=> b!133841 (= e!87182 lt!69956)))

(assert (=> b!133841 (= lt!69956 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69179) lt!69190))))

(assert (=> b!133841 (isDefined!124 (getValueByKey!170 (toList!851 lt!69179) lt!69190))))

(declare-fun b!133842 () Bool)

(declare-fun Unit!4185 () Unit!4132)

(assert (=> b!133842 (= e!87182 Unit!4185)))

(declare-fun b!133843 () Bool)

(assert (=> b!133843 (= e!87181 (isDefined!124 (getValueByKey!170 (toList!851 lt!69179) lt!69190)))))

(assert (= (and d!40875 c!24859) b!133841))

(assert (= (and d!40875 (not c!24859)) b!133842))

(assert (= (and d!40875 (not res!64365)) b!133843))

(declare-fun m!158133 () Bool)

(assert (=> d!40875 m!158133))

(declare-fun m!158135 () Bool)

(assert (=> b!133841 m!158135))

(assert (=> b!133841 m!156387))

(assert (=> b!133841 m!156387))

(declare-fun m!158137 () Bool)

(assert (=> b!133841 m!158137))

(assert (=> b!133843 m!156387))

(assert (=> b!133843 m!156387))

(assert (=> b!133843 m!158137))

(assert (=> d!40379 d!40875))

(assert (=> d!40379 d!40367))

(assert (=> d!40379 d!40369))

(declare-fun b!133844 () Bool)

(declare-fun e!87195 () Bool)

(declare-fun e!87188 () Bool)

(assert (=> b!133844 (= e!87195 e!87188)))

(declare-fun res!64370 () Bool)

(declare-fun call!14764 () Bool)

(assert (=> b!133844 (= res!64370 call!14764)))

(assert (=> b!133844 (=> (not res!64370) (not e!87188))))

(declare-fun call!14766 () ListLongMap!1671)

(declare-fun bm!14757 () Bool)

(declare-fun call!14760 () ListLongMap!1671)

(declare-fun call!14763 () ListLongMap!1671)

(declare-fun c!24865 () Bool)

(declare-fun c!24863 () Bool)

(declare-fun call!14765 () ListLongMap!1671)

(assert (=> bm!14757 (= call!14760 (+!163 (ite c!24865 call!14763 (ite c!24863 call!14766 call!14765)) (ite (or c!24865 c!24863) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1304 lt!69115))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115))))))))

(declare-fun bm!14758 () Bool)

(assert (=> bm!14758 (= call!14763 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (_2!1304 lt!69115)) (_values!2847 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115)) (extraKeys!2629 (_2!1304 lt!69115)) (zeroValue!2719 (_2!1304 lt!69115)) (minValue!2719 (_2!1304 lt!69115)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1304 lt!69115))))))

(declare-fun b!133845 () Bool)

(declare-fun e!87193 () Bool)

(assert (=> b!133845 (= e!87193 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(declare-fun b!133846 () Bool)

(declare-fun e!87190 () Bool)

(assert (=> b!133846 (= e!87190 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(declare-fun bm!14759 () Bool)

(assert (=> bm!14759 (= call!14765 call!14766)))

(declare-fun b!133847 () Bool)

(declare-fun e!87192 () ListLongMap!1671)

(declare-fun e!87194 () ListLongMap!1671)

(assert (=> b!133847 (= e!87192 e!87194)))

(assert (=> b!133847 (= c!24863 (and (not (= (bvand (extraKeys!2629 (_2!1304 lt!69115)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 (_2!1304 lt!69115)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133848 () Bool)

(declare-fun e!87185 () Bool)

(declare-fun e!87191 () Bool)

(assert (=> b!133848 (= e!87185 e!87191)))

(declare-fun res!64371 () Bool)

(assert (=> b!133848 (=> (not res!64371) (not e!87191))))

(declare-fun lt!69974 () ListLongMap!1671)

(assert (=> b!133848 (= res!64371 (contains!886 lt!69974 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(assert (=> b!133848 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(declare-fun bm!14760 () Bool)

(assert (=> bm!14760 (= call!14764 (contains!886 lt!69974 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133849 () Bool)

(assert (=> b!133849 (= e!87191 (= (apply!116 lt!69974 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (_values!2847 (_2!1304 lt!69115))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 (_2!1304 lt!69115)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133849 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (_values!2847 (_2!1304 lt!69115)))))))

(assert (=> b!133849 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(declare-fun b!133851 () Bool)

(declare-fun e!87183 () Bool)

(assert (=> b!133851 (= e!87183 (= (apply!116 lt!69974 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 (_2!1304 lt!69115))))))

(declare-fun b!133852 () Bool)

(declare-fun e!87187 () Unit!4132)

(declare-fun lt!69976 () Unit!4132)

(assert (=> b!133852 (= e!87187 lt!69976)))

(declare-fun lt!69964 () ListLongMap!1671)

(assert (=> b!133852 (= lt!69964 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (_2!1304 lt!69115)) (_values!2847 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115)) (extraKeys!2629 (_2!1304 lt!69115)) (zeroValue!2719 (_2!1304 lt!69115)) (minValue!2719 (_2!1304 lt!69115)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1304 lt!69115))))))

(declare-fun lt!69972 () (_ BitVec 64))

(assert (=> b!133852 (= lt!69972 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69970 () (_ BitVec 64))

(assert (=> b!133852 (= lt!69970 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000))))

(declare-fun lt!69979 () Unit!4132)

(assert (=> b!133852 (= lt!69979 (addStillContains!92 lt!69964 lt!69972 (zeroValue!2719 (_2!1304 lt!69115)) lt!69970))))

(assert (=> b!133852 (contains!886 (+!163 lt!69964 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115)))) lt!69970)))

(declare-fun lt!69971 () Unit!4132)

(assert (=> b!133852 (= lt!69971 lt!69979)))

(declare-fun lt!69960 () ListLongMap!1671)

(assert (=> b!133852 (= lt!69960 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (_2!1304 lt!69115)) (_values!2847 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115)) (extraKeys!2629 (_2!1304 lt!69115)) (zeroValue!2719 (_2!1304 lt!69115)) (minValue!2719 (_2!1304 lt!69115)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1304 lt!69115))))))

(declare-fun lt!69977 () (_ BitVec 64))

(assert (=> b!133852 (= lt!69977 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69965 () (_ BitVec 64))

(assert (=> b!133852 (= lt!69965 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000))))

(declare-fun lt!69966 () Unit!4132)

(assert (=> b!133852 (= lt!69966 (addApplyDifferent!92 lt!69960 lt!69977 (minValue!2719 (_2!1304 lt!69115)) lt!69965))))

(assert (=> b!133852 (= (apply!116 (+!163 lt!69960 (tuple2!2585 lt!69977 (minValue!2719 (_2!1304 lt!69115)))) lt!69965) (apply!116 lt!69960 lt!69965))))

(declare-fun lt!69975 () Unit!4132)

(assert (=> b!133852 (= lt!69975 lt!69966)))

(declare-fun lt!69958 () ListLongMap!1671)

(assert (=> b!133852 (= lt!69958 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (_2!1304 lt!69115)) (_values!2847 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115)) (extraKeys!2629 (_2!1304 lt!69115)) (zeroValue!2719 (_2!1304 lt!69115)) (minValue!2719 (_2!1304 lt!69115)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1304 lt!69115))))))

(declare-fun lt!69959 () (_ BitVec 64))

(assert (=> b!133852 (= lt!69959 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69962 () (_ BitVec 64))

(assert (=> b!133852 (= lt!69962 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000))))

(declare-fun lt!69961 () Unit!4132)

(assert (=> b!133852 (= lt!69961 (addApplyDifferent!92 lt!69958 lt!69959 (zeroValue!2719 (_2!1304 lt!69115)) lt!69962))))

(assert (=> b!133852 (= (apply!116 (+!163 lt!69958 (tuple2!2585 lt!69959 (zeroValue!2719 (_2!1304 lt!69115)))) lt!69962) (apply!116 lt!69958 lt!69962))))

(declare-fun lt!69969 () Unit!4132)

(assert (=> b!133852 (= lt!69969 lt!69961)))

(declare-fun lt!69967 () ListLongMap!1671)

(assert (=> b!133852 (= lt!69967 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (_2!1304 lt!69115)) (_values!2847 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115)) (extraKeys!2629 (_2!1304 lt!69115)) (zeroValue!2719 (_2!1304 lt!69115)) (minValue!2719 (_2!1304 lt!69115)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1304 lt!69115))))))

(declare-fun lt!69968 () (_ BitVec 64))

(assert (=> b!133852 (= lt!69968 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69978 () (_ BitVec 64))

(assert (=> b!133852 (= lt!69978 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000))))

(assert (=> b!133852 (= lt!69976 (addApplyDifferent!92 lt!69967 lt!69968 (minValue!2719 (_2!1304 lt!69115)) lt!69978))))

(assert (=> b!133852 (= (apply!116 (+!163 lt!69967 (tuple2!2585 lt!69968 (minValue!2719 (_2!1304 lt!69115)))) lt!69978) (apply!116 lt!69967 lt!69978))))

(declare-fun b!133853 () Bool)

(declare-fun e!87184 () ListLongMap!1671)

(assert (=> b!133853 (= e!87184 call!14765)))

(declare-fun b!133854 () Bool)

(declare-fun call!14761 () ListLongMap!1671)

(assert (=> b!133854 (= e!87194 call!14761)))

(declare-fun b!133855 () Bool)

(declare-fun res!64367 () Bool)

(declare-fun e!87189 () Bool)

(assert (=> b!133855 (=> (not res!64367) (not e!87189))))

(declare-fun e!87186 () Bool)

(assert (=> b!133855 (= res!64367 e!87186)))

(declare-fun c!24862 () Bool)

(assert (=> b!133855 (= c!24862 (not (= (bvand (extraKeys!2629 (_2!1304 lt!69115)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!14761 () Bool)

(assert (=> bm!14761 (= call!14766 call!14763)))

(declare-fun b!133856 () Bool)

(assert (=> b!133856 (= e!87195 (not call!14764))))

(declare-fun b!133857 () Bool)

(declare-fun c!24864 () Bool)

(assert (=> b!133857 (= c!24864 (and (not (= (bvand (extraKeys!2629 (_2!1304 lt!69115)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 (_2!1304 lt!69115)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!133857 (= e!87194 e!87184)))

(declare-fun b!133858 () Bool)

(declare-fun Unit!4186 () Unit!4132)

(assert (=> b!133858 (= e!87187 Unit!4186)))

(declare-fun b!133859 () Bool)

(assert (=> b!133859 (= e!87192 (+!163 call!14760 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115)))))))

(declare-fun bm!14762 () Bool)

(assert (=> bm!14762 (= call!14761 call!14760)))

(declare-fun b!133860 () Bool)

(assert (=> b!133860 (= e!87184 call!14761)))

(declare-fun b!133861 () Bool)

(declare-fun call!14762 () Bool)

(assert (=> b!133861 (= e!87186 (not call!14762))))

(declare-fun b!133862 () Bool)

(assert (=> b!133862 (= e!87189 e!87195)))

(declare-fun c!24861 () Bool)

(assert (=> b!133862 (= c!24861 (not (= (bvand (extraKeys!2629 (_2!1304 lt!69115)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14763 () Bool)

(assert (=> bm!14763 (= call!14762 (contains!886 lt!69974 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133850 () Bool)

(assert (=> b!133850 (= e!87186 e!87183)))

(declare-fun res!64369 () Bool)

(assert (=> b!133850 (= res!64369 call!14762)))

(assert (=> b!133850 (=> (not res!64369) (not e!87183))))

(declare-fun d!40877 () Bool)

(assert (=> d!40877 e!87189))

(declare-fun res!64374 () Bool)

(assert (=> d!40877 (=> (not res!64374) (not e!87189))))

(assert (=> d!40877 (= res!64374 (or (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))))

(declare-fun lt!69963 () ListLongMap!1671)

(assert (=> d!40877 (= lt!69974 lt!69963)))

(declare-fun lt!69973 () Unit!4132)

(assert (=> d!40877 (= lt!69973 e!87187)))

(declare-fun c!24860 () Bool)

(assert (=> d!40877 (= c!24860 e!87190)))

(declare-fun res!64373 () Bool)

(assert (=> d!40877 (=> (not res!64373) (not e!87190))))

(assert (=> d!40877 (= res!64373 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(assert (=> d!40877 (= lt!69963 e!87192)))

(assert (=> d!40877 (= c!24865 (and (not (= (bvand (extraKeys!2629 (_2!1304 lt!69115)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 (_2!1304 lt!69115)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40877 (validMask!0 (mask!7163 (_2!1304 lt!69115)))))

(assert (=> d!40877 (= (getCurrentListMap!519 (_keys!4612 (_2!1304 lt!69115)) (_values!2847 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115)) (extraKeys!2629 (_2!1304 lt!69115)) (zeroValue!2719 (_2!1304 lt!69115)) (minValue!2719 (_2!1304 lt!69115)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1304 lt!69115))) lt!69974)))

(declare-fun b!133863 () Bool)

(declare-fun res!64366 () Bool)

(assert (=> b!133863 (=> (not res!64366) (not e!87189))))

(assert (=> b!133863 (= res!64366 e!87185)))

(declare-fun res!64372 () Bool)

(assert (=> b!133863 (=> res!64372 e!87185)))

(assert (=> b!133863 (= res!64372 (not e!87193))))

(declare-fun res!64368 () Bool)

(assert (=> b!133863 (=> (not res!64368) (not e!87193))))

(assert (=> b!133863 (= res!64368 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(declare-fun b!133864 () Bool)

(assert (=> b!133864 (= e!87188 (= (apply!116 lt!69974 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 (_2!1304 lt!69115))))))

(assert (= (and d!40877 c!24865) b!133859))

(assert (= (and d!40877 (not c!24865)) b!133847))

(assert (= (and b!133847 c!24863) b!133854))

(assert (= (and b!133847 (not c!24863)) b!133857))

(assert (= (and b!133857 c!24864) b!133860))

(assert (= (and b!133857 (not c!24864)) b!133853))

(assert (= (or b!133860 b!133853) bm!14759))

(assert (= (or b!133854 bm!14759) bm!14761))

(assert (= (or b!133854 b!133860) bm!14762))

(assert (= (or b!133859 bm!14761) bm!14758))

(assert (= (or b!133859 bm!14762) bm!14757))

(assert (= (and d!40877 res!64373) b!133846))

(assert (= (and d!40877 c!24860) b!133852))

(assert (= (and d!40877 (not c!24860)) b!133858))

(assert (= (and d!40877 res!64374) b!133863))

(assert (= (and b!133863 res!64368) b!133845))

(assert (= (and b!133863 (not res!64372)) b!133848))

(assert (= (and b!133848 res!64371) b!133849))

(assert (= (and b!133863 res!64366) b!133855))

(assert (= (and b!133855 c!24862) b!133850))

(assert (= (and b!133855 (not c!24862)) b!133861))

(assert (= (and b!133850 res!64369) b!133851))

(assert (= (or b!133850 b!133861) bm!14763))

(assert (= (and b!133855 res!64367) b!133862))

(assert (= (and b!133862 c!24861) b!133844))

(assert (= (and b!133862 (not c!24861)) b!133856))

(assert (= (and b!133844 res!64370) b!133864))

(assert (= (or b!133844 b!133856) bm!14760))

(declare-fun b_lambda!5949 () Bool)

(assert (=> (not b_lambda!5949) (not b!133849)))

(declare-fun t!6168 () Bool)

(declare-fun tb!2421 () Bool)

(assert (=> (and b!132380 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 (_2!1304 lt!69115))) t!6168) tb!2421))

(declare-fun result!3997 () Bool)

(assert (=> tb!2421 (= result!3997 tp_is_empty!2875)))

(assert (=> b!133849 t!6168))

(declare-fun b_and!8289 () Bool)

(assert (= b_and!8285 (and (=> t!6168 result!3997) b_and!8289)))

(declare-fun t!6170 () Bool)

(declare-fun tb!2423 () Bool)

(assert (=> (and b!132384 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (_2!1304 lt!69115))) t!6170) tb!2423))

(declare-fun result!3999 () Bool)

(assert (= result!3999 result!3997))

(assert (=> b!133849 t!6170))

(declare-fun b_and!8291 () Bool)

(assert (= b_and!8287 (and (=> t!6170 result!3999) b_and!8291)))

(assert (=> b!133848 m!156913))

(assert (=> b!133848 m!156913))

(declare-fun m!158139 () Bool)

(assert (=> b!133848 m!158139))

(declare-fun m!158141 () Bool)

(assert (=> bm!14758 m!158141))

(declare-fun m!158143 () Bool)

(assert (=> bm!14757 m!158143))

(declare-fun m!158145 () Bool)

(assert (=> b!133849 m!158145))

(declare-fun m!158147 () Bool)

(assert (=> b!133849 m!158147))

(declare-fun m!158149 () Bool)

(assert (=> b!133849 m!158149))

(assert (=> b!133849 m!158147))

(assert (=> b!133849 m!156913))

(assert (=> b!133849 m!158145))

(assert (=> b!133849 m!156913))

(declare-fun m!158151 () Bool)

(assert (=> b!133849 m!158151))

(assert (=> b!133845 m!156913))

(assert (=> b!133845 m!156913))

(assert (=> b!133845 m!156915))

(assert (=> b!133846 m!156913))

(assert (=> b!133846 m!156913))

(assert (=> b!133846 m!156915))

(declare-fun m!158153 () Bool)

(assert (=> b!133851 m!158153))

(declare-fun m!158155 () Bool)

(assert (=> b!133859 m!158155))

(declare-fun m!158157 () Bool)

(assert (=> bm!14760 m!158157))

(declare-fun m!158159 () Bool)

(assert (=> b!133852 m!158159))

(declare-fun m!158161 () Bool)

(assert (=> b!133852 m!158161))

(declare-fun m!158163 () Bool)

(assert (=> b!133852 m!158163))

(declare-fun m!158165 () Bool)

(assert (=> b!133852 m!158165))

(assert (=> b!133852 m!158159))

(declare-fun m!158167 () Bool)

(assert (=> b!133852 m!158167))

(declare-fun m!158169 () Bool)

(assert (=> b!133852 m!158169))

(declare-fun m!158171 () Bool)

(assert (=> b!133852 m!158171))

(declare-fun m!158173 () Bool)

(assert (=> b!133852 m!158173))

(assert (=> b!133852 m!158163))

(declare-fun m!158175 () Bool)

(assert (=> b!133852 m!158175))

(declare-fun m!158177 () Bool)

(assert (=> b!133852 m!158177))

(declare-fun m!158179 () Bool)

(assert (=> b!133852 m!158179))

(declare-fun m!158181 () Bool)

(assert (=> b!133852 m!158181))

(declare-fun m!158183 () Bool)

(assert (=> b!133852 m!158183))

(assert (=> b!133852 m!158171))

(assert (=> b!133852 m!156913))

(assert (=> b!133852 m!158141))

(declare-fun m!158185 () Bool)

(assert (=> b!133852 m!158185))

(assert (=> b!133852 m!158165))

(declare-fun m!158187 () Bool)

(assert (=> b!133852 m!158187))

(declare-fun m!158189 () Bool)

(assert (=> b!133864 m!158189))

(declare-fun m!158191 () Bool)

(assert (=> bm!14763 m!158191))

(assert (=> d!40877 m!156961))

(assert (=> d!40325 d!40877))

(declare-fun d!40879 () Bool)

(assert (=> d!40879 (= (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69177)) (v!3198 (getValueByKey!170 (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69177)))))

(assert (=> d!40353 d!40879))

(declare-fun d!40881 () Bool)

(declare-fun c!24866 () Bool)

(assert (=> d!40881 (= c!24866 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69177)))))

(declare-fun e!87196 () Option!176)

(assert (=> d!40881 (= (getValueByKey!170 (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69177) e!87196)))

(declare-fun e!87197 () Option!176)

(declare-fun b!133867 () Bool)

(assert (=> b!133867 (= e!87197 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!69177))))

(declare-fun b!133866 () Bool)

(assert (=> b!133866 (= e!87196 e!87197)))

(declare-fun c!24867 () Bool)

(assert (=> b!133866 (= c!24867 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69177))))))

(declare-fun b!133865 () Bool)

(assert (=> b!133865 (= e!87196 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))))

(declare-fun b!133868 () Bool)

(assert (=> b!133868 (= e!87197 None!174)))

(assert (= (and d!40881 c!24866) b!133865))

(assert (= (and d!40881 (not c!24866)) b!133866))

(assert (= (and b!133866 c!24867) b!133867))

(assert (= (and b!133866 (not c!24867)) b!133868))

(declare-fun m!158193 () Bool)

(assert (=> b!133867 m!158193))

(assert (=> d!40353 d!40881))

(assert (=> b!132964 d!40519))

(declare-fun d!40883 () Bool)

(declare-fun e!87198 () Bool)

(assert (=> d!40883 e!87198))

(declare-fun res!64375 () Bool)

(assert (=> d!40883 (=> res!64375 e!87198)))

(declare-fun lt!69981 () Bool)

(assert (=> d!40883 (= res!64375 (not lt!69981))))

(declare-fun lt!69983 () Bool)

(assert (=> d!40883 (= lt!69981 lt!69983)))

(declare-fun lt!69980 () Unit!4132)

(declare-fun e!87199 () Unit!4132)

(assert (=> d!40883 (= lt!69980 e!87199)))

(declare-fun c!24868 () Bool)

(assert (=> d!40883 (= c!24868 lt!69983)))

(assert (=> d!40883 (= lt!69983 (containsKey!174 (toList!851 lt!69362) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40883 (= (contains!886 lt!69362 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69981)))

(declare-fun b!133869 () Bool)

(declare-fun lt!69982 () Unit!4132)

(assert (=> b!133869 (= e!87199 lt!69982)))

(assert (=> b!133869 (= lt!69982 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69362) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133869 (isDefined!124 (getValueByKey!170 (toList!851 lt!69362) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133870 () Bool)

(declare-fun Unit!4187 () Unit!4132)

(assert (=> b!133870 (= e!87199 Unit!4187)))

(declare-fun b!133871 () Bool)

(assert (=> b!133871 (= e!87198 (isDefined!124 (getValueByKey!170 (toList!851 lt!69362) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40883 c!24868) b!133869))

(assert (= (and d!40883 (not c!24868)) b!133870))

(assert (= (and d!40883 (not res!64375)) b!133871))

(declare-fun m!158195 () Bool)

(assert (=> d!40883 m!158195))

(declare-fun m!158197 () Bool)

(assert (=> b!133869 m!158197))

(assert (=> b!133869 m!156839))

(assert (=> b!133869 m!156839))

(declare-fun m!158199 () Bool)

(assert (=> b!133869 m!158199))

(assert (=> b!133871 m!156839))

(assert (=> b!133871 m!156839))

(assert (=> b!133871 m!158199))

(assert (=> bm!14653 d!40883))

(declare-fun d!40885 () Bool)

(declare-fun lt!69984 () Bool)

(assert (=> d!40885 (= lt!69984 (select (content!133 (toList!851 lt!69327)) (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun e!87201 () Bool)

(assert (=> d!40885 (= lt!69984 e!87201)))

(declare-fun res!64376 () Bool)

(assert (=> d!40885 (=> (not res!64376) (not e!87201))))

(assert (=> d!40885 (= res!64376 ((_ is Cons!1706) (toList!851 lt!69327)))))

(assert (=> d!40885 (= (contains!889 (toList!851 lt!69327) (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69984)))

(declare-fun b!133872 () Bool)

(declare-fun e!87200 () Bool)

(assert (=> b!133872 (= e!87201 e!87200)))

(declare-fun res!64377 () Bool)

(assert (=> b!133872 (=> res!64377 e!87200)))

(assert (=> b!133872 (= res!64377 (= (h!2311 (toList!851 lt!69327)) (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!133873 () Bool)

(assert (=> b!133873 (= e!87200 (contains!889 (t!6152 (toList!851 lt!69327)) (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!40885 res!64376) b!133872))

(assert (= (and b!133872 (not res!64377)) b!133873))

(declare-fun m!158201 () Bool)

(assert (=> d!40885 m!158201))

(declare-fun m!158203 () Bool)

(assert (=> d!40885 m!158203))

(declare-fun m!158205 () Bool)

(assert (=> b!133873 m!158205))

(assert (=> b!132951 d!40885))

(declare-fun d!40887 () Bool)

(declare-fun e!87202 () Bool)

(assert (=> d!40887 e!87202))

(declare-fun res!64378 () Bool)

(assert (=> d!40887 (=> res!64378 e!87202)))

(declare-fun lt!69986 () Bool)

(assert (=> d!40887 (= res!64378 (not lt!69986))))

(declare-fun lt!69988 () Bool)

(assert (=> d!40887 (= lt!69986 lt!69988)))

(declare-fun lt!69985 () Unit!4132)

(declare-fun e!87203 () Unit!4132)

(assert (=> d!40887 (= lt!69985 e!87203)))

(declare-fun c!24869 () Bool)

(assert (=> d!40887 (= c!24869 lt!69988)))

(assert (=> d!40887 (= lt!69988 (containsKey!174 (toList!851 lt!69327) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!40887 (= (contains!886 lt!69327 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69986)))

(declare-fun b!133874 () Bool)

(declare-fun lt!69987 () Unit!4132)

(assert (=> b!133874 (= e!87203 lt!69987)))

(assert (=> b!133874 (= lt!69987 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69327) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> b!133874 (isDefined!124 (getValueByKey!170 (toList!851 lt!69327) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133875 () Bool)

(declare-fun Unit!4188 () Unit!4132)

(assert (=> b!133875 (= e!87203 Unit!4188)))

(declare-fun b!133876 () Bool)

(assert (=> b!133876 (= e!87202 (isDefined!124 (getValueByKey!170 (toList!851 lt!69327) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!40887 c!24869) b!133874))

(assert (= (and d!40887 (not c!24869)) b!133875))

(assert (= (and d!40887 (not res!64378)) b!133876))

(declare-fun m!158207 () Bool)

(assert (=> d!40887 m!158207))

(declare-fun m!158209 () Bool)

(assert (=> b!133874 m!158209))

(assert (=> b!133874 m!156411))

(assert (=> b!133874 m!156411))

(declare-fun m!158211 () Bool)

(assert (=> b!133874 m!158211))

(assert (=> b!133876 m!156411))

(assert (=> b!133876 m!156411))

(assert (=> b!133876 m!158211))

(assert (=> d!40365 d!40887))

(declare-fun d!40889 () Bool)

(declare-fun c!24870 () Bool)

(assert (=> d!40889 (= c!24870 (and ((_ is Cons!1706) lt!69325) (= (_1!1303 (h!2311 lt!69325)) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87204 () Option!176)

(assert (=> d!40889 (= (getValueByKey!170 lt!69325 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87204)))

(declare-fun e!87205 () Option!176)

(declare-fun b!133879 () Bool)

(assert (=> b!133879 (= e!87205 (getValueByKey!170 (t!6152 lt!69325) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133878 () Bool)

(assert (=> b!133878 (= e!87204 e!87205)))

(declare-fun c!24871 () Bool)

(assert (=> b!133878 (= c!24871 (and ((_ is Cons!1706) lt!69325) (not (= (_1!1303 (h!2311 lt!69325)) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!133877 () Bool)

(assert (=> b!133877 (= e!87204 (Some!175 (_2!1303 (h!2311 lt!69325))))))

(declare-fun b!133880 () Bool)

(assert (=> b!133880 (= e!87205 None!174)))

(assert (= (and d!40889 c!24870) b!133877))

(assert (= (and d!40889 (not c!24870)) b!133878))

(assert (= (and b!133878 c!24871) b!133879))

(assert (= (and b!133878 (not c!24871)) b!133880))

(declare-fun m!158213 () Bool)

(assert (=> b!133879 m!158213))

(assert (=> d!40365 d!40889))

(declare-fun d!40891 () Bool)

(assert (=> d!40891 (= (getValueByKey!170 lt!69325 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun lt!69989 () Unit!4132)

(assert (=> d!40891 (= lt!69989 (choose!834 lt!69325 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun e!87206 () Bool)

(assert (=> d!40891 e!87206))

(declare-fun res!64379 () Bool)

(assert (=> d!40891 (=> (not res!64379) (not e!87206))))

(assert (=> d!40891 (= res!64379 (isStrictlySorted!317 lt!69325))))

(assert (=> d!40891 (= (lemmaContainsTupThenGetReturnValue!88 lt!69325 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69989)))

(declare-fun b!133881 () Bool)

(declare-fun res!64380 () Bool)

(assert (=> b!133881 (=> (not res!64380) (not e!87206))))

(assert (=> b!133881 (= res!64380 (containsKey!174 lt!69325 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133882 () Bool)

(assert (=> b!133882 (= e!87206 (contains!889 lt!69325 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!40891 res!64379) b!133881))

(assert (= (and b!133881 res!64380) b!133882))

(assert (=> d!40891 m!156405))

(declare-fun m!158215 () Bool)

(assert (=> d!40891 m!158215))

(declare-fun m!158217 () Bool)

(assert (=> d!40891 m!158217))

(declare-fun m!158219 () Bool)

(assert (=> b!133881 m!158219))

(declare-fun m!158221 () Bool)

(assert (=> b!133882 m!158221))

(assert (=> d!40365 d!40891))

(declare-fun e!87211 () List!1710)

(declare-fun b!133883 () Bool)

(assert (=> b!133883 (= e!87211 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69172)) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133884 () Bool)

(declare-fun e!87210 () List!1710)

(declare-fun call!14769 () List!1710)

(assert (=> b!133884 (= e!87210 call!14769)))

(declare-fun b!133885 () Bool)

(declare-fun res!64382 () Bool)

(declare-fun e!87208 () Bool)

(assert (=> b!133885 (=> (not res!64382) (not e!87208))))

(declare-fun lt!69990 () List!1710)

(assert (=> b!133885 (= res!64382 (containsKey!174 lt!69990 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun c!24873 () Bool)

(declare-fun bm!14764 () Bool)

(assert (=> bm!14764 (= call!14769 ($colon$colon!91 e!87211 (ite c!24873 (h!2311 (toList!851 lt!69172)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun c!24874 () Bool)

(assert (=> bm!14764 (= c!24874 c!24873)))

(declare-fun c!24875 () Bool)

(declare-fun b!133886 () Bool)

(declare-fun c!24872 () Bool)

(assert (=> b!133886 (= e!87211 (ite c!24872 (t!6152 (toList!851 lt!69172)) (ite c!24875 (Cons!1706 (h!2311 (toList!851 lt!69172)) (t!6152 (toList!851 lt!69172))) Nil!1707)))))

(declare-fun d!40893 () Bool)

(assert (=> d!40893 e!87208))

(declare-fun res!64381 () Bool)

(assert (=> d!40893 (=> (not res!64381) (not e!87208))))

(assert (=> d!40893 (= res!64381 (isStrictlySorted!317 lt!69990))))

(assert (=> d!40893 (= lt!69990 e!87210)))

(assert (=> d!40893 (= c!24873 (and ((_ is Cons!1706) (toList!851 lt!69172)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69172))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!40893 (isStrictlySorted!317 (toList!851 lt!69172))))

(assert (=> d!40893 (= (insertStrictlySorted!91 (toList!851 lt!69172) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69990)))

(declare-fun b!133887 () Bool)

(declare-fun e!87207 () List!1710)

(assert (=> b!133887 (= e!87210 e!87207)))

(assert (=> b!133887 (= c!24872 (and ((_ is Cons!1706) (toList!851 lt!69172)) (= (_1!1303 (h!2311 (toList!851 lt!69172))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!133888 () Bool)

(declare-fun e!87209 () List!1710)

(declare-fun call!14767 () List!1710)

(assert (=> b!133888 (= e!87209 call!14767)))

(declare-fun b!133889 () Bool)

(declare-fun call!14768 () List!1710)

(assert (=> b!133889 (= e!87207 call!14768)))

(declare-fun b!133890 () Bool)

(assert (=> b!133890 (= e!87208 (contains!889 lt!69990 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun bm!14765 () Bool)

(assert (=> bm!14765 (= call!14768 call!14769)))

(declare-fun bm!14766 () Bool)

(assert (=> bm!14766 (= call!14767 call!14768)))

(declare-fun b!133891 () Bool)

(assert (=> b!133891 (= c!24875 (and ((_ is Cons!1706) (toList!851 lt!69172)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69172))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> b!133891 (= e!87207 e!87209)))

(declare-fun b!133892 () Bool)

(assert (=> b!133892 (= e!87209 call!14767)))

(assert (= (and d!40893 c!24873) b!133884))

(assert (= (and d!40893 (not c!24873)) b!133887))

(assert (= (and b!133887 c!24872) b!133889))

(assert (= (and b!133887 (not c!24872)) b!133891))

(assert (= (and b!133891 c!24875) b!133892))

(assert (= (and b!133891 (not c!24875)) b!133888))

(assert (= (or b!133892 b!133888) bm!14766))

(assert (= (or b!133889 bm!14766) bm!14765))

(assert (= (or b!133884 bm!14765) bm!14764))

(assert (= (and bm!14764 c!24874) b!133883))

(assert (= (and bm!14764 (not c!24874)) b!133886))

(assert (= (and d!40893 res!64381) b!133885))

(assert (= (and b!133885 res!64382) b!133890))

(declare-fun m!158223 () Bool)

(assert (=> b!133890 m!158223))

(declare-fun m!158225 () Bool)

(assert (=> b!133885 m!158225))

(declare-fun m!158227 () Bool)

(assert (=> b!133883 m!158227))

(declare-fun m!158229 () Bool)

(assert (=> d!40893 m!158229))

(declare-fun m!158231 () Bool)

(assert (=> d!40893 m!158231))

(declare-fun m!158233 () Bool)

(assert (=> bm!14764 m!158233))

(assert (=> d!40365 d!40893))

(assert (=> b!132913 d!40337))

(assert (=> b!133075 d!40519))

(declare-fun d!40895 () Bool)

(declare-fun e!87212 () Bool)

(assert (=> d!40895 e!87212))

(declare-fun res!64383 () Bool)

(assert (=> d!40895 (=> res!64383 e!87212)))

(declare-fun lt!69992 () Bool)

(assert (=> d!40895 (= res!64383 (not lt!69992))))

(declare-fun lt!69994 () Bool)

(assert (=> d!40895 (= lt!69992 lt!69994)))

(declare-fun lt!69991 () Unit!4132)

(declare-fun e!87213 () Unit!4132)

(assert (=> d!40895 (= lt!69991 e!87213)))

(declare-fun c!24876 () Bool)

(assert (=> d!40895 (= c!24876 lt!69994)))

(assert (=> d!40895 (= lt!69994 (containsKey!174 (toList!851 lt!69301) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!40895 (= (contains!886 lt!69301 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!69992)))

(declare-fun b!133893 () Bool)

(declare-fun lt!69993 () Unit!4132)

(assert (=> b!133893 (= e!87213 lt!69993)))

(assert (=> b!133893 (= lt!69993 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69301) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!133893 (isDefined!124 (getValueByKey!170 (toList!851 lt!69301) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!133894 () Bool)

(declare-fun Unit!4189 () Unit!4132)

(assert (=> b!133894 (= e!87213 Unit!4189)))

(declare-fun b!133895 () Bool)

(assert (=> b!133895 (= e!87212 (isDefined!124 (getValueByKey!170 (toList!851 lt!69301) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!40895 c!24876) b!133893))

(assert (= (and d!40895 (not c!24876)) b!133894))

(assert (= (and d!40895 (not res!64383)) b!133895))

(assert (=> d!40895 m!156043))

(declare-fun m!158235 () Bool)

(assert (=> d!40895 m!158235))

(assert (=> b!133893 m!156043))

(declare-fun m!158237 () Bool)

(assert (=> b!133893 m!158237))

(assert (=> b!133893 m!156043))

(assert (=> b!133893 m!158111))

(assert (=> b!133893 m!158111))

(declare-fun m!158239 () Bool)

(assert (=> b!133893 m!158239))

(assert (=> b!133895 m!156043))

(assert (=> b!133895 m!158111))

(assert (=> b!133895 m!158111))

(assert (=> b!133895 m!158239))

(assert (=> b!132917 d!40895))

(declare-fun d!40897 () Bool)

(declare-fun res!64384 () Bool)

(declare-fun e!87214 () Bool)

(assert (=> d!40897 (=> res!64384 e!87214)))

(assert (=> d!40897 (= res!64384 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!69123))))

(assert (=> d!40897 (= (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69123 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!87214)))

(declare-fun b!133896 () Bool)

(declare-fun e!87215 () Bool)

(assert (=> b!133896 (= e!87214 e!87215)))

(declare-fun res!64385 () Bool)

(assert (=> b!133896 (=> (not res!64385) (not e!87215))))

(assert (=> b!133896 (= res!64385 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!133897 () Bool)

(assert (=> b!133897 (= e!87215 (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69123 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!40897 (not res!64384)) b!133896))

(assert (= (and b!133896 res!64385) b!133897))

(assert (=> d!40897 m!156349))

(declare-fun m!158241 () Bool)

(assert (=> b!133897 m!158241))

(assert (=> b!132848 d!40897))

(declare-fun d!40899 () Bool)

(assert (=> d!40899 (= (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69174)) (v!3198 (getValueByKey!170 (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69174)))))

(assert (=> d!40359 d!40899))

(declare-fun c!24877 () Bool)

(declare-fun d!40901 () Bool)

(assert (=> d!40901 (= c!24877 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69174)))))

(declare-fun e!87216 () Option!176)

(assert (=> d!40901 (= (getValueByKey!170 (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69174) e!87216)))

(declare-fun b!133900 () Bool)

(declare-fun e!87217 () Option!176)

(assert (=> b!133900 (= e!87217 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!69174))))

(declare-fun b!133899 () Bool)

(assert (=> b!133899 (= e!87216 e!87217)))

(declare-fun c!24878 () Bool)

(assert (=> b!133899 (= c!24878 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69174))))))

(declare-fun b!133898 () Bool)

(assert (=> b!133898 (= e!87216 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))))

(declare-fun b!133901 () Bool)

(assert (=> b!133901 (= e!87217 None!174)))

(assert (= (and d!40901 c!24877) b!133898))

(assert (= (and d!40901 (not c!24877)) b!133899))

(assert (= (and b!133899 c!24878) b!133900))

(assert (= (and b!133899 (not c!24878)) b!133901))

(declare-fun m!158243 () Bool)

(assert (=> b!133900 m!158243))

(assert (=> d!40359 d!40901))

(assert (=> b!133038 d!40415))

(declare-fun lt!69995 () Bool)

(declare-fun d!40903 () Bool)

(assert (=> d!40903 (= lt!69995 (select (content!133 (toList!851 lt!69320)) (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun e!87219 () Bool)

(assert (=> d!40903 (= lt!69995 e!87219)))

(declare-fun res!64386 () Bool)

(assert (=> d!40903 (=> (not res!64386) (not e!87219))))

(assert (=> d!40903 (= res!64386 ((_ is Cons!1706) (toList!851 lt!69320)))))

(assert (=> d!40903 (= (contains!889 (toList!851 lt!69320) (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!69995)))

(declare-fun b!133902 () Bool)

(declare-fun e!87218 () Bool)

(assert (=> b!133902 (= e!87219 e!87218)))

(declare-fun res!64387 () Bool)

(assert (=> b!133902 (=> res!64387 e!87218)))

(assert (=> b!133902 (= res!64387 (= (h!2311 (toList!851 lt!69320)) (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!133903 () Bool)

(assert (=> b!133903 (= e!87218 (contains!889 (t!6152 (toList!851 lt!69320)) (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!40903 res!64386) b!133902))

(assert (= (and b!133902 (not res!64387)) b!133903))

(declare-fun m!158245 () Bool)

(assert (=> d!40903 m!158245))

(declare-fun m!158247 () Bool)

(assert (=> d!40903 m!158247))

(declare-fun m!158249 () Bool)

(assert (=> b!133903 m!158249))

(assert (=> b!132945 d!40903))

(declare-fun d!40905 () Bool)

(declare-fun e!87220 () Bool)

(assert (=> d!40905 e!87220))

(declare-fun res!64389 () Bool)

(assert (=> d!40905 (=> (not res!64389) (not e!87220))))

(declare-fun lt!69998 () ListLongMap!1671)

(assert (=> d!40905 (= res!64389 (contains!886 lt!69998 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!69996 () List!1710)

(assert (=> d!40905 (= lt!69998 (ListLongMap!1672 lt!69996))))

(declare-fun lt!69999 () Unit!4132)

(declare-fun lt!69997 () Unit!4132)

(assert (=> d!40905 (= lt!69999 lt!69997)))

(assert (=> d!40905 (= (getValueByKey!170 lt!69996 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!40905 (= lt!69997 (lemmaContainsTupThenGetReturnValue!88 lt!69996 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!40905 (= lt!69996 (insertStrictlySorted!91 (toList!851 call!14650) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!40905 (= (+!163 call!14650 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!69998)))

(declare-fun b!133904 () Bool)

(declare-fun res!64388 () Bool)

(assert (=> b!133904 (=> (not res!64388) (not e!87220))))

(assert (=> b!133904 (= res!64388 (= (getValueByKey!170 (toList!851 lt!69998) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!133905 () Bool)

(assert (=> b!133905 (= e!87220 (contains!889 (toList!851 lt!69998) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!40905 res!64389) b!133904))

(assert (= (and b!133904 res!64388) b!133905))

(declare-fun m!158251 () Bool)

(assert (=> d!40905 m!158251))

(declare-fun m!158253 () Bool)

(assert (=> d!40905 m!158253))

(declare-fun m!158255 () Bool)

(assert (=> d!40905 m!158255))

(declare-fun m!158257 () Bool)

(assert (=> d!40905 m!158257))

(declare-fun m!158259 () Bool)

(assert (=> b!133904 m!158259))

(declare-fun m!158261 () Bool)

(assert (=> b!133905 m!158261))

(assert (=> b!132977 d!40905))

(declare-fun d!40907 () Bool)

(assert (=> d!40907 (= (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69190)) (v!3198 (getValueByKey!170 (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69190)))))

(assert (=> d!40369 d!40907))

(declare-fun d!40909 () Bool)

(declare-fun c!24879 () Bool)

(assert (=> d!40909 (= c!24879 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69190)))))

(declare-fun e!87221 () Option!176)

(assert (=> d!40909 (= (getValueByKey!170 (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69190) e!87221)))

(declare-fun b!133908 () Bool)

(declare-fun e!87222 () Option!176)

(assert (=> b!133908 (= e!87222 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!69190))))

(declare-fun b!133907 () Bool)

(assert (=> b!133907 (= e!87221 e!87222)))

(declare-fun c!24880 () Bool)

(assert (=> b!133907 (= c!24880 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69190))))))

(declare-fun b!133906 () Bool)

(assert (=> b!133906 (= e!87221 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))))

(declare-fun b!133909 () Bool)

(assert (=> b!133909 (= e!87222 None!174)))

(assert (= (and d!40909 c!24879) b!133906))

(assert (= (and d!40909 (not c!24879)) b!133907))

(assert (= (and b!133907 c!24880) b!133908))

(assert (= (and b!133907 (not c!24880)) b!133909))

(declare-fun m!158263 () Bool)

(assert (=> b!133908 m!158263))

(assert (=> d!40369 d!40909))

(declare-fun d!40911 () Bool)

(declare-fun isEmpty!415 (List!1710) Bool)

(assert (=> d!40911 (= (isEmpty!414 lt!69301) (isEmpty!415 (toList!851 lt!69301)))))

(declare-fun bs!5540 () Bool)

(assert (= bs!5540 d!40911))

(declare-fun m!158265 () Bool)

(assert (=> bs!5540 m!158265))

(assert (=> b!132909 d!40911))

(assert (=> bm!14633 d!40717))

(assert (=> bm!14626 d!40733))

(assert (=> bm!14664 d!40387))

(declare-fun d!40913 () Bool)

(assert (=> d!40913 (= (inRange!0 (index!3273 lt!69372) (mask!7163 newMap!16)) (and (bvsge (index!3273 lt!69372) #b00000000000000000000000000000000) (bvslt (index!3273 lt!69372) (bvadd (mask!7163 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!132987 d!40913))

(declare-fun d!40915 () Bool)

(assert (=> d!40915 (= (apply!116 lt!69346 lt!69350) (get!1482 (getValueByKey!170 (toList!851 lt!69346) lt!69350)))))

(declare-fun bs!5541 () Bool)

(assert (= bs!5541 d!40915))

(declare-fun m!158267 () Bool)

(assert (=> bs!5541 m!158267))

(assert (=> bs!5541 m!158267))

(declare-fun m!158269 () Bool)

(assert (=> bs!5541 m!158269))

(assert (=> b!132970 d!40915))

(declare-fun d!40917 () Bool)

(declare-fun e!87223 () Bool)

(assert (=> d!40917 e!87223))

(declare-fun res!64391 () Bool)

(assert (=> d!40917 (=> (not res!64391) (not e!87223))))

(declare-fun lt!70002 () ListLongMap!1671)

(assert (=> d!40917 (= res!64391 (contains!886 lt!70002 (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))

(declare-fun lt!70000 () List!1710)

(assert (=> d!40917 (= lt!70002 (ListLongMap!1672 lt!70000))))

(declare-fun lt!70003 () Unit!4132)

(declare-fun lt!70001 () Unit!4132)

(assert (=> d!40917 (= lt!70003 lt!70001)))

(assert (=> d!40917 (= (getValueByKey!170 lt!70000 (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))

(assert (=> d!40917 (= lt!70001 (lemmaContainsTupThenGetReturnValue!88 lt!70000 (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))

(assert (=> d!40917 (= lt!70000 (insertStrictlySorted!91 (toList!851 lt!69355) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))

(assert (=> d!40917 (= (+!163 lt!69355 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))) lt!70002)))

(declare-fun b!133910 () Bool)

(declare-fun res!64390 () Bool)

(assert (=> b!133910 (=> (not res!64390) (not e!87223))))

(assert (=> b!133910 (= res!64390 (= (getValueByKey!170 (toList!851 lt!70002) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))))))

(declare-fun b!133911 () Bool)

(assert (=> b!133911 (= e!87223 (contains!889 (toList!851 lt!70002) (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))))

(assert (= (and d!40917 res!64391) b!133910))

(assert (= (and b!133910 res!64390) b!133911))

(declare-fun m!158271 () Bool)

(assert (=> d!40917 m!158271))

(declare-fun m!158273 () Bool)

(assert (=> d!40917 m!158273))

(declare-fun m!158275 () Bool)

(assert (=> d!40917 m!158275))

(declare-fun m!158277 () Bool)

(assert (=> d!40917 m!158277))

(declare-fun m!158279 () Bool)

(assert (=> b!133910 m!158279))

(declare-fun m!158281 () Bool)

(assert (=> b!133911 m!158281))

(assert (=> b!132970 d!40917))

(declare-fun d!40919 () Bool)

(assert (=> d!40919 (= (apply!116 (+!163 lt!69355 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))) lt!69366) (apply!116 lt!69355 lt!69366))))

(declare-fun lt!70004 () Unit!4132)

(assert (=> d!40919 (= lt!70004 (choose!828 lt!69355 lt!69356 (minValue!2719 newMap!16) lt!69366))))

(declare-fun e!87224 () Bool)

(assert (=> d!40919 e!87224))

(declare-fun res!64392 () Bool)

(assert (=> d!40919 (=> (not res!64392) (not e!87224))))

(assert (=> d!40919 (= res!64392 (contains!886 lt!69355 lt!69366))))

(assert (=> d!40919 (= (addApplyDifferent!92 lt!69355 lt!69356 (minValue!2719 newMap!16) lt!69366) lt!70004)))

(declare-fun b!133912 () Bool)

(assert (=> b!133912 (= e!87224 (not (= lt!69366 lt!69356)))))

(assert (= (and d!40919 res!64392) b!133912))

(assert (=> d!40919 m!156491))

(assert (=> d!40919 m!156513))

(declare-fun m!158283 () Bool)

(assert (=> d!40919 m!158283))

(assert (=> d!40919 m!156511))

(declare-fun m!158285 () Bool)

(assert (=> d!40919 m!158285))

(assert (=> d!40919 m!156491))

(assert (=> b!132970 d!40919))

(declare-fun d!40921 () Bool)

(assert (=> d!40921 (contains!886 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))) lt!69358)))

(declare-fun lt!70005 () Unit!4132)

(assert (=> d!40921 (= lt!70005 (choose!829 lt!69352 lt!69360 (zeroValue!2719 newMap!16) lt!69358))))

(assert (=> d!40921 (contains!886 lt!69352 lt!69358)))

(assert (=> d!40921 (= (addStillContains!92 lt!69352 lt!69360 (zeroValue!2719 newMap!16) lt!69358) lt!70005)))

(declare-fun bs!5542 () Bool)

(assert (= bs!5542 d!40921))

(assert (=> bs!5542 m!156489))

(assert (=> bs!5542 m!156489))

(assert (=> bs!5542 m!156501))

(declare-fun m!158287 () Bool)

(assert (=> bs!5542 m!158287))

(declare-fun m!158289 () Bool)

(assert (=> bs!5542 m!158289))

(assert (=> b!132970 d!40921))

(declare-fun d!40923 () Bool)

(assert (=> d!40923 (= (apply!116 (+!163 lt!69346 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))) lt!69350) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69346 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))) lt!69350)))))

(declare-fun bs!5543 () Bool)

(assert (= bs!5543 d!40923))

(declare-fun m!158291 () Bool)

(assert (=> bs!5543 m!158291))

(assert (=> bs!5543 m!158291))

(declare-fun m!158293 () Bool)

(assert (=> bs!5543 m!158293))

(assert (=> b!132970 d!40923))

(declare-fun d!40925 () Bool)

(declare-fun e!87225 () Bool)

(assert (=> d!40925 e!87225))

(declare-fun res!64394 () Bool)

(assert (=> d!40925 (=> (not res!64394) (not e!87225))))

(declare-fun lt!70008 () ListLongMap!1671)

(assert (=> d!40925 (= res!64394 (contains!886 lt!70008 (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))

(declare-fun lt!70006 () List!1710)

(assert (=> d!40925 (= lt!70008 (ListLongMap!1672 lt!70006))))

(declare-fun lt!70009 () Unit!4132)

(declare-fun lt!70007 () Unit!4132)

(assert (=> d!40925 (= lt!70009 lt!70007)))

(assert (=> d!40925 (= (getValueByKey!170 lt!70006 (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))

(assert (=> d!40925 (= lt!70007 (lemmaContainsTupThenGetReturnValue!88 lt!70006 (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))

(assert (=> d!40925 (= lt!70006 (insertStrictlySorted!91 (toList!851 lt!69348) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))

(assert (=> d!40925 (= (+!163 lt!69348 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))) lt!70008)))

(declare-fun b!133913 () Bool)

(declare-fun res!64393 () Bool)

(assert (=> b!133913 (=> (not res!64393) (not e!87225))))

(assert (=> b!133913 (= res!64393 (= (getValueByKey!170 (toList!851 lt!70008) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))))))

(declare-fun b!133914 () Bool)

(assert (=> b!133914 (= e!87225 (contains!889 (toList!851 lt!70008) (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))))

(assert (= (and d!40925 res!64394) b!133913))

(assert (= (and b!133913 res!64393) b!133914))

(declare-fun m!158295 () Bool)

(assert (=> d!40925 m!158295))

(declare-fun m!158297 () Bool)

(assert (=> d!40925 m!158297))

(declare-fun m!158299 () Bool)

(assert (=> d!40925 m!158299))

(declare-fun m!158301 () Bool)

(assert (=> d!40925 m!158301))

(declare-fun m!158303 () Bool)

(assert (=> b!133913 m!158303))

(declare-fun m!158305 () Bool)

(assert (=> b!133914 m!158305))

(assert (=> b!132970 d!40925))

(declare-fun d!40927 () Bool)

(assert (=> d!40927 (= (apply!116 (+!163 lt!69346 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))) lt!69350) (apply!116 lt!69346 lt!69350))))

(declare-fun lt!70010 () Unit!4132)

(assert (=> d!40927 (= lt!70010 (choose!828 lt!69346 lt!69347 (zeroValue!2719 newMap!16) lt!69350))))

(declare-fun e!87226 () Bool)

(assert (=> d!40927 e!87226))

(declare-fun res!64395 () Bool)

(assert (=> d!40927 (=> (not res!64395) (not e!87226))))

(assert (=> d!40927 (= res!64395 (contains!886 lt!69346 lt!69350))))

(assert (=> d!40927 (= (addApplyDifferent!92 lt!69346 lt!69347 (zeroValue!2719 newMap!16) lt!69350) lt!70010)))

(declare-fun b!133915 () Bool)

(assert (=> b!133915 (= e!87226 (not (= lt!69350 lt!69347)))))

(assert (= (and d!40927 res!64395) b!133915))

(assert (=> d!40927 m!156485))

(assert (=> d!40927 m!156493))

(declare-fun m!158307 () Bool)

(assert (=> d!40927 m!158307))

(assert (=> d!40927 m!156495))

(declare-fun m!158309 () Bool)

(assert (=> d!40927 m!158309))

(assert (=> d!40927 m!156485))

(assert (=> b!132970 d!40927))

(declare-fun d!40929 () Bool)

(declare-fun e!87227 () Bool)

(assert (=> d!40929 e!87227))

(declare-fun res!64397 () Bool)

(assert (=> d!40929 (=> (not res!64397) (not e!87227))))

(declare-fun lt!70013 () ListLongMap!1671)

(assert (=> d!40929 (= res!64397 (contains!886 lt!70013 (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70011 () List!1710)

(assert (=> d!40929 (= lt!70013 (ListLongMap!1672 lt!70011))))

(declare-fun lt!70014 () Unit!4132)

(declare-fun lt!70012 () Unit!4132)

(assert (=> d!40929 (= lt!70014 lt!70012)))

(assert (=> d!40929 (= (getValueByKey!170 lt!70011 (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40929 (= lt!70012 (lemmaContainsTupThenGetReturnValue!88 lt!70011 (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40929 (= lt!70011 (insertStrictlySorted!91 (toList!851 lt!69352) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40929 (= (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))) lt!70013)))

(declare-fun b!133916 () Bool)

(declare-fun res!64396 () Bool)

(assert (=> b!133916 (=> (not res!64396) (not e!87227))))

(assert (=> b!133916 (= res!64396 (= (getValueByKey!170 (toList!851 lt!70013) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))))))

(declare-fun b!133917 () Bool)

(assert (=> b!133917 (= e!87227 (contains!889 (toList!851 lt!70013) (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))))

(assert (= (and d!40929 res!64397) b!133916))

(assert (= (and b!133916 res!64396) b!133917))

(declare-fun m!158311 () Bool)

(assert (=> d!40929 m!158311))

(declare-fun m!158313 () Bool)

(assert (=> d!40929 m!158313))

(declare-fun m!158315 () Bool)

(assert (=> d!40929 m!158315))

(declare-fun m!158317 () Bool)

(assert (=> d!40929 m!158317))

(declare-fun m!158319 () Bool)

(assert (=> b!133916 m!158319))

(declare-fun m!158321 () Bool)

(assert (=> b!133917 m!158321))

(assert (=> b!132970 d!40929))

(assert (=> b!132970 d!40537))

(declare-fun d!40931 () Bool)

(assert (=> d!40931 (= (apply!116 (+!163 lt!69348 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))) lt!69353) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69348 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))) lt!69353)))))

(declare-fun bs!5544 () Bool)

(assert (= bs!5544 d!40931))

(declare-fun m!158323 () Bool)

(assert (=> bs!5544 m!158323))

(assert (=> bs!5544 m!158323))

(declare-fun m!158325 () Bool)

(assert (=> bs!5544 m!158325))

(assert (=> b!132970 d!40931))

(declare-fun d!40933 () Bool)

(assert (=> d!40933 (= (apply!116 lt!69348 lt!69353) (get!1482 (getValueByKey!170 (toList!851 lt!69348) lt!69353)))))

(declare-fun bs!5545 () Bool)

(assert (= bs!5545 d!40933))

(declare-fun m!158327 () Bool)

(assert (=> bs!5545 m!158327))

(assert (=> bs!5545 m!158327))

(declare-fun m!158329 () Bool)

(assert (=> bs!5545 m!158329))

(assert (=> b!132970 d!40933))

(declare-fun d!40935 () Bool)

(declare-fun e!87228 () Bool)

(assert (=> d!40935 e!87228))

(declare-fun res!64398 () Bool)

(assert (=> d!40935 (=> res!64398 e!87228)))

(declare-fun lt!70016 () Bool)

(assert (=> d!40935 (= res!64398 (not lt!70016))))

(declare-fun lt!70018 () Bool)

(assert (=> d!40935 (= lt!70016 lt!70018)))

(declare-fun lt!70015 () Unit!4132)

(declare-fun e!87229 () Unit!4132)

(assert (=> d!40935 (= lt!70015 e!87229)))

(declare-fun c!24881 () Bool)

(assert (=> d!40935 (= c!24881 lt!70018)))

(assert (=> d!40935 (= lt!70018 (containsKey!174 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) lt!69358))))

(assert (=> d!40935 (= (contains!886 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))) lt!69358) lt!70016)))

(declare-fun b!133918 () Bool)

(declare-fun lt!70017 () Unit!4132)

(assert (=> b!133918 (= e!87229 lt!70017)))

(assert (=> b!133918 (= lt!70017 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) lt!69358))))

(assert (=> b!133918 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) lt!69358))))

(declare-fun b!133919 () Bool)

(declare-fun Unit!4190 () Unit!4132)

(assert (=> b!133919 (= e!87229 Unit!4190)))

(declare-fun b!133920 () Bool)

(assert (=> b!133920 (= e!87228 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) lt!69358)))))

(assert (= (and d!40935 c!24881) b!133918))

(assert (= (and d!40935 (not c!24881)) b!133919))

(assert (= (and d!40935 (not res!64398)) b!133920))

(declare-fun m!158331 () Bool)

(assert (=> d!40935 m!158331))

(declare-fun m!158333 () Bool)

(assert (=> b!133918 m!158333))

(declare-fun m!158335 () Bool)

(assert (=> b!133918 m!158335))

(assert (=> b!133918 m!158335))

(declare-fun m!158337 () Bool)

(assert (=> b!133918 m!158337))

(assert (=> b!133920 m!158335))

(assert (=> b!133920 m!158335))

(assert (=> b!133920 m!158337))

(assert (=> b!132970 d!40935))

(declare-fun d!40937 () Bool)

(declare-fun e!87230 () Bool)

(assert (=> d!40937 e!87230))

(declare-fun res!64400 () Bool)

(assert (=> d!40937 (=> (not res!64400) (not e!87230))))

(declare-fun lt!70021 () ListLongMap!1671)

(assert (=> d!40937 (= res!64400 (contains!886 lt!70021 (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70019 () List!1710)

(assert (=> d!40937 (= lt!70021 (ListLongMap!1672 lt!70019))))

(declare-fun lt!70022 () Unit!4132)

(declare-fun lt!70020 () Unit!4132)

(assert (=> d!40937 (= lt!70022 lt!70020)))

(assert (=> d!40937 (= (getValueByKey!170 lt!70019 (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40937 (= lt!70020 (lemmaContainsTupThenGetReturnValue!88 lt!70019 (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40937 (= lt!70019 (insertStrictlySorted!91 (toList!851 lt!69346) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40937 (= (+!163 lt!69346 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))) lt!70021)))

(declare-fun b!133921 () Bool)

(declare-fun res!64399 () Bool)

(assert (=> b!133921 (=> (not res!64399) (not e!87230))))

(assert (=> b!133921 (= res!64399 (= (getValueByKey!170 (toList!851 lt!70021) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))))))

(declare-fun b!133922 () Bool)

(assert (=> b!133922 (= e!87230 (contains!889 (toList!851 lt!70021) (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))))

(assert (= (and d!40937 res!64400) b!133921))

(assert (= (and b!133921 res!64399) b!133922))

(declare-fun m!158339 () Bool)

(assert (=> d!40937 m!158339))

(declare-fun m!158341 () Bool)

(assert (=> d!40937 m!158341))

(declare-fun m!158343 () Bool)

(assert (=> d!40937 m!158343))

(declare-fun m!158345 () Bool)

(assert (=> d!40937 m!158345))

(declare-fun m!158347 () Bool)

(assert (=> b!133921 m!158347))

(declare-fun m!158349 () Bool)

(assert (=> b!133922 m!158349))

(assert (=> b!132970 d!40937))

(declare-fun d!40939 () Bool)

(assert (=> d!40939 (= (apply!116 (+!163 lt!69355 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))) lt!69366) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69355 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))) lt!69366)))))

(declare-fun bs!5546 () Bool)

(assert (= bs!5546 d!40939))

(declare-fun m!158351 () Bool)

(assert (=> bs!5546 m!158351))

(assert (=> bs!5546 m!158351))

(declare-fun m!158353 () Bool)

(assert (=> bs!5546 m!158353))

(assert (=> b!132970 d!40939))

(declare-fun d!40941 () Bool)

(assert (=> d!40941 (= (apply!116 lt!69355 lt!69366) (get!1482 (getValueByKey!170 (toList!851 lt!69355) lt!69366)))))

(declare-fun bs!5547 () Bool)

(assert (= bs!5547 d!40941))

(declare-fun m!158355 () Bool)

(assert (=> bs!5547 m!158355))

(assert (=> bs!5547 m!158355))

(declare-fun m!158357 () Bool)

(assert (=> bs!5547 m!158357))

(assert (=> b!132970 d!40941))

(declare-fun d!40943 () Bool)

(assert (=> d!40943 (= (apply!116 (+!163 lt!69348 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))) lt!69353) (apply!116 lt!69348 lt!69353))))

(declare-fun lt!70023 () Unit!4132)

(assert (=> d!40943 (= lt!70023 (choose!828 lt!69348 lt!69365 (minValue!2719 newMap!16) lt!69353))))

(declare-fun e!87231 () Bool)

(assert (=> d!40943 e!87231))

(declare-fun res!64401 () Bool)

(assert (=> d!40943 (=> (not res!64401) (not e!87231))))

(assert (=> d!40943 (= res!64401 (contains!886 lt!69348 lt!69353))))

(assert (=> d!40943 (= (addApplyDifferent!92 lt!69348 lt!69365 (minValue!2719 newMap!16) lt!69353) lt!70023)))

(declare-fun b!133923 () Bool)

(assert (=> b!133923 (= e!87231 (not (= lt!69353 lt!69365)))))

(assert (= (and d!40943 res!64401) b!133923))

(assert (=> d!40943 m!156497))

(assert (=> d!40943 m!156499))

(declare-fun m!158359 () Bool)

(assert (=> d!40943 m!158359))

(assert (=> d!40943 m!156507))

(declare-fun m!158361 () Bool)

(assert (=> d!40943 m!158361))

(assert (=> d!40943 m!156497))

(assert (=> b!132970 d!40943))

(assert (=> d!40343 d!40333))

(assert (=> d!40343 d!40335))

(declare-fun d!40945 () Bool)

(assert (=> d!40945 (isDefined!124 (getValueByKey!170 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> d!40945 true))

(declare-fun _$12!399 () Unit!4132)

(assert (=> d!40945 (= (choose!826 (toList!851 lt!69005) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) _$12!399)))

(declare-fun bs!5548 () Bool)

(assert (= bs!5548 d!40945))

(assert (=> bs!5548 m!155841))

(assert (=> bs!5548 m!155953))

(assert (=> bs!5548 m!155953))

(assert (=> bs!5548 m!155955))

(assert (=> d!40343 d!40945))

(declare-fun d!40947 () Bool)

(declare-fun res!64406 () Bool)

(declare-fun e!87236 () Bool)

(assert (=> d!40947 (=> res!64406 e!87236)))

(assert (=> d!40947 (= res!64406 (or ((_ is Nil!1707) (toList!851 lt!69005)) ((_ is Nil!1707) (t!6152 (toList!851 lt!69005)))))))

(assert (=> d!40947 (= (isStrictlySorted!317 (toList!851 lt!69005)) e!87236)))

(declare-fun b!133928 () Bool)

(declare-fun e!87237 () Bool)

(assert (=> b!133928 (= e!87236 e!87237)))

(declare-fun res!64407 () Bool)

(assert (=> b!133928 (=> (not res!64407) (not e!87237))))

(assert (=> b!133928 (= res!64407 (bvslt (_1!1303 (h!2311 (toList!851 lt!69005))) (_1!1303 (h!2311 (t!6152 (toList!851 lt!69005))))))))

(declare-fun b!133929 () Bool)

(assert (=> b!133929 (= e!87237 (isStrictlySorted!317 (t!6152 (toList!851 lt!69005))))))

(assert (= (and d!40947 (not res!64406)) b!133928))

(assert (= (and b!133928 res!64407) b!133929))

(declare-fun m!158363 () Bool)

(assert (=> b!133929 m!158363))

(assert (=> d!40343 d!40947))

(declare-fun d!40949 () Bool)

(assert (=> d!40949 (= (apply!116 lt!69484 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69484) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5549 () Bool)

(assert (= bs!5549 d!40949))

(assert (=> bs!5549 m!157527))

(assert (=> bs!5549 m!157527))

(declare-fun m!158365 () Bool)

(assert (=> bs!5549 m!158365))

(assert (=> b!133067 d!40949))

(declare-fun d!40951 () Bool)

(assert (=> d!40951 (= (apply!116 lt!69220 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69220) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5550 () Bool)

(assert (= bs!5550 d!40951))

(assert (=> bs!5550 m!157283))

(assert (=> bs!5550 m!157283))

(declare-fun m!158367 () Bool)

(assert (=> bs!5550 m!158367))

(assert (=> b!132787 d!40951))

(declare-fun d!40953 () Bool)

(assert (=> d!40953 (= (apply!116 lt!69250 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69250) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5551 () Bool)

(assert (= bs!5551 d!40953))

(assert (=> bs!5551 m!157275))

(assert (=> bs!5551 m!157275))

(declare-fun m!158369 () Bool)

(assert (=> bs!5551 m!158369))

(assert (=> b!132822 d!40953))

(declare-fun d!40955 () Bool)

(assert (=> d!40955 (= (get!1482 (getValueByKey!170 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3198 (getValueByKey!170 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40293 d!40955))

(assert (=> d!40293 d!40455))

(assert (=> b!133070 d!40651))

(assert (=> b!133070 d!40653))

(assert (=> b!133034 d!40657))

(declare-fun d!40957 () Bool)

(declare-fun e!87238 () Bool)

(assert (=> d!40957 e!87238))

(declare-fun res!64409 () Bool)

(assert (=> d!40957 (=> (not res!64409) (not e!87238))))

(declare-fun lt!70026 () ListLongMap!1671)

(assert (=> d!40957 (= res!64409 (contains!886 lt!70026 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70024 () List!1710)

(assert (=> d!40957 (= lt!70026 (ListLongMap!1672 lt!70024))))

(declare-fun lt!70027 () Unit!4132)

(declare-fun lt!70025 () Unit!4132)

(assert (=> d!40957 (= lt!70027 lt!70025)))

(assert (=> d!40957 (= (getValueByKey!170 lt!70024 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40957 (= lt!70025 (lemmaContainsTupThenGetReturnValue!88 lt!70024 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40957 (= lt!70024 (insertStrictlySorted!91 (toList!851 (map!1391 newMap!16)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40957 (= (+!163 (map!1391 newMap!16) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70026)))

(declare-fun b!133930 () Bool)

(declare-fun res!64408 () Bool)

(assert (=> b!133930 (=> (not res!64408) (not e!87238))))

(assert (=> b!133930 (= res!64408 (= (getValueByKey!170 (toList!851 lt!70026) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133931 () Bool)

(assert (=> b!133931 (= e!87238 (contains!889 (toList!851 lt!70026) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40957 res!64409) b!133930))

(assert (= (and b!133930 res!64408) b!133931))

(declare-fun m!158371 () Bool)

(assert (=> d!40957 m!158371))

(declare-fun m!158373 () Bool)

(assert (=> d!40957 m!158373))

(declare-fun m!158375 () Bool)

(assert (=> d!40957 m!158375))

(declare-fun m!158377 () Bool)

(assert (=> d!40957 m!158377))

(declare-fun m!158379 () Bool)

(assert (=> b!133930 m!158379))

(declare-fun m!158381 () Bool)

(assert (=> b!133931 m!158381))

(assert (=> b!133034 d!40957))

(assert (=> b!133034 d!40281))

(declare-fun b!133932 () Bool)

(declare-fun e!87239 () Bool)

(declare-fun call!14770 () Bool)

(assert (=> b!133932 (= e!87239 call!14770)))

(declare-fun b!133933 () Bool)

(declare-fun e!87240 () Bool)

(assert (=> b!133933 (= e!87240 e!87239)))

(declare-fun lt!70028 () (_ BitVec 64))

(assert (=> b!133933 (= lt!70028 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000))))

(declare-fun lt!70030 () Unit!4132)

(assert (=> b!133933 (= lt!70030 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 (_2!1304 lt!69115)) lt!70028 #b00000000000000000000000000000000))))

(assert (=> b!133933 (arrayContainsKey!0 (_keys!4612 (_2!1304 lt!69115)) lt!70028 #b00000000000000000000000000000000)))

(declare-fun lt!70029 () Unit!4132)

(assert (=> b!133933 (= lt!70029 lt!70030)))

(declare-fun res!64411 () Bool)

(assert (=> b!133933 (= res!64411 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000) (_keys!4612 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115))) (Found!278 #b00000000000000000000000000000000)))))

(assert (=> b!133933 (=> (not res!64411) (not e!87239))))

(declare-fun d!40959 () Bool)

(declare-fun res!64410 () Bool)

(declare-fun e!87241 () Bool)

(assert (=> d!40959 (=> res!64410 e!87241)))

(assert (=> d!40959 (= res!64410 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(assert (=> d!40959 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4612 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115))) e!87241)))

(declare-fun b!133934 () Bool)

(assert (=> b!133934 (= e!87241 e!87240)))

(declare-fun c!24882 () Bool)

(assert (=> b!133934 (= c!24882 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(declare-fun b!133935 () Bool)

(assert (=> b!133935 (= e!87240 call!14770)))

(declare-fun bm!14767 () Bool)

(assert (=> bm!14767 (= call!14770 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4612 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115))))))

(assert (= (and d!40959 (not res!64410)) b!133934))

(assert (= (and b!133934 c!24882) b!133933))

(assert (= (and b!133934 (not c!24882)) b!133935))

(assert (= (and b!133933 res!64411) b!133932))

(assert (= (or b!133932 b!133935) bm!14767))

(assert (=> b!133933 m!156913))

(declare-fun m!158383 () Bool)

(assert (=> b!133933 m!158383))

(declare-fun m!158385 () Bool)

(assert (=> b!133933 m!158385))

(assert (=> b!133933 m!156913))

(declare-fun m!158387 () Bool)

(assert (=> b!133933 m!158387))

(assert (=> b!133934 m!156913))

(assert (=> b!133934 m!156913))

(assert (=> b!133934 m!156915))

(declare-fun m!158389 () Bool)

(assert (=> bm!14767 m!158389))

(assert (=> b!132992 d!40959))

(declare-fun d!40961 () Bool)

(declare-fun e!87242 () Bool)

(assert (=> d!40961 e!87242))

(declare-fun res!64412 () Bool)

(assert (=> d!40961 (=> res!64412 e!87242)))

(declare-fun lt!70032 () Bool)

(assert (=> d!40961 (= res!64412 (not lt!70032))))

(declare-fun lt!70034 () Bool)

(assert (=> d!40961 (= lt!70032 lt!70034)))

(declare-fun lt!70031 () Unit!4132)

(declare-fun e!87243 () Unit!4132)

(assert (=> d!40961 (= lt!70031 e!87243)))

(declare-fun c!24883 () Bool)

(assert (=> d!40961 (= c!24883 lt!70034)))

(assert (=> d!40961 (= lt!70034 (containsKey!174 (toList!851 lt!69362) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40961 (= (contains!886 lt!69362 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!70032)))

(declare-fun b!133936 () Bool)

(declare-fun lt!70033 () Unit!4132)

(assert (=> b!133936 (= e!87243 lt!70033)))

(assert (=> b!133936 (= lt!70033 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69362) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133936 (isDefined!124 (getValueByKey!170 (toList!851 lt!69362) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133937 () Bool)

(declare-fun Unit!4191 () Unit!4132)

(assert (=> b!133937 (= e!87243 Unit!4191)))

(declare-fun b!133938 () Bool)

(assert (=> b!133938 (= e!87242 (isDefined!124 (getValueByKey!170 (toList!851 lt!69362) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!40961 c!24883) b!133936))

(assert (= (and d!40961 (not c!24883)) b!133937))

(assert (= (and d!40961 (not res!64412)) b!133938))

(assert (=> d!40961 m!156125))

(declare-fun m!158391 () Bool)

(assert (=> d!40961 m!158391))

(assert (=> b!133936 m!156125))

(declare-fun m!158393 () Bool)

(assert (=> b!133936 m!158393))

(assert (=> b!133936 m!156125))

(assert (=> b!133936 m!157571))

(assert (=> b!133936 m!157571))

(declare-fun m!158395 () Bool)

(assert (=> b!133936 m!158395))

(assert (=> b!133938 m!156125))

(assert (=> b!133938 m!157571))

(assert (=> b!133938 m!157571))

(assert (=> b!133938 m!158395))

(assert (=> b!132966 d!40961))

(declare-fun d!40963 () Bool)

(declare-fun e!87244 () Bool)

(assert (=> d!40963 e!87244))

(declare-fun res!64414 () Bool)

(assert (=> d!40963 (=> (not res!64414) (not e!87244))))

(declare-fun lt!70037 () ListLongMap!1671)

(assert (=> d!40963 (= res!64414 (contains!886 lt!70037 (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun lt!70035 () List!1710)

(assert (=> d!40963 (= lt!70037 (ListLongMap!1672 lt!70035))))

(declare-fun lt!70038 () Unit!4132)

(declare-fun lt!70036 () Unit!4132)

(assert (=> d!40963 (= lt!70038 lt!70036)))

(assert (=> d!40963 (= (getValueByKey!170 lt!70035 (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) (Some!175 (_2!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!40963 (= lt!70036 (lemmaContainsTupThenGetReturnValue!88 lt!70035 (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!40963 (= lt!70035 (insertStrictlySorted!91 (toList!851 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674))) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!40963 (= (+!163 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674)) (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70037)))

(declare-fun b!133939 () Bool)

(declare-fun res!64413 () Bool)

(assert (=> b!133939 (=> (not res!64413) (not e!87244))))

(assert (=> b!133939 (= res!64413 (= (getValueByKey!170 (toList!851 lt!70037) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) (Some!175 (_2!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!133940 () Bool)

(assert (=> b!133940 (= e!87244 (contains!889 (toList!851 lt!70037) (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (= (and d!40963 res!64414) b!133939))

(assert (= (and b!133939 res!64413) b!133940))

(declare-fun m!158397 () Bool)

(assert (=> d!40963 m!158397))

(declare-fun m!158399 () Bool)

(assert (=> d!40963 m!158399))

(declare-fun m!158401 () Bool)

(assert (=> d!40963 m!158401))

(declare-fun m!158403 () Bool)

(assert (=> d!40963 m!158403))

(declare-fun m!158405 () Bool)

(assert (=> b!133939 m!158405))

(declare-fun m!158407 () Bool)

(assert (=> b!133940 m!158407))

(assert (=> bm!14666 d!40963))

(assert (=> b!132920 d!40303))

(declare-fun d!40965 () Bool)

(declare-fun e!87245 () Bool)

(assert (=> d!40965 e!87245))

(declare-fun res!64416 () Bool)

(assert (=> d!40965 (=> (not res!64416) (not e!87245))))

(declare-fun lt!70041 () ListLongMap!1671)

(assert (=> d!40965 (= res!64416 (contains!886 lt!70041 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70039 () List!1710)

(assert (=> d!40965 (= lt!70041 (ListLongMap!1672 lt!70039))))

(declare-fun lt!70042 () Unit!4132)

(declare-fun lt!70040 () Unit!4132)

(assert (=> d!40965 (= lt!70042 lt!70040)))

(assert (=> d!40965 (= (getValueByKey!170 lt!70039 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40965 (= lt!70040 (lemmaContainsTupThenGetReturnValue!88 lt!70039 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40965 (= lt!70039 (insertStrictlySorted!91 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40965 (= (+!163 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70041)))

(declare-fun b!133941 () Bool)

(declare-fun res!64415 () Bool)

(assert (=> b!133941 (=> (not res!64415) (not e!87245))))

(assert (=> b!133941 (= res!64415 (= (getValueByKey!170 (toList!851 lt!70041) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133942 () Bool)

(assert (=> b!133942 (= e!87245 (contains!889 (toList!851 lt!70041) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40965 res!64416) b!133941))

(assert (= (and b!133941 res!64415) b!133942))

(declare-fun m!158409 () Bool)

(assert (=> d!40965 m!158409))

(declare-fun m!158411 () Bool)

(assert (=> d!40965 m!158411))

(declare-fun m!158413 () Bool)

(assert (=> d!40965 m!158413))

(declare-fun m!158415 () Bool)

(assert (=> d!40965 m!158415))

(declare-fun m!158417 () Bool)

(assert (=> b!133941 m!158417))

(declare-fun m!158419 () Bool)

(assert (=> b!133942 m!158419))

(assert (=> d!40409 d!40965))

(declare-fun b!133943 () Bool)

(declare-fun e!87258 () Bool)

(declare-fun e!87251 () Bool)

(assert (=> b!133943 (= e!87258 e!87251)))

(declare-fun res!64421 () Bool)

(declare-fun call!14775 () Bool)

(assert (=> b!133943 (= res!64421 call!14775)))

(assert (=> b!133943 (=> (not res!64421) (not e!87251))))

(declare-fun call!14777 () ListLongMap!1671)

(declare-fun call!14774 () ListLongMap!1671)

(declare-fun bm!14768 () Bool)

(declare-fun c!24889 () Bool)

(declare-fun c!24887 () Bool)

(declare-fun call!14771 () ListLongMap!1671)

(declare-fun call!14776 () ListLongMap!1671)

(assert (=> bm!14768 (= call!14771 (+!163 (ite c!24889 call!14774 (ite c!24887 call!14777 call!14776)) (ite (or c!24889 c!24887) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14769 () Bool)

(assert (=> bm!14769 (= call!14774 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69102 (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!133944 () Bool)

(declare-fun e!87256 () Bool)

(assert (=> b!133944 (= e!87256 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133945 () Bool)

(declare-fun e!87253 () Bool)

(assert (=> b!133945 (= e!87253 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14770 () Bool)

(assert (=> bm!14770 (= call!14776 call!14777)))

(declare-fun b!133946 () Bool)

(declare-fun e!87255 () ListLongMap!1671)

(declare-fun e!87257 () ListLongMap!1671)

(assert (=> b!133946 (= e!87255 e!87257)))

(assert (=> b!133946 (= c!24887 (and (not (= (bvand lt!69102 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!69102 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133947 () Bool)

(declare-fun e!87248 () Bool)

(declare-fun e!87254 () Bool)

(assert (=> b!133947 (= e!87248 e!87254)))

(declare-fun res!64422 () Bool)

(assert (=> b!133947 (=> (not res!64422) (not e!87254))))

(declare-fun lt!70059 () ListLongMap!1671)

(assert (=> b!133947 (= res!64422 (contains!886 lt!70059 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133947 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun bm!14771 () Bool)

(assert (=> bm!14771 (= call!14775 (contains!886 lt!70059 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133948 () Bool)

(assert (=> b!133948 (= e!87254 (= (apply!116 lt!70059 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133948 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (_values!2847 newMap!16))))))

(assert (=> b!133948 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133950 () Bool)

(declare-fun e!87246 () Bool)

(assert (=> b!133950 (= e!87246 (= (apply!116 lt!70059 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 newMap!16)))))

(declare-fun b!133951 () Bool)

(declare-fun e!87250 () Unit!4132)

(declare-fun lt!70061 () Unit!4132)

(assert (=> b!133951 (= e!87250 lt!70061)))

(declare-fun lt!70049 () ListLongMap!1671)

(assert (=> b!133951 (= lt!70049 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69102 (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!70057 () (_ BitVec 64))

(assert (=> b!133951 (= lt!70057 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70055 () (_ BitVec 64))

(assert (=> b!133951 (= lt!70055 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!70064 () Unit!4132)

(assert (=> b!133951 (= lt!70064 (addStillContains!92 lt!70049 lt!70057 (zeroValue!2719 newMap!16) lt!70055))))

(assert (=> b!133951 (contains!886 (+!163 lt!70049 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16))) lt!70055)))

(declare-fun lt!70056 () Unit!4132)

(assert (=> b!133951 (= lt!70056 lt!70064)))

(declare-fun lt!70045 () ListLongMap!1671)

(assert (=> b!133951 (= lt!70045 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69102 (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!70062 () (_ BitVec 64))

(assert (=> b!133951 (= lt!70062 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70050 () (_ BitVec 64))

(assert (=> b!133951 (= lt!70050 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!70051 () Unit!4132)

(assert (=> b!133951 (= lt!70051 (addApplyDifferent!92 lt!70045 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!70050))))

(assert (=> b!133951 (= (apply!116 (+!163 lt!70045 (tuple2!2585 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70050) (apply!116 lt!70045 lt!70050))))

(declare-fun lt!70060 () Unit!4132)

(assert (=> b!133951 (= lt!70060 lt!70051)))

(declare-fun lt!70043 () ListLongMap!1671)

(assert (=> b!133951 (= lt!70043 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69102 (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!70044 () (_ BitVec 64))

(assert (=> b!133951 (= lt!70044 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70047 () (_ BitVec 64))

(assert (=> b!133951 (= lt!70047 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!70046 () Unit!4132)

(assert (=> b!133951 (= lt!70046 (addApplyDifferent!92 lt!70043 lt!70044 (zeroValue!2719 newMap!16) lt!70047))))

(assert (=> b!133951 (= (apply!116 (+!163 lt!70043 (tuple2!2585 lt!70044 (zeroValue!2719 newMap!16))) lt!70047) (apply!116 lt!70043 lt!70047))))

(declare-fun lt!70054 () Unit!4132)

(assert (=> b!133951 (= lt!70054 lt!70046)))

(declare-fun lt!70052 () ListLongMap!1671)

(assert (=> b!133951 (= lt!70052 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69102 (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!70053 () (_ BitVec 64))

(assert (=> b!133951 (= lt!70053 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70063 () (_ BitVec 64))

(assert (=> b!133951 (= lt!70063 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133951 (= lt!70061 (addApplyDifferent!92 lt!70052 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!70063))))

(assert (=> b!133951 (= (apply!116 (+!163 lt!70052 (tuple2!2585 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70063) (apply!116 lt!70052 lt!70063))))

(declare-fun b!133952 () Bool)

(declare-fun e!87247 () ListLongMap!1671)

(assert (=> b!133952 (= e!87247 call!14776)))

(declare-fun b!133953 () Bool)

(declare-fun call!14772 () ListLongMap!1671)

(assert (=> b!133953 (= e!87257 call!14772)))

(declare-fun b!133954 () Bool)

(declare-fun res!64418 () Bool)

(declare-fun e!87252 () Bool)

(assert (=> b!133954 (=> (not res!64418) (not e!87252))))

(declare-fun e!87249 () Bool)

(assert (=> b!133954 (= res!64418 e!87249)))

(declare-fun c!24886 () Bool)

(assert (=> b!133954 (= c!24886 (not (= (bvand lt!69102 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!14772 () Bool)

(assert (=> bm!14772 (= call!14777 call!14774)))

(declare-fun b!133955 () Bool)

(assert (=> b!133955 (= e!87258 (not call!14775))))

(declare-fun b!133956 () Bool)

(declare-fun c!24888 () Bool)

(assert (=> b!133956 (= c!24888 (and (not (= (bvand lt!69102 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!69102 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!133956 (= e!87257 e!87247)))

(declare-fun b!133957 () Bool)

(declare-fun Unit!4192 () Unit!4132)

(assert (=> b!133957 (= e!87250 Unit!4192)))

(declare-fun b!133958 () Bool)

(assert (=> b!133958 (= e!87255 (+!163 call!14771 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!14773 () Bool)

(assert (=> bm!14773 (= call!14772 call!14771)))

(declare-fun b!133959 () Bool)

(assert (=> b!133959 (= e!87247 call!14772)))

(declare-fun b!133960 () Bool)

(declare-fun call!14773 () Bool)

(assert (=> b!133960 (= e!87249 (not call!14773))))

(declare-fun b!133961 () Bool)

(assert (=> b!133961 (= e!87252 e!87258)))

(declare-fun c!24885 () Bool)

(assert (=> b!133961 (= c!24885 (not (= (bvand lt!69102 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14774 () Bool)

(assert (=> bm!14774 (= call!14773 (contains!886 lt!70059 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133949 () Bool)

(assert (=> b!133949 (= e!87249 e!87246)))

(declare-fun res!64420 () Bool)

(assert (=> b!133949 (= res!64420 call!14773)))

(assert (=> b!133949 (=> (not res!64420) (not e!87246))))

(declare-fun d!40967 () Bool)

(assert (=> d!40967 e!87252))

(declare-fun res!64425 () Bool)

(assert (=> d!40967 (=> (not res!64425) (not e!87252))))

(assert (=> d!40967 (= res!64425 (or (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))))

(declare-fun lt!70048 () ListLongMap!1671)

(assert (=> d!40967 (= lt!70059 lt!70048)))

(declare-fun lt!70058 () Unit!4132)

(assert (=> d!40967 (= lt!70058 e!87250)))

(declare-fun c!24884 () Bool)

(assert (=> d!40967 (= c!24884 e!87253)))

(declare-fun res!64424 () Bool)

(assert (=> d!40967 (=> (not res!64424) (not e!87253))))

(assert (=> d!40967 (= res!64424 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!40967 (= lt!70048 e!87255)))

(assert (=> d!40967 (= c!24889 (and (not (= (bvand lt!69102 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!69102 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40967 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!40967 (= (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69102 (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!70059)))

(declare-fun b!133962 () Bool)

(declare-fun res!64417 () Bool)

(assert (=> b!133962 (=> (not res!64417) (not e!87252))))

(assert (=> b!133962 (= res!64417 e!87248)))

(declare-fun res!64423 () Bool)

(assert (=> b!133962 (=> res!64423 e!87248)))

(assert (=> b!133962 (= res!64423 (not e!87256))))

(declare-fun res!64419 () Bool)

(assert (=> b!133962 (=> (not res!64419) (not e!87256))))

(assert (=> b!133962 (= res!64419 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!133963 () Bool)

(assert (=> b!133963 (= e!87251 (= (apply!116 lt!70059 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!40967 c!24889) b!133958))

(assert (= (and d!40967 (not c!24889)) b!133946))

(assert (= (and b!133946 c!24887) b!133953))

(assert (= (and b!133946 (not c!24887)) b!133956))

(assert (= (and b!133956 c!24888) b!133959))

(assert (= (and b!133956 (not c!24888)) b!133952))

(assert (= (or b!133959 b!133952) bm!14770))

(assert (= (or b!133953 bm!14770) bm!14772))

(assert (= (or b!133953 b!133959) bm!14773))

(assert (= (or b!133958 bm!14772) bm!14769))

(assert (= (or b!133958 bm!14773) bm!14768))

(assert (= (and d!40967 res!64424) b!133945))

(assert (= (and d!40967 c!24884) b!133951))

(assert (= (and d!40967 (not c!24884)) b!133957))

(assert (= (and d!40967 res!64425) b!133962))

(assert (= (and b!133962 res!64419) b!133944))

(assert (= (and b!133962 (not res!64423)) b!133947))

(assert (= (and b!133947 res!64422) b!133948))

(assert (= (and b!133962 res!64417) b!133954))

(assert (= (and b!133954 c!24886) b!133949))

(assert (= (and b!133954 (not c!24886)) b!133960))

(assert (= (and b!133949 res!64420) b!133950))

(assert (= (or b!133949 b!133960) bm!14774))

(assert (= (and b!133954 res!64418) b!133961))

(assert (= (and b!133961 c!24885) b!133943))

(assert (= (and b!133961 (not c!24885)) b!133955))

(assert (= (and b!133943 res!64421) b!133963))

(assert (= (or b!133943 b!133955) bm!14771))

(declare-fun b_lambda!5951 () Bool)

(assert (=> (not b_lambda!5951) (not b!133948)))

(assert (=> b!133948 t!6164))

(declare-fun b_and!8293 () Bool)

(assert (= b_and!8289 (and (=> t!6164 result!3993) b_and!8293)))

(assert (=> b!133948 t!6166))

(declare-fun b_and!8295 () Bool)

(assert (= b_and!8291 (and (=> t!6166 result!3995) b_and!8295)))

(assert (=> b!133947 m!156125))

(assert (=> b!133947 m!156125))

(declare-fun m!158421 () Bool)

(assert (=> b!133947 m!158421))

(assert (=> bm!14769 m!155839))

(declare-fun m!158423 () Bool)

(assert (=> bm!14769 m!158423))

(declare-fun m!158425 () Bool)

(assert (=> bm!14768 m!158425))

(assert (=> b!133948 m!156473))

(assert (=> b!133948 m!156135))

(assert (=> b!133948 m!156475))

(assert (=> b!133948 m!156135))

(assert (=> b!133948 m!156125))

(assert (=> b!133948 m!156473))

(assert (=> b!133948 m!156125))

(declare-fun m!158427 () Bool)

(assert (=> b!133948 m!158427))

(assert (=> b!133944 m!156125))

(assert (=> b!133944 m!156125))

(assert (=> b!133944 m!156141))

(assert (=> b!133945 m!156125))

(assert (=> b!133945 m!156125))

(assert (=> b!133945 m!156141))

(declare-fun m!158429 () Bool)

(assert (=> b!133950 m!158429))

(declare-fun m!158431 () Bool)

(assert (=> b!133958 m!158431))

(declare-fun m!158433 () Bool)

(assert (=> bm!14771 m!158433))

(declare-fun m!158435 () Bool)

(assert (=> b!133951 m!158435))

(assert (=> b!133951 m!155839))

(declare-fun m!158437 () Bool)

(assert (=> b!133951 m!158437))

(declare-fun m!158439 () Bool)

(assert (=> b!133951 m!158439))

(declare-fun m!158441 () Bool)

(assert (=> b!133951 m!158441))

(assert (=> b!133951 m!158435))

(declare-fun m!158443 () Bool)

(assert (=> b!133951 m!158443))

(declare-fun m!158445 () Bool)

(assert (=> b!133951 m!158445))

(declare-fun m!158447 () Bool)

(assert (=> b!133951 m!158447))

(declare-fun m!158449 () Bool)

(assert (=> b!133951 m!158449))

(assert (=> b!133951 m!158439))

(declare-fun m!158451 () Bool)

(assert (=> b!133951 m!158451))

(declare-fun m!158453 () Bool)

(assert (=> b!133951 m!158453))

(declare-fun m!158455 () Bool)

(assert (=> b!133951 m!158455))

(declare-fun m!158457 () Bool)

(assert (=> b!133951 m!158457))

(assert (=> b!133951 m!155839))

(declare-fun m!158459 () Bool)

(assert (=> b!133951 m!158459))

(assert (=> b!133951 m!158447))

(assert (=> b!133951 m!156125))

(assert (=> b!133951 m!155839))

(assert (=> b!133951 m!158423))

(declare-fun m!158461 () Bool)

(assert (=> b!133951 m!158461))

(assert (=> b!133951 m!158441))

(declare-fun m!158463 () Bool)

(assert (=> b!133951 m!158463))

(declare-fun m!158465 () Bool)

(assert (=> b!133963 m!158465))

(declare-fun m!158467 () Bool)

(assert (=> bm!14774 m!158467))

(assert (=> d!40967 m!156183))

(assert (=> d!40409 d!40967))

(assert (=> d!40409 d!40383))

(declare-fun d!40969 () Bool)

(assert (=> d!40969 (= (+!163 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69102 (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(assert (=> d!40969 true))

(declare-fun _$8!118 () Unit!4132)

(assert (=> d!40969 (= (choose!831 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) lt!69102 (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)) _$8!118)))

(declare-fun bs!5552 () Bool)

(assert (= bs!5552 d!40969))

(assert (=> bs!5552 m!156041))

(assert (=> bs!5552 m!156041))

(assert (=> bs!5552 m!156681))

(assert (=> bs!5552 m!155839))

(assert (=> bs!5552 m!156683))

(assert (=> d!40409 d!40969))

(assert (=> d!40409 d!40425))

(declare-fun b!133964 () Bool)

(declare-fun e!87261 () SeekEntryResult!278)

(assert (=> b!133964 (= e!87261 Undefined!278)))

(declare-fun b!133965 () Bool)

(declare-fun e!87260 () SeekEntryResult!278)

(assert (=> b!133965 (= e!87260 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15594 lt!69279) #b00000000000000000000000000000001) (nextIndex!0 (index!3274 lt!69279) (x!15594 lt!69279) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!69279) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!133966 () Bool)

(declare-fun e!87259 () SeekEntryResult!278)

(assert (=> b!133966 (= e!87259 (Found!278 (index!3274 lt!69279)))))

(declare-fun d!40971 () Bool)

(declare-fun lt!70065 () SeekEntryResult!278)

(assert (=> d!40971 (and (or ((_ is Undefined!278) lt!70065) (not ((_ is Found!278) lt!70065)) (and (bvsge (index!3273 lt!70065) #b00000000000000000000000000000000) (bvslt (index!3273 lt!70065) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))) (or ((_ is Undefined!278) lt!70065) ((_ is Found!278) lt!70065) (not ((_ is MissingVacant!278) lt!70065)) (not (= (index!3275 lt!70065) (index!3274 lt!69279))) (and (bvsge (index!3275 lt!70065) #b00000000000000000000000000000000) (bvslt (index!3275 lt!70065) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))) (or ((_ is Undefined!278) lt!70065) (ite ((_ is Found!278) lt!70065) (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3273 lt!70065)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!278) lt!70065) (= (index!3275 lt!70065) (index!3274 lt!69279)) (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3275 lt!70065)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!40971 (= lt!70065 e!87261)))

(declare-fun c!24892 () Bool)

(assert (=> d!40971 (= c!24892 (bvsge (x!15594 lt!69279) #b01111111111111111111111111111110))))

(declare-fun lt!70066 () (_ BitVec 64))

(assert (=> d!40971 (= lt!70066 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!69279)))))

(assert (=> d!40971 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!40971 (= (seekKeyOrZeroReturnVacant!0 (x!15594 lt!69279) (index!3274 lt!69279) (index!3274 lt!69279) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) lt!70065)))

(declare-fun b!133967 () Bool)

(declare-fun c!24891 () Bool)

(assert (=> b!133967 (= c!24891 (= lt!70066 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133967 (= e!87259 e!87260)))

(declare-fun b!133968 () Bool)

(assert (=> b!133968 (= e!87260 (MissingVacant!278 (index!3274 lt!69279)))))

(declare-fun b!133969 () Bool)

(assert (=> b!133969 (= e!87261 e!87259)))

(declare-fun c!24890 () Bool)

(assert (=> b!133969 (= c!24890 (= lt!70066 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!40971 c!24892) b!133964))

(assert (= (and d!40971 (not c!24892)) b!133969))

(assert (= (and b!133969 c!24890) b!133966))

(assert (= (and b!133969 (not c!24890)) b!133967))

(assert (= (and b!133967 c!24891) b!133968))

(assert (= (and b!133967 (not c!24891)) b!133965))

(declare-fun m!158469 () Bool)

(assert (=> b!133965 m!158469))

(assert (=> b!133965 m!158469))

(assert (=> b!133965 m!156017))

(declare-fun m!158471 () Bool)

(assert (=> b!133965 m!158471))

(declare-fun m!158473 () Bool)

(assert (=> d!40971 m!158473))

(declare-fun m!158475 () Bool)

(assert (=> d!40971 m!158475))

(assert (=> d!40971 m!156295))

(assert (=> d!40971 m!155855))

(assert (=> b!132863 d!40971))

(declare-fun b!133970 () Bool)

(declare-fun e!87262 () (_ BitVec 32))

(declare-fun e!87263 () (_ BitVec 32))

(assert (=> b!133970 (= e!87262 e!87263)))

(declare-fun c!24894 () Bool)

(assert (=> b!133970 (= c!24894 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!133971 () Bool)

(declare-fun call!14778 () (_ BitVec 32))

(assert (=> b!133971 (= e!87263 (bvadd #b00000000000000000000000000000001 call!14778))))

(declare-fun d!40973 () Bool)

(declare-fun lt!70067 () (_ BitVec 32))

(assert (=> d!40973 (and (bvsge lt!70067 #b00000000000000000000000000000000) (bvsle lt!70067 (bvsub (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!40973 (= lt!70067 e!87262)))

(declare-fun c!24893 () Bool)

(assert (=> d!40973 (= c!24893 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!40973 (and (bvsle #b00000000000000000000000000000000 (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!40973 (= (arrayCountValidKeys!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000000 (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))) lt!70067)))

(declare-fun b!133972 () Bool)

(assert (=> b!133972 (= e!87263 call!14778)))

(declare-fun b!133973 () Bool)

(assert (=> b!133973 (= e!87262 #b00000000000000000000000000000000)))

(declare-fun bm!14775 () Bool)

(assert (=> bm!14775 (= call!14778 (arrayCountValidKeys!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!40973 c!24893) b!133973))

(assert (= (and d!40973 (not c!24893)) b!133970))

(assert (= (and b!133970 c!24894) b!133971))

(assert (= (and b!133970 (not c!24894)) b!133972))

(assert (= (or b!133971 b!133972) bm!14775))

(assert (=> b!133970 m!156017))

(assert (=> b!133970 m!156017))

(assert (=> b!133970 m!156025))

(declare-fun m!158477 () Bool)

(assert (=> bm!14775 m!158477))

(assert (=> b!132764 d!40973))

(assert (=> b!133079 d!40631))

(assert (=> b!133079 d!40633))

(assert (=> d!40385 d!40351))

(declare-fun d!40975 () Bool)

(declare-fun e!87266 () Bool)

(assert (=> d!40975 e!87266))

(declare-fun res!64430 () Bool)

(assert (=> d!40975 (=> (not res!64430) (not e!87266))))

(declare-fun lt!70070 () SeekEntryResult!278)

(assert (=> d!40975 (= res!64430 ((_ is Found!278) lt!70070))))

(assert (=> d!40975 (= lt!70070 (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(assert (=> d!40975 true))

(declare-fun _$33!114 () Unit!4132)

(assert (=> d!40975 (= (choose!830 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)) _$33!114)))

(declare-fun b!133978 () Bool)

(declare-fun res!64431 () Bool)

(assert (=> b!133978 (=> (not res!64431) (not e!87266))))

(assert (=> b!133978 (= res!64431 (inRange!0 (index!3273 lt!70070) (mask!7163 newMap!16)))))

(declare-fun b!133979 () Bool)

(assert (=> b!133979 (= e!87266 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!70070)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!40975 res!64430) b!133978))

(assert (= (and b!133978 res!64431) b!133979))

(assert (=> d!40975 m!155841))

(assert (=> d!40975 m!155961))

(declare-fun m!158479 () Bool)

(assert (=> b!133978 m!158479))

(declare-fun m!158481 () Bool)

(assert (=> b!133979 m!158481))

(assert (=> d!40385 d!40975))

(assert (=> d!40385 d!40425))

(declare-fun d!40977 () Bool)

(assert (=> d!40977 (isDefined!124 (getValueByKey!170 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!70071 () Unit!4132)

(assert (=> d!40977 (= lt!70071 (choose!826 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!87267 () Bool)

(assert (=> d!40977 e!87267))

(declare-fun res!64432 () Bool)

(assert (=> d!40977 (=> (not res!64432) (not e!87267))))

(assert (=> d!40977 (= res!64432 (isStrictlySorted!317 (toList!851 lt!69186)))))

(assert (=> d!40977 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!70071)))

(declare-fun b!133980 () Bool)

(assert (=> b!133980 (= e!87267 (containsKey!174 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!40977 res!64432) b!133980))

(assert (=> d!40977 m!156043))

(assert (=> d!40977 m!156195))

(assert (=> d!40977 m!156195))

(assert (=> d!40977 m!156275))

(assert (=> d!40977 m!156043))

(declare-fun m!158483 () Bool)

(assert (=> d!40977 m!158483))

(assert (=> d!40977 m!157501))

(assert (=> b!133980 m!156043))

(assert (=> b!133980 m!156271))

(assert (=> b!132829 d!40977))

(assert (=> b!132829 d!40689))

(assert (=> b!132829 d!40449))

(assert (=> b!133042 d!40385))

(declare-fun d!40979 () Bool)

(assert (=> d!40979 (isDefined!124 (getValueByKey!170 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))

(declare-fun lt!70072 () Unit!4132)

(assert (=> d!40979 (= lt!70072 (choose!826 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))

(declare-fun e!87268 () Bool)

(assert (=> d!40979 e!87268))

(declare-fun res!64433 () Bool)

(assert (=> d!40979 (=> (not res!64433) (not e!87268))))

(assert (=> d!40979 (= res!64433 (isStrictlySorted!317 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))))

(assert (=> d!40979 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))) lt!70072)))

(declare-fun b!133981 () Bool)

(assert (=> b!133981 (= e!87268 (containsKey!174 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))

(assert (= (and d!40979 res!64433) b!133981))

(assert (=> d!40979 m!155971))

(assert (=> d!40979 m!156207))

(assert (=> d!40979 m!156207))

(assert (=> d!40979 m!156209))

(assert (=> d!40979 m!155971))

(declare-fun m!158485 () Bool)

(assert (=> d!40979 m!158485))

(declare-fun m!158487 () Bool)

(assert (=> d!40979 m!158487))

(assert (=> b!133981 m!155971))

(assert (=> b!133981 m!156203))

(assert (=> b!132799 d!40979))

(assert (=> b!132799 d!40673))

(assert (=> b!132799 d!40675))

(assert (=> b!132963 d!40519))

(declare-fun d!40981 () Bool)

(declare-fun lt!70073 () Bool)

(assert (=> d!40981 (= lt!70073 (select (content!132 (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!87270 () Bool)

(assert (=> d!40981 (= lt!70073 e!87270)))

(declare-fun res!64435 () Bool)

(assert (=> d!40981 (=> (not res!64435) (not e!87270))))

(assert (=> d!40981 (= res!64435 ((_ is Cons!1707) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)))))

(assert (=> d!40981 (= (contains!888 (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!70073)))

(declare-fun b!133982 () Bool)

(declare-fun e!87269 () Bool)

(assert (=> b!133982 (= e!87270 e!87269)))

(declare-fun res!64434 () Bool)

(assert (=> b!133982 (=> res!64434 e!87269)))

(assert (=> b!133982 (= res!64434 (= (h!2312 (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133983 () Bool)

(assert (=> b!133983 (= e!87269 (contains!888 (t!6153 (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!40981 res!64435) b!133982))

(assert (= (and b!133982 (not res!64434)) b!133983))

(declare-fun m!158489 () Bool)

(assert (=> d!40981 m!158489))

(assert (=> d!40981 m!156349))

(declare-fun m!158491 () Bool)

(assert (=> d!40981 m!158491))

(assert (=> b!133983 m!156349))

(declare-fun m!158493 () Bool)

(assert (=> b!133983 m!158493))

(assert (=> b!132935 d!40981))

(declare-fun d!40983 () Bool)

(assert (=> d!40983 (= (inRange!0 (ite c!24651 (index!3272 lt!69516) (index!3275 lt!69516)) (mask!7163 newMap!16)) (and (bvsge (ite c!24651 (index!3272 lt!69516) (index!3275 lt!69516)) #b00000000000000000000000000000000) (bvslt (ite c!24651 (index!3272 lt!69516) (index!3275 lt!69516)) (bvadd (mask!7163 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14679 d!40983))

(declare-fun d!40985 () Bool)

(declare-fun c!24895 () Bool)

(assert (=> d!40985 (= c!24895 (and ((_ is Cons!1706) (toList!851 lt!69327)) (= (_1!1303 (h!2311 (toList!851 lt!69327))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87271 () Option!176)

(assert (=> d!40985 (= (getValueByKey!170 (toList!851 lt!69327) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87271)))

(declare-fun b!133986 () Bool)

(declare-fun e!87272 () Option!176)

(assert (=> b!133986 (= e!87272 (getValueByKey!170 (t!6152 (toList!851 lt!69327)) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!133985 () Bool)

(assert (=> b!133985 (= e!87271 e!87272)))

(declare-fun c!24896 () Bool)

(assert (=> b!133985 (= c!24896 (and ((_ is Cons!1706) (toList!851 lt!69327)) (not (= (_1!1303 (h!2311 (toList!851 lt!69327))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!133984 () Bool)

(assert (=> b!133984 (= e!87271 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69327)))))))

(declare-fun b!133987 () Bool)

(assert (=> b!133987 (= e!87272 None!174)))

(assert (= (and d!40985 c!24895) b!133984))

(assert (= (and d!40985 (not c!24895)) b!133985))

(assert (= (and b!133985 c!24896) b!133986))

(assert (= (and b!133985 (not c!24896)) b!133987))

(declare-fun m!158495 () Bool)

(assert (=> b!133986 m!158495))

(assert (=> b!132950 d!40985))

(declare-fun d!40987 () Bool)

(declare-fun e!87277 () Bool)

(assert (=> d!40987 e!87277))

(declare-fun c!24897 () Bool)

(declare-fun lt!70074 () SeekEntryResult!278)

(assert (=> d!40987 (= c!24897 (and ((_ is Intermediate!278) lt!70074) (undefined!1090 lt!70074)))))

(declare-fun e!87273 () SeekEntryResult!278)

(assert (=> d!40987 (= lt!70074 e!87273)))

(declare-fun c!24898 () Bool)

(assert (=> d!40987 (= c!24898 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!70075 () (_ BitVec 64))

(assert (=> d!40987 (= lt!70075 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (mask!7163 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!40987 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!40987 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) lt!70074)))

(declare-fun b!133988 () Bool)

(assert (=> b!133988 (and (bvsge (index!3274 lt!70074) #b00000000000000000000000000000000) (bvslt (index!3274 lt!70074) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun e!87276 () Bool)

(assert (=> b!133988 (= e!87276 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!70074)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133989 () Bool)

(assert (=> b!133989 (and (bvsge (index!3274 lt!70074) #b00000000000000000000000000000000) (bvslt (index!3274 lt!70074) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun res!64438 () Bool)

(assert (=> b!133989 (= res!64438 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!70074)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133989 (=> res!64438 e!87276)))

(declare-fun b!133990 () Bool)

(declare-fun e!87275 () SeekEntryResult!278)

(assert (=> b!133990 (= e!87273 e!87275)))

(declare-fun c!24899 () Bool)

(assert (=> b!133990 (= c!24899 (or (= lt!70075 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)) (= (bvadd lt!70075 lt!70075) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133991 () Bool)

(declare-fun e!87274 () Bool)

(assert (=> b!133991 (= e!87277 e!87274)))

(declare-fun res!64437 () Bool)

(assert (=> b!133991 (= res!64437 (and ((_ is Intermediate!278) lt!70074) (not (undefined!1090 lt!70074)) (bvslt (x!15594 lt!70074) #b01111111111111111111111111111110) (bvsge (x!15594 lt!70074) #b00000000000000000000000000000000) (bvsge (x!15594 lt!70074) #b00000000000000000000000000000000)))))

(assert (=> b!133991 (=> (not res!64437) (not e!87274))))

(declare-fun b!133992 () Bool)

(assert (=> b!133992 (= e!87275 (Intermediate!278 false (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (mask!7163 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!133993 () Bool)

(assert (=> b!133993 (= e!87273 (Intermediate!278 true (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (mask!7163 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!133994 () Bool)

(assert (=> b!133994 (= e!87275 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (mask!7163 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000 (mask!7163 (v!3192 (underlying!451 thiss!992)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!133995 () Bool)

(assert (=> b!133995 (= e!87277 (bvsge (x!15594 lt!70074) #b01111111111111111111111111111110))))

(declare-fun b!133996 () Bool)

(assert (=> b!133996 (and (bvsge (index!3274 lt!70074) #b00000000000000000000000000000000) (bvslt (index!3274 lt!70074) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun res!64436 () Bool)

(assert (=> b!133996 (= res!64436 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!70074)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> b!133996 (=> res!64436 e!87276)))

(assert (=> b!133996 (= e!87274 e!87276)))

(assert (= (and d!40987 c!24898) b!133993))

(assert (= (and d!40987 (not c!24898)) b!133990))

(assert (= (and b!133990 c!24899) b!133992))

(assert (= (and b!133990 (not c!24899)) b!133994))

(assert (= (and d!40987 c!24897) b!133995))

(assert (= (and d!40987 (not c!24897)) b!133991))

(assert (= (and b!133991 res!64437) b!133996))

(assert (= (and b!133996 (not res!64436)) b!133989))

(assert (= (and b!133989 (not res!64438)) b!133988))

(declare-fun m!158497 () Bool)

(assert (=> b!133989 m!158497))

(assert (=> d!40987 m!156301))

(declare-fun m!158499 () Bool)

(assert (=> d!40987 m!158499))

(assert (=> d!40987 m!155855))

(assert (=> b!133988 m!158497))

(assert (=> b!133994 m!156301))

(declare-fun m!158501 () Bool)

(assert (=> b!133994 m!158501))

(assert (=> b!133994 m!158501))

(assert (=> b!133994 m!156017))

(declare-fun m!158503 () Bool)

(assert (=> b!133994 m!158503))

(assert (=> b!133996 m!158497))

(assert (=> d!40331 d!40987))

(declare-fun d!40989 () Bool)

(declare-fun lt!70077 () (_ BitVec 32))

(declare-fun lt!70076 () (_ BitVec 32))

(assert (=> d!40989 (= lt!70077 (bvmul (bvxor lt!70076 (bvlshr lt!70076 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!40989 (= lt!70076 ((_ extract 31 0) (bvand (bvxor (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (bvlshr (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!40989 (and (bvsge (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000000) (let ((res!64076 (let ((h!2314 ((_ extract 31 0) (bvand (bvxor (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (bvlshr (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15697 (bvmul (bvxor h!2314 (bvlshr h!2314 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15697 (bvlshr x!15697 #b00000000000000000000000000001101)) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))) (and (bvslt res!64076 (bvadd (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000001)) (bvsge res!64076 #b00000000000000000000000000000000))))))

(assert (=> d!40989 (= (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (bvand (bvxor lt!70077 (bvlshr lt!70077 #b00000000000000000000000000001101)) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(assert (=> d!40331 d!40989))

(assert (=> d!40331 d!40269))

(declare-fun b!133997 () Bool)

(declare-fun e!87278 () Bool)

(declare-fun call!14779 () Bool)

(assert (=> b!133997 (= e!87278 call!14779)))

(declare-fun b!133998 () Bool)

(declare-fun e!87279 () Bool)

(assert (=> b!133998 (= e!87279 e!87278)))

(declare-fun lt!70078 () (_ BitVec 64))

(assert (=> b!133998 (= lt!70078 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!70080 () Unit!4132)

(assert (=> b!133998 (= lt!70080 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!70078 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!133998 (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!70078 #b00000000000000000000000000000000)))

(declare-fun lt!70079 () Unit!4132)

(assert (=> b!133998 (= lt!70079 lt!70080)))

(declare-fun res!64440 () Bool)

(assert (=> b!133998 (= res!64440 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (Found!278 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!133998 (=> (not res!64440) (not e!87278))))

(declare-fun d!40991 () Bool)

(declare-fun res!64439 () Bool)

(declare-fun e!87280 () Bool)

(assert (=> d!40991 (=> res!64439 e!87280)))

(assert (=> d!40991 (= res!64439 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!40991 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) e!87280)))

(declare-fun b!133999 () Bool)

(assert (=> b!133999 (= e!87280 e!87279)))

(declare-fun c!24900 () Bool)

(assert (=> b!133999 (= c!24900 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134000 () Bool)

(assert (=> b!134000 (= e!87279 call!14779)))

(declare-fun bm!14776 () Bool)

(assert (=> bm!14776 (= call!14779 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(assert (= (and d!40991 (not res!64439)) b!133999))

(assert (= (and b!133999 c!24900) b!133998))

(assert (= (and b!133999 (not c!24900)) b!134000))

(assert (= (and b!133998 res!64440) b!133997))

(assert (= (or b!133997 b!134000) bm!14776))

(assert (=> b!133998 m!157863))

(declare-fun m!158505 () Bool)

(assert (=> b!133998 m!158505))

(declare-fun m!158507 () Bool)

(assert (=> b!133998 m!158507))

(assert (=> b!133998 m!157863))

(declare-fun m!158509 () Bool)

(assert (=> b!133998 m!158509))

(assert (=> b!133999 m!157863))

(assert (=> b!133999 m!157863))

(assert (=> b!133999 m!157865))

(declare-fun m!158511 () Bool)

(assert (=> bm!14776 m!158511))

(assert (=> bm!14674 d!40991))

(declare-fun condMapEmpty!4657 () Bool)

(declare-fun mapDefault!4657 () ValueCell!1094)

(assert (=> mapNonEmpty!4656 (= condMapEmpty!4657 (= mapRest!4656 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4657)))))

(declare-fun e!87282 () Bool)

(declare-fun mapRes!4657 () Bool)

(assert (=> mapNonEmpty!4656 (= tp!11226 (and e!87282 mapRes!4657))))

(declare-fun b!134001 () Bool)

(declare-fun e!87281 () Bool)

(assert (=> b!134001 (= e!87281 tp_is_empty!2875)))

(declare-fun b!134002 () Bool)

(assert (=> b!134002 (= e!87282 tp_is_empty!2875)))

(declare-fun mapIsEmpty!4657 () Bool)

(assert (=> mapIsEmpty!4657 mapRes!4657))

(declare-fun mapNonEmpty!4657 () Bool)

(declare-fun tp!11227 () Bool)

(assert (=> mapNonEmpty!4657 (= mapRes!4657 (and tp!11227 e!87281))))

(declare-fun mapRest!4657 () (Array (_ BitVec 32) ValueCell!1094))

(declare-fun mapKey!4657 () (_ BitVec 32))

(declare-fun mapValue!4657 () ValueCell!1094)

(assert (=> mapNonEmpty!4657 (= mapRest!4656 (store mapRest!4657 mapKey!4657 mapValue!4657))))

(assert (= (and mapNonEmpty!4656 condMapEmpty!4657) mapIsEmpty!4657))

(assert (= (and mapNonEmpty!4656 (not condMapEmpty!4657)) mapNonEmpty!4657))

(assert (= (and mapNonEmpty!4657 ((_ is ValueCellFull!1094) mapValue!4657)) b!134001))

(assert (= (and mapNonEmpty!4656 ((_ is ValueCellFull!1094) mapDefault!4657)) b!134002))

(declare-fun m!158513 () Bool)

(assert (=> mapNonEmpty!4657 m!158513))

(declare-fun condMapEmpty!4658 () Bool)

(declare-fun mapDefault!4658 () ValueCell!1094)

(assert (=> mapNonEmpty!4655 (= condMapEmpty!4658 (= mapRest!4655 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4658)))))

(declare-fun e!87284 () Bool)

(declare-fun mapRes!4658 () Bool)

(assert (=> mapNonEmpty!4655 (= tp!11225 (and e!87284 mapRes!4658))))

(declare-fun b!134003 () Bool)

(declare-fun e!87283 () Bool)

(assert (=> b!134003 (= e!87283 tp_is_empty!2875)))

(declare-fun b!134004 () Bool)

(assert (=> b!134004 (= e!87284 tp_is_empty!2875)))

(declare-fun mapIsEmpty!4658 () Bool)

(assert (=> mapIsEmpty!4658 mapRes!4658))

(declare-fun mapNonEmpty!4658 () Bool)

(declare-fun tp!11228 () Bool)

(assert (=> mapNonEmpty!4658 (= mapRes!4658 (and tp!11228 e!87283))))

(declare-fun mapKey!4658 () (_ BitVec 32))

(declare-fun mapValue!4658 () ValueCell!1094)

(declare-fun mapRest!4658 () (Array (_ BitVec 32) ValueCell!1094))

(assert (=> mapNonEmpty!4658 (= mapRest!4655 (store mapRest!4658 mapKey!4658 mapValue!4658))))

(assert (= (and mapNonEmpty!4655 condMapEmpty!4658) mapIsEmpty!4658))

(assert (= (and mapNonEmpty!4655 (not condMapEmpty!4658)) mapNonEmpty!4658))

(assert (= (and mapNonEmpty!4658 ((_ is ValueCellFull!1094) mapValue!4658)) b!134003))

(assert (= (and mapNonEmpty!4655 ((_ is ValueCellFull!1094) mapDefault!4658)) b!134004))

(declare-fun m!158515 () Bool)

(assert (=> mapNonEmpty!4658 m!158515))

(declare-fun b_lambda!5953 () Bool)

(assert (= b_lambda!5929 (or (and b!132380 b_free!2917) (and b!132384 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))))) b_lambda!5953)))

(declare-fun b_lambda!5955 () Bool)

(assert (= b_lambda!5945 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5955)))

(declare-fun b_lambda!5957 () Bool)

(assert (= b_lambda!5937 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5957)))

(declare-fun b_lambda!5959 () Bool)

(assert (= b_lambda!5935 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5959)))

(declare-fun b_lambda!5961 () Bool)

(assert (= b_lambda!5951 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5961)))

(declare-fun b_lambda!5963 () Bool)

(assert (= b_lambda!5927 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5963)))

(declare-fun b_lambda!5965 () Bool)

(assert (= b_lambda!5931 (or (and b!132380 b_free!2917) (and b!132384 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))))) b_lambda!5965)))

(declare-fun b_lambda!5967 () Bool)

(assert (= b_lambda!5923 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5967)))

(declare-fun b_lambda!5969 () Bool)

(assert (= b_lambda!5941 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5969)))

(declare-fun b_lambda!5971 () Bool)

(assert (= b_lambda!5925 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5971)))

(declare-fun b_lambda!5973 () Bool)

(assert (= b_lambda!5921 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5973)))

(declare-fun b_lambda!5975 () Bool)

(assert (= b_lambda!5947 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5975)))

(declare-fun b_lambda!5977 () Bool)

(assert (= b_lambda!5933 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5977)))

(declare-fun b_lambda!5979 () Bool)

(assert (= b_lambda!5939 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5979)))

(declare-fun b_lambda!5981 () Bool)

(assert (= b_lambda!5943 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!5981)))

(check-sat (not bm!14725) (not b!133472) (not d!40695) (not b!133367) (not d!40579) (not bm!14695) (not d!40609) (not bm!14713) (not b!133681) (not b!133312) (not b!133823) (not b!133587) (not d!40699) (not d!40945) (not b!133465) (not b!133692) (not d!40711) (not b!133196) (not d!40605) (not b!133905) (not b!133132) (not b_lambda!5919) (not d!40635) (not b!133722) (not b!133168) (not d!40893) (not b!133319) (not bm!14749) (not d!40559) (not b!133492) (not b!133713) (not b!133338) (not bm!14714) (not b!133255) (not b!133248) (not b!133752) (not b!133534) (not d!40687) (not d!40421) (not b!133159) (not b!133334) (not d!40525) (not d!40823) (not b!133596) (not d!40871) (not b!133876) (not b!133715) (not b!133635) (not bm!14717) (not b!133386) (not bm!14764) (not b!133606) (not b!133816) (not b!133885) (not d!40943) (not b!133755) (not b!133359) (not b!133841) (not b!133818) (not b!133675) (not b!133945) (not d!40543) (not b!133557) (not d!40499) (not d!40785) (not b!133511) (not b!133323) (not b!133499) (not b_next!2917) (not b_lambda!5895) (not b!133483) (not b!133983) (not b!133543) (not b!133209) (not b!133821) (not bm!14734) (not b!133920) (not b!133404) (not b_lambda!5967) (not b!133940) (not b!133737) (not b!133883) (not b!133241) (not b!133473) (not d!40759) (not b!133938) (not b!133686) (not bm!14755) (not b!133994) (not b!133718) (not b!133881) (not b_lambda!5963) (not d!40645) (not d!40705) (not d!40663) (not d!40565) (not b!133637) (not d!40979) (not d!40487) (not b!133369) (not bm!14774) (not b!133980) (not b!133678) (not bm!14704) (not b!133301) (not b!133649) (not b!133314) (not b!133903) (not b!133922) (not b!133482) (not b!133249) (not b!133163) (not d!40837) (not b!133595) (not d!40439) (not b!133208) (not b!133188) (not d!40987) (not b!133893) (not bm!14758) (not b!133703) (not b!133798) (not b!133401) (not b!133760) (not b!133676) (not b!133617) (not d!40827) (not b!133939) (not b!133625) (not b!133434) (not b!133355) (not b!133582) (not b!133400) (not d!40657) (not b!133342) (not b!133437) (not d!40597) (not b!133505) (not d!40735) tp_is_empty!2875 (not b!133230) (not d!40743) (not d!40821) (not b!133267) (not b!133845) (not b_lambda!5891) (not b!133572) (not b!133970) (not b!133398) (not d!40489) (not bm!14763) (not bm!14701) (not d!40917) (not d!40747) (not d!40637) (not d!40627) (not b!133608) (not bm!14719) (not b!133908) (not b!133500) (not bm!14768) (not d!40727) (not d!40587) (not b!133547) (not b!133258) (not b!133916) (not d!40707) (not d!40677) (not b!133262) (not b_lambda!5975) (not d!40575) (not b!133963) (not b!133913) (not b!133936) (not b_lambda!5973) (not b!133768) (not b!133947) (not b!133951) (not d!40715) (not b!133761) (not bm!14728) (not b!133837) (not b!133518) (not b!133134) (not b!133613) (not d!40791) (not d!40673) (not bm!14708) (not b!133194) (not b!133757) (not b!133944) (not d!40451) (not b!133417) (not d!40703) (not b!133539) (not b!133320) (not b!133612) (not d!40457) (not b!133904) (not d!40927) (not b!133712) (not b!133773) (not d!40629) (not d!40741) (not b!133734) (not b!133851) (not b!133237) (not d!40601) (not b!133443) (not b!133474) (not b_lambda!5957) (not d!40709) (not d!40739) (not b!133199) (not b_lambda!5971) (not bm!14733) (not d!40723) (not d!40749) (not b!133573) (not d!40591) (not b!133514) (not b!133476) (not b!133178) (not b!133806) (not d!40855) (not b!133576) (not b!133195) (not b!133978) (not b!133477) (not d!40517) (not b!133670) (not b!133931) (not d!40877) (not b!133646) (not b!133830) (not d!40751) (not b!133336) (not b_lambda!5911) (not d!40611) (not d!40463) (not b!133389) (not d!40763) (not b!133721) (not d!40971) (not d!40603) (not b!133873) b_and!8293 (not d!40479) (not d!40977) (not b!133825) (not b!133720) (not b!133614) (not bm!14760) (not b!133403) (not b!133295) (not b!133517) (not d!40833) (not bm!14692) (not b!133859) (not b!133758) (not d!40473) (not d!40809) (not b!133433) (not b!133706) (not bm!14699) (not bm!14754) (not b_lambda!5981) (not d!40461) (not b!133655) (not b!133257) (not b!133349) (not b!133299) (not b!133602) (not d!40625) (not b!133512) (not d!40475) (not d!40685) (not b!133469) (not d!40713) (not d!40799) (not b!133385) (not b!133436) (not b_lambda!5949) (not b!133590) (not bm!14744) (not b!133914) (not b!133679) (not b_lambda!5979) (not d!40643) (not d!40887) (not b!133538) (not b!133288) (not d!40585) (not b!133185) (not b!133610) (not b!133689) (not b!133843) (not b!133344) (not b!133243) (not d!40471) (not b!133999) (not b!133348) (not b!133197) (not b!133636) (not d!40957) (not d!40721) (not b!133501) (not b!133890) (not bm!14705) (not d!40693) (not bm!14771) (not d!40975) (not b!133468) (not b!133641) (not b!133620) (not b_lambda!5969) (not b!133665) (not b!133848) (not b!133900) (not d!40533) (not b!133754) (not b!133245) (not b!133298) (not d!40725) (not d!40683) (not b!133525) (not b!133485) (not b!133560) (not b!133373) (not d!40545) (not b!133799) (not d!40875) (not d!40965) (not b!133801) (not b!133531) (not d!40697) (not b_lambda!5915) (not b!133627) (not b!133424) (not b!133651) (not d!40865) (not bm!14746) (not b!133639) (not b!133660) (not d!40873) (not b!133242) (not b!133948) (not b!133667) (not d!40775) (not b!133471) (not b!133260) (not bm!14722) (not b!133929) (not d!40717) (not b!133600) (not b!133849) (not b!133809) (not b!133603) (not d!40431) (not d!40593) (not b!133566) (not d!40771) (not bm!14691) (not d!40891) (not b!133454) (not b!133331) (not b_lambda!5909) (not d!40615) (not d!40501) (not b_lambda!5917) (not d!40613) (not d!40829) (not bm!14690) (not b!133462) (not b!133958) (not b!133698) (not b!133986) (not d!40453) (not b_lambda!5953) (not b!133871) (not b!133930) (not bm!14706) (not b!133494) (not d!40535) (not b!133808) (not b!133638) (not b!133652) (not b!133508) (not d!40665) (not b!133748) (not b!133874) (not b!133622) (not b!133921) (not bm!14743) (not d!40651) (not b!133942) (not bm!14697) (not b!133586) (not b!133897) (not b!133515) (not d!40755) (not b!133828) (not b!133609) (not b!133882) (not b!133694) (not d!40429) (not d!40935) (not b!133337) (not bm!14737) (not b!133911) (not b!133869) (not d!40967) (not d!40661) (not bm!14740) b_and!8295 (not d!40537) (not b!133633) (not b!133350) (not d!40915) (not b!133493) (not b!133729) (not d!40845) (not d!40507) (not d!40811) (not d!40895) (not b!133486) (not b!133393) (not b!133341) (not d!40745) (not bm!14756) (not b!133934) (not d!40911) (not d!40467) (not d!40561) (not b!133998) (not d!40781) (not b!133445) (not b!133598) (not d!40867) (not d!40655) (not b!133864) (not d!40433) (not d!40933) (not d!40969) (not b!133570) (not d!40951) (not b!133317) (not b!133629) (not b!133826) (not d!40733) (not b!133696) (not b!133546) (not b!133340) (not b!133244) (not b!133448) (not d!40505) (not b!133361) (not d!40885) (not b!133684) (not b!133419) (not d!40797) (not b!133933) (not d!40765) (not b!133673) (not b!133852) (not d!40919) (not b!133261) (not b!133467) (not b!133450) (not b!133489) (not b!133174) (not d!40491) (not b!133246) (not b!133918) (not d!40557) (not d!40813) (not d!40583) (not b!133420) (not b!133740) (not d!40859) (not b!133451) (not b!133588) (not b!133490) (not bm!14729) (not b!133805) (not d!40941) (not b!133672) (not b!133504) (not b!133562) (not b!133366) (not b!133846) (not d!40737) (not d!40719) (not d!40825) (not d!40485) (not b!133459) (not bm!14718) (not b!133552) (not b!133530) (not b!133813) (not b!133310) (not b!133832) (not b!133442) (not b!133487) (not b!133895) (not d!40701) (not d!40981) (not b!133345) (not b!133290) (not b!133965) (not b!133202) (not b_lambda!5961) (not d!40931) (not d!40689) (not d!40595) (not d!40551) (not d!40925) (not d!40729) (not b!133266) (not bm!14720) (not b!133743) (not d!40949) (not d!40569) (not b!133497) (not d!40853) (not b!133644) (not d!40567) (not b!133540) (not d!40795) (not b_lambda!5977) (not mapNonEmpty!4657) (not b!133653) (not d!40521) (not b!133411) (not b!133370) (not b!133739) (not d!40589) (not d!40777) (not d!40831) (not b!133585) (not b!133709) (not b_lambda!5959) (not b!133834) (not b!133591) (not bm!14726) (not b!133452) (not d!40731) (not b!133669) (not d!40671) (not b!133569) (not d!40819) (not b!133537) (not b!133695) (not b!133555) (not d!40789) (not d!40649) (not b!133732) (not d!40753) (not d!40921) (not b!133479) (not b!133380) (not d!40883) (not d!40835) (not b!133259) (not b!133191) (not b!133397) (not bm!14712) (not b!133687) (not b!133190) (not b!133232) (not d!40937) (not bm!14757) (not b!133950) (not d!40581) (not bm!14767) (not b!133941) (not b_lambda!5955) (not b!133589) (not d!40539) (not bm!14769) (not b!133165) (not bm!14687) (not d!40905) (not b!133593) (not b!133632) (not b!133392) (not b!133283) (not b!133395) (not d!40953) (not b!133564) (not b!133867) (not b!133328) (not b!133599) (not b_lambda!5965) (not bm!14711) (not d!40757) (not b!133372) (not b!133628) (not d!40929) (not d!40619) (not d!40617) (not b!133481) (not b!133621) (not d!40963) (not d!40443) (not d!40903) (not d!40817) (not b!133741) (not b_lambda!5913) (not d!40939) (not b!133642) (not b!133269) (not d!40607) (not b!133303) (not b!133917) (not d!40631) (not b!133803) (not b!133567) (not b!133616) (not b!133550) (not b!133306) (not d!40503) (not b!133631) (not b!133724) (not b!133751) (not d!40599) (not d!40555) (not d!40659) (not bm!14696) (not b!133192) (not d!40961) (not bm!14730) (not d!40779) (not bm!14698) (not b!133131) (not d!40553) (not d!40495) (not b!133416) (not bm!14727) (not b!133643) (not b!133358) (not bm!14776) (not b!133128) (not mapNonEmpty!4658) (not b!133592) (not b!133321) (not b!133910) (not b!133879) (not b!133503) (not b!133981) (not b!133575) (not d!40529) (not b!133292) (not d!40805) (not b_next!2919) (not bm!14775) (not d!40923) (not d!40481))
(check-sat b_and!8293 b_and!8295 (not b_next!2917) (not b_next!2919))
(get-model)

(declare-fun c!24901 () Bool)

(declare-fun d!40993 () Bool)

(assert (=> d!40993 (= c!24901 (and ((_ is Cons!1706) (t!6152 lt!69333)) (= (_1!1303 (h!2311 (t!6152 lt!69333))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87285 () Option!176)

(assert (=> d!40993 (= (getValueByKey!170 (t!6152 lt!69333) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87285)))

(declare-fun b!134007 () Bool)

(declare-fun e!87286 () Option!176)

(assert (=> b!134007 (= e!87286 (getValueByKey!170 (t!6152 (t!6152 lt!69333)) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!134006 () Bool)

(assert (=> b!134006 (= e!87285 e!87286)))

(declare-fun c!24902 () Bool)

(assert (=> b!134006 (= c!24902 (and ((_ is Cons!1706) (t!6152 lt!69333)) (not (= (_1!1303 (h!2311 (t!6152 lt!69333))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!134005 () Bool)

(assert (=> b!134005 (= e!87285 (Some!175 (_2!1303 (h!2311 (t!6152 lt!69333)))))))

(declare-fun b!134008 () Bool)

(assert (=> b!134008 (= e!87286 None!174)))

(assert (= (and d!40993 c!24901) b!134005))

(assert (= (and d!40993 (not c!24901)) b!134006))

(assert (= (and b!134006 c!24902) b!134007))

(assert (= (and b!134006 (not c!24902)) b!134008))

(declare-fun m!158517 () Bool)

(assert (=> b!134007 m!158517))

(assert (=> b!133317 d!40993))

(declare-fun d!40995 () Bool)

(assert (=> d!40995 (isDefined!124 (getValueByKey!170 (toList!851 lt!69496) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun lt!70081 () Unit!4132)

(assert (=> d!40995 (= lt!70081 (choose!826 (toList!851 lt!69496) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87287 () Bool)

(assert (=> d!40995 e!87287))

(declare-fun res!64441 () Bool)

(assert (=> d!40995 (=> (not res!64441) (not e!87287))))

(assert (=> d!40995 (= res!64441 (isStrictlySorted!317 (toList!851 lt!69496)))))

(assert (=> d!40995 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69496) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!70081)))

(declare-fun b!134009 () Bool)

(assert (=> b!134009 (= e!87287 (containsKey!174 (toList!851 lt!69496) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!40995 res!64441) b!134009))

(assert (=> d!40995 m!156669))

(assert (=> d!40995 m!156669))

(assert (=> d!40995 m!157837))

(declare-fun m!158519 () Bool)

(assert (=> d!40995 m!158519))

(declare-fun m!158521 () Bool)

(assert (=> d!40995 m!158521))

(assert (=> b!134009 m!157833))

(assert (=> b!133644 d!40995))

(declare-fun d!40997 () Bool)

(assert (=> d!40997 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69496) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69496) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))))

(declare-fun bs!5553 () Bool)

(assert (= bs!5553 d!40997))

(assert (=> bs!5553 m!156669))

(declare-fun m!158523 () Bool)

(assert (=> bs!5553 m!158523))

(assert (=> b!133644 d!40997))

(assert (=> b!133644 d!40801))

(declare-fun d!40999 () Bool)

(declare-fun c!24905 () Bool)

(assert (=> d!40999 (= c!24905 ((_ is Nil!1707) (toList!851 lt!69519)))))

(declare-fun e!87290 () (InoxSet tuple2!2584))

(assert (=> d!40999 (= (content!133 (toList!851 lt!69519)) e!87290)))

(declare-fun b!134014 () Bool)

(assert (=> b!134014 (= e!87290 ((as const (Array tuple2!2584 Bool)) false))))

(declare-fun b!134015 () Bool)

(assert (=> b!134015 (= e!87290 ((_ map or) (store ((as const (Array tuple2!2584 Bool)) false) (h!2311 (toList!851 lt!69519)) true) (content!133 (t!6152 (toList!851 lt!69519)))))))

(assert (= (and d!40999 c!24905) b!134014))

(assert (= (and d!40999 (not c!24905)) b!134015))

(declare-fun m!158525 () Bool)

(assert (=> b!134015 m!158525))

(declare-fun m!158527 () Bool)

(assert (=> b!134015 m!158527))

(assert (=> d!40677 d!40999))

(declare-fun d!41001 () Bool)

(declare-fun e!87291 () Bool)

(assert (=> d!41001 e!87291))

(declare-fun res!64442 () Bool)

(assert (=> d!41001 (=> res!64442 e!87291)))

(declare-fun lt!70083 () Bool)

(assert (=> d!41001 (= res!64442 (not lt!70083))))

(declare-fun lt!70085 () Bool)

(assert (=> d!41001 (= lt!70083 lt!70085)))

(declare-fun lt!70082 () Unit!4132)

(declare-fun e!87292 () Unit!4132)

(assert (=> d!41001 (= lt!70082 e!87292)))

(declare-fun c!24906 () Bool)

(assert (=> d!41001 (= c!24906 lt!70085)))

(assert (=> d!41001 (= lt!70085 (containsKey!174 (toList!851 lt!69838) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))

(assert (=> d!41001 (= (contains!886 lt!69838 (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))) lt!70083)))

(declare-fun b!134016 () Bool)

(declare-fun lt!70084 () Unit!4132)

(assert (=> b!134016 (= e!87292 lt!70084)))

(assert (=> b!134016 (= lt!70084 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69838) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))

(assert (=> b!134016 (isDefined!124 (getValueByKey!170 (toList!851 lt!69838) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))

(declare-fun b!134017 () Bool)

(declare-fun Unit!4193 () Unit!4132)

(assert (=> b!134017 (= e!87292 Unit!4193)))

(declare-fun b!134018 () Bool)

(assert (=> b!134018 (= e!87291 (isDefined!124 (getValueByKey!170 (toList!851 lt!69838) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))))))

(assert (= (and d!41001 c!24906) b!134016))

(assert (= (and d!41001 (not c!24906)) b!134017))

(assert (= (and d!41001 (not res!64442)) b!134018))

(declare-fun m!158529 () Bool)

(assert (=> d!41001 m!158529))

(declare-fun m!158531 () Bool)

(assert (=> b!134016 m!158531))

(assert (=> b!134016 m!157733))

(assert (=> b!134016 m!157733))

(declare-fun m!158533 () Bool)

(assert (=> b!134016 m!158533))

(assert (=> b!134018 m!157733))

(assert (=> b!134018 m!157733))

(assert (=> b!134018 m!158533))

(assert (=> d!40731 d!41001))

(declare-fun c!24907 () Bool)

(declare-fun d!41003 () Bool)

(assert (=> d!41003 (= c!24907 (and ((_ is Cons!1706) lt!69836) (= (_1!1303 (h!2311 lt!69836)) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))))))

(declare-fun e!87293 () Option!176)

(assert (=> d!41003 (= (getValueByKey!170 lt!69836 (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))) e!87293)))

(declare-fun b!134021 () Bool)

(declare-fun e!87294 () Option!176)

(assert (=> b!134021 (= e!87294 (getValueByKey!170 (t!6152 lt!69836) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))

(declare-fun b!134020 () Bool)

(assert (=> b!134020 (= e!87293 e!87294)))

(declare-fun c!24908 () Bool)

(assert (=> b!134020 (= c!24908 (and ((_ is Cons!1706) lt!69836) (not (= (_1!1303 (h!2311 lt!69836)) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))))

(declare-fun b!134019 () Bool)

(assert (=> b!134019 (= e!87293 (Some!175 (_2!1303 (h!2311 lt!69836))))))

(declare-fun b!134022 () Bool)

(assert (=> b!134022 (= e!87294 None!174)))

(assert (= (and d!41003 c!24907) b!134019))

(assert (= (and d!41003 (not c!24907)) b!134020))

(assert (= (and b!134020 c!24908) b!134021))

(assert (= (and b!134020 (not c!24908)) b!134022))

(declare-fun m!158535 () Bool)

(assert (=> b!134021 m!158535))

(assert (=> d!40731 d!41003))

(declare-fun d!41005 () Bool)

(assert (=> d!41005 (= (getValueByKey!170 lt!69836 (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))

(declare-fun lt!70086 () Unit!4132)

(assert (=> d!41005 (= lt!70086 (choose!834 lt!69836 (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))

(declare-fun e!87295 () Bool)

(assert (=> d!41005 e!87295))

(declare-fun res!64443 () Bool)

(assert (=> d!41005 (=> (not res!64443) (not e!87295))))

(assert (=> d!41005 (= res!64443 (isStrictlySorted!317 lt!69836))))

(assert (=> d!41005 (= (lemmaContainsTupThenGetReturnValue!88 lt!69836 (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))) lt!70086)))

(declare-fun b!134023 () Bool)

(declare-fun res!64444 () Bool)

(assert (=> b!134023 (=> (not res!64444) (not e!87295))))

(assert (=> b!134023 (= res!64444 (containsKey!174 lt!69836 (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))

(declare-fun b!134024 () Bool)

(assert (=> b!134024 (= e!87295 (contains!889 lt!69836 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))))))

(assert (= (and d!41005 res!64443) b!134023))

(assert (= (and b!134023 res!64444) b!134024))

(assert (=> d!41005 m!157727))

(declare-fun m!158537 () Bool)

(assert (=> d!41005 m!158537))

(declare-fun m!158539 () Bool)

(assert (=> d!41005 m!158539))

(declare-fun m!158541 () Bool)

(assert (=> b!134023 m!158541))

(declare-fun m!158543 () Bool)

(assert (=> b!134024 m!158543))

(assert (=> d!40731 d!41005))

(declare-fun b!134025 () Bool)

(declare-fun e!87300 () List!1710)

(assert (=> b!134025 (= e!87300 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69213)) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))

(declare-fun b!134026 () Bool)

(declare-fun e!87299 () List!1710)

(declare-fun call!14782 () List!1710)

(assert (=> b!134026 (= e!87299 call!14782)))

(declare-fun b!134027 () Bool)

(declare-fun res!64446 () Bool)

(declare-fun e!87297 () Bool)

(assert (=> b!134027 (=> (not res!64446) (not e!87297))))

(declare-fun lt!70087 () List!1710)

(assert (=> b!134027 (= res!64446 (containsKey!174 lt!70087 (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))

(declare-fun bm!14777 () Bool)

(declare-fun c!24910 () Bool)

(assert (=> bm!14777 (= call!14782 ($colon$colon!91 e!87300 (ite c!24910 (h!2311 (toList!851 lt!69213)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))))

(declare-fun c!24911 () Bool)

(assert (=> bm!14777 (= c!24911 c!24910)))

(declare-fun c!24909 () Bool)

(declare-fun b!134028 () Bool)

(declare-fun c!24912 () Bool)

(assert (=> b!134028 (= e!87300 (ite c!24909 (t!6152 (toList!851 lt!69213)) (ite c!24912 (Cons!1706 (h!2311 (toList!851 lt!69213)) (t!6152 (toList!851 lt!69213))) Nil!1707)))))

(declare-fun d!41007 () Bool)

(assert (=> d!41007 e!87297))

(declare-fun res!64445 () Bool)

(assert (=> d!41007 (=> (not res!64445) (not e!87297))))

(assert (=> d!41007 (= res!64445 (isStrictlySorted!317 lt!70087))))

(assert (=> d!41007 (= lt!70087 e!87299)))

(assert (=> d!41007 (= c!24910 (and ((_ is Cons!1706) (toList!851 lt!69213)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69213))) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))))))

(assert (=> d!41007 (isStrictlySorted!317 (toList!851 lt!69213))))

(assert (=> d!41007 (= (insertStrictlySorted!91 (toList!851 lt!69213) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))) lt!70087)))

(declare-fun b!134029 () Bool)

(declare-fun e!87296 () List!1710)

(assert (=> b!134029 (= e!87299 e!87296)))

(assert (=> b!134029 (= c!24909 (and ((_ is Cons!1706) (toList!851 lt!69213)) (= (_1!1303 (h!2311 (toList!851 lt!69213))) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))))))

(declare-fun b!134030 () Bool)

(declare-fun e!87298 () List!1710)

(declare-fun call!14780 () List!1710)

(assert (=> b!134030 (= e!87298 call!14780)))

(declare-fun b!134031 () Bool)

(declare-fun call!14781 () List!1710)

(assert (=> b!134031 (= e!87296 call!14781)))

(declare-fun b!134032 () Bool)

(assert (=> b!134032 (= e!87297 (contains!889 lt!70087 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))))))

(declare-fun bm!14778 () Bool)

(assert (=> bm!14778 (= call!14781 call!14782)))

(declare-fun bm!14779 () Bool)

(assert (=> bm!14779 (= call!14780 call!14781)))

(declare-fun b!134033 () Bool)

(assert (=> b!134033 (= c!24912 (and ((_ is Cons!1706) (toList!851 lt!69213)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69213))) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))))))

(assert (=> b!134033 (= e!87296 e!87298)))

(declare-fun b!134034 () Bool)

(assert (=> b!134034 (= e!87298 call!14780)))

(assert (= (and d!41007 c!24910) b!134026))

(assert (= (and d!41007 (not c!24910)) b!134029))

(assert (= (and b!134029 c!24909) b!134031))

(assert (= (and b!134029 (not c!24909)) b!134033))

(assert (= (and b!134033 c!24912) b!134034))

(assert (= (and b!134033 (not c!24912)) b!134030))

(assert (= (or b!134034 b!134030) bm!14779))

(assert (= (or b!134031 bm!14779) bm!14778))

(assert (= (or b!134026 bm!14778) bm!14777))

(assert (= (and bm!14777 c!24911) b!134025))

(assert (= (and bm!14777 (not c!24911)) b!134028))

(assert (= (and d!41007 res!64445) b!134027))

(assert (= (and b!134027 res!64446) b!134032))

(declare-fun m!158545 () Bool)

(assert (=> b!134032 m!158545))

(declare-fun m!158547 () Bool)

(assert (=> b!134027 m!158547))

(declare-fun m!158549 () Bool)

(assert (=> b!134025 m!158549))

(declare-fun m!158551 () Bool)

(assert (=> d!41007 m!158551))

(declare-fun m!158553 () Bool)

(assert (=> d!41007 m!158553))

(declare-fun m!158555 () Bool)

(assert (=> bm!14777 m!158555))

(assert (=> d!40731 d!41007))

(assert (=> b!133512 d!40519))

(declare-fun d!41009 () Bool)

(assert (=> d!41009 (isDefined!124 (getValueByKey!170 (toList!851 lt!69335) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun lt!70088 () Unit!4132)

(assert (=> d!41009 (= lt!70088 (choose!826 (toList!851 lt!69335) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun e!87301 () Bool)

(assert (=> d!41009 e!87301))

(declare-fun res!64447 () Bool)

(assert (=> d!41009 (=> (not res!64447) (not e!87301))))

(assert (=> d!41009 (= res!64447 (isStrictlySorted!317 (toList!851 lt!69335)))))

(assert (=> d!41009 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69335) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!70088)))

(declare-fun b!134035 () Bool)

(assert (=> b!134035 (= e!87301 (containsKey!174 (toList!851 lt!69335) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!41009 res!64447) b!134035))

(assert (=> d!41009 m!156439))

(assert (=> d!41009 m!156439))

(assert (=> d!41009 m!156983))

(declare-fun m!158557 () Bool)

(assert (=> d!41009 m!158557))

(declare-fun m!158559 () Bool)

(assert (=> d!41009 m!158559))

(assert (=> b!134035 m!156979))

(assert (=> b!133312 d!41009))

(declare-fun d!41011 () Bool)

(assert (=> d!41011 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69335) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69335) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun bs!5554 () Bool)

(assert (= bs!5554 d!41011))

(assert (=> bs!5554 m!156439))

(declare-fun m!158561 () Bool)

(assert (=> bs!5554 m!158561))

(assert (=> b!133312 d!41011))

(assert (=> b!133312 d!40647))

(declare-fun d!41013 () Bool)

(declare-fun c!24913 () Bool)

(assert (=> d!41013 (= c!24913 (and ((_ is Cons!1706) (t!6152 lt!69494)) (= (_1!1303 (h!2311 (t!6152 lt!69494))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun e!87302 () Option!176)

(assert (=> d!41013 (= (getValueByKey!170 (t!6152 lt!69494) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) e!87302)))

(declare-fun b!134038 () Bool)

(declare-fun e!87303 () Option!176)

(assert (=> b!134038 (= e!87303 (getValueByKey!170 (t!6152 (t!6152 lt!69494)) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!134037 () Bool)

(assert (=> b!134037 (= e!87302 e!87303)))

(declare-fun c!24914 () Bool)

(assert (=> b!134037 (= c!24914 (and ((_ is Cons!1706) (t!6152 lt!69494)) (not (= (_1!1303 (h!2311 (t!6152 lt!69494))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))))

(declare-fun b!134036 () Bool)

(assert (=> b!134036 (= e!87302 (Some!175 (_2!1303 (h!2311 (t!6152 lt!69494)))))))

(declare-fun b!134039 () Bool)

(assert (=> b!134039 (= e!87303 None!174)))

(assert (= (and d!41013 c!24913) b!134036))

(assert (= (and d!41013 (not c!24913)) b!134037))

(assert (= (and b!134037 c!24914) b!134038))

(assert (= (and b!134037 (not c!24914)) b!134039))

(declare-fun m!158563 () Bool)

(assert (=> b!134038 m!158563))

(assert (=> b!133649 d!41013))

(declare-fun d!41015 () Bool)

(declare-fun c!24915 () Bool)

(assert (=> d!41015 (= c!24915 ((_ is Nil!1707) (toList!851 lt!69327)))))

(declare-fun e!87304 () (InoxSet tuple2!2584))

(assert (=> d!41015 (= (content!133 (toList!851 lt!69327)) e!87304)))

(declare-fun b!134040 () Bool)

(assert (=> b!134040 (= e!87304 ((as const (Array tuple2!2584 Bool)) false))))

(declare-fun b!134041 () Bool)

(assert (=> b!134041 (= e!87304 ((_ map or) (store ((as const (Array tuple2!2584 Bool)) false) (h!2311 (toList!851 lt!69327)) true) (content!133 (t!6152 (toList!851 lt!69327)))))))

(assert (= (and d!41015 c!24915) b!134040))

(assert (= (and d!41015 (not c!24915)) b!134041))

(declare-fun m!158565 () Bool)

(assert (=> b!134041 m!158565))

(declare-fun m!158567 () Bool)

(assert (=> b!134041 m!158567))

(assert (=> d!40885 d!41015))

(declare-fun d!41017 () Bool)

(declare-fun e!87305 () Bool)

(assert (=> d!41017 e!87305))

(declare-fun res!64448 () Bool)

(assert (=> d!41017 (=> res!64448 e!87305)))

(declare-fun lt!70090 () Bool)

(assert (=> d!41017 (= res!64448 (not lt!70090))))

(declare-fun lt!70092 () Bool)

(assert (=> d!41017 (= lt!70090 lt!70092)))

(declare-fun lt!70089 () Unit!4132)

(declare-fun e!87306 () Unit!4132)

(assert (=> d!41017 (= lt!70089 e!87306)))

(declare-fun c!24916 () Bool)

(assert (=> d!41017 (= c!24916 lt!70092)))

(assert (=> d!41017 (= lt!70092 (containsKey!174 (toList!851 lt!69641) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41017 (= (contains!886 lt!69641 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70090)))

(declare-fun b!134042 () Bool)

(declare-fun lt!70091 () Unit!4132)

(assert (=> b!134042 (= e!87306 lt!70091)))

(assert (=> b!134042 (= lt!70091 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69641) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134042 (isDefined!124 (getValueByKey!170 (toList!851 lt!69641) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134043 () Bool)

(declare-fun Unit!4194 () Unit!4132)

(assert (=> b!134043 (= e!87306 Unit!4194)))

(declare-fun b!134044 () Bool)

(assert (=> b!134044 (= e!87305 (isDefined!124 (getValueByKey!170 (toList!851 lt!69641) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41017 c!24916) b!134042))

(assert (= (and d!41017 (not c!24916)) b!134043))

(assert (= (and d!41017 (not res!64448)) b!134044))

(declare-fun m!158569 () Bool)

(assert (=> d!41017 m!158569))

(declare-fun m!158571 () Bool)

(assert (=> b!134042 m!158571))

(declare-fun m!158573 () Bool)

(assert (=> b!134042 m!158573))

(assert (=> b!134042 m!158573))

(declare-fun m!158575 () Bool)

(assert (=> b!134042 m!158575))

(assert (=> b!134044 m!158573))

(assert (=> b!134044 m!158573))

(assert (=> b!134044 m!158575))

(assert (=> bm!14704 d!41017))

(declare-fun d!41019 () Bool)

(assert (=> d!41019 (= (isEmpty!413 (getValueByKey!170 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!175) (getValueByKey!170 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!40453 d!41019))

(assert (=> d!40561 d!40425))

(declare-fun d!41021 () Bool)

(assert (=> d!41021 (= (get!1482 (getValueByKey!170 (toList!851 lt!69301) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3198 (getValueByKey!170 (toList!851 lt!69301) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!40865 d!41021))

(declare-fun d!41023 () Bool)

(declare-fun c!24917 () Bool)

(assert (=> d!41023 (= c!24917 (and ((_ is Cons!1706) (toList!851 lt!69301)) (= (_1!1303 (h!2311 (toList!851 lt!69301))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!87307 () Option!176)

(assert (=> d!41023 (= (getValueByKey!170 (toList!851 lt!69301) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!87307)))

(declare-fun b!134047 () Bool)

(declare-fun e!87308 () Option!176)

(assert (=> b!134047 (= e!87308 (getValueByKey!170 (t!6152 (toList!851 lt!69301)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!134046 () Bool)

(assert (=> b!134046 (= e!87307 e!87308)))

(declare-fun c!24918 () Bool)

(assert (=> b!134046 (= c!24918 (and ((_ is Cons!1706) (toList!851 lt!69301)) (not (= (_1!1303 (h!2311 (toList!851 lt!69301))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!134045 () Bool)

(assert (=> b!134045 (= e!87307 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69301)))))))

(declare-fun b!134048 () Bool)

(assert (=> b!134048 (= e!87308 None!174)))

(assert (= (and d!41023 c!24917) b!134045))

(assert (= (and d!41023 (not c!24917)) b!134046))

(assert (= (and b!134046 c!24918) b!134047))

(assert (= (and b!134046 (not c!24918)) b!134048))

(assert (=> b!134047 m!156043))

(declare-fun m!158577 () Bool)

(assert (=> b!134047 m!158577))

(assert (=> d!40865 d!41023))

(declare-fun d!41025 () Bool)

(assert (=> d!41025 (isDefined!124 (getValueByKey!170 (toList!851 lt!69484) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70093 () Unit!4132)

(assert (=> d!41025 (= lt!70093 (choose!826 (toList!851 lt!69484) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87309 () Bool)

(assert (=> d!41025 e!87309))

(declare-fun res!64449 () Bool)

(assert (=> d!41025 (=> (not res!64449) (not e!87309))))

(assert (=> d!41025 (= res!64449 (isStrictlySorted!317 (toList!851 lt!69484)))))

(assert (=> d!41025 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69484) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70093)))

(declare-fun b!134049 () Bool)

(assert (=> b!134049 (= e!87309 (containsKey!174 (toList!851 lt!69484) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41025 res!64449) b!134049))

(assert (=> d!41025 m!156969))

(assert (=> d!41025 m!156969))

(assert (=> d!41025 m!156971))

(declare-fun m!158579 () Bool)

(assert (=> d!41025 m!158579))

(declare-fun m!158581 () Bool)

(assert (=> d!41025 m!158581))

(assert (=> b!134049 m!156965))

(assert (=> b!133301 d!41025))

(declare-fun d!41027 () Bool)

(assert (=> d!41027 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69484) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69484) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5555 () Bool)

(assert (= bs!5555 d!41027))

(assert (=> bs!5555 m!156969))

(declare-fun m!158583 () Bool)

(assert (=> bs!5555 m!158583))

(assert (=> b!133301 d!41027))

(declare-fun d!41029 () Bool)

(declare-fun c!24919 () Bool)

(assert (=> d!41029 (= c!24919 (and ((_ is Cons!1706) (toList!851 lt!69484)) (= (_1!1303 (h!2311 (toList!851 lt!69484))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87310 () Option!176)

(assert (=> d!41029 (= (getValueByKey!170 (toList!851 lt!69484) #b0000000000000000000000000000000000000000000000000000000000000000) e!87310)))

(declare-fun b!134052 () Bool)

(declare-fun e!87311 () Option!176)

(assert (=> b!134052 (= e!87311 (getValueByKey!170 (t!6152 (toList!851 lt!69484)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134051 () Bool)

(assert (=> b!134051 (= e!87310 e!87311)))

(declare-fun c!24920 () Bool)

(assert (=> b!134051 (= c!24920 (and ((_ is Cons!1706) (toList!851 lt!69484)) (not (= (_1!1303 (h!2311 (toList!851 lt!69484))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134050 () Bool)

(assert (=> b!134050 (= e!87310 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69484)))))))

(declare-fun b!134053 () Bool)

(assert (=> b!134053 (= e!87311 None!174)))

(assert (= (and d!41029 c!24919) b!134050))

(assert (= (and d!41029 (not c!24919)) b!134051))

(assert (= (and b!134051 c!24920) b!134052))

(assert (= (and b!134051 (not c!24920)) b!134053))

(declare-fun m!158585 () Bool)

(assert (=> b!134052 m!158585))

(assert (=> b!133301 d!41029))

(declare-fun d!41031 () Bool)

(assert (=> d!41031 (isDefined!124 (getValueByKey!170 (toList!851 lt!69220) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70094 () Unit!4132)

(assert (=> d!41031 (= lt!70094 (choose!826 (toList!851 lt!69220) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87312 () Bool)

(assert (=> d!41031 e!87312))

(declare-fun res!64450 () Bool)

(assert (=> d!41031 (=> (not res!64450) (not e!87312))))

(assert (=> d!41031 (= res!64450 (isStrictlySorted!317 (toList!851 lt!69220)))))

(assert (=> d!41031 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69220) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70094)))

(declare-fun b!134054 () Bool)

(assert (=> b!134054 (= e!87312 (containsKey!174 (toList!851 lt!69220) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41031 res!64450) b!134054))

(assert (=> d!41031 m!157283))

(assert (=> d!41031 m!157283))

(assert (=> d!41031 m!157285))

(declare-fun m!158587 () Bool)

(assert (=> d!41031 m!158587))

(declare-fun m!158589 () Bool)

(assert (=> d!41031 m!158589))

(assert (=> b!134054 m!157279))

(assert (=> b!133477 d!41031))

(declare-fun d!41033 () Bool)

(assert (=> d!41033 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69220) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69220) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5556 () Bool)

(assert (= bs!5556 d!41033))

(assert (=> bs!5556 m!157283))

(declare-fun m!158591 () Bool)

(assert (=> bs!5556 m!158591))

(assert (=> b!133477 d!41033))

(declare-fun d!41035 () Bool)

(declare-fun c!24921 () Bool)

(assert (=> d!41035 (= c!24921 (and ((_ is Cons!1706) (toList!851 lt!69220)) (= (_1!1303 (h!2311 (toList!851 lt!69220))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87313 () Option!176)

(assert (=> d!41035 (= (getValueByKey!170 (toList!851 lt!69220) #b1000000000000000000000000000000000000000000000000000000000000000) e!87313)))

(declare-fun b!134057 () Bool)

(declare-fun e!87314 () Option!176)

(assert (=> b!134057 (= e!87314 (getValueByKey!170 (t!6152 (toList!851 lt!69220)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134056 () Bool)

(assert (=> b!134056 (= e!87313 e!87314)))

(declare-fun c!24922 () Bool)

(assert (=> b!134056 (= c!24922 (and ((_ is Cons!1706) (toList!851 lt!69220)) (not (= (_1!1303 (h!2311 (toList!851 lt!69220))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134055 () Bool)

(assert (=> b!134055 (= e!87313 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69220)))))))

(declare-fun b!134058 () Bool)

(assert (=> b!134058 (= e!87314 None!174)))

(assert (= (and d!41035 c!24921) b!134055))

(assert (= (and d!41035 (not c!24921)) b!134056))

(assert (= (and b!134056 c!24922) b!134057))

(assert (= (and b!134056 (not c!24922)) b!134058))

(declare-fun m!158593 () Bool)

(assert (=> b!134057 m!158593))

(assert (=> b!133477 d!41035))

(assert (=> b!133499 d!40519))

(declare-fun d!41037 () Bool)

(assert (=> d!41037 (= (apply!116 lt!69696 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1482 (getValueByKey!170 (toList!851 lt!69696) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!5557 () Bool)

(assert (= bs!5557 d!41037))

(assert (=> bs!5557 m!157243))

(declare-fun m!158595 () Bool)

(assert (=> bs!5557 m!158595))

(assert (=> bs!5557 m!158595))

(declare-fun m!158597 () Bool)

(assert (=> bs!5557 m!158597))

(assert (=> b!133462 d!41037))

(declare-fun d!41039 () Bool)

(declare-fun c!24923 () Bool)

(assert (=> d!41039 (= c!24923 ((_ is ValueCellFull!1094) (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!87315 () V!3481)

(assert (=> d!41039 (= (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87315)))

(declare-fun b!134059 () Bool)

(assert (=> b!134059 (= e!87315 (get!1480 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134060 () Bool)

(assert (=> b!134060 (= e!87315 (get!1481 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41039 c!24923) b!134059))

(assert (= (and d!41039 (not c!24923)) b!134060))

(assert (=> b!134059 m!157249))

(assert (=> b!134059 m!155837))

(declare-fun m!158599 () Bool)

(assert (=> b!134059 m!158599))

(assert (=> b!134060 m!157249))

(assert (=> b!134060 m!155837))

(declare-fun m!158601 () Bool)

(assert (=> b!134060 m!158601))

(assert (=> b!133462 d!41039))

(declare-fun d!41041 () Bool)

(declare-fun e!87316 () Bool)

(assert (=> d!41041 e!87316))

(declare-fun res!64451 () Bool)

(assert (=> d!41041 (=> res!64451 e!87316)))

(declare-fun lt!70096 () Bool)

(assert (=> d!41041 (= res!64451 (not lt!70096))))

(declare-fun lt!70098 () Bool)

(assert (=> d!41041 (= lt!70096 lt!70098)))

(declare-fun lt!70095 () Unit!4132)

(declare-fun e!87317 () Unit!4132)

(assert (=> d!41041 (= lt!70095 e!87317)))

(declare-fun c!24924 () Bool)

(assert (=> d!41041 (= c!24924 lt!70098)))

(assert (=> d!41041 (= lt!70098 (containsKey!174 (toList!851 lt!69641) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41041 (= (contains!886 lt!69641 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70096)))

(declare-fun b!134061 () Bool)

(declare-fun lt!70097 () Unit!4132)

(assert (=> b!134061 (= e!87317 lt!70097)))

(assert (=> b!134061 (= lt!70097 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69641) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134061 (isDefined!124 (getValueByKey!170 (toList!851 lt!69641) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134062 () Bool)

(declare-fun Unit!4195 () Unit!4132)

(assert (=> b!134062 (= e!87317 Unit!4195)))

(declare-fun b!134063 () Bool)

(assert (=> b!134063 (= e!87316 (isDefined!124 (getValueByKey!170 (toList!851 lt!69641) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41041 c!24924) b!134061))

(assert (= (and d!41041 (not c!24924)) b!134062))

(assert (= (and d!41041 (not res!64451)) b!134063))

(declare-fun m!158603 () Bool)

(assert (=> d!41041 m!158603))

(declare-fun m!158605 () Bool)

(assert (=> b!134061 m!158605))

(declare-fun m!158607 () Bool)

(assert (=> b!134061 m!158607))

(assert (=> b!134061 m!158607))

(declare-fun m!158609 () Bool)

(assert (=> b!134061 m!158609))

(assert (=> b!134063 m!158607))

(assert (=> b!134063 m!158607))

(assert (=> b!134063 m!158609))

(assert (=> bm!14701 d!41041))

(declare-fun d!41043 () Bool)

(assert (=> d!41043 (= (apply!116 lt!69674 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)) (get!1482 (getValueByKey!170 (toList!851 lt!69674) (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000))))))

(declare-fun bs!5558 () Bool)

(assert (= bs!5558 d!41043))

(assert (=> bs!5558 m!157049))

(declare-fun m!158611 () Bool)

(assert (=> bs!5558 m!158611))

(assert (=> bs!5558 m!158611))

(declare-fun m!158613 () Bool)

(assert (=> bs!5558 m!158613))

(assert (=> b!133401 d!41043))

(declare-fun d!41045 () Bool)

(declare-fun c!24925 () Bool)

(assert (=> d!41045 (= c!24925 ((_ is ValueCellFull!1094) (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!87318 () V!3481)

(assert (=> d!41045 (= (get!1478 (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87318)))

(declare-fun b!134064 () Bool)

(assert (=> b!134064 (= e!87318 (get!1480 (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134065 () Bool)

(assert (=> b!134065 (= e!87318 (get!1481 (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41045 c!24925) b!134064))

(assert (= (and d!41045 (not c!24925)) b!134065))

(assert (=> b!134064 m!157143))

(assert (=> b!134064 m!156135))

(declare-fun m!158615 () Bool)

(assert (=> b!134064 m!158615))

(assert (=> b!134065 m!157143))

(assert (=> b!134065 m!156135))

(declare-fun m!158617 () Bool)

(assert (=> b!134065 m!158617))

(assert (=> b!133401 d!41045))

(assert (=> d!40827 d!40309))

(assert (=> d!40827 d!40311))

(declare-fun d!41047 () Bool)

(assert (=> d!41047 (= (get!1482 (getValueByKey!170 (toList!851 lt!69243) lt!69254)) (v!3198 (getValueByKey!170 (toList!851 lt!69243) lt!69254)))))

(assert (=> d!40699 d!41047))

(declare-fun d!41049 () Bool)

(declare-fun c!24926 () Bool)

(assert (=> d!41049 (= c!24926 (and ((_ is Cons!1706) (toList!851 lt!69243)) (= (_1!1303 (h!2311 (toList!851 lt!69243))) lt!69254)))))

(declare-fun e!87319 () Option!176)

(assert (=> d!41049 (= (getValueByKey!170 (toList!851 lt!69243) lt!69254) e!87319)))

(declare-fun b!134068 () Bool)

(declare-fun e!87320 () Option!176)

(assert (=> b!134068 (= e!87320 (getValueByKey!170 (t!6152 (toList!851 lt!69243)) lt!69254))))

(declare-fun b!134067 () Bool)

(assert (=> b!134067 (= e!87319 e!87320)))

(declare-fun c!24927 () Bool)

(assert (=> b!134067 (= c!24927 (and ((_ is Cons!1706) (toList!851 lt!69243)) (not (= (_1!1303 (h!2311 (toList!851 lt!69243))) lt!69254))))))

(declare-fun b!134066 () Bool)

(assert (=> b!134066 (= e!87319 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69243)))))))

(declare-fun b!134069 () Bool)

(assert (=> b!134069 (= e!87320 None!174)))

(assert (= (and d!41049 c!24926) b!134066))

(assert (= (and d!41049 (not c!24926)) b!134067))

(assert (= (and b!134067 c!24927) b!134068))

(assert (= (and b!134067 (not c!24927)) b!134069))

(declare-fun m!158619 () Bool)

(assert (=> b!134068 m!158619))

(assert (=> d!40699 d!41049))

(declare-fun lt!70099 () Bool)

(declare-fun d!41051 () Bool)

(assert (=> d!41051 (= lt!70099 (select (content!133 (toList!851 lt!69832)) (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun e!87322 () Bool)

(assert (=> d!41051 (= lt!70099 e!87322)))

(declare-fun res!64452 () Bool)

(assert (=> d!41051 (=> (not res!64452) (not e!87322))))

(assert (=> d!41051 (= res!64452 ((_ is Cons!1706) (toList!851 lt!69832)))))

(assert (=> d!41051 (= (contains!889 (toList!851 lt!69832) (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70099)))

(declare-fun b!134070 () Bool)

(declare-fun e!87321 () Bool)

(assert (=> b!134070 (= e!87322 e!87321)))

(declare-fun res!64453 () Bool)

(assert (=> b!134070 (=> res!64453 e!87321)))

(assert (=> b!134070 (= res!64453 (= (h!2311 (toList!851 lt!69832)) (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!134071 () Bool)

(assert (=> b!134071 (= e!87321 (contains!889 (t!6152 (toList!851 lt!69832)) (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!41051 res!64452) b!134070))

(assert (= (and b!134070 (not res!64453)) b!134071))

(declare-fun m!158621 () Bool)

(assert (=> d!41051 m!158621))

(declare-fun m!158623 () Bool)

(assert (=> d!41051 m!158623))

(declare-fun m!158625 () Bool)

(assert (=> b!134071 m!158625))

(assert (=> b!133617 d!41051))

(declare-fun d!41053 () Bool)

(declare-fun e!87323 () Bool)

(assert (=> d!41053 e!87323))

(declare-fun res!64454 () Bool)

(assert (=> d!41053 (=> res!64454 e!87323)))

(declare-fun lt!70101 () Bool)

(assert (=> d!41053 (= res!64454 (not lt!70101))))

(declare-fun lt!70103 () Bool)

(assert (=> d!41053 (= lt!70101 lt!70103)))

(declare-fun lt!70100 () Unit!4132)

(declare-fun e!87324 () Unit!4132)

(assert (=> d!41053 (= lt!70100 e!87324)))

(declare-fun c!24928 () Bool)

(assert (=> d!41053 (= c!24928 lt!70103)))

(assert (=> d!41053 (= lt!70103 (containsKey!174 (toList!851 lt!69873) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!41053 (= (contains!886 lt!69873 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70101)))

(declare-fun b!134072 () Bool)

(declare-fun lt!70102 () Unit!4132)

(assert (=> b!134072 (= e!87324 lt!70102)))

(assert (=> b!134072 (= lt!70102 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69873) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> b!134072 (isDefined!124 (getValueByKey!170 (toList!851 lt!69873) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!134073 () Bool)

(declare-fun Unit!4196 () Unit!4132)

(assert (=> b!134073 (= e!87324 Unit!4196)))

(declare-fun b!134074 () Bool)

(assert (=> b!134074 (= e!87323 (isDefined!124 (getValueByKey!170 (toList!851 lt!69873) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (= (and d!41053 c!24928) b!134072))

(assert (= (and d!41053 (not c!24928)) b!134073))

(assert (= (and d!41053 (not res!64454)) b!134074))

(declare-fun m!158627 () Bool)

(assert (=> d!41053 m!158627))

(declare-fun m!158629 () Bool)

(assert (=> b!134072 m!158629))

(assert (=> b!134072 m!157879))

(assert (=> b!134072 m!157879))

(declare-fun m!158631 () Bool)

(assert (=> b!134072 m!158631))

(assert (=> b!134074 m!157879))

(assert (=> b!134074 m!157879))

(assert (=> b!134074 m!158631))

(assert (=> d!40771 d!41053))

(declare-fun d!41055 () Bool)

(declare-fun c!24929 () Bool)

(assert (=> d!41055 (= c!24929 (and ((_ is Cons!1706) lt!69871) (= (_1!1303 (h!2311 lt!69871)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun e!87325 () Option!176)

(assert (=> d!41055 (= (getValueByKey!170 lt!69871 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) e!87325)))

(declare-fun e!87326 () Option!176)

(declare-fun b!134077 () Bool)

(assert (=> b!134077 (= e!87326 (getValueByKey!170 (t!6152 lt!69871) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!134076 () Bool)

(assert (=> b!134076 (= e!87325 e!87326)))

(declare-fun c!24930 () Bool)

(assert (=> b!134076 (= c!24930 (and ((_ is Cons!1706) lt!69871) (not (= (_1!1303 (h!2311 lt!69871)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!134075 () Bool)

(assert (=> b!134075 (= e!87325 (Some!175 (_2!1303 (h!2311 lt!69871))))))

(declare-fun b!134078 () Bool)

(assert (=> b!134078 (= e!87326 None!174)))

(assert (= (and d!41055 c!24929) b!134075))

(assert (= (and d!41055 (not c!24929)) b!134076))

(assert (= (and b!134076 c!24930) b!134077))

(assert (= (and b!134076 (not c!24930)) b!134078))

(declare-fun m!158633 () Bool)

(assert (=> b!134077 m!158633))

(assert (=> d!40771 d!41055))

(declare-fun d!41057 () Bool)

(assert (=> d!41057 (= (getValueByKey!170 lt!69871 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun lt!70104 () Unit!4132)

(assert (=> d!41057 (= lt!70104 (choose!834 lt!69871 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun e!87327 () Bool)

(assert (=> d!41057 e!87327))

(declare-fun res!64455 () Bool)

(assert (=> d!41057 (=> (not res!64455) (not e!87327))))

(assert (=> d!41057 (= res!64455 (isStrictlySorted!317 lt!69871))))

(assert (=> d!41057 (= (lemmaContainsTupThenGetReturnValue!88 lt!69871 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70104)))

(declare-fun b!134079 () Bool)

(declare-fun res!64456 () Bool)

(assert (=> b!134079 (=> (not res!64456) (not e!87327))))

(assert (=> b!134079 (= res!64456 (containsKey!174 lt!69871 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!134080 () Bool)

(assert (=> b!134080 (= e!87327 (contains!889 lt!69871 (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (= (and d!41057 res!64455) b!134079))

(assert (= (and b!134079 res!64456) b!134080))

(assert (=> d!41057 m!157873))

(declare-fun m!158635 () Bool)

(assert (=> d!41057 m!158635))

(declare-fun m!158637 () Bool)

(assert (=> d!41057 m!158637))

(declare-fun m!158639 () Bool)

(assert (=> b!134079 m!158639))

(declare-fun m!158641 () Bool)

(assert (=> b!134080 m!158641))

(assert (=> d!40771 d!41057))

(declare-fun b!134081 () Bool)

(declare-fun e!87332 () List!1710)

(assert (=> b!134081 (= e!87332 (insertStrictlySorted!91 (t!6152 (toList!851 call!14669)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!134082 () Bool)

(declare-fun e!87331 () List!1710)

(declare-fun call!14785 () List!1710)

(assert (=> b!134082 (= e!87331 call!14785)))

(declare-fun b!134083 () Bool)

(declare-fun res!64458 () Bool)

(declare-fun e!87329 () Bool)

(assert (=> b!134083 (=> (not res!64458) (not e!87329))))

(declare-fun lt!70105 () List!1710)

(assert (=> b!134083 (= res!64458 (containsKey!174 lt!70105 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun c!24932 () Bool)

(declare-fun bm!14780 () Bool)

(assert (=> bm!14780 (= call!14785 ($colon$colon!91 e!87332 (ite c!24932 (h!2311 (toList!851 call!14669)) (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun c!24933 () Bool)

(assert (=> bm!14780 (= c!24933 c!24932)))

(declare-fun b!134084 () Bool)

(declare-fun c!24934 () Bool)

(declare-fun c!24931 () Bool)

(assert (=> b!134084 (= e!87332 (ite c!24931 (t!6152 (toList!851 call!14669)) (ite c!24934 (Cons!1706 (h!2311 (toList!851 call!14669)) (t!6152 (toList!851 call!14669))) Nil!1707)))))

(declare-fun d!41059 () Bool)

(assert (=> d!41059 e!87329))

(declare-fun res!64457 () Bool)

(assert (=> d!41059 (=> (not res!64457) (not e!87329))))

(assert (=> d!41059 (= res!64457 (isStrictlySorted!317 lt!70105))))

(assert (=> d!41059 (= lt!70105 e!87331)))

(assert (=> d!41059 (= c!24932 (and ((_ is Cons!1706) (toList!851 call!14669)) (bvslt (_1!1303 (h!2311 (toList!851 call!14669))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!41059 (isStrictlySorted!317 (toList!851 call!14669))))

(assert (=> d!41059 (= (insertStrictlySorted!91 (toList!851 call!14669) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70105)))

(declare-fun b!134085 () Bool)

(declare-fun e!87328 () List!1710)

(assert (=> b!134085 (= e!87331 e!87328)))

(assert (=> b!134085 (= c!24931 (and ((_ is Cons!1706) (toList!851 call!14669)) (= (_1!1303 (h!2311 (toList!851 call!14669))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!134086 () Bool)

(declare-fun e!87330 () List!1710)

(declare-fun call!14783 () List!1710)

(assert (=> b!134086 (= e!87330 call!14783)))

(declare-fun b!134087 () Bool)

(declare-fun call!14784 () List!1710)

(assert (=> b!134087 (= e!87328 call!14784)))

(declare-fun b!134088 () Bool)

(assert (=> b!134088 (= e!87329 (contains!889 lt!70105 (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun bm!14781 () Bool)

(assert (=> bm!14781 (= call!14784 call!14785)))

(declare-fun bm!14782 () Bool)

(assert (=> bm!14782 (= call!14783 call!14784)))

(declare-fun b!134089 () Bool)

(assert (=> b!134089 (= c!24934 (and ((_ is Cons!1706) (toList!851 call!14669)) (bvsgt (_1!1303 (h!2311 (toList!851 call!14669))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> b!134089 (= e!87328 e!87330)))

(declare-fun b!134090 () Bool)

(assert (=> b!134090 (= e!87330 call!14783)))

(assert (= (and d!41059 c!24932) b!134082))

(assert (= (and d!41059 (not c!24932)) b!134085))

(assert (= (and b!134085 c!24931) b!134087))

(assert (= (and b!134085 (not c!24931)) b!134089))

(assert (= (and b!134089 c!24934) b!134090))

(assert (= (and b!134089 (not c!24934)) b!134086))

(assert (= (or b!134090 b!134086) bm!14782))

(assert (= (or b!134087 bm!14782) bm!14781))

(assert (= (or b!134082 bm!14781) bm!14780))

(assert (= (and bm!14780 c!24933) b!134081))

(assert (= (and bm!14780 (not c!24933)) b!134084))

(assert (= (and d!41059 res!64457) b!134083))

(assert (= (and b!134083 res!64458) b!134088))

(declare-fun m!158643 () Bool)

(assert (=> b!134088 m!158643))

(declare-fun m!158645 () Bool)

(assert (=> b!134083 m!158645))

(declare-fun m!158647 () Bool)

(assert (=> b!134081 m!158647))

(declare-fun m!158649 () Bool)

(assert (=> d!41059 m!158649))

(declare-fun m!158651 () Bool)

(assert (=> d!41059 m!158651))

(declare-fun m!158653 () Bool)

(assert (=> bm!14780 m!158653))

(assert (=> d!40771 d!41059))

(assert (=> d!40845 d!40679))

(declare-fun lt!70106 () Bool)

(declare-fun d!41061 () Bool)

(assert (=> d!41061 (= lt!70106 (select (content!133 (t!6152 (toList!851 lt!69466))) (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87334 () Bool)

(assert (=> d!41061 (= lt!70106 e!87334)))

(declare-fun res!64459 () Bool)

(assert (=> d!41061 (=> (not res!64459) (not e!87334))))

(assert (=> d!41061 (= res!64459 ((_ is Cons!1706) (t!6152 (toList!851 lt!69466))))))

(assert (=> d!41061 (= (contains!889 (t!6152 (toList!851 lt!69466)) (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70106)))

(declare-fun b!134091 () Bool)

(declare-fun e!87333 () Bool)

(assert (=> b!134091 (= e!87334 e!87333)))

(declare-fun res!64460 () Bool)

(assert (=> b!134091 (=> res!64460 e!87333)))

(assert (=> b!134091 (= res!64460 (= (h!2311 (t!6152 (toList!851 lt!69466))) (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134092 () Bool)

(assert (=> b!134092 (= e!87333 (contains!889 (t!6152 (t!6152 (toList!851 lt!69466))) (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41061 res!64459) b!134091))

(assert (= (and b!134091 (not res!64460)) b!134092))

(declare-fun m!158655 () Bool)

(assert (=> d!41061 m!158655))

(declare-fun m!158657 () Bool)

(assert (=> d!41061 m!158657))

(declare-fun m!158659 () Bool)

(assert (=> b!134092 m!158659))

(assert (=> b!133537 d!41061))

(declare-fun d!41063 () Bool)

(assert (=> d!41063 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69320) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69320) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun bs!5559 () Bool)

(assert (= bs!5559 d!41063))

(assert (=> bs!5559 m!156383))

(declare-fun m!158661 () Bool)

(assert (=> bs!5559 m!158661))

(assert (=> b!133199 d!41063))

(assert (=> b!133199 d!40445))

(declare-fun d!41065 () Bool)

(assert (=> d!41065 (= (get!1482 (getValueByKey!170 (toList!851 lt!69362) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3198 (getValueByKey!170 (toList!851 lt!69362) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40501 d!41065))

(declare-fun d!41067 () Bool)

(declare-fun c!24935 () Bool)

(assert (=> d!41067 (= c!24935 (and ((_ is Cons!1706) (toList!851 lt!69362)) (= (_1!1303 (h!2311 (toList!851 lt!69362))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87335 () Option!176)

(assert (=> d!41067 (= (getValueByKey!170 (toList!851 lt!69362) #b1000000000000000000000000000000000000000000000000000000000000000) e!87335)))

(declare-fun b!134095 () Bool)

(declare-fun e!87336 () Option!176)

(assert (=> b!134095 (= e!87336 (getValueByKey!170 (t!6152 (toList!851 lt!69362)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134094 () Bool)

(assert (=> b!134094 (= e!87335 e!87336)))

(declare-fun c!24936 () Bool)

(assert (=> b!134094 (= c!24936 (and ((_ is Cons!1706) (toList!851 lt!69362)) (not (= (_1!1303 (h!2311 (toList!851 lt!69362))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134093 () Bool)

(assert (=> b!134093 (= e!87335 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69362)))))))

(declare-fun b!134096 () Bool)

(assert (=> b!134096 (= e!87336 None!174)))

(assert (= (and d!41067 c!24935) b!134093))

(assert (= (and d!41067 (not c!24935)) b!134094))

(assert (= (and b!134094 c!24936) b!134095))

(assert (= (and b!134094 (not c!24936)) b!134096))

(declare-fun m!158663 () Bool)

(assert (=> b!134095 m!158663))

(assert (=> d!40501 d!41067))

(declare-fun d!41069 () Bool)

(assert (=> d!41069 (isDefined!124 (getValueByKey!170 (toList!851 lt!69179) lt!69190))))

(declare-fun lt!70107 () Unit!4132)

(assert (=> d!41069 (= lt!70107 (choose!826 (toList!851 lt!69179) lt!69190))))

(declare-fun e!87337 () Bool)

(assert (=> d!41069 e!87337))

(declare-fun res!64461 () Bool)

(assert (=> d!41069 (=> (not res!64461) (not e!87337))))

(assert (=> d!41069 (= res!64461 (isStrictlySorted!317 (toList!851 lt!69179)))))

(assert (=> d!41069 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69179) lt!69190) lt!70107)))

(declare-fun b!134097 () Bool)

(assert (=> b!134097 (= e!87337 (containsKey!174 (toList!851 lt!69179) lt!69190))))

(assert (= (and d!41069 res!64461) b!134097))

(assert (=> d!41069 m!156387))

(assert (=> d!41069 m!156387))

(assert (=> d!41069 m!158137))

(declare-fun m!158665 () Bool)

(assert (=> d!41069 m!158665))

(assert (=> d!41069 m!157239))

(assert (=> b!134097 m!158133))

(assert (=> b!133841 d!41069))

(declare-fun d!41071 () Bool)

(assert (=> d!41071 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69179) lt!69190)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69179) lt!69190))))))

(declare-fun bs!5560 () Bool)

(assert (= bs!5560 d!41071))

(assert (=> bs!5560 m!156387))

(declare-fun m!158667 () Bool)

(assert (=> bs!5560 m!158667))

(assert (=> b!133841 d!41071))

(assert (=> b!133841 d!40843))

(declare-fun d!41073 () Bool)

(declare-fun e!87338 () Bool)

(assert (=> d!41073 e!87338))

(declare-fun res!64462 () Bool)

(assert (=> d!41073 (=> res!64462 e!87338)))

(declare-fun lt!70109 () Bool)

(assert (=> d!41073 (= res!64462 (not lt!70109))))

(declare-fun lt!70111 () Bool)

(assert (=> d!41073 (= lt!70109 lt!70111)))

(declare-fun lt!70108 () Unit!4132)

(declare-fun e!87339 () Unit!4132)

(assert (=> d!41073 (= lt!70108 e!87339)))

(declare-fun c!24937 () Bool)

(assert (=> d!41073 (= c!24937 lt!70111)))

(assert (=> d!41073 (= lt!70111 (containsKey!174 (toList!851 lt!69674) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41073 (= (contains!886 lt!69674 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70109)))

(declare-fun b!134098 () Bool)

(declare-fun lt!70110 () Unit!4132)

(assert (=> b!134098 (= e!87339 lt!70110)))

(assert (=> b!134098 (= lt!70110 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69674) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134098 (isDefined!124 (getValueByKey!170 (toList!851 lt!69674) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134099 () Bool)

(declare-fun Unit!4197 () Unit!4132)

(assert (=> b!134099 (= e!87339 Unit!4197)))

(declare-fun b!134100 () Bool)

(assert (=> b!134100 (= e!87338 (isDefined!124 (getValueByKey!170 (toList!851 lt!69674) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41073 c!24937) b!134098))

(assert (= (and d!41073 (not c!24937)) b!134099))

(assert (= (and d!41073 (not res!64462)) b!134100))

(declare-fun m!158669 () Bool)

(assert (=> d!41073 m!158669))

(declare-fun m!158671 () Bool)

(assert (=> b!134098 m!158671))

(declare-fun m!158673 () Bool)

(assert (=> b!134098 m!158673))

(assert (=> b!134098 m!158673))

(declare-fun m!158675 () Bool)

(assert (=> b!134098 m!158675))

(assert (=> b!134100 m!158673))

(assert (=> b!134100 m!158673))

(assert (=> b!134100 m!158675))

(assert (=> bm!14711 d!41073))

(declare-fun d!41075 () Bool)

(assert (=> d!41075 (= (isEmpty!413 (getValueByKey!170 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116)))) (not ((_ is Some!175) (getValueByKey!170 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))))

(assert (=> d!40673 d!41075))

(declare-fun d!41077 () Bool)

(declare-fun c!24938 () Bool)

(assert (=> d!41077 (= c!24938 (and ((_ is Cons!1706) (t!6152 lt!69517)) (= (_1!1303 (h!2311 (t!6152 lt!69517))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87340 () Option!176)

(assert (=> d!41077 (= (getValueByKey!170 (t!6152 lt!69517) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87340)))

(declare-fun b!134103 () Bool)

(declare-fun e!87341 () Option!176)

(assert (=> b!134103 (= e!87341 (getValueByKey!170 (t!6152 (t!6152 lt!69517)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!134102 () Bool)

(assert (=> b!134102 (= e!87340 e!87341)))

(declare-fun c!24939 () Bool)

(assert (=> b!134102 (= c!24939 (and ((_ is Cons!1706) (t!6152 lt!69517)) (not (= (_1!1303 (h!2311 (t!6152 lt!69517))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!134101 () Bool)

(assert (=> b!134101 (= e!87340 (Some!175 (_2!1303 (h!2311 (t!6152 lt!69517)))))))

(declare-fun b!134104 () Bool)

(assert (=> b!134104 (= e!87341 None!174)))

(assert (= (and d!41077 c!24938) b!134101))

(assert (= (and d!41077 (not c!24938)) b!134102))

(assert (= (and b!134102 c!24939) b!134103))

(assert (= (and b!134102 (not c!24939)) b!134104))

(declare-fun m!158677 () Bool)

(assert (=> b!134103 m!158677))

(assert (=> b!133692 d!41077))

(declare-fun d!41079 () Bool)

(declare-fun lt!70112 () Bool)

(assert (=> d!41079 (= lt!70112 (select (content!133 (toList!851 lt!70041)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87343 () Bool)

(assert (=> d!41079 (= lt!70112 e!87343)))

(declare-fun res!64463 () Bool)

(assert (=> d!41079 (=> (not res!64463) (not e!87343))))

(assert (=> d!41079 (= res!64463 ((_ is Cons!1706) (toList!851 lt!70041)))))

(assert (=> d!41079 (= (contains!889 (toList!851 lt!70041) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70112)))

(declare-fun b!134105 () Bool)

(declare-fun e!87342 () Bool)

(assert (=> b!134105 (= e!87343 e!87342)))

(declare-fun res!64464 () Bool)

(assert (=> b!134105 (=> res!64464 e!87342)))

(assert (=> b!134105 (= res!64464 (= (h!2311 (toList!851 lt!70041)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134106 () Bool)

(assert (=> b!134106 (= e!87342 (contains!889 (t!6152 (toList!851 lt!70041)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41079 res!64463) b!134105))

(assert (= (and b!134105 (not res!64464)) b!134106))

(declare-fun m!158679 () Bool)

(assert (=> d!41079 m!158679))

(declare-fun m!158681 () Bool)

(assert (=> d!41079 m!158681))

(declare-fun m!158683 () Bool)

(assert (=> b!134106 m!158683))

(assert (=> b!133942 d!41079))

(declare-fun d!41081 () Bool)

(assert (=> d!41081 (= (isEmpty!413 (getValueByKey!170 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182)) (not ((_ is Some!175) (getValueByKey!170 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182))))))

(assert (=> d!40421 d!41081))

(declare-fun d!41083 () Bool)

(assert (=> d!41083 (= (apply!116 (+!163 lt!70045 (tuple2!2585 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70050) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!70045 (tuple2!2585 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70050)))))

(declare-fun bs!5561 () Bool)

(assert (= bs!5561 d!41083))

(declare-fun m!158685 () Bool)

(assert (=> bs!5561 m!158685))

(assert (=> bs!5561 m!158685))

(declare-fun m!158687 () Bool)

(assert (=> bs!5561 m!158687))

(assert (=> b!133951 d!41083))

(declare-fun d!41085 () Bool)

(declare-fun e!87344 () Bool)

(assert (=> d!41085 e!87344))

(declare-fun res!64466 () Bool)

(assert (=> d!41085 (=> (not res!64466) (not e!87344))))

(declare-fun lt!70115 () ListLongMap!1671)

(assert (=> d!41085 (= res!64466 (contains!886 lt!70115 (_1!1303 (tuple2!2585 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70113 () List!1710)

(assert (=> d!41085 (= lt!70115 (ListLongMap!1672 lt!70113))))

(declare-fun lt!70116 () Unit!4132)

(declare-fun lt!70114 () Unit!4132)

(assert (=> d!41085 (= lt!70116 lt!70114)))

(assert (=> d!41085 (= (getValueByKey!170 lt!70113 (_1!1303 (tuple2!2585 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41085 (= lt!70114 (lemmaContainsTupThenGetReturnValue!88 lt!70113 (_1!1303 (tuple2!2585 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41085 (= lt!70113 (insertStrictlySorted!91 (toList!851 lt!70052) (_1!1303 (tuple2!2585 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41085 (= (+!163 lt!70052 (tuple2!2585 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70115)))

(declare-fun b!134107 () Bool)

(declare-fun res!64465 () Bool)

(assert (=> b!134107 (=> (not res!64465) (not e!87344))))

(assert (=> b!134107 (= res!64465 (= (getValueByKey!170 (toList!851 lt!70115) (_1!1303 (tuple2!2585 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134108 () Bool)

(assert (=> b!134108 (= e!87344 (contains!889 (toList!851 lt!70115) (tuple2!2585 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41085 res!64466) b!134107))

(assert (= (and b!134107 res!64465) b!134108))

(declare-fun m!158689 () Bool)

(assert (=> d!41085 m!158689))

(declare-fun m!158691 () Bool)

(assert (=> d!41085 m!158691))

(declare-fun m!158693 () Bool)

(assert (=> d!41085 m!158693))

(declare-fun m!158695 () Bool)

(assert (=> d!41085 m!158695))

(declare-fun m!158697 () Bool)

(assert (=> b!134107 m!158697))

(declare-fun m!158699 () Bool)

(assert (=> b!134108 m!158699))

(assert (=> b!133951 d!41085))

(declare-fun d!41087 () Bool)

(assert (=> d!41087 (contains!886 (+!163 lt!70049 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16))) lt!70055)))

(declare-fun lt!70117 () Unit!4132)

(assert (=> d!41087 (= lt!70117 (choose!829 lt!70049 lt!70057 (zeroValue!2719 newMap!16) lt!70055))))

(assert (=> d!41087 (contains!886 lt!70049 lt!70055)))

(assert (=> d!41087 (= (addStillContains!92 lt!70049 lt!70057 (zeroValue!2719 newMap!16) lt!70055) lt!70117)))

(declare-fun bs!5562 () Bool)

(assert (= bs!5562 d!41087))

(assert (=> bs!5562 m!158439))

(assert (=> bs!5562 m!158439))

(assert (=> bs!5562 m!158451))

(declare-fun m!158701 () Bool)

(assert (=> bs!5562 m!158701))

(declare-fun m!158703 () Bool)

(assert (=> bs!5562 m!158703))

(assert (=> b!133951 d!41087))

(declare-fun d!41089 () Bool)

(assert (=> d!41089 (= (apply!116 lt!70043 lt!70047) (get!1482 (getValueByKey!170 (toList!851 lt!70043) lt!70047)))))

(declare-fun bs!5563 () Bool)

(assert (= bs!5563 d!41089))

(declare-fun m!158705 () Bool)

(assert (=> bs!5563 m!158705))

(assert (=> bs!5563 m!158705))

(declare-fun m!158707 () Bool)

(assert (=> bs!5563 m!158707))

(assert (=> b!133951 d!41089))

(declare-fun d!41091 () Bool)

(assert (=> d!41091 (= (apply!116 (+!163 lt!70052 (tuple2!2585 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70063) (apply!116 lt!70052 lt!70063))))

(declare-fun lt!70118 () Unit!4132)

(assert (=> d!41091 (= lt!70118 (choose!828 lt!70052 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!70063))))

(declare-fun e!87345 () Bool)

(assert (=> d!41091 e!87345))

(declare-fun res!64467 () Bool)

(assert (=> d!41091 (=> (not res!64467) (not e!87345))))

(assert (=> d!41091 (= res!64467 (contains!886 lt!70052 lt!70063))))

(assert (=> d!41091 (= (addApplyDifferent!92 lt!70052 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!70063) lt!70118)))

(declare-fun b!134109 () Bool)

(assert (=> b!134109 (= e!87345 (not (= lt!70063 lt!70053)))))

(assert (= (and d!41091 res!64467) b!134109))

(assert (=> d!41091 m!158441))

(assert (=> d!41091 m!158463))

(declare-fun m!158709 () Bool)

(assert (=> d!41091 m!158709))

(assert (=> d!41091 m!158461))

(assert (=> d!41091 m!155839))

(declare-fun m!158711 () Bool)

(assert (=> d!41091 m!158711))

(assert (=> d!41091 m!158441))

(assert (=> b!133951 d!41091))

(declare-fun d!41093 () Bool)

(assert (=> d!41093 (= (apply!116 (+!163 lt!70043 (tuple2!2585 lt!70044 (zeroValue!2719 newMap!16))) lt!70047) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!70043 (tuple2!2585 lt!70044 (zeroValue!2719 newMap!16)))) lt!70047)))))

(declare-fun bs!5564 () Bool)

(assert (= bs!5564 d!41093))

(declare-fun m!158713 () Bool)

(assert (=> bs!5564 m!158713))

(assert (=> bs!5564 m!158713))

(declare-fun m!158715 () Bool)

(assert (=> bs!5564 m!158715))

(assert (=> b!133951 d!41093))

(declare-fun d!41095 () Bool)

(declare-fun e!87346 () Bool)

(assert (=> d!41095 e!87346))

(declare-fun res!64469 () Bool)

(assert (=> d!41095 (=> (not res!64469) (not e!87346))))

(declare-fun lt!70121 () ListLongMap!1671)

(assert (=> d!41095 (= res!64469 (contains!886 lt!70121 (_1!1303 (tuple2!2585 lt!70044 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70119 () List!1710)

(assert (=> d!41095 (= lt!70121 (ListLongMap!1672 lt!70119))))

(declare-fun lt!70122 () Unit!4132)

(declare-fun lt!70120 () Unit!4132)

(assert (=> d!41095 (= lt!70122 lt!70120)))

(assert (=> d!41095 (= (getValueByKey!170 lt!70119 (_1!1303 (tuple2!2585 lt!70044 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!70044 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41095 (= lt!70120 (lemmaContainsTupThenGetReturnValue!88 lt!70119 (_1!1303 (tuple2!2585 lt!70044 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!70044 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41095 (= lt!70119 (insertStrictlySorted!91 (toList!851 lt!70043) (_1!1303 (tuple2!2585 lt!70044 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!70044 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41095 (= (+!163 lt!70043 (tuple2!2585 lt!70044 (zeroValue!2719 newMap!16))) lt!70121)))

(declare-fun b!134110 () Bool)

(declare-fun res!64468 () Bool)

(assert (=> b!134110 (=> (not res!64468) (not e!87346))))

(assert (=> b!134110 (= res!64468 (= (getValueByKey!170 (toList!851 lt!70121) (_1!1303 (tuple2!2585 lt!70044 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!70044 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134111 () Bool)

(assert (=> b!134111 (= e!87346 (contains!889 (toList!851 lt!70121) (tuple2!2585 lt!70044 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41095 res!64469) b!134110))

(assert (= (and b!134110 res!64468) b!134111))

(declare-fun m!158717 () Bool)

(assert (=> d!41095 m!158717))

(declare-fun m!158719 () Bool)

(assert (=> d!41095 m!158719))

(declare-fun m!158721 () Bool)

(assert (=> d!41095 m!158721))

(declare-fun m!158723 () Bool)

(assert (=> d!41095 m!158723))

(declare-fun m!158725 () Bool)

(assert (=> b!134110 m!158725))

(declare-fun m!158727 () Bool)

(assert (=> b!134111 m!158727))

(assert (=> b!133951 d!41095))

(declare-fun d!41097 () Bool)

(assert (=> d!41097 (= (apply!116 lt!70052 lt!70063) (get!1482 (getValueByKey!170 (toList!851 lt!70052) lt!70063)))))

(declare-fun bs!5565 () Bool)

(assert (= bs!5565 d!41097))

(declare-fun m!158729 () Bool)

(assert (=> bs!5565 m!158729))

(assert (=> bs!5565 m!158729))

(declare-fun m!158731 () Bool)

(assert (=> bs!5565 m!158731))

(assert (=> b!133951 d!41097))

(declare-fun b!134112 () Bool)

(assert (=> b!134112 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> b!134112 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (_values!2847 newMap!16))))))

(declare-fun e!87347 () Bool)

(declare-fun lt!70125 () ListLongMap!1671)

(assert (=> b!134112 (= e!87347 (= (apply!116 lt!70125 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!14783 () Bool)

(declare-fun call!14786 () ListLongMap!1671)

(assert (=> bm!14783 (= call!14786 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69102 (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!134113 () Bool)

(declare-fun e!87350 () ListLongMap!1671)

(assert (=> b!134113 (= e!87350 call!14786)))

(declare-fun b!134114 () Bool)

(declare-fun e!87352 () Bool)

(declare-fun e!87349 () Bool)

(assert (=> b!134114 (= e!87352 e!87349)))

(declare-fun c!24943 () Bool)

(assert (=> b!134114 (= c!24943 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!134115 () Bool)

(assert (=> b!134115 (= e!87349 (isEmpty!414 lt!70125))))

(declare-fun b!134116 () Bool)

(declare-fun e!87353 () Bool)

(assert (=> b!134116 (= e!87353 e!87352)))

(declare-fun c!24940 () Bool)

(declare-fun e!87348 () Bool)

(assert (=> b!134116 (= c!24940 e!87348)))

(declare-fun res!64472 () Bool)

(assert (=> b!134116 (=> (not res!64472) (not e!87348))))

(assert (=> b!134116 (= res!64472 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!134117 () Bool)

(assert (=> b!134117 (= e!87348 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134117 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134118 () Bool)

(declare-fun lt!70124 () Unit!4132)

(declare-fun lt!70129 () Unit!4132)

(assert (=> b!134118 (= lt!70124 lt!70129)))

(declare-fun lt!70128 () (_ BitVec 64))

(declare-fun lt!70126 () (_ BitVec 64))

(declare-fun lt!70127 () V!3481)

(declare-fun lt!70123 () ListLongMap!1671)

(assert (=> b!134118 (not (contains!886 (+!163 lt!70123 (tuple2!2585 lt!70126 lt!70127)) lt!70128))))

(assert (=> b!134118 (= lt!70129 (addStillNotContains!62 lt!70123 lt!70126 lt!70127 lt!70128))))

(assert (=> b!134118 (= lt!70128 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134118 (= lt!70127 (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134118 (= lt!70126 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!134118 (= lt!70123 call!14786)))

(assert (=> b!134118 (= e!87350 (+!163 call!14786 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134119 () Bool)

(declare-fun e!87351 () ListLongMap!1671)

(assert (=> b!134119 (= e!87351 e!87350)))

(declare-fun c!24941 () Bool)

(assert (=> b!134119 (= c!24941 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134120 () Bool)

(assert (=> b!134120 (= e!87351 (ListLongMap!1672 Nil!1707))))

(declare-fun d!41099 () Bool)

(assert (=> d!41099 e!87353))

(declare-fun res!64471 () Bool)

(assert (=> d!41099 (=> (not res!64471) (not e!87353))))

(assert (=> d!41099 (= res!64471 (not (contains!886 lt!70125 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41099 (= lt!70125 e!87351)))

(declare-fun c!24942 () Bool)

(assert (=> d!41099 (= c!24942 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!41099 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!41099 (= (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69102 (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!70125)))

(declare-fun b!134121 () Bool)

(assert (=> b!134121 (= e!87349 (= lt!70125 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69102 (zeroValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun b!134122 () Bool)

(declare-fun res!64473 () Bool)

(assert (=> b!134122 (=> (not res!64473) (not e!87353))))

(assert (=> b!134122 (= res!64473 (not (contains!886 lt!70125 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134123 () Bool)

(assert (=> b!134123 (= e!87352 e!87347)))

(assert (=> b!134123 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64470 () Bool)

(assert (=> b!134123 (= res!64470 (contains!886 lt!70125 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134123 (=> (not res!64470) (not e!87347))))

(assert (= (and d!41099 c!24942) b!134120))

(assert (= (and d!41099 (not c!24942)) b!134119))

(assert (= (and b!134119 c!24941) b!134118))

(assert (= (and b!134119 (not c!24941)) b!134113))

(assert (= (or b!134118 b!134113) bm!14783))

(assert (= (and d!41099 res!64471) b!134122))

(assert (= (and b!134122 res!64473) b!134116))

(assert (= (and b!134116 res!64472) b!134117))

(assert (= (and b!134116 c!24940) b!134123))

(assert (= (and b!134116 (not c!24940)) b!134114))

(assert (= (and b!134123 res!64470) b!134112))

(assert (= (and b!134114 c!24943) b!134121))

(assert (= (and b!134114 (not c!24943)) b!134115))

(declare-fun b_lambda!5983 () Bool)

(assert (=> (not b_lambda!5983) (not b!134112)))

(assert (=> b!134112 t!6164))

(declare-fun b_and!8297 () Bool)

(assert (= b_and!8293 (and (=> t!6164 result!3993) b_and!8297)))

(assert (=> b!134112 t!6166))

(declare-fun b_and!8299 () Bool)

(assert (= b_and!8295 (and (=> t!6166 result!3995) b_and!8299)))

(declare-fun b_lambda!5985 () Bool)

(assert (=> (not b_lambda!5985) (not b!134118)))

(assert (=> b!134118 t!6164))

(declare-fun b_and!8301 () Bool)

(assert (= b_and!8297 (and (=> t!6164 result!3993) b_and!8301)))

(assert (=> b!134118 t!6166))

(declare-fun b_and!8303 () Bool)

(assert (= b_and!8299 (and (=> t!6166 result!3995) b_and!8303)))

(assert (=> b!134117 m!156125))

(assert (=> b!134117 m!156125))

(assert (=> b!134117 m!156141))

(declare-fun m!158733 () Bool)

(assert (=> b!134122 m!158733))

(assert (=> b!134118 m!156473))

(declare-fun m!158735 () Bool)

(assert (=> b!134118 m!158735))

(assert (=> b!134118 m!156125))

(assert (=> b!134118 m!156473))

(assert (=> b!134118 m!156135))

(assert (=> b!134118 m!156475))

(declare-fun m!158737 () Bool)

(assert (=> b!134118 m!158737))

(declare-fun m!158739 () Bool)

(assert (=> b!134118 m!158739))

(assert (=> b!134118 m!156135))

(declare-fun m!158741 () Bool)

(assert (=> b!134118 m!158741))

(assert (=> b!134118 m!158737))

(assert (=> b!134121 m!155839))

(declare-fun m!158743 () Bool)

(assert (=> b!134121 m!158743))

(assert (=> b!134123 m!156125))

(assert (=> b!134123 m!156125))

(declare-fun m!158745 () Bool)

(assert (=> b!134123 m!158745))

(declare-fun m!158747 () Bool)

(assert (=> b!134115 m!158747))

(assert (=> bm!14783 m!155839))

(assert (=> bm!14783 m!158743))

(declare-fun m!158749 () Bool)

(assert (=> d!41099 m!158749))

(assert (=> d!41099 m!156183))

(assert (=> b!134119 m!156125))

(assert (=> b!134119 m!156125))

(assert (=> b!134119 m!156141))

(assert (=> b!134112 m!156473))

(assert (=> b!134112 m!156125))

(assert (=> b!134112 m!156473))

(assert (=> b!134112 m!156135))

(assert (=> b!134112 m!156475))

(assert (=> b!134112 m!156135))

(assert (=> b!134112 m!156125))

(declare-fun m!158751 () Bool)

(assert (=> b!134112 m!158751))

(assert (=> b!133951 d!41099))

(declare-fun d!41101 () Bool)

(assert (=> d!41101 (= (apply!116 (+!163 lt!70045 (tuple2!2585 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70050) (apply!116 lt!70045 lt!70050))))

(declare-fun lt!70130 () Unit!4132)

(assert (=> d!41101 (= lt!70130 (choose!828 lt!70045 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!70050))))

(declare-fun e!87354 () Bool)

(assert (=> d!41101 e!87354))

(declare-fun res!64474 () Bool)

(assert (=> d!41101 (=> (not res!64474) (not e!87354))))

(assert (=> d!41101 (= res!64474 (contains!886 lt!70045 lt!70050))))

(assert (=> d!41101 (= (addApplyDifferent!92 lt!70045 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!70050) lt!70130)))

(declare-fun b!134124 () Bool)

(assert (=> b!134124 (= e!87354 (not (= lt!70050 lt!70062)))))

(assert (= (and d!41101 res!64474) b!134124))

(assert (=> d!41101 m!158447))

(assert (=> d!41101 m!158449))

(declare-fun m!158753 () Bool)

(assert (=> d!41101 m!158753))

(assert (=> d!41101 m!158457))

(assert (=> d!41101 m!155839))

(declare-fun m!158755 () Bool)

(assert (=> d!41101 m!158755))

(assert (=> d!41101 m!158447))

(assert (=> b!133951 d!41101))

(declare-fun d!41103 () Bool)

(assert (=> d!41103 (= (apply!116 (+!163 lt!70043 (tuple2!2585 lt!70044 (zeroValue!2719 newMap!16))) lt!70047) (apply!116 lt!70043 lt!70047))))

(declare-fun lt!70131 () Unit!4132)

(assert (=> d!41103 (= lt!70131 (choose!828 lt!70043 lt!70044 (zeroValue!2719 newMap!16) lt!70047))))

(declare-fun e!87355 () Bool)

(assert (=> d!41103 e!87355))

(declare-fun res!64475 () Bool)

(assert (=> d!41103 (=> (not res!64475) (not e!87355))))

(assert (=> d!41103 (= res!64475 (contains!886 lt!70043 lt!70047))))

(assert (=> d!41103 (= (addApplyDifferent!92 lt!70043 lt!70044 (zeroValue!2719 newMap!16) lt!70047) lt!70131)))

(declare-fun b!134125 () Bool)

(assert (=> b!134125 (= e!87355 (not (= lt!70047 lt!70044)))))

(assert (= (and d!41103 res!64475) b!134125))

(assert (=> d!41103 m!158435))

(assert (=> d!41103 m!158443))

(declare-fun m!158757 () Bool)

(assert (=> d!41103 m!158757))

(assert (=> d!41103 m!158445))

(declare-fun m!158759 () Bool)

(assert (=> d!41103 m!158759))

(assert (=> d!41103 m!158435))

(assert (=> b!133951 d!41103))

(declare-fun d!41105 () Bool)

(assert (=> d!41105 (= (apply!116 lt!70045 lt!70050) (get!1482 (getValueByKey!170 (toList!851 lt!70045) lt!70050)))))

(declare-fun bs!5566 () Bool)

(assert (= bs!5566 d!41105))

(declare-fun m!158761 () Bool)

(assert (=> bs!5566 m!158761))

(assert (=> bs!5566 m!158761))

(declare-fun m!158763 () Bool)

(assert (=> bs!5566 m!158763))

(assert (=> b!133951 d!41105))

(declare-fun d!41107 () Bool)

(assert (=> d!41107 (= (apply!116 (+!163 lt!70052 (tuple2!2585 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70063) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!70052 (tuple2!2585 lt!70053 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70063)))))

(declare-fun bs!5567 () Bool)

(assert (= bs!5567 d!41107))

(declare-fun m!158765 () Bool)

(assert (=> bs!5567 m!158765))

(assert (=> bs!5567 m!158765))

(declare-fun m!158767 () Bool)

(assert (=> bs!5567 m!158767))

(assert (=> b!133951 d!41107))

(declare-fun d!41109 () Bool)

(declare-fun e!87356 () Bool)

(assert (=> d!41109 e!87356))

(declare-fun res!64477 () Bool)

(assert (=> d!41109 (=> (not res!64477) (not e!87356))))

(declare-fun lt!70134 () ListLongMap!1671)

(assert (=> d!41109 (= res!64477 (contains!886 lt!70134 (_1!1303 (tuple2!2585 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70132 () List!1710)

(assert (=> d!41109 (= lt!70134 (ListLongMap!1672 lt!70132))))

(declare-fun lt!70135 () Unit!4132)

(declare-fun lt!70133 () Unit!4132)

(assert (=> d!41109 (= lt!70135 lt!70133)))

(assert (=> d!41109 (= (getValueByKey!170 lt!70132 (_1!1303 (tuple2!2585 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41109 (= lt!70133 (lemmaContainsTupThenGetReturnValue!88 lt!70132 (_1!1303 (tuple2!2585 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41109 (= lt!70132 (insertStrictlySorted!91 (toList!851 lt!70045) (_1!1303 (tuple2!2585 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41109 (= (+!163 lt!70045 (tuple2!2585 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70134)))

(declare-fun b!134126 () Bool)

(declare-fun res!64476 () Bool)

(assert (=> b!134126 (=> (not res!64476) (not e!87356))))

(assert (=> b!134126 (= res!64476 (= (getValueByKey!170 (toList!851 lt!70134) (_1!1303 (tuple2!2585 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134127 () Bool)

(assert (=> b!134127 (= e!87356 (contains!889 (toList!851 lt!70134) (tuple2!2585 lt!70062 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41109 res!64477) b!134126))

(assert (= (and b!134126 res!64476) b!134127))

(declare-fun m!158769 () Bool)

(assert (=> d!41109 m!158769))

(declare-fun m!158771 () Bool)

(assert (=> d!41109 m!158771))

(declare-fun m!158773 () Bool)

(assert (=> d!41109 m!158773))

(declare-fun m!158775 () Bool)

(assert (=> d!41109 m!158775))

(declare-fun m!158777 () Bool)

(assert (=> b!134126 m!158777))

(declare-fun m!158779 () Bool)

(assert (=> b!134127 m!158779))

(assert (=> b!133951 d!41109))

(declare-fun d!41111 () Bool)

(declare-fun e!87357 () Bool)

(assert (=> d!41111 e!87357))

(declare-fun res!64478 () Bool)

(assert (=> d!41111 (=> res!64478 e!87357)))

(declare-fun lt!70137 () Bool)

(assert (=> d!41111 (= res!64478 (not lt!70137))))

(declare-fun lt!70139 () Bool)

(assert (=> d!41111 (= lt!70137 lt!70139)))

(declare-fun lt!70136 () Unit!4132)

(declare-fun e!87358 () Unit!4132)

(assert (=> d!41111 (= lt!70136 e!87358)))

(declare-fun c!24944 () Bool)

(assert (=> d!41111 (= c!24944 lt!70139)))

(assert (=> d!41111 (= lt!70139 (containsKey!174 (toList!851 (+!163 lt!70049 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16)))) lt!70055))))

(assert (=> d!41111 (= (contains!886 (+!163 lt!70049 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16))) lt!70055) lt!70137)))

(declare-fun b!134128 () Bool)

(declare-fun lt!70138 () Unit!4132)

(assert (=> b!134128 (= e!87358 lt!70138)))

(assert (=> b!134128 (= lt!70138 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!70049 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16)))) lt!70055))))

(assert (=> b!134128 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!70049 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16)))) lt!70055))))

(declare-fun b!134129 () Bool)

(declare-fun Unit!4198 () Unit!4132)

(assert (=> b!134129 (= e!87358 Unit!4198)))

(declare-fun b!134130 () Bool)

(assert (=> b!134130 (= e!87357 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!70049 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16)))) lt!70055)))))

(assert (= (and d!41111 c!24944) b!134128))

(assert (= (and d!41111 (not c!24944)) b!134129))

(assert (= (and d!41111 (not res!64478)) b!134130))

(declare-fun m!158781 () Bool)

(assert (=> d!41111 m!158781))

(declare-fun m!158783 () Bool)

(assert (=> b!134128 m!158783))

(declare-fun m!158785 () Bool)

(assert (=> b!134128 m!158785))

(assert (=> b!134128 m!158785))

(declare-fun m!158787 () Bool)

(assert (=> b!134128 m!158787))

(assert (=> b!134130 m!158785))

(assert (=> b!134130 m!158785))

(assert (=> b!134130 m!158787))

(assert (=> b!133951 d!41111))

(declare-fun d!41113 () Bool)

(declare-fun e!87359 () Bool)

(assert (=> d!41113 e!87359))

(declare-fun res!64480 () Bool)

(assert (=> d!41113 (=> (not res!64480) (not e!87359))))

(declare-fun lt!70142 () ListLongMap!1671)

(assert (=> d!41113 (= res!64480 (contains!886 lt!70142 (_1!1303 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70140 () List!1710)

(assert (=> d!41113 (= lt!70142 (ListLongMap!1672 lt!70140))))

(declare-fun lt!70143 () Unit!4132)

(declare-fun lt!70141 () Unit!4132)

(assert (=> d!41113 (= lt!70143 lt!70141)))

(assert (=> d!41113 (= (getValueByKey!170 lt!70140 (_1!1303 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41113 (= lt!70141 (lemmaContainsTupThenGetReturnValue!88 lt!70140 (_1!1303 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41113 (= lt!70140 (insertStrictlySorted!91 (toList!851 lt!70049) (_1!1303 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41113 (= (+!163 lt!70049 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16))) lt!70142)))

(declare-fun b!134131 () Bool)

(declare-fun res!64479 () Bool)

(assert (=> b!134131 (=> (not res!64479) (not e!87359))))

(assert (=> b!134131 (= res!64479 (= (getValueByKey!170 (toList!851 lt!70142) (_1!1303 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134132 () Bool)

(assert (=> b!134132 (= e!87359 (contains!889 (toList!851 lt!70142) (tuple2!2585 lt!70057 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41113 res!64480) b!134131))

(assert (= (and b!134131 res!64479) b!134132))

(declare-fun m!158789 () Bool)

(assert (=> d!41113 m!158789))

(declare-fun m!158791 () Bool)

(assert (=> d!41113 m!158791))

(declare-fun m!158793 () Bool)

(assert (=> d!41113 m!158793))

(declare-fun m!158795 () Bool)

(assert (=> d!41113 m!158795))

(declare-fun m!158797 () Bool)

(assert (=> b!134131 m!158797))

(declare-fun m!158799 () Bool)

(assert (=> b!134132 m!158799))

(assert (=> b!133951 d!41113))

(declare-fun c!24945 () Bool)

(declare-fun d!41115 () Bool)

(assert (=> d!41115 (= c!24945 (and ((_ is Cons!1706) (toList!851 lt!69721)) (= (_1!1303 (h!2311 (toList!851 lt!69721))) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun e!87360 () Option!176)

(assert (=> d!41115 (= (getValueByKey!170 (toList!851 lt!69721) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) e!87360)))

(declare-fun e!87361 () Option!176)

(declare-fun b!134135 () Bool)

(assert (=> b!134135 (= e!87361 (getValueByKey!170 (t!6152 (toList!851 lt!69721)) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!134134 () Bool)

(assert (=> b!134134 (= e!87360 e!87361)))

(declare-fun c!24946 () Bool)

(assert (=> b!134134 (= c!24946 (and ((_ is Cons!1706) (toList!851 lt!69721)) (not (= (_1!1303 (h!2311 (toList!851 lt!69721))) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!134133 () Bool)

(assert (=> b!134133 (= e!87360 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69721)))))))

(declare-fun b!134136 () Bool)

(assert (=> b!134136 (= e!87361 None!174)))

(assert (= (and d!41115 c!24945) b!134133))

(assert (= (and d!41115 (not c!24945)) b!134134))

(assert (= (and b!134134 c!24946) b!134135))

(assert (= (and b!134134 (not c!24946)) b!134136))

(declare-fun m!158801 () Bool)

(assert (=> b!134135 m!158801))

(assert (=> b!133486 d!41115))

(declare-fun d!41117 () Bool)

(declare-fun e!87362 () Bool)

(assert (=> d!41117 e!87362))

(declare-fun res!64481 () Bool)

(assert (=> d!41117 (=> res!64481 e!87362)))

(declare-fun lt!70145 () Bool)

(assert (=> d!41117 (= res!64481 (not lt!70145))))

(declare-fun lt!70147 () Bool)

(assert (=> d!41117 (= lt!70145 lt!70147)))

(declare-fun lt!70144 () Unit!4132)

(declare-fun e!87363 () Unit!4132)

(assert (=> d!41117 (= lt!70144 e!87363)))

(declare-fun c!24947 () Bool)

(assert (=> d!41117 (= c!24947 lt!70147)))

(assert (=> d!41117 (= lt!70147 (containsKey!174 (toList!851 lt!69797) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41117 (= (contains!886 lt!69797 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70145)))

(declare-fun b!134137 () Bool)

(declare-fun lt!70146 () Unit!4132)

(assert (=> b!134137 (= e!87363 lt!70146)))

(assert (=> b!134137 (= lt!70146 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69797) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> b!134137 (isDefined!124 (getValueByKey!170 (toList!851 lt!69797) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!134138 () Bool)

(declare-fun Unit!4199 () Unit!4132)

(assert (=> b!134138 (= e!87363 Unit!4199)))

(declare-fun b!134139 () Bool)

(assert (=> b!134139 (= e!87362 (isDefined!124 (getValueByKey!170 (toList!851 lt!69797) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (= (and d!41117 c!24947) b!134137))

(assert (= (and d!41117 (not c!24947)) b!134138))

(assert (= (and d!41117 (not res!64481)) b!134139))

(declare-fun m!158803 () Bool)

(assert (=> d!41117 m!158803))

(declare-fun m!158805 () Bool)

(assert (=> b!134137 m!158805))

(assert (=> b!134137 m!157583))

(assert (=> b!134137 m!157583))

(declare-fun m!158807 () Bool)

(assert (=> b!134137 m!158807))

(assert (=> b!134139 m!157583))

(assert (=> b!134139 m!157583))

(assert (=> b!134139 m!158807))

(assert (=> d!40687 d!41117))

(declare-fun d!41119 () Bool)

(declare-fun c!24948 () Bool)

(assert (=> d!41119 (= c!24948 (and ((_ is Cons!1706) lt!69795) (= (_1!1303 (h!2311 lt!69795)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun e!87364 () Option!176)

(assert (=> d!41119 (= (getValueByKey!170 lt!69795 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) e!87364)))

(declare-fun b!134142 () Bool)

(declare-fun e!87365 () Option!176)

(assert (=> b!134142 (= e!87365 (getValueByKey!170 (t!6152 lt!69795) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!134141 () Bool)

(assert (=> b!134141 (= e!87364 e!87365)))

(declare-fun c!24949 () Bool)

(assert (=> b!134141 (= c!24949 (and ((_ is Cons!1706) lt!69795) (not (= (_1!1303 (h!2311 lt!69795)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!134140 () Bool)

(assert (=> b!134140 (= e!87364 (Some!175 (_2!1303 (h!2311 lt!69795))))))

(declare-fun b!134143 () Bool)

(assert (=> b!134143 (= e!87365 None!174)))

(assert (= (and d!41119 c!24948) b!134140))

(assert (= (and d!41119 (not c!24948)) b!134141))

(assert (= (and b!134141 c!24949) b!134142))

(assert (= (and b!134141 (not c!24949)) b!134143))

(declare-fun m!158809 () Bool)

(assert (=> b!134142 m!158809))

(assert (=> d!40687 d!41119))

(declare-fun d!41121 () Bool)

(assert (=> d!41121 (= (getValueByKey!170 lt!69795 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70148 () Unit!4132)

(assert (=> d!41121 (= lt!70148 (choose!834 lt!69795 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun e!87366 () Bool)

(assert (=> d!41121 e!87366))

(declare-fun res!64482 () Bool)

(assert (=> d!41121 (=> (not res!64482) (not e!87366))))

(assert (=> d!41121 (= res!64482 (isStrictlySorted!317 lt!69795))))

(assert (=> d!41121 (= (lemmaContainsTupThenGetReturnValue!88 lt!69795 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70148)))

(declare-fun b!134144 () Bool)

(declare-fun res!64483 () Bool)

(assert (=> b!134144 (=> (not res!64483) (not e!87366))))

(assert (=> b!134144 (= res!64483 (containsKey!174 lt!69795 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!134145 () Bool)

(assert (=> b!134145 (= e!87366 (contains!889 lt!69795 (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (= (and d!41121 res!64482) b!134144))

(assert (= (and b!134144 res!64483) b!134145))

(assert (=> d!41121 m!157577))

(declare-fun m!158811 () Bool)

(assert (=> d!41121 m!158811))

(declare-fun m!158813 () Bool)

(assert (=> d!41121 m!158813))

(declare-fun m!158815 () Bool)

(assert (=> b!134144 m!158815))

(declare-fun m!158817 () Bool)

(assert (=> b!134145 m!158817))

(assert (=> d!40687 d!41121))

(declare-fun b!134146 () Bool)

(declare-fun e!87371 () List!1710)

(assert (=> b!134146 (= e!87371 (insertStrictlySorted!91 (t!6152 (toList!851 call!14628)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!134147 () Bool)

(declare-fun e!87370 () List!1710)

(declare-fun call!14789 () List!1710)

(assert (=> b!134147 (= e!87370 call!14789)))

(declare-fun b!134148 () Bool)

(declare-fun res!64485 () Bool)

(declare-fun e!87368 () Bool)

(assert (=> b!134148 (=> (not res!64485) (not e!87368))))

(declare-fun lt!70149 () List!1710)

(assert (=> b!134148 (= res!64485 (containsKey!174 lt!70149 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun bm!14784 () Bool)

(declare-fun c!24951 () Bool)

(assert (=> bm!14784 (= call!14789 ($colon$colon!91 e!87371 (ite c!24951 (h!2311 (toList!851 call!14628)) (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun c!24952 () Bool)

(assert (=> bm!14784 (= c!24952 c!24951)))

(declare-fun b!134149 () Bool)

(declare-fun c!24953 () Bool)

(declare-fun c!24950 () Bool)

(assert (=> b!134149 (= e!87371 (ite c!24950 (t!6152 (toList!851 call!14628)) (ite c!24953 (Cons!1706 (h!2311 (toList!851 call!14628)) (t!6152 (toList!851 call!14628))) Nil!1707)))))

(declare-fun d!41123 () Bool)

(assert (=> d!41123 e!87368))

(declare-fun res!64484 () Bool)

(assert (=> d!41123 (=> (not res!64484) (not e!87368))))

(assert (=> d!41123 (= res!64484 (isStrictlySorted!317 lt!70149))))

(assert (=> d!41123 (= lt!70149 e!87370)))

(assert (=> d!41123 (= c!24951 (and ((_ is Cons!1706) (toList!851 call!14628)) (bvslt (_1!1303 (h!2311 (toList!851 call!14628))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41123 (isStrictlySorted!317 (toList!851 call!14628))))

(assert (=> d!41123 (= (insertStrictlySorted!91 (toList!851 call!14628) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70149)))

(declare-fun b!134150 () Bool)

(declare-fun e!87367 () List!1710)

(assert (=> b!134150 (= e!87370 e!87367)))

(assert (=> b!134150 (= c!24950 (and ((_ is Cons!1706) (toList!851 call!14628)) (= (_1!1303 (h!2311 (toList!851 call!14628))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!134151 () Bool)

(declare-fun e!87369 () List!1710)

(declare-fun call!14787 () List!1710)

(assert (=> b!134151 (= e!87369 call!14787)))

(declare-fun b!134152 () Bool)

(declare-fun call!14788 () List!1710)

(assert (=> b!134152 (= e!87367 call!14788)))

(declare-fun b!134153 () Bool)

(assert (=> b!134153 (= e!87368 (contains!889 lt!70149 (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun bm!14785 () Bool)

(assert (=> bm!14785 (= call!14788 call!14789)))

(declare-fun bm!14786 () Bool)

(assert (=> bm!14786 (= call!14787 call!14788)))

(declare-fun b!134154 () Bool)

(assert (=> b!134154 (= c!24953 (and ((_ is Cons!1706) (toList!851 call!14628)) (bvsgt (_1!1303 (h!2311 (toList!851 call!14628))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> b!134154 (= e!87367 e!87369)))

(declare-fun b!134155 () Bool)

(assert (=> b!134155 (= e!87369 call!14787)))

(assert (= (and d!41123 c!24951) b!134147))

(assert (= (and d!41123 (not c!24951)) b!134150))

(assert (= (and b!134150 c!24950) b!134152))

(assert (= (and b!134150 (not c!24950)) b!134154))

(assert (= (and b!134154 c!24953) b!134155))

(assert (= (and b!134154 (not c!24953)) b!134151))

(assert (= (or b!134155 b!134151) bm!14786))

(assert (= (or b!134152 bm!14786) bm!14785))

(assert (= (or b!134147 bm!14785) bm!14784))

(assert (= (and bm!14784 c!24952) b!134146))

(assert (= (and bm!14784 (not c!24952)) b!134149))

(assert (= (and d!41123 res!64484) b!134148))

(assert (= (and b!134148 res!64485) b!134153))

(declare-fun m!158819 () Bool)

(assert (=> b!134153 m!158819))

(declare-fun m!158821 () Bool)

(assert (=> b!134148 m!158821))

(declare-fun m!158823 () Bool)

(assert (=> b!134146 m!158823))

(declare-fun m!158825 () Bool)

(assert (=> d!41123 m!158825))

(declare-fun m!158827 () Bool)

(assert (=> d!41123 m!158827))

(declare-fun m!158829 () Bool)

(assert (=> bm!14784 m!158829))

(assert (=> d!40687 d!41123))

(assert (=> d!40945 d!40333))

(assert (=> d!40945 d!40335))

(declare-fun d!41125 () Bool)

(assert (=> d!41125 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) lt!69216))))

(declare-fun lt!70150 () Unit!4132)

(assert (=> d!41125 (= lt!70150 (choose!826 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) lt!69216))))

(declare-fun e!87372 () Bool)

(assert (=> d!41125 e!87372))

(declare-fun res!64486 () Bool)

(assert (=> d!41125 (=> (not res!64486) (not e!87372))))

(assert (=> d!41125 (= res!64486 (isStrictlySorted!317 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))))))

(assert (=> d!41125 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) lt!69216) lt!70150)))

(declare-fun b!134156 () Bool)

(assert (=> b!134156 (= e!87372 (containsKey!174 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) lt!69216))))

(assert (= (and d!41125 res!64486) b!134156))

(assert (=> d!41125 m!157813))

(assert (=> d!41125 m!157813))

(assert (=> d!41125 m!157815))

(declare-fun m!158831 () Bool)

(assert (=> d!41125 m!158831))

(declare-fun m!158833 () Bool)

(assert (=> d!41125 m!158833))

(assert (=> b!134156 m!157809))

(assert (=> b!133639 d!41125))

(declare-fun d!41127 () Bool)

(assert (=> d!41127 (= (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) lt!69216)) (not (isEmpty!413 (getValueByKey!170 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) lt!69216))))))

(declare-fun bs!5568 () Bool)

(assert (= bs!5568 d!41127))

(assert (=> bs!5568 m!157813))

(declare-fun m!158835 () Bool)

(assert (=> bs!5568 m!158835))

(assert (=> b!133639 d!41127))

(declare-fun d!41129 () Bool)

(declare-fun c!24954 () Bool)

(assert (=> d!41129 (= c!24954 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))) lt!69216)))))

(declare-fun e!87373 () Option!176)

(assert (=> d!41129 (= (getValueByKey!170 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) lt!69216) e!87373)))

(declare-fun e!87374 () Option!176)

(declare-fun b!134159 () Bool)

(assert (=> b!134159 (= e!87374 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))) lt!69216))))

(declare-fun b!134158 () Bool)

(assert (=> b!134158 (= e!87373 e!87374)))

(declare-fun c!24955 () Bool)

(assert (=> b!134158 (= c!24955 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))) lt!69216))))))

(declare-fun b!134157 () Bool)

(assert (=> b!134157 (= e!87373 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))))))))

(declare-fun b!134160 () Bool)

(assert (=> b!134160 (= e!87374 None!174)))

(assert (= (and d!41129 c!24954) b!134157))

(assert (= (and d!41129 (not c!24954)) b!134158))

(assert (= (and b!134158 c!24955) b!134159))

(assert (= (and b!134158 (not c!24955)) b!134160))

(declare-fun m!158837 () Bool)

(assert (=> b!134159 m!158837))

(assert (=> b!133639 d!41129))

(assert (=> b!133980 d!40477))

(declare-fun d!41131 () Bool)

(declare-fun res!64487 () Bool)

(declare-fun e!87375 () Bool)

(assert (=> d!41131 (=> res!64487 e!87375)))

(assert (=> d!41131 (= res!64487 (and ((_ is Cons!1706) (toList!851 lt!69220)) (= (_1!1303 (h!2311 (toList!851 lt!69220))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!41131 (= (containsKey!174 (toList!851 lt!69220) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) e!87375)))

(declare-fun b!134161 () Bool)

(declare-fun e!87376 () Bool)

(assert (=> b!134161 (= e!87375 e!87376)))

(declare-fun res!64488 () Bool)

(assert (=> b!134161 (=> (not res!64488) (not e!87376))))

(assert (=> b!134161 (= res!64488 (and (or (not ((_ is Cons!1706) (toList!851 lt!69220))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69220))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1706) (toList!851 lt!69220)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69220))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!134162 () Bool)

(assert (=> b!134162 (= e!87376 (containsKey!174 (t!6152 (toList!851 lt!69220)) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41131 (not res!64487)) b!134161))

(assert (= (and b!134161 res!64488) b!134162))

(assert (=> b!134162 m!156125))

(declare-fun m!158839 () Bool)

(assert (=> b!134162 m!158839))

(assert (=> d!40775 d!41131))

(declare-fun d!41133 () Bool)

(assert (=> d!41133 (= (size!2524 (_2!1304 lt!69115)) (bvadd (_size!597 (_2!1304 lt!69115)) (bvsdiv (bvadd (extraKeys!2629 (_2!1304 lt!69115)) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!133299 d!41133))

(assert (=> d!40629 d!40631))

(assert (=> d!40629 d!40633))

(declare-fun d!41135 () Bool)

(assert (=> d!41135 (isDefined!124 (getValueByKey!170 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> d!41135 true))

(declare-fun _$12!400 () Unit!4132)

(assert (=> d!41135 (= (choose!826 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) _$12!400)))

(declare-fun bs!5569 () Bool)

(assert (= bs!5569 d!41135))

(assert (=> bs!5569 m!155841))

(assert (=> bs!5569 m!156691))

(assert (=> bs!5569 m!156691))

(assert (=> bs!5569 m!156693))

(assert (=> d!40629 d!41135))

(declare-fun d!41137 () Bool)

(declare-fun res!64489 () Bool)

(declare-fun e!87377 () Bool)

(assert (=> d!41137 (=> res!64489 e!87377)))

(assert (=> d!41137 (= res!64489 (or ((_ is Nil!1707) (toList!851 e!86457)) ((_ is Nil!1707) (t!6152 (toList!851 e!86457)))))))

(assert (=> d!41137 (= (isStrictlySorted!317 (toList!851 e!86457)) e!87377)))

(declare-fun b!134163 () Bool)

(declare-fun e!87378 () Bool)

(assert (=> b!134163 (= e!87377 e!87378)))

(declare-fun res!64490 () Bool)

(assert (=> b!134163 (=> (not res!64490) (not e!87378))))

(assert (=> b!134163 (= res!64490 (bvslt (_1!1303 (h!2311 (toList!851 e!86457))) (_1!1303 (h!2311 (t!6152 (toList!851 e!86457))))))))

(declare-fun b!134164 () Bool)

(assert (=> b!134164 (= e!87378 (isStrictlySorted!317 (t!6152 (toList!851 e!86457))))))

(assert (= (and d!41137 (not res!64489)) b!134163))

(assert (= (and b!134163 res!64490) b!134164))

(declare-fun m!158841 () Bool)

(assert (=> b!134164 m!158841))

(assert (=> d!40629 d!41137))

(declare-fun d!41139 () Bool)

(assert (=> d!41139 (isDefined!124 (getValueByKey!170 (toList!851 lt!69519) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun lt!70151 () Unit!4132)

(assert (=> d!41139 (= lt!70151 (choose!826 (toList!851 lt!69519) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun e!87379 () Bool)

(assert (=> d!41139 e!87379))

(declare-fun res!64491 () Bool)

(assert (=> d!41139 (=> (not res!64491) (not e!87379))))

(assert (=> d!41139 (= res!64491 (isStrictlySorted!317 (toList!851 lt!69519)))))

(assert (=> d!41139 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69519) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!70151)))

(declare-fun b!134165 () Bool)

(assert (=> b!134165 (= e!87379 (containsKey!174 (toList!851 lt!69519) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!41139 res!64491) b!134165))

(assert (=> d!41139 m!156719))

(assert (=> d!41139 m!156719))

(assert (=> d!41139 m!157911))

(declare-fun m!158843 () Bool)

(assert (=> d!41139 m!158843))

(declare-fun m!158845 () Bool)

(assert (=> d!41139 m!158845))

(assert (=> b!134165 m!157907))

(assert (=> b!133687 d!41139))

(declare-fun d!41141 () Bool)

(assert (=> d!41141 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69519) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69519) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun bs!5570 () Bool)

(assert (= bs!5570 d!41141))

(assert (=> bs!5570 m!156719))

(declare-fun m!158847 () Bool)

(assert (=> bs!5570 m!158847))

(assert (=> b!133687 d!41141))

(assert (=> b!133687 d!40851))

(assert (=> b!133511 d!40519))

(declare-fun d!41143 () Bool)

(assert (=> d!41143 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69331) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69331) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun bs!5571 () Bool)

(assert (= bs!5571 d!41143))

(assert (=> bs!5571 m!156423))

(declare-fun m!158849 () Bool)

(assert (=> bs!5571 m!158849))

(assert (=> b!133445 d!41143))

(assert (=> b!133445 d!40767))

(declare-fun d!41145 () Bool)

(assert (=> d!41145 (= (isEmpty!413 (getValueByKey!170 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!175) (getValueByKey!170 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!40651 d!41145))

(assert (=> b!133706 d!40863))

(declare-fun d!41147 () Bool)

(assert (=> d!41147 (= (get!1482 (getValueByKey!170 (toList!851 lt!69355) lt!69366)) (v!3198 (getValueByKey!170 (toList!851 lt!69355) lt!69366)))))

(assert (=> d!40941 d!41147))

(declare-fun d!41149 () Bool)

(declare-fun c!24956 () Bool)

(assert (=> d!41149 (= c!24956 (and ((_ is Cons!1706) (toList!851 lt!69355)) (= (_1!1303 (h!2311 (toList!851 lt!69355))) lt!69366)))))

(declare-fun e!87380 () Option!176)

(assert (=> d!41149 (= (getValueByKey!170 (toList!851 lt!69355) lt!69366) e!87380)))

(declare-fun b!134168 () Bool)

(declare-fun e!87381 () Option!176)

(assert (=> b!134168 (= e!87381 (getValueByKey!170 (t!6152 (toList!851 lt!69355)) lt!69366))))

(declare-fun b!134167 () Bool)

(assert (=> b!134167 (= e!87380 e!87381)))

(declare-fun c!24957 () Bool)

(assert (=> b!134167 (= c!24957 (and ((_ is Cons!1706) (toList!851 lt!69355)) (not (= (_1!1303 (h!2311 (toList!851 lt!69355))) lt!69366))))))

(declare-fun b!134166 () Bool)

(assert (=> b!134166 (= e!87380 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69355)))))))

(declare-fun b!134169 () Bool)

(assert (=> b!134169 (= e!87381 None!174)))

(assert (= (and d!41149 c!24956) b!134166))

(assert (= (and d!41149 (not c!24956)) b!134167))

(assert (= (and b!134167 c!24957) b!134168))

(assert (= (and b!134167 (not c!24957)) b!134169))

(declare-fun m!158851 () Bool)

(assert (=> b!134168 m!158851))

(assert (=> d!40941 d!41149))

(declare-fun d!41151 () Bool)

(declare-fun c!24958 () Bool)

(assert (=> d!41151 (= c!24958 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69170))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69170)))) lt!69174)))))

(declare-fun e!87382 () Option!176)

(assert (=> d!41151 (= (getValueByKey!170 (t!6152 (toList!851 lt!69170)) lt!69174) e!87382)))

(declare-fun b!134172 () Bool)

(declare-fun e!87383 () Option!176)

(assert (=> b!134172 (= e!87383 (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69170))) lt!69174))))

(declare-fun b!134171 () Bool)

(assert (=> b!134171 (= e!87382 e!87383)))

(declare-fun c!24959 () Bool)

(assert (=> b!134171 (= c!24959 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69170))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69170)))) lt!69174))))))

(declare-fun b!134170 () Bool)

(assert (=> b!134170 (= e!87382 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 lt!69170))))))))

(declare-fun b!134173 () Bool)

(assert (=> b!134173 (= e!87383 None!174)))

(assert (= (and d!41151 c!24958) b!134170))

(assert (= (and d!41151 (not c!24958)) b!134171))

(assert (= (and b!134171 c!24959) b!134172))

(assert (= (and b!134171 (not c!24959)) b!134173))

(declare-fun m!158853 () Bool)

(assert (=> b!134172 m!158853))

(assert (=> b!133508 d!41151))

(assert (=> d!40539 d!40269))

(assert (=> d!40751 d!40753))

(assert (=> d!40751 d!40739))

(declare-fun d!41153 () Bool)

(assert (=> d!41153 (contains!886 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))) lt!69216)))

(assert (=> d!41153 true))

(declare-fun _$35!382 () Unit!4132)

(assert (=> d!41153 (= (choose!829 lt!69210 lt!69218 (zeroValue!2719 newMap!16) lt!69216) _$35!382)))

(declare-fun bs!5572 () Bool)

(assert (= bs!5572 d!41153))

(assert (=> bs!5572 m!156153))

(assert (=> bs!5572 m!156153))

(assert (=> bs!5572 m!156165))

(assert (=> d!40751 d!41153))

(declare-fun d!41155 () Bool)

(declare-fun e!87384 () Bool)

(assert (=> d!41155 e!87384))

(declare-fun res!64492 () Bool)

(assert (=> d!41155 (=> res!64492 e!87384)))

(declare-fun lt!70153 () Bool)

(assert (=> d!41155 (= res!64492 (not lt!70153))))

(declare-fun lt!70155 () Bool)

(assert (=> d!41155 (= lt!70153 lt!70155)))

(declare-fun lt!70152 () Unit!4132)

(declare-fun e!87385 () Unit!4132)

(assert (=> d!41155 (= lt!70152 e!87385)))

(declare-fun c!24960 () Bool)

(assert (=> d!41155 (= c!24960 lt!70155)))

(assert (=> d!41155 (= lt!70155 (containsKey!174 (toList!851 lt!69210) lt!69216))))

(assert (=> d!41155 (= (contains!886 lt!69210 lt!69216) lt!70153)))

(declare-fun b!134174 () Bool)

(declare-fun lt!70154 () Unit!4132)

(assert (=> b!134174 (= e!87385 lt!70154)))

(assert (=> b!134174 (= lt!70154 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69210) lt!69216))))

(assert (=> b!134174 (isDefined!124 (getValueByKey!170 (toList!851 lt!69210) lt!69216))))

(declare-fun b!134175 () Bool)

(declare-fun Unit!4200 () Unit!4132)

(assert (=> b!134175 (= e!87385 Unit!4200)))

(declare-fun b!134176 () Bool)

(assert (=> b!134176 (= e!87384 (isDefined!124 (getValueByKey!170 (toList!851 lt!69210) lt!69216)))))

(assert (= (and d!41155 c!24960) b!134174))

(assert (= (and d!41155 (not c!24960)) b!134175))

(assert (= (and d!41155 (not res!64492)) b!134176))

(declare-fun m!158855 () Bool)

(assert (=> d!41155 m!158855))

(declare-fun m!158857 () Bool)

(assert (=> b!134174 m!158857))

(declare-fun m!158859 () Bool)

(assert (=> b!134174 m!158859))

(assert (=> b!134174 m!158859))

(declare-fun m!158861 () Bool)

(assert (=> b!134174 m!158861))

(assert (=> b!134176 m!158859))

(assert (=> b!134176 m!158859))

(assert (=> b!134176 m!158861))

(assert (=> d!40751 d!41155))

(declare-fun d!41157 () Bool)

(declare-fun res!64493 () Bool)

(declare-fun e!87386 () Bool)

(assert (=> d!41157 (=> res!64493 e!87386)))

(assert (=> d!41157 (= res!64493 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303)))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))))) lt!69304)))))

(assert (=> d!41157 (= (containsKey!174 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))) lt!69304) e!87386)))

(declare-fun b!134177 () Bool)

(declare-fun e!87387 () Bool)

(assert (=> b!134177 (= e!87386 e!87387)))

(declare-fun res!64494 () Bool)

(assert (=> b!134177 (=> (not res!64494) (not e!87387))))

(assert (=> b!134177 (= res!64494 (and (or (not ((_ is Cons!1706) (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))))) (bvsle (_1!1303 (h!2311 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))))) lt!69304)) ((_ is Cons!1706) (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303)))) (bvslt (_1!1303 (h!2311 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))))) lt!69304)))))

(declare-fun b!134178 () Bool)

(assert (=> b!134178 (= e!87387 (containsKey!174 (t!6152 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303)))) lt!69304))))

(assert (= (and d!41157 (not res!64493)) b!134177))

(assert (= (and b!134177 res!64494) b!134178))

(declare-fun m!158863 () Bool)

(assert (=> b!134178 m!158863))

(assert (=> d!40487 d!41157))

(assert (=> d!40829 d!40351))

(declare-fun d!41159 () Bool)

(assert (=> d!41159 (= (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (and (not (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133434 d!41159))

(declare-fun d!41161 () Bool)

(assert (=> d!41161 (= (get!1481 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133196 d!41161))

(declare-fun d!41163 () Bool)

(assert (=> d!41163 (contains!886 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2248 lt!69447) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))))))

(assert (=> d!41163 true))

(declare-fun _$16!152 () Unit!4132)

(assert (=> d!41163 (= (choose!824 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (defaultEntry!2864 newMap!16)) _$16!152)))

(declare-fun bs!5573 () Bool)

(assert (= bs!5573 d!41163))

(assert (=> bs!5573 m!156569))

(assert (=> bs!5573 m!157121))

(assert (=> bs!5573 m!156569))

(assert (=> bs!5573 m!157121))

(assert (=> bs!5573 m!157123))

(assert (=> d!40553 d!41163))

(assert (=> d!40553 d!40425))

(assert (=> d!40789 d!40453))

(assert (=> d!40789 d!40455))

(declare-fun d!41165 () Bool)

(assert (=> d!41165 (isDefined!124 (getValueByKey!170 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41165 true))

(declare-fun _$12!401 () Unit!4132)

(assert (=> d!41165 (= (choose!826 (toList!851 lt!69186) #b0000000000000000000000000000000000000000000000000000000000000000) _$12!401)))

(declare-fun bs!5574 () Bool)

(assert (= bs!5574 d!41165))

(assert (=> bs!5574 m!156117))

(assert (=> bs!5574 m!156117))

(assert (=> bs!5574 m!156315))

(assert (=> d!40789 d!41165))

(declare-fun d!41167 () Bool)

(declare-fun res!64495 () Bool)

(declare-fun e!87388 () Bool)

(assert (=> d!41167 (=> res!64495 e!87388)))

(assert (=> d!41167 (= res!64495 (or ((_ is Nil!1707) (toList!851 lt!69186)) ((_ is Nil!1707) (t!6152 (toList!851 lt!69186)))))))

(assert (=> d!41167 (= (isStrictlySorted!317 (toList!851 lt!69186)) e!87388)))

(declare-fun b!134179 () Bool)

(declare-fun e!87389 () Bool)

(assert (=> b!134179 (= e!87388 e!87389)))

(declare-fun res!64496 () Bool)

(assert (=> b!134179 (=> (not res!64496) (not e!87389))))

(assert (=> b!134179 (= res!64496 (bvslt (_1!1303 (h!2311 (toList!851 lt!69186))) (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186))))))))

(declare-fun b!134180 () Bool)

(assert (=> b!134180 (= e!87389 (isStrictlySorted!317 (t!6152 (toList!851 lt!69186))))))

(assert (= (and d!41167 (not res!64495)) b!134179))

(assert (= (and b!134179 res!64496) b!134180))

(declare-fun m!158865 () Bool)

(assert (=> b!134180 m!158865))

(assert (=> d!40789 d!41167))

(declare-fun d!41169 () Bool)

(declare-fun e!87390 () Bool)

(assert (=> d!41169 e!87390))

(declare-fun res!64497 () Bool)

(assert (=> d!41169 (=> res!64497 e!87390)))

(declare-fun lt!70157 () Bool)

(assert (=> d!41169 (= res!64497 (not lt!70157))))

(declare-fun lt!70159 () Bool)

(assert (=> d!41169 (= lt!70157 lt!70159)))

(declare-fun lt!70156 () Unit!4132)

(declare-fun e!87391 () Unit!4132)

(assert (=> d!41169 (= lt!70156 e!87391)))

(declare-fun c!24961 () Bool)

(assert (=> d!41169 (= c!24961 lt!70159)))

(assert (=> d!41169 (= lt!70159 (containsKey!174 (toList!851 lt!69674) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41169 (= (contains!886 lt!69674 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70157)))

(declare-fun b!134181 () Bool)

(declare-fun lt!70158 () Unit!4132)

(assert (=> b!134181 (= e!87391 lt!70158)))

(assert (=> b!134181 (= lt!70158 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69674) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134181 (isDefined!124 (getValueByKey!170 (toList!851 lt!69674) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134182 () Bool)

(declare-fun Unit!4201 () Unit!4132)

(assert (=> b!134182 (= e!87391 Unit!4201)))

(declare-fun b!134183 () Bool)

(assert (=> b!134183 (= e!87390 (isDefined!124 (getValueByKey!170 (toList!851 lt!69674) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41169 c!24961) b!134181))

(assert (= (and d!41169 (not c!24961)) b!134182))

(assert (= (and d!41169 (not res!64497)) b!134183))

(declare-fun m!158867 () Bool)

(assert (=> d!41169 m!158867))

(declare-fun m!158869 () Bool)

(assert (=> b!134181 m!158869))

(declare-fun m!158871 () Bool)

(assert (=> b!134181 m!158871))

(assert (=> b!134181 m!158871))

(declare-fun m!158873 () Bool)

(assert (=> b!134181 m!158873))

(assert (=> b!134183 m!158871))

(assert (=> b!134183 m!158871))

(assert (=> b!134183 m!158873))

(assert (=> bm!14708 d!41169))

(declare-fun d!41171 () Bool)

(declare-fun e!87392 () Bool)

(assert (=> d!41171 e!87392))

(declare-fun res!64499 () Bool)

(assert (=> d!41171 (=> (not res!64499) (not e!87392))))

(declare-fun lt!70162 () ListLongMap!1671)

(assert (=> d!41171 (= res!64499 (contains!886 lt!70162 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70160 () List!1710)

(assert (=> d!41171 (= lt!70162 (ListLongMap!1672 lt!70160))))

(declare-fun lt!70163 () Unit!4132)

(declare-fun lt!70161 () Unit!4132)

(assert (=> d!41171 (= lt!70163 lt!70161)))

(assert (=> d!41171 (= (getValueByKey!170 lt!70160 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41171 (= lt!70161 (lemmaContainsTupThenGetReturnValue!88 lt!70160 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41171 (= lt!70160 (insertStrictlySorted!91 (toList!851 call!14722) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41171 (= (+!163 call!14722 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70162)))

(declare-fun b!134184 () Bool)

(declare-fun res!64498 () Bool)

(assert (=> b!134184 (=> (not res!64498) (not e!87392))))

(assert (=> b!134184 (= res!64498 (= (getValueByKey!170 (toList!851 lt!70162) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!134185 () Bool)

(assert (=> b!134185 (= e!87392 (contains!889 (toList!851 lt!70162) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!41171 res!64499) b!134184))

(assert (= (and b!134184 res!64498) b!134185))

(declare-fun m!158875 () Bool)

(assert (=> d!41171 m!158875))

(declare-fun m!158877 () Bool)

(assert (=> d!41171 m!158877))

(declare-fun m!158879 () Bool)

(assert (=> d!41171 m!158879))

(declare-fun m!158881 () Bool)

(assert (=> d!41171 m!158881))

(declare-fun m!158883 () Bool)

(assert (=> b!134184 m!158883))

(declare-fun m!158885 () Bool)

(assert (=> b!134185 m!158885))

(assert (=> b!133525 d!41171))

(declare-fun d!41173 () Bool)

(declare-fun e!87393 () Bool)

(assert (=> d!41173 e!87393))

(declare-fun res!64500 () Bool)

(assert (=> d!41173 (=> res!64500 e!87393)))

(declare-fun lt!70165 () Bool)

(assert (=> d!41173 (= res!64500 (not lt!70165))))

(declare-fun lt!70167 () Bool)

(assert (=> d!41173 (= lt!70165 lt!70167)))

(declare-fun lt!70164 () Unit!4132)

(declare-fun e!87394 () Unit!4132)

(assert (=> d!41173 (= lt!70164 e!87394)))

(declare-fun c!24962 () Bool)

(assert (=> d!41173 (= c!24962 lt!70167)))

(assert (=> d!41173 (= lt!70167 (containsKey!174 (toList!851 lt!69641) (select (arr!2248 lt!69447) #b00000000000000000000000000000000)))))

(assert (=> d!41173 (= (contains!886 lt!69641 (select (arr!2248 lt!69447) #b00000000000000000000000000000000)) lt!70165)))

(declare-fun b!134186 () Bool)

(declare-fun lt!70166 () Unit!4132)

(assert (=> b!134186 (= e!87394 lt!70166)))

(assert (=> b!134186 (= lt!70166 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69641) (select (arr!2248 lt!69447) #b00000000000000000000000000000000)))))

(assert (=> b!134186 (isDefined!124 (getValueByKey!170 (toList!851 lt!69641) (select (arr!2248 lt!69447) #b00000000000000000000000000000000)))))

(declare-fun b!134187 () Bool)

(declare-fun Unit!4202 () Unit!4132)

(assert (=> b!134187 (= e!87394 Unit!4202)))

(declare-fun b!134188 () Bool)

(assert (=> b!134188 (= e!87393 (isDefined!124 (getValueByKey!170 (toList!851 lt!69641) (select (arr!2248 lt!69447) #b00000000000000000000000000000000))))))

(assert (= (and d!41173 c!24962) b!134186))

(assert (= (and d!41173 (not c!24962)) b!134187))

(assert (= (and d!41173 (not res!64500)) b!134188))

(assert (=> d!41173 m!157063))

(declare-fun m!158887 () Bool)

(assert (=> d!41173 m!158887))

(assert (=> b!134186 m!157063))

(declare-fun m!158889 () Bool)

(assert (=> b!134186 m!158889))

(assert (=> b!134186 m!157063))

(declare-fun m!158891 () Bool)

(assert (=> b!134186 m!158891))

(assert (=> b!134186 m!158891))

(declare-fun m!158893 () Bool)

(assert (=> b!134186 m!158893))

(assert (=> b!134188 m!157063))

(assert (=> b!134188 m!158891))

(assert (=> b!134188 m!158891))

(assert (=> b!134188 m!158893))

(assert (=> b!133369 d!41173))

(declare-fun d!41175 () Bool)

(declare-fun res!64501 () Bool)

(declare-fun e!87395 () Bool)

(assert (=> d!41175 (=> res!64501 e!87395)))

(assert (=> d!41175 (= res!64501 (and ((_ is Cons!1706) (toList!851 (map!1391 (_2!1304 lt!69440)))) (= (_1!1303 (h!2311 (toList!851 (map!1391 (_2!1304 lt!69440))))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(assert (=> d!41175 (= (containsKey!174 (toList!851 (map!1391 (_2!1304 lt!69440))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!87395)))

(declare-fun b!134189 () Bool)

(declare-fun e!87396 () Bool)

(assert (=> b!134189 (= e!87395 e!87396)))

(declare-fun res!64502 () Bool)

(assert (=> b!134189 (=> (not res!64502) (not e!87396))))

(assert (=> b!134189 (= res!64502 (and (or (not ((_ is Cons!1706) (toList!851 (map!1391 (_2!1304 lt!69440))))) (bvsle (_1!1303 (h!2311 (toList!851 (map!1391 (_2!1304 lt!69440))))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) ((_ is Cons!1706) (toList!851 (map!1391 (_2!1304 lt!69440)))) (bvslt (_1!1303 (h!2311 (toList!851 (map!1391 (_2!1304 lt!69440))))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun b!134190 () Bool)

(assert (=> b!134190 (= e!87396 (containsKey!174 (t!6152 (toList!851 (map!1391 (_2!1304 lt!69440)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!41175 (not res!64501)) b!134189))

(assert (= (and b!134189 res!64502) b!134190))

(assert (=> b!134190 m!155841))

(declare-fun m!158895 () Bool)

(assert (=> b!134190 m!158895))

(assert (=> d!40655 d!41175))

(declare-fun d!41177 () Bool)

(assert (=> d!41177 (= (get!1482 (getValueByKey!170 (toList!851 lt!69477) lt!69488)) (v!3198 (getValueByKey!170 (toList!851 lt!69477) lt!69488)))))

(assert (=> d!40599 d!41177))

(declare-fun d!41179 () Bool)

(declare-fun c!24963 () Bool)

(assert (=> d!41179 (= c!24963 (and ((_ is Cons!1706) (toList!851 lt!69477)) (= (_1!1303 (h!2311 (toList!851 lt!69477))) lt!69488)))))

(declare-fun e!87397 () Option!176)

(assert (=> d!41179 (= (getValueByKey!170 (toList!851 lt!69477) lt!69488) e!87397)))

(declare-fun b!134193 () Bool)

(declare-fun e!87398 () Option!176)

(assert (=> b!134193 (= e!87398 (getValueByKey!170 (t!6152 (toList!851 lt!69477)) lt!69488))))

(declare-fun b!134192 () Bool)

(assert (=> b!134192 (= e!87397 e!87398)))

(declare-fun c!24964 () Bool)

(assert (=> b!134192 (= c!24964 (and ((_ is Cons!1706) (toList!851 lt!69477)) (not (= (_1!1303 (h!2311 (toList!851 lt!69477))) lt!69488))))))

(declare-fun b!134191 () Bool)

(assert (=> b!134191 (= e!87397 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69477)))))))

(declare-fun b!134194 () Bool)

(assert (=> b!134194 (= e!87398 None!174)))

(assert (= (and d!41179 c!24963) b!134191))

(assert (= (and d!41179 (not c!24963)) b!134192))

(assert (= (and b!134192 c!24964) b!134193))

(assert (= (and b!134192 (not c!24964)) b!134194))

(declare-fun m!158897 () Bool)

(assert (=> b!134193 m!158897))

(assert (=> d!40599 d!41179))

(declare-fun d!41181 () Bool)

(assert (=> d!41181 (= (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69234 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))) lt!69238)) (v!3198 (getValueByKey!170 (toList!851 (+!163 lt!69234 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))) lt!69238)))))

(assert (=> d!40719 d!41181))

(declare-fun d!41183 () Bool)

(declare-fun c!24965 () Bool)

(assert (=> d!41183 (= c!24965 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69234 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69234 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))) lt!69238)))))

(declare-fun e!87399 () Option!176)

(assert (=> d!41183 (= (getValueByKey!170 (toList!851 (+!163 lt!69234 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))) lt!69238) e!87399)))

(declare-fun b!134197 () Bool)

(declare-fun e!87400 () Option!176)

(assert (=> b!134197 (= e!87400 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69234 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))) lt!69238))))

(declare-fun b!134196 () Bool)

(assert (=> b!134196 (= e!87399 e!87400)))

(declare-fun c!24966 () Bool)

(assert (=> b!134196 (= c!24966 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69234 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69234 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))) lt!69238))))))

(declare-fun b!134195 () Bool)

(assert (=> b!134195 (= e!87399 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69234 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))))))))

(declare-fun b!134198 () Bool)

(assert (=> b!134198 (= e!87400 None!174)))

(assert (= (and d!41183 c!24965) b!134195))

(assert (= (and d!41183 (not c!24965)) b!134196))

(assert (= (and b!134196 c!24966) b!134197))

(assert (= (and b!134196 (not c!24966)) b!134198))

(declare-fun m!158899 () Bool)

(assert (=> b!134197 m!158899))

(assert (=> d!40719 d!41183))

(declare-fun d!41185 () Bool)

(assert (=> d!41185 (= (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and (not (= (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133547 d!41185))

(declare-fun d!41187 () Bool)

(declare-fun c!24967 () Bool)

(assert (=> d!41187 (= c!24967 (and ((_ is Cons!1706) (toList!851 lt!69832)) (= (_1!1303 (h!2311 (toList!851 lt!69832))) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun e!87401 () Option!176)

(assert (=> d!41187 (= (getValueByKey!170 (toList!851 lt!69832) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) e!87401)))

(declare-fun e!87402 () Option!176)

(declare-fun b!134201 () Bool)

(assert (=> b!134201 (= e!87402 (getValueByKey!170 (t!6152 (toList!851 lt!69832)) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!134200 () Bool)

(assert (=> b!134200 (= e!87401 e!87402)))

(declare-fun c!24968 () Bool)

(assert (=> b!134200 (= c!24968 (and ((_ is Cons!1706) (toList!851 lt!69832)) (not (= (_1!1303 (h!2311 (toList!851 lt!69832))) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))))

(declare-fun b!134199 () Bool)

(assert (=> b!134199 (= e!87401 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69832)))))))

(declare-fun b!134202 () Bool)

(assert (=> b!134202 (= e!87402 None!174)))

(assert (= (and d!41187 c!24967) b!134199))

(assert (= (and d!41187 (not c!24967)) b!134200))

(assert (= (and b!134200 c!24968) b!134201))

(assert (= (and b!134200 (not c!24968)) b!134202))

(declare-fun m!158901 () Bool)

(assert (=> b!134201 m!158901))

(assert (=> b!133616 d!41187))

(declare-fun d!41189 () Bool)

(declare-fun res!64503 () Bool)

(declare-fun e!87403 () Bool)

(assert (=> d!41189 (=> res!64503 e!87403)))

(assert (=> d!41189 (= res!64503 (and ((_ is Cons!1706) (toList!851 lt!69327)) (= (_1!1303 (h!2311 (toList!851 lt!69327))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!41189 (= (containsKey!174 (toList!851 lt!69327) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87403)))

(declare-fun b!134203 () Bool)

(declare-fun e!87404 () Bool)

(assert (=> b!134203 (= e!87403 e!87404)))

(declare-fun res!64504 () Bool)

(assert (=> b!134203 (=> (not res!64504) (not e!87404))))

(assert (=> b!134203 (= res!64504 (and (or (not ((_ is Cons!1706) (toList!851 lt!69327))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69327))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Cons!1706) (toList!851 lt!69327)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69327))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!134204 () Bool)

(assert (=> b!134204 (= e!87404 (containsKey!174 (t!6152 (toList!851 lt!69327)) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!41189 (not res!64503)) b!134203))

(assert (= (and b!134203 res!64504) b!134204))

(declare-fun m!158903 () Bool)

(assert (=> b!134204 m!158903))

(assert (=> d!40887 d!41189))

(declare-fun d!41191 () Bool)

(assert (=> d!41191 (= (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69480)) (not (isEmpty!413 (getValueByKey!170 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69480))))))

(declare-fun bs!5575 () Bool)

(assert (= bs!5575 d!41191))

(assert (=> bs!5575 m!157331))

(declare-fun m!158905 () Bool)

(assert (=> bs!5575 m!158905))

(assert (=> b!133485 d!41191))

(declare-fun c!24969 () Bool)

(declare-fun d!41193 () Bool)

(assert (=> d!41193 (= c!24969 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) lt!69480)))))

(declare-fun e!87405 () Option!176)

(assert (=> d!41193 (= (getValueByKey!170 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69480) e!87405)))

(declare-fun e!87406 () Option!176)

(declare-fun b!134207 () Bool)

(assert (=> b!134207 (= e!87406 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) lt!69480))))

(declare-fun b!134206 () Bool)

(assert (=> b!134206 (= e!87405 e!87406)))

(declare-fun c!24970 () Bool)

(assert (=> b!134206 (= c!24970 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) lt!69480))))))

(declare-fun b!134205 () Bool)

(assert (=> b!134205 (= e!87405 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))))

(declare-fun b!134208 () Bool)

(assert (=> b!134208 (= e!87406 None!174)))

(assert (= (and d!41193 c!24969) b!134205))

(assert (= (and d!41193 (not c!24969)) b!134206))

(assert (= (and b!134206 c!24970) b!134207))

(assert (= (and b!134206 (not c!24970)) b!134208))

(declare-fun m!158907 () Bool)

(assert (=> b!134207 m!158907))

(assert (=> b!133485 d!41193))

(declare-fun d!41195 () Bool)

(assert (=> d!41195 (isDefined!124 (getValueByKey!170 (toList!851 lt!69176) lt!69182))))

(declare-fun lt!70168 () Unit!4132)

(assert (=> d!41195 (= lt!70168 (choose!826 (toList!851 lt!69176) lt!69182))))

(declare-fun e!87407 () Bool)

(assert (=> d!41195 e!87407))

(declare-fun res!64505 () Bool)

(assert (=> d!41195 (=> (not res!64505) (not e!87407))))

(assert (=> d!41195 (= res!64505 (isStrictlySorted!317 (toList!851 lt!69176)))))

(assert (=> d!41195 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69176) lt!69182) lt!70168)))

(declare-fun b!134209 () Bool)

(assert (=> b!134209 (= e!87407 (containsKey!174 (toList!851 lt!69176) lt!69182))))

(assert (= (and d!41195 res!64505) b!134209))

(assert (=> d!41195 m!157493))

(assert (=> d!41195 m!157493))

(assert (=> d!41195 m!157495))

(declare-fun m!158909 () Bool)

(assert (=> d!41195 m!158909))

(assert (=> d!41195 m!157003))

(assert (=> b!134209 m!157489))

(assert (=> b!133550 d!41195))

(declare-fun d!41197 () Bool)

(assert (=> d!41197 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69176) lt!69182)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69176) lt!69182))))))

(declare-fun bs!5576 () Bool)

(assert (= bs!5576 d!41197))

(assert (=> bs!5576 m!157493))

(declare-fun m!158911 () Bool)

(assert (=> bs!5576 m!158911))

(assert (=> b!133550 d!41197))

(declare-fun d!41199 () Bool)

(declare-fun c!24971 () Bool)

(assert (=> d!41199 (= c!24971 (and ((_ is Cons!1706) (toList!851 lt!69176)) (= (_1!1303 (h!2311 (toList!851 lt!69176))) lt!69182)))))

(declare-fun e!87408 () Option!176)

(assert (=> d!41199 (= (getValueByKey!170 (toList!851 lt!69176) lt!69182) e!87408)))

(declare-fun b!134212 () Bool)

(declare-fun e!87409 () Option!176)

(assert (=> b!134212 (= e!87409 (getValueByKey!170 (t!6152 (toList!851 lt!69176)) lt!69182))))

(declare-fun b!134211 () Bool)

(assert (=> b!134211 (= e!87408 e!87409)))

(declare-fun c!24972 () Bool)

(assert (=> b!134211 (= c!24972 (and ((_ is Cons!1706) (toList!851 lt!69176)) (not (= (_1!1303 (h!2311 (toList!851 lt!69176))) lt!69182))))))

(declare-fun b!134210 () Bool)

(assert (=> b!134210 (= e!87408 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69176)))))))

(declare-fun b!134213 () Bool)

(assert (=> b!134213 (= e!87409 None!174)))

(assert (= (and d!41199 c!24971) b!134210))

(assert (= (and d!41199 (not c!24971)) b!134211))

(assert (= (and b!134211 c!24972) b!134212))

(assert (= (and b!134211 (not c!24972)) b!134213))

(declare-fun m!158913 () Bool)

(assert (=> b!134212 m!158913))

(assert (=> b!133550 d!41199))

(declare-fun d!41201 () Bool)

(declare-fun res!64506 () Bool)

(declare-fun e!87410 () Bool)

(assert (=> d!41201 (=> res!64506 e!87410)))

(assert (=> d!41201 (= res!64506 (and ((_ is Cons!1706) (toList!851 lt!69484)) (= (_1!1303 (h!2311 (toList!851 lt!69484))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!41201 (= (containsKey!174 (toList!851 lt!69484) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) e!87410)))

(declare-fun b!134214 () Bool)

(declare-fun e!87411 () Bool)

(assert (=> b!134214 (= e!87410 e!87411)))

(declare-fun res!64507 () Bool)

(assert (=> b!134214 (=> (not res!64507) (not e!87411))))

(assert (=> b!134214 (= res!64507 (and (or (not ((_ is Cons!1706) (toList!851 lt!69484))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69484))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1706) (toList!851 lt!69484)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69484))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!134215 () Bool)

(assert (=> b!134215 (= e!87411 (containsKey!174 (t!6152 (toList!851 lt!69484)) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41201 (not res!64506)) b!134214))

(assert (= (and b!134214 res!64507) b!134215))

(assert (=> b!134215 m!156125))

(declare-fun m!158915 () Bool)

(assert (=> b!134215 m!158915))

(assert (=> d!40833 d!41201))

(declare-fun d!41203 () Bool)

(declare-fun res!64508 () Bool)

(declare-fun e!87412 () Bool)

(assert (=> d!41203 (=> res!64508 e!87412)))

(assert (=> d!41203 (= res!64508 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))) lt!69358)))))

(assert (=> d!41203 (= (containsKey!174 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) lt!69358) e!87412)))

(declare-fun b!134216 () Bool)

(declare-fun e!87413 () Bool)

(assert (=> b!134216 (= e!87412 e!87413)))

(declare-fun res!64509 () Bool)

(assert (=> b!134216 (=> (not res!64509) (not e!87413))))

(assert (=> b!134216 (= res!64509 (and (or (not ((_ is Cons!1706) (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))) (bvsle (_1!1303 (h!2311 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))) lt!69358)) ((_ is Cons!1706) (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))) (bvslt (_1!1303 (h!2311 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))) lt!69358)))))

(declare-fun b!134217 () Bool)

(assert (=> b!134217 (= e!87413 (containsKey!174 (t!6152 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))) lt!69358))))

(assert (= (and d!41203 (not res!64508)) b!134216))

(assert (= (and b!134216 res!64509) b!134217))

(declare-fun m!158917 () Bool)

(assert (=> b!134217 m!158917))

(assert (=> d!40935 d!41203))

(declare-fun d!41205 () Bool)

(assert (=> d!41205 (= (get!1482 (getValueByKey!170 (toList!851 lt!69204) lt!69208)) (v!3198 (getValueByKey!170 (toList!851 lt!69204) lt!69208)))))

(assert (=> d!40741 d!41205))

(declare-fun d!41207 () Bool)

(declare-fun c!24973 () Bool)

(assert (=> d!41207 (= c!24973 (and ((_ is Cons!1706) (toList!851 lt!69204)) (= (_1!1303 (h!2311 (toList!851 lt!69204))) lt!69208)))))

(declare-fun e!87414 () Option!176)

(assert (=> d!41207 (= (getValueByKey!170 (toList!851 lt!69204) lt!69208) e!87414)))

(declare-fun b!134220 () Bool)

(declare-fun e!87415 () Option!176)

(assert (=> b!134220 (= e!87415 (getValueByKey!170 (t!6152 (toList!851 lt!69204)) lt!69208))))

(declare-fun b!134219 () Bool)

(assert (=> b!134219 (= e!87414 e!87415)))

(declare-fun c!24974 () Bool)

(assert (=> b!134219 (= c!24974 (and ((_ is Cons!1706) (toList!851 lt!69204)) (not (= (_1!1303 (h!2311 (toList!851 lt!69204))) lt!69208))))))

(declare-fun b!134218 () Bool)

(assert (=> b!134218 (= e!87414 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69204)))))))

(declare-fun b!134221 () Bool)

(assert (=> b!134221 (= e!87415 None!174)))

(assert (= (and d!41207 c!24973) b!134218))

(assert (= (and d!41207 (not c!24973)) b!134219))

(assert (= (and b!134219 c!24974) b!134220))

(assert (= (and b!134219 (not c!24974)) b!134221))

(declare-fun m!158919 () Bool)

(assert (=> b!134220 m!158919))

(assert (=> d!40741 d!41207))

(declare-fun d!41209 () Bool)

(declare-fun e!87416 () Bool)

(assert (=> d!41209 e!87416))

(declare-fun res!64510 () Bool)

(assert (=> d!41209 (=> res!64510 e!87416)))

(declare-fun lt!70170 () Bool)

(assert (=> d!41209 (= res!64510 (not lt!70170))))

(declare-fun lt!70172 () Bool)

(assert (=> d!41209 (= lt!70170 lt!70172)))

(declare-fun lt!70169 () Unit!4132)

(declare-fun e!87417 () Unit!4132)

(assert (=> d!41209 (= lt!70169 e!87417)))

(declare-fun c!24975 () Bool)

(assert (=> d!41209 (= c!24975 lt!70172)))

(assert (=> d!41209 (= lt!70172 (containsKey!174 (toList!851 lt!69609) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41209 (= (contains!886 lt!69609 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!70170)))

(declare-fun b!134222 () Bool)

(declare-fun lt!70171 () Unit!4132)

(assert (=> b!134222 (= e!87417 lt!70171)))

(assert (=> b!134222 (= lt!70171 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69609) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134222 (isDefined!124 (getValueByKey!170 (toList!851 lt!69609) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134223 () Bool)

(declare-fun Unit!4203 () Unit!4132)

(assert (=> b!134223 (= e!87417 Unit!4203)))

(declare-fun b!134224 () Bool)

(assert (=> b!134224 (= e!87416 (isDefined!124 (getValueByKey!170 (toList!851 lt!69609) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41209 c!24975) b!134222))

(assert (= (and d!41209 (not c!24975)) b!134223))

(assert (= (and d!41209 (not res!64510)) b!134224))

(assert (=> d!41209 m!156125))

(declare-fun m!158921 () Bool)

(assert (=> d!41209 m!158921))

(assert (=> b!134222 m!156125))

(declare-fun m!158923 () Bool)

(assert (=> b!134222 m!158923))

(assert (=> b!134222 m!156125))

(declare-fun m!158925 () Bool)

(assert (=> b!134222 m!158925))

(assert (=> b!134222 m!158925))

(declare-fun m!158927 () Bool)

(assert (=> b!134222 m!158927))

(assert (=> b!134224 m!156125))

(assert (=> b!134224 m!158925))

(assert (=> b!134224 m!158925))

(assert (=> b!134224 m!158927))

(assert (=> b!133342 d!41209))

(declare-fun d!41211 () Bool)

(declare-fun res!64511 () Bool)

(declare-fun e!87418 () Bool)

(assert (=> d!41211 (=> res!64511 e!87418)))

(assert (=> d!41211 (= res!64511 (and ((_ is Cons!1706) (toList!851 lt!69202)) (= (_1!1303 (h!2311 (toList!851 lt!69202))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41211 (= (containsKey!174 (toList!851 lt!69202) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87418)))

(declare-fun b!134225 () Bool)

(declare-fun e!87419 () Bool)

(assert (=> b!134225 (= e!87418 e!87419)))

(declare-fun res!64512 () Bool)

(assert (=> b!134225 (=> (not res!64512) (not e!87419))))

(assert (=> b!134225 (= res!64512 (and (or (not ((_ is Cons!1706) (toList!851 lt!69202))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69202))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1706) (toList!851 lt!69202)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69202))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134226 () Bool)

(assert (=> b!134226 (= e!87419 (containsKey!174 (t!6152 (toList!851 lt!69202)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41211 (not res!64511)) b!134225))

(assert (= (and b!134225 res!64512) b!134226))

(declare-fun m!158929 () Bool)

(assert (=> b!134226 m!158929))

(assert (=> d!40813 d!41211))

(declare-fun d!41213 () Bool)

(assert (=> d!41213 (= (get!1482 (getValueByKey!170 (toList!851 lt!69250) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3198 (getValueByKey!170 (toList!851 lt!69250) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40785 d!41213))

(declare-fun d!41215 () Bool)

(declare-fun c!24976 () Bool)

(assert (=> d!41215 (= c!24976 (and ((_ is Cons!1706) (toList!851 lt!69250)) (= (_1!1303 (h!2311 (toList!851 lt!69250))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87420 () Option!176)

(assert (=> d!41215 (= (getValueByKey!170 (toList!851 lt!69250) #b0000000000000000000000000000000000000000000000000000000000000000) e!87420)))

(declare-fun b!134229 () Bool)

(declare-fun e!87421 () Option!176)

(assert (=> b!134229 (= e!87421 (getValueByKey!170 (t!6152 (toList!851 lt!69250)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134228 () Bool)

(assert (=> b!134228 (= e!87420 e!87421)))

(declare-fun c!24977 () Bool)

(assert (=> b!134228 (= c!24977 (and ((_ is Cons!1706) (toList!851 lt!69250)) (not (= (_1!1303 (h!2311 (toList!851 lt!69250))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134227 () Bool)

(assert (=> b!134227 (= e!87420 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69250)))))))

(declare-fun b!134230 () Bool)

(assert (=> b!134230 (= e!87421 None!174)))

(assert (= (and d!41215 c!24976) b!134227))

(assert (= (and d!41215 (not c!24976)) b!134228))

(assert (= (and b!134228 c!24977) b!134229))

(assert (= (and b!134228 (not c!24977)) b!134230))

(declare-fun m!158931 () Bool)

(assert (=> b!134229 m!158931))

(assert (=> d!40785 d!41215))

(declare-fun d!41217 () Bool)

(declare-fun res!64513 () Bool)

(declare-fun e!87422 () Bool)

(assert (=> d!41217 (=> res!64513 e!87422)))

(assert (=> d!41217 (= res!64513 (and ((_ is Cons!1706) (toList!851 lt!69362)) (= (_1!1303 (h!2311 (toList!851 lt!69362))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!41217 (= (containsKey!174 (toList!851 lt!69362) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) e!87422)))

(declare-fun b!134231 () Bool)

(declare-fun e!87423 () Bool)

(assert (=> b!134231 (= e!87422 e!87423)))

(declare-fun res!64514 () Bool)

(assert (=> b!134231 (=> (not res!64514) (not e!87423))))

(assert (=> b!134231 (= res!64514 (and (or (not ((_ is Cons!1706) (toList!851 lt!69362))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69362))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1706) (toList!851 lt!69362)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69362))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!134232 () Bool)

(assert (=> b!134232 (= e!87423 (containsKey!174 (t!6152 (toList!851 lt!69362)) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41217 (not res!64513)) b!134231))

(assert (= (and b!134231 res!64514) b!134232))

(assert (=> b!134232 m!156125))

(declare-fun m!158933 () Bool)

(assert (=> b!134232 m!158933))

(assert (=> d!40961 d!41217))

(declare-fun d!41219 () Bool)

(assert (=> d!41219 (isDefined!124 (getValueByKey!170 (toList!851 lt!69484) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70173 () Unit!4132)

(assert (=> d!41219 (= lt!70173 (choose!826 (toList!851 lt!69484) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87424 () Bool)

(assert (=> d!41219 e!87424))

(declare-fun res!64515 () Bool)

(assert (=> d!41219 (=> (not res!64515) (not e!87424))))

(assert (=> d!41219 (= res!64515 (isStrictlySorted!317 (toList!851 lt!69484)))))

(assert (=> d!41219 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69484) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70173)))

(declare-fun b!134233 () Bool)

(assert (=> b!134233 (= e!87424 (containsKey!174 (toList!851 lt!69484) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41219 res!64515) b!134233))

(assert (=> d!41219 m!157527))

(assert (=> d!41219 m!157527))

(assert (=> d!41219 m!157529))

(declare-fun m!158935 () Bool)

(assert (=> d!41219 m!158935))

(assert (=> d!41219 m!158581))

(assert (=> b!134233 m!157523))

(assert (=> b!133567 d!41219))

(declare-fun d!41221 () Bool)

(assert (=> d!41221 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69484) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69484) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5577 () Bool)

(assert (= bs!5577 d!41221))

(assert (=> bs!5577 m!157527))

(declare-fun m!158937 () Bool)

(assert (=> bs!5577 m!158937))

(assert (=> b!133567 d!41221))

(declare-fun d!41223 () Bool)

(declare-fun c!24978 () Bool)

(assert (=> d!41223 (= c!24978 (and ((_ is Cons!1706) (toList!851 lt!69484)) (= (_1!1303 (h!2311 (toList!851 lt!69484))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87425 () Option!176)

(assert (=> d!41223 (= (getValueByKey!170 (toList!851 lt!69484) #b1000000000000000000000000000000000000000000000000000000000000000) e!87425)))

(declare-fun b!134236 () Bool)

(declare-fun e!87426 () Option!176)

(assert (=> b!134236 (= e!87426 (getValueByKey!170 (t!6152 (toList!851 lt!69484)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134235 () Bool)

(assert (=> b!134235 (= e!87425 e!87426)))

(declare-fun c!24979 () Bool)

(assert (=> b!134235 (= c!24979 (and ((_ is Cons!1706) (toList!851 lt!69484)) (not (= (_1!1303 (h!2311 (toList!851 lt!69484))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134234 () Bool)

(assert (=> b!134234 (= e!87425 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69484)))))))

(declare-fun b!134237 () Bool)

(assert (=> b!134237 (= e!87426 None!174)))

(assert (= (and d!41223 c!24978) b!134234))

(assert (= (and d!41223 (not c!24978)) b!134235))

(assert (= (and b!134235 c!24979) b!134236))

(assert (= (and b!134235 (not c!24979)) b!134237))

(declare-fun m!158939 () Bool)

(assert (=> b!134236 m!158939))

(assert (=> b!133567 d!41223))

(declare-fun lt!70174 () Bool)

(declare-fun d!41225 () Bool)

(assert (=> d!41225 (= lt!70174 (select (content!133 (toList!851 lt!69805)) (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))))

(declare-fun e!87428 () Bool)

(assert (=> d!41225 (= lt!70174 e!87428)))

(declare-fun res!64516 () Bool)

(assert (=> d!41225 (=> (not res!64516) (not e!87428))))

(assert (=> d!41225 (= res!64516 ((_ is Cons!1706) (toList!851 lt!69805)))))

(assert (=> d!41225 (= (contains!889 (toList!851 lt!69805) (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))) lt!70174)))

(declare-fun b!134238 () Bool)

(declare-fun e!87427 () Bool)

(assert (=> b!134238 (= e!87428 e!87427)))

(declare-fun res!64517 () Bool)

(assert (=> b!134238 (=> res!64517 e!87427)))

(assert (=> b!134238 (= res!64517 (= (h!2311 (toList!851 lt!69805)) (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))))

(declare-fun b!134239 () Bool)

(assert (=> b!134239 (= e!87427 (contains!889 (t!6152 (toList!851 lt!69805)) (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41225 res!64516) b!134238))

(assert (= (and b!134238 (not res!64517)) b!134239))

(declare-fun m!158941 () Bool)

(assert (=> d!41225 m!158941))

(declare-fun m!158943 () Bool)

(assert (=> d!41225 m!158943))

(declare-fun m!158945 () Bool)

(assert (=> b!134239 m!158945))

(assert (=> b!133593 d!41225))

(declare-fun d!41227 () Bool)

(declare-fun res!64518 () Bool)

(declare-fun e!87429 () Bool)

(assert (=> d!41227 (=> res!64518 e!87429)))

(assert (=> d!41227 (= res!64518 (= (select (arr!2248 lt!69444) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> d!41227 (= (arrayContainsKey!0 lt!69444 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!87429)))

(declare-fun b!134240 () Bool)

(declare-fun e!87430 () Bool)

(assert (=> b!134240 (= e!87429 e!87430)))

(declare-fun res!64519 () Bool)

(assert (=> b!134240 (=> (not res!64519) (not e!87430))))

(assert (=> b!134240 (= res!64519 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 lt!69444)))))

(declare-fun b!134241 () Bool)

(assert (=> b!134241 (= e!87430 (arrayContainsKey!0 lt!69444 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!41227 (not res!64518)) b!134240))

(assert (= (and b!134240 res!64519) b!134241))

(declare-fun m!158947 () Bool)

(assert (=> d!41227 m!158947))

(assert (=> b!134241 m!155841))

(declare-fun m!158949 () Bool)

(assert (=> b!134241 m!158949))

(assert (=> b!133442 d!41227))

(declare-fun d!41229 () Bool)

(declare-fun e!87431 () Bool)

(assert (=> d!41229 e!87431))

(declare-fun res!64520 () Bool)

(assert (=> d!41229 (=> res!64520 e!87431)))

(declare-fun lt!70176 () Bool)

(assert (=> d!41229 (= res!64520 (not lt!70176))))

(declare-fun lt!70178 () Bool)

(assert (=> d!41229 (= lt!70176 lt!70178)))

(declare-fun lt!70175 () Unit!4132)

(declare-fun e!87432 () Unit!4132)

(assert (=> d!41229 (= lt!70175 e!87432)))

(declare-fun c!24980 () Bool)

(assert (=> d!41229 (= c!24980 lt!70178)))

(assert (=> d!41229 (= lt!70178 (containsKey!174 (toList!851 lt!69823) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41229 (= (contains!886 lt!69823 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!70176)))

(declare-fun b!134242 () Bool)

(declare-fun lt!70177 () Unit!4132)

(assert (=> b!134242 (= e!87432 lt!70177)))

(assert (=> b!134242 (= lt!70177 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69823) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134242 (isDefined!124 (getValueByKey!170 (toList!851 lt!69823) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134243 () Bool)

(declare-fun Unit!4204 () Unit!4132)

(assert (=> b!134243 (= e!87432 Unit!4204)))

(declare-fun b!134244 () Bool)

(assert (=> b!134244 (= e!87431 (isDefined!124 (getValueByKey!170 (toList!851 lt!69823) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41229 c!24980) b!134242))

(assert (= (and d!41229 (not c!24980)) b!134243))

(assert (= (and d!41229 (not res!64520)) b!134244))

(assert (=> d!41229 m!156125))

(declare-fun m!158951 () Bool)

(assert (=> d!41229 m!158951))

(assert (=> b!134242 m!156125))

(declare-fun m!158953 () Bool)

(assert (=> b!134242 m!158953))

(assert (=> b!134242 m!156125))

(declare-fun m!158955 () Bool)

(assert (=> b!134242 m!158955))

(assert (=> b!134242 m!158955))

(declare-fun m!158957 () Bool)

(assert (=> b!134242 m!158957))

(assert (=> b!134244 m!156125))

(assert (=> b!134244 m!158955))

(assert (=> b!134244 m!158955))

(assert (=> b!134244 m!158957))

(assert (=> b!133614 d!41229))

(declare-fun d!41231 () Bool)

(declare-fun c!24981 () Bool)

(assert (=> d!41231 (= c!24981 (and ((_ is Cons!1706) (toList!851 lt!70041)) (= (_1!1303 (h!2311 (toList!851 lt!70041))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87433 () Option!176)

(assert (=> d!41231 (= (getValueByKey!170 (toList!851 lt!70041) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87433)))

(declare-fun e!87434 () Option!176)

(declare-fun b!134247 () Bool)

(assert (=> b!134247 (= e!87434 (getValueByKey!170 (t!6152 (toList!851 lt!70041)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134246 () Bool)

(assert (=> b!134246 (= e!87433 e!87434)))

(declare-fun c!24982 () Bool)

(assert (=> b!134246 (= c!24982 (and ((_ is Cons!1706) (toList!851 lt!70041)) (not (= (_1!1303 (h!2311 (toList!851 lt!70041))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134245 () Bool)

(assert (=> b!134245 (= e!87433 (Some!175 (_2!1303 (h!2311 (toList!851 lt!70041)))))))

(declare-fun b!134248 () Bool)

(assert (=> b!134248 (= e!87434 None!174)))

(assert (= (and d!41231 c!24981) b!134245))

(assert (= (and d!41231 (not c!24981)) b!134246))

(assert (= (and b!134246 c!24982) b!134247))

(assert (= (and b!134246 (not c!24982)) b!134248))

(declare-fun m!158959 () Bool)

(assert (=> b!134247 m!158959))

(assert (=> b!133941 d!41231))

(declare-fun d!41233 () Bool)

(assert (=> d!41233 (= (validKeyInArray!0 (select (arr!2248 lt!69449) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))) (and (not (= (select (arr!2248 lt!69449) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2248 lt!69449) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133355 d!41233))

(declare-fun d!41235 () Bool)

(assert (=> d!41235 (= (apply!116 lt!70059 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!70059) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5578 () Bool)

(assert (= bs!5578 d!41235))

(declare-fun m!158961 () Bool)

(assert (=> bs!5578 m!158961))

(assert (=> bs!5578 m!158961))

(declare-fun m!158963 () Bool)

(assert (=> bs!5578 m!158963))

(assert (=> b!133950 d!41235))

(declare-fun lt!70179 () Bool)

(declare-fun d!41237 () Bool)

(assert (=> d!41237 (= lt!70179 (select (content!133 (t!6152 (toList!851 lt!69496))) (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun e!87436 () Bool)

(assert (=> d!41237 (= lt!70179 e!87436)))

(declare-fun res!64521 () Bool)

(assert (=> d!41237 (=> (not res!64521) (not e!87436))))

(assert (=> d!41237 (= res!64521 ((_ is Cons!1706) (t!6152 (toList!851 lt!69496))))))

(assert (=> d!41237 (= (contains!889 (t!6152 (toList!851 lt!69496)) (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!70179)))

(declare-fun b!134249 () Bool)

(declare-fun e!87435 () Bool)

(assert (=> b!134249 (= e!87436 e!87435)))

(declare-fun res!64522 () Bool)

(assert (=> b!134249 (=> res!64522 e!87435)))

(assert (=> b!134249 (= res!64522 (= (h!2311 (t!6152 (toList!851 lt!69496))) (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!134250 () Bool)

(assert (=> b!134250 (= e!87435 (contains!889 (t!6152 (t!6152 (toList!851 lt!69496))) (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!41237 res!64521) b!134249))

(assert (= (and b!134249 (not res!64522)) b!134250))

(declare-fun m!158965 () Bool)

(assert (=> d!41237 m!158965))

(declare-fun m!158967 () Bool)

(assert (=> d!41237 m!158967))

(declare-fun m!158969 () Bool)

(assert (=> b!134250 m!158969))

(assert (=> b!133566 d!41237))

(declare-fun d!41239 () Bool)

(assert (=> d!41239 (= (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69204 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))) lt!69208)) (v!3198 (getValueByKey!170 (toList!851 (+!163 lt!69204 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))) lt!69208)))))

(assert (=> d!40737 d!41239))

(declare-fun d!41241 () Bool)

(declare-fun c!24983 () Bool)

(assert (=> d!41241 (= c!24983 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69204 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69204 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))) lt!69208)))))

(declare-fun e!87437 () Option!176)

(assert (=> d!41241 (= (getValueByKey!170 (toList!851 (+!163 lt!69204 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))) lt!69208) e!87437)))

(declare-fun b!134253 () Bool)

(declare-fun e!87438 () Option!176)

(assert (=> b!134253 (= e!87438 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69204 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))) lt!69208))))

(declare-fun b!134252 () Bool)

(assert (=> b!134252 (= e!87437 e!87438)))

(declare-fun c!24984 () Bool)

(assert (=> b!134252 (= c!24984 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69204 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69204 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))) lt!69208))))))

(declare-fun b!134251 () Bool)

(assert (=> b!134251 (= e!87437 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69204 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))))))))

(declare-fun b!134254 () Bool)

(assert (=> b!134254 (= e!87438 None!174)))

(assert (= (and d!41241 c!24983) b!134251))

(assert (= (and d!41241 (not c!24983)) b!134252))

(assert (= (and b!134252 c!24984) b!134253))

(assert (= (and b!134252 (not c!24984)) b!134254))

(declare-fun m!158971 () Bool)

(assert (=> b!134253 m!158971))

(assert (=> d!40737 d!41241))

(assert (=> d!40579 d!40577))

(declare-fun d!41243 () Bool)

(assert (=> d!41243 (= (getValueByKey!170 lt!69329 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!41243 true))

(declare-fun _$22!484 () Unit!4132)

(assert (=> d!41243 (= (choose!834 lt!69329 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) _$22!484)))

(declare-fun bs!5579 () Bool)

(assert (= bs!5579 d!41243))

(assert (=> bs!5579 m!156417))

(assert (=> d!40579 d!41243))

(declare-fun d!41245 () Bool)

(declare-fun res!64523 () Bool)

(declare-fun e!87439 () Bool)

(assert (=> d!41245 (=> res!64523 e!87439)))

(assert (=> d!41245 (= res!64523 (or ((_ is Nil!1707) lt!69329) ((_ is Nil!1707) (t!6152 lt!69329))))))

(assert (=> d!41245 (= (isStrictlySorted!317 lt!69329) e!87439)))

(declare-fun b!134255 () Bool)

(declare-fun e!87440 () Bool)

(assert (=> b!134255 (= e!87439 e!87440)))

(declare-fun res!64524 () Bool)

(assert (=> b!134255 (=> (not res!64524) (not e!87440))))

(assert (=> b!134255 (= res!64524 (bvslt (_1!1303 (h!2311 lt!69329)) (_1!1303 (h!2311 (t!6152 lt!69329)))))))

(declare-fun b!134256 () Bool)

(assert (=> b!134256 (= e!87440 (isStrictlySorted!317 (t!6152 lt!69329)))))

(assert (= (and d!41245 (not res!64523)) b!134255))

(assert (= (and b!134255 res!64524) b!134256))

(declare-fun m!158973 () Bool)

(assert (=> b!134256 m!158973))

(assert (=> d!40579 d!41245))

(declare-fun d!41247 () Bool)

(assert (=> d!41247 (= (apply!116 lt!69674 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69674) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5580 () Bool)

(assert (= bs!5580 d!41247))

(assert (=> bs!5580 m!158673))

(assert (=> bs!5580 m!158673))

(declare-fun m!158975 () Bool)

(assert (=> bs!5580 m!158975))

(assert (=> b!133403 d!41247))

(declare-fun d!41249 () Bool)

(declare-fun res!64525 () Bool)

(declare-fun e!87441 () Bool)

(assert (=> d!41249 (=> res!64525 e!87441)))

(assert (=> d!41249 (= res!64525 (or ((_ is Nil!1707) lt!69560) ((_ is Nil!1707) (t!6152 lt!69560))))))

(assert (=> d!41249 (= (isStrictlySorted!317 lt!69560) e!87441)))

(declare-fun b!134257 () Bool)

(declare-fun e!87442 () Bool)

(assert (=> b!134257 (= e!87441 e!87442)))

(declare-fun res!64526 () Bool)

(assert (=> b!134257 (=> (not res!64526) (not e!87442))))

(assert (=> b!134257 (= res!64526 (bvslt (_1!1303 (h!2311 lt!69560)) (_1!1303 (h!2311 (t!6152 lt!69560)))))))

(declare-fun b!134258 () Bool)

(assert (=> b!134258 (= e!87442 (isStrictlySorted!317 (t!6152 lt!69560)))))

(assert (= (and d!41249 (not res!64525)) b!134257))

(assert (= (and b!134257 res!64526) b!134258))

(declare-fun m!158977 () Bool)

(assert (=> b!134258 m!158977))

(assert (=> d!40473 d!41249))

(declare-fun d!41251 () Bool)

(declare-fun res!64527 () Bool)

(declare-fun e!87443 () Bool)

(assert (=> d!41251 (=> res!64527 e!87443)))

(assert (=> d!41251 (= res!64527 (or ((_ is Nil!1707) (toList!851 lt!69170)) ((_ is Nil!1707) (t!6152 (toList!851 lt!69170)))))))

(assert (=> d!41251 (= (isStrictlySorted!317 (toList!851 lt!69170)) e!87443)))

(declare-fun b!134259 () Bool)

(declare-fun e!87444 () Bool)

(assert (=> b!134259 (= e!87443 e!87444)))

(declare-fun res!64528 () Bool)

(assert (=> b!134259 (=> (not res!64528) (not e!87444))))

(assert (=> b!134259 (= res!64528 (bvslt (_1!1303 (h!2311 (toList!851 lt!69170))) (_1!1303 (h!2311 (t!6152 (toList!851 lt!69170))))))))

(declare-fun b!134260 () Bool)

(assert (=> b!134260 (= e!87444 (isStrictlySorted!317 (t!6152 (toList!851 lt!69170))))))

(assert (= (and d!41251 (not res!64527)) b!134259))

(assert (= (and b!134259 res!64528) b!134260))

(declare-fun m!158979 () Bool)

(assert (=> b!134260 m!158979))

(assert (=> d!40473 d!41251))

(declare-fun b!134261 () Bool)

(declare-fun e!87448 () Bool)

(declare-fun e!87445 () Bool)

(assert (=> b!134261 (= e!87448 e!87445)))

(declare-fun res!64529 () Bool)

(assert (=> b!134261 (=> (not res!64529) (not e!87445))))

(declare-fun e!87446 () Bool)

(assert (=> b!134261 (= res!64529 (not e!87446))))

(declare-fun res!64531 () Bool)

(assert (=> b!134261 (=> (not res!64531) (not e!87446))))

(assert (=> b!134261 (= res!64531 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun c!24985 () Bool)

(declare-fun call!14790 () Bool)

(declare-fun bm!14787 () Bool)

(assert (=> bm!14787 (= call!14790 (arrayNoDuplicates!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24985 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24807 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))) (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)))) (ite c!24807 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))) (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))))))))

(declare-fun d!41253 () Bool)

(declare-fun res!64530 () Bool)

(assert (=> d!41253 (=> res!64530 e!87448)))

(assert (=> d!41253 (= res!64530 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!41253 (= (arrayNoDuplicates!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24807 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))) (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)))) e!87448)))

(declare-fun b!134262 () Bool)

(declare-fun e!87447 () Bool)

(assert (=> b!134262 (= e!87447 call!14790)))

(declare-fun b!134263 () Bool)

(assert (=> b!134263 (= e!87446 (contains!888 (ite c!24807 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))) (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134264 () Bool)

(assert (=> b!134264 (= e!87445 e!87447)))

(assert (=> b!134264 (= c!24985 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134265 () Bool)

(assert (=> b!134265 (= e!87447 call!14790)))

(assert (= (and d!41253 (not res!64530)) b!134261))

(assert (= (and b!134261 res!64531) b!134263))

(assert (= (and b!134261 res!64529) b!134264))

(assert (= (and b!134264 c!24985) b!134262))

(assert (= (and b!134264 (not c!24985)) b!134265))

(assert (= (or b!134262 b!134265) bm!14787))

(declare-fun m!158981 () Bool)

(assert (=> b!134261 m!158981))

(assert (=> b!134261 m!158981))

(declare-fun m!158983 () Bool)

(assert (=> b!134261 m!158983))

(assert (=> bm!14787 m!158981))

(declare-fun m!158985 () Bool)

(assert (=> bm!14787 m!158985))

(assert (=> b!134263 m!158981))

(assert (=> b!134263 m!158981))

(declare-fun m!158987 () Bool)

(assert (=> b!134263 m!158987))

(assert (=> b!134264 m!158981))

(assert (=> b!134264 m!158981))

(assert (=> b!134264 m!158983))

(assert (=> bm!14733 d!41253))

(declare-fun d!41255 () Bool)

(declare-fun lt!70180 () Bool)

(assert (=> d!41255 (= lt!70180 (select (content!133 lt!69990) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87450 () Bool)

(assert (=> d!41255 (= lt!70180 e!87450)))

(declare-fun res!64532 () Bool)

(assert (=> d!41255 (=> (not res!64532) (not e!87450))))

(assert (=> d!41255 (= res!64532 ((_ is Cons!1706) lt!69990))))

(assert (=> d!41255 (= (contains!889 lt!69990 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!70180)))

(declare-fun b!134266 () Bool)

(declare-fun e!87449 () Bool)

(assert (=> b!134266 (= e!87450 e!87449)))

(declare-fun res!64533 () Bool)

(assert (=> b!134266 (=> res!64533 e!87449)))

(assert (=> b!134266 (= res!64533 (= (h!2311 lt!69990) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!134267 () Bool)

(assert (=> b!134267 (= e!87449 (contains!889 (t!6152 lt!69990) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!41255 res!64532) b!134266))

(assert (= (and b!134266 (not res!64533)) b!134267))

(declare-fun m!158989 () Bool)

(assert (=> d!41255 m!158989))

(declare-fun m!158991 () Bool)

(assert (=> d!41255 m!158991))

(declare-fun m!158993 () Bool)

(assert (=> b!134267 m!158993))

(assert (=> b!133890 d!41255))

(declare-fun c!24986 () Bool)

(declare-fun d!41257 () Bool)

(assert (=> d!41257 (= c!24986 (and ((_ is Cons!1706) (toList!851 lt!69567)) (= (_1!1303 (h!2311 (toList!851 lt!69567))) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun e!87451 () Option!176)

(assert (=> d!41257 (= (getValueByKey!170 (toList!851 lt!69567) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) e!87451)))

(declare-fun e!87452 () Option!176)

(declare-fun b!134270 () Bool)

(assert (=> b!134270 (= e!87452 (getValueByKey!170 (t!6152 (toList!851 lt!69567)) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!134269 () Bool)

(assert (=> b!134269 (= e!87451 e!87452)))

(declare-fun c!24987 () Bool)

(assert (=> b!134269 (= c!24987 (and ((_ is Cons!1706) (toList!851 lt!69567)) (not (= (_1!1303 (h!2311 (toList!851 lt!69567))) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))))

(declare-fun b!134268 () Bool)

(assert (=> b!134268 (= e!87451 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69567)))))))

(declare-fun b!134271 () Bool)

(assert (=> b!134271 (= e!87452 None!174)))

(assert (= (and d!41257 c!24986) b!134268))

(assert (= (and d!41257 (not c!24986)) b!134269))

(assert (= (and b!134269 c!24987) b!134270))

(assert (= (and b!134269 (not c!24987)) b!134271))

(declare-fun m!158995 () Bool)

(assert (=> b!134270 m!158995))

(assert (=> b!133244 d!41257))

(assert (=> d!40927 d!40915))

(declare-fun d!41259 () Bool)

(assert (=> d!41259 (= (apply!116 (+!163 lt!69346 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))) lt!69350) (apply!116 lt!69346 lt!69350))))

(assert (=> d!41259 true))

(declare-fun _$34!980 () Unit!4132)

(assert (=> d!41259 (= (choose!828 lt!69346 lt!69347 (zeroValue!2719 newMap!16) lt!69350) _$34!980)))

(declare-fun bs!5581 () Bool)

(assert (= bs!5581 d!41259))

(assert (=> bs!5581 m!156485))

(assert (=> bs!5581 m!156485))

(assert (=> bs!5581 m!156493))

(assert (=> bs!5581 m!156495))

(assert (=> d!40927 d!41259))

(assert (=> d!40927 d!40937))

(assert (=> d!40927 d!40923))

(declare-fun d!41261 () Bool)

(declare-fun e!87453 () Bool)

(assert (=> d!41261 e!87453))

(declare-fun res!64534 () Bool)

(assert (=> d!41261 (=> res!64534 e!87453)))

(declare-fun lt!70182 () Bool)

(assert (=> d!41261 (= res!64534 (not lt!70182))))

(declare-fun lt!70184 () Bool)

(assert (=> d!41261 (= lt!70182 lt!70184)))

(declare-fun lt!70181 () Unit!4132)

(declare-fun e!87454 () Unit!4132)

(assert (=> d!41261 (= lt!70181 e!87454)))

(declare-fun c!24988 () Bool)

(assert (=> d!41261 (= c!24988 lt!70184)))

(assert (=> d!41261 (= lt!70184 (containsKey!174 (toList!851 lt!69346) lt!69350))))

(assert (=> d!41261 (= (contains!886 lt!69346 lt!69350) lt!70182)))

(declare-fun b!134272 () Bool)

(declare-fun lt!70183 () Unit!4132)

(assert (=> b!134272 (= e!87454 lt!70183)))

(assert (=> b!134272 (= lt!70183 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69346) lt!69350))))

(assert (=> b!134272 (isDefined!124 (getValueByKey!170 (toList!851 lt!69346) lt!69350))))

(declare-fun b!134273 () Bool)

(declare-fun Unit!4205 () Unit!4132)

(assert (=> b!134273 (= e!87454 Unit!4205)))

(declare-fun b!134274 () Bool)

(assert (=> b!134274 (= e!87453 (isDefined!124 (getValueByKey!170 (toList!851 lt!69346) lt!69350)))))

(assert (= (and d!41261 c!24988) b!134272))

(assert (= (and d!41261 (not c!24988)) b!134273))

(assert (= (and d!41261 (not res!64534)) b!134274))

(declare-fun m!158997 () Bool)

(assert (=> d!41261 m!158997))

(declare-fun m!158999 () Bool)

(assert (=> b!134272 m!158999))

(assert (=> b!134272 m!158267))

(assert (=> b!134272 m!158267))

(declare-fun m!159001 () Bool)

(assert (=> b!134272 m!159001))

(assert (=> b!134274 m!158267))

(assert (=> b!134274 m!158267))

(assert (=> b!134274 m!159001))

(assert (=> d!40927 d!41261))

(declare-fun d!41263 () Bool)

(assert (=> d!41263 (= (get!1482 (getValueByKey!170 (toList!851 lt!69468) lt!69472)) (v!3198 (getValueByKey!170 (toList!851 lt!69468) lt!69472)))))

(assert (=> d!40591 d!41263))

(declare-fun d!41265 () Bool)

(declare-fun c!24989 () Bool)

(assert (=> d!41265 (= c!24989 (and ((_ is Cons!1706) (toList!851 lt!69468)) (= (_1!1303 (h!2311 (toList!851 lt!69468))) lt!69472)))))

(declare-fun e!87455 () Option!176)

(assert (=> d!41265 (= (getValueByKey!170 (toList!851 lt!69468) lt!69472) e!87455)))

(declare-fun b!134277 () Bool)

(declare-fun e!87456 () Option!176)

(assert (=> b!134277 (= e!87456 (getValueByKey!170 (t!6152 (toList!851 lt!69468)) lt!69472))))

(declare-fun b!134276 () Bool)

(assert (=> b!134276 (= e!87455 e!87456)))

(declare-fun c!24990 () Bool)

(assert (=> b!134276 (= c!24990 (and ((_ is Cons!1706) (toList!851 lt!69468)) (not (= (_1!1303 (h!2311 (toList!851 lt!69468))) lt!69472))))))

(declare-fun b!134275 () Bool)

(assert (=> b!134275 (= e!87455 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69468)))))))

(declare-fun b!134278 () Bool)

(assert (=> b!134278 (= e!87456 None!174)))

(assert (= (and d!41265 c!24989) b!134275))

(assert (= (and d!41265 (not c!24989)) b!134276))

(assert (= (and b!134276 c!24990) b!134277))

(assert (= (and b!134276 (not c!24990)) b!134278))

(declare-fun m!159003 () Bool)

(assert (=> b!134277 m!159003))

(assert (=> d!40591 d!41265))

(declare-fun c!24991 () Bool)

(declare-fun d!41267 () Bool)

(assert (=> d!41267 (= c!24991 (and ((_ is Cons!1706) (t!6152 (t!6152 (toList!851 lt!69005)))) (= (_1!1303 (h!2311 (t!6152 (t!6152 (toList!851 lt!69005))))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun e!87457 () Option!176)

(assert (=> d!41267 (= (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69005))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!87457)))

(declare-fun b!134281 () Bool)

(declare-fun e!87458 () Option!176)

(assert (=> b!134281 (= e!87458 (getValueByKey!170 (t!6152 (t!6152 (t!6152 (toList!851 lt!69005)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!134280 () Bool)

(assert (=> b!134280 (= e!87457 e!87458)))

(declare-fun c!24992 () Bool)

(assert (=> b!134280 (= c!24992 (and ((_ is Cons!1706) (t!6152 (t!6152 (toList!851 lt!69005)))) (not (= (_1!1303 (h!2311 (t!6152 (t!6152 (toList!851 lt!69005))))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(declare-fun b!134279 () Bool)

(assert (=> b!134279 (= e!87457 (Some!175 (_2!1303 (h!2311 (t!6152 (t!6152 (toList!851 lt!69005)))))))))

(declare-fun b!134282 () Bool)

(assert (=> b!134282 (= e!87458 None!174)))

(assert (= (and d!41267 c!24991) b!134279))

(assert (= (and d!41267 (not c!24991)) b!134280))

(assert (= (and b!134280 c!24992) b!134281))

(assert (= (and b!134280 (not c!24992)) b!134282))

(assert (=> b!134281 m!155841))

(declare-fun m!159005 () Bool)

(assert (=> b!134281 m!159005))

(assert (=> b!133306 d!41267))

(assert (=> d!40565 d!40573))

(declare-fun d!41269 () Bool)

(assert (=> d!41269 (arrayContainsKey!0 lt!69444 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!41269 true))

(declare-fun _$60!361 () Unit!4132)

(assert (=> d!41269 (= (choose!13 lt!69444 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))) _$60!361)))

(declare-fun bs!5582 () Bool)

(assert (= bs!5582 d!41269))

(assert (=> bs!5582 m!155841))

(assert (=> bs!5582 m!156565))

(assert (=> d!40565 d!41269))

(declare-fun lt!70185 () Bool)

(declare-fun d!41271 () Bool)

(assert (=> d!41271 (= lt!70185 (select (content!133 lt!69325) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87460 () Bool)

(assert (=> d!41271 (= lt!70185 e!87460)))

(declare-fun res!64535 () Bool)

(assert (=> d!41271 (=> (not res!64535) (not e!87460))))

(assert (=> d!41271 (= res!64535 ((_ is Cons!1706) lt!69325))))

(assert (=> d!41271 (= (contains!889 lt!69325 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!70185)))

(declare-fun b!134283 () Bool)

(declare-fun e!87459 () Bool)

(assert (=> b!134283 (= e!87460 e!87459)))

(declare-fun res!64536 () Bool)

(assert (=> b!134283 (=> res!64536 e!87459)))

(assert (=> b!134283 (= res!64536 (= (h!2311 lt!69325) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!134284 () Bool)

(assert (=> b!134284 (= e!87459 (contains!889 (t!6152 lt!69325) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!41271 res!64535) b!134283))

(assert (= (and b!134283 (not res!64536)) b!134284))

(declare-fun m!159007 () Bool)

(assert (=> d!41271 m!159007))

(declare-fun m!159009 () Bool)

(assert (=> d!41271 m!159009))

(declare-fun m!159011 () Bool)

(assert (=> b!134284 m!159011))

(assert (=> b!133882 d!41271))

(declare-fun d!41273 () Bool)

(declare-fun e!87461 () Bool)

(assert (=> d!41273 e!87461))

(declare-fun res!64538 () Bool)

(assert (=> d!41273 (=> (not res!64538) (not e!87461))))

(declare-fun lt!70188 () ListLongMap!1671)

(assert (=> d!41273 (= res!64538 (contains!886 lt!70188 (_1!1303 (ite (or c!24840 c!24838) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!70186 () List!1710)

(assert (=> d!41273 (= lt!70188 (ListLongMap!1672 lt!70186))))

(declare-fun lt!70189 () Unit!4132)

(declare-fun lt!70187 () Unit!4132)

(assert (=> d!41273 (= lt!70189 lt!70187)))

(assert (=> d!41273 (= (getValueByKey!170 lt!70186 (_1!1303 (ite (or c!24840 c!24838) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24840 c!24838) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41273 (= lt!70187 (lemmaContainsTupThenGetReturnValue!88 lt!70186 (_1!1303 (ite (or c!24840 c!24838) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24840 c!24838) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41273 (= lt!70186 (insertStrictlySorted!91 (toList!851 (ite c!24840 call!14749 (ite c!24838 call!14752 call!14751))) (_1!1303 (ite (or c!24840 c!24838) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24840 c!24838) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41273 (= (+!163 (ite c!24840 call!14749 (ite c!24838 call!14752 call!14751)) (ite (or c!24840 c!24838) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70188)))

(declare-fun b!134285 () Bool)

(declare-fun res!64537 () Bool)

(assert (=> b!134285 (=> (not res!64537) (not e!87461))))

(assert (=> b!134285 (= res!64537 (= (getValueByKey!170 (toList!851 lt!70188) (_1!1303 (ite (or c!24840 c!24838) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24840 c!24838) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!134286 () Bool)

(assert (=> b!134286 (= e!87461 (contains!889 (toList!851 lt!70188) (ite (or c!24840 c!24838) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!41273 res!64538) b!134285))

(assert (= (and b!134285 res!64537) b!134286))

(declare-fun m!159013 () Bool)

(assert (=> d!41273 m!159013))

(declare-fun m!159015 () Bool)

(assert (=> d!41273 m!159015))

(declare-fun m!159017 () Bool)

(assert (=> d!41273 m!159017))

(declare-fun m!159019 () Bool)

(assert (=> d!41273 m!159019))

(declare-fun m!159021 () Bool)

(assert (=> b!134285 m!159021))

(declare-fun m!159023 () Bool)

(assert (=> b!134286 m!159023))

(assert (=> bm!14743 d!41273))

(declare-fun d!41275 () Bool)

(assert (=> d!41275 (= (apply!116 lt!69641 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69641) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5583 () Bool)

(assert (= bs!5583 d!41275))

(assert (=> bs!5583 m!158607))

(assert (=> bs!5583 m!158607))

(declare-fun m!159025 () Bool)

(assert (=> bs!5583 m!159025))

(assert (=> b!133385 d!41275))

(declare-fun d!41277 () Bool)

(assert (=> d!41277 (= (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69236 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))) lt!69241)) (v!3198 (getValueByKey!170 (toList!851 (+!163 lt!69236 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))) lt!69241)))))

(assert (=> d!40695 d!41277))

(declare-fun c!24993 () Bool)

(declare-fun d!41279 () Bool)

(assert (=> d!41279 (= c!24993 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69236 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69236 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))) lt!69241)))))

(declare-fun e!87462 () Option!176)

(assert (=> d!41279 (= (getValueByKey!170 (toList!851 (+!163 lt!69236 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))) lt!69241) e!87462)))

(declare-fun b!134289 () Bool)

(declare-fun e!87463 () Option!176)

(assert (=> b!134289 (= e!87463 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69236 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))) lt!69241))))

(declare-fun b!134288 () Bool)

(assert (=> b!134288 (= e!87462 e!87463)))

(declare-fun c!24994 () Bool)

(assert (=> b!134288 (= c!24994 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69236 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69236 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))) lt!69241))))))

(declare-fun b!134287 () Bool)

(assert (=> b!134287 (= e!87462 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69236 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))))))))

(declare-fun b!134290 () Bool)

(assert (=> b!134290 (= e!87463 None!174)))

(assert (= (and d!41279 c!24993) b!134287))

(assert (= (and d!41279 (not c!24993)) b!134288))

(assert (= (and b!134288 c!24994) b!134289))

(assert (= (and b!134288 (not c!24994)) b!134290))

(declare-fun m!159027 () Bool)

(assert (=> b!134289 m!159027))

(assert (=> d!40695 d!41279))

(declare-fun lt!70190 () Bool)

(declare-fun d!41281 () Bool)

(assert (=> d!41281 (= lt!70190 (select (content!133 (toList!851 lt!69854)) (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))))

(declare-fun e!87465 () Bool)

(assert (=> d!41281 (= lt!70190 e!87465)))

(declare-fun res!64539 () Bool)

(assert (=> d!41281 (=> (not res!64539) (not e!87465))))

(assert (=> d!41281 (= res!64539 ((_ is Cons!1706) (toList!851 lt!69854)))))

(assert (=> d!41281 (= (contains!889 (toList!851 lt!69854) (tuple2!2585 lt!69223 (minValue!2719 newMap!16))) lt!70190)))

(declare-fun b!134291 () Bool)

(declare-fun e!87464 () Bool)

(assert (=> b!134291 (= e!87465 e!87464)))

(declare-fun res!64540 () Bool)

(assert (=> b!134291 (=> res!64540 e!87464)))

(assert (=> b!134291 (= res!64540 (= (h!2311 (toList!851 lt!69854)) (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))))

(declare-fun b!134292 () Bool)

(assert (=> b!134292 (= e!87464 (contains!889 (t!6152 (toList!851 lt!69854)) (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))))

(assert (= (and d!41281 res!64539) b!134291))

(assert (= (and b!134291 (not res!64540)) b!134292))

(declare-fun m!159029 () Bool)

(assert (=> d!41281 m!159029))

(declare-fun m!159031 () Bool)

(assert (=> d!41281 m!159031))

(declare-fun m!159033 () Bool)

(assert (=> b!134292 m!159033))

(assert (=> b!133638 d!41281))

(declare-fun lt!70191 () Bool)

(declare-fun d!41283 () Bool)

(assert (=> d!41283 (= lt!70191 (select (content!133 lt!69200) (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87467 () Bool)

(assert (=> d!41283 (= lt!70191 e!87467)))

(declare-fun res!64541 () Bool)

(assert (=> d!41283 (=> (not res!64541) (not e!87467))))

(assert (=> d!41283 (= res!64541 ((_ is Cons!1706) lt!69200))))

(assert (=> d!41283 (= (contains!889 lt!69200 (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70191)))

(declare-fun b!134293 () Bool)

(declare-fun e!87466 () Bool)

(assert (=> b!134293 (= e!87467 e!87466)))

(declare-fun res!64542 () Bool)

(assert (=> b!134293 (=> res!64542 e!87466)))

(assert (=> b!134293 (= res!64542 (= (h!2311 lt!69200) (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134294 () Bool)

(assert (=> b!134294 (= e!87466 (contains!889 (t!6152 lt!69200) (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41283 res!64541) b!134293))

(assert (= (and b!134293 (not res!64542)) b!134294))

(declare-fun m!159035 () Bool)

(assert (=> d!41283 m!159035))

(declare-fun m!159037 () Bool)

(assert (=> d!41283 m!159037))

(declare-fun m!159039 () Bool)

(assert (=> b!134294 m!159039))

(assert (=> b!133740 d!41283))

(assert (=> b!133479 d!41033))

(assert (=> b!133479 d!41035))

(assert (=> b!133646 d!40997))

(assert (=> b!133646 d!40801))

(declare-fun d!41285 () Bool)

(declare-fun res!64543 () Bool)

(declare-fun e!87468 () Bool)

(assert (=> d!41285 (=> res!64543 e!87468)))

(assert (=> d!41285 (= res!64543 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!69508))))

(assert (=> d!41285 (= (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69508 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!87468)))

(declare-fun b!134295 () Bool)

(declare-fun e!87469 () Bool)

(assert (=> b!134295 (= e!87468 e!87469)))

(declare-fun res!64544 () Bool)

(assert (=> b!134295 (=> (not res!64544) (not e!87469))))

(assert (=> b!134295 (= res!64544 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!134296 () Bool)

(assert (=> b!134296 (= e!87469 (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69508 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!41285 (not res!64543)) b!134295))

(assert (= (and b!134295 res!64544) b!134296))

(assert (=> d!41285 m!156349))

(declare-fun m!159041 () Bool)

(assert (=> b!134296 m!159041))

(assert (=> b!133834 d!41285))

(assert (=> b!133501 d!40519))

(assert (=> b!133303 d!41027))

(assert (=> b!133303 d!41029))

(declare-fun d!41287 () Bool)

(declare-fun e!87470 () Bool)

(assert (=> d!41287 e!87470))

(declare-fun res!64545 () Bool)

(assert (=> d!41287 (=> res!64545 e!87470)))

(declare-fun lt!70193 () Bool)

(assert (=> d!41287 (= res!64545 (not lt!70193))))

(declare-fun lt!70195 () Bool)

(assert (=> d!41287 (= lt!70193 lt!70195)))

(declare-fun lt!70192 () Unit!4132)

(declare-fun e!87471 () Unit!4132)

(assert (=> d!41287 (= lt!70192 e!87471)))

(declare-fun c!24995 () Bool)

(assert (=> d!41287 (= c!24995 lt!70195)))

(assert (=> d!41287 (= lt!70195 (containsKey!174 (toList!851 lt!69863) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41287 (= (contains!886 lt!69863 (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))) lt!70193)))

(declare-fun b!134297 () Bool)

(declare-fun lt!70194 () Unit!4132)

(assert (=> b!134297 (= e!87471 lt!70194)))

(assert (=> b!134297 (= lt!70194 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69863) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))

(assert (=> b!134297 (isDefined!124 (getValueByKey!170 (toList!851 lt!69863) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134298 () Bool)

(declare-fun Unit!4206 () Unit!4132)

(assert (=> b!134298 (= e!87471 Unit!4206)))

(declare-fun b!134299 () Bool)

(assert (=> b!134299 (= e!87470 (isDefined!124 (getValueByKey!170 (toList!851 lt!69863) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!41287 c!24995) b!134297))

(assert (= (and d!41287 (not c!24995)) b!134298))

(assert (= (and d!41287 (not res!64545)) b!134299))

(declare-fun m!159043 () Bool)

(assert (=> d!41287 m!159043))

(declare-fun m!159045 () Bool)

(assert (=> b!134297 m!159045))

(assert (=> b!134297 m!157829))

(assert (=> b!134297 m!157829))

(declare-fun m!159047 () Bool)

(assert (=> b!134297 m!159047))

(assert (=> b!134299 m!157829))

(assert (=> b!134299 m!157829))

(assert (=> b!134299 m!159047))

(assert (=> d!40757 d!41287))

(declare-fun d!41289 () Bool)

(declare-fun c!24996 () Bool)

(assert (=> d!41289 (= c!24996 (and ((_ is Cons!1706) lt!69861) (= (_1!1303 (h!2311 lt!69861)) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))))))

(declare-fun e!87472 () Option!176)

(assert (=> d!41289 (= (getValueByKey!170 lt!69861 (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))) e!87472)))

(declare-fun b!134302 () Bool)

(declare-fun e!87473 () Option!176)

(assert (=> b!134302 (= e!87473 (getValueByKey!170 (t!6152 lt!69861) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134301 () Bool)

(assert (=> b!134301 (= e!87472 e!87473)))

(declare-fun c!24997 () Bool)

(assert (=> b!134301 (= c!24997 (and ((_ is Cons!1706) lt!69861) (not (= (_1!1303 (h!2311 lt!69861)) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!134300 () Bool)

(assert (=> b!134300 (= e!87472 (Some!175 (_2!1303 (h!2311 lt!69861))))))

(declare-fun b!134303 () Bool)

(assert (=> b!134303 (= e!87473 None!174)))

(assert (= (and d!41289 c!24996) b!134300))

(assert (= (and d!41289 (not c!24996)) b!134301))

(assert (= (and b!134301 c!24997) b!134302))

(assert (= (and b!134301 (not c!24997)) b!134303))

(declare-fun m!159049 () Bool)

(assert (=> b!134302 m!159049))

(assert (=> d!40757 d!41289))

(declare-fun d!41291 () Bool)

(assert (=> d!41291 (= (getValueByKey!170 lt!69861 (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70196 () Unit!4132)

(assert (=> d!41291 (= lt!70196 (choose!834 lt!69861 (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))

(declare-fun e!87474 () Bool)

(assert (=> d!41291 e!87474))

(declare-fun res!64546 () Bool)

(assert (=> d!41291 (=> (not res!64546) (not e!87474))))

(assert (=> d!41291 (= res!64546 (isStrictlySorted!317 lt!69861))))

(assert (=> d!41291 (= (lemmaContainsTupThenGetReturnValue!88 lt!69861 (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))) lt!70196)))

(declare-fun b!134304 () Bool)

(declare-fun res!64547 () Bool)

(assert (=> b!134304 (=> (not res!64547) (not e!87474))))

(assert (=> b!134304 (= res!64547 (containsKey!174 lt!69861 (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134305 () Bool)

(assert (=> b!134305 (= e!87474 (contains!889 lt!69861 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!41291 res!64546) b!134304))

(assert (= (and b!134304 res!64547) b!134305))

(assert (=> d!41291 m!157823))

(declare-fun m!159051 () Bool)

(assert (=> d!41291 m!159051))

(declare-fun m!159053 () Bool)

(assert (=> d!41291 m!159053))

(declare-fun m!159055 () Bool)

(assert (=> b!134304 m!159055))

(declare-fun m!159057 () Bool)

(assert (=> b!134305 m!159057))

(assert (=> d!40757 d!41291))

(declare-fun b!134306 () Bool)

(declare-fun e!87479 () List!1710)

(assert (=> b!134306 (= e!87479 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69204)) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134307 () Bool)

(declare-fun e!87478 () List!1710)

(declare-fun call!14793 () List!1710)

(assert (=> b!134307 (= e!87478 call!14793)))

(declare-fun b!134308 () Bool)

(declare-fun res!64549 () Bool)

(declare-fun e!87476 () Bool)

(assert (=> b!134308 (=> (not res!64549) (not e!87476))))

(declare-fun lt!70197 () List!1710)

(assert (=> b!134308 (= res!64549 (containsKey!174 lt!70197 (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))

(declare-fun bm!14788 () Bool)

(declare-fun c!24999 () Bool)

(assert (=> bm!14788 (= call!14793 ($colon$colon!91 e!87479 (ite c!24999 (h!2311 (toList!851 lt!69204)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))))

(declare-fun c!25000 () Bool)

(assert (=> bm!14788 (= c!25000 c!24999)))

(declare-fun b!134309 () Bool)

(declare-fun c!25001 () Bool)

(declare-fun c!24998 () Bool)

(assert (=> b!134309 (= e!87479 (ite c!24998 (t!6152 (toList!851 lt!69204)) (ite c!25001 (Cons!1706 (h!2311 (toList!851 lt!69204)) (t!6152 (toList!851 lt!69204))) Nil!1707)))))

(declare-fun d!41293 () Bool)

(assert (=> d!41293 e!87476))

(declare-fun res!64548 () Bool)

(assert (=> d!41293 (=> (not res!64548) (not e!87476))))

(assert (=> d!41293 (= res!64548 (isStrictlySorted!317 lt!70197))))

(assert (=> d!41293 (= lt!70197 e!87478)))

(assert (=> d!41293 (= c!24999 (and ((_ is Cons!1706) (toList!851 lt!69204)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69204))) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))))))

(assert (=> d!41293 (isStrictlySorted!317 (toList!851 lt!69204))))

(assert (=> d!41293 (= (insertStrictlySorted!91 (toList!851 lt!69204) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))) lt!70197)))

(declare-fun b!134310 () Bool)

(declare-fun e!87475 () List!1710)

(assert (=> b!134310 (= e!87478 e!87475)))

(assert (=> b!134310 (= c!24998 (and ((_ is Cons!1706) (toList!851 lt!69204)) (= (_1!1303 (h!2311 (toList!851 lt!69204))) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134311 () Bool)

(declare-fun e!87477 () List!1710)

(declare-fun call!14791 () List!1710)

(assert (=> b!134311 (= e!87477 call!14791)))

(declare-fun b!134312 () Bool)

(declare-fun call!14792 () List!1710)

(assert (=> b!134312 (= e!87475 call!14792)))

(declare-fun b!134313 () Bool)

(assert (=> b!134313 (= e!87476 (contains!889 lt!70197 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))))))

(declare-fun bm!14789 () Bool)

(assert (=> bm!14789 (= call!14792 call!14793)))

(declare-fun bm!14790 () Bool)

(assert (=> bm!14790 (= call!14791 call!14792)))

(declare-fun b!134314 () Bool)

(assert (=> b!134314 (= c!25001 (and ((_ is Cons!1706) (toList!851 lt!69204)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69204))) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))))))

(assert (=> b!134314 (= e!87475 e!87477)))

(declare-fun b!134315 () Bool)

(assert (=> b!134315 (= e!87477 call!14791)))

(assert (= (and d!41293 c!24999) b!134307))

(assert (= (and d!41293 (not c!24999)) b!134310))

(assert (= (and b!134310 c!24998) b!134312))

(assert (= (and b!134310 (not c!24998)) b!134314))

(assert (= (and b!134314 c!25001) b!134315))

(assert (= (and b!134314 (not c!25001)) b!134311))

(assert (= (or b!134315 b!134311) bm!14790))

(assert (= (or b!134312 bm!14790) bm!14789))

(assert (= (or b!134307 bm!14789) bm!14788))

(assert (= (and bm!14788 c!25000) b!134306))

(assert (= (and bm!14788 (not c!25000)) b!134309))

(assert (= (and d!41293 res!64548) b!134308))

(assert (= (and b!134308 res!64549) b!134313))

(declare-fun m!159059 () Bool)

(assert (=> b!134313 m!159059))

(declare-fun m!159061 () Bool)

(assert (=> b!134308 m!159061))

(declare-fun m!159063 () Bool)

(assert (=> b!134306 m!159063))

(declare-fun m!159065 () Bool)

(assert (=> d!41293 m!159065))

(declare-fun m!159067 () Bool)

(assert (=> d!41293 m!159067))

(declare-fun m!159069 () Bool)

(assert (=> bm!14788 m!159069))

(assert (=> d!40757 d!41293))

(assert (=> d!40433 d!40425))

(assert (=> b!133843 d!41071))

(assert (=> b!133843 d!40843))

(assert (=> b!133437 d!41233))

(declare-fun lt!70198 () Bool)

(declare-fun d!41295 () Bool)

(assert (=> d!41295 (= lt!70198 (select (content!133 (toList!851 lt!69582)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87481 () Bool)

(assert (=> d!41295 (= lt!70198 e!87481)))

(declare-fun res!64550 () Bool)

(assert (=> d!41295 (=> (not res!64550) (not e!87481))))

(assert (=> d!41295 (= res!64550 ((_ is Cons!1706) (toList!851 lt!69582)))))

(assert (=> d!41295 (= (contains!889 (toList!851 lt!69582) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70198)))

(declare-fun b!134316 () Bool)

(declare-fun e!87480 () Bool)

(assert (=> b!134316 (= e!87481 e!87480)))

(declare-fun res!64551 () Bool)

(assert (=> b!134316 (=> res!64551 e!87480)))

(assert (=> b!134316 (= res!64551 (= (h!2311 (toList!851 lt!69582)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134317 () Bool)

(assert (=> b!134317 (= e!87480 (contains!889 (t!6152 (toList!851 lt!69582)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41295 res!64550) b!134316))

(assert (= (and b!134316 (not res!64551)) b!134317))

(declare-fun m!159071 () Bool)

(assert (=> d!41295 m!159071))

(declare-fun m!159073 () Bool)

(assert (=> d!41295 m!159073))

(declare-fun m!159075 () Bool)

(assert (=> b!134317 m!159075))

(assert (=> b!133261 d!41295))

(declare-fun d!41297 () Bool)

(assert (=> d!41297 (= (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (and (not (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133667 d!41297))

(assert (=> b!133314 d!41011))

(assert (=> b!133314 d!40647))

(declare-fun lt!70199 () Bool)

(declare-fun d!41299 () Bool)

(assert (=> d!41299 (= lt!70199 (select (content!133 (toList!851 lt!69850)) (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))))

(declare-fun e!87483 () Bool)

(assert (=> d!41299 (= lt!70199 e!87483)))

(declare-fun res!64552 () Bool)

(assert (=> d!41299 (=> (not res!64552) (not e!87483))))

(assert (=> d!41299 (= res!64552 ((_ is Cons!1706) (toList!851 lt!69850)))))

(assert (=> d!41299 (= (contains!889 (toList!851 lt!69850) (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))) lt!70199)))

(declare-fun b!134318 () Bool)

(declare-fun e!87482 () Bool)

(assert (=> b!134318 (= e!87483 e!87482)))

(declare-fun res!64553 () Bool)

(assert (=> b!134318 (=> res!64553 e!87482)))

(assert (=> b!134318 (= res!64553 (= (h!2311 (toList!851 lt!69850)) (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))))

(declare-fun b!134319 () Bool)

(assert (=> b!134319 (= e!87482 (contains!889 (t!6152 (toList!851 lt!69850)) (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41299 res!64552) b!134318))

(assert (= (and b!134318 (not res!64553)) b!134319))

(declare-fun m!159077 () Bool)

(assert (=> d!41299 m!159077))

(declare-fun m!159079 () Bool)

(assert (=> d!41299 m!159079))

(declare-fun m!159081 () Bool)

(assert (=> b!134319 m!159081))

(assert (=> b!133636 d!41299))

(assert (=> b!133641 d!41127))

(assert (=> b!133641 d!41129))

(declare-fun d!41301 () Bool)

(declare-fun res!64554 () Bool)

(declare-fun e!87484 () Bool)

(assert (=> d!41301 (=> res!64554 e!87484)))

(assert (=> d!41301 (= res!64554 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))) lt!69246)))))

(assert (=> d!41301 (= (containsKey!174 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) lt!69246) e!87484)))

(declare-fun b!134320 () Bool)

(declare-fun e!87485 () Bool)

(assert (=> b!134320 (= e!87484 e!87485)))

(declare-fun res!64555 () Bool)

(assert (=> b!134320 (=> (not res!64555) (not e!87485))))

(assert (=> b!134320 (= res!64555 (and (or (not ((_ is Cons!1706) (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))) (bvsle (_1!1303 (h!2311 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))) lt!69246)) ((_ is Cons!1706) (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))) (bvslt (_1!1303 (h!2311 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))) lt!69246)))))

(declare-fun b!134321 () Bool)

(assert (=> b!134321 (= e!87485 (containsKey!174 (t!6152 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))) lt!69246))))

(assert (= (and d!41301 (not res!64554)) b!134320))

(assert (= (and b!134320 res!64555) b!134321))

(declare-fun m!159083 () Bool)

(assert (=> b!134321 m!159083))

(assert (=> d!40713 d!41301))

(declare-fun d!41303 () Bool)

(declare-fun e!87486 () Bool)

(assert (=> d!41303 e!87486))

(declare-fun res!64557 () Bool)

(assert (=> d!41303 (=> (not res!64557) (not e!87486))))

(declare-fun lt!70202 () ListLongMap!1671)

(assert (=> d!41303 (= res!64557 (contains!886 lt!70202 (_1!1303 (ite (or c!24865 c!24863) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1304 lt!69115))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115)))))))))

(declare-fun lt!70200 () List!1710)

(assert (=> d!41303 (= lt!70202 (ListLongMap!1672 lt!70200))))

(declare-fun lt!70203 () Unit!4132)

(declare-fun lt!70201 () Unit!4132)

(assert (=> d!41303 (= lt!70203 lt!70201)))

(assert (=> d!41303 (= (getValueByKey!170 lt!70200 (_1!1303 (ite (or c!24865 c!24863) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1304 lt!69115))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115)))))) (Some!175 (_2!1303 (ite (or c!24865 c!24863) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1304 lt!69115))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115)))))))))

(assert (=> d!41303 (= lt!70201 (lemmaContainsTupThenGetReturnValue!88 lt!70200 (_1!1303 (ite (or c!24865 c!24863) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1304 lt!69115))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115))))) (_2!1303 (ite (or c!24865 c!24863) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1304 lt!69115))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115)))))))))

(assert (=> d!41303 (= lt!70200 (insertStrictlySorted!91 (toList!851 (ite c!24865 call!14763 (ite c!24863 call!14766 call!14765))) (_1!1303 (ite (or c!24865 c!24863) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1304 lt!69115))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115))))) (_2!1303 (ite (or c!24865 c!24863) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1304 lt!69115))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115)))))))))

(assert (=> d!41303 (= (+!163 (ite c!24865 call!14763 (ite c!24863 call!14766 call!14765)) (ite (or c!24865 c!24863) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1304 lt!69115))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115))))) lt!70202)))

(declare-fun b!134322 () Bool)

(declare-fun res!64556 () Bool)

(assert (=> b!134322 (=> (not res!64556) (not e!87486))))

(assert (=> b!134322 (= res!64556 (= (getValueByKey!170 (toList!851 lt!70202) (_1!1303 (ite (or c!24865 c!24863) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1304 lt!69115))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115)))))) (Some!175 (_2!1303 (ite (or c!24865 c!24863) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1304 lt!69115))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115))))))))))

(declare-fun b!134323 () Bool)

(assert (=> b!134323 (= e!87486 (contains!889 (toList!851 lt!70202) (ite (or c!24865 c!24863) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1304 lt!69115))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115))))))))

(assert (= (and d!41303 res!64557) b!134322))

(assert (= (and b!134322 res!64556) b!134323))

(declare-fun m!159085 () Bool)

(assert (=> d!41303 m!159085))

(declare-fun m!159087 () Bool)

(assert (=> d!41303 m!159087))

(declare-fun m!159089 () Bool)

(assert (=> d!41303 m!159089))

(declare-fun m!159091 () Bool)

(assert (=> d!41303 m!159091))

(declare-fun m!159093 () Bool)

(assert (=> b!134322 m!159093))

(declare-fun m!159095 () Bool)

(assert (=> b!134323 m!159095))

(assert (=> bm!14757 d!41303))

(declare-fun d!41305 () Bool)

(declare-fun c!25002 () Bool)

(assert (=> d!41305 (= c!25002 ((_ is Nil!1707) (toList!851 lt!69335)))))

(declare-fun e!87487 () (InoxSet tuple2!2584))

(assert (=> d!41305 (= (content!133 (toList!851 lt!69335)) e!87487)))

(declare-fun b!134324 () Bool)

(assert (=> b!134324 (= e!87487 ((as const (Array tuple2!2584 Bool)) false))))

(declare-fun b!134325 () Bool)

(assert (=> b!134325 (= e!87487 ((_ map or) (store ((as const (Array tuple2!2584 Bool)) false) (h!2311 (toList!851 lt!69335)) true) (content!133 (t!6152 (toList!851 lt!69335)))))))

(assert (= (and d!41305 c!25002) b!134324))

(assert (= (and d!41305 (not c!25002)) b!134325))

(declare-fun m!159097 () Bool)

(assert (=> b!134325 m!159097))

(declare-fun m!159099 () Bool)

(assert (=> b!134325 m!159099))

(assert (=> d!40499 d!41305))

(declare-fun d!41307 () Bool)

(assert (=> d!41307 (= (apply!116 lt!69641 (select (arr!2248 lt!69447) #b00000000000000000000000000000000)) (get!1482 (getValueByKey!170 (toList!851 lt!69641) (select (arr!2248 lt!69447) #b00000000000000000000000000000000))))))

(declare-fun bs!5584 () Bool)

(assert (= bs!5584 d!41307))

(assert (=> bs!5584 m!157063))

(assert (=> bs!5584 m!158891))

(assert (=> bs!5584 m!158891))

(declare-fun m!159101 () Bool)

(assert (=> bs!5584 m!159101))

(assert (=> b!133370 d!41307))

(declare-fun d!41309 () Bool)

(declare-fun c!25003 () Bool)

(assert (=> d!41309 (= c!25003 ((_ is ValueCellFull!1094) (select (arr!2249 lt!69436) #b00000000000000000000000000000000)))))

(declare-fun e!87488 () V!3481)

(assert (=> d!41309 (= (get!1478 (select (arr!2249 lt!69436) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87488)))

(declare-fun b!134326 () Bool)

(assert (=> b!134326 (= e!87488 (get!1480 (select (arr!2249 lt!69436) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134327 () Bool)

(assert (=> b!134327 (= e!87488 (get!1481 (select (arr!2249 lt!69436) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41309 c!25003) b!134326))

(assert (= (and d!41309 (not c!25003)) b!134327))

(assert (=> b!134326 m!157071))

(assert (=> b!134326 m!156135))

(declare-fun m!159103 () Bool)

(assert (=> b!134326 m!159103))

(assert (=> b!134327 m!157071))

(assert (=> b!134327 m!156135))

(declare-fun m!159105 () Bool)

(assert (=> b!134327 m!159105))

(assert (=> b!133370 d!41309))

(declare-fun b!134328 () Bool)

(declare-fun e!87489 () Bool)

(declare-fun call!14794 () Bool)

(assert (=> b!134328 (= e!87489 call!14794)))

(declare-fun b!134329 () Bool)

(declare-fun e!87490 () Bool)

(assert (=> b!134329 (= e!87490 e!87489)))

(declare-fun lt!70204 () (_ BitVec 64))

(assert (=> b!134329 (= lt!70204 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!70206 () Unit!4132)

(assert (=> b!134329 (= lt!70206 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 newMap!16) lt!70204 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!134329 (arrayContainsKey!0 (_keys!4612 newMap!16) lt!70204 #b00000000000000000000000000000000)))

(declare-fun lt!70205 () Unit!4132)

(assert (=> b!134329 (= lt!70205 lt!70206)))

(declare-fun res!64559 () Bool)

(assert (=> b!134329 (= res!64559 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4612 newMap!16) (mask!7163 newMap!16)) (Found!278 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!134329 (=> (not res!64559) (not e!87489))))

(declare-fun d!41311 () Bool)

(declare-fun res!64558 () Bool)

(declare-fun e!87491 () Bool)

(assert (=> d!41311 (=> res!64558 e!87491)))

(assert (=> d!41311 (= res!64558 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!41311 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4612 newMap!16) (mask!7163 newMap!16)) e!87491)))

(declare-fun b!134330 () Bool)

(assert (=> b!134330 (= e!87491 e!87490)))

(declare-fun c!25004 () Bool)

(assert (=> b!134330 (= c!25004 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134331 () Bool)

(assert (=> b!134331 (= e!87490 call!14794)))

(declare-fun bm!14791 () Bool)

(assert (=> bm!14791 (= call!14794 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(assert (= (and d!41311 (not res!64558)) b!134330))

(assert (= (and b!134330 c!25004) b!134329))

(assert (= (and b!134330 (not c!25004)) b!134331))

(assert (= (and b!134329 res!64559) b!134328))

(assert (= (or b!134328 b!134331) bm!14791))

(declare-fun m!159107 () Bool)

(assert (=> b!134329 m!159107))

(declare-fun m!159109 () Bool)

(assert (=> b!134329 m!159109))

(declare-fun m!159111 () Bool)

(assert (=> b!134329 m!159111))

(assert (=> b!134329 m!159107))

(declare-fun m!159113 () Bool)

(assert (=> b!134329 m!159113))

(assert (=> b!134330 m!159107))

(assert (=> b!134330 m!159107))

(declare-fun m!159115 () Bool)

(assert (=> b!134330 m!159115))

(declare-fun m!159117 () Bool)

(assert (=> bm!14791 m!159117))

(assert (=> bm!14726 d!41311))

(declare-fun d!41313 () Bool)

(declare-fun res!64560 () Bool)

(declare-fun e!87492 () Bool)

(assert (=> d!41313 (=> res!64560 e!87492)))

(assert (=> d!41313 (= res!64560 (and ((_ is Cons!1706) (toList!851 lt!69250)) (= (_1!1303 (h!2311 (toList!851 lt!69250))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!41313 (= (containsKey!174 (toList!851 lt!69250) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) e!87492)))

(declare-fun b!134332 () Bool)

(declare-fun e!87493 () Bool)

(assert (=> b!134332 (= e!87492 e!87493)))

(declare-fun res!64561 () Bool)

(assert (=> b!134332 (=> (not res!64561) (not e!87493))))

(assert (=> b!134332 (= res!64561 (and (or (not ((_ is Cons!1706) (toList!851 lt!69250))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69250))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1706) (toList!851 lt!69250)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69250))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!134333 () Bool)

(assert (=> b!134333 (= e!87493 (containsKey!174 (t!6152 (toList!851 lt!69250)) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41313 (not res!64560)) b!134332))

(assert (= (and b!134332 res!64561) b!134333))

(assert (=> b!134333 m!156125))

(declare-fun m!159119 () Bool)

(assert (=> b!134333 m!159119))

(assert (=> d!40777 d!41313))

(declare-fun d!41315 () Bool)

(declare-fun res!64562 () Bool)

(declare-fun e!87494 () Bool)

(assert (=> d!41315 (=> res!64562 e!87494)))

(assert (=> d!41315 (= res!64562 (= (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> d!41315 (= (arrayContainsKey!0 (_keys!4612 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!87494)))

(declare-fun b!134334 () Bool)

(declare-fun e!87495 () Bool)

(assert (=> b!134334 (= e!87494 e!87495)))

(declare-fun res!64563 () Bool)

(assert (=> b!134334 (=> (not res!64563) (not e!87495))))

(assert (=> b!134334 (= res!64563 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!134335 () Bool)

(assert (=> b!134335 (= e!87495 (arrayContainsKey!0 (_keys!4612 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!41315 (not res!64562)) b!134334))

(assert (= (and b!134334 res!64563) b!134335))

(assert (=> d!41315 m!159107))

(assert (=> b!134335 m!155841))

(declare-fun m!159121 () Bool)

(assert (=> b!134335 m!159121))

(assert (=> b!133348 d!41315))

(declare-fun d!41317 () Bool)

(assert (=> d!41317 (= (get!1482 (getValueByKey!170 (toList!851 lt!69484) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))) (v!3198 (getValueByKey!170 (toList!851 lt!69484) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!40495 d!41317))

(declare-fun d!41319 () Bool)

(declare-fun c!25005 () Bool)

(assert (=> d!41319 (= c!25005 (and ((_ is Cons!1706) (toList!851 lt!69484)) (= (_1!1303 (h!2311 (toList!851 lt!69484))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun e!87496 () Option!176)

(assert (=> d!41319 (= (getValueByKey!170 (toList!851 lt!69484) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) e!87496)))

(declare-fun b!134338 () Bool)

(declare-fun e!87497 () Option!176)

(assert (=> b!134338 (= e!87497 (getValueByKey!170 (t!6152 (toList!851 lt!69484)) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134337 () Bool)

(assert (=> b!134337 (= e!87496 e!87497)))

(declare-fun c!25006 () Bool)

(assert (=> b!134337 (= c!25006 (and ((_ is Cons!1706) (toList!851 lt!69484)) (not (= (_1!1303 (h!2311 (toList!851 lt!69484))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!134336 () Bool)

(assert (=> b!134336 (= e!87496 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69484)))))))

(declare-fun b!134339 () Bool)

(assert (=> b!134339 (= e!87497 None!174)))

(assert (= (and d!41319 c!25005) b!134336))

(assert (= (and d!41319 (not c!25005)) b!134337))

(assert (= (and b!134337 c!25006) b!134338))

(assert (= (and b!134337 (not c!25006)) b!134339))

(assert (=> b!134338 m!156125))

(declare-fun m!159123 () Bool)

(assert (=> b!134338 m!159123))

(assert (=> d!40495 d!41319))

(declare-fun b!134340 () Bool)

(declare-fun e!87500 () SeekEntryResult!278)

(assert (=> b!134340 (= e!87500 Undefined!278)))

(declare-fun b!134341 () Bool)

(declare-fun e!87499 () SeekEntryResult!278)

(assert (=> b!134341 (= e!87499 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15594 lt!69952) #b00000000000000000000000000000001) (nextIndex!0 (index!3274 lt!69952) (x!15594 lt!69952) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!69952) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!134342 () Bool)

(declare-fun e!87498 () SeekEntryResult!278)

(assert (=> b!134342 (= e!87498 (Found!278 (index!3274 lt!69952)))))

(declare-fun d!41321 () Bool)

(declare-fun lt!70207 () SeekEntryResult!278)

(assert (=> d!41321 (and (or ((_ is Undefined!278) lt!70207) (not ((_ is Found!278) lt!70207)) (and (bvsge (index!3273 lt!70207) #b00000000000000000000000000000000) (bvslt (index!3273 lt!70207) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))) (or ((_ is Undefined!278) lt!70207) ((_ is Found!278) lt!70207) (not ((_ is MissingVacant!278) lt!70207)) (not (= (index!3275 lt!70207) (index!3274 lt!69952))) (and (bvsge (index!3275 lt!70207) #b00000000000000000000000000000000) (bvslt (index!3275 lt!70207) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))) (or ((_ is Undefined!278) lt!70207) (ite ((_ is Found!278) lt!70207) (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3273 lt!70207)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and ((_ is MissingVacant!278) lt!70207) (= (index!3275 lt!70207) (index!3274 lt!69952)) (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3275 lt!70207)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!41321 (= lt!70207 e!87500)))

(declare-fun c!25009 () Bool)

(assert (=> d!41321 (= c!25009 (bvsge (x!15594 lt!69952) #b01111111111111111111111111111110))))

(declare-fun lt!70208 () (_ BitVec 64))

(assert (=> d!41321 (= lt!70208 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!69952)))))

(assert (=> d!41321 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!41321 (= (seekKeyOrZeroReturnVacant!0 (x!15594 lt!69952) (index!3274 lt!69952) (index!3274 lt!69952) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) lt!70207)))

(declare-fun b!134343 () Bool)

(declare-fun c!25008 () Bool)

(assert (=> b!134343 (= c!25008 (= lt!70208 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134343 (= e!87498 e!87499)))

(declare-fun b!134344 () Bool)

(assert (=> b!134344 (= e!87499 (MissingVacant!278 (index!3274 lt!69952)))))

(declare-fun b!134345 () Bool)

(assert (=> b!134345 (= e!87500 e!87498)))

(declare-fun c!25007 () Bool)

(assert (=> b!134345 (= c!25007 (= lt!70208 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!41321 c!25009) b!134340))

(assert (= (and d!41321 (not c!25009)) b!134345))

(assert (= (and b!134345 c!25007) b!134342))

(assert (= (and b!134345 (not c!25007)) b!134343))

(assert (= (and b!134343 c!25008) b!134344))

(assert (= (and b!134343 (not c!25008)) b!134341))

(declare-fun m!159125 () Bool)

(assert (=> b!134341 m!159125))

(assert (=> b!134341 m!159125))

(assert (=> b!134341 m!156349))

(declare-fun m!159127 () Bool)

(assert (=> b!134341 m!159127))

(declare-fun m!159129 () Bool)

(assert (=> d!41321 m!159129))

(declare-fun m!159131 () Bool)

(assert (=> d!41321 m!159131))

(assert (=> d!41321 m!158121))

(assert (=> d!41321 m!155855))

(assert (=> b!133837 d!41321))

(declare-fun d!41323 () Bool)

(declare-fun c!25010 () Bool)

(assert (=> d!41323 (= c!25010 ((_ is Nil!1707) (toList!851 lt!69202)))))

(declare-fun e!87501 () (InoxSet tuple2!2584))

(assert (=> d!41323 (= (content!133 (toList!851 lt!69202)) e!87501)))

(declare-fun b!134346 () Bool)

(assert (=> b!134346 (= e!87501 ((as const (Array tuple2!2584 Bool)) false))))

(declare-fun b!134347 () Bool)

(assert (=> b!134347 (= e!87501 ((_ map or) (store ((as const (Array tuple2!2584 Bool)) false) (h!2311 (toList!851 lt!69202)) true) (content!133 (t!6152 (toList!851 lt!69202)))))))

(assert (= (and d!41323 c!25010) b!134346))

(assert (= (and d!41323 (not c!25010)) b!134347))

(declare-fun m!159133 () Bool)

(assert (=> b!134347 m!159133))

(declare-fun m!159135 () Bool)

(assert (=> b!134347 m!159135))

(assert (=> d!40451 d!41323))

(declare-fun d!41325 () Bool)

(assert (=> d!41325 (= (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69348 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))) lt!69353)) (v!3198 (getValueByKey!170 (toList!851 (+!163 lt!69348 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))) lt!69353)))))

(assert (=> d!40931 d!41325))

(declare-fun c!25011 () Bool)

(declare-fun d!41327 () Bool)

(assert (=> d!41327 (= c!25011 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69348 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69348 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))) lt!69353)))))

(declare-fun e!87502 () Option!176)

(assert (=> d!41327 (= (getValueByKey!170 (toList!851 (+!163 lt!69348 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))) lt!69353) e!87502)))

(declare-fun e!87503 () Option!176)

(declare-fun b!134350 () Bool)

(assert (=> b!134350 (= e!87503 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69348 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))) lt!69353))))

(declare-fun b!134349 () Bool)

(assert (=> b!134349 (= e!87502 e!87503)))

(declare-fun c!25012 () Bool)

(assert (=> b!134349 (= c!25012 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69348 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69348 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))) lt!69353))))))

(declare-fun b!134348 () Bool)

(assert (=> b!134348 (= e!87502 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69348 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))))))))

(declare-fun b!134351 () Bool)

(assert (=> b!134351 (= e!87503 None!174)))

(assert (= (and d!41327 c!25011) b!134348))

(assert (= (and d!41327 (not c!25011)) b!134349))

(assert (= (and b!134349 c!25012) b!134350))

(assert (= (and b!134349 (not c!25012)) b!134351))

(declare-fun m!159137 () Bool)

(assert (=> b!134350 m!159137))

(assert (=> d!40931 d!41327))

(assert (=> b!133970 d!40403))

(declare-fun d!41329 () Bool)

(declare-fun e!87504 () Bool)

(assert (=> d!41329 e!87504))

(declare-fun res!64564 () Bool)

(assert (=> d!41329 (=> res!64564 e!87504)))

(declare-fun lt!70210 () Bool)

(assert (=> d!41329 (= res!64564 (not lt!70210))))

(declare-fun lt!70212 () Bool)

(assert (=> d!41329 (= lt!70210 lt!70212)))

(declare-fun lt!70209 () Unit!4132)

(declare-fun e!87505 () Unit!4132)

(assert (=> d!41329 (= lt!70209 e!87505)))

(declare-fun c!25013 () Bool)

(assert (=> d!41329 (= c!25013 lt!70212)))

(assert (=> d!41329 (= lt!70212 (containsKey!174 (toList!851 lt!70037) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!41329 (= (contains!886 lt!70037 (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) lt!70210)))

(declare-fun b!134352 () Bool)

(declare-fun lt!70211 () Unit!4132)

(assert (=> b!134352 (= e!87505 lt!70211)))

(assert (=> b!134352 (= lt!70211 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!70037) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> b!134352 (isDefined!124 (getValueByKey!170 (toList!851 lt!70037) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!134353 () Bool)

(declare-fun Unit!4207 () Unit!4132)

(assert (=> b!134353 (= e!87505 Unit!4207)))

(declare-fun b!134354 () Bool)

(assert (=> b!134354 (= e!87504 (isDefined!124 (getValueByKey!170 (toList!851 lt!70037) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(assert (= (and d!41329 c!25013) b!134352))

(assert (= (and d!41329 (not c!25013)) b!134353))

(assert (= (and d!41329 (not res!64564)) b!134354))

(declare-fun m!159139 () Bool)

(assert (=> d!41329 m!159139))

(declare-fun m!159141 () Bool)

(assert (=> b!134352 m!159141))

(assert (=> b!134352 m!158405))

(assert (=> b!134352 m!158405))

(declare-fun m!159143 () Bool)

(assert (=> b!134352 m!159143))

(assert (=> b!134354 m!158405))

(assert (=> b!134354 m!158405))

(assert (=> b!134354 m!159143))

(assert (=> d!40963 d!41329))

(declare-fun c!25014 () Bool)

(declare-fun d!41331 () Bool)

(assert (=> d!41331 (= c!25014 (and ((_ is Cons!1706) lt!70035) (= (_1!1303 (h!2311 lt!70035)) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun e!87506 () Option!176)

(assert (=> d!41331 (= (getValueByKey!170 lt!70035 (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) e!87506)))

(declare-fun b!134357 () Bool)

(declare-fun e!87507 () Option!176)

(assert (=> b!134357 (= e!87507 (getValueByKey!170 (t!6152 lt!70035) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!134356 () Bool)

(assert (=> b!134356 (= e!87506 e!87507)))

(declare-fun c!25015 () Bool)

(assert (=> b!134356 (= c!25015 (and ((_ is Cons!1706) lt!70035) (not (= (_1!1303 (h!2311 lt!70035)) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))))

(declare-fun b!134355 () Bool)

(assert (=> b!134355 (= e!87506 (Some!175 (_2!1303 (h!2311 lt!70035))))))

(declare-fun b!134358 () Bool)

(assert (=> b!134358 (= e!87507 None!174)))

(assert (= (and d!41331 c!25014) b!134355))

(assert (= (and d!41331 (not c!25014)) b!134356))

(assert (= (and b!134356 c!25015) b!134357))

(assert (= (and b!134356 (not c!25015)) b!134358))

(declare-fun m!159145 () Bool)

(assert (=> b!134357 m!159145))

(assert (=> d!40963 d!41331))

(declare-fun d!41333 () Bool)

(assert (=> d!41333 (= (getValueByKey!170 lt!70035 (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) (Some!175 (_2!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun lt!70213 () Unit!4132)

(assert (=> d!41333 (= lt!70213 (choose!834 lt!70035 (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun e!87508 () Bool)

(assert (=> d!41333 e!87508))

(declare-fun res!64565 () Bool)

(assert (=> d!41333 (=> (not res!64565) (not e!87508))))

(assert (=> d!41333 (= res!64565 (isStrictlySorted!317 lt!70035))))

(assert (=> d!41333 (= (lemmaContainsTupThenGetReturnValue!88 lt!70035 (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) lt!70213)))

(declare-fun b!134359 () Bool)

(declare-fun res!64566 () Bool)

(assert (=> b!134359 (=> (not res!64566) (not e!87508))))

(assert (=> b!134359 (= res!64566 (containsKey!174 lt!70035 (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!134360 () Bool)

(assert (=> b!134360 (= e!87508 (contains!889 lt!70035 (tuple2!2585 (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(assert (= (and d!41333 res!64565) b!134359))

(assert (= (and b!134359 res!64566) b!134360))

(assert (=> d!41333 m!158399))

(declare-fun m!159147 () Bool)

(assert (=> d!41333 m!159147))

(declare-fun m!159149 () Bool)

(assert (=> d!41333 m!159149))

(declare-fun m!159151 () Bool)

(assert (=> b!134359 m!159151))

(declare-fun m!159153 () Bool)

(assert (=> b!134360 m!159153))

(assert (=> d!40963 d!41333))

(declare-fun b!134361 () Bool)

(declare-fun e!87513 () List!1710)

(assert (=> b!134361 (= e!87513 (insertStrictlySorted!91 (t!6152 (toList!851 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674)))) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!134362 () Bool)

(declare-fun e!87512 () List!1710)

(declare-fun call!14797 () List!1710)

(assert (=> b!134362 (= e!87512 call!14797)))

(declare-fun b!134363 () Bool)

(declare-fun res!64568 () Bool)

(declare-fun e!87510 () Bool)

(assert (=> b!134363 (=> (not res!64568) (not e!87510))))

(declare-fun lt!70214 () List!1710)

(assert (=> b!134363 (= res!64568 (containsKey!174 lt!70214 (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun c!25017 () Bool)

(declare-fun bm!14792 () Bool)

(assert (=> bm!14792 (= call!14797 ($colon$colon!91 e!87513 (ite c!25017 (h!2311 (toList!851 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674)))) (tuple2!2585 (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))))

(declare-fun c!25018 () Bool)

(assert (=> bm!14792 (= c!25018 c!25017)))

(declare-fun c!25016 () Bool)

(declare-fun c!25019 () Bool)

(declare-fun b!134364 () Bool)

(assert (=> b!134364 (= e!87513 (ite c!25016 (t!6152 (toList!851 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674)))) (ite c!25019 (Cons!1706 (h!2311 (toList!851 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674)))) (t!6152 (toList!851 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674))))) Nil!1707)))))

(declare-fun d!41335 () Bool)

(assert (=> d!41335 e!87510))

(declare-fun res!64567 () Bool)

(assert (=> d!41335 (=> (not res!64567) (not e!87510))))

(assert (=> d!41335 (= res!64567 (isStrictlySorted!317 lt!70214))))

(assert (=> d!41335 (= lt!70214 e!87512)))

(assert (=> d!41335 (= c!25017 (and ((_ is Cons!1706) (toList!851 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674)))) (bvslt (_1!1303 (h!2311 (toList!851 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674))))) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(assert (=> d!41335 (isStrictlySorted!317 (toList!851 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674))))))

(assert (=> d!41335 (= (insertStrictlySorted!91 (toList!851 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674))) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) lt!70214)))

(declare-fun b!134365 () Bool)

(declare-fun e!87509 () List!1710)

(assert (=> b!134365 (= e!87512 e!87509)))

(assert (=> b!134365 (= c!25016 (and ((_ is Cons!1706) (toList!851 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674)))) (= (_1!1303 (h!2311 (toList!851 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674))))) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!134366 () Bool)

(declare-fun e!87511 () List!1710)

(declare-fun call!14795 () List!1710)

(assert (=> b!134366 (= e!87511 call!14795)))

(declare-fun b!134367 () Bool)

(declare-fun call!14796 () List!1710)

(assert (=> b!134367 (= e!87509 call!14796)))

(declare-fun b!134368 () Bool)

(assert (=> b!134368 (= e!87510 (contains!889 lt!70214 (tuple2!2585 (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun bm!14793 () Bool)

(assert (=> bm!14793 (= call!14796 call!14797)))

(declare-fun bm!14794 () Bool)

(assert (=> bm!14794 (= call!14795 call!14796)))

(declare-fun b!134369 () Bool)

(assert (=> b!134369 (= c!25019 (and ((_ is Cons!1706) (toList!851 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674)))) (bvsgt (_1!1303 (h!2311 (toList!851 (ite c!24642 call!14672 (ite c!24640 call!14675 call!14674))))) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(assert (=> b!134369 (= e!87509 e!87511)))

(declare-fun b!134370 () Bool)

(assert (=> b!134370 (= e!87511 call!14795)))

(assert (= (and d!41335 c!25017) b!134362))

(assert (= (and d!41335 (not c!25017)) b!134365))

(assert (= (and b!134365 c!25016) b!134367))

(assert (= (and b!134365 (not c!25016)) b!134369))

(assert (= (and b!134369 c!25019) b!134370))

(assert (= (and b!134369 (not c!25019)) b!134366))

(assert (= (or b!134370 b!134366) bm!14794))

(assert (= (or b!134367 bm!14794) bm!14793))

(assert (= (or b!134362 bm!14793) bm!14792))

(assert (= (and bm!14792 c!25018) b!134361))

(assert (= (and bm!14792 (not c!25018)) b!134364))

(assert (= (and d!41335 res!64567) b!134363))

(assert (= (and b!134363 res!64568) b!134368))

(declare-fun m!159155 () Bool)

(assert (=> b!134368 m!159155))

(declare-fun m!159157 () Bool)

(assert (=> b!134363 m!159157))

(declare-fun m!159159 () Bool)

(assert (=> b!134361 m!159159))

(declare-fun m!159161 () Bool)

(assert (=> d!41335 m!159161))

(declare-fun m!159163 () Bool)

(assert (=> d!41335 m!159163))

(declare-fun m!159165 () Bool)

(assert (=> bm!14792 m!159165))

(assert (=> d!40963 d!41335))

(declare-fun d!41337 () Bool)

(declare-fun res!64569 () Bool)

(declare-fun e!87514 () Bool)

(assert (=> d!41337 (=> res!64569 e!87514)))

(assert (=> d!41337 (= res!64569 (or ((_ is Nil!1707) lt!69693) ((_ is Nil!1707) (t!6152 lt!69693))))))

(assert (=> d!41337 (= (isStrictlySorted!317 lt!69693) e!87514)))

(declare-fun b!134371 () Bool)

(declare-fun e!87515 () Bool)

(assert (=> b!134371 (= e!87514 e!87515)))

(declare-fun res!64570 () Bool)

(assert (=> b!134371 (=> (not res!64570) (not e!87515))))

(assert (=> b!134371 (= res!64570 (bvslt (_1!1303 (h!2311 lt!69693)) (_1!1303 (h!2311 (t!6152 lt!69693)))))))

(declare-fun b!134372 () Bool)

(assert (=> b!134372 (= e!87515 (isStrictlySorted!317 (t!6152 lt!69693)))))

(assert (= (and d!41337 (not res!64569)) b!134371))

(assert (= (and b!134371 res!64570) b!134372))

(declare-fun m!159167 () Bool)

(assert (=> b!134372 m!159167))

(assert (=> d!40581 d!41337))

(declare-fun d!41339 () Bool)

(declare-fun res!64571 () Bool)

(declare-fun e!87516 () Bool)

(assert (=> d!41339 (=> res!64571 e!87516)))

(assert (=> d!41339 (= res!64571 (or ((_ is Nil!1707) (toList!851 lt!69179)) ((_ is Nil!1707) (t!6152 (toList!851 lt!69179)))))))

(assert (=> d!41339 (= (isStrictlySorted!317 (toList!851 lt!69179)) e!87516)))

(declare-fun b!134373 () Bool)

(declare-fun e!87517 () Bool)

(assert (=> b!134373 (= e!87516 e!87517)))

(declare-fun res!64572 () Bool)

(assert (=> b!134373 (=> (not res!64572) (not e!87517))))

(assert (=> b!134373 (= res!64572 (bvslt (_1!1303 (h!2311 (toList!851 lt!69179))) (_1!1303 (h!2311 (t!6152 (toList!851 lt!69179))))))))

(declare-fun b!134374 () Bool)

(assert (=> b!134374 (= e!87517 (isStrictlySorted!317 (t!6152 (toList!851 lt!69179))))))

(assert (= (and d!41339 (not res!64571)) b!134373))

(assert (= (and b!134373 res!64572) b!134374))

(declare-fun m!159169 () Bool)

(assert (=> b!134374 m!159169))

(assert (=> d!40581 d!41339))

(declare-fun d!41341 () Bool)

(declare-fun res!64573 () Bool)

(declare-fun e!87518 () Bool)

(assert (=> d!41341 (=> res!64573 e!87518)))

(assert (=> d!41341 (= res!64573 (and ((_ is Cons!1706) lt!69325) (= (_1!1303 (h!2311 lt!69325)) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!41341 (= (containsKey!174 lt!69325 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87518)))

(declare-fun b!134375 () Bool)

(declare-fun e!87519 () Bool)

(assert (=> b!134375 (= e!87518 e!87519)))

(declare-fun res!64574 () Bool)

(assert (=> b!134375 (=> (not res!64574) (not e!87519))))

(assert (=> b!134375 (= res!64574 (and (or (not ((_ is Cons!1706) lt!69325)) (bvsle (_1!1303 (h!2311 lt!69325)) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Cons!1706) lt!69325) (bvslt (_1!1303 (h!2311 lt!69325)) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!134376 () Bool)

(assert (=> b!134376 (= e!87519 (containsKey!174 (t!6152 lt!69325) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!41341 (not res!64573)) b!134375))

(assert (= (and b!134375 res!64574) b!134376))

(declare-fun m!159171 () Bool)

(assert (=> b!134376 m!159171))

(assert (=> b!133881 d!41341))

(declare-fun d!41343 () Bool)

(assert (=> d!41343 (= (apply!116 lt!69674 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69674) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5585 () Bool)

(assert (= bs!5585 d!41343))

(assert (=> bs!5585 m!158871))

(assert (=> bs!5585 m!158871))

(declare-fun m!159173 () Bool)

(assert (=> bs!5585 m!159173))

(assert (=> b!133416 d!41343))

(assert (=> d!40551 d!40425))

(assert (=> b!133436 d!40549))

(assert (=> b!133436 d!40345))

(declare-fun d!41345 () Bool)

(declare-fun e!87520 () Bool)

(assert (=> d!41345 e!87520))

(declare-fun res!64576 () Bool)

(assert (=> d!41345 (=> (not res!64576) (not e!87520))))

(declare-fun lt!70217 () ListLongMap!1671)

(assert (=> d!41345 (= res!64576 (contains!886 lt!70217 (_1!1303 (tuple2!2585 lt!69736 lt!69737))))))

(declare-fun lt!70215 () List!1710)

(assert (=> d!41345 (= lt!70217 (ListLongMap!1672 lt!70215))))

(declare-fun lt!70218 () Unit!4132)

(declare-fun lt!70216 () Unit!4132)

(assert (=> d!41345 (= lt!70218 lt!70216)))

(assert (=> d!41345 (= (getValueByKey!170 lt!70215 (_1!1303 (tuple2!2585 lt!69736 lt!69737))) (Some!175 (_2!1303 (tuple2!2585 lt!69736 lt!69737))))))

(assert (=> d!41345 (= lt!70216 (lemmaContainsTupThenGetReturnValue!88 lt!70215 (_1!1303 (tuple2!2585 lt!69736 lt!69737)) (_2!1303 (tuple2!2585 lt!69736 lt!69737))))))

(assert (=> d!41345 (= lt!70215 (insertStrictlySorted!91 (toList!851 lt!69733) (_1!1303 (tuple2!2585 lt!69736 lt!69737)) (_2!1303 (tuple2!2585 lt!69736 lt!69737))))))

(assert (=> d!41345 (= (+!163 lt!69733 (tuple2!2585 lt!69736 lt!69737)) lt!70217)))

(declare-fun b!134377 () Bool)

(declare-fun res!64575 () Bool)

(assert (=> b!134377 (=> (not res!64575) (not e!87520))))

(assert (=> b!134377 (= res!64575 (= (getValueByKey!170 (toList!851 lt!70217) (_1!1303 (tuple2!2585 lt!69736 lt!69737))) (Some!175 (_2!1303 (tuple2!2585 lt!69736 lt!69737)))))))

(declare-fun b!134378 () Bool)

(assert (=> b!134378 (= e!87520 (contains!889 (toList!851 lt!70217) (tuple2!2585 lt!69736 lt!69737)))))

(assert (= (and d!41345 res!64576) b!134377))

(assert (= (and b!134377 res!64575) b!134378))

(declare-fun m!159175 () Bool)

(assert (=> d!41345 m!159175))

(declare-fun m!159177 () Bool)

(assert (=> d!41345 m!159177))

(declare-fun m!159179 () Bool)

(assert (=> d!41345 m!159179))

(declare-fun m!159181 () Bool)

(assert (=> d!41345 m!159181))

(declare-fun m!159183 () Bool)

(assert (=> b!134377 m!159183))

(declare-fun m!159185 () Bool)

(assert (=> b!134378 m!159185))

(assert (=> b!133500 d!41345))

(declare-fun d!41347 () Bool)

(declare-fun e!87521 () Bool)

(assert (=> d!41347 e!87521))

(declare-fun res!64578 () Bool)

(assert (=> d!41347 (=> (not res!64578) (not e!87521))))

(declare-fun lt!70221 () ListLongMap!1671)

(assert (=> d!41347 (= res!64578 (contains!886 lt!70221 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70219 () List!1710)

(assert (=> d!41347 (= lt!70221 (ListLongMap!1672 lt!70219))))

(declare-fun lt!70222 () Unit!4132)

(declare-fun lt!70220 () Unit!4132)

(assert (=> d!41347 (= lt!70222 lt!70220)))

(assert (=> d!41347 (= (getValueByKey!170 lt!70219 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41347 (= lt!70220 (lemmaContainsTupThenGetReturnValue!88 lt!70219 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41347 (= lt!70219 (insertStrictlySorted!91 (toList!851 call!14721) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41347 (= (+!163 call!14721 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70221)))

(declare-fun b!134379 () Bool)

(declare-fun res!64577 () Bool)

(assert (=> b!134379 (=> (not res!64577) (not e!87521))))

(assert (=> b!134379 (= res!64577 (= (getValueByKey!170 (toList!851 lt!70221) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134380 () Bool)

(assert (=> b!134380 (= e!87521 (contains!889 (toList!851 lt!70221) (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41347 res!64578) b!134379))

(assert (= (and b!134379 res!64577) b!134380))

(declare-fun m!159187 () Bool)

(assert (=> d!41347 m!159187))

(declare-fun m!159189 () Bool)

(assert (=> d!41347 m!159189))

(declare-fun m!159191 () Bool)

(assert (=> d!41347 m!159191))

(declare-fun m!159193 () Bool)

(assert (=> d!41347 m!159193))

(declare-fun m!159195 () Bool)

(assert (=> b!134379 m!159195))

(declare-fun m!159197 () Bool)

(assert (=> b!134380 m!159197))

(assert (=> b!133500 d!41347))

(assert (=> b!133500 d!40497))

(declare-fun d!41349 () Bool)

(assert (=> d!41349 (not (contains!886 (+!163 lt!69733 (tuple2!2585 lt!69736 lt!69737)) lt!69738))))

(declare-fun lt!70223 () Unit!4132)

(assert (=> d!41349 (= lt!70223 (choose!835 lt!69733 lt!69736 lt!69737 lt!69738))))

(declare-fun e!87522 () Bool)

(assert (=> d!41349 e!87522))

(declare-fun res!64579 () Bool)

(assert (=> d!41349 (=> (not res!64579) (not e!87522))))

(assert (=> d!41349 (= res!64579 (not (contains!886 lt!69733 lt!69738)))))

(assert (=> d!41349 (= (addStillNotContains!62 lt!69733 lt!69736 lt!69737 lt!69738) lt!70223)))

(declare-fun b!134381 () Bool)

(assert (=> b!134381 (= e!87522 (not (= lt!69736 lt!69738)))))

(assert (= (and d!41349 res!64579) b!134381))

(assert (=> d!41349 m!157387))

(assert (=> d!41349 m!157387))

(assert (=> d!41349 m!157389))

(declare-fun m!159199 () Bool)

(assert (=> d!41349 m!159199))

(declare-fun m!159201 () Bool)

(assert (=> d!41349 m!159201))

(assert (=> b!133500 d!41349))

(declare-fun d!41351 () Bool)

(declare-fun e!87523 () Bool)

(assert (=> d!41351 e!87523))

(declare-fun res!64580 () Bool)

(assert (=> d!41351 (=> res!64580 e!87523)))

(declare-fun lt!70225 () Bool)

(assert (=> d!41351 (= res!64580 (not lt!70225))))

(declare-fun lt!70227 () Bool)

(assert (=> d!41351 (= lt!70225 lt!70227)))

(declare-fun lt!70224 () Unit!4132)

(declare-fun e!87524 () Unit!4132)

(assert (=> d!41351 (= lt!70224 e!87524)))

(declare-fun c!25020 () Bool)

(assert (=> d!41351 (= c!25020 lt!70227)))

(assert (=> d!41351 (= lt!70227 (containsKey!174 (toList!851 (+!163 lt!69733 (tuple2!2585 lt!69736 lt!69737))) lt!69738))))

(assert (=> d!41351 (= (contains!886 (+!163 lt!69733 (tuple2!2585 lt!69736 lt!69737)) lt!69738) lt!70225)))

(declare-fun b!134382 () Bool)

(declare-fun lt!70226 () Unit!4132)

(assert (=> b!134382 (= e!87524 lt!70226)))

(assert (=> b!134382 (= lt!70226 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69733 (tuple2!2585 lt!69736 lt!69737))) lt!69738))))

(assert (=> b!134382 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69733 (tuple2!2585 lt!69736 lt!69737))) lt!69738))))

(declare-fun b!134383 () Bool)

(declare-fun Unit!4208 () Unit!4132)

(assert (=> b!134383 (= e!87524 Unit!4208)))

(declare-fun b!134384 () Bool)

(assert (=> b!134384 (= e!87523 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69733 (tuple2!2585 lt!69736 lt!69737))) lt!69738)))))

(assert (= (and d!41351 c!25020) b!134382))

(assert (= (and d!41351 (not c!25020)) b!134383))

(assert (= (and d!41351 (not res!64580)) b!134384))

(declare-fun m!159203 () Bool)

(assert (=> d!41351 m!159203))

(declare-fun m!159205 () Bool)

(assert (=> b!134382 m!159205))

(declare-fun m!159207 () Bool)

(assert (=> b!134382 m!159207))

(assert (=> b!134382 m!159207))

(declare-fun m!159209 () Bool)

(assert (=> b!134382 m!159209))

(assert (=> b!134384 m!159207))

(assert (=> b!134384 m!159207))

(assert (=> b!134384 m!159209))

(assert (=> b!133500 d!41351))

(declare-fun d!41353 () Bool)

(declare-fun c!25021 () Bool)

(assert (=> d!41353 (= c!25021 (and ((_ is Cons!1706) (toList!851 lt!69854)) (= (_1!1303 (h!2311 (toList!851 lt!69854))) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))))))

(declare-fun e!87525 () Option!176)

(assert (=> d!41353 (= (getValueByKey!170 (toList!851 lt!69854) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))) e!87525)))

(declare-fun e!87526 () Option!176)

(declare-fun b!134387 () Bool)

(assert (=> b!134387 (= e!87526 (getValueByKey!170 (t!6152 (toList!851 lt!69854)) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))

(declare-fun b!134386 () Bool)

(assert (=> b!134386 (= e!87525 e!87526)))

(declare-fun c!25022 () Bool)

(assert (=> b!134386 (= c!25022 (and ((_ is Cons!1706) (toList!851 lt!69854)) (not (= (_1!1303 (h!2311 (toList!851 lt!69854))) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))))

(declare-fun b!134385 () Bool)

(assert (=> b!134385 (= e!87525 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69854)))))))

(declare-fun b!134388 () Bool)

(assert (=> b!134388 (= e!87526 None!174)))

(assert (= (and d!41353 c!25021) b!134385))

(assert (= (and d!41353 (not c!25021)) b!134386))

(assert (= (and b!134386 c!25022) b!134387))

(assert (= (and b!134386 (not c!25022)) b!134388))

(declare-fun m!159211 () Bool)

(assert (=> b!134387 m!159211))

(assert (=> b!133637 d!41353))

(declare-fun d!41355 () Bool)

(declare-fun res!64581 () Bool)

(declare-fun e!87527 () Bool)

(assert (=> d!41355 (=> res!64581 e!87527)))

(assert (=> d!41355 (= res!64581 (and ((_ is Cons!1706) (toList!851 lt!69301)) (= (_1!1303 (h!2311 (toList!851 lt!69301))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41355 (= (containsKey!174 (toList!851 lt!69301) #b0000000000000000000000000000000000000000000000000000000000000000) e!87527)))

(declare-fun b!134389 () Bool)

(declare-fun e!87528 () Bool)

(assert (=> b!134389 (= e!87527 e!87528)))

(declare-fun res!64582 () Bool)

(assert (=> b!134389 (=> (not res!64582) (not e!87528))))

(assert (=> b!134389 (= res!64582 (and (or (not ((_ is Cons!1706) (toList!851 lt!69301))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69301))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1706) (toList!851 lt!69301)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69301))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134390 () Bool)

(assert (=> b!134390 (= e!87528 (containsKey!174 (t!6152 (toList!851 lt!69301)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41355 (not res!64581)) b!134389))

(assert (= (and b!134389 res!64582) b!134390))

(declare-fun m!159213 () Bool)

(assert (=> b!134390 m!159213))

(assert (=> d!40505 d!41355))

(declare-fun d!41357 () Bool)

(declare-fun res!64583 () Bool)

(declare-fun e!87529 () Bool)

(assert (=> d!41357 (=> res!64583 e!87529)))

(assert (=> d!41357 (= res!64583 (and ((_ is Cons!1706) lt!69200) (= (_1!1303 (h!2311 lt!69200)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41357 (= (containsKey!174 lt!69200 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87529)))

(declare-fun b!134391 () Bool)

(declare-fun e!87530 () Bool)

(assert (=> b!134391 (= e!87529 e!87530)))

(declare-fun res!64584 () Bool)

(assert (=> b!134391 (=> (not res!64584) (not e!87530))))

(assert (=> b!134391 (= res!64584 (and (or (not ((_ is Cons!1706) lt!69200)) (bvsle (_1!1303 (h!2311 lt!69200)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1706) lt!69200) (bvslt (_1!1303 (h!2311 lt!69200)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134392 () Bool)

(assert (=> b!134392 (= e!87530 (containsKey!174 (t!6152 lt!69200) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41357 (not res!64583)) b!134391))

(assert (= (and b!134391 res!64584) b!134392))

(declare-fun m!159215 () Bool)

(assert (=> b!134392 m!159215))

(assert (=> b!133739 d!41357))

(declare-fun d!41359 () Bool)

(declare-fun e!87531 () Bool)

(assert (=> d!41359 e!87531))

(declare-fun res!64585 () Bool)

(assert (=> d!41359 (=> res!64585 e!87531)))

(declare-fun lt!70229 () Bool)

(assert (=> d!41359 (= res!64585 (not lt!70229))))

(declare-fun lt!70231 () Bool)

(assert (=> d!41359 (= lt!70229 lt!70231)))

(declare-fun lt!70228 () Unit!4132)

(declare-fun e!87532 () Unit!4132)

(assert (=> d!41359 (= lt!70228 e!87532)))

(declare-fun c!25023 () Bool)

(assert (=> d!41359 (= c!25023 lt!70231)))

(assert (=> d!41359 (= lt!70231 (containsKey!174 (toList!851 lt!70026) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41359 (= (contains!886 lt!70026 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70229)))

(declare-fun b!134393 () Bool)

(declare-fun lt!70230 () Unit!4132)

(assert (=> b!134393 (= e!87532 lt!70230)))

(assert (=> b!134393 (= lt!70230 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!70026) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!134393 (isDefined!124 (getValueByKey!170 (toList!851 lt!70026) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134394 () Bool)

(declare-fun Unit!4209 () Unit!4132)

(assert (=> b!134394 (= e!87532 Unit!4209)))

(declare-fun b!134395 () Bool)

(assert (=> b!134395 (= e!87531 (isDefined!124 (getValueByKey!170 (toList!851 lt!70026) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41359 c!25023) b!134393))

(assert (= (and d!41359 (not c!25023)) b!134394))

(assert (= (and d!41359 (not res!64585)) b!134395))

(declare-fun m!159217 () Bool)

(assert (=> d!41359 m!159217))

(declare-fun m!159219 () Bool)

(assert (=> b!134393 m!159219))

(assert (=> b!134393 m!158379))

(assert (=> b!134393 m!158379))

(declare-fun m!159221 () Bool)

(assert (=> b!134393 m!159221))

(assert (=> b!134395 m!158379))

(assert (=> b!134395 m!158379))

(assert (=> b!134395 m!159221))

(assert (=> d!40957 d!41359))

(declare-fun d!41361 () Bool)

(declare-fun c!25024 () Bool)

(assert (=> d!41361 (= c!25024 (and ((_ is Cons!1706) lt!70024) (= (_1!1303 (h!2311 lt!70024)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87533 () Option!176)

(assert (=> d!41361 (= (getValueByKey!170 lt!70024 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87533)))

(declare-fun b!134398 () Bool)

(declare-fun e!87534 () Option!176)

(assert (=> b!134398 (= e!87534 (getValueByKey!170 (t!6152 lt!70024) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134397 () Bool)

(assert (=> b!134397 (= e!87533 e!87534)))

(declare-fun c!25025 () Bool)

(assert (=> b!134397 (= c!25025 (and ((_ is Cons!1706) lt!70024) (not (= (_1!1303 (h!2311 lt!70024)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134396 () Bool)

(assert (=> b!134396 (= e!87533 (Some!175 (_2!1303 (h!2311 lt!70024))))))

(declare-fun b!134399 () Bool)

(assert (=> b!134399 (= e!87534 None!174)))

(assert (= (and d!41361 c!25024) b!134396))

(assert (= (and d!41361 (not c!25024)) b!134397))

(assert (= (and b!134397 c!25025) b!134398))

(assert (= (and b!134397 (not c!25025)) b!134399))

(declare-fun m!159223 () Bool)

(assert (=> b!134398 m!159223))

(assert (=> d!40957 d!41361))

(declare-fun d!41363 () Bool)

(assert (=> d!41363 (= (getValueByKey!170 lt!70024 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70232 () Unit!4132)

(assert (=> d!41363 (= lt!70232 (choose!834 lt!70024 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87535 () Bool)

(assert (=> d!41363 e!87535))

(declare-fun res!64586 () Bool)

(assert (=> d!41363 (=> (not res!64586) (not e!87535))))

(assert (=> d!41363 (= res!64586 (isStrictlySorted!317 lt!70024))))

(assert (=> d!41363 (= (lemmaContainsTupThenGetReturnValue!88 lt!70024 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70232)))

(declare-fun b!134400 () Bool)

(declare-fun res!64587 () Bool)

(assert (=> b!134400 (=> (not res!64587) (not e!87535))))

(assert (=> b!134400 (= res!64587 (containsKey!174 lt!70024 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134401 () Bool)

(assert (=> b!134401 (= e!87535 (contains!889 lt!70024 (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41363 res!64586) b!134400))

(assert (= (and b!134400 res!64587) b!134401))

(assert (=> d!41363 m!158373))

(declare-fun m!159225 () Bool)

(assert (=> d!41363 m!159225))

(declare-fun m!159227 () Bool)

(assert (=> d!41363 m!159227))

(declare-fun m!159229 () Bool)

(assert (=> b!134400 m!159229))

(declare-fun m!159231 () Bool)

(assert (=> b!134401 m!159231))

(assert (=> d!40957 d!41363))

(declare-fun e!87540 () List!1710)

(declare-fun b!134402 () Bool)

(assert (=> b!134402 (= e!87540 (insertStrictlySorted!91 (t!6152 (toList!851 (map!1391 newMap!16))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134403 () Bool)

(declare-fun e!87539 () List!1710)

(declare-fun call!14800 () List!1710)

(assert (=> b!134403 (= e!87539 call!14800)))

(declare-fun b!134404 () Bool)

(declare-fun res!64589 () Bool)

(declare-fun e!87537 () Bool)

(assert (=> b!134404 (=> (not res!64589) (not e!87537))))

(declare-fun lt!70233 () List!1710)

(assert (=> b!134404 (= res!64589 (containsKey!174 lt!70233 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14795 () Bool)

(declare-fun c!25027 () Bool)

(assert (=> bm!14795 (= call!14800 ($colon$colon!91 e!87540 (ite c!25027 (h!2311 (toList!851 (map!1391 newMap!16))) (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25028 () Bool)

(assert (=> bm!14795 (= c!25028 c!25027)))

(declare-fun c!25029 () Bool)

(declare-fun c!25026 () Bool)

(declare-fun b!134405 () Bool)

(assert (=> b!134405 (= e!87540 (ite c!25026 (t!6152 (toList!851 (map!1391 newMap!16))) (ite c!25029 (Cons!1706 (h!2311 (toList!851 (map!1391 newMap!16))) (t!6152 (toList!851 (map!1391 newMap!16)))) Nil!1707)))))

(declare-fun d!41365 () Bool)

(assert (=> d!41365 e!87537))

(declare-fun res!64588 () Bool)

(assert (=> d!41365 (=> (not res!64588) (not e!87537))))

(assert (=> d!41365 (= res!64588 (isStrictlySorted!317 lt!70233))))

(assert (=> d!41365 (= lt!70233 e!87539)))

(assert (=> d!41365 (= c!25027 (and ((_ is Cons!1706) (toList!851 (map!1391 newMap!16))) (bvslt (_1!1303 (h!2311 (toList!851 (map!1391 newMap!16)))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41365 (isStrictlySorted!317 (toList!851 (map!1391 newMap!16)))))

(assert (=> d!41365 (= (insertStrictlySorted!91 (toList!851 (map!1391 newMap!16)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70233)))

(declare-fun b!134406 () Bool)

(declare-fun e!87536 () List!1710)

(assert (=> b!134406 (= e!87539 e!87536)))

(assert (=> b!134406 (= c!25026 (and ((_ is Cons!1706) (toList!851 (map!1391 newMap!16))) (= (_1!1303 (h!2311 (toList!851 (map!1391 newMap!16)))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134407 () Bool)

(declare-fun e!87538 () List!1710)

(declare-fun call!14798 () List!1710)

(assert (=> b!134407 (= e!87538 call!14798)))

(declare-fun b!134408 () Bool)

(declare-fun call!14799 () List!1710)

(assert (=> b!134408 (= e!87536 call!14799)))

(declare-fun b!134409 () Bool)

(assert (=> b!134409 (= e!87537 (contains!889 lt!70233 (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14796 () Bool)

(assert (=> bm!14796 (= call!14799 call!14800)))

(declare-fun bm!14797 () Bool)

(assert (=> bm!14797 (= call!14798 call!14799)))

(declare-fun b!134410 () Bool)

(assert (=> b!134410 (= c!25029 (and ((_ is Cons!1706) (toList!851 (map!1391 newMap!16))) (bvsgt (_1!1303 (h!2311 (toList!851 (map!1391 newMap!16)))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!134410 (= e!87536 e!87538)))

(declare-fun b!134411 () Bool)

(assert (=> b!134411 (= e!87538 call!14798)))

(assert (= (and d!41365 c!25027) b!134403))

(assert (= (and d!41365 (not c!25027)) b!134406))

(assert (= (and b!134406 c!25026) b!134408))

(assert (= (and b!134406 (not c!25026)) b!134410))

(assert (= (and b!134410 c!25029) b!134411))

(assert (= (and b!134410 (not c!25029)) b!134407))

(assert (= (or b!134411 b!134407) bm!14797))

(assert (= (or b!134408 bm!14797) bm!14796))

(assert (= (or b!134403 bm!14796) bm!14795))

(assert (= (and bm!14795 c!25028) b!134402))

(assert (= (and bm!14795 (not c!25028)) b!134405))

(assert (= (and d!41365 res!64588) b!134404))

(assert (= (and b!134404 res!64589) b!134409))

(declare-fun m!159233 () Bool)

(assert (=> b!134409 m!159233))

(declare-fun m!159235 () Bool)

(assert (=> b!134404 m!159235))

(declare-fun m!159237 () Bool)

(assert (=> b!134402 m!159237))

(declare-fun m!159239 () Bool)

(assert (=> d!41365 m!159239))

(declare-fun m!159241 () Bool)

(assert (=> d!41365 m!159241))

(declare-fun m!159243 () Bool)

(assert (=> bm!14795 m!159243))

(assert (=> d!40957 d!41365))

(assert (=> b!133689 d!41141))

(assert (=> b!133689 d!40851))

(declare-fun b!134412 () Bool)

(assert (=> b!134412 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> b!134412 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2519 (_values!2847 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun lt!70236 () ListLongMap!1671)

(declare-fun e!87541 () Bool)

(assert (=> b!134412 (= e!87541 (= (apply!116 lt!70236 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!14798 () Bool)

(declare-fun call!14801 () ListLongMap!1671)

(assert (=> bm!14798 (= call!14801 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!134413 () Bool)

(declare-fun e!87544 () ListLongMap!1671)

(assert (=> b!134413 (= e!87544 call!14801)))

(declare-fun b!134414 () Bool)

(declare-fun e!87546 () Bool)

(declare-fun e!87543 () Bool)

(assert (=> b!134414 (= e!87546 e!87543)))

(declare-fun c!25033 () Bool)

(assert (=> b!134414 (= c!25033 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!134415 () Bool)

(assert (=> b!134415 (= e!87543 (isEmpty!414 lt!70236))))

(declare-fun b!134416 () Bool)

(declare-fun e!87547 () Bool)

(assert (=> b!134416 (= e!87547 e!87546)))

(declare-fun c!25030 () Bool)

(declare-fun e!87542 () Bool)

(assert (=> b!134416 (= c!25030 e!87542)))

(declare-fun res!64592 () Bool)

(assert (=> b!134416 (=> (not res!64592) (not e!87542))))

(assert (=> b!134416 (= res!64592 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!134417 () Bool)

(assert (=> b!134417 (= e!87542 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!134417 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!134418 () Bool)

(declare-fun lt!70235 () Unit!4132)

(declare-fun lt!70240 () Unit!4132)

(assert (=> b!134418 (= lt!70235 lt!70240)))

(declare-fun lt!70234 () ListLongMap!1671)

(declare-fun lt!70238 () V!3481)

(declare-fun lt!70237 () (_ BitVec 64))

(declare-fun lt!70239 () (_ BitVec 64))

(assert (=> b!134418 (not (contains!886 (+!163 lt!70234 (tuple2!2585 lt!70237 lt!70238)) lt!70239))))

(assert (=> b!134418 (= lt!70240 (addStillNotContains!62 lt!70234 lt!70237 lt!70238 lt!70239))))

(assert (=> b!134418 (= lt!70239 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134418 (= lt!70238 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134418 (= lt!70237 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!134418 (= lt!70234 call!14801)))

(assert (=> b!134418 (= e!87544 (+!163 call!14801 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134419 () Bool)

(declare-fun e!87545 () ListLongMap!1671)

(assert (=> b!134419 (= e!87545 e!87544)))

(declare-fun c!25031 () Bool)

(assert (=> b!134419 (= c!25031 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134420 () Bool)

(assert (=> b!134420 (= e!87545 (ListLongMap!1672 Nil!1707))))

(declare-fun d!41367 () Bool)

(assert (=> d!41367 e!87547))

(declare-fun res!64591 () Bool)

(assert (=> d!41367 (=> (not res!64591) (not e!87547))))

(assert (=> d!41367 (= res!64591 (not (contains!886 lt!70236 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41367 (= lt!70236 e!87545)))

(declare-fun c!25032 () Bool)

(assert (=> d!41367 (= c!25032 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!41367 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!41367 (= (getCurrentListMapNoExtraKeys!128 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992)))) lt!70236)))

(declare-fun b!134421 () Bool)

(assert (=> b!134421 (= e!87543 (= lt!70236 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (_values!2847 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992))) (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) (zeroValue!2719 (v!3192 (underlying!451 thiss!992))) (minValue!2719 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!134422 () Bool)

(declare-fun res!64593 () Bool)

(assert (=> b!134422 (=> (not res!64593) (not e!87547))))

(assert (=> b!134422 (= res!64593 (not (contains!886 lt!70236 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134423 () Bool)

(assert (=> b!134423 (= e!87546 e!87541)))

(assert (=> b!134423 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun res!64590 () Bool)

(assert (=> b!134423 (= res!64590 (contains!886 lt!70236 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!134423 (=> (not res!64590) (not e!87541))))

(assert (= (and d!41367 c!25032) b!134420))

(assert (= (and d!41367 (not c!25032)) b!134419))

(assert (= (and b!134419 c!25031) b!134418))

(assert (= (and b!134419 (not c!25031)) b!134413))

(assert (= (or b!134418 b!134413) bm!14798))

(assert (= (and d!41367 res!64591) b!134422))

(assert (= (and b!134422 res!64593) b!134416))

(assert (= (and b!134416 res!64592) b!134417))

(assert (= (and b!134416 c!25030) b!134423))

(assert (= (and b!134416 (not c!25030)) b!134414))

(assert (= (and b!134423 res!64590) b!134412))

(assert (= (and b!134414 c!25033) b!134421))

(assert (= (and b!134414 (not c!25033)) b!134415))

(declare-fun b_lambda!5987 () Bool)

(assert (=> (not b_lambda!5987) (not b!134412)))

(assert (=> b!134412 t!6149))

(declare-fun b_and!8305 () Bool)

(assert (= b_and!8301 (and (=> t!6149 result!3973) b_and!8305)))

(assert (=> b!134412 t!6151))

(declare-fun b_and!8307 () Bool)

(assert (= b_and!8303 (and (=> t!6151 result!3977) b_and!8307)))

(declare-fun b_lambda!5989 () Bool)

(assert (=> (not b_lambda!5989) (not b!134418)))

(assert (=> b!134418 t!6149))

(declare-fun b_and!8309 () Bool)

(assert (= b_and!8305 (and (=> t!6149 result!3973) b_and!8309)))

(assert (=> b!134418 t!6151))

(declare-fun b_and!8311 () Bool)

(assert (= b_and!8307 (and (=> t!6151 result!3977) b_and!8311)))

(declare-fun m!159245 () Bool)

(assert (=> b!134417 m!159245))

(assert (=> b!134417 m!159245))

(declare-fun m!159247 () Bool)

(assert (=> b!134417 m!159247))

(declare-fun m!159249 () Bool)

(assert (=> b!134422 m!159249))

(declare-fun m!159251 () Bool)

(assert (=> b!134418 m!159251))

(declare-fun m!159253 () Bool)

(assert (=> b!134418 m!159253))

(assert (=> b!134418 m!159245))

(assert (=> b!134418 m!159251))

(assert (=> b!134418 m!155837))

(declare-fun m!159255 () Bool)

(assert (=> b!134418 m!159255))

(declare-fun m!159257 () Bool)

(assert (=> b!134418 m!159257))

(declare-fun m!159259 () Bool)

(assert (=> b!134418 m!159259))

(assert (=> b!134418 m!155837))

(declare-fun m!159261 () Bool)

(assert (=> b!134418 m!159261))

(assert (=> b!134418 m!159257))

(declare-fun m!159263 () Bool)

(assert (=> b!134421 m!159263))

(assert (=> b!134423 m!159245))

(assert (=> b!134423 m!159245))

(declare-fun m!159265 () Bool)

(assert (=> b!134423 m!159265))

(declare-fun m!159267 () Bool)

(assert (=> b!134415 m!159267))

(assert (=> bm!14798 m!159263))

(declare-fun m!159269 () Bool)

(assert (=> d!41367 m!159269))

(assert (=> d!41367 m!155855))

(assert (=> b!134419 m!159245))

(assert (=> b!134419 m!159245))

(assert (=> b!134419 m!159247))

(assert (=> b!134412 m!159251))

(assert (=> b!134412 m!159245))

(assert (=> b!134412 m!159251))

(assert (=> b!134412 m!155837))

(assert (=> b!134412 m!159255))

(assert (=> b!134412 m!155837))

(assert (=> b!134412 m!159245))

(declare-fun m!159271 () Bool)

(assert (=> b!134412 m!159271))

(assert (=> bm!14717 d!41367))

(declare-fun d!41369 () Bool)

(assert (=> d!41369 (= (get!1482 (getValueByKey!170 (toList!851 lt!69220) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))) (v!3198 (getValueByKey!170 (toList!851 lt!69220) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!40457 d!41369))

(declare-fun d!41371 () Bool)

(declare-fun c!25034 () Bool)

(assert (=> d!41371 (= c!25034 (and ((_ is Cons!1706) (toList!851 lt!69220)) (= (_1!1303 (h!2311 (toList!851 lt!69220))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun e!87548 () Option!176)

(assert (=> d!41371 (= (getValueByKey!170 (toList!851 lt!69220) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) e!87548)))

(declare-fun b!134426 () Bool)

(declare-fun e!87549 () Option!176)

(assert (=> b!134426 (= e!87549 (getValueByKey!170 (t!6152 (toList!851 lt!69220)) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134425 () Bool)

(assert (=> b!134425 (= e!87548 e!87549)))

(declare-fun c!25035 () Bool)

(assert (=> b!134425 (= c!25035 (and ((_ is Cons!1706) (toList!851 lt!69220)) (not (= (_1!1303 (h!2311 (toList!851 lt!69220))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!134424 () Bool)

(assert (=> b!134424 (= e!87548 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69220)))))))

(declare-fun b!134427 () Bool)

(assert (=> b!134427 (= e!87549 None!174)))

(assert (= (and d!41371 c!25034) b!134424))

(assert (= (and d!41371 (not c!25034)) b!134425))

(assert (= (and b!134425 c!25035) b!134426))

(assert (= (and b!134425 (not c!25035)) b!134427))

(assert (=> b!134426 m!156125))

(declare-fun m!159273 () Bool)

(assert (=> b!134426 m!159273))

(assert (=> d!40457 d!41371))

(declare-fun d!41373 () Bool)

(assert (=> d!41373 (= (isEmpty!414 lt!69842) (isEmpty!415 (toList!851 lt!69842)))))

(declare-fun bs!5586 () Bool)

(assert (= bs!5586 d!41373))

(declare-fun m!159275 () Bool)

(assert (=> bs!5586 m!159275))

(assert (=> b!133625 d!41373))

(declare-fun e!87554 () List!1710)

(declare-fun b!134428 () Bool)

(assert (=> b!134428 (= e!87554 (insertStrictlySorted!91 (t!6152 (t!6152 (toList!851 lt!69179))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!134429 () Bool)

(declare-fun e!87553 () List!1710)

(declare-fun call!14804 () List!1710)

(assert (=> b!134429 (= e!87553 call!14804)))

(declare-fun b!134430 () Bool)

(declare-fun res!64595 () Bool)

(declare-fun e!87551 () Bool)

(assert (=> b!134430 (=> (not res!64595) (not e!87551))))

(declare-fun lt!70241 () List!1710)

(assert (=> b!134430 (= res!64595 (containsKey!174 lt!70241 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun bm!14799 () Bool)

(declare-fun c!25037 () Bool)

(assert (=> bm!14799 (= call!14804 ($colon$colon!91 e!87554 (ite c!25037 (h!2311 (t!6152 (toList!851 lt!69179))) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun c!25038 () Bool)

(assert (=> bm!14799 (= c!25038 c!25037)))

(declare-fun b!134431 () Bool)

(declare-fun c!25039 () Bool)

(declare-fun c!25036 () Bool)

(assert (=> b!134431 (= e!87554 (ite c!25036 (t!6152 (t!6152 (toList!851 lt!69179))) (ite c!25039 (Cons!1706 (h!2311 (t!6152 (toList!851 lt!69179))) (t!6152 (t!6152 (toList!851 lt!69179)))) Nil!1707)))))

(declare-fun d!41375 () Bool)

(assert (=> d!41375 e!87551))

(declare-fun res!64594 () Bool)

(assert (=> d!41375 (=> (not res!64594) (not e!87551))))

(assert (=> d!41375 (= res!64594 (isStrictlySorted!317 lt!70241))))

(assert (=> d!41375 (= lt!70241 e!87553)))

(assert (=> d!41375 (= c!25037 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69179))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 lt!69179)))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!41375 (isStrictlySorted!317 (t!6152 (toList!851 lt!69179)))))

(assert (=> d!41375 (= (insertStrictlySorted!91 (t!6152 (toList!851 lt!69179)) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!70241)))

(declare-fun b!134432 () Bool)

(declare-fun e!87550 () List!1710)

(assert (=> b!134432 (= e!87553 e!87550)))

(assert (=> b!134432 (= c!25036 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69179))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69179)))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!134433 () Bool)

(declare-fun e!87552 () List!1710)

(declare-fun call!14802 () List!1710)

(assert (=> b!134433 (= e!87552 call!14802)))

(declare-fun b!134434 () Bool)

(declare-fun call!14803 () List!1710)

(assert (=> b!134434 (= e!87550 call!14803)))

(declare-fun b!134435 () Bool)

(assert (=> b!134435 (= e!87551 (contains!889 lt!70241 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun bm!14800 () Bool)

(assert (=> bm!14800 (= call!14803 call!14804)))

(declare-fun bm!14801 () Bool)

(assert (=> bm!14801 (= call!14802 call!14803)))

(declare-fun b!134436 () Bool)

(assert (=> b!134436 (= c!25039 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69179))) (bvsgt (_1!1303 (h!2311 (t!6152 (toList!851 lt!69179)))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> b!134436 (= e!87550 e!87552)))

(declare-fun b!134437 () Bool)

(assert (=> b!134437 (= e!87552 call!14802)))

(assert (= (and d!41375 c!25037) b!134429))

(assert (= (and d!41375 (not c!25037)) b!134432))

(assert (= (and b!134432 c!25036) b!134434))

(assert (= (and b!134432 (not c!25036)) b!134436))

(assert (= (and b!134436 c!25039) b!134437))

(assert (= (and b!134436 (not c!25039)) b!134433))

(assert (= (or b!134437 b!134433) bm!14801))

(assert (= (or b!134434 bm!14801) bm!14800))

(assert (= (or b!134429 bm!14800) bm!14799))

(assert (= (and bm!14799 c!25038) b!134428))

(assert (= (and bm!14799 (not c!25038)) b!134431))

(assert (= (and d!41375 res!64594) b!134430))

(assert (= (and b!134430 res!64595) b!134435))

(declare-fun m!159277 () Bool)

(assert (=> b!134435 m!159277))

(declare-fun m!159279 () Bool)

(assert (=> b!134430 m!159279))

(declare-fun m!159281 () Bool)

(assert (=> b!134428 m!159281))

(declare-fun m!159283 () Bool)

(assert (=> d!41375 m!159283))

(assert (=> d!41375 m!159169))

(declare-fun m!159285 () Bool)

(assert (=> bm!14799 m!159285))

(assert (=> b!133452 d!41375))

(declare-fun d!41377 () Bool)

(declare-fun res!64596 () Bool)

(declare-fun e!87555 () Bool)

(assert (=> d!41377 (=> res!64596 e!87555)))

(assert (=> d!41377 (= res!64596 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69186))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!41377 (= (containsKey!174 (t!6152 (toList!851 lt!69186)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!87555)))

(declare-fun b!134438 () Bool)

(declare-fun e!87556 () Bool)

(assert (=> b!134438 (= e!87555 e!87556)))

(declare-fun res!64597 () Bool)

(assert (=> b!134438 (=> (not res!64597) (not e!87556))))

(assert (=> b!134438 (= res!64597 (and (or (not ((_ is Cons!1706) (t!6152 (toList!851 lt!69186)))) (bvsle (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1706) (t!6152 (toList!851 lt!69186))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!134439 () Bool)

(assert (=> b!134439 (= e!87556 (containsKey!174 (t!6152 (t!6152 (toList!851 lt!69186))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!41377 (not res!64596)) b!134438))

(assert (= (and b!134438 res!64597) b!134439))

(assert (=> b!134439 m!156043))

(declare-fun m!159287 () Bool)

(assert (=> b!134439 m!159287))

(assert (=> b!133241 d!41377))

(assert (=> b!133552 d!41197))

(assert (=> b!133552 d!41199))

(assert (=> d!40835 d!40353))

(assert (=> d!40835 d!40365))

(assert (=> d!40835 d!40361))

(declare-fun c!25040 () Bool)

(declare-fun d!41379 () Bool)

(assert (=> d!41379 (= c!25040 (and ((_ is Cons!1706) (toList!851 lt!69582)) (= (_1!1303 (h!2311 (toList!851 lt!69582))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87557 () Option!176)

(assert (=> d!41379 (= (getValueByKey!170 (toList!851 lt!69582) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87557)))

(declare-fun b!134442 () Bool)

(declare-fun e!87558 () Option!176)

(assert (=> b!134442 (= e!87558 (getValueByKey!170 (t!6152 (toList!851 lt!69582)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134441 () Bool)

(assert (=> b!134441 (= e!87557 e!87558)))

(declare-fun c!25041 () Bool)

(assert (=> b!134441 (= c!25041 (and ((_ is Cons!1706) (toList!851 lt!69582)) (not (= (_1!1303 (h!2311 (toList!851 lt!69582))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134440 () Bool)

(assert (=> b!134440 (= e!87557 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69582)))))))

(declare-fun b!134443 () Bool)

(assert (=> b!134443 (= e!87558 None!174)))

(assert (= (and d!41379 c!25040) b!134440))

(assert (= (and d!41379 (not c!25040)) b!134441))

(assert (= (and b!134441 c!25041) b!134442))

(assert (= (and b!134441 (not c!25041)) b!134443))

(declare-fun m!159289 () Bool)

(assert (=> b!134442 m!159289))

(assert (=> b!133260 d!41379))

(declare-fun d!41381 () Bool)

(assert (=> d!41381 (= (get!1482 (getValueByKey!170 (toList!851 lt!69484) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3198 (getValueByKey!170 (toList!851 lt!69484) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40949 d!41381))

(assert (=> d!40949 d!41223))

(declare-fun d!41383 () Bool)

(declare-fun res!64598 () Bool)

(declare-fun e!87559 () Bool)

(assert (=> d!41383 (=> res!64598 e!87559)))

(assert (=> d!41383 (= res!64598 (and ((_ is Cons!1706) (toList!851 lt!69301)) (= (_1!1303 (h!2311 (toList!851 lt!69301))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41383 (= (containsKey!174 (toList!851 lt!69301) #b1000000000000000000000000000000000000000000000000000000000000000) e!87559)))

(declare-fun b!134444 () Bool)

(declare-fun e!87560 () Bool)

(assert (=> b!134444 (= e!87559 e!87560)))

(declare-fun res!64599 () Bool)

(assert (=> b!134444 (=> (not res!64599) (not e!87560))))

(assert (=> b!134444 (= res!64599 (and (or (not ((_ is Cons!1706) (toList!851 lt!69301))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69301))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1706) (toList!851 lt!69301)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69301))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134445 () Bool)

(assert (=> b!134445 (= e!87560 (containsKey!174 (t!6152 (toList!851 lt!69301)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41383 (not res!64598)) b!134444))

(assert (= (and b!134444 res!64599) b!134445))

(declare-fun m!159291 () Bool)

(assert (=> b!134445 m!159291))

(assert (=> d!40461 d!41383))

(declare-fun d!41385 () Bool)

(declare-fun c!25042 () Bool)

(assert (=> d!41385 (= c!25042 (and ((_ is Cons!1706) (toList!851 lt!69850)) (= (_1!1303 (h!2311 (toList!851 lt!69850))) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))))))

(declare-fun e!87561 () Option!176)

(assert (=> d!41385 (= (getValueByKey!170 (toList!851 lt!69850) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) e!87561)))

(declare-fun e!87562 () Option!176)

(declare-fun b!134448 () Bool)

(assert (=> b!134448 (= e!87562 (getValueByKey!170 (t!6152 (toList!851 lt!69850)) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134447 () Bool)

(assert (=> b!134447 (= e!87561 e!87562)))

(declare-fun c!25043 () Bool)

(assert (=> b!134447 (= c!25043 (and ((_ is Cons!1706) (toList!851 lt!69850)) (not (= (_1!1303 (h!2311 (toList!851 lt!69850))) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!134446 () Bool)

(assert (=> b!134446 (= e!87561 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69850)))))))

(declare-fun b!134449 () Bool)

(assert (=> b!134449 (= e!87562 None!174)))

(assert (= (and d!41385 c!25042) b!134446))

(assert (= (and d!41385 (not c!25042)) b!134447))

(assert (= (and b!134447 c!25043) b!134448))

(assert (= (and b!134447 (not c!25043)) b!134449))

(declare-fun m!159293 () Bool)

(assert (=> b!134448 m!159293))

(assert (=> b!133635 d!41385))

(assert (=> b!133569 d!41221))

(assert (=> b!133569 d!41223))

(declare-fun d!41387 () Bool)

(declare-fun lt!70242 () Bool)

(assert (=> d!41387 (= lt!70242 (select (content!133 (toList!851 lt!69721)) (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(declare-fun e!87564 () Bool)

(assert (=> d!41387 (= lt!70242 e!87564)))

(declare-fun res!64600 () Bool)

(assert (=> d!41387 (=> (not res!64600) (not e!87564))))

(assert (=> d!41387 (= res!64600 ((_ is Cons!1706) (toList!851 lt!69721)))))

(assert (=> d!41387 (= (contains!889 (toList!851 lt!69721) (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!70242)))

(declare-fun b!134450 () Bool)

(declare-fun e!87563 () Bool)

(assert (=> b!134450 (= e!87564 e!87563)))

(declare-fun res!64601 () Bool)

(assert (=> b!134450 (=> res!64601 e!87563)))

(assert (=> b!134450 (= res!64601 (= (h!2311 (toList!851 lt!69721)) (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(declare-fun b!134451 () Bool)

(assert (=> b!134451 (= e!87563 (contains!889 (t!6152 (toList!851 lt!69721)) (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(assert (= (and d!41387 res!64600) b!134450))

(assert (= (and b!134450 (not res!64601)) b!134451))

(declare-fun m!159295 () Bool)

(assert (=> d!41387 m!159295))

(declare-fun m!159297 () Bool)

(assert (=> d!41387 m!159297))

(declare-fun m!159299 () Bool)

(assert (=> b!134451 m!159299))

(assert (=> b!133487 d!41387))

(declare-fun d!41389 () Bool)

(declare-fun c!25044 () Bool)

(assert (=> d!41389 (= c!25044 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69335))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69335)))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87565 () Option!176)

(assert (=> d!41389 (= (getValueByKey!170 (t!6152 (toList!851 lt!69335)) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87565)))

(declare-fun e!87566 () Option!176)

(declare-fun b!134454 () Bool)

(assert (=> b!134454 (= e!87566 (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69335))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!134453 () Bool)

(assert (=> b!134453 (= e!87565 e!87566)))

(declare-fun c!25045 () Bool)

(assert (=> b!134453 (= c!25045 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69335))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69335)))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!134452 () Bool)

(assert (=> b!134452 (= e!87565 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 lt!69335))))))))

(declare-fun b!134455 () Bool)

(assert (=> b!134455 (= e!87566 None!174)))

(assert (= (and d!41389 c!25044) b!134452))

(assert (= (and d!41389 (not c!25044)) b!134453))

(assert (= (and b!134453 c!25045) b!134454))

(assert (= (and b!134453 (not c!25045)) b!134455))

(declare-fun m!159301 () Bool)

(assert (=> b!134454 m!159301))

(assert (=> b!133555 d!41389))

(declare-fun d!41391 () Bool)

(assert (=> d!41391 (= (+!163 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!519 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(assert (=> d!41391 true))

(declare-fun _$3!46 () Unit!4132)

(assert (=> d!41391 (= (choose!836 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)) _$3!46)))

(declare-fun bs!5587 () Bool)

(assert (= bs!5587 d!41391))

(assert (=> bs!5587 m!156589))

(assert (=> bs!5587 m!156041))

(assert (=> bs!5587 m!156579))

(assert (=> bs!5587 m!156563))

(assert (=> bs!5587 m!156041))

(assert (=> bs!5587 m!156267))

(assert (=> d!40557 d!41391))

(assert (=> d!40557 d!40425))

(declare-fun d!41393 () Bool)

(declare-fun res!64602 () Bool)

(declare-fun e!87567 () Bool)

(assert (=> d!41393 (=> res!64602 e!87567)))

(assert (=> d!41393 (= res!64602 (and ((_ is Cons!1706) (t!6152 (toList!851 call!14583))) (= (_1!1303 (h!2311 (t!6152 (toList!851 call!14583)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(assert (=> d!41393 (= (containsKey!174 (t!6152 (toList!851 call!14583)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!87567)))

(declare-fun b!134456 () Bool)

(declare-fun e!87568 () Bool)

(assert (=> b!134456 (= e!87567 e!87568)))

(declare-fun res!64603 () Bool)

(assert (=> b!134456 (=> (not res!64603) (not e!87568))))

(assert (=> b!134456 (= res!64603 (and (or (not ((_ is Cons!1706) (t!6152 (toList!851 call!14583)))) (bvsle (_1!1303 (h!2311 (t!6152 (toList!851 call!14583)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) ((_ is Cons!1706) (t!6152 (toList!851 call!14583))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 call!14583)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun b!134457 () Bool)

(assert (=> b!134457 (= e!87568 (containsKey!174 (t!6152 (t!6152 (toList!851 call!14583))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!41393 (not res!64602)) b!134456))

(assert (= (and b!134456 res!64603) b!134457))

(assert (=> b!134457 m!155841))

(declare-fun m!159303 () Bool)

(assert (=> b!134457 m!159303))

(assert (=> b!133832 d!41393))

(declare-fun d!41395 () Bool)

(declare-fun lt!70243 () Bool)

(assert (=> d!41395 (= lt!70243 (select (content!133 (toList!851 lt!69905)) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87570 () Bool)

(assert (=> d!41395 (= lt!70243 e!87570)))

(declare-fun res!64604 () Bool)

(assert (=> d!41395 (=> (not res!64604) (not e!87570))))

(assert (=> d!41395 (= res!64604 ((_ is Cons!1706) (toList!851 lt!69905)))))

(assert (=> d!41395 (= (contains!889 (toList!851 lt!69905) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70243)))

(declare-fun b!134458 () Bool)

(declare-fun e!87569 () Bool)

(assert (=> b!134458 (= e!87570 e!87569)))

(declare-fun res!64605 () Bool)

(assert (=> b!134458 (=> res!64605 e!87569)))

(assert (=> b!134458 (= res!64605 (= (h!2311 (toList!851 lt!69905)) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134459 () Bool)

(assert (=> b!134459 (= e!87569 (contains!889 (t!6152 (toList!851 lt!69905)) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41395 res!64604) b!134458))

(assert (= (and b!134458 (not res!64605)) b!134459))

(declare-fun m!159305 () Bool)

(assert (=> d!41395 m!159305))

(declare-fun m!159307 () Bool)

(assert (=> d!41395 m!159307))

(declare-fun m!159309 () Bool)

(assert (=> b!134459 m!159309))

(assert (=> b!133752 d!41395))

(assert (=> d!40891 d!40889))

(declare-fun d!41397 () Bool)

(assert (=> d!41397 (= (getValueByKey!170 lt!69325 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!41397 true))

(declare-fun _$22!485 () Unit!4132)

(assert (=> d!41397 (= (choose!834 lt!69325 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) _$22!485)))

(declare-fun bs!5588 () Bool)

(assert (= bs!5588 d!41397))

(assert (=> bs!5588 m!156405))

(assert (=> d!40891 d!41397))

(declare-fun d!41399 () Bool)

(declare-fun res!64606 () Bool)

(declare-fun e!87571 () Bool)

(assert (=> d!41399 (=> res!64606 e!87571)))

(assert (=> d!41399 (= res!64606 (or ((_ is Nil!1707) lt!69325) ((_ is Nil!1707) (t!6152 lt!69325))))))

(assert (=> d!41399 (= (isStrictlySorted!317 lt!69325) e!87571)))

(declare-fun b!134460 () Bool)

(declare-fun e!87572 () Bool)

(assert (=> b!134460 (= e!87571 e!87572)))

(declare-fun res!64607 () Bool)

(assert (=> b!134460 (=> (not res!64607) (not e!87572))))

(assert (=> b!134460 (= res!64607 (bvslt (_1!1303 (h!2311 lt!69325)) (_1!1303 (h!2311 (t!6152 lt!69325)))))))

(declare-fun b!134461 () Bool)

(assert (=> b!134461 (= e!87572 (isStrictlySorted!317 (t!6152 lt!69325)))))

(assert (= (and d!41399 (not res!64606)) b!134460))

(assert (= (and b!134460 res!64607) b!134461))

(declare-fun m!159311 () Bool)

(assert (=> b!134461 m!159311))

(assert (=> d!40891 d!41399))

(declare-fun d!41401 () Bool)

(declare-fun res!64608 () Bool)

(declare-fun e!87573 () Bool)

(assert (=> d!41401 (=> res!64608 e!87573)))

(assert (=> d!41401 (= res!64608 (and ((_ is Cons!1706) (toList!851 lt!69172)) (= (_1!1303 (h!2311 (toList!851 lt!69172))) lt!69177)))))

(assert (=> d!41401 (= (containsKey!174 (toList!851 lt!69172) lt!69177) e!87573)))

(declare-fun b!134462 () Bool)

(declare-fun e!87574 () Bool)

(assert (=> b!134462 (= e!87573 e!87574)))

(declare-fun res!64609 () Bool)

(assert (=> b!134462 (=> (not res!64609) (not e!87574))))

(assert (=> b!134462 (= res!64609 (and (or (not ((_ is Cons!1706) (toList!851 lt!69172))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69172))) lt!69177)) ((_ is Cons!1706) (toList!851 lt!69172)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69172))) lt!69177)))))

(declare-fun b!134463 () Bool)

(assert (=> b!134463 (= e!87574 (containsKey!174 (t!6152 (toList!851 lt!69172)) lt!69177))))

(assert (= (and d!41401 (not res!64608)) b!134462))

(assert (= (and b!134462 res!64609) b!134463))

(declare-fun m!159313 () Bool)

(assert (=> b!134463 m!159313))

(assert (=> d!40837 d!41401))

(declare-fun d!41403 () Bool)

(declare-fun c!25046 () Bool)

(assert (=> d!41403 (= c!25046 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69172))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69172)))) lt!69177)))))

(declare-fun e!87575 () Option!176)

(assert (=> d!41403 (= (getValueByKey!170 (t!6152 (toList!851 lt!69172)) lt!69177) e!87575)))

(declare-fun b!134466 () Bool)

(declare-fun e!87576 () Option!176)

(assert (=> b!134466 (= e!87576 (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69172))) lt!69177))))

(declare-fun b!134465 () Bool)

(assert (=> b!134465 (= e!87575 e!87576)))

(declare-fun c!25047 () Bool)

(assert (=> b!134465 (= c!25047 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69172))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69172)))) lt!69177))))))

(declare-fun b!134464 () Bool)

(assert (=> b!134464 (= e!87575 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 lt!69172))))))))

(declare-fun b!134467 () Bool)

(assert (=> b!134467 (= e!87576 None!174)))

(assert (= (and d!41403 c!25046) b!134464))

(assert (= (and d!41403 (not c!25046)) b!134465))

(assert (= (and b!134465 c!25047) b!134466))

(assert (= (and b!134465 (not c!25047)) b!134467))

(declare-fun m!159315 () Bool)

(assert (=> b!134466 m!159315))

(assert (=> b!133295 d!41403))

(declare-fun d!41405 () Bool)

(declare-fun res!64610 () Bool)

(declare-fun e!87577 () Bool)

(assert (=> d!41405 (=> res!64610 e!87577)))

(assert (=> d!41405 (= res!64610 (and ((_ is Cons!1706) lt!69464) (= (_1!1303 (h!2311 lt!69464)) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!41405 (= (containsKey!174 lt!69464 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!87577)))

(declare-fun b!134468 () Bool)

(declare-fun e!87578 () Bool)

(assert (=> b!134468 (= e!87577 e!87578)))

(declare-fun res!64611 () Bool)

(assert (=> b!134468 (=> (not res!64611) (not e!87578))))

(assert (=> b!134468 (= res!64611 (and (or (not ((_ is Cons!1706) lt!69464)) (bvsle (_1!1303 (h!2311 lt!69464)) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1706) lt!69464) (bvslt (_1!1303 (h!2311 lt!69464)) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134469 () Bool)

(assert (=> b!134469 (= e!87578 (containsKey!174 (t!6152 lt!69464) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41405 (not res!64610)) b!134468))

(assert (= (and b!134468 res!64611) b!134469))

(declare-fun m!159317 () Bool)

(assert (=> b!134469 m!159317))

(assert (=> b!133720 d!41405))

(declare-fun c!25048 () Bool)

(declare-fun d!41407 () Bool)

(assert (=> d!41407 (= c!25048 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69320))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69320)))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87579 () Option!176)

(assert (=> d!41407 (= (getValueByKey!170 (t!6152 (toList!851 lt!69320)) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87579)))

(declare-fun e!87580 () Option!176)

(declare-fun b!134472 () Bool)

(assert (=> b!134472 (= e!87580 (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69320))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!134471 () Bool)

(assert (=> b!134471 (= e!87579 e!87580)))

(declare-fun c!25049 () Bool)

(assert (=> b!134471 (= c!25049 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69320))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69320)))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!134470 () Bool)

(assert (=> b!134470 (= e!87579 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 lt!69320))))))))

(declare-fun b!134473 () Bool)

(assert (=> b!134473 (= e!87580 None!174)))

(assert (= (and d!41407 c!25048) b!134470))

(assert (= (and d!41407 (not c!25048)) b!134471))

(assert (= (and b!134471 c!25049) b!134472))

(assert (= (and b!134471 (not c!25049)) b!134473))

(declare-fun m!159319 () Bool)

(assert (=> b!134472 m!159319))

(assert (=> b!133174 d!41407))

(declare-fun d!41409 () Bool)

(declare-fun c!25050 () Bool)

(assert (=> d!41409 (= c!25050 (and ((_ is Cons!1706) (toList!851 lt!69563)) (= (_1!1303 (h!2311 (toList!851 lt!69563))) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun e!87581 () Option!176)

(assert (=> d!41409 (= (getValueByKey!170 (toList!851 lt!69563) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) e!87581)))

(declare-fun e!87582 () Option!176)

(declare-fun b!134476 () Bool)

(assert (=> b!134476 (= e!87582 (getValueByKey!170 (t!6152 (toList!851 lt!69563)) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!134475 () Bool)

(assert (=> b!134475 (= e!87581 e!87582)))

(declare-fun c!25051 () Bool)

(assert (=> b!134475 (= c!25051 (and ((_ is Cons!1706) (toList!851 lt!69563)) (not (= (_1!1303 (h!2311 (toList!851 lt!69563))) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))))

(declare-fun b!134474 () Bool)

(assert (=> b!134474 (= e!87581 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69563)))))))

(declare-fun b!134477 () Bool)

(assert (=> b!134477 (= e!87582 None!174)))

(assert (= (and d!41409 c!25050) b!134474))

(assert (= (and d!41409 (not c!25050)) b!134475))

(assert (= (and b!134475 c!25051) b!134476))

(assert (= (and b!134475 (not c!25051)) b!134477))

(declare-fun m!159321 () Bool)

(assert (=> b!134476 m!159321))

(assert (=> b!133242 d!41409))

(assert (=> d!40817 d!40815))

(declare-fun d!41411 () Bool)

(assert (=> d!41411 (= (getValueByKey!170 lt!69200 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41411 true))

(declare-fun _$22!486 () Unit!4132)

(assert (=> d!41411 (= (choose!834 lt!69200 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) _$22!486)))

(declare-fun bs!5589 () Bool)

(assert (= bs!5589 d!41411))

(assert (=> bs!5589 m!156107))

(assert (=> d!40817 d!41411))

(declare-fun d!41413 () Bool)

(declare-fun res!64612 () Bool)

(declare-fun e!87583 () Bool)

(assert (=> d!41413 (=> res!64612 e!87583)))

(assert (=> d!41413 (= res!64612 (or ((_ is Nil!1707) lt!69200) ((_ is Nil!1707) (t!6152 lt!69200))))))

(assert (=> d!41413 (= (isStrictlySorted!317 lt!69200) e!87583)))

(declare-fun b!134478 () Bool)

(declare-fun e!87584 () Bool)

(assert (=> b!134478 (= e!87583 e!87584)))

(declare-fun res!64613 () Bool)

(assert (=> b!134478 (=> (not res!64613) (not e!87584))))

(assert (=> b!134478 (= res!64613 (bvslt (_1!1303 (h!2311 lt!69200)) (_1!1303 (h!2311 (t!6152 lt!69200)))))))

(declare-fun b!134479 () Bool)

(assert (=> b!134479 (= e!87584 (isStrictlySorted!317 (t!6152 lt!69200)))))

(assert (= (and d!41413 (not res!64612)) b!134478))

(assert (= (and b!134478 res!64613) b!134479))

(declare-fun m!159323 () Bool)

(assert (=> b!134479 m!159323))

(assert (=> d!40817 d!41413))

(declare-fun d!41415 () Bool)

(assert (=> d!41415 (= (validKeyInArray!0 (select (arr!2248 lt!69447) #b00000000000000000000000000000000)) (and (not (= (select (arr!2248 lt!69447) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2248 lt!69447) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133367 d!41415))

(declare-fun d!41417 () Bool)

(declare-fun e!87585 () Bool)

(assert (=> d!41417 e!87585))

(declare-fun res!64614 () Bool)

(assert (=> d!41417 (=> res!64614 e!87585)))

(declare-fun lt!70245 () Bool)

(assert (=> d!41417 (= res!64614 (not lt!70245))))

(declare-fun lt!70247 () Bool)

(assert (=> d!41417 (= lt!70245 lt!70247)))

(declare-fun lt!70244 () Unit!4132)

(declare-fun e!87586 () Unit!4132)

(assert (=> d!41417 (= lt!70244 e!87586)))

(declare-fun c!25052 () Bool)

(assert (=> d!41417 (= c!25052 lt!70247)))

(assert (=> d!41417 (= lt!70247 (containsKey!174 (toList!851 lt!70059) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41417 (= (contains!886 lt!70059 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70245)))

(declare-fun b!134480 () Bool)

(declare-fun lt!70246 () Unit!4132)

(assert (=> b!134480 (= e!87586 lt!70246)))

(assert (=> b!134480 (= lt!70246 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!70059) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134480 (isDefined!124 (getValueByKey!170 (toList!851 lt!70059) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134481 () Bool)

(declare-fun Unit!4210 () Unit!4132)

(assert (=> b!134481 (= e!87586 Unit!4210)))

(declare-fun b!134482 () Bool)

(assert (=> b!134482 (= e!87585 (isDefined!124 (getValueByKey!170 (toList!851 lt!70059) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41417 c!25052) b!134480))

(assert (= (and d!41417 (not c!25052)) b!134481))

(assert (= (and d!41417 (not res!64614)) b!134482))

(declare-fun m!159325 () Bool)

(assert (=> d!41417 m!159325))

(declare-fun m!159327 () Bool)

(assert (=> b!134480 m!159327))

(assert (=> b!134480 m!158961))

(assert (=> b!134480 m!158961))

(declare-fun m!159329 () Bool)

(assert (=> b!134480 m!159329))

(assert (=> b!134482 m!158961))

(assert (=> b!134482 m!158961))

(assert (=> b!134482 m!159329))

(assert (=> bm!14774 d!41417))

(declare-fun d!41419 () Bool)

(declare-fun e!87587 () Bool)

(assert (=> d!41419 e!87587))

(declare-fun res!64615 () Bool)

(assert (=> d!41419 (=> res!64615 e!87587)))

(declare-fun lt!70249 () Bool)

(assert (=> d!41419 (= res!64615 (not lt!70249))))

(declare-fun lt!70251 () Bool)

(assert (=> d!41419 (= lt!70249 lt!70251)))

(declare-fun lt!70248 () Unit!4132)

(declare-fun e!87588 () Unit!4132)

(assert (=> d!41419 (= lt!70248 e!87588)))

(declare-fun c!25053 () Bool)

(assert (=> d!41419 (= c!25053 lt!70251)))

(assert (=> d!41419 (= lt!70251 (containsKey!174 (toList!851 lt!69801) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))

(assert (=> d!41419 (= (contains!886 lt!69801 (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))) lt!70249)))

(declare-fun b!134483 () Bool)

(declare-fun lt!70250 () Unit!4132)

(assert (=> b!134483 (= e!87588 lt!70250)))

(assert (=> b!134483 (= lt!70250 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69801) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))

(assert (=> b!134483 (isDefined!124 (getValueByKey!170 (toList!851 lt!69801) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))

(declare-fun b!134484 () Bool)

(declare-fun Unit!4211 () Unit!4132)

(assert (=> b!134484 (= e!87588 Unit!4211)))

(declare-fun b!134485 () Bool)

(assert (=> b!134485 (= e!87587 (isDefined!124 (getValueByKey!170 (toList!851 lt!69801) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))))))

(assert (= (and d!41419 c!25053) b!134483))

(assert (= (and d!41419 (not c!25053)) b!134484))

(assert (= (and d!41419 (not res!64615)) b!134485))

(declare-fun m!159331 () Bool)

(assert (=> d!41419 m!159331))

(declare-fun m!159333 () Bool)

(assert (=> b!134483 m!159333))

(assert (=> b!134483 m!157597))

(assert (=> b!134483 m!157597))

(declare-fun m!159335 () Bool)

(assert (=> b!134483 m!159335))

(assert (=> b!134485 m!157597))

(assert (=> b!134485 m!157597))

(assert (=> b!134485 m!159335))

(assert (=> d!40693 d!41419))

(declare-fun d!41421 () Bool)

(declare-fun c!25054 () Bool)

(assert (=> d!41421 (= c!25054 (and ((_ is Cons!1706) lt!69799) (= (_1!1303 (h!2311 lt!69799)) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))))))

(declare-fun e!87589 () Option!176)

(assert (=> d!41421 (= (getValueByKey!170 lt!69799 (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))) e!87589)))

(declare-fun b!134488 () Bool)

(declare-fun e!87590 () Option!176)

(assert (=> b!134488 (= e!87590 (getValueByKey!170 (t!6152 lt!69799) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))

(declare-fun b!134487 () Bool)

(assert (=> b!134487 (= e!87589 e!87590)))

(declare-fun c!25055 () Bool)

(assert (=> b!134487 (= c!25055 (and ((_ is Cons!1706) lt!69799) (not (= (_1!1303 (h!2311 lt!69799)) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))))

(declare-fun b!134486 () Bool)

(assert (=> b!134486 (= e!87589 (Some!175 (_2!1303 (h!2311 lt!69799))))))

(declare-fun b!134489 () Bool)

(assert (=> b!134489 (= e!87590 None!174)))

(assert (= (and d!41421 c!25054) b!134486))

(assert (= (and d!41421 (not c!25054)) b!134487))

(assert (= (and b!134487 c!25055) b!134488))

(assert (= (and b!134487 (not c!25055)) b!134489))

(declare-fun m!159337 () Bool)

(assert (=> b!134488 m!159337))

(assert (=> d!40693 d!41421))

(declare-fun d!41423 () Bool)

(assert (=> d!41423 (= (getValueByKey!170 lt!69799 (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))

(declare-fun lt!70252 () Unit!4132)

(assert (=> d!41423 (= lt!70252 (choose!834 lt!69799 (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))

(declare-fun e!87591 () Bool)

(assert (=> d!41423 e!87591))

(declare-fun res!64616 () Bool)

(assert (=> d!41423 (=> (not res!64616) (not e!87591))))

(assert (=> d!41423 (= res!64616 (isStrictlySorted!317 lt!69799))))

(assert (=> d!41423 (= (lemmaContainsTupThenGetReturnValue!88 lt!69799 (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))) lt!70252)))

(declare-fun b!134490 () Bool)

(declare-fun res!64617 () Bool)

(assert (=> b!134490 (=> (not res!64617) (not e!87591))))

(assert (=> b!134490 (= res!64617 (containsKey!174 lt!69799 (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))

(declare-fun b!134491 () Bool)

(assert (=> b!134491 (= e!87591 (contains!889 lt!69799 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))))))

(assert (= (and d!41423 res!64616) b!134490))

(assert (= (and b!134490 res!64617) b!134491))

(assert (=> d!41423 m!157591))

(declare-fun m!159339 () Bool)

(assert (=> d!41423 m!159339))

(declare-fun m!159341 () Bool)

(assert (=> d!41423 m!159341))

(declare-fun m!159343 () Bool)

(assert (=> b!134490 m!159343))

(declare-fun m!159345 () Bool)

(assert (=> b!134491 m!159345))

(assert (=> d!40693 d!41423))

(declare-fun e!87596 () List!1710)

(declare-fun b!134492 () Bool)

(assert (=> b!134492 (= e!87596 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69243)) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))

(declare-fun b!134493 () Bool)

(declare-fun e!87595 () List!1710)

(declare-fun call!14807 () List!1710)

(assert (=> b!134493 (= e!87595 call!14807)))

(declare-fun b!134494 () Bool)

(declare-fun res!64619 () Bool)

(declare-fun e!87593 () Bool)

(assert (=> b!134494 (=> (not res!64619) (not e!87593))))

(declare-fun lt!70253 () List!1710)

(assert (=> b!134494 (= res!64619 (containsKey!174 lt!70253 (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))

(declare-fun c!25057 () Bool)

(declare-fun bm!14802 () Bool)

(assert (=> bm!14802 (= call!14807 ($colon$colon!91 e!87596 (ite c!25057 (h!2311 (toList!851 lt!69243)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))))

(declare-fun c!25058 () Bool)

(assert (=> bm!14802 (= c!25058 c!25057)))

(declare-fun c!25056 () Bool)

(declare-fun c!25059 () Bool)

(declare-fun b!134495 () Bool)

(assert (=> b!134495 (= e!87596 (ite c!25056 (t!6152 (toList!851 lt!69243)) (ite c!25059 (Cons!1706 (h!2311 (toList!851 lt!69243)) (t!6152 (toList!851 lt!69243))) Nil!1707)))))

(declare-fun d!41425 () Bool)

(assert (=> d!41425 e!87593))

(declare-fun res!64618 () Bool)

(assert (=> d!41425 (=> (not res!64618) (not e!87593))))

(assert (=> d!41425 (= res!64618 (isStrictlySorted!317 lt!70253))))

(assert (=> d!41425 (= lt!70253 e!87595)))

(assert (=> d!41425 (= c!25057 (and ((_ is Cons!1706) (toList!851 lt!69243)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69243))) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))))))

(assert (=> d!41425 (isStrictlySorted!317 (toList!851 lt!69243))))

(assert (=> d!41425 (= (insertStrictlySorted!91 (toList!851 lt!69243) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))) lt!70253)))

(declare-fun b!134496 () Bool)

(declare-fun e!87592 () List!1710)

(assert (=> b!134496 (= e!87595 e!87592)))

(assert (=> b!134496 (= c!25056 (and ((_ is Cons!1706) (toList!851 lt!69243)) (= (_1!1303 (h!2311 (toList!851 lt!69243))) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))))))

(declare-fun b!134497 () Bool)

(declare-fun e!87594 () List!1710)

(declare-fun call!14805 () List!1710)

(assert (=> b!134497 (= e!87594 call!14805)))

(declare-fun b!134498 () Bool)

(declare-fun call!14806 () List!1710)

(assert (=> b!134498 (= e!87592 call!14806)))

(declare-fun b!134499 () Bool)

(assert (=> b!134499 (= e!87593 (contains!889 lt!70253 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))))))

(declare-fun bm!14803 () Bool)

(assert (=> bm!14803 (= call!14806 call!14807)))

(declare-fun bm!14804 () Bool)

(assert (=> bm!14804 (= call!14805 call!14806)))

(declare-fun b!134500 () Bool)

(assert (=> b!134500 (= c!25059 (and ((_ is Cons!1706) (toList!851 lt!69243)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69243))) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))))))

(assert (=> b!134500 (= e!87592 e!87594)))

(declare-fun b!134501 () Bool)

(assert (=> b!134501 (= e!87594 call!14805)))

(assert (= (and d!41425 c!25057) b!134493))

(assert (= (and d!41425 (not c!25057)) b!134496))

(assert (= (and b!134496 c!25056) b!134498))

(assert (= (and b!134496 (not c!25056)) b!134500))

(assert (= (and b!134500 c!25059) b!134501))

(assert (= (and b!134500 (not c!25059)) b!134497))

(assert (= (or b!134501 b!134497) bm!14804))

(assert (= (or b!134498 bm!14804) bm!14803))

(assert (= (or b!134493 bm!14803) bm!14802))

(assert (= (and bm!14802 c!25058) b!134492))

(assert (= (and bm!14802 (not c!25058)) b!134495))

(assert (= (and d!41425 res!64618) b!134494))

(assert (= (and b!134494 res!64619) b!134499))

(declare-fun m!159347 () Bool)

(assert (=> b!134499 m!159347))

(declare-fun m!159349 () Bool)

(assert (=> b!134494 m!159349))

(declare-fun m!159351 () Bool)

(assert (=> b!134492 m!159351))

(declare-fun m!159353 () Bool)

(assert (=> d!41425 m!159353))

(declare-fun m!159355 () Bool)

(assert (=> d!41425 m!159355))

(declare-fun m!159357 () Bool)

(assert (=> bm!14802 m!159357))

(assert (=> d!40693 d!41425))

(declare-fun d!41427 () Bool)

(declare-fun res!64620 () Bool)

(declare-fun e!87597 () Bool)

(assert (=> d!41427 (=> res!64620 e!87597)))

(assert (=> d!41427 (= res!64620 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))))))))

(assert (=> d!41427 (= (containsKey!174 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))) e!87597)))

(declare-fun b!134502 () Bool)

(declare-fun e!87598 () Bool)

(assert (=> b!134502 (= e!87597 e!87598)))

(declare-fun res!64621 () Bool)

(assert (=> b!134502 (=> (not res!64621) (not e!87598))))

(assert (=> b!134502 (= res!64621 (and (or (not ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (bvsle (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))))) ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvslt (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))))))))

(declare-fun b!134503 () Bool)

(assert (=> b!134503 (= e!87598 (containsKey!174 (t!6152 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))

(assert (= (and d!41427 (not res!64620)) b!134502))

(assert (= (and b!134502 res!64621) b!134503))

(assert (=> b!134503 m!156567))

(declare-fun m!159359 () Bool)

(assert (=> b!134503 m!159359))

(assert (=> d!40559 d!41427))

(declare-fun d!41429 () Bool)

(declare-fun e!87599 () Bool)

(assert (=> d!41429 e!87599))

(declare-fun res!64622 () Bool)

(assert (=> d!41429 (=> res!64622 e!87599)))

(declare-fun lt!70255 () Bool)

(assert (=> d!41429 (= res!64622 (not lt!70255))))

(declare-fun lt!70257 () Bool)

(assert (=> d!41429 (= lt!70255 lt!70257)))

(declare-fun lt!70254 () Unit!4132)

(declare-fun e!87600 () Unit!4132)

(assert (=> d!41429 (= lt!70254 e!87600)))

(declare-fun c!25060 () Bool)

(assert (=> d!41429 (= c!25060 lt!70257)))

(assert (=> d!41429 (= lt!70257 (containsKey!174 (toList!851 lt!70008) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))

(assert (=> d!41429 (= (contains!886 lt!70008 (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))) lt!70255)))

(declare-fun b!134504 () Bool)

(declare-fun lt!70256 () Unit!4132)

(assert (=> b!134504 (= e!87600 lt!70256)))

(assert (=> b!134504 (= lt!70256 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!70008) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))

(assert (=> b!134504 (isDefined!124 (getValueByKey!170 (toList!851 lt!70008) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))

(declare-fun b!134505 () Bool)

(declare-fun Unit!4212 () Unit!4132)

(assert (=> b!134505 (= e!87600 Unit!4212)))

(declare-fun b!134506 () Bool)

(assert (=> b!134506 (= e!87599 (isDefined!124 (getValueByKey!170 (toList!851 lt!70008) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))))))

(assert (= (and d!41429 c!25060) b!134504))

(assert (= (and d!41429 (not c!25060)) b!134505))

(assert (= (and d!41429 (not res!64622)) b!134506))

(declare-fun m!159361 () Bool)

(assert (=> d!41429 m!159361))

(declare-fun m!159363 () Bool)

(assert (=> b!134504 m!159363))

(assert (=> b!134504 m!158303))

(assert (=> b!134504 m!158303))

(declare-fun m!159365 () Bool)

(assert (=> b!134504 m!159365))

(assert (=> b!134506 m!158303))

(assert (=> b!134506 m!158303))

(assert (=> b!134506 m!159365))

(assert (=> d!40925 d!41429))

(declare-fun d!41431 () Bool)

(declare-fun c!25061 () Bool)

(assert (=> d!41431 (= c!25061 (and ((_ is Cons!1706) lt!70006) (= (_1!1303 (h!2311 lt!70006)) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))))))

(declare-fun e!87601 () Option!176)

(assert (=> d!41431 (= (getValueByKey!170 lt!70006 (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))) e!87601)))

(declare-fun e!87602 () Option!176)

(declare-fun b!134509 () Bool)

(assert (=> b!134509 (= e!87602 (getValueByKey!170 (t!6152 lt!70006) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))

(declare-fun b!134508 () Bool)

(assert (=> b!134508 (= e!87601 e!87602)))

(declare-fun c!25062 () Bool)

(assert (=> b!134508 (= c!25062 (and ((_ is Cons!1706) lt!70006) (not (= (_1!1303 (h!2311 lt!70006)) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))))

(declare-fun b!134507 () Bool)

(assert (=> b!134507 (= e!87601 (Some!175 (_2!1303 (h!2311 lt!70006))))))

(declare-fun b!134510 () Bool)

(assert (=> b!134510 (= e!87602 None!174)))

(assert (= (and d!41431 c!25061) b!134507))

(assert (= (and d!41431 (not c!25061)) b!134508))

(assert (= (and b!134508 c!25062) b!134509))

(assert (= (and b!134508 (not c!25062)) b!134510))

(declare-fun m!159367 () Bool)

(assert (=> b!134509 m!159367))

(assert (=> d!40925 d!41431))

(declare-fun d!41433 () Bool)

(assert (=> d!41433 (= (getValueByKey!170 lt!70006 (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))

(declare-fun lt!70258 () Unit!4132)

(assert (=> d!41433 (= lt!70258 (choose!834 lt!70006 (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))

(declare-fun e!87603 () Bool)

(assert (=> d!41433 e!87603))

(declare-fun res!64623 () Bool)

(assert (=> d!41433 (=> (not res!64623) (not e!87603))))

(assert (=> d!41433 (= res!64623 (isStrictlySorted!317 lt!70006))))

(assert (=> d!41433 (= (lemmaContainsTupThenGetReturnValue!88 lt!70006 (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))) lt!70258)))

(declare-fun b!134511 () Bool)

(declare-fun res!64624 () Bool)

(assert (=> b!134511 (=> (not res!64624) (not e!87603))))

(assert (=> b!134511 (= res!64624 (containsKey!174 lt!70006 (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))

(declare-fun b!134512 () Bool)

(assert (=> b!134512 (= e!87603 (contains!889 lt!70006 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))))))

(assert (= (and d!41433 res!64623) b!134511))

(assert (= (and b!134511 res!64624) b!134512))

(assert (=> d!41433 m!158297))

(declare-fun m!159369 () Bool)

(assert (=> d!41433 m!159369))

(declare-fun m!159371 () Bool)

(assert (=> d!41433 m!159371))

(declare-fun m!159373 () Bool)

(assert (=> b!134511 m!159373))

(declare-fun m!159375 () Bool)

(assert (=> b!134512 m!159375))

(assert (=> d!40925 d!41433))

(declare-fun e!87608 () List!1710)

(declare-fun b!134513 () Bool)

(assert (=> b!134513 (= e!87608 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69348)) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))

(declare-fun b!134514 () Bool)

(declare-fun e!87607 () List!1710)

(declare-fun call!14810 () List!1710)

(assert (=> b!134514 (= e!87607 call!14810)))

(declare-fun b!134515 () Bool)

(declare-fun res!64626 () Bool)

(declare-fun e!87605 () Bool)

(assert (=> b!134515 (=> (not res!64626) (not e!87605))))

(declare-fun lt!70259 () List!1710)

(assert (=> b!134515 (= res!64626 (containsKey!174 lt!70259 (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))

(declare-fun bm!14805 () Bool)

(declare-fun c!25064 () Bool)

(assert (=> bm!14805 (= call!14810 ($colon$colon!91 e!87608 (ite c!25064 (h!2311 (toList!851 lt!69348)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))))

(declare-fun c!25065 () Bool)

(assert (=> bm!14805 (= c!25065 c!25064)))

(declare-fun c!25066 () Bool)

(declare-fun b!134516 () Bool)

(declare-fun c!25063 () Bool)

(assert (=> b!134516 (= e!87608 (ite c!25063 (t!6152 (toList!851 lt!69348)) (ite c!25066 (Cons!1706 (h!2311 (toList!851 lt!69348)) (t!6152 (toList!851 lt!69348))) Nil!1707)))))

(declare-fun d!41435 () Bool)

(assert (=> d!41435 e!87605))

(declare-fun res!64625 () Bool)

(assert (=> d!41435 (=> (not res!64625) (not e!87605))))

(assert (=> d!41435 (= res!64625 (isStrictlySorted!317 lt!70259))))

(assert (=> d!41435 (= lt!70259 e!87607)))

(assert (=> d!41435 (= c!25064 (and ((_ is Cons!1706) (toList!851 lt!69348)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69348))) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))))))

(assert (=> d!41435 (isStrictlySorted!317 (toList!851 lt!69348))))

(assert (=> d!41435 (= (insertStrictlySorted!91 (toList!851 lt!69348) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))) lt!70259)))

(declare-fun b!134517 () Bool)

(declare-fun e!87604 () List!1710)

(assert (=> b!134517 (= e!87607 e!87604)))

(assert (=> b!134517 (= c!25063 (and ((_ is Cons!1706) (toList!851 lt!69348)) (= (_1!1303 (h!2311 (toList!851 lt!69348))) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))))))

(declare-fun b!134518 () Bool)

(declare-fun e!87606 () List!1710)

(declare-fun call!14808 () List!1710)

(assert (=> b!134518 (= e!87606 call!14808)))

(declare-fun b!134519 () Bool)

(declare-fun call!14809 () List!1710)

(assert (=> b!134519 (= e!87604 call!14809)))

(declare-fun b!134520 () Bool)

(assert (=> b!134520 (= e!87605 (contains!889 lt!70259 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))))))

(declare-fun bm!14806 () Bool)

(assert (=> bm!14806 (= call!14809 call!14810)))

(declare-fun bm!14807 () Bool)

(assert (=> bm!14807 (= call!14808 call!14809)))

(declare-fun b!134521 () Bool)

(assert (=> b!134521 (= c!25066 (and ((_ is Cons!1706) (toList!851 lt!69348)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69348))) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))))))

(assert (=> b!134521 (= e!87604 e!87606)))

(declare-fun b!134522 () Bool)

(assert (=> b!134522 (= e!87606 call!14808)))

(assert (= (and d!41435 c!25064) b!134514))

(assert (= (and d!41435 (not c!25064)) b!134517))

(assert (= (and b!134517 c!25063) b!134519))

(assert (= (and b!134517 (not c!25063)) b!134521))

(assert (= (and b!134521 c!25066) b!134522))

(assert (= (and b!134521 (not c!25066)) b!134518))

(assert (= (or b!134522 b!134518) bm!14807))

(assert (= (or b!134519 bm!14807) bm!14806))

(assert (= (or b!134514 bm!14806) bm!14805))

(assert (= (and bm!14805 c!25065) b!134513))

(assert (= (and bm!14805 (not c!25065)) b!134516))

(assert (= (and d!41435 res!64625) b!134515))

(assert (= (and b!134515 res!64626) b!134520))

(declare-fun m!159377 () Bool)

(assert (=> b!134520 m!159377))

(declare-fun m!159379 () Bool)

(assert (=> b!134515 m!159379))

(declare-fun m!159381 () Bool)

(assert (=> b!134513 m!159381))

(declare-fun m!159383 () Bool)

(assert (=> d!41435 m!159383))

(declare-fun m!159385 () Bool)

(assert (=> d!41435 m!159385))

(declare-fun m!159387 () Bool)

(assert (=> bm!14805 m!159387))

(assert (=> d!40925 d!41435))

(declare-fun d!41437 () Bool)

(assert (=> d!41437 (= (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) lt!69246)) (not (isEmpty!413 (getValueByKey!170 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) lt!69246))))))

(declare-fun bs!5590 () Bool)

(assert (= bs!5590 d!41437))

(assert (=> bs!5590 m!157665))

(declare-fun m!159389 () Bool)

(assert (=> bs!5590 m!159389))

(assert (=> b!133602 d!41437))

(declare-fun d!41439 () Bool)

(declare-fun c!25067 () Bool)

(assert (=> d!41439 (= c!25067 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))) lt!69246)))))

(declare-fun e!87609 () Option!176)

(assert (=> d!41439 (= (getValueByKey!170 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) lt!69246) e!87609)))

(declare-fun b!134525 () Bool)

(declare-fun e!87610 () Option!176)

(assert (=> b!134525 (= e!87610 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))) lt!69246))))

(declare-fun b!134524 () Bool)

(assert (=> b!134524 (= e!87609 e!87610)))

(declare-fun c!25068 () Bool)

(assert (=> b!134524 (= c!25068 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))) lt!69246))))))

(declare-fun b!134523 () Bool)

(assert (=> b!134523 (= e!87609 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))))))))

(declare-fun b!134526 () Bool)

(assert (=> b!134526 (= e!87610 None!174)))

(assert (= (and d!41439 c!25067) b!134523))

(assert (= (and d!41439 (not c!25067)) b!134524))

(assert (= (and b!134524 c!25068) b!134525))

(assert (= (and b!134524 (not c!25068)) b!134526))

(declare-fun m!159391 () Bool)

(assert (=> b!134525 m!159391))

(assert (=> b!133602 d!41439))

(declare-fun d!41441 () Bool)

(assert (=> d!41441 (isDefined!124 (getValueByKey!170 (toList!851 lt!69250) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70260 () Unit!4132)

(assert (=> d!41441 (= lt!70260 (choose!826 (toList!851 lt!69250) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87611 () Bool)

(assert (=> d!41441 e!87611))

(declare-fun res!64627 () Bool)

(assert (=> d!41441 (=> (not res!64627) (not e!87611))))

(assert (=> d!41441 (= res!64627 (isStrictlySorted!317 (toList!851 lt!69250)))))

(assert (=> d!41441 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69250) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70260)))

(declare-fun b!134527 () Bool)

(assert (=> b!134527 (= e!87611 (containsKey!174 (toList!851 lt!69250) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41441 res!64627) b!134527))

(assert (=> d!41441 m!157275))

(assert (=> d!41441 m!157275))

(assert (=> d!41441 m!157277))

(declare-fun m!159393 () Bool)

(assert (=> d!41441 m!159393))

(declare-fun m!159395 () Bool)

(assert (=> d!41441 m!159395))

(assert (=> b!134527 m!157271))

(assert (=> b!133474 d!41441))

(declare-fun d!41443 () Bool)

(assert (=> d!41443 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69250) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69250) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5591 () Bool)

(assert (= bs!5591 d!41443))

(assert (=> bs!5591 m!157275))

(declare-fun m!159397 () Bool)

(assert (=> bs!5591 m!159397))

(assert (=> b!133474 d!41443))

(declare-fun d!41445 () Bool)

(declare-fun c!25069 () Bool)

(assert (=> d!41445 (= c!25069 (and ((_ is Cons!1706) (toList!851 lt!69250)) (= (_1!1303 (h!2311 (toList!851 lt!69250))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87612 () Option!176)

(assert (=> d!41445 (= (getValueByKey!170 (toList!851 lt!69250) #b1000000000000000000000000000000000000000000000000000000000000000) e!87612)))

(declare-fun b!134530 () Bool)

(declare-fun e!87613 () Option!176)

(assert (=> b!134530 (= e!87613 (getValueByKey!170 (t!6152 (toList!851 lt!69250)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134529 () Bool)

(assert (=> b!134529 (= e!87612 e!87613)))

(declare-fun c!25070 () Bool)

(assert (=> b!134529 (= c!25070 (and ((_ is Cons!1706) (toList!851 lt!69250)) (not (= (_1!1303 (h!2311 (toList!851 lt!69250))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134528 () Bool)

(assert (=> b!134528 (= e!87612 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69250)))))))

(declare-fun b!134531 () Bool)

(assert (=> b!134531 (= e!87613 None!174)))

(assert (= (and d!41445 c!25069) b!134528))

(assert (= (and d!41445 (not c!25069)) b!134529))

(assert (= (and b!134529 c!25070) b!134530))

(assert (= (and b!134529 (not c!25070)) b!134531))

(declare-fun m!159399 () Bool)

(assert (=> b!134530 m!159399))

(assert (=> b!133474 d!41445))

(declare-fun d!41447 () Bool)

(assert (=> d!41447 (isDefined!124 (getValueByKey!170 (toList!851 lt!69301) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!70261 () Unit!4132)

(assert (=> d!41447 (= lt!70261 (choose!826 (toList!851 lt!69301) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!87614 () Bool)

(assert (=> d!41447 e!87614))

(declare-fun res!64628 () Bool)

(assert (=> d!41447 (=> (not res!64628) (not e!87614))))

(assert (=> d!41447 (= res!64628 (isStrictlySorted!317 (toList!851 lt!69301)))))

(assert (=> d!41447 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69301) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!70261)))

(declare-fun b!134532 () Bool)

(assert (=> b!134532 (= e!87614 (containsKey!174 (toList!851 lt!69301) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!41447 res!64628) b!134532))

(assert (=> d!41447 m!156043))

(assert (=> d!41447 m!158111))

(assert (=> d!41447 m!158111))

(assert (=> d!41447 m!158239))

(assert (=> d!41447 m!156043))

(declare-fun m!159401 () Bool)

(assert (=> d!41447 m!159401))

(declare-fun m!159403 () Bool)

(assert (=> d!41447 m!159403))

(assert (=> b!134532 m!156043))

(assert (=> b!134532 m!158235))

(assert (=> b!133893 d!41447))

(declare-fun d!41449 () Bool)

(assert (=> d!41449 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69301) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69301) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5592 () Bool)

(assert (= bs!5592 d!41449))

(assert (=> bs!5592 m!158111))

(declare-fun m!159405 () Bool)

(assert (=> bs!5592 m!159405))

(assert (=> b!133893 d!41449))

(assert (=> b!133893 d!41023))

(declare-fun d!41451 () Bool)

(declare-fun c!25071 () Bool)

(assert (=> d!41451 (= c!25071 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69186))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!87615 () Option!176)

(assert (=> d!41451 (= (getValueByKey!170 (t!6152 (toList!851 lt!69186)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!87615)))

(declare-fun b!134535 () Bool)

(declare-fun e!87616 () Option!176)

(assert (=> b!134535 (= e!87616 (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69186))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!134534 () Bool)

(assert (=> b!134534 (= e!87615 e!87616)))

(declare-fun c!25072 () Bool)

(assert (=> b!134534 (= c!25072 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69186))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!134533 () Bool)

(assert (=> b!134533 (= e!87615 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 lt!69186))))))))

(declare-fun b!134536 () Bool)

(assert (=> b!134536 (= e!87616 None!174)))

(assert (= (and d!41451 c!25071) b!134533))

(assert (= (and d!41451 (not c!25071)) b!134534))

(assert (= (and b!134534 c!25072) b!134535))

(assert (= (and b!134534 (not c!25072)) b!134536))

(assert (=> b!134535 m!156043))

(declare-fun m!159407 () Bool)

(assert (=> b!134535 m!159407))

(assert (=> b!133178 d!41451))

(declare-fun d!41453 () Bool)

(declare-fun e!87617 () Bool)

(assert (=> d!41453 e!87617))

(declare-fun res!64629 () Bool)

(assert (=> d!41453 (=> res!64629 e!87617)))

(declare-fun lt!70263 () Bool)

(assert (=> d!41453 (= res!64629 (not lt!70263))))

(declare-fun lt!70265 () Bool)

(assert (=> d!41453 (= lt!70263 lt!70265)))

(declare-fun lt!70262 () Unit!4132)

(declare-fun e!87618 () Unit!4132)

(assert (=> d!41453 (= lt!70262 e!87618)))

(declare-fun c!25073 () Bool)

(assert (=> d!41453 (= c!25073 lt!70265)))

(assert (=> d!41453 (= lt!70265 (containsKey!174 (toList!851 lt!69609) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41453 (= (contains!886 lt!69609 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70263)))

(declare-fun b!134537 () Bool)

(declare-fun lt!70264 () Unit!4132)

(assert (=> b!134537 (= e!87618 lt!70264)))

(assert (=> b!134537 (= lt!70264 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69609) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134537 (isDefined!124 (getValueByKey!170 (toList!851 lt!69609) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134538 () Bool)

(declare-fun Unit!4213 () Unit!4132)

(assert (=> b!134538 (= e!87618 Unit!4213)))

(declare-fun b!134539 () Bool)

(assert (=> b!134539 (= e!87617 (isDefined!124 (getValueByKey!170 (toList!851 lt!69609) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41453 c!25073) b!134537))

(assert (= (and d!41453 (not c!25073)) b!134538))

(assert (= (and d!41453 (not res!64629)) b!134539))

(declare-fun m!159409 () Bool)

(assert (=> d!41453 m!159409))

(declare-fun m!159411 () Bool)

(assert (=> b!134537 m!159411))

(declare-fun m!159413 () Bool)

(assert (=> b!134537 m!159413))

(assert (=> b!134537 m!159413))

(declare-fun m!159415 () Bool)

(assert (=> b!134537 m!159415))

(assert (=> b!134539 m!159413))

(assert (=> b!134539 m!159413))

(assert (=> b!134539 m!159415))

(assert (=> d!40537 d!41453))

(assert (=> d!40537 d!40425))

(declare-fun d!41455 () Bool)

(declare-fun e!87619 () Bool)

(assert (=> d!41455 e!87619))

(declare-fun res!64630 () Bool)

(assert (=> d!41455 (=> res!64630 e!87619)))

(declare-fun lt!70267 () Bool)

(assert (=> d!41455 (= res!64630 (not lt!70267))))

(declare-fun lt!70269 () Bool)

(assert (=> d!41455 (= lt!70267 lt!70269)))

(declare-fun lt!70266 () Unit!4132)

(declare-fun e!87620 () Unit!4132)

(assert (=> d!41455 (= lt!70266 e!87620)))

(declare-fun c!25074 () Bool)

(assert (=> d!41455 (= c!25074 lt!70269)))

(assert (=> d!41455 (= lt!70269 (containsKey!174 (toList!851 lt!69234) lt!69238))))

(assert (=> d!41455 (= (contains!886 lt!69234 lt!69238) lt!70267)))

(declare-fun b!134540 () Bool)

(declare-fun lt!70268 () Unit!4132)

(assert (=> b!134540 (= e!87620 lt!70268)))

(assert (=> b!134540 (= lt!70268 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69234) lt!69238))))

(assert (=> b!134540 (isDefined!124 (getValueByKey!170 (toList!851 lt!69234) lt!69238))))

(declare-fun b!134541 () Bool)

(declare-fun Unit!4214 () Unit!4132)

(assert (=> b!134541 (= e!87620 Unit!4214)))

(declare-fun b!134542 () Bool)

(assert (=> b!134542 (= e!87619 (isDefined!124 (getValueByKey!170 (toList!851 lt!69234) lt!69238)))))

(assert (= (and d!41455 c!25074) b!134540))

(assert (= (and d!41455 (not c!25074)) b!134541))

(assert (= (and d!41455 (not res!64630)) b!134542))

(declare-fun m!159417 () Bool)

(assert (=> d!41455 m!159417))

(declare-fun m!159419 () Bool)

(assert (=> b!134540 m!159419))

(assert (=> b!134540 m!157669))

(assert (=> b!134540 m!157669))

(declare-fun m!159421 () Bool)

(assert (=> b!134540 m!159421))

(assert (=> b!134542 m!157669))

(assert (=> b!134542 m!157669))

(assert (=> b!134542 m!159421))

(assert (=> d!40703 d!41455))

(assert (=> d!40703 d!40715))

(assert (=> d!40703 d!40719))

(assert (=> d!40703 d!40701))

(declare-fun d!41457 () Bool)

(assert (=> d!41457 (= (apply!116 (+!163 lt!69234 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))) lt!69238) (apply!116 lt!69234 lt!69238))))

(assert (=> d!41457 true))

(declare-fun _$34!981 () Unit!4132)

(assert (=> d!41457 (= (choose!828 lt!69234 lt!69235 (zeroValue!2719 newMap!16) lt!69238) _$34!981)))

(declare-fun bs!5593 () Bool)

(assert (= bs!5593 d!41457))

(assert (=> bs!5593 m!156229))

(assert (=> bs!5593 m!156229))

(assert (=> bs!5593 m!156237))

(assert (=> bs!5593 m!156239))

(assert (=> d!40703 d!41457))

(declare-fun d!41459 () Bool)

(assert (=> d!41459 (= (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69213 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))) lt!69224)) (v!3198 (getValueByKey!170 (toList!851 (+!163 lt!69213 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))) lt!69224)))))

(assert (=> d!40745 d!41459))

(declare-fun c!25075 () Bool)

(declare-fun d!41461 () Bool)

(assert (=> d!41461 (= c!25075 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69213 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69213 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))) lt!69224)))))

(declare-fun e!87621 () Option!176)

(assert (=> d!41461 (= (getValueByKey!170 (toList!851 (+!163 lt!69213 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))) lt!69224) e!87621)))

(declare-fun b!134545 () Bool)

(declare-fun e!87622 () Option!176)

(assert (=> b!134545 (= e!87622 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69213 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))) lt!69224))))

(declare-fun b!134544 () Bool)

(assert (=> b!134544 (= e!87621 e!87622)))

(declare-fun c!25076 () Bool)

(assert (=> b!134544 (= c!25076 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69213 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69213 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))) lt!69224))))))

(declare-fun b!134543 () Bool)

(assert (=> b!134543 (= e!87621 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69213 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))))))))

(declare-fun b!134546 () Bool)

(assert (=> b!134546 (= e!87622 None!174)))

(assert (= (and d!41461 c!25075) b!134543))

(assert (= (and d!41461 (not c!25075)) b!134544))

(assert (= (and b!134544 c!25076) b!134545))

(assert (= (and b!134544 (not c!25076)) b!134546))

(declare-fun m!159423 () Bool)

(assert (=> b!134545 m!159423))

(assert (=> d!40745 d!41461))

(declare-fun d!41463 () Bool)

(assert (=> d!41463 (= (apply!116 (+!163 lt!69967 (tuple2!2585 lt!69968 (minValue!2719 (_2!1304 lt!69115)))) lt!69978) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69967 (tuple2!2585 lt!69968 (minValue!2719 (_2!1304 lt!69115))))) lt!69978)))))

(declare-fun bs!5594 () Bool)

(assert (= bs!5594 d!41463))

(declare-fun m!159425 () Bool)

(assert (=> bs!5594 m!159425))

(assert (=> bs!5594 m!159425))

(declare-fun m!159427 () Bool)

(assert (=> bs!5594 m!159427))

(assert (=> b!133852 d!41463))

(declare-fun d!41465 () Bool)

(declare-fun e!87623 () Bool)

(assert (=> d!41465 e!87623))

(declare-fun res!64632 () Bool)

(assert (=> d!41465 (=> (not res!64632) (not e!87623))))

(declare-fun lt!70272 () ListLongMap!1671)

(assert (=> d!41465 (= res!64632 (contains!886 lt!70272 (_1!1303 (tuple2!2585 lt!69959 (zeroValue!2719 (_2!1304 lt!69115))))))))

(declare-fun lt!70270 () List!1710)

(assert (=> d!41465 (= lt!70272 (ListLongMap!1672 lt!70270))))

(declare-fun lt!70273 () Unit!4132)

(declare-fun lt!70271 () Unit!4132)

(assert (=> d!41465 (= lt!70273 lt!70271)))

(assert (=> d!41465 (= (getValueByKey!170 lt!70270 (_1!1303 (tuple2!2585 lt!69959 (zeroValue!2719 (_2!1304 lt!69115))))) (Some!175 (_2!1303 (tuple2!2585 lt!69959 (zeroValue!2719 (_2!1304 lt!69115))))))))

(assert (=> d!41465 (= lt!70271 (lemmaContainsTupThenGetReturnValue!88 lt!70270 (_1!1303 (tuple2!2585 lt!69959 (zeroValue!2719 (_2!1304 lt!69115)))) (_2!1303 (tuple2!2585 lt!69959 (zeroValue!2719 (_2!1304 lt!69115))))))))

(assert (=> d!41465 (= lt!70270 (insertStrictlySorted!91 (toList!851 lt!69958) (_1!1303 (tuple2!2585 lt!69959 (zeroValue!2719 (_2!1304 lt!69115)))) (_2!1303 (tuple2!2585 lt!69959 (zeroValue!2719 (_2!1304 lt!69115))))))))

(assert (=> d!41465 (= (+!163 lt!69958 (tuple2!2585 lt!69959 (zeroValue!2719 (_2!1304 lt!69115)))) lt!70272)))

(declare-fun b!134547 () Bool)

(declare-fun res!64631 () Bool)

(assert (=> b!134547 (=> (not res!64631) (not e!87623))))

(assert (=> b!134547 (= res!64631 (= (getValueByKey!170 (toList!851 lt!70272) (_1!1303 (tuple2!2585 lt!69959 (zeroValue!2719 (_2!1304 lt!69115))))) (Some!175 (_2!1303 (tuple2!2585 lt!69959 (zeroValue!2719 (_2!1304 lt!69115)))))))))

(declare-fun b!134548 () Bool)

(assert (=> b!134548 (= e!87623 (contains!889 (toList!851 lt!70272) (tuple2!2585 lt!69959 (zeroValue!2719 (_2!1304 lt!69115)))))))

(assert (= (and d!41465 res!64632) b!134547))

(assert (= (and b!134547 res!64631) b!134548))

(declare-fun m!159429 () Bool)

(assert (=> d!41465 m!159429))

(declare-fun m!159431 () Bool)

(assert (=> d!41465 m!159431))

(declare-fun m!159433 () Bool)

(assert (=> d!41465 m!159433))

(declare-fun m!159435 () Bool)

(assert (=> d!41465 m!159435))

(declare-fun m!159437 () Bool)

(assert (=> b!134547 m!159437))

(declare-fun m!159439 () Bool)

(assert (=> b!134548 m!159439))

(assert (=> b!133852 d!41465))

(declare-fun d!41467 () Bool)

(assert (=> d!41467 (contains!886 (+!163 lt!69964 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115)))) lt!69970)))

(declare-fun lt!70274 () Unit!4132)

(assert (=> d!41467 (= lt!70274 (choose!829 lt!69964 lt!69972 (zeroValue!2719 (_2!1304 lt!69115)) lt!69970))))

(assert (=> d!41467 (contains!886 lt!69964 lt!69970)))

(assert (=> d!41467 (= (addStillContains!92 lt!69964 lt!69972 (zeroValue!2719 (_2!1304 lt!69115)) lt!69970) lt!70274)))

(declare-fun bs!5595 () Bool)

(assert (= bs!5595 d!41467))

(assert (=> bs!5595 m!158163))

(assert (=> bs!5595 m!158163))

(assert (=> bs!5595 m!158175))

(declare-fun m!159441 () Bool)

(assert (=> bs!5595 m!159441))

(declare-fun m!159443 () Bool)

(assert (=> bs!5595 m!159443))

(assert (=> b!133852 d!41467))

(declare-fun d!41469 () Bool)

(declare-fun e!87624 () Bool)

(assert (=> d!41469 e!87624))

(declare-fun res!64634 () Bool)

(assert (=> d!41469 (=> (not res!64634) (not e!87624))))

(declare-fun lt!70277 () ListLongMap!1671)

(assert (=> d!41469 (= res!64634 (contains!886 lt!70277 (_1!1303 (tuple2!2585 lt!69977 (minValue!2719 (_2!1304 lt!69115))))))))

(declare-fun lt!70275 () List!1710)

(assert (=> d!41469 (= lt!70277 (ListLongMap!1672 lt!70275))))

(declare-fun lt!70278 () Unit!4132)

(declare-fun lt!70276 () Unit!4132)

(assert (=> d!41469 (= lt!70278 lt!70276)))

(assert (=> d!41469 (= (getValueByKey!170 lt!70275 (_1!1303 (tuple2!2585 lt!69977 (minValue!2719 (_2!1304 lt!69115))))) (Some!175 (_2!1303 (tuple2!2585 lt!69977 (minValue!2719 (_2!1304 lt!69115))))))))

(assert (=> d!41469 (= lt!70276 (lemmaContainsTupThenGetReturnValue!88 lt!70275 (_1!1303 (tuple2!2585 lt!69977 (minValue!2719 (_2!1304 lt!69115)))) (_2!1303 (tuple2!2585 lt!69977 (minValue!2719 (_2!1304 lt!69115))))))))

(assert (=> d!41469 (= lt!70275 (insertStrictlySorted!91 (toList!851 lt!69960) (_1!1303 (tuple2!2585 lt!69977 (minValue!2719 (_2!1304 lt!69115)))) (_2!1303 (tuple2!2585 lt!69977 (minValue!2719 (_2!1304 lt!69115))))))))

(assert (=> d!41469 (= (+!163 lt!69960 (tuple2!2585 lt!69977 (minValue!2719 (_2!1304 lt!69115)))) lt!70277)))

(declare-fun b!134549 () Bool)

(declare-fun res!64633 () Bool)

(assert (=> b!134549 (=> (not res!64633) (not e!87624))))

(assert (=> b!134549 (= res!64633 (= (getValueByKey!170 (toList!851 lt!70277) (_1!1303 (tuple2!2585 lt!69977 (minValue!2719 (_2!1304 lt!69115))))) (Some!175 (_2!1303 (tuple2!2585 lt!69977 (minValue!2719 (_2!1304 lt!69115)))))))))

(declare-fun b!134550 () Bool)

(assert (=> b!134550 (= e!87624 (contains!889 (toList!851 lt!70277) (tuple2!2585 lt!69977 (minValue!2719 (_2!1304 lt!69115)))))))

(assert (= (and d!41469 res!64634) b!134549))

(assert (= (and b!134549 res!64633) b!134550))

(declare-fun m!159445 () Bool)

(assert (=> d!41469 m!159445))

(declare-fun m!159447 () Bool)

(assert (=> d!41469 m!159447))

(declare-fun m!159449 () Bool)

(assert (=> d!41469 m!159449))

(declare-fun m!159451 () Bool)

(assert (=> d!41469 m!159451))

(declare-fun m!159453 () Bool)

(assert (=> b!134549 m!159453))

(declare-fun m!159455 () Bool)

(assert (=> b!134550 m!159455))

(assert (=> b!133852 d!41469))

(declare-fun d!41471 () Bool)

(assert (=> d!41471 (= (apply!116 lt!69967 lt!69978) (get!1482 (getValueByKey!170 (toList!851 lt!69967) lt!69978)))))

(declare-fun bs!5596 () Bool)

(assert (= bs!5596 d!41471))

(declare-fun m!159457 () Bool)

(assert (=> bs!5596 m!159457))

(assert (=> bs!5596 m!159457))

(declare-fun m!159459 () Bool)

(assert (=> bs!5596 m!159459))

(assert (=> b!133852 d!41471))

(declare-fun d!41473 () Bool)

(declare-fun e!87625 () Bool)

(assert (=> d!41473 e!87625))

(declare-fun res!64636 () Bool)

(assert (=> d!41473 (=> (not res!64636) (not e!87625))))

(declare-fun lt!70281 () ListLongMap!1671)

(assert (=> d!41473 (= res!64636 (contains!886 lt!70281 (_1!1303 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115))))))))

(declare-fun lt!70279 () List!1710)

(assert (=> d!41473 (= lt!70281 (ListLongMap!1672 lt!70279))))

(declare-fun lt!70282 () Unit!4132)

(declare-fun lt!70280 () Unit!4132)

(assert (=> d!41473 (= lt!70282 lt!70280)))

(assert (=> d!41473 (= (getValueByKey!170 lt!70279 (_1!1303 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115))))) (Some!175 (_2!1303 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115))))))))

(assert (=> d!41473 (= lt!70280 (lemmaContainsTupThenGetReturnValue!88 lt!70279 (_1!1303 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115)))) (_2!1303 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115))))))))

(assert (=> d!41473 (= lt!70279 (insertStrictlySorted!91 (toList!851 lt!69964) (_1!1303 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115)))) (_2!1303 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115))))))))

(assert (=> d!41473 (= (+!163 lt!69964 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115)))) lt!70281)))

(declare-fun b!134551 () Bool)

(declare-fun res!64635 () Bool)

(assert (=> b!134551 (=> (not res!64635) (not e!87625))))

(assert (=> b!134551 (= res!64635 (= (getValueByKey!170 (toList!851 lt!70281) (_1!1303 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115))))) (Some!175 (_2!1303 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115)))))))))

(declare-fun b!134552 () Bool)

(assert (=> b!134552 (= e!87625 (contains!889 (toList!851 lt!70281) (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115)))))))

(assert (= (and d!41473 res!64636) b!134551))

(assert (= (and b!134551 res!64635) b!134552))

(declare-fun m!159461 () Bool)

(assert (=> d!41473 m!159461))

(declare-fun m!159463 () Bool)

(assert (=> d!41473 m!159463))

(declare-fun m!159465 () Bool)

(assert (=> d!41473 m!159465))

(declare-fun m!159467 () Bool)

(assert (=> d!41473 m!159467))

(declare-fun m!159469 () Bool)

(assert (=> b!134551 m!159469))

(declare-fun m!159471 () Bool)

(assert (=> b!134552 m!159471))

(assert (=> b!133852 d!41473))

(declare-fun d!41475 () Bool)

(assert (=> d!41475 (= (apply!116 (+!163 lt!69960 (tuple2!2585 lt!69977 (minValue!2719 (_2!1304 lt!69115)))) lt!69965) (apply!116 lt!69960 lt!69965))))

(declare-fun lt!70283 () Unit!4132)

(assert (=> d!41475 (= lt!70283 (choose!828 lt!69960 lt!69977 (minValue!2719 (_2!1304 lt!69115)) lt!69965))))

(declare-fun e!87626 () Bool)

(assert (=> d!41475 e!87626))

(declare-fun res!64637 () Bool)

(assert (=> d!41475 (=> (not res!64637) (not e!87626))))

(assert (=> d!41475 (= res!64637 (contains!886 lt!69960 lt!69965))))

(assert (=> d!41475 (= (addApplyDifferent!92 lt!69960 lt!69977 (minValue!2719 (_2!1304 lt!69115)) lt!69965) lt!70283)))

(declare-fun b!134553 () Bool)

(assert (=> b!134553 (= e!87626 (not (= lt!69965 lt!69977)))))

(assert (= (and d!41475 res!64637) b!134553))

(assert (=> d!41475 m!158171))

(assert (=> d!41475 m!158173))

(declare-fun m!159473 () Bool)

(assert (=> d!41475 m!159473))

(assert (=> d!41475 m!158181))

(declare-fun m!159475 () Bool)

(assert (=> d!41475 m!159475))

(assert (=> d!41475 m!158171))

(assert (=> b!133852 d!41475))

(declare-fun d!41477 () Bool)

(assert (=> d!41477 (= (apply!116 lt!69958 lt!69962) (get!1482 (getValueByKey!170 (toList!851 lt!69958) lt!69962)))))

(declare-fun bs!5597 () Bool)

(assert (= bs!5597 d!41477))

(declare-fun m!159477 () Bool)

(assert (=> bs!5597 m!159477))

(assert (=> bs!5597 m!159477))

(declare-fun m!159479 () Bool)

(assert (=> bs!5597 m!159479))

(assert (=> b!133852 d!41477))

(declare-fun d!41479 () Bool)

(assert (=> d!41479 (= (apply!116 (+!163 lt!69958 (tuple2!2585 lt!69959 (zeroValue!2719 (_2!1304 lt!69115)))) lt!69962) (apply!116 lt!69958 lt!69962))))

(declare-fun lt!70284 () Unit!4132)

(assert (=> d!41479 (= lt!70284 (choose!828 lt!69958 lt!69959 (zeroValue!2719 (_2!1304 lt!69115)) lt!69962))))

(declare-fun e!87627 () Bool)

(assert (=> d!41479 e!87627))

(declare-fun res!64638 () Bool)

(assert (=> d!41479 (=> (not res!64638) (not e!87627))))

(assert (=> d!41479 (= res!64638 (contains!886 lt!69958 lt!69962))))

(assert (=> d!41479 (= (addApplyDifferent!92 lt!69958 lt!69959 (zeroValue!2719 (_2!1304 lt!69115)) lt!69962) lt!70284)))

(declare-fun b!134554 () Bool)

(assert (=> b!134554 (= e!87627 (not (= lt!69962 lt!69959)))))

(assert (= (and d!41479 res!64638) b!134554))

(assert (=> d!41479 m!158159))

(assert (=> d!41479 m!158167))

(declare-fun m!159481 () Bool)

(assert (=> d!41479 m!159481))

(assert (=> d!41479 m!158169))

(declare-fun m!159483 () Bool)

(assert (=> d!41479 m!159483))

(assert (=> d!41479 m!158159))

(assert (=> b!133852 d!41479))

(declare-fun b!134555 () Bool)

(assert (=> b!134555 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(assert (=> b!134555 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (_values!2847 (_2!1304 lt!69115)))))))

(declare-fun e!87628 () Bool)

(declare-fun lt!70287 () ListLongMap!1671)

(assert (=> b!134555 (= e!87628 (= (apply!116 lt!70287 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (_values!2847 (_2!1304 lt!69115))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 (_2!1304 lt!69115)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!14808 () Bool)

(declare-fun call!14811 () ListLongMap!1671)

(assert (=> bm!14808 (= call!14811 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (_2!1304 lt!69115)) (_values!2847 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115)) (extraKeys!2629 (_2!1304 lt!69115)) (zeroValue!2719 (_2!1304 lt!69115)) (minValue!2719 (_2!1304 lt!69115)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 (_2!1304 lt!69115))))))

(declare-fun b!134556 () Bool)

(declare-fun e!87631 () ListLongMap!1671)

(assert (=> b!134556 (= e!87631 call!14811)))

(declare-fun b!134557 () Bool)

(declare-fun e!87633 () Bool)

(declare-fun e!87630 () Bool)

(assert (=> b!134557 (= e!87633 e!87630)))

(declare-fun c!25080 () Bool)

(assert (=> b!134557 (= c!25080 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(declare-fun b!134558 () Bool)

(assert (=> b!134558 (= e!87630 (isEmpty!414 lt!70287))))

(declare-fun b!134559 () Bool)

(declare-fun e!87634 () Bool)

(assert (=> b!134559 (= e!87634 e!87633)))

(declare-fun c!25077 () Bool)

(declare-fun e!87629 () Bool)

(assert (=> b!134559 (= c!25077 e!87629)))

(declare-fun res!64641 () Bool)

(assert (=> b!134559 (=> (not res!64641) (not e!87629))))

(assert (=> b!134559 (= res!64641 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(declare-fun b!134560 () Bool)

(assert (=> b!134560 (= e!87629 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(assert (=> b!134560 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134561 () Bool)

(declare-fun lt!70286 () Unit!4132)

(declare-fun lt!70291 () Unit!4132)

(assert (=> b!134561 (= lt!70286 lt!70291)))

(declare-fun lt!70285 () ListLongMap!1671)

(declare-fun lt!70288 () (_ BitVec 64))

(declare-fun lt!70289 () V!3481)

(declare-fun lt!70290 () (_ BitVec 64))

(assert (=> b!134561 (not (contains!886 (+!163 lt!70285 (tuple2!2585 lt!70288 lt!70289)) lt!70290))))

(assert (=> b!134561 (= lt!70291 (addStillNotContains!62 lt!70285 lt!70288 lt!70289 lt!70290))))

(assert (=> b!134561 (= lt!70290 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134561 (= lt!70289 (get!1478 (select (arr!2249 (_values!2847 (_2!1304 lt!69115))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 (_2!1304 lt!69115)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134561 (= lt!70288 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000))))

(assert (=> b!134561 (= lt!70285 call!14811)))

(assert (=> b!134561 (= e!87631 (+!163 call!14811 (tuple2!2585 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 (_2!1304 lt!69115))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 (_2!1304 lt!69115)) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134562 () Bool)

(declare-fun e!87632 () ListLongMap!1671)

(assert (=> b!134562 (= e!87632 e!87631)))

(declare-fun c!25078 () Bool)

(assert (=> b!134562 (= c!25078 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(declare-fun b!134563 () Bool)

(assert (=> b!134563 (= e!87632 (ListLongMap!1672 Nil!1707))))

(declare-fun d!41481 () Bool)

(assert (=> d!41481 e!87634))

(declare-fun res!64640 () Bool)

(assert (=> d!41481 (=> (not res!64640) (not e!87634))))

(assert (=> d!41481 (= res!64640 (not (contains!886 lt!70287 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41481 (= lt!70287 e!87632)))

(declare-fun c!25079 () Bool)

(assert (=> d!41481 (= c!25079 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(assert (=> d!41481 (validMask!0 (mask!7163 (_2!1304 lt!69115)))))

(assert (=> d!41481 (= (getCurrentListMapNoExtraKeys!128 (_keys!4612 (_2!1304 lt!69115)) (_values!2847 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115)) (extraKeys!2629 (_2!1304 lt!69115)) (zeroValue!2719 (_2!1304 lt!69115)) (minValue!2719 (_2!1304 lt!69115)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1304 lt!69115))) lt!70287)))

(declare-fun b!134564 () Bool)

(assert (=> b!134564 (= e!87630 (= lt!70287 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (_2!1304 lt!69115)) (_values!2847 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115)) (extraKeys!2629 (_2!1304 lt!69115)) (zeroValue!2719 (_2!1304 lt!69115)) (minValue!2719 (_2!1304 lt!69115)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 (_2!1304 lt!69115)))))))

(declare-fun b!134565 () Bool)

(declare-fun res!64642 () Bool)

(assert (=> b!134565 (=> (not res!64642) (not e!87634))))

(assert (=> b!134565 (= res!64642 (not (contains!886 lt!70287 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134566 () Bool)

(assert (=> b!134566 (= e!87633 e!87628)))

(assert (=> b!134566 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(declare-fun res!64639 () Bool)

(assert (=> b!134566 (= res!64639 (contains!886 lt!70287 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(assert (=> b!134566 (=> (not res!64639) (not e!87628))))

(assert (= (and d!41481 c!25079) b!134563))

(assert (= (and d!41481 (not c!25079)) b!134562))

(assert (= (and b!134562 c!25078) b!134561))

(assert (= (and b!134562 (not c!25078)) b!134556))

(assert (= (or b!134561 b!134556) bm!14808))

(assert (= (and d!41481 res!64640) b!134565))

(assert (= (and b!134565 res!64642) b!134559))

(assert (= (and b!134559 res!64641) b!134560))

(assert (= (and b!134559 c!25077) b!134566))

(assert (= (and b!134559 (not c!25077)) b!134557))

(assert (= (and b!134566 res!64639) b!134555))

(assert (= (and b!134557 c!25080) b!134564))

(assert (= (and b!134557 (not c!25080)) b!134558))

(declare-fun b_lambda!5991 () Bool)

(assert (=> (not b_lambda!5991) (not b!134555)))

(assert (=> b!134555 t!6168))

(declare-fun b_and!8313 () Bool)

(assert (= b_and!8309 (and (=> t!6168 result!3997) b_and!8313)))

(assert (=> b!134555 t!6170))

(declare-fun b_and!8315 () Bool)

(assert (= b_and!8311 (and (=> t!6170 result!3999) b_and!8315)))

(declare-fun b_lambda!5993 () Bool)

(assert (=> (not b_lambda!5993) (not b!134561)))

(assert (=> b!134561 t!6168))

(declare-fun b_and!8317 () Bool)

(assert (= b_and!8313 (and (=> t!6168 result!3997) b_and!8317)))

(assert (=> b!134561 t!6170))

(declare-fun b_and!8319 () Bool)

(assert (= b_and!8315 (and (=> t!6170 result!3999) b_and!8319)))

(assert (=> b!134560 m!156913))

(assert (=> b!134560 m!156913))

(assert (=> b!134560 m!156915))

(declare-fun m!159485 () Bool)

(assert (=> b!134565 m!159485))

(assert (=> b!134561 m!158145))

(declare-fun m!159487 () Bool)

(assert (=> b!134561 m!159487))

(assert (=> b!134561 m!156913))

(assert (=> b!134561 m!158145))

(assert (=> b!134561 m!158147))

(assert (=> b!134561 m!158149))

(declare-fun m!159489 () Bool)

(assert (=> b!134561 m!159489))

(declare-fun m!159491 () Bool)

(assert (=> b!134561 m!159491))

(assert (=> b!134561 m!158147))

(declare-fun m!159493 () Bool)

(assert (=> b!134561 m!159493))

(assert (=> b!134561 m!159489))

(declare-fun m!159495 () Bool)

(assert (=> b!134564 m!159495))

(assert (=> b!134566 m!156913))

(assert (=> b!134566 m!156913))

(declare-fun m!159497 () Bool)

(assert (=> b!134566 m!159497))

(declare-fun m!159499 () Bool)

(assert (=> b!134558 m!159499))

(assert (=> bm!14808 m!159495))

(declare-fun m!159501 () Bool)

(assert (=> d!41481 m!159501))

(assert (=> d!41481 m!156961))

(assert (=> b!134562 m!156913))

(assert (=> b!134562 m!156913))

(assert (=> b!134562 m!156915))

(assert (=> b!134555 m!158145))

(assert (=> b!134555 m!156913))

(assert (=> b!134555 m!158145))

(assert (=> b!134555 m!158147))

(assert (=> b!134555 m!158149))

(assert (=> b!134555 m!158147))

(assert (=> b!134555 m!156913))

(declare-fun m!159503 () Bool)

(assert (=> b!134555 m!159503))

(assert (=> b!133852 d!41481))

(declare-fun d!41483 () Bool)

(declare-fun e!87635 () Bool)

(assert (=> d!41483 e!87635))

(declare-fun res!64644 () Bool)

(assert (=> d!41483 (=> (not res!64644) (not e!87635))))

(declare-fun lt!70294 () ListLongMap!1671)

(assert (=> d!41483 (= res!64644 (contains!886 lt!70294 (_1!1303 (tuple2!2585 lt!69968 (minValue!2719 (_2!1304 lt!69115))))))))

(declare-fun lt!70292 () List!1710)

(assert (=> d!41483 (= lt!70294 (ListLongMap!1672 lt!70292))))

(declare-fun lt!70295 () Unit!4132)

(declare-fun lt!70293 () Unit!4132)

(assert (=> d!41483 (= lt!70295 lt!70293)))

(assert (=> d!41483 (= (getValueByKey!170 lt!70292 (_1!1303 (tuple2!2585 lt!69968 (minValue!2719 (_2!1304 lt!69115))))) (Some!175 (_2!1303 (tuple2!2585 lt!69968 (minValue!2719 (_2!1304 lt!69115))))))))

(assert (=> d!41483 (= lt!70293 (lemmaContainsTupThenGetReturnValue!88 lt!70292 (_1!1303 (tuple2!2585 lt!69968 (minValue!2719 (_2!1304 lt!69115)))) (_2!1303 (tuple2!2585 lt!69968 (minValue!2719 (_2!1304 lt!69115))))))))

(assert (=> d!41483 (= lt!70292 (insertStrictlySorted!91 (toList!851 lt!69967) (_1!1303 (tuple2!2585 lt!69968 (minValue!2719 (_2!1304 lt!69115)))) (_2!1303 (tuple2!2585 lt!69968 (minValue!2719 (_2!1304 lt!69115))))))))

(assert (=> d!41483 (= (+!163 lt!69967 (tuple2!2585 lt!69968 (minValue!2719 (_2!1304 lt!69115)))) lt!70294)))

(declare-fun b!134567 () Bool)

(declare-fun res!64643 () Bool)

(assert (=> b!134567 (=> (not res!64643) (not e!87635))))

(assert (=> b!134567 (= res!64643 (= (getValueByKey!170 (toList!851 lt!70294) (_1!1303 (tuple2!2585 lt!69968 (minValue!2719 (_2!1304 lt!69115))))) (Some!175 (_2!1303 (tuple2!2585 lt!69968 (minValue!2719 (_2!1304 lt!69115)))))))))

(declare-fun b!134568 () Bool)

(assert (=> b!134568 (= e!87635 (contains!889 (toList!851 lt!70294) (tuple2!2585 lt!69968 (minValue!2719 (_2!1304 lt!69115)))))))

(assert (= (and d!41483 res!64644) b!134567))

(assert (= (and b!134567 res!64643) b!134568))

(declare-fun m!159505 () Bool)

(assert (=> d!41483 m!159505))

(declare-fun m!159507 () Bool)

(assert (=> d!41483 m!159507))

(declare-fun m!159509 () Bool)

(assert (=> d!41483 m!159509))

(declare-fun m!159511 () Bool)

(assert (=> d!41483 m!159511))

(declare-fun m!159513 () Bool)

(assert (=> b!134567 m!159513))

(declare-fun m!159515 () Bool)

(assert (=> b!134568 m!159515))

(assert (=> b!133852 d!41483))

(declare-fun d!41485 () Bool)

(assert (=> d!41485 (= (apply!116 (+!163 lt!69967 (tuple2!2585 lt!69968 (minValue!2719 (_2!1304 lt!69115)))) lt!69978) (apply!116 lt!69967 lt!69978))))

(declare-fun lt!70296 () Unit!4132)

(assert (=> d!41485 (= lt!70296 (choose!828 lt!69967 lt!69968 (minValue!2719 (_2!1304 lt!69115)) lt!69978))))

(declare-fun e!87636 () Bool)

(assert (=> d!41485 e!87636))

(declare-fun res!64645 () Bool)

(assert (=> d!41485 (=> (not res!64645) (not e!87636))))

(assert (=> d!41485 (= res!64645 (contains!886 lt!69967 lt!69978))))

(assert (=> d!41485 (= (addApplyDifferent!92 lt!69967 lt!69968 (minValue!2719 (_2!1304 lt!69115)) lt!69978) lt!70296)))

(declare-fun b!134569 () Bool)

(assert (=> b!134569 (= e!87636 (not (= lt!69978 lt!69968)))))

(assert (= (and d!41485 res!64645) b!134569))

(assert (=> d!41485 m!158165))

(assert (=> d!41485 m!158187))

(declare-fun m!159517 () Bool)

(assert (=> d!41485 m!159517))

(assert (=> d!41485 m!158185))

(declare-fun m!159519 () Bool)

(assert (=> d!41485 m!159519))

(assert (=> d!41485 m!158165))

(assert (=> b!133852 d!41485))

(declare-fun d!41487 () Bool)

(declare-fun e!87637 () Bool)

(assert (=> d!41487 e!87637))

(declare-fun res!64646 () Bool)

(assert (=> d!41487 (=> res!64646 e!87637)))

(declare-fun lt!70298 () Bool)

(assert (=> d!41487 (= res!64646 (not lt!70298))))

(declare-fun lt!70300 () Bool)

(assert (=> d!41487 (= lt!70298 lt!70300)))

(declare-fun lt!70297 () Unit!4132)

(declare-fun e!87638 () Unit!4132)

(assert (=> d!41487 (= lt!70297 e!87638)))

(declare-fun c!25081 () Bool)

(assert (=> d!41487 (= c!25081 lt!70300)))

(assert (=> d!41487 (= lt!70300 (containsKey!174 (toList!851 (+!163 lt!69964 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115))))) lt!69970))))

(assert (=> d!41487 (= (contains!886 (+!163 lt!69964 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115)))) lt!69970) lt!70298)))

(declare-fun b!134570 () Bool)

(declare-fun lt!70299 () Unit!4132)

(assert (=> b!134570 (= e!87638 lt!70299)))

(assert (=> b!134570 (= lt!70299 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69964 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115))))) lt!69970))))

(assert (=> b!134570 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69964 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115))))) lt!69970))))

(declare-fun b!134571 () Bool)

(declare-fun Unit!4215 () Unit!4132)

(assert (=> b!134571 (= e!87638 Unit!4215)))

(declare-fun b!134572 () Bool)

(assert (=> b!134572 (= e!87637 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69964 (tuple2!2585 lt!69972 (zeroValue!2719 (_2!1304 lt!69115))))) lt!69970)))))

(assert (= (and d!41487 c!25081) b!134570))

(assert (= (and d!41487 (not c!25081)) b!134571))

(assert (= (and d!41487 (not res!64646)) b!134572))

(declare-fun m!159521 () Bool)

(assert (=> d!41487 m!159521))

(declare-fun m!159523 () Bool)

(assert (=> b!134570 m!159523))

(declare-fun m!159525 () Bool)

(assert (=> b!134570 m!159525))

(assert (=> b!134570 m!159525))

(declare-fun m!159527 () Bool)

(assert (=> b!134570 m!159527))

(assert (=> b!134572 m!159525))

(assert (=> b!134572 m!159525))

(assert (=> b!134572 m!159527))

(assert (=> b!133852 d!41487))

(declare-fun d!41489 () Bool)

(assert (=> d!41489 (= (apply!116 lt!69960 lt!69965) (get!1482 (getValueByKey!170 (toList!851 lt!69960) lt!69965)))))

(declare-fun bs!5598 () Bool)

(assert (= bs!5598 d!41489))

(declare-fun m!159529 () Bool)

(assert (=> bs!5598 m!159529))

(assert (=> bs!5598 m!159529))

(declare-fun m!159531 () Bool)

(assert (=> bs!5598 m!159531))

(assert (=> b!133852 d!41489))

(declare-fun d!41491 () Bool)

(assert (=> d!41491 (= (apply!116 (+!163 lt!69960 (tuple2!2585 lt!69977 (minValue!2719 (_2!1304 lt!69115)))) lt!69965) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69960 (tuple2!2585 lt!69977 (minValue!2719 (_2!1304 lt!69115))))) lt!69965)))))

(declare-fun bs!5599 () Bool)

(assert (= bs!5599 d!41491))

(declare-fun m!159533 () Bool)

(assert (=> bs!5599 m!159533))

(assert (=> bs!5599 m!159533))

(declare-fun m!159535 () Bool)

(assert (=> bs!5599 m!159535))

(assert (=> b!133852 d!41491))

(declare-fun d!41493 () Bool)

(assert (=> d!41493 (= (apply!116 (+!163 lt!69958 (tuple2!2585 lt!69959 (zeroValue!2719 (_2!1304 lt!69115)))) lt!69962) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69958 (tuple2!2585 lt!69959 (zeroValue!2719 (_2!1304 lt!69115))))) lt!69962)))))

(declare-fun bs!5600 () Bool)

(assert (= bs!5600 d!41493))

(declare-fun m!159537 () Bool)

(assert (=> bs!5600 m!159537))

(assert (=> bs!5600 m!159537))

(declare-fun m!159539 () Bool)

(assert (=> bs!5600 m!159539))

(assert (=> b!133852 d!41493))

(declare-fun d!41495 () Bool)

(declare-fun e!87639 () Bool)

(assert (=> d!41495 e!87639))

(declare-fun res!64648 () Bool)

(assert (=> d!41495 (=> (not res!64648) (not e!87639))))

(declare-fun lt!70303 () ListLongMap!1671)

(assert (=> d!41495 (= res!64648 (contains!886 lt!70303 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70301 () List!1710)

(assert (=> d!41495 (= lt!70303 (ListLongMap!1672 lt!70301))))

(declare-fun lt!70304 () Unit!4132)

(declare-fun lt!70302 () Unit!4132)

(assert (=> d!41495 (= lt!70304 lt!70302)))

(assert (=> d!41495 (= (getValueByKey!170 lt!70301 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41495 (= lt!70302 (lemmaContainsTupThenGetReturnValue!88 lt!70301 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41495 (= lt!70301 (insertStrictlySorted!91 (toList!851 call!14701) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41495 (= (+!163 call!14701 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70303)))

(declare-fun b!134573 () Bool)

(declare-fun res!64647 () Bool)

(assert (=> b!134573 (=> (not res!64647) (not e!87639))))

(assert (=> b!134573 (= res!64647 (= (getValueByKey!170 (toList!851 lt!70303) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!134574 () Bool)

(assert (=> b!134574 (= e!87639 (contains!889 (toList!851 lt!70303) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!41495 res!64648) b!134573))

(assert (= (and b!134573 res!64647) b!134574))

(declare-fun m!159541 () Bool)

(assert (=> d!41495 m!159541))

(declare-fun m!159543 () Bool)

(assert (=> d!41495 m!159543))

(declare-fun m!159545 () Bool)

(assert (=> d!41495 m!159545))

(declare-fun m!159547 () Bool)

(assert (=> d!41495 m!159547))

(declare-fun m!159549 () Bool)

(assert (=> b!134573 m!159549))

(declare-fun m!159551 () Bool)

(assert (=> b!134574 m!159551))

(assert (=> b!133380 d!41495))

(declare-fun d!41497 () Bool)

(declare-fun e!87644 () Bool)

(assert (=> d!41497 e!87644))

(declare-fun c!25082 () Bool)

(declare-fun lt!70305 () SeekEntryResult!278)

(assert (=> d!41497 (= c!25082 (and ((_ is Intermediate!278) lt!70305) (undefined!1090 lt!70305)))))

(declare-fun e!87640 () SeekEntryResult!278)

(assert (=> d!41497 (= lt!70305 e!87640)))

(declare-fun c!25083 () Bool)

(assert (=> d!41497 (= c!25083 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(declare-fun lt!70306 () (_ BitVec 64))

(assert (=> d!41497 (= lt!70306 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (mask!7163 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000 (mask!7163 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!41497 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!41497 (= (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (mask!7163 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000 (mask!7163 (v!3192 (underlying!451 thiss!992)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) lt!70305)))

(declare-fun b!134575 () Bool)

(assert (=> b!134575 (and (bvsge (index!3274 lt!70305) #b00000000000000000000000000000000) (bvslt (index!3274 lt!70305) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun e!87643 () Bool)

(assert (=> b!134575 (= e!87643 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!70305)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134576 () Bool)

(assert (=> b!134576 (and (bvsge (index!3274 lt!70305) #b00000000000000000000000000000000) (bvslt (index!3274 lt!70305) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun res!64651 () Bool)

(assert (=> b!134576 (= res!64651 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!70305)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134576 (=> res!64651 e!87643)))

(declare-fun b!134577 () Bool)

(declare-fun e!87642 () SeekEntryResult!278)

(assert (=> b!134577 (= e!87640 e!87642)))

(declare-fun c!25084 () Bool)

(assert (=> b!134577 (= c!25084 (or (= lt!70306 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)) (= (bvadd lt!70306 lt!70306) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134578 () Bool)

(declare-fun e!87641 () Bool)

(assert (=> b!134578 (= e!87644 e!87641)))

(declare-fun res!64650 () Bool)

(assert (=> b!134578 (= res!64650 (and ((_ is Intermediate!278) lt!70305) (not (undefined!1090 lt!70305)) (bvslt (x!15594 lt!70305) #b01111111111111111111111111111110) (bvsge (x!15594 lt!70305) #b00000000000000000000000000000000) (bvsge (x!15594 lt!70305) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134578 (=> (not res!64650) (not e!87641))))

(declare-fun b!134579 () Bool)

(assert (=> b!134579 (= e!87642 (Intermediate!278 false (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (mask!7163 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000 (mask!7163 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!134580 () Bool)

(assert (=> b!134580 (= e!87640 (Intermediate!278 true (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (mask!7163 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000 (mask!7163 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!134581 () Bool)

(assert (=> b!134581 (= e!87642 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (mask!7163 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000 (mask!7163 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!134582 () Bool)

(assert (=> b!134582 (= e!87644 (bvsge (x!15594 lt!70305) #b01111111111111111111111111111110))))

(declare-fun b!134583 () Bool)

(assert (=> b!134583 (and (bvsge (index!3274 lt!70305) #b00000000000000000000000000000000) (bvslt (index!3274 lt!70305) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun res!64649 () Bool)

(assert (=> b!134583 (= res!64649 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!70305)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> b!134583 (=> res!64649 e!87643)))

(assert (=> b!134583 (= e!87641 e!87643)))

(assert (= (and d!41497 c!25083) b!134580))

(assert (= (and d!41497 (not c!25083)) b!134577))

(assert (= (and b!134577 c!25084) b!134579))

(assert (= (and b!134577 (not c!25084)) b!134581))

(assert (= (and d!41497 c!25082) b!134582))

(assert (= (and d!41497 (not c!25082)) b!134578))

(assert (= (and b!134578 res!64650) b!134583))

(assert (= (and b!134583 (not res!64649)) b!134576))

(assert (= (and b!134576 (not res!64651)) b!134575))

(declare-fun m!159553 () Bool)

(assert (=> b!134576 m!159553))

(assert (=> d!41497 m!158501))

(declare-fun m!159555 () Bool)

(assert (=> d!41497 m!159555))

(assert (=> d!41497 m!155855))

(assert (=> b!134575 m!159553))

(assert (=> b!134581 m!158501))

(declare-fun m!159557 () Bool)

(assert (=> b!134581 m!159557))

(assert (=> b!134581 m!159557))

(assert (=> b!134581 m!156017))

(declare-fun m!159559 () Bool)

(assert (=> b!134581 m!159559))

(assert (=> b!134583 m!159553))

(assert (=> b!133994 d!41497))

(declare-fun d!41499 () Bool)

(declare-fun lt!70309 () (_ BitVec 32))

(assert (=> d!41499 (and (bvsge lt!70309 #b00000000000000000000000000000000) (bvslt lt!70309 (bvadd (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000001)))))

(declare-fun choose!52 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!41499 (= lt!70309 (choose!52 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (mask!7163 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000 (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(assert (=> d!41499 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!41499 (= (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (mask!7163 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000 (mask!7163 (v!3192 (underlying!451 thiss!992)))) lt!70309)))

(declare-fun bs!5601 () Bool)

(assert (= bs!5601 d!41499))

(assert (=> bs!5601 m!156301))

(declare-fun m!159561 () Bool)

(assert (=> bs!5601 m!159561))

(assert (=> bs!5601 m!155855))

(assert (=> b!133994 d!41499))

(declare-fun c!25085 () Bool)

(declare-fun d!41501 () Bool)

(assert (=> d!41501 (= c!25085 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69496))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69496)))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun e!87645 () Option!176)

(assert (=> d!41501 (= (getValueByKey!170 (t!6152 (toList!851 lt!69496)) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) e!87645)))

(declare-fun e!87646 () Option!176)

(declare-fun b!134586 () Bool)

(assert (=> b!134586 (= e!87646 (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69496))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!134585 () Bool)

(assert (=> b!134585 (= e!87645 e!87646)))

(declare-fun c!25086 () Bool)

(assert (=> b!134585 (= c!25086 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69496))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69496)))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))))

(declare-fun b!134584 () Bool)

(assert (=> b!134584 (= e!87645 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 lt!69496))))))))

(declare-fun b!134587 () Bool)

(assert (=> b!134587 (= e!87646 None!174)))

(assert (= (and d!41501 c!25085) b!134584))

(assert (= (and d!41501 (not c!25085)) b!134585))

(assert (= (and b!134585 c!25086) b!134586))

(assert (= (and b!134585 (not c!25086)) b!134587))

(declare-fun m!159563 () Bool)

(assert (=> b!134586 m!159563))

(assert (=> b!133709 d!41501))

(declare-fun d!41503 () Bool)

(declare-fun e!87647 () Bool)

(assert (=> d!41503 e!87647))

(declare-fun res!64652 () Bool)

(assert (=> d!41503 (=> res!64652 e!87647)))

(declare-fun lt!70311 () Bool)

(assert (=> d!41503 (= res!64652 (not lt!70311))))

(declare-fun lt!70313 () Bool)

(assert (=> d!41503 (= lt!70311 lt!70313)))

(declare-fun lt!70310 () Unit!4132)

(declare-fun e!87648 () Unit!4132)

(assert (=> d!41503 (= lt!70310 e!87648)))

(declare-fun c!25087 () Bool)

(assert (=> d!41503 (= c!25087 lt!70313)))

(assert (=> d!41503 (= lt!70313 (containsKey!174 (toList!851 lt!70059) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41503 (= (contains!886 lt!70059 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70311)))

(declare-fun b!134588 () Bool)

(declare-fun lt!70312 () Unit!4132)

(assert (=> b!134588 (= e!87648 lt!70312)))

(assert (=> b!134588 (= lt!70312 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!70059) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134588 (isDefined!124 (getValueByKey!170 (toList!851 lt!70059) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134589 () Bool)

(declare-fun Unit!4216 () Unit!4132)

(assert (=> b!134589 (= e!87648 Unit!4216)))

(declare-fun b!134590 () Bool)

(assert (=> b!134590 (= e!87647 (isDefined!124 (getValueByKey!170 (toList!851 lt!70059) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41503 c!25087) b!134588))

(assert (= (and d!41503 (not c!25087)) b!134589))

(assert (= (and d!41503 (not res!64652)) b!134590))

(declare-fun m!159565 () Bool)

(assert (=> d!41503 m!159565))

(declare-fun m!159567 () Bool)

(assert (=> b!134588 m!159567))

(declare-fun m!159569 () Bool)

(assert (=> b!134588 m!159569))

(assert (=> b!134588 m!159569))

(declare-fun m!159571 () Bool)

(assert (=> b!134588 m!159571))

(assert (=> b!134590 m!159569))

(assert (=> b!134590 m!159569))

(assert (=> b!134590 m!159571))

(assert (=> bm!14771 d!41503))

(declare-fun d!41505 () Bool)

(assert (=> d!41505 (= (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133809 d!41505))

(declare-fun lt!70314 () Bool)

(declare-fun d!41507 () Bool)

(assert (=> d!41507 (= lt!70314 (select (content!133 (toList!851 lt!69578)) (tuple2!2585 lt!69302 lt!69303)))))

(declare-fun e!87650 () Bool)

(assert (=> d!41507 (= lt!70314 e!87650)))

(declare-fun res!64653 () Bool)

(assert (=> d!41507 (=> (not res!64653) (not e!87650))))

(assert (=> d!41507 (= res!64653 ((_ is Cons!1706) (toList!851 lt!69578)))))

(assert (=> d!41507 (= (contains!889 (toList!851 lt!69578) (tuple2!2585 lt!69302 lt!69303)) lt!70314)))

(declare-fun b!134591 () Bool)

(declare-fun e!87649 () Bool)

(assert (=> b!134591 (= e!87650 e!87649)))

(declare-fun res!64654 () Bool)

(assert (=> b!134591 (=> res!64654 e!87649)))

(assert (=> b!134591 (= res!64654 (= (h!2311 (toList!851 lt!69578)) (tuple2!2585 lt!69302 lt!69303)))))

(declare-fun b!134592 () Bool)

(assert (=> b!134592 (= e!87649 (contains!889 (t!6152 (toList!851 lt!69578)) (tuple2!2585 lt!69302 lt!69303)))))

(assert (= (and d!41507 res!64653) b!134591))

(assert (= (and b!134591 (not res!64654)) b!134592))

(declare-fun m!159573 () Bool)

(assert (=> d!41507 m!159573))

(declare-fun m!159575 () Bool)

(assert (=> d!41507 m!159575))

(declare-fun m!159577 () Bool)

(assert (=> b!134592 m!159577))

(assert (=> b!133259 d!41507))

(declare-fun d!41509 () Bool)

(assert (=> d!41509 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69250) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69250) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5602 () Bool)

(assert (= bs!5602 d!41509))

(assert (=> bs!5602 m!156803))

(declare-fun m!159579 () Bool)

(assert (=> bs!5602 m!159579))

(assert (=> b!133681 d!41509))

(declare-fun d!41511 () Bool)

(declare-fun c!25088 () Bool)

(assert (=> d!41511 (= c!25088 (and ((_ is Cons!1706) (toList!851 lt!69250)) (= (_1!1303 (h!2311 (toList!851 lt!69250))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun e!87651 () Option!176)

(assert (=> d!41511 (= (getValueByKey!170 (toList!851 lt!69250) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) e!87651)))

(declare-fun b!134595 () Bool)

(declare-fun e!87652 () Option!176)

(assert (=> b!134595 (= e!87652 (getValueByKey!170 (t!6152 (toList!851 lt!69250)) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134594 () Bool)

(assert (=> b!134594 (= e!87651 e!87652)))

(declare-fun c!25089 () Bool)

(assert (=> b!134594 (= c!25089 (and ((_ is Cons!1706) (toList!851 lt!69250)) (not (= (_1!1303 (h!2311 (toList!851 lt!69250))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!134593 () Bool)

(assert (=> b!134593 (= e!87651 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69250)))))))

(declare-fun b!134596 () Bool)

(assert (=> b!134596 (= e!87652 None!174)))

(assert (= (and d!41511 c!25088) b!134593))

(assert (= (and d!41511 (not c!25088)) b!134594))

(assert (= (and b!134594 c!25089) b!134595))

(assert (= (and b!134594 (not c!25089)) b!134596))

(assert (=> b!134595 m!156125))

(declare-fun m!159581 () Bool)

(assert (=> b!134595 m!159581))

(assert (=> b!133681 d!41511))

(declare-fun b!134597 () Bool)

(assert (=> b!134597 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> b!134597 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2519 (_values!2847 newMap!16))))))

(declare-fun e!87653 () Bool)

(declare-fun lt!70317 () ListLongMap!1671)

(assert (=> b!134597 (= e!87653 (= (apply!116 lt!70317 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun call!14812 () ListLongMap!1671)

(declare-fun bm!14809 () Bool)

(assert (=> bm!14809 (= call!14812 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!134598 () Bool)

(declare-fun e!87656 () ListLongMap!1671)

(assert (=> b!134598 (= e!87656 call!14812)))

(declare-fun b!134599 () Bool)

(declare-fun e!87658 () Bool)

(declare-fun e!87655 () Bool)

(assert (=> b!134599 (= e!87658 e!87655)))

(declare-fun c!25093 () Bool)

(assert (=> b!134599 (= c!25093 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!134600 () Bool)

(assert (=> b!134600 (= e!87655 (isEmpty!414 lt!70317))))

(declare-fun b!134601 () Bool)

(declare-fun e!87659 () Bool)

(assert (=> b!134601 (= e!87659 e!87658)))

(declare-fun c!25090 () Bool)

(declare-fun e!87654 () Bool)

(assert (=> b!134601 (= c!25090 e!87654)))

(declare-fun res!64657 () Bool)

(assert (=> b!134601 (=> (not res!64657) (not e!87654))))

(assert (=> b!134601 (= res!64657 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!134602 () Bool)

(assert (=> b!134602 (= e!87654 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134602 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!134603 () Bool)

(declare-fun lt!70316 () Unit!4132)

(declare-fun lt!70321 () Unit!4132)

(assert (=> b!134603 (= lt!70316 lt!70321)))

(declare-fun lt!70320 () (_ BitVec 64))

(declare-fun lt!70319 () V!3481)

(declare-fun lt!70315 () ListLongMap!1671)

(declare-fun lt!70318 () (_ BitVec 64))

(assert (=> b!134603 (not (contains!886 (+!163 lt!70315 (tuple2!2585 lt!70318 lt!70319)) lt!70320))))

(assert (=> b!134603 (= lt!70321 (addStillNotContains!62 lt!70315 lt!70318 lt!70319 lt!70320))))

(assert (=> b!134603 (= lt!70320 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134603 (= lt!70319 (get!1478 (select (arr!2249 (_values!2847 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134603 (= lt!70318 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!134603 (= lt!70315 call!14812)))

(assert (=> b!134603 (= e!87656 (+!163 call!14812 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134604 () Bool)

(declare-fun e!87657 () ListLongMap!1671)

(assert (=> b!134604 (= e!87657 e!87656)))

(declare-fun c!25091 () Bool)

(assert (=> b!134604 (= c!25091 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134605 () Bool)

(assert (=> b!134605 (= e!87657 (ListLongMap!1672 Nil!1707))))

(declare-fun d!41513 () Bool)

(assert (=> d!41513 e!87659))

(declare-fun res!64656 () Bool)

(assert (=> d!41513 (=> (not res!64656) (not e!87659))))

(assert (=> d!41513 (= res!64656 (not (contains!886 lt!70317 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41513 (= lt!70317 e!87657)))

(declare-fun c!25092 () Bool)

(assert (=> d!41513 (= c!25092 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!41513 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!41513 (= (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)) lt!70317)))

(declare-fun b!134606 () Bool)

(assert (=> b!134606 (= e!87655 (= lt!70317 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (ite c!24523 (ite c!24530 lt!69098 lt!69102) (extraKeys!2629 newMap!16)) (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun b!134607 () Bool)

(declare-fun res!64658 () Bool)

(assert (=> b!134607 (=> (not res!64658) (not e!87659))))

(assert (=> b!134607 (= res!64658 (not (contains!886 lt!70317 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134608 () Bool)

(assert (=> b!134608 (= e!87658 e!87653)))

(assert (=> b!134608 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64655 () Bool)

(assert (=> b!134608 (= res!64655 (contains!886 lt!70317 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134608 (=> (not res!64655) (not e!87653))))

(assert (= (and d!41513 c!25092) b!134605))

(assert (= (and d!41513 (not c!25092)) b!134604))

(assert (= (and b!134604 c!25091) b!134603))

(assert (= (and b!134604 (not c!25091)) b!134598))

(assert (= (or b!134603 b!134598) bm!14809))

(assert (= (and d!41513 res!64656) b!134607))

(assert (= (and b!134607 res!64658) b!134601))

(assert (= (and b!134601 res!64657) b!134602))

(assert (= (and b!134601 c!25090) b!134608))

(assert (= (and b!134601 (not c!25090)) b!134599))

(assert (= (and b!134608 res!64655) b!134597))

(assert (= (and b!134599 c!25093) b!134606))

(assert (= (and b!134599 (not c!25093)) b!134600))

(declare-fun b_lambda!5995 () Bool)

(assert (=> (not b_lambda!5995) (not b!134597)))

(assert (=> b!134597 t!6164))

(declare-fun b_and!8321 () Bool)

(assert (= b_and!8317 (and (=> t!6164 result!3993) b_and!8321)))

(assert (=> b!134597 t!6166))

(declare-fun b_and!8323 () Bool)

(assert (= b_and!8319 (and (=> t!6166 result!3995) b_and!8323)))

(declare-fun b_lambda!5997 () Bool)

(assert (=> (not b_lambda!5997) (not b!134603)))

(assert (=> b!134603 t!6164))

(declare-fun b_and!8325 () Bool)

(assert (= b_and!8321 (and (=> t!6164 result!3993) b_and!8325)))

(assert (=> b!134603 t!6166))

(declare-fun b_and!8327 () Bool)

(assert (= b_and!8323 (and (=> t!6166 result!3995) b_and!8327)))

(assert (=> b!134602 m!156869))

(assert (=> b!134602 m!156869))

(assert (=> b!134602 m!156871))

(declare-fun m!159583 () Bool)

(assert (=> b!134607 m!159583))

(declare-fun m!159585 () Bool)

(assert (=> b!134603 m!159585))

(declare-fun m!159587 () Bool)

(assert (=> b!134603 m!159587))

(assert (=> b!134603 m!156869))

(assert (=> b!134603 m!159585))

(assert (=> b!134603 m!156135))

(declare-fun m!159589 () Bool)

(assert (=> b!134603 m!159589))

(declare-fun m!159591 () Bool)

(assert (=> b!134603 m!159591))

(declare-fun m!159593 () Bool)

(assert (=> b!134603 m!159593))

(assert (=> b!134603 m!156135))

(declare-fun m!159595 () Bool)

(assert (=> b!134603 m!159595))

(assert (=> b!134603 m!159591))

(declare-fun m!159597 () Bool)

(assert (=> b!134606 m!159597))

(assert (=> b!134608 m!156869))

(assert (=> b!134608 m!156869))

(declare-fun m!159599 () Bool)

(assert (=> b!134608 m!159599))

(declare-fun m!159601 () Bool)

(assert (=> b!134600 m!159601))

(assert (=> bm!14809 m!159597))

(declare-fun m!159603 () Bool)

(assert (=> d!41513 m!159603))

(assert (=> d!41513 m!156183))

(assert (=> b!134604 m!156869))

(assert (=> b!134604 m!156869))

(assert (=> b!134604 m!156871))

(assert (=> b!134597 m!159585))

(assert (=> b!134597 m!156869))

(assert (=> b!134597 m!159585))

(assert (=> b!134597 m!156135))

(assert (=> b!134597 m!159589))

(assert (=> b!134597 m!156135))

(assert (=> b!134597 m!156869))

(declare-fun m!159605 () Bool)

(assert (=> b!134597 m!159605))

(assert (=> bm!14718 d!41513))

(assert (=> d!40977 d!40689))

(assert (=> d!40977 d!40449))

(declare-fun d!41515 () Bool)

(assert (=> d!41515 (isDefined!124 (getValueByKey!170 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!41515 true))

(declare-fun _$12!402 () Unit!4132)

(assert (=> d!41515 (= (choose!826 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) _$12!402)))

(declare-fun bs!5603 () Bool)

(assert (= bs!5603 d!41515))

(assert (=> bs!5603 m!156043))

(assert (=> bs!5603 m!156195))

(assert (=> bs!5603 m!156195))

(assert (=> bs!5603 m!156275))

(assert (=> d!40977 d!41515))

(assert (=> d!40977 d!41167))

(declare-fun b!134609 () Bool)

(declare-fun e!87664 () List!1710)

(assert (=> b!134609 (= e!87664 (insertStrictlySorted!91 (t!6152 (t!6152 (toList!851 lt!69170))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!134610 () Bool)

(declare-fun e!87663 () List!1710)

(declare-fun call!14815 () List!1710)

(assert (=> b!134610 (= e!87663 call!14815)))

(declare-fun b!134611 () Bool)

(declare-fun res!64660 () Bool)

(declare-fun e!87661 () Bool)

(assert (=> b!134611 (=> (not res!64660) (not e!87661))))

(declare-fun lt!70322 () List!1710)

(assert (=> b!134611 (= res!64660 (containsKey!174 lt!70322 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun bm!14810 () Bool)

(declare-fun c!25095 () Bool)

(assert (=> bm!14810 (= call!14815 ($colon$colon!91 e!87664 (ite c!25095 (h!2311 (t!6152 (toList!851 lt!69170))) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun c!25096 () Bool)

(assert (=> bm!14810 (= c!25096 c!25095)))

(declare-fun c!25094 () Bool)

(declare-fun c!25097 () Bool)

(declare-fun b!134612 () Bool)

(assert (=> b!134612 (= e!87664 (ite c!25094 (t!6152 (t!6152 (toList!851 lt!69170))) (ite c!25097 (Cons!1706 (h!2311 (t!6152 (toList!851 lt!69170))) (t!6152 (t!6152 (toList!851 lt!69170)))) Nil!1707)))))

(declare-fun d!41517 () Bool)

(assert (=> d!41517 e!87661))

(declare-fun res!64659 () Bool)

(assert (=> d!41517 (=> (not res!64659) (not e!87661))))

(assert (=> d!41517 (= res!64659 (isStrictlySorted!317 lt!70322))))

(assert (=> d!41517 (= lt!70322 e!87663)))

(assert (=> d!41517 (= c!25095 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69170))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 lt!69170)))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!41517 (isStrictlySorted!317 (t!6152 (toList!851 lt!69170)))))

(assert (=> d!41517 (= (insertStrictlySorted!91 (t!6152 (toList!851 lt!69170)) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!70322)))

(declare-fun b!134613 () Bool)

(declare-fun e!87660 () List!1710)

(assert (=> b!134613 (= e!87663 e!87660)))

(assert (=> b!134613 (= c!25094 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69170))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69170)))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!134614 () Bool)

(declare-fun e!87662 () List!1710)

(declare-fun call!14813 () List!1710)

(assert (=> b!134614 (= e!87662 call!14813)))

(declare-fun b!134615 () Bool)

(declare-fun call!14814 () List!1710)

(assert (=> b!134615 (= e!87660 call!14814)))

(declare-fun b!134616 () Bool)

(assert (=> b!134616 (= e!87661 (contains!889 lt!70322 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun bm!14811 () Bool)

(assert (=> bm!14811 (= call!14814 call!14815)))

(declare-fun bm!14812 () Bool)

(assert (=> bm!14812 (= call!14813 call!14814)))

(declare-fun b!134617 () Bool)

(assert (=> b!134617 (= c!25097 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69170))) (bvsgt (_1!1303 (h!2311 (t!6152 (toList!851 lt!69170)))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> b!134617 (= e!87660 e!87662)))

(declare-fun b!134618 () Bool)

(assert (=> b!134618 (= e!87662 call!14813)))

(assert (= (and d!41517 c!25095) b!134610))

(assert (= (and d!41517 (not c!25095)) b!134613))

(assert (= (and b!134613 c!25094) b!134615))

(assert (= (and b!134613 (not c!25094)) b!134617))

(assert (= (and b!134617 c!25097) b!134618))

(assert (= (and b!134617 (not c!25097)) b!134614))

(assert (= (or b!134618 b!134614) bm!14812))

(assert (= (or b!134615 bm!14812) bm!14811))

(assert (= (or b!134610 bm!14811) bm!14810))

(assert (= (and bm!14810 c!25096) b!134609))

(assert (= (and bm!14810 (not c!25096)) b!134612))

(assert (= (and d!41517 res!64659) b!134611))

(assert (= (and b!134611 res!64660) b!134616))

(declare-fun m!159607 () Bool)

(assert (=> b!134616 m!159607))

(declare-fun m!159609 () Bool)

(assert (=> b!134611 m!159609))

(declare-fun m!159611 () Bool)

(assert (=> b!134609 m!159611))

(declare-fun m!159613 () Bool)

(assert (=> d!41517 m!159613))

(assert (=> d!41517 m!158979))

(declare-fun m!159615 () Bool)

(assert (=> bm!14810 m!159615))

(assert (=> b!133230 d!41517))

(declare-fun d!41519 () Bool)

(assert (=> d!41519 (= (validKeyInArray!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133398 d!41519))

(assert (=> d!40429 d!40431))

(assert (=> d!40429 d!40383))

(declare-fun d!41521 () Bool)

(assert (=> d!41521 (contains!886 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))

(assert (=> d!41521 true))

(declare-fun _$17!56 () Unit!4132)

(assert (=> d!41521 (= (choose!833 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) _$17!56)))

(declare-fun bs!5604 () Bool)

(assert (= bs!5604 d!41521))

(assert (=> bs!5604 m!156041))

(assert (=> bs!5604 m!156041))

(assert (=> bs!5604 m!155841))

(assert (=> bs!5604 m!156545))

(assert (=> d!40429 d!41521))

(assert (=> d!40429 d!40425))

(assert (=> b!133366 d!41415))

(declare-fun lt!70323 () Bool)

(declare-fun d!41523 () Bool)

(assert (=> d!41523 (= lt!70323 (select (content!133 (t!6152 (toList!851 lt!69331))) (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun e!87666 () Bool)

(assert (=> d!41523 (= lt!70323 e!87666)))

(declare-fun res!64661 () Bool)

(assert (=> d!41523 (=> (not res!64661) (not e!87666))))

(assert (=> d!41523 (= res!64661 ((_ is Cons!1706) (t!6152 (toList!851 lt!69331))))))

(assert (=> d!41523 (= (contains!889 (t!6152 (toList!851 lt!69331)) (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!70323)))

(declare-fun b!134619 () Bool)

(declare-fun e!87665 () Bool)

(assert (=> b!134619 (= e!87666 e!87665)))

(declare-fun res!64662 () Bool)

(assert (=> b!134619 (=> res!64662 e!87665)))

(assert (=> b!134619 (= res!64662 (= (h!2311 (t!6152 (toList!851 lt!69331))) (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!134620 () Bool)

(assert (=> b!134620 (= e!87665 (contains!889 (t!6152 (t!6152 (toList!851 lt!69331))) (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!41523 res!64661) b!134619))

(assert (= (and b!134619 (not res!64662)) b!134620))

(declare-fun m!159617 () Bool)

(assert (=> d!41523 m!159617))

(declare-fun m!159619 () Bool)

(assert (=> d!41523 m!159619))

(declare-fun m!159621 () Bool)

(assert (=> b!134620 m!159621))

(assert (=> b!133292 d!41523))

(declare-fun b!134621 () Bool)

(declare-fun e!87667 () (_ BitVec 32))

(declare-fun e!87668 () (_ BitVec 32))

(assert (=> b!134621 (= e!87667 e!87668)))

(declare-fun c!25099 () Bool)

(assert (=> b!134621 (= c!25099 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000)))))

(declare-fun b!134622 () Bool)

(declare-fun call!14816 () (_ BitVec 32))

(assert (=> b!134622 (= e!87668 (bvadd #b00000000000000000000000000000001 call!14816))))

(declare-fun d!41525 () Bool)

(declare-fun lt!70324 () (_ BitVec 32))

(assert (=> d!41525 (and (bvsge lt!70324 #b00000000000000000000000000000000) (bvsle lt!70324 (bvsub (size!2518 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000)))))

(assert (=> d!41525 (= lt!70324 e!87667)))

(declare-fun c!25098 () Bool)

(assert (=> d!41525 (= c!25098 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69440)))))))

(assert (=> d!41525 (and (bvsle #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69440)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2518 (_keys!4612 (_2!1304 lt!69440))) (size!2518 (_keys!4612 (_2!1304 lt!69440)))))))

(assert (=> d!41525 (= (arrayCountValidKeys!0 (_keys!4612 (_2!1304 lt!69440)) #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69440)))) lt!70324)))

(declare-fun b!134623 () Bool)

(assert (=> b!134623 (= e!87668 call!14816)))

(declare-fun b!134624 () Bool)

(assert (=> b!134624 (= e!87667 #b00000000000000000000000000000000)))

(declare-fun bm!14813 () Bool)

(assert (=> bm!14813 (= call!14816 (arrayCountValidKeys!0 (_keys!4612 (_2!1304 lt!69440)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (_2!1304 lt!69440)))))))

(assert (= (and d!41525 c!25098) b!134624))

(assert (= (and d!41525 (not c!25098)) b!134621))

(assert (= (and b!134621 c!25099) b!134622))

(assert (= (and b!134621 (not c!25099)) b!134623))

(assert (= (or b!134622 b!134623) bm!14813))

(declare-fun m!159623 () Bool)

(assert (=> b!134621 m!159623))

(assert (=> b!134621 m!159623))

(declare-fun m!159625 () Bool)

(assert (=> b!134621 m!159625))

(declare-fun m!159627 () Bool)

(assert (=> bm!14813 m!159627))

(assert (=> b!133538 d!41525))

(declare-fun d!41527 () Bool)

(declare-fun e!87669 () Bool)

(assert (=> d!41527 e!87669))

(declare-fun res!64663 () Bool)

(assert (=> d!41527 (=> res!64663 e!87669)))

(declare-fun lt!70326 () Bool)

(assert (=> d!41527 (= res!64663 (not lt!70326))))

(declare-fun lt!70328 () Bool)

(assert (=> d!41527 (= lt!70326 lt!70328)))

(declare-fun lt!70325 () Unit!4132)

(declare-fun e!87670 () Unit!4132)

(assert (=> d!41527 (= lt!70325 e!87670)))

(declare-fun c!25100 () Bool)

(assert (=> d!41527 (= c!25100 lt!70328)))

(assert (=> d!41527 (= lt!70328 (containsKey!174 (toList!851 lt!69815) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))

(assert (=> d!41527 (= (contains!886 lt!69815 (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))) lt!70326)))

(declare-fun b!134625 () Bool)

(declare-fun lt!70327 () Unit!4132)

(assert (=> b!134625 (= e!87670 lt!70327)))

(assert (=> b!134625 (= lt!70327 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69815) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))

(assert (=> b!134625 (isDefined!124 (getValueByKey!170 (toList!851 lt!69815) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))

(declare-fun b!134626 () Bool)

(declare-fun Unit!4217 () Unit!4132)

(assert (=> b!134626 (= e!87670 Unit!4217)))

(declare-fun b!134627 () Bool)

(assert (=> b!134627 (= e!87669 (isDefined!124 (getValueByKey!170 (toList!851 lt!69815) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))))))

(assert (= (and d!41527 c!25100) b!134625))

(assert (= (and d!41527 (not c!25100)) b!134626))

(assert (= (and d!41527 (not res!64663)) b!134627))

(declare-fun m!159629 () Bool)

(assert (=> d!41527 m!159629))

(declare-fun m!159631 () Bool)

(assert (=> b!134625 m!159631))

(assert (=> b!134625 m!157657))

(assert (=> b!134625 m!157657))

(declare-fun m!159633 () Bool)

(assert (=> b!134625 m!159633))

(assert (=> b!134627 m!157657))

(assert (=> b!134627 m!157657))

(assert (=> b!134627 m!159633))

(assert (=> d!40711 d!41527))

(declare-fun c!25101 () Bool)

(declare-fun d!41529 () Bool)

(assert (=> d!41529 (= c!25101 (and ((_ is Cons!1706) lt!69813) (= (_1!1303 (h!2311 lt!69813)) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))))))

(declare-fun e!87671 () Option!176)

(assert (=> d!41529 (= (getValueByKey!170 lt!69813 (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))) e!87671)))

(declare-fun b!134630 () Bool)

(declare-fun e!87672 () Option!176)

(assert (=> b!134630 (= e!87672 (getValueByKey!170 (t!6152 lt!69813) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))

(declare-fun b!134629 () Bool)

(assert (=> b!134629 (= e!87671 e!87672)))

(declare-fun c!25102 () Bool)

(assert (=> b!134629 (= c!25102 (and ((_ is Cons!1706) lt!69813) (not (= (_1!1303 (h!2311 lt!69813)) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))))

(declare-fun b!134628 () Bool)

(assert (=> b!134628 (= e!87671 (Some!175 (_2!1303 (h!2311 lt!69813))))))

(declare-fun b!134631 () Bool)

(assert (=> b!134631 (= e!87672 None!174)))

(assert (= (and d!41529 c!25101) b!134628))

(assert (= (and d!41529 (not c!25101)) b!134629))

(assert (= (and b!134629 c!25102) b!134630))

(assert (= (and b!134629 (not c!25102)) b!134631))

(declare-fun m!159635 () Bool)

(assert (=> b!134630 m!159635))

(assert (=> d!40711 d!41529))

(declare-fun d!41531 () Bool)

(assert (=> d!41531 (= (getValueByKey!170 lt!69813 (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))

(declare-fun lt!70329 () Unit!4132)

(assert (=> d!41531 (= lt!70329 (choose!834 lt!69813 (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))

(declare-fun e!87673 () Bool)

(assert (=> d!41531 e!87673))

(declare-fun res!64664 () Bool)

(assert (=> d!41531 (=> (not res!64664) (not e!87673))))

(assert (=> d!41531 (= res!64664 (isStrictlySorted!317 lt!69813))))

(assert (=> d!41531 (= (lemmaContainsTupThenGetReturnValue!88 lt!69813 (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))) lt!70329)))

(declare-fun b!134632 () Bool)

(declare-fun res!64665 () Bool)

(assert (=> b!134632 (=> (not res!64665) (not e!87673))))

(assert (=> b!134632 (= res!64665 (containsKey!174 lt!69813 (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))

(declare-fun b!134633 () Bool)

(assert (=> b!134633 (= e!87673 (contains!889 lt!69813 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))))))

(assert (= (and d!41531 res!64664) b!134632))

(assert (= (and b!134632 res!64665) b!134633))

(assert (=> d!41531 m!157651))

(declare-fun m!159637 () Bool)

(assert (=> d!41531 m!159637))

(declare-fun m!159639 () Bool)

(assert (=> d!41531 m!159639))

(declare-fun m!159641 () Bool)

(assert (=> b!134632 m!159641))

(declare-fun m!159643 () Bool)

(assert (=> b!134633 m!159643))

(assert (=> d!40711 d!41531))

(declare-fun b!134634 () Bool)

(declare-fun e!87678 () List!1710)

(assert (=> b!134634 (= e!87678 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69236)) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))

(declare-fun b!134635 () Bool)

(declare-fun e!87677 () List!1710)

(declare-fun call!14819 () List!1710)

(assert (=> b!134635 (= e!87677 call!14819)))

(declare-fun b!134636 () Bool)

(declare-fun res!64667 () Bool)

(declare-fun e!87675 () Bool)

(assert (=> b!134636 (=> (not res!64667) (not e!87675))))

(declare-fun lt!70330 () List!1710)

(assert (=> b!134636 (= res!64667 (containsKey!174 lt!70330 (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))

(declare-fun bm!14814 () Bool)

(declare-fun c!25104 () Bool)

(assert (=> bm!14814 (= call!14819 ($colon$colon!91 e!87678 (ite c!25104 (h!2311 (toList!851 lt!69236)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))))

(declare-fun c!25105 () Bool)

(assert (=> bm!14814 (= c!25105 c!25104)))

(declare-fun c!25106 () Bool)

(declare-fun c!25103 () Bool)

(declare-fun b!134637 () Bool)

(assert (=> b!134637 (= e!87678 (ite c!25103 (t!6152 (toList!851 lt!69236)) (ite c!25106 (Cons!1706 (h!2311 (toList!851 lt!69236)) (t!6152 (toList!851 lt!69236))) Nil!1707)))))

(declare-fun d!41533 () Bool)

(assert (=> d!41533 e!87675))

(declare-fun res!64666 () Bool)

(assert (=> d!41533 (=> (not res!64666) (not e!87675))))

(assert (=> d!41533 (= res!64666 (isStrictlySorted!317 lt!70330))))

(assert (=> d!41533 (= lt!70330 e!87677)))

(assert (=> d!41533 (= c!25104 (and ((_ is Cons!1706) (toList!851 lt!69236)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69236))) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))))))

(assert (=> d!41533 (isStrictlySorted!317 (toList!851 lt!69236))))

(assert (=> d!41533 (= (insertStrictlySorted!91 (toList!851 lt!69236) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))) lt!70330)))

(declare-fun b!134638 () Bool)

(declare-fun e!87674 () List!1710)

(assert (=> b!134638 (= e!87677 e!87674)))

(assert (=> b!134638 (= c!25103 (and ((_ is Cons!1706) (toList!851 lt!69236)) (= (_1!1303 (h!2311 (toList!851 lt!69236))) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))))))

(declare-fun b!134639 () Bool)

(declare-fun e!87676 () List!1710)

(declare-fun call!14817 () List!1710)

(assert (=> b!134639 (= e!87676 call!14817)))

(declare-fun b!134640 () Bool)

(declare-fun call!14818 () List!1710)

(assert (=> b!134640 (= e!87674 call!14818)))

(declare-fun b!134641 () Bool)

(assert (=> b!134641 (= e!87675 (contains!889 lt!70330 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))))))

(declare-fun bm!14815 () Bool)

(assert (=> bm!14815 (= call!14818 call!14819)))

(declare-fun bm!14816 () Bool)

(assert (=> bm!14816 (= call!14817 call!14818)))

(declare-fun b!134642 () Bool)

(assert (=> b!134642 (= c!25106 (and ((_ is Cons!1706) (toList!851 lt!69236)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69236))) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))))))

(assert (=> b!134642 (= e!87674 e!87676)))

(declare-fun b!134643 () Bool)

(assert (=> b!134643 (= e!87676 call!14817)))

(assert (= (and d!41533 c!25104) b!134635))

(assert (= (and d!41533 (not c!25104)) b!134638))

(assert (= (and b!134638 c!25103) b!134640))

(assert (= (and b!134638 (not c!25103)) b!134642))

(assert (= (and b!134642 c!25106) b!134643))

(assert (= (and b!134642 (not c!25106)) b!134639))

(assert (= (or b!134643 b!134639) bm!14816))

(assert (= (or b!134640 bm!14816) bm!14815))

(assert (= (or b!134635 bm!14815) bm!14814))

(assert (= (and bm!14814 c!25105) b!134634))

(assert (= (and bm!14814 (not c!25105)) b!134637))

(assert (= (and d!41533 res!64666) b!134636))

(assert (= (and b!134636 res!64667) b!134641))

(declare-fun m!159645 () Bool)

(assert (=> b!134641 m!159645))

(declare-fun m!159647 () Bool)

(assert (=> b!134636 m!159647))

(declare-fun m!159649 () Bool)

(assert (=> b!134634 m!159649))

(declare-fun m!159651 () Bool)

(assert (=> d!41533 m!159651))

(declare-fun m!159653 () Bool)

(assert (=> d!41533 m!159653))

(declare-fun m!159655 () Bool)

(assert (=> bm!14814 m!159655))

(assert (=> d!40711 d!41533))

(declare-fun d!41535 () Bool)

(declare-fun e!87679 () Bool)

(assert (=> d!41535 e!87679))

(declare-fun res!64668 () Bool)

(assert (=> d!41535 (=> res!64668 e!87679)))

(declare-fun lt!70332 () Bool)

(assert (=> d!41535 (= res!64668 (not lt!70332))))

(declare-fun lt!70334 () Bool)

(assert (=> d!41535 (= lt!70332 lt!70334)))

(declare-fun lt!70331 () Unit!4132)

(declare-fun e!87680 () Unit!4132)

(assert (=> d!41535 (= lt!70331 e!87680)))

(declare-fun c!25107 () Bool)

(assert (=> d!41535 (= c!25107 lt!70334)))

(assert (=> d!41535 (= lt!70334 (containsKey!174 (toList!851 lt!70013) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41535 (= (contains!886 lt!70013 (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) lt!70332)))

(declare-fun b!134644 () Bool)

(declare-fun lt!70333 () Unit!4132)

(assert (=> b!134644 (= e!87680 lt!70333)))

(assert (=> b!134644 (= lt!70333 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!70013) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))

(assert (=> b!134644 (isDefined!124 (getValueByKey!170 (toList!851 lt!70013) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134645 () Bool)

(declare-fun Unit!4218 () Unit!4132)

(assert (=> b!134645 (= e!87680 Unit!4218)))

(declare-fun b!134646 () Bool)

(assert (=> b!134646 (= e!87679 (isDefined!124 (getValueByKey!170 (toList!851 lt!70013) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!41535 c!25107) b!134644))

(assert (= (and d!41535 (not c!25107)) b!134645))

(assert (= (and d!41535 (not res!64668)) b!134646))

(declare-fun m!159657 () Bool)

(assert (=> d!41535 m!159657))

(declare-fun m!159659 () Bool)

(assert (=> b!134644 m!159659))

(assert (=> b!134644 m!158319))

(assert (=> b!134644 m!158319))

(declare-fun m!159661 () Bool)

(assert (=> b!134644 m!159661))

(assert (=> b!134646 m!158319))

(assert (=> b!134646 m!158319))

(assert (=> b!134646 m!159661))

(assert (=> d!40929 d!41535))

(declare-fun c!25108 () Bool)

(declare-fun d!41537 () Bool)

(assert (=> d!41537 (= c!25108 (and ((_ is Cons!1706) lt!70011) (= (_1!1303 (h!2311 lt!70011)) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))))))

(declare-fun e!87681 () Option!176)

(assert (=> d!41537 (= (getValueByKey!170 lt!70011 (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) e!87681)))

(declare-fun b!134649 () Bool)

(declare-fun e!87682 () Option!176)

(assert (=> b!134649 (= e!87682 (getValueByKey!170 (t!6152 lt!70011) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134648 () Bool)

(assert (=> b!134648 (= e!87681 e!87682)))

(declare-fun c!25109 () Bool)

(assert (=> b!134648 (= c!25109 (and ((_ is Cons!1706) lt!70011) (not (= (_1!1303 (h!2311 lt!70011)) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!134647 () Bool)

(assert (=> b!134647 (= e!87681 (Some!175 (_2!1303 (h!2311 lt!70011))))))

(declare-fun b!134650 () Bool)

(assert (=> b!134650 (= e!87682 None!174)))

(assert (= (and d!41537 c!25108) b!134647))

(assert (= (and d!41537 (not c!25108)) b!134648))

(assert (= (and b!134648 c!25109) b!134649))

(assert (= (and b!134648 (not c!25109)) b!134650))

(declare-fun m!159663 () Bool)

(assert (=> b!134649 m!159663))

(assert (=> d!40929 d!41537))

(declare-fun d!41539 () Bool)

(assert (=> d!41539 (= (getValueByKey!170 lt!70011 (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70335 () Unit!4132)

(assert (=> d!41539 (= lt!70335 (choose!834 lt!70011 (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))

(declare-fun e!87683 () Bool)

(assert (=> d!41539 e!87683))

(declare-fun res!64669 () Bool)

(assert (=> d!41539 (=> (not res!64669) (not e!87683))))

(assert (=> d!41539 (= res!64669 (isStrictlySorted!317 lt!70011))))

(assert (=> d!41539 (= (lemmaContainsTupThenGetReturnValue!88 lt!70011 (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) lt!70335)))

(declare-fun b!134651 () Bool)

(declare-fun res!64670 () Bool)

(assert (=> b!134651 (=> (not res!64670) (not e!87683))))

(assert (=> b!134651 (= res!64670 (containsKey!174 lt!70011 (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134652 () Bool)

(assert (=> b!134652 (= e!87683 (contains!889 lt!70011 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!41539 res!64669) b!134651))

(assert (= (and b!134651 res!64670) b!134652))

(assert (=> d!41539 m!158313))

(declare-fun m!159665 () Bool)

(assert (=> d!41539 m!159665))

(declare-fun m!159667 () Bool)

(assert (=> d!41539 m!159667))

(declare-fun m!159669 () Bool)

(assert (=> b!134651 m!159669))

(declare-fun m!159671 () Bool)

(assert (=> b!134652 m!159671))

(assert (=> d!40929 d!41539))

(declare-fun e!87688 () List!1710)

(declare-fun b!134653 () Bool)

(assert (=> b!134653 (= e!87688 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69352)) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134654 () Bool)

(declare-fun e!87687 () List!1710)

(declare-fun call!14822 () List!1710)

(assert (=> b!134654 (= e!87687 call!14822)))

(declare-fun b!134655 () Bool)

(declare-fun res!64672 () Bool)

(declare-fun e!87685 () Bool)

(assert (=> b!134655 (=> (not res!64672) (not e!87685))))

(declare-fun lt!70336 () List!1710)

(assert (=> b!134655 (= res!64672 (containsKey!174 lt!70336 (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))

(declare-fun bm!14817 () Bool)

(declare-fun c!25111 () Bool)

(assert (=> bm!14817 (= call!14822 ($colon$colon!91 e!87688 (ite c!25111 (h!2311 (toList!851 lt!69352)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))))

(declare-fun c!25112 () Bool)

(assert (=> bm!14817 (= c!25112 c!25111)))

(declare-fun c!25113 () Bool)

(declare-fun b!134656 () Bool)

(declare-fun c!25110 () Bool)

(assert (=> b!134656 (= e!87688 (ite c!25110 (t!6152 (toList!851 lt!69352)) (ite c!25113 (Cons!1706 (h!2311 (toList!851 lt!69352)) (t!6152 (toList!851 lt!69352))) Nil!1707)))))

(declare-fun d!41541 () Bool)

(assert (=> d!41541 e!87685))

(declare-fun res!64671 () Bool)

(assert (=> d!41541 (=> (not res!64671) (not e!87685))))

(assert (=> d!41541 (= res!64671 (isStrictlySorted!317 lt!70336))))

(assert (=> d!41541 (= lt!70336 e!87687)))

(assert (=> d!41541 (= c!25111 (and ((_ is Cons!1706) (toList!851 lt!69352)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69352))) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))))))

(assert (=> d!41541 (isStrictlySorted!317 (toList!851 lt!69352))))

(assert (=> d!41541 (= (insertStrictlySorted!91 (toList!851 lt!69352) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) lt!70336)))

(declare-fun b!134657 () Bool)

(declare-fun e!87684 () List!1710)

(assert (=> b!134657 (= e!87687 e!87684)))

(assert (=> b!134657 (= c!25110 (and ((_ is Cons!1706) (toList!851 lt!69352)) (= (_1!1303 (h!2311 (toList!851 lt!69352))) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134658 () Bool)

(declare-fun e!87686 () List!1710)

(declare-fun call!14820 () List!1710)

(assert (=> b!134658 (= e!87686 call!14820)))

(declare-fun b!134659 () Bool)

(declare-fun call!14821 () List!1710)

(assert (=> b!134659 (= e!87684 call!14821)))

(declare-fun b!134660 () Bool)

(assert (=> b!134660 (= e!87685 (contains!889 lt!70336 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))))))

(declare-fun bm!14818 () Bool)

(assert (=> bm!14818 (= call!14821 call!14822)))

(declare-fun bm!14819 () Bool)

(assert (=> bm!14819 (= call!14820 call!14821)))

(declare-fun b!134661 () Bool)

(assert (=> b!134661 (= c!25113 (and ((_ is Cons!1706) (toList!851 lt!69352)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69352))) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))))))

(assert (=> b!134661 (= e!87684 e!87686)))

(declare-fun b!134662 () Bool)

(assert (=> b!134662 (= e!87686 call!14820)))

(assert (= (and d!41541 c!25111) b!134654))

(assert (= (and d!41541 (not c!25111)) b!134657))

(assert (= (and b!134657 c!25110) b!134659))

(assert (= (and b!134657 (not c!25110)) b!134661))

(assert (= (and b!134661 c!25113) b!134662))

(assert (= (and b!134661 (not c!25113)) b!134658))

(assert (= (or b!134662 b!134658) bm!14819))

(assert (= (or b!134659 bm!14819) bm!14818))

(assert (= (or b!134654 bm!14818) bm!14817))

(assert (= (and bm!14817 c!25112) b!134653))

(assert (= (and bm!14817 (not c!25112)) b!134656))

(assert (= (and d!41541 res!64671) b!134655))

(assert (= (and b!134655 res!64672) b!134660))

(declare-fun m!159673 () Bool)

(assert (=> b!134660 m!159673))

(declare-fun m!159675 () Bool)

(assert (=> b!134655 m!159675))

(declare-fun m!159677 () Bool)

(assert (=> b!134653 m!159677))

(declare-fun m!159679 () Bool)

(assert (=> d!41541 m!159679))

(declare-fun m!159681 () Bool)

(assert (=> d!41541 m!159681))

(declare-fun m!159683 () Bool)

(assert (=> bm!14817 m!159683))

(assert (=> d!40929 d!41541))

(assert (=> d!40799 d!40525))

(assert (=> d!40799 d!40527))

(declare-fun d!41543 () Bool)

(assert (=> d!41543 (isDefined!124 (getValueByKey!170 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> d!41543 true))

(declare-fun _$12!403 () Unit!4132)

(assert (=> d!41543 (= (choose!826 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) _$12!403)))

(declare-fun bs!5605 () Bool)

(assert (= bs!5605 d!41543))

(assert (=> bs!5605 m!155841))

(assert (=> bs!5605 m!156189))

(assert (=> bs!5605 m!156189))

(assert (=> bs!5605 m!156191))

(assert (=> d!40799 d!41543))

(declare-fun d!41545 () Bool)

(declare-fun res!64673 () Bool)

(declare-fun e!87689 () Bool)

(assert (=> d!41545 (=> res!64673 e!87689)))

(assert (=> d!41545 (= res!64673 (or ((_ is Nil!1707) (toList!851 call!14583)) ((_ is Nil!1707) (t!6152 (toList!851 call!14583)))))))

(assert (=> d!41545 (= (isStrictlySorted!317 (toList!851 call!14583)) e!87689)))

(declare-fun b!134663 () Bool)

(declare-fun e!87690 () Bool)

(assert (=> b!134663 (= e!87689 e!87690)))

(declare-fun res!64674 () Bool)

(assert (=> b!134663 (=> (not res!64674) (not e!87690))))

(assert (=> b!134663 (= res!64674 (bvslt (_1!1303 (h!2311 (toList!851 call!14583))) (_1!1303 (h!2311 (t!6152 (toList!851 call!14583))))))))

(declare-fun b!134664 () Bool)

(assert (=> b!134664 (= e!87690 (isStrictlySorted!317 (t!6152 (toList!851 call!14583))))))

(assert (= (and d!41545 (not res!64673)) b!134663))

(assert (= (and b!134663 res!64674) b!134664))

(declare-fun m!159685 () Bool)

(assert (=> b!134664 m!159685))

(assert (=> d!40799 d!41545))

(declare-fun d!41547 () Bool)

(declare-fun res!64675 () Bool)

(declare-fun e!87691 () Bool)

(assert (=> d!41547 (=> res!64675 e!87691)))

(assert (=> d!41547 (= res!64675 (or ((_ is Nil!1707) lt!69990) ((_ is Nil!1707) (t!6152 lt!69990))))))

(assert (=> d!41547 (= (isStrictlySorted!317 lt!69990) e!87691)))

(declare-fun b!134665 () Bool)

(declare-fun e!87692 () Bool)

(assert (=> b!134665 (= e!87691 e!87692)))

(declare-fun res!64676 () Bool)

(assert (=> b!134665 (=> (not res!64676) (not e!87692))))

(assert (=> b!134665 (= res!64676 (bvslt (_1!1303 (h!2311 lt!69990)) (_1!1303 (h!2311 (t!6152 lt!69990)))))))

(declare-fun b!134666 () Bool)

(assert (=> b!134666 (= e!87692 (isStrictlySorted!317 (t!6152 lt!69990)))))

(assert (= (and d!41547 (not res!64675)) b!134665))

(assert (= (and b!134665 res!64676) b!134666))

(declare-fun m!159687 () Bool)

(assert (=> b!134666 m!159687))

(assert (=> d!40893 d!41547))

(declare-fun d!41549 () Bool)

(declare-fun res!64677 () Bool)

(declare-fun e!87693 () Bool)

(assert (=> d!41549 (=> res!64677 e!87693)))

(assert (=> d!41549 (= res!64677 (or ((_ is Nil!1707) (toList!851 lt!69172)) ((_ is Nil!1707) (t!6152 (toList!851 lt!69172)))))))

(assert (=> d!41549 (= (isStrictlySorted!317 (toList!851 lt!69172)) e!87693)))

(declare-fun b!134667 () Bool)

(declare-fun e!87694 () Bool)

(assert (=> b!134667 (= e!87693 e!87694)))

(declare-fun res!64678 () Bool)

(assert (=> b!134667 (=> (not res!64678) (not e!87694))))

(assert (=> b!134667 (= res!64678 (bvslt (_1!1303 (h!2311 (toList!851 lt!69172))) (_1!1303 (h!2311 (t!6152 (toList!851 lt!69172))))))))

(declare-fun b!134668 () Bool)

(assert (=> b!134668 (= e!87694 (isStrictlySorted!317 (t!6152 (toList!851 lt!69172))))))

(assert (= (and d!41549 (not res!64677)) b!134667))

(assert (= (and b!134667 res!64678) b!134668))

(declare-fun m!159689 () Bool)

(assert (=> b!134668 m!159689))

(assert (=> d!40893 d!41549))

(declare-fun d!41551 () Bool)

(declare-fun c!25114 () Bool)

(assert (=> d!41551 (= c!25114 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69186))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87695 () Option!176)

(assert (=> d!41551 (= (getValueByKey!170 (t!6152 (toList!851 lt!69186)) #b0000000000000000000000000000000000000000000000000000000000000000) e!87695)))

(declare-fun b!134671 () Bool)

(declare-fun e!87696 () Option!176)

(assert (=> b!134671 (= e!87696 (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69186))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134670 () Bool)

(assert (=> b!134670 (= e!87695 e!87696)))

(declare-fun c!25115 () Bool)

(assert (=> b!134670 (= c!25115 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69186))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186)))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134669 () Bool)

(assert (=> b!134669 (= e!87695 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 lt!69186))))))))

(declare-fun b!134672 () Bool)

(assert (=> b!134672 (= e!87696 None!174)))

(assert (= (and d!41551 c!25114) b!134669))

(assert (= (and d!41551 (not c!25114)) b!134670))

(assert (= (and b!134670 c!25115) b!134671))

(assert (= (and b!134670 (not c!25115)) b!134672))

(declare-fun m!159691 () Bool)

(assert (=> b!134671 m!159691))

(assert (=> b!133188 d!41551))

(declare-fun d!41553 () Bool)

(assert (=> d!41553 (= (apply!116 lt!69923 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69923) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5606 () Bool)

(assert (= bs!5606 d!41553))

(declare-fun m!159693 () Bool)

(assert (=> bs!5606 m!159693))

(assert (=> bs!5606 m!159693))

(declare-fun m!159695 () Bool)

(assert (=> bs!5606 m!159695))

(assert (=> b!133760 d!41553))

(declare-fun d!41555 () Bool)

(assert (=> d!41555 (= (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69477 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69488)) (v!3198 (getValueByKey!170 (toList!851 (+!163 lt!69477 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69488)))))

(assert (=> d!40589 d!41555))

(declare-fun c!25116 () Bool)

(declare-fun d!41557 () Bool)

(assert (=> d!41557 (= c!25116 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69477 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69477 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))) lt!69488)))))

(declare-fun e!87697 () Option!176)

(assert (=> d!41557 (= (getValueByKey!170 (toList!851 (+!163 lt!69477 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69488) e!87697)))

(declare-fun e!87698 () Option!176)

(declare-fun b!134675 () Bool)

(assert (=> b!134675 (= e!87698 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69477 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) lt!69488))))

(declare-fun b!134674 () Bool)

(assert (=> b!134674 (= e!87697 e!87698)))

(declare-fun c!25117 () Bool)

(assert (=> b!134674 (= c!25117 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69477 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69477 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))) lt!69488))))))

(declare-fun b!134673 () Bool)

(assert (=> b!134673 (= e!87697 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69477 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))))

(declare-fun b!134676 () Bool)

(assert (=> b!134676 (= e!87698 None!174)))

(assert (= (and d!41557 c!25116) b!134673))

(assert (= (and d!41557 (not c!25116)) b!134674))

(assert (= (and b!134674 c!25117) b!134675))

(assert (= (and b!134674 (not c!25117)) b!134676))

(declare-fun m!159697 () Bool)

(assert (=> b!134675 m!159697))

(assert (=> d!40589 d!41557))

(declare-fun d!41559 () Bool)

(declare-fun lt!70337 () Bool)

(assert (=> d!41559 (= lt!70337 (select (content!133 (toList!851 lt!69793)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun e!87700 () Bool)

(assert (=> d!41559 (= lt!70337 e!87700)))

(declare-fun res!64679 () Bool)

(assert (=> d!41559 (=> (not res!64679) (not e!87700))))

(assert (=> d!41559 (= res!64679 ((_ is Cons!1706) (toList!851 lt!69793)))))

(assert (=> d!41559 (= (contains!889 (toList!851 lt!69793) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70337)))

(declare-fun b!134677 () Bool)

(declare-fun e!87699 () Bool)

(assert (=> b!134677 (= e!87700 e!87699)))

(declare-fun res!64680 () Bool)

(assert (=> b!134677 (=> res!64680 e!87699)))

(assert (=> b!134677 (= res!64680 (= (h!2311 (toList!851 lt!69793)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun b!134678 () Bool)

(assert (=> b!134678 (= e!87699 (contains!889 (t!6152 (toList!851 lt!69793)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!41559 res!64679) b!134677))

(assert (= (and b!134677 (not res!64680)) b!134678))

(declare-fun m!159699 () Bool)

(assert (=> d!41559 m!159699))

(declare-fun m!159701 () Bool)

(assert (=> d!41559 m!159701))

(declare-fun m!159703 () Bool)

(assert (=> b!134678 m!159703))

(assert (=> b!133587 d!41559))

(declare-fun d!41561 () Bool)

(assert (=> d!41561 (isDefined!124 (getValueByKey!170 (toList!851 lt!69170) lt!69174))))

(declare-fun lt!70338 () Unit!4132)

(assert (=> d!41561 (= lt!70338 (choose!826 (toList!851 lt!69170) lt!69174))))

(declare-fun e!87701 () Bool)

(assert (=> d!41561 e!87701))

(declare-fun res!64681 () Bool)

(assert (=> d!41561 (=> (not res!64681) (not e!87701))))

(assert (=> d!41561 (= res!64681 (isStrictlySorted!317 (toList!851 lt!69170)))))

(assert (=> d!41561 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69170) lt!69174) lt!70338)))

(declare-fun b!134679 () Bool)

(assert (=> b!134679 (= e!87701 (containsKey!174 (toList!851 lt!69170) lt!69174))))

(assert (= (and d!41561 res!64681) b!134679))

(assert (=> d!41561 m!156455))

(assert (=> d!41561 m!156455))

(assert (=> d!41561 m!158099))

(declare-fun m!159705 () Bool)

(assert (=> d!41561 m!159705))

(assert (=> d!41561 m!156835))

(assert (=> b!134679 m!158095))

(assert (=> b!133823 d!41561))

(declare-fun d!41563 () Bool)

(assert (=> d!41563 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69170) lt!69174)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69170) lt!69174))))))

(declare-fun bs!5607 () Bool)

(assert (= bs!5607 d!41563))

(assert (=> bs!5607 m!156455))

(declare-fun m!159707 () Bool)

(assert (=> bs!5607 m!159707))

(assert (=> b!133823 d!41563))

(assert (=> b!133823 d!40623))

(declare-fun d!41565 () Bool)

(declare-fun res!64682 () Bool)

(declare-fun e!87702 () Bool)

(assert (=> d!41565 (=> res!64682 e!87702)))

(assert (=> d!41565 (= res!64682 (or ((_ is Nil!1707) lt!69902) ((_ is Nil!1707) (t!6152 lt!69902))))))

(assert (=> d!41565 (= (isStrictlySorted!317 lt!69902) e!87702)))

(declare-fun b!134680 () Bool)

(declare-fun e!87703 () Bool)

(assert (=> b!134680 (= e!87702 e!87703)))

(declare-fun res!64683 () Bool)

(assert (=> b!134680 (=> (not res!64683) (not e!87703))))

(assert (=> b!134680 (= res!64683 (bvslt (_1!1303 (h!2311 lt!69902)) (_1!1303 (h!2311 (t!6152 lt!69902)))))))

(declare-fun b!134681 () Bool)

(assert (=> b!134681 (= e!87703 (isStrictlySorted!317 (t!6152 lt!69902)))))

(assert (= (and d!41565 (not res!64682)) b!134680))

(assert (= (and b!134680 res!64683) b!134681))

(declare-fun m!159709 () Bool)

(assert (=> b!134681 m!159709))

(assert (=> d!40819 d!41565))

(declare-fun d!41567 () Bool)

(declare-fun res!64684 () Bool)

(declare-fun e!87704 () Bool)

(assert (=> d!41567 (=> res!64684 e!87704)))

(assert (=> d!41567 (= res!64684 (or ((_ is Nil!1707) (toList!851 call!14585)) ((_ is Nil!1707) (t!6152 (toList!851 call!14585)))))))

(assert (=> d!41567 (= (isStrictlySorted!317 (toList!851 call!14585)) e!87704)))

(declare-fun b!134682 () Bool)

(declare-fun e!87705 () Bool)

(assert (=> b!134682 (= e!87704 e!87705)))

(declare-fun res!64685 () Bool)

(assert (=> b!134682 (=> (not res!64685) (not e!87705))))

(assert (=> b!134682 (= res!64685 (bvslt (_1!1303 (h!2311 (toList!851 call!14585))) (_1!1303 (h!2311 (t!6152 (toList!851 call!14585))))))))

(declare-fun b!134683 () Bool)

(assert (=> b!134683 (= e!87705 (isStrictlySorted!317 (t!6152 (toList!851 call!14585))))))

(assert (= (and d!41567 (not res!64684)) b!134682))

(assert (= (and b!134682 res!64685) b!134683))

(declare-fun m!159711 () Bool)

(assert (=> b!134683 m!159711))

(assert (=> d!40819 d!41567))

(declare-fun d!41569 () Bool)

(assert (=> d!41569 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69301) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69301) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5608 () Bool)

(assert (= bs!5608 d!41569))

(assert (=> bs!5608 m!156949))

(declare-fun m!159713 () Bool)

(assert (=> bs!5608 m!159713))

(assert (=> b!133290 d!41569))

(declare-fun d!41571 () Bool)

(declare-fun c!25118 () Bool)

(assert (=> d!41571 (= c!25118 (and ((_ is Cons!1706) (toList!851 lt!69301)) (= (_1!1303 (h!2311 (toList!851 lt!69301))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87706 () Option!176)

(assert (=> d!41571 (= (getValueByKey!170 (toList!851 lt!69301) #b0000000000000000000000000000000000000000000000000000000000000000) e!87706)))

(declare-fun b!134686 () Bool)

(declare-fun e!87707 () Option!176)

(assert (=> b!134686 (= e!87707 (getValueByKey!170 (t!6152 (toList!851 lt!69301)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134685 () Bool)

(assert (=> b!134685 (= e!87706 e!87707)))

(declare-fun c!25119 () Bool)

(assert (=> b!134685 (= c!25119 (and ((_ is Cons!1706) (toList!851 lt!69301)) (not (= (_1!1303 (h!2311 (toList!851 lt!69301))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134684 () Bool)

(assert (=> b!134684 (= e!87706 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69301)))))))

(declare-fun b!134687 () Bool)

(assert (=> b!134687 (= e!87707 None!174)))

(assert (= (and d!41571 c!25118) b!134684))

(assert (= (and d!41571 (not c!25118)) b!134685))

(assert (= (and b!134685 c!25119) b!134686))

(assert (= (and b!134685 (not c!25119)) b!134687))

(declare-fun m!159715 () Bool)

(assert (=> b!134686 m!159715))

(assert (=> b!133290 d!41571))

(declare-fun d!41573 () Bool)

(declare-fun e!87708 () Bool)

(assert (=> d!41573 e!87708))

(declare-fun res!64686 () Bool)

(assert (=> d!41573 (=> res!64686 e!87708)))

(declare-fun lt!70340 () Bool)

(assert (=> d!41573 (= res!64686 (not lt!70340))))

(declare-fun lt!70342 () Bool)

(assert (=> d!41573 (= lt!70340 lt!70342)))

(declare-fun lt!70339 () Unit!4132)

(declare-fun e!87709 () Unit!4132)

(assert (=> d!41573 (= lt!70339 e!87709)))

(declare-fun c!25120 () Bool)

(assert (=> d!41573 (= c!25120 lt!70342)))

(assert (=> d!41573 (= lt!70342 (containsKey!174 (toList!851 lt!69696) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!41573 (= (contains!886 lt!69696 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!70340)))

(declare-fun b!134688 () Bool)

(declare-fun lt!70341 () Unit!4132)

(assert (=> b!134688 (= e!87709 lt!70341)))

(assert (=> b!134688 (= lt!70341 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69696) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!134688 (isDefined!124 (getValueByKey!170 (toList!851 lt!69696) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!134689 () Bool)

(declare-fun Unit!4219 () Unit!4132)

(assert (=> b!134689 (= e!87709 Unit!4219)))

(declare-fun b!134690 () Bool)

(assert (=> b!134690 (= e!87708 (isDefined!124 (getValueByKey!170 (toList!851 lt!69696) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!41573 c!25120) b!134688))

(assert (= (and d!41573 (not c!25120)) b!134689))

(assert (= (and d!41573 (not res!64686)) b!134690))

(assert (=> d!41573 m!157243))

(declare-fun m!159717 () Bool)

(assert (=> d!41573 m!159717))

(assert (=> b!134688 m!157243))

(declare-fun m!159719 () Bool)

(assert (=> b!134688 m!159719))

(assert (=> b!134688 m!157243))

(assert (=> b!134688 m!158595))

(assert (=> b!134688 m!158595))

(declare-fun m!159721 () Bool)

(assert (=> b!134688 m!159721))

(assert (=> b!134690 m!157243))

(assert (=> b!134690 m!158595))

(assert (=> b!134690 m!158595))

(assert (=> b!134690 m!159721))

(assert (=> b!133473 d!41573))

(assert (=> d!40707 d!40711))

(assert (=> d!40707 d!40695))

(assert (=> d!40707 d!40697))

(declare-fun d!41575 () Bool)

(declare-fun e!87710 () Bool)

(assert (=> d!41575 e!87710))

(declare-fun res!64687 () Bool)

(assert (=> d!41575 (=> res!64687 e!87710)))

(declare-fun lt!70344 () Bool)

(assert (=> d!41575 (= res!64687 (not lt!70344))))

(declare-fun lt!70346 () Bool)

(assert (=> d!41575 (= lt!70344 lt!70346)))

(declare-fun lt!70343 () Unit!4132)

(declare-fun e!87711 () Unit!4132)

(assert (=> d!41575 (= lt!70343 e!87711)))

(declare-fun c!25121 () Bool)

(assert (=> d!41575 (= c!25121 lt!70346)))

(assert (=> d!41575 (= lt!70346 (containsKey!174 (toList!851 lt!69236) lt!69241))))

(assert (=> d!41575 (= (contains!886 lt!69236 lt!69241) lt!70344)))

(declare-fun b!134691 () Bool)

(declare-fun lt!70345 () Unit!4132)

(assert (=> b!134691 (= e!87711 lt!70345)))

(assert (=> b!134691 (= lt!70345 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69236) lt!69241))))

(assert (=> b!134691 (isDefined!124 (getValueByKey!170 (toList!851 lt!69236) lt!69241))))

(declare-fun b!134692 () Bool)

(declare-fun Unit!4220 () Unit!4132)

(assert (=> b!134692 (= e!87711 Unit!4220)))

(declare-fun b!134693 () Bool)

(assert (=> b!134693 (= e!87710 (isDefined!124 (getValueByKey!170 (toList!851 lt!69236) lt!69241)))))

(assert (= (and d!41575 c!25121) b!134691))

(assert (= (and d!41575 (not c!25121)) b!134692))

(assert (= (and d!41575 (not res!64687)) b!134693))

(declare-fun m!159723 () Bool)

(assert (=> d!41575 m!159723))

(declare-fun m!159725 () Bool)

(assert (=> b!134691 m!159725))

(assert (=> b!134691 m!157605))

(assert (=> b!134691 m!157605))

(declare-fun m!159727 () Bool)

(assert (=> b!134691 m!159727))

(assert (=> b!134693 m!157605))

(assert (=> b!134693 m!157605))

(assert (=> b!134693 m!159727))

(assert (=> d!40707 d!41575))

(declare-fun d!41577 () Bool)

(assert (=> d!41577 (= (apply!116 (+!163 lt!69236 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))) lt!69241) (apply!116 lt!69236 lt!69241))))

(assert (=> d!41577 true))

(declare-fun _$34!982 () Unit!4132)

(assert (=> d!41577 (= (choose!828 lt!69236 lt!69253 (minValue!2719 newMap!16) lt!69241) _$34!982)))

(declare-fun bs!5609 () Bool)

(assert (= bs!5609 d!41577))

(assert (=> bs!5609 m!156241))

(assert (=> bs!5609 m!156241))

(assert (=> bs!5609 m!156243))

(assert (=> bs!5609 m!156251))

(assert (=> d!40707 d!41577))

(declare-fun d!41579 () Bool)

(assert (=> d!41579 (= (get!1481 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133191 d!41579))

(declare-fun d!41581 () Bool)

(declare-fun lt!70347 () Bool)

(assert (=> d!41581 (= lt!70347 (select (content!133 lt!69606) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87713 () Bool)

(assert (=> d!41581 (= lt!70347 e!87713)))

(declare-fun res!64688 () Bool)

(assert (=> d!41581 (=> (not res!64688) (not e!87713))))

(assert (=> d!41581 (= res!64688 ((_ is Cons!1706) lt!69606))))

(assert (=> d!41581 (= (contains!889 lt!69606 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!70347)))

(declare-fun b!134694 () Bool)

(declare-fun e!87712 () Bool)

(assert (=> b!134694 (= e!87713 e!87712)))

(declare-fun res!64689 () Bool)

(assert (=> b!134694 (=> res!64689 e!87712)))

(assert (=> b!134694 (= res!64689 (= (h!2311 lt!69606) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!134695 () Bool)

(assert (=> b!134695 (= e!87712 (contains!889 (t!6152 lt!69606) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!41581 res!64688) b!134694))

(assert (= (and b!134694 (not res!64689)) b!134695))

(declare-fun m!159729 () Bool)

(assert (=> d!41581 m!159729))

(declare-fun m!159731 () Bool)

(assert (=> d!41581 m!159731))

(declare-fun m!159733 () Bool)

(assert (=> b!134695 m!159733))

(assert (=> b!133328 d!41581))

(declare-fun d!41583 () Bool)

(declare-fun c!25122 () Bool)

(assert (=> d!41583 (= c!25122 (and ((_ is Cons!1706) (toList!851 lt!69905)) (= (_1!1303 (h!2311 (toList!851 lt!69905))) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87714 () Option!176)

(assert (=> d!41583 (= (getValueByKey!170 (toList!851 lt!69905) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87714)))

(declare-fun b!134698 () Bool)

(declare-fun e!87715 () Option!176)

(assert (=> b!134698 (= e!87715 (getValueByKey!170 (t!6152 (toList!851 lt!69905)) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134697 () Bool)

(assert (=> b!134697 (= e!87714 e!87715)))

(declare-fun c!25123 () Bool)

(assert (=> b!134697 (= c!25123 (and ((_ is Cons!1706) (toList!851 lt!69905)) (not (= (_1!1303 (h!2311 (toList!851 lt!69905))) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134696 () Bool)

(assert (=> b!134696 (= e!87714 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69905)))))))

(declare-fun b!134699 () Bool)

(assert (=> b!134699 (= e!87715 None!174)))

(assert (= (and d!41583 c!25122) b!134696))

(assert (= (and d!41583 (not c!25122)) b!134697))

(assert (= (and b!134697 c!25123) b!134698))

(assert (= (and b!134697 (not c!25123)) b!134699))

(declare-fun m!159735 () Bool)

(assert (=> b!134698 m!159735))

(assert (=> b!133751 d!41583))

(declare-fun lt!70348 () Bool)

(declare-fun d!41585 () Bool)

(assert (=> d!41585 (= lt!70348 (select (content!133 lt!69870) (tuple2!2585 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun e!87717 () Bool)

(assert (=> d!41585 (= lt!70348 e!87717)))

(declare-fun res!64690 () Bool)

(assert (=> d!41585 (=> (not res!64690) (not e!87717))))

(assert (=> d!41585 (= res!64690 ((_ is Cons!1706) lt!69870))))

(assert (=> d!41585 (= (contains!889 lt!69870 (tuple2!2585 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!70348)))

(declare-fun b!134700 () Bool)

(declare-fun e!87716 () Bool)

(assert (=> b!134700 (= e!87717 e!87716)))

(declare-fun res!64691 () Bool)

(assert (=> b!134700 (=> res!64691 e!87716)))

(assert (=> b!134700 (= res!64691 (= (h!2311 lt!69870) (tuple2!2585 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!134701 () Bool)

(assert (=> b!134701 (= e!87716 (contains!889 (t!6152 lt!69870) (tuple2!2585 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(assert (= (and d!41585 res!64690) b!134700))

(assert (= (and b!134700 (not res!64691)) b!134701))

(declare-fun m!159737 () Bool)

(assert (=> d!41585 m!159737))

(declare-fun m!159739 () Bool)

(assert (=> d!41585 m!159739))

(declare-fun m!159741 () Bool)

(assert (=> b!134701 m!159741))

(assert (=> b!133660 d!41585))

(declare-fun d!41587 () Bool)

(declare-fun res!64692 () Bool)

(declare-fun e!87718 () Bool)

(assert (=> d!41587 (=> res!64692 e!87718)))

(assert (=> d!41587 (= res!64692 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) lt!69123))))

(assert (=> d!41587 (= (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69123 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!87718)))

(declare-fun b!134702 () Bool)

(declare-fun e!87719 () Bool)

(assert (=> b!134702 (= e!87718 e!87719)))

(declare-fun res!64693 () Bool)

(assert (=> b!134702 (=> (not res!64693) (not e!87719))))

(assert (=> b!134702 (= res!64693 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!134703 () Bool)

(assert (=> b!134703 (= e!87719 (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69123 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!41587 (not res!64692)) b!134702))

(assert (= (and b!134702 res!64693) b!134703))

(assert (=> d!41587 m!157863))

(declare-fun m!159743 () Bool)

(assert (=> b!134703 m!159743))

(assert (=> b!133897 d!41587))

(assert (=> b!133610 d!40519))

(declare-fun lt!70349 () Bool)

(declare-fun d!41589 () Bool)

(assert (=> d!41589 (= lt!70349 (select (content!133 (toList!851 lt!70021)) (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))))

(declare-fun e!87721 () Bool)

(assert (=> d!41589 (= lt!70349 e!87721)))

(declare-fun res!64694 () Bool)

(assert (=> d!41589 (=> (not res!64694) (not e!87721))))

(assert (=> d!41589 (= res!64694 ((_ is Cons!1706) (toList!851 lt!70021)))))

(assert (=> d!41589 (= (contains!889 (toList!851 lt!70021) (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))) lt!70349)))

(declare-fun b!134704 () Bool)

(declare-fun e!87720 () Bool)

(assert (=> b!134704 (= e!87721 e!87720)))

(declare-fun res!64695 () Bool)

(assert (=> b!134704 (=> res!64695 e!87720)))

(assert (=> b!134704 (= res!64695 (= (h!2311 (toList!851 lt!70021)) (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))))

(declare-fun b!134705 () Bool)

(assert (=> b!134705 (= e!87720 (contains!889 (t!6152 (toList!851 lt!70021)) (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41589 res!64694) b!134704))

(assert (= (and b!134704 (not res!64695)) b!134705))

(declare-fun m!159745 () Bool)

(assert (=> d!41589 m!159745))

(declare-fun m!159747 () Bool)

(assert (=> d!41589 m!159747))

(declare-fun m!159749 () Bool)

(assert (=> b!134705 m!159749))

(assert (=> b!133922 d!41589))

(declare-fun d!41591 () Bool)

(declare-fun res!64696 () Bool)

(declare-fun e!87722 () Bool)

(assert (=> d!41591 (=> res!64696 e!87722)))

(assert (=> d!41591 (= res!64696 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69186))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41591 (= (containsKey!174 (t!6152 (toList!851 lt!69186)) #b1000000000000000000000000000000000000000000000000000000000000000) e!87722)))

(declare-fun b!134706 () Bool)

(declare-fun e!87723 () Bool)

(assert (=> b!134706 (= e!87722 e!87723)))

(declare-fun res!64697 () Bool)

(assert (=> b!134706 (=> (not res!64697) (not e!87723))))

(assert (=> b!134706 (= res!64697 (and (or (not ((_ is Cons!1706) (t!6152 (toList!851 lt!69186)))) (bvsle (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186)))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1706) (t!6152 (toList!851 lt!69186))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134707 () Bool)

(assert (=> b!134707 (= e!87723 (containsKey!174 (t!6152 (t!6152 (toList!851 lt!69186))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41591 (not res!64696)) b!134706))

(assert (= (and b!134706 res!64697) b!134707))

(declare-fun m!159751 () Bool)

(assert (=> b!134707 m!159751))

(assert (=> b!133675 d!41591))

(declare-fun d!41593 () Bool)

(assert (=> d!41593 (= (get!1481 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133267 d!41593))

(declare-fun d!41595 () Bool)

(declare-fun c!25124 () Bool)

(assert (=> d!41595 (= c!25124 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69179))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69179)))) lt!69190)))))

(declare-fun e!87724 () Option!176)

(assert (=> d!41595 (= (getValueByKey!170 (t!6152 (toList!851 lt!69179)) lt!69190) e!87724)))

(declare-fun b!134710 () Bool)

(declare-fun e!87725 () Option!176)

(assert (=> b!134710 (= e!87725 (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69179))) lt!69190))))

(declare-fun b!134709 () Bool)

(assert (=> b!134709 (= e!87724 e!87725)))

(declare-fun c!25125 () Bool)

(assert (=> b!134709 (= c!25125 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69179))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69179)))) lt!69190))))))

(declare-fun b!134708 () Bool)

(assert (=> b!134708 (= e!87724 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 lt!69179))))))))

(declare-fun b!134711 () Bool)

(assert (=> b!134711 (= e!87725 None!174)))

(assert (= (and d!41595 c!25124) b!134708))

(assert (= (and d!41595 (not c!25124)) b!134709))

(assert (= (and b!134709 c!25125) b!134710))

(assert (= (and b!134709 (not c!25125)) b!134711))

(declare-fun m!159753 () Bool)

(assert (=> b!134710 m!159753))

(assert (=> b!133813 d!41595))

(declare-fun d!41597 () Bool)

(declare-fun c!25126 () Bool)

(assert (=> d!41597 (= c!25126 (and ((_ is Cons!1706) (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (= (_1!1303 (h!2311 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116)))))))

(declare-fun e!87726 () Option!176)

(assert (=> d!41597 (= (getValueByKey!170 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))) e!87726)))

(declare-fun b!134714 () Bool)

(declare-fun e!87727 () Option!176)

(assert (=> b!134714 (= e!87727 (getValueByKey!170 (t!6152 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))

(declare-fun b!134713 () Bool)

(assert (=> b!134713 (= e!87726 e!87727)))

(declare-fun c!25127 () Bool)

(assert (=> b!134713 (= c!25127 (and ((_ is Cons!1706) (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))))

(declare-fun b!134712 () Bool)

(assert (=> b!134712 (= e!87726 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))))))

(declare-fun b!134715 () Bool)

(assert (=> b!134715 (= e!87727 None!174)))

(assert (= (and d!41597 c!25126) b!134712))

(assert (= (and d!41597 (not c!25126)) b!134713))

(assert (= (and b!134713 c!25127) b!134714))

(assert (= (and b!134713 (not c!25127)) b!134715))

(assert (=> b!134714 m!155971))

(declare-fun m!159755 () Bool)

(assert (=> b!134714 m!159755))

(assert (=> b!133582 d!41597))

(declare-fun d!41599 () Bool)

(assert (=> d!41599 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69301) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69301) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5610 () Bool)

(assert (= bs!5610 d!41599))

(assert (=> bs!5610 m!156799))

(declare-fun m!159757 () Bool)

(assert (=> bs!5610 m!159757))

(assert (=> b!133194 d!41599))

(declare-fun d!41601 () Bool)

(declare-fun c!25128 () Bool)

(assert (=> d!41601 (= c!25128 (and ((_ is Cons!1706) (toList!851 lt!69301)) (= (_1!1303 (h!2311 (toList!851 lt!69301))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87728 () Option!176)

(assert (=> d!41601 (= (getValueByKey!170 (toList!851 lt!69301) #b1000000000000000000000000000000000000000000000000000000000000000) e!87728)))

(declare-fun b!134718 () Bool)

(declare-fun e!87729 () Option!176)

(assert (=> b!134718 (= e!87729 (getValueByKey!170 (t!6152 (toList!851 lt!69301)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134717 () Bool)

(assert (=> b!134717 (= e!87728 e!87729)))

(declare-fun c!25129 () Bool)

(assert (=> b!134717 (= c!25129 (and ((_ is Cons!1706) (toList!851 lt!69301)) (not (= (_1!1303 (h!2311 (toList!851 lt!69301))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134716 () Bool)

(assert (=> b!134716 (= e!87728 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69301)))))))

(declare-fun b!134719 () Bool)

(assert (=> b!134719 (= e!87729 None!174)))

(assert (= (and d!41601 c!25128) b!134716))

(assert (= (and d!41601 (not c!25128)) b!134717))

(assert (= (and b!134717 c!25129) b!134718))

(assert (= (and b!134717 (not c!25129)) b!134719))

(declare-fun m!159759 () Bool)

(assert (=> b!134718 m!159759))

(assert (=> b!133194 d!41601))

(declare-fun d!41603 () Bool)

(assert (=> d!41603 (= (get!1482 (getValueByKey!170 (toList!851 lt!69206) lt!69211)) (v!3198 (getValueByKey!170 (toList!851 lt!69206) lt!69211)))))

(assert (=> d!40755 d!41603))

(declare-fun d!41605 () Bool)

(declare-fun c!25130 () Bool)

(assert (=> d!41605 (= c!25130 (and ((_ is Cons!1706) (toList!851 lt!69206)) (= (_1!1303 (h!2311 (toList!851 lt!69206))) lt!69211)))))

(declare-fun e!87730 () Option!176)

(assert (=> d!41605 (= (getValueByKey!170 (toList!851 lt!69206) lt!69211) e!87730)))

(declare-fun b!134722 () Bool)

(declare-fun e!87731 () Option!176)

(assert (=> b!134722 (= e!87731 (getValueByKey!170 (t!6152 (toList!851 lt!69206)) lt!69211))))

(declare-fun b!134721 () Bool)

(assert (=> b!134721 (= e!87730 e!87731)))

(declare-fun c!25131 () Bool)

(assert (=> b!134721 (= c!25131 (and ((_ is Cons!1706) (toList!851 lt!69206)) (not (= (_1!1303 (h!2311 (toList!851 lt!69206))) lt!69211))))))

(declare-fun b!134720 () Bool)

(assert (=> b!134720 (= e!87730 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69206)))))))

(declare-fun b!134723 () Bool)

(assert (=> b!134723 (= e!87731 None!174)))

(assert (= (and d!41605 c!25130) b!134720))

(assert (= (and d!41605 (not c!25130)) b!134721))

(assert (= (and b!134721 c!25131) b!134722))

(assert (= (and b!134721 (not c!25131)) b!134723))

(declare-fun m!159761 () Bool)

(assert (=> b!134722 m!159761))

(assert (=> d!40755 d!41605))

(declare-fun c!25132 () Bool)

(declare-fun d!41607 () Bool)

(assert (=> d!41607 (= c!25132 (and ((_ is Cons!1706) (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (= (_1!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))) lt!69182)))))

(declare-fun e!87732 () Option!176)

(assert (=> d!41607 (= (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!69182) e!87732)))

(declare-fun e!87733 () Option!176)

(declare-fun b!134726 () Bool)

(assert (=> b!134726 (= e!87733 (getValueByKey!170 (t!6152 (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69182))))

(declare-fun b!134725 () Bool)

(assert (=> b!134725 (= e!87732 e!87733)))

(declare-fun c!25133 () Bool)

(assert (=> b!134725 (= c!25133 (and ((_ is Cons!1706) (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))) lt!69182))))))

(declare-fun b!134724 () Bool)

(assert (=> b!134724 (= e!87732 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))))

(declare-fun b!134727 () Bool)

(assert (=> b!134727 (= e!87733 None!174)))

(assert (= (and d!41607 c!25132) b!134724))

(assert (= (and d!41607 (not c!25132)) b!134725))

(assert (= (and b!134725 c!25133) b!134726))

(assert (= (and b!134725 (not c!25133)) b!134727))

(declare-fun m!159763 () Bool)

(assert (=> b!134726 m!159763))

(assert (=> b!133128 d!41607))

(declare-fun d!41609 () Bool)

(assert (=> d!41609 (= (apply!116 lt!69974 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69974) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5611 () Bool)

(assert (= bs!5611 d!41609))

(declare-fun m!159765 () Bool)

(assert (=> bs!5611 m!159765))

(assert (=> bs!5611 m!159765))

(declare-fun m!159767 () Bool)

(assert (=> bs!5611 m!159767))

(assert (=> b!133851 d!41609))

(declare-fun lt!70350 () Bool)

(declare-fun d!41611 () Bool)

(assert (=> d!41611 (= lt!70350 (select (content!133 (toList!851 lt!69712)) (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(declare-fun e!87735 () Bool)

(assert (=> d!41611 (= lt!70350 e!87735)))

(declare-fun res!64698 () Bool)

(assert (=> d!41611 (=> (not res!64698) (not e!87735))))

(assert (=> d!41611 (= res!64698 ((_ is Cons!1706) (toList!851 lt!69712)))))

(assert (=> d!41611 (= (contains!889 (toList!851 lt!69712) (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!70350)))

(declare-fun b!134728 () Bool)

(declare-fun e!87734 () Bool)

(assert (=> b!134728 (= e!87735 e!87734)))

(declare-fun res!64699 () Bool)

(assert (=> b!134728 (=> res!64699 e!87734)))

(assert (=> b!134728 (= res!64699 (= (h!2311 (toList!851 lt!69712)) (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(declare-fun b!134729 () Bool)

(assert (=> b!134729 (= e!87734 (contains!889 (t!6152 (toList!851 lt!69712)) (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(assert (= (and d!41611 res!64698) b!134728))

(assert (= (and b!134728 (not res!64699)) b!134729))

(declare-fun m!159769 () Bool)

(assert (=> d!41611 m!159769))

(declare-fun m!159771 () Bool)

(assert (=> d!41611 m!159771))

(declare-fun m!159773 () Bool)

(assert (=> b!134729 m!159773))

(assert (=> b!133482 d!41611))

(declare-fun lt!70351 () Bool)

(declare-fun d!41613 () Bool)

(assert (=> d!41613 (= lt!70351 (select (content!133 lt!69333) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87737 () Bool)

(assert (=> d!41613 (= lt!70351 e!87737)))

(declare-fun res!64700 () Bool)

(assert (=> d!41613 (=> (not res!64700) (not e!87737))))

(assert (=> d!41613 (= res!64700 ((_ is Cons!1706) lt!69333))))

(assert (=> d!41613 (= (contains!889 lt!69333 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!70351)))

(declare-fun b!134730 () Bool)

(declare-fun e!87736 () Bool)

(assert (=> b!134730 (= e!87737 e!87736)))

(declare-fun res!64701 () Bool)

(assert (=> b!134730 (=> res!64701 e!87736)))

(assert (=> b!134730 (= res!64701 (= (h!2311 lt!69333) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!134731 () Bool)

(assert (=> b!134731 (= e!87736 (contains!889 (t!6152 lt!69333) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!41613 res!64700) b!134730))

(assert (= (and b!134730 (not res!64701)) b!134731))

(declare-fun m!159775 () Bool)

(assert (=> d!41613 m!159775))

(declare-fun m!159777 () Bool)

(assert (=> d!41613 m!159777))

(declare-fun m!159779 () Bool)

(assert (=> b!134731 m!159779))

(assert (=> b!133320 d!41613))

(assert (=> d!40643 d!40373))

(assert (=> d!40643 d!40371))

(declare-fun e!87742 () List!1710)

(declare-fun b!134732 () Bool)

(assert (=> b!134732 (= e!87742 (insertStrictlySorted!91 (t!6152 (t!6152 (toList!851 lt!69172))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!134733 () Bool)

(declare-fun e!87741 () List!1710)

(declare-fun call!14825 () List!1710)

(assert (=> b!134733 (= e!87741 call!14825)))

(declare-fun b!134734 () Bool)

(declare-fun res!64703 () Bool)

(declare-fun e!87739 () Bool)

(assert (=> b!134734 (=> (not res!64703) (not e!87739))))

(declare-fun lt!70352 () List!1710)

(assert (=> b!134734 (= res!64703 (containsKey!174 lt!70352 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun bm!14820 () Bool)

(declare-fun c!25135 () Bool)

(assert (=> bm!14820 (= call!14825 ($colon$colon!91 e!87742 (ite c!25135 (h!2311 (t!6152 (toList!851 lt!69172))) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun c!25136 () Bool)

(assert (=> bm!14820 (= c!25136 c!25135)))

(declare-fun c!25134 () Bool)

(declare-fun b!134735 () Bool)

(declare-fun c!25137 () Bool)

(assert (=> b!134735 (= e!87742 (ite c!25134 (t!6152 (t!6152 (toList!851 lt!69172))) (ite c!25137 (Cons!1706 (h!2311 (t!6152 (toList!851 lt!69172))) (t!6152 (t!6152 (toList!851 lt!69172)))) Nil!1707)))))

(declare-fun d!41615 () Bool)

(assert (=> d!41615 e!87739))

(declare-fun res!64702 () Bool)

(assert (=> d!41615 (=> (not res!64702) (not e!87739))))

(assert (=> d!41615 (= res!64702 (isStrictlySorted!317 lt!70352))))

(assert (=> d!41615 (= lt!70352 e!87741)))

(assert (=> d!41615 (= c!25135 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69172))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 lt!69172)))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!41615 (isStrictlySorted!317 (t!6152 (toList!851 lt!69172)))))

(assert (=> d!41615 (= (insertStrictlySorted!91 (t!6152 (toList!851 lt!69172)) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!70352)))

(declare-fun b!134736 () Bool)

(declare-fun e!87738 () List!1710)

(assert (=> b!134736 (= e!87741 e!87738)))

(assert (=> b!134736 (= c!25134 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69172))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69172)))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!134737 () Bool)

(declare-fun e!87740 () List!1710)

(declare-fun call!14823 () List!1710)

(assert (=> b!134737 (= e!87740 call!14823)))

(declare-fun b!134738 () Bool)

(declare-fun call!14824 () List!1710)

(assert (=> b!134738 (= e!87738 call!14824)))

(declare-fun b!134739 () Bool)

(assert (=> b!134739 (= e!87739 (contains!889 lt!70352 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun bm!14821 () Bool)

(assert (=> bm!14821 (= call!14824 call!14825)))

(declare-fun bm!14822 () Bool)

(assert (=> bm!14822 (= call!14823 call!14824)))

(declare-fun b!134740 () Bool)

(assert (=> b!134740 (= c!25137 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69172))) (bvsgt (_1!1303 (h!2311 (t!6152 (toList!851 lt!69172)))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> b!134740 (= e!87738 e!87740)))

(declare-fun b!134741 () Bool)

(assert (=> b!134741 (= e!87740 call!14823)))

(assert (= (and d!41615 c!25135) b!134733))

(assert (= (and d!41615 (not c!25135)) b!134736))

(assert (= (and b!134736 c!25134) b!134738))

(assert (= (and b!134736 (not c!25134)) b!134740))

(assert (= (and b!134740 c!25137) b!134741))

(assert (= (and b!134740 (not c!25137)) b!134737))

(assert (= (or b!134741 b!134737) bm!14822))

(assert (= (or b!134738 bm!14822) bm!14821))

(assert (= (or b!134733 bm!14821) bm!14820))

(assert (= (and bm!14820 c!25136) b!134732))

(assert (= (and bm!14820 (not c!25136)) b!134735))

(assert (= (and d!41615 res!64702) b!134734))

(assert (= (and b!134734 res!64703) b!134739))

(declare-fun m!159781 () Bool)

(assert (=> b!134739 m!159781))

(declare-fun m!159783 () Bool)

(assert (=> b!134734 m!159783))

(declare-fun m!159785 () Bool)

(assert (=> b!134732 m!159785))

(declare-fun m!159787 () Bool)

(assert (=> d!41615 m!159787))

(assert (=> d!41615 m!159689))

(declare-fun m!159789 () Bool)

(assert (=> bm!14820 m!159789))

(assert (=> b!133883 d!41615))

(declare-fun c!25138 () Bool)

(declare-fun d!41617 () Bool)

(assert (=> d!41617 (= c!25138 (and ((_ is Cons!1706) (toList!851 lt!69578)) (= (_1!1303 (h!2311 (toList!851 lt!69578))) (_1!1303 (tuple2!2585 lt!69302 lt!69303)))))))

(declare-fun e!87743 () Option!176)

(assert (=> d!41617 (= (getValueByKey!170 (toList!851 lt!69578) (_1!1303 (tuple2!2585 lt!69302 lt!69303))) e!87743)))

(declare-fun b!134744 () Bool)

(declare-fun e!87744 () Option!176)

(assert (=> b!134744 (= e!87744 (getValueByKey!170 (t!6152 (toList!851 lt!69578)) (_1!1303 (tuple2!2585 lt!69302 lt!69303))))))

(declare-fun b!134743 () Bool)

(assert (=> b!134743 (= e!87743 e!87744)))

(declare-fun c!25139 () Bool)

(assert (=> b!134743 (= c!25139 (and ((_ is Cons!1706) (toList!851 lt!69578)) (not (= (_1!1303 (h!2311 (toList!851 lt!69578))) (_1!1303 (tuple2!2585 lt!69302 lt!69303))))))))

(declare-fun b!134742 () Bool)

(assert (=> b!134742 (= e!87743 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69578)))))))

(declare-fun b!134745 () Bool)

(assert (=> b!134745 (= e!87744 None!174)))

(assert (= (and d!41617 c!25138) b!134742))

(assert (= (and d!41617 (not c!25138)) b!134743))

(assert (= (and b!134743 c!25139) b!134744))

(assert (= (and b!134743 (not c!25139)) b!134745))

(declare-fun m!159791 () Bool)

(assert (=> b!134744 m!159791))

(assert (=> b!133258 d!41617))

(declare-fun d!41619 () Bool)

(assert (=> d!41619 (= (apply!116 lt!69735 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (getValueByKey!170 (toList!851 lt!69735) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5612 () Bool)

(assert (= bs!5612 d!41619))

(assert (=> bs!5612 m!156125))

(declare-fun m!159793 () Bool)

(assert (=> bs!5612 m!159793))

(assert (=> bs!5612 m!159793))

(declare-fun m!159795 () Bool)

(assert (=> bs!5612 m!159795))

(assert (=> b!133494 d!41619))

(assert (=> b!133494 d!40497))

(declare-fun d!41621 () Bool)

(declare-fun lt!70353 () Bool)

(assert (=> d!41621 (= lt!70353 (select (content!132 Nil!1708) (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(declare-fun e!87746 () Bool)

(assert (=> d!41621 (= lt!70353 e!87746)))

(declare-fun res!64705 () Bool)

(assert (=> d!41621 (=> (not res!64705) (not e!87746))))

(assert (=> d!41621 (= res!64705 ((_ is Cons!1707) Nil!1708))))

(assert (=> d!41621 (= (contains!888 Nil!1708 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)) lt!70353)))

(declare-fun b!134746 () Bool)

(declare-fun e!87745 () Bool)

(assert (=> b!134746 (= e!87746 e!87745)))

(declare-fun res!64704 () Bool)

(assert (=> b!134746 (=> res!64704 e!87745)))

(assert (=> b!134746 (= res!64704 (= (h!2312 Nil!1708) (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(declare-fun b!134747 () Bool)

(assert (=> b!134747 (= e!87745 (contains!888 (t!6153 Nil!1708) (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(assert (= (and d!41621 res!64705) b!134746))

(assert (= (and b!134746 (not res!64704)) b!134747))

(assert (=> d!41621 m!156277))

(assert (=> d!41621 m!156913))

(declare-fun m!159797 () Bool)

(assert (=> d!41621 m!159797))

(assert (=> b!134747 m!156913))

(declare-fun m!159799 () Bool)

(assert (=> b!134747 m!159799))

(assert (=> b!133808 d!41621))

(declare-fun d!41623 () Bool)

(assert (=> d!41623 (= (apply!116 lt!69923 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69923) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5613 () Bool)

(assert (= bs!5613 d!41623))

(declare-fun m!159801 () Bool)

(assert (=> bs!5613 m!159801))

(assert (=> bs!5613 m!159801))

(declare-fun m!159803 () Bool)

(assert (=> bs!5613 m!159803))

(assert (=> b!133773 d!41623))

(declare-fun d!41625 () Bool)

(declare-fun e!87747 () Bool)

(assert (=> d!41625 e!87747))

(declare-fun res!64706 () Bool)

(assert (=> d!41625 (=> res!64706 e!87747)))

(declare-fun lt!70355 () Bool)

(assert (=> d!41625 (= res!64706 (not lt!70355))))

(declare-fun lt!70357 () Bool)

(assert (=> d!41625 (= lt!70355 lt!70357)))

(declare-fun lt!70354 () Unit!4132)

(declare-fun e!87748 () Unit!4132)

(assert (=> d!41625 (= lt!70354 e!87748)))

(declare-fun c!25140 () Bool)

(assert (=> d!41625 (= c!25140 lt!70357)))

(assert (=> d!41625 (= lt!70357 (containsKey!174 (toList!851 lt!70059) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41625 (= (contains!886 lt!70059 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!70355)))

(declare-fun b!134748 () Bool)

(declare-fun lt!70356 () Unit!4132)

(assert (=> b!134748 (= e!87748 lt!70356)))

(assert (=> b!134748 (= lt!70356 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!70059) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134748 (isDefined!124 (getValueByKey!170 (toList!851 lt!70059) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134749 () Bool)

(declare-fun Unit!4221 () Unit!4132)

(assert (=> b!134749 (= e!87748 Unit!4221)))

(declare-fun b!134750 () Bool)

(assert (=> b!134750 (= e!87747 (isDefined!124 (getValueByKey!170 (toList!851 lt!70059) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41625 c!25140) b!134748))

(assert (= (and d!41625 (not c!25140)) b!134749))

(assert (= (and d!41625 (not res!64706)) b!134750))

(assert (=> d!41625 m!156125))

(declare-fun m!159805 () Bool)

(assert (=> d!41625 m!159805))

(assert (=> b!134748 m!156125))

(declare-fun m!159807 () Bool)

(assert (=> b!134748 m!159807))

(assert (=> b!134748 m!156125))

(declare-fun m!159809 () Bool)

(assert (=> b!134748 m!159809))

(assert (=> b!134748 m!159809))

(declare-fun m!159811 () Bool)

(assert (=> b!134748 m!159811))

(assert (=> b!134750 m!156125))

(assert (=> b!134750 m!159809))

(assert (=> b!134750 m!159809))

(assert (=> b!134750 m!159811))

(assert (=> b!133947 d!41625))

(declare-fun d!41627 () Bool)

(declare-fun e!87749 () Bool)

(assert (=> d!41627 e!87749))

(declare-fun res!64707 () Bool)

(assert (=> d!41627 (=> res!64707 e!87749)))

(declare-fun lt!70359 () Bool)

(assert (=> d!41627 (= res!64707 (not lt!70359))))

(declare-fun lt!70361 () Bool)

(assert (=> d!41627 (= lt!70359 lt!70361)))

(declare-fun lt!70358 () Unit!4132)

(declare-fun e!87750 () Unit!4132)

(assert (=> d!41627 (= lt!70358 e!87750)))

(declare-fun c!25141 () Bool)

(assert (=> d!41627 (= c!25141 lt!70361)))

(assert (=> d!41627 (= lt!70361 (containsKey!174 (toList!851 lt!69998) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41627 (= (contains!886 lt!69998 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70359)))

(declare-fun b!134751 () Bool)

(declare-fun lt!70360 () Unit!4132)

(assert (=> b!134751 (= e!87750 lt!70360)))

(assert (=> b!134751 (= lt!70360 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69998) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> b!134751 (isDefined!124 (getValueByKey!170 (toList!851 lt!69998) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!134752 () Bool)

(declare-fun Unit!4222 () Unit!4132)

(assert (=> b!134752 (= e!87750 Unit!4222)))

(declare-fun b!134753 () Bool)

(assert (=> b!134753 (= e!87749 (isDefined!124 (getValueByKey!170 (toList!851 lt!69998) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (= (and d!41627 c!25141) b!134751))

(assert (= (and d!41627 (not c!25141)) b!134752))

(assert (= (and d!41627 (not res!64707)) b!134753))

(declare-fun m!159813 () Bool)

(assert (=> d!41627 m!159813))

(declare-fun m!159815 () Bool)

(assert (=> b!134751 m!159815))

(assert (=> b!134751 m!158259))

(assert (=> b!134751 m!158259))

(declare-fun m!159817 () Bool)

(assert (=> b!134751 m!159817))

(assert (=> b!134753 m!158259))

(assert (=> b!134753 m!158259))

(assert (=> b!134753 m!159817))

(assert (=> d!40905 d!41627))

(declare-fun d!41629 () Bool)

(declare-fun c!25142 () Bool)

(assert (=> d!41629 (= c!25142 (and ((_ is Cons!1706) lt!69996) (= (_1!1303 (h!2311 lt!69996)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun e!87751 () Option!176)

(assert (=> d!41629 (= (getValueByKey!170 lt!69996 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) e!87751)))

(declare-fun b!134756 () Bool)

(declare-fun e!87752 () Option!176)

(assert (=> b!134756 (= e!87752 (getValueByKey!170 (t!6152 lt!69996) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!134755 () Bool)

(assert (=> b!134755 (= e!87751 e!87752)))

(declare-fun c!25143 () Bool)

(assert (=> b!134755 (= c!25143 (and ((_ is Cons!1706) lt!69996) (not (= (_1!1303 (h!2311 lt!69996)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!134754 () Bool)

(assert (=> b!134754 (= e!87751 (Some!175 (_2!1303 (h!2311 lt!69996))))))

(declare-fun b!134757 () Bool)

(assert (=> b!134757 (= e!87752 None!174)))

(assert (= (and d!41629 c!25142) b!134754))

(assert (= (and d!41629 (not c!25142)) b!134755))

(assert (= (and b!134755 c!25143) b!134756))

(assert (= (and b!134755 (not c!25143)) b!134757))

(declare-fun m!159819 () Bool)

(assert (=> b!134756 m!159819))

(assert (=> d!40905 d!41629))

(declare-fun d!41631 () Bool)

(assert (=> d!41631 (= (getValueByKey!170 lt!69996 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70362 () Unit!4132)

(assert (=> d!41631 (= lt!70362 (choose!834 lt!69996 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun e!87753 () Bool)

(assert (=> d!41631 e!87753))

(declare-fun res!64708 () Bool)

(assert (=> d!41631 (=> (not res!64708) (not e!87753))))

(assert (=> d!41631 (= res!64708 (isStrictlySorted!317 lt!69996))))

(assert (=> d!41631 (= (lemmaContainsTupThenGetReturnValue!88 lt!69996 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70362)))

(declare-fun b!134758 () Bool)

(declare-fun res!64709 () Bool)

(assert (=> b!134758 (=> (not res!64709) (not e!87753))))

(assert (=> b!134758 (= res!64709 (containsKey!174 lt!69996 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!134759 () Bool)

(assert (=> b!134759 (= e!87753 (contains!889 lt!69996 (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (= (and d!41631 res!64708) b!134758))

(assert (= (and b!134758 res!64709) b!134759))

(assert (=> d!41631 m!158253))

(declare-fun m!159821 () Bool)

(assert (=> d!41631 m!159821))

(declare-fun m!159823 () Bool)

(assert (=> d!41631 m!159823))

(declare-fun m!159825 () Bool)

(assert (=> b!134758 m!159825))

(declare-fun m!159827 () Bool)

(assert (=> b!134759 m!159827))

(assert (=> d!40905 d!41631))

(declare-fun b!134760 () Bool)

(declare-fun e!87758 () List!1710)

(assert (=> b!134760 (= e!87758 (insertStrictlySorted!91 (t!6152 (toList!851 call!14650)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!134761 () Bool)

(declare-fun e!87757 () List!1710)

(declare-fun call!14828 () List!1710)

(assert (=> b!134761 (= e!87757 call!14828)))

(declare-fun b!134762 () Bool)

(declare-fun res!64711 () Bool)

(declare-fun e!87755 () Bool)

(assert (=> b!134762 (=> (not res!64711) (not e!87755))))

(declare-fun lt!70363 () List!1710)

(assert (=> b!134762 (= res!64711 (containsKey!174 lt!70363 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun c!25145 () Bool)

(declare-fun bm!14823 () Bool)

(assert (=> bm!14823 (= call!14828 ($colon$colon!91 e!87758 (ite c!25145 (h!2311 (toList!851 call!14650)) (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun c!25146 () Bool)

(assert (=> bm!14823 (= c!25146 c!25145)))

(declare-fun c!25147 () Bool)

(declare-fun b!134763 () Bool)

(declare-fun c!25144 () Bool)

(assert (=> b!134763 (= e!87758 (ite c!25144 (t!6152 (toList!851 call!14650)) (ite c!25147 (Cons!1706 (h!2311 (toList!851 call!14650)) (t!6152 (toList!851 call!14650))) Nil!1707)))))

(declare-fun d!41633 () Bool)

(assert (=> d!41633 e!87755))

(declare-fun res!64710 () Bool)

(assert (=> d!41633 (=> (not res!64710) (not e!87755))))

(assert (=> d!41633 (= res!64710 (isStrictlySorted!317 lt!70363))))

(assert (=> d!41633 (= lt!70363 e!87757)))

(assert (=> d!41633 (= c!25145 (and ((_ is Cons!1706) (toList!851 call!14650)) (bvslt (_1!1303 (h!2311 (toList!851 call!14650))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41633 (isStrictlySorted!317 (toList!851 call!14650))))

(assert (=> d!41633 (= (insertStrictlySorted!91 (toList!851 call!14650) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70363)))

(declare-fun b!134764 () Bool)

(declare-fun e!87754 () List!1710)

(assert (=> b!134764 (= e!87757 e!87754)))

(assert (=> b!134764 (= c!25144 (and ((_ is Cons!1706) (toList!851 call!14650)) (= (_1!1303 (h!2311 (toList!851 call!14650))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!134765 () Bool)

(declare-fun e!87756 () List!1710)

(declare-fun call!14826 () List!1710)

(assert (=> b!134765 (= e!87756 call!14826)))

(declare-fun b!134766 () Bool)

(declare-fun call!14827 () List!1710)

(assert (=> b!134766 (= e!87754 call!14827)))

(declare-fun b!134767 () Bool)

(assert (=> b!134767 (= e!87755 (contains!889 lt!70363 (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun bm!14824 () Bool)

(assert (=> bm!14824 (= call!14827 call!14828)))

(declare-fun bm!14825 () Bool)

(assert (=> bm!14825 (= call!14826 call!14827)))

(declare-fun b!134768 () Bool)

(assert (=> b!134768 (= c!25147 (and ((_ is Cons!1706) (toList!851 call!14650)) (bvsgt (_1!1303 (h!2311 (toList!851 call!14650))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> b!134768 (= e!87754 e!87756)))

(declare-fun b!134769 () Bool)

(assert (=> b!134769 (= e!87756 call!14826)))

(assert (= (and d!41633 c!25145) b!134761))

(assert (= (and d!41633 (not c!25145)) b!134764))

(assert (= (and b!134764 c!25144) b!134766))

(assert (= (and b!134764 (not c!25144)) b!134768))

(assert (= (and b!134768 c!25147) b!134769))

(assert (= (and b!134768 (not c!25147)) b!134765))

(assert (= (or b!134769 b!134765) bm!14825))

(assert (= (or b!134766 bm!14825) bm!14824))

(assert (= (or b!134761 bm!14824) bm!14823))

(assert (= (and bm!14823 c!25146) b!134760))

(assert (= (and bm!14823 (not c!25146)) b!134763))

(assert (= (and d!41633 res!64710) b!134762))

(assert (= (and b!134762 res!64711) b!134767))

(declare-fun m!159829 () Bool)

(assert (=> b!134767 m!159829))

(declare-fun m!159831 () Bool)

(assert (=> b!134762 m!159831))

(declare-fun m!159833 () Bool)

(assert (=> b!134760 m!159833))

(declare-fun m!159835 () Bool)

(assert (=> d!41633 m!159835))

(declare-fun m!159837 () Bool)

(assert (=> d!41633 m!159837))

(declare-fun m!159839 () Bool)

(assert (=> bm!14823 m!159839))

(assert (=> d!40905 d!41633))

(declare-fun b!134770 () Bool)

(assert (=> b!134770 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 lt!69447)))))

(assert (=> b!134770 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 lt!69436)))))

(declare-fun e!87759 () Bool)

(declare-fun lt!70366 () ListLongMap!1671)

(assert (=> b!134770 (= e!87759 (= (apply!116 lt!70366 (select (arr!2248 lt!69447) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 lt!69436) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun call!14829 () ListLongMap!1671)

(declare-fun bm!14826 () Bool)

(assert (=> bm!14826 (= call!14829 (getCurrentListMapNoExtraKeys!128 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!134771 () Bool)

(declare-fun e!87762 () ListLongMap!1671)

(assert (=> b!134771 (= e!87762 call!14829)))

(declare-fun b!134772 () Bool)

(declare-fun e!87764 () Bool)

(declare-fun e!87761 () Bool)

(assert (=> b!134772 (= e!87764 e!87761)))

(declare-fun c!25151 () Bool)

(assert (=> b!134772 (= c!25151 (bvslt #b00000000000000000000000000000000 (size!2518 lt!69447)))))

(declare-fun b!134773 () Bool)

(assert (=> b!134773 (= e!87761 (isEmpty!414 lt!70366))))

(declare-fun b!134774 () Bool)

(declare-fun e!87765 () Bool)

(assert (=> b!134774 (= e!87765 e!87764)))

(declare-fun c!25148 () Bool)

(declare-fun e!87760 () Bool)

(assert (=> b!134774 (= c!25148 e!87760)))

(declare-fun res!64714 () Bool)

(assert (=> b!134774 (=> (not res!64714) (not e!87760))))

(assert (=> b!134774 (= res!64714 (bvslt #b00000000000000000000000000000000 (size!2518 lt!69447)))))

(declare-fun b!134775 () Bool)

(assert (=> b!134775 (= e!87760 (validKeyInArray!0 (select (arr!2248 lt!69447) #b00000000000000000000000000000000)))))

(assert (=> b!134775 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134776 () Bool)

(declare-fun lt!70365 () Unit!4132)

(declare-fun lt!70370 () Unit!4132)

(assert (=> b!134776 (= lt!70365 lt!70370)))

(declare-fun lt!70364 () ListLongMap!1671)

(declare-fun lt!70368 () V!3481)

(declare-fun lt!70367 () (_ BitVec 64))

(declare-fun lt!70369 () (_ BitVec 64))

(assert (=> b!134776 (not (contains!886 (+!163 lt!70364 (tuple2!2585 lt!70367 lt!70368)) lt!70369))))

(assert (=> b!134776 (= lt!70370 (addStillNotContains!62 lt!70364 lt!70367 lt!70368 lt!70369))))

(assert (=> b!134776 (= lt!70369 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134776 (= lt!70368 (get!1478 (select (arr!2249 lt!69436) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134776 (= lt!70367 (select (arr!2248 lt!69447) #b00000000000000000000000000000000))))

(assert (=> b!134776 (= lt!70364 call!14829)))

(assert (=> b!134776 (= e!87762 (+!163 call!14829 (tuple2!2585 (select (arr!2248 lt!69447) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 lt!69436) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134777 () Bool)

(declare-fun e!87763 () ListLongMap!1671)

(assert (=> b!134777 (= e!87763 e!87762)))

(declare-fun c!25149 () Bool)

(assert (=> b!134777 (= c!25149 (validKeyInArray!0 (select (arr!2248 lt!69447) #b00000000000000000000000000000000)))))

(declare-fun b!134778 () Bool)

(assert (=> b!134778 (= e!87763 (ListLongMap!1672 Nil!1707))))

(declare-fun d!41635 () Bool)

(assert (=> d!41635 e!87765))

(declare-fun res!64713 () Bool)

(assert (=> d!41635 (=> (not res!64713) (not e!87765))))

(assert (=> d!41635 (= res!64713 (not (contains!886 lt!70366 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41635 (= lt!70366 e!87763)))

(declare-fun c!25150 () Bool)

(assert (=> d!41635 (= c!25150 (bvsge #b00000000000000000000000000000000 (size!2518 lt!69447)))))

(assert (=> d!41635 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!41635 (= (getCurrentListMapNoExtraKeys!128 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!70366)))

(declare-fun b!134779 () Bool)

(assert (=> b!134779 (= e!87761 (= lt!70366 (getCurrentListMapNoExtraKeys!128 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun b!134780 () Bool)

(declare-fun res!64715 () Bool)

(assert (=> b!134780 (=> (not res!64715) (not e!87765))))

(assert (=> b!134780 (= res!64715 (not (contains!886 lt!70366 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134781 () Bool)

(assert (=> b!134781 (= e!87764 e!87759)))

(assert (=> b!134781 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 lt!69447)))))

(declare-fun res!64712 () Bool)

(assert (=> b!134781 (= res!64712 (contains!886 lt!70366 (select (arr!2248 lt!69447) #b00000000000000000000000000000000)))))

(assert (=> b!134781 (=> (not res!64712) (not e!87759))))

(assert (= (and d!41635 c!25150) b!134778))

(assert (= (and d!41635 (not c!25150)) b!134777))

(assert (= (and b!134777 c!25149) b!134776))

(assert (= (and b!134777 (not c!25149)) b!134771))

(assert (= (or b!134776 b!134771) bm!14826))

(assert (= (and d!41635 res!64713) b!134780))

(assert (= (and b!134780 res!64715) b!134774))

(assert (= (and b!134774 res!64714) b!134775))

(assert (= (and b!134774 c!25148) b!134781))

(assert (= (and b!134774 (not c!25148)) b!134772))

(assert (= (and b!134781 res!64712) b!134770))

(assert (= (and b!134772 c!25151) b!134779))

(assert (= (and b!134772 (not c!25151)) b!134773))

(declare-fun b_lambda!5999 () Bool)

(assert (=> (not b_lambda!5999) (not b!134770)))

(assert (=> b!134770 t!6164))

(declare-fun b_and!8329 () Bool)

(assert (= b_and!8325 (and (=> t!6164 result!3993) b_and!8329)))

(assert (=> b!134770 t!6166))

(declare-fun b_and!8331 () Bool)

(assert (= b_and!8327 (and (=> t!6166 result!3995) b_and!8331)))

(declare-fun b_lambda!6001 () Bool)

(assert (=> (not b_lambda!6001) (not b!134776)))

(assert (=> b!134776 t!6164))

(declare-fun b_and!8333 () Bool)

(assert (= b_and!8329 (and (=> t!6164 result!3993) b_and!8333)))

(assert (=> b!134776 t!6166))

(declare-fun b_and!8335 () Bool)

(assert (= b_and!8331 (and (=> t!6166 result!3995) b_and!8335)))

(assert (=> b!134775 m!157063))

(assert (=> b!134775 m!157063))

(assert (=> b!134775 m!157077))

(declare-fun m!159841 () Bool)

(assert (=> b!134780 m!159841))

(assert (=> b!134776 m!157071))

(declare-fun m!159843 () Bool)

(assert (=> b!134776 m!159843))

(assert (=> b!134776 m!157063))

(assert (=> b!134776 m!157071))

(assert (=> b!134776 m!156135))

(assert (=> b!134776 m!157073))

(declare-fun m!159845 () Bool)

(assert (=> b!134776 m!159845))

(declare-fun m!159847 () Bool)

(assert (=> b!134776 m!159847))

(assert (=> b!134776 m!156135))

(declare-fun m!159849 () Bool)

(assert (=> b!134776 m!159849))

(assert (=> b!134776 m!159845))

(declare-fun m!159851 () Bool)

(assert (=> b!134779 m!159851))

(assert (=> b!134781 m!157063))

(assert (=> b!134781 m!157063))

(declare-fun m!159853 () Bool)

(assert (=> b!134781 m!159853))

(declare-fun m!159855 () Bool)

(assert (=> b!134773 m!159855))

(assert (=> bm!14826 m!159851))

(declare-fun m!159857 () Bool)

(assert (=> d!41635 m!159857))

(assert (=> d!41635 m!156183))

(assert (=> b!134777 m!157063))

(assert (=> b!134777 m!157063))

(assert (=> b!134777 m!157077))

(assert (=> b!134770 m!157071))

(assert (=> b!134770 m!157063))

(assert (=> b!134770 m!157071))

(assert (=> b!134770 m!156135))

(assert (=> b!134770 m!157073))

(assert (=> b!134770 m!156135))

(assert (=> b!134770 m!157063))

(declare-fun m!159859 () Bool)

(assert (=> b!134770 m!159859))

(assert (=> bm!14699 d!41635))

(declare-fun d!41637 () Bool)

(declare-fun res!64716 () Bool)

(declare-fun e!87766 () Bool)

(assert (=> d!41637 (=> res!64716 e!87766)))

(assert (=> d!41637 (= res!64716 (and ((_ is Cons!1706) (toList!851 lt!69362)) (= (_1!1303 (h!2311 (toList!851 lt!69362))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41637 (= (containsKey!174 (toList!851 lt!69362) #b1000000000000000000000000000000000000000000000000000000000000000) e!87766)))

(declare-fun b!134782 () Bool)

(declare-fun e!87767 () Bool)

(assert (=> b!134782 (= e!87766 e!87767)))

(declare-fun res!64717 () Bool)

(assert (=> b!134782 (=> (not res!64717) (not e!87767))))

(assert (=> b!134782 (= res!64717 (and (or (not ((_ is Cons!1706) (toList!851 lt!69362))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69362))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1706) (toList!851 lt!69362)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69362))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134783 () Bool)

(assert (=> b!134783 (= e!87767 (containsKey!174 (t!6152 (toList!851 lt!69362)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41637 (not res!64716)) b!134782))

(assert (= (and b!134782 res!64717) b!134783))

(declare-fun m!159861 () Bool)

(assert (=> b!134783 m!159861))

(assert (=> d!40859 d!41637))

(declare-fun d!41639 () Bool)

(declare-fun c!25152 () Bool)

(assert (=> d!41639 (= c!25152 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69186))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87768 () Option!176)

(assert (=> d!41639 (= (getValueByKey!170 (t!6152 (toList!851 lt!69186)) #b1000000000000000000000000000000000000000000000000000000000000000) e!87768)))

(declare-fun b!134786 () Bool)

(declare-fun e!87769 () Option!176)

(assert (=> b!134786 (= e!87769 (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69186))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134785 () Bool)

(assert (=> b!134785 (= e!87768 e!87769)))

(declare-fun c!25153 () Bool)

(assert (=> b!134785 (= c!25153 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69186))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186)))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134784 () Bool)

(assert (=> b!134784 (= e!87768 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 lt!69186))))))))

(declare-fun b!134787 () Bool)

(assert (=> b!134787 (= e!87769 None!174)))

(assert (= (and d!41639 c!25152) b!134784))

(assert (= (and d!41639 (not c!25152)) b!134785))

(assert (= (and b!134785 c!25153) b!134786))

(assert (= (and b!134785 (not c!25153)) b!134787))

(declare-fun m!159863 () Bool)

(assert (=> b!134786 m!159863))

(assert (=> b!133560 d!41639))

(declare-fun e!87774 () List!1710)

(declare-fun b!134788 () Bool)

(assert (=> b!134788 (= e!87774 (insertStrictlySorted!91 (t!6152 (t!6152 (toList!851 call!14585))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134789 () Bool)

(declare-fun e!87773 () List!1710)

(declare-fun call!14832 () List!1710)

(assert (=> b!134789 (= e!87773 call!14832)))

(declare-fun b!134790 () Bool)

(declare-fun res!64719 () Bool)

(declare-fun e!87771 () Bool)

(assert (=> b!134790 (=> (not res!64719) (not e!87771))))

(declare-fun lt!70371 () List!1710)

(assert (=> b!134790 (= res!64719 (containsKey!174 lt!70371 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!25155 () Bool)

(declare-fun bm!14827 () Bool)

(assert (=> bm!14827 (= call!14832 ($colon$colon!91 e!87774 (ite c!25155 (h!2311 (t!6152 (toList!851 call!14585))) (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25156 () Bool)

(assert (=> bm!14827 (= c!25156 c!25155)))

(declare-fun b!134791 () Bool)

(declare-fun c!25154 () Bool)

(declare-fun c!25157 () Bool)

(assert (=> b!134791 (= e!87774 (ite c!25154 (t!6152 (t!6152 (toList!851 call!14585))) (ite c!25157 (Cons!1706 (h!2311 (t!6152 (toList!851 call!14585))) (t!6152 (t!6152 (toList!851 call!14585)))) Nil!1707)))))

(declare-fun d!41641 () Bool)

(assert (=> d!41641 e!87771))

(declare-fun res!64718 () Bool)

(assert (=> d!41641 (=> (not res!64718) (not e!87771))))

(assert (=> d!41641 (= res!64718 (isStrictlySorted!317 lt!70371))))

(assert (=> d!41641 (= lt!70371 e!87773)))

(assert (=> d!41641 (= c!25155 (and ((_ is Cons!1706) (t!6152 (toList!851 call!14585))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 call!14585)))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41641 (isStrictlySorted!317 (t!6152 (toList!851 call!14585)))))

(assert (=> d!41641 (= (insertStrictlySorted!91 (t!6152 (toList!851 call!14585)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70371)))

(declare-fun b!134792 () Bool)

(declare-fun e!87770 () List!1710)

(assert (=> b!134792 (= e!87773 e!87770)))

(assert (=> b!134792 (= c!25154 (and ((_ is Cons!1706) (t!6152 (toList!851 call!14585))) (= (_1!1303 (h!2311 (t!6152 (toList!851 call!14585)))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134793 () Bool)

(declare-fun e!87772 () List!1710)

(declare-fun call!14830 () List!1710)

(assert (=> b!134793 (= e!87772 call!14830)))

(declare-fun b!134794 () Bool)

(declare-fun call!14831 () List!1710)

(assert (=> b!134794 (= e!87770 call!14831)))

(declare-fun b!134795 () Bool)

(assert (=> b!134795 (= e!87771 (contains!889 lt!70371 (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14828 () Bool)

(assert (=> bm!14828 (= call!14831 call!14832)))

(declare-fun bm!14829 () Bool)

(assert (=> bm!14829 (= call!14830 call!14831)))

(declare-fun b!134796 () Bool)

(assert (=> b!134796 (= c!25157 (and ((_ is Cons!1706) (t!6152 (toList!851 call!14585))) (bvsgt (_1!1303 (h!2311 (t!6152 (toList!851 call!14585)))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!134796 (= e!87770 e!87772)))

(declare-fun b!134797 () Bool)

(assert (=> b!134797 (= e!87772 call!14830)))

(assert (= (and d!41641 c!25155) b!134789))

(assert (= (and d!41641 (not c!25155)) b!134792))

(assert (= (and b!134792 c!25154) b!134794))

(assert (= (and b!134792 (not c!25154)) b!134796))

(assert (= (and b!134796 c!25157) b!134797))

(assert (= (and b!134796 (not c!25157)) b!134793))

(assert (= (or b!134797 b!134793) bm!14829))

(assert (= (or b!134794 bm!14829) bm!14828))

(assert (= (or b!134789 bm!14828) bm!14827))

(assert (= (and bm!14827 c!25156) b!134788))

(assert (= (and bm!14827 (not c!25156)) b!134791))

(assert (= (and d!41641 res!64718) b!134790))

(assert (= (and b!134790 res!64719) b!134795))

(declare-fun m!159865 () Bool)

(assert (=> b!134795 m!159865))

(declare-fun m!159867 () Bool)

(assert (=> b!134790 m!159867))

(declare-fun m!159869 () Bool)

(assert (=> b!134788 m!159869))

(declare-fun m!159871 () Bool)

(assert (=> d!41641 m!159871))

(assert (=> d!41641 m!159711))

(declare-fun m!159873 () Bool)

(assert (=> bm!14827 m!159873))

(assert (=> b!133741 d!41641))

(assert (=> b!133397 d!41519))

(declare-fun d!41643 () Bool)

(declare-fun lt!70372 () Bool)

(assert (=> d!41643 (= lt!70372 (select (content!133 lt!69494) (tuple2!2585 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun e!87776 () Bool)

(assert (=> d!41643 (= lt!70372 e!87776)))

(declare-fun res!64720 () Bool)

(assert (=> d!41643 (=> (not res!64720) (not e!87776))))

(assert (=> d!41643 (= res!64720 ((_ is Cons!1706) lt!69494))))

(assert (=> d!41643 (= (contains!889 lt!69494 (tuple2!2585 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!70372)))

(declare-fun b!134798 () Bool)

(declare-fun e!87775 () Bool)

(assert (=> b!134798 (= e!87776 e!87775)))

(declare-fun res!64721 () Bool)

(assert (=> b!134798 (=> res!64721 e!87775)))

(assert (=> b!134798 (= res!64721 (= (h!2311 lt!69494) (tuple2!2585 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!134799 () Bool)

(assert (=> b!134799 (= e!87775 (contains!889 (t!6152 lt!69494) (tuple2!2585 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(assert (= (and d!41643 res!64720) b!134798))

(assert (= (and b!134798 (not res!64721)) b!134799))

(declare-fun m!159875 () Bool)

(assert (=> d!41643 m!159875))

(declare-fun m!159877 () Bool)

(assert (=> d!41643 m!159877))

(declare-fun m!159879 () Bool)

(assert (=> b!134799 m!159879))

(assert (=> b!133652 d!41643))

(declare-fun d!41645 () Bool)

(assert (=> d!41645 (= (get!1480 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3191 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133266 d!41645))

(declare-fun d!41647 () Bool)

(assert (=> d!41647 (= (get!1482 (getValueByKey!170 (toList!851 lt!69250) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3198 (getValueByKey!170 (toList!851 lt!69250) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40953 d!41647))

(assert (=> d!40953 d!41445))

(declare-fun d!41649 () Bool)

(declare-fun c!25158 () Bool)

(assert (=> d!41649 (= c!25158 (and ((_ is Cons!1706) (toList!851 lt!69793)) (= (_1!1303 (h!2311 (toList!851 lt!69793))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun e!87777 () Option!176)

(assert (=> d!41649 (= (getValueByKey!170 (toList!851 lt!69793) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) e!87777)))

(declare-fun b!134802 () Bool)

(declare-fun e!87778 () Option!176)

(assert (=> b!134802 (= e!87778 (getValueByKey!170 (t!6152 (toList!851 lt!69793)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!134801 () Bool)

(assert (=> b!134801 (= e!87777 e!87778)))

(declare-fun c!25159 () Bool)

(assert (=> b!134801 (= c!25159 (and ((_ is Cons!1706) (toList!851 lt!69793)) (not (= (_1!1303 (h!2311 (toList!851 lt!69793))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!134800 () Bool)

(assert (=> b!134800 (= e!87777 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69793)))))))

(declare-fun b!134803 () Bool)

(assert (=> b!134803 (= e!87778 None!174)))

(assert (= (and d!41649 c!25158) b!134800))

(assert (= (and d!41649 (not c!25158)) b!134801))

(assert (= (and b!134801 c!25159) b!134802))

(assert (= (and b!134801 (not c!25159)) b!134803))

(declare-fun m!159881 () Bool)

(assert (=> b!134802 m!159881))

(assert (=> b!133586 d!41649))

(assert (=> d!40545 d!40571))

(declare-fun d!41651 () Bool)

(assert (=> d!41651 (= (arrayCountValidKeys!0 lt!69449 (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(assert (=> d!41651 true))

(declare-fun _$85!12 () Unit!4132)

(assert (=> d!41651 (= (choose!2 lt!69449 (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))) _$85!12)))

(declare-fun bs!5614 () Bool)

(assert (= bs!5614 d!41651))

(assert (=> bs!5614 m!156559))

(assert (=> d!40545 d!41651))

(declare-fun b!134804 () Bool)

(declare-fun e!87782 () Bool)

(declare-fun e!87779 () Bool)

(assert (=> b!134804 (= e!87782 e!87779)))

(declare-fun res!64722 () Bool)

(assert (=> b!134804 (=> (not res!64722) (not e!87779))))

(declare-fun e!87780 () Bool)

(assert (=> b!134804 (= res!64722 (not e!87780))))

(declare-fun res!64724 () Bool)

(assert (=> b!134804 (=> (not res!64724) (not e!87780))))

(assert (=> b!134804 (= res!64724 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun c!25160 () Bool)

(declare-fun bm!14830 () Bool)

(declare-fun call!14833 () Bool)

(assert (=> bm!14830 (= call!14833 (arrayNoDuplicates!0 (_keys!4612 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!25160 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24692 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708))) (ite c!24692 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708)))))))

(declare-fun d!41653 () Bool)

(declare-fun res!64723 () Bool)

(assert (=> d!41653 (=> res!64723 e!87782)))

(assert (=> d!41653 (= res!64723 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!41653 (= (arrayNoDuplicates!0 (_keys!4612 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24692 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708))) e!87782)))

(declare-fun b!134805 () Bool)

(declare-fun e!87781 () Bool)

(assert (=> b!134805 (= e!87781 call!14833)))

(declare-fun b!134806 () Bool)

(assert (=> b!134806 (= e!87780 (contains!888 (ite c!24692 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134807 () Bool)

(assert (=> b!134807 (= e!87779 e!87781)))

(assert (=> b!134807 (= c!25160 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134808 () Bool)

(assert (=> b!134808 (= e!87781 call!14833)))

(assert (= (and d!41653 (not res!64723)) b!134804))

(assert (= (and b!134804 res!64724) b!134806))

(assert (= (and b!134804 res!64722) b!134807))

(assert (= (and b!134807 c!25160) b!134805))

(assert (= (and b!134807 (not c!25160)) b!134808))

(assert (= (or b!134805 b!134808) bm!14830))

(assert (=> b!134804 m!159107))

(assert (=> b!134804 m!159107))

(assert (=> b!134804 m!159115))

(assert (=> bm!14830 m!159107))

(declare-fun m!159883 () Bool)

(assert (=> bm!14830 m!159883))

(assert (=> b!134806 m!159107))

(assert (=> b!134806 m!159107))

(declare-fun m!159885 () Bool)

(assert (=> b!134806 m!159885))

(assert (=> b!134807 m!159107))

(assert (=> b!134807 m!159107))

(assert (=> b!134807 m!159115))

(assert (=> bm!14690 d!41653))

(declare-fun d!41655 () Bool)

(assert (=> d!41655 (arrayNoDuplicates!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) lt!69450 lt!69457)))

(assert (=> d!41655 true))

(declare-fun _$65!62 () Unit!4132)

(assert (=> d!41655 (= (choose!41 (_keys!4612 newMap!16) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) lt!69450 lt!69457) _$65!62)))

(declare-fun bs!5615 () Bool)

(assert (= bs!5615 d!41655))

(assert (=> bs!5615 m!156563))

(assert (=> bs!5615 m!156557))

(assert (=> d!40555 d!41655))

(assert (=> b!133338 d!40519))

(declare-fun d!41657 () Bool)

(declare-fun e!87783 () Bool)

(assert (=> d!41657 e!87783))

(declare-fun res!64725 () Bool)

(assert (=> d!41657 (=> res!64725 e!87783)))

(declare-fun lt!70374 () Bool)

(assert (=> d!41657 (= res!64725 (not lt!70374))))

(declare-fun lt!70376 () Bool)

(assert (=> d!41657 (= lt!70374 lt!70376)))

(declare-fun lt!70373 () Unit!4132)

(declare-fun e!87784 () Unit!4132)

(assert (=> d!41657 (= lt!70373 e!87784)))

(declare-fun c!25161 () Bool)

(assert (=> d!41657 (= c!25161 lt!70376)))

(assert (=> d!41657 (= lt!70376 (containsKey!174 (toList!851 lt!69696) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41657 (= (contains!886 lt!69696 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70374)))

(declare-fun b!134809 () Bool)

(declare-fun lt!70375 () Unit!4132)

(assert (=> b!134809 (= e!87784 lt!70375)))

(assert (=> b!134809 (= lt!70375 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69696) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134809 (isDefined!124 (getValueByKey!170 (toList!851 lt!69696) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134810 () Bool)

(declare-fun Unit!4223 () Unit!4132)

(assert (=> b!134810 (= e!87784 Unit!4223)))

(declare-fun b!134811 () Bool)

(assert (=> b!134811 (= e!87783 (isDefined!124 (getValueByKey!170 (toList!851 lt!69696) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41657 c!25161) b!134809))

(assert (= (and d!41657 (not c!25161)) b!134810))

(assert (= (and d!41657 (not res!64725)) b!134811))

(declare-fun m!159887 () Bool)

(assert (=> d!41657 m!159887))

(declare-fun m!159889 () Bool)

(assert (=> b!134809 m!159889))

(declare-fun m!159891 () Bool)

(assert (=> b!134809 m!159891))

(assert (=> b!134809 m!159891))

(declare-fun m!159893 () Bool)

(assert (=> b!134809 m!159893))

(assert (=> b!134811 m!159891))

(assert (=> b!134811 m!159891))

(assert (=> b!134811 m!159893))

(assert (=> b!133472 d!41657))

(declare-fun d!41659 () Bool)

(declare-fun e!87785 () Bool)

(assert (=> d!41659 e!87785))

(declare-fun res!64727 () Bool)

(assert (=> d!41659 (=> (not res!64727) (not e!87785))))

(declare-fun lt!70379 () ListLongMap!1671)

(assert (=> d!41659 (= res!64727 (contains!886 lt!70379 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70377 () List!1710)

(assert (=> d!41659 (= lt!70379 (ListLongMap!1672 lt!70377))))

(declare-fun lt!70380 () Unit!4132)

(declare-fun lt!70378 () Unit!4132)

(assert (=> d!41659 (= lt!70380 lt!70378)))

(assert (=> d!41659 (= (getValueByKey!170 lt!70377 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41659 (= lt!70378 (lemmaContainsTupThenGetReturnValue!88 lt!70377 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41659 (= lt!70377 (insertStrictlySorted!91 (toList!851 call!14708) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41659 (= (+!163 call!14708 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70379)))

(declare-fun b!134812 () Bool)

(declare-fun res!64726 () Bool)

(assert (=> b!134812 (=> (not res!64726) (not e!87785))))

(assert (=> b!134812 (= res!64726 (= (getValueByKey!170 (toList!851 lt!70379) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!134813 () Bool)

(assert (=> b!134813 (= e!87785 (contains!889 (toList!851 lt!70379) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!41659 res!64727) b!134812))

(assert (= (and b!134812 res!64726) b!134813))

(declare-fun m!159895 () Bool)

(assert (=> d!41659 m!159895))

(declare-fun m!159897 () Bool)

(assert (=> d!41659 m!159897))

(declare-fun m!159899 () Bool)

(assert (=> d!41659 m!159899))

(declare-fun m!159901 () Bool)

(assert (=> d!41659 m!159901))

(declare-fun m!159903 () Bool)

(assert (=> b!134812 m!159903))

(declare-fun m!159905 () Bool)

(assert (=> b!134813 m!159905))

(assert (=> b!133411 d!41659))

(assert (=> d!40609 d!40589))

(assert (=> d!40609 d!40595))

(assert (=> d!40609 d!40599))

(declare-fun d!41661 () Bool)

(declare-fun e!87786 () Bool)

(assert (=> d!41661 e!87786))

(declare-fun res!64728 () Bool)

(assert (=> d!41661 (=> res!64728 e!87786)))

(declare-fun lt!70382 () Bool)

(assert (=> d!41661 (= res!64728 (not lt!70382))))

(declare-fun lt!70384 () Bool)

(assert (=> d!41661 (= lt!70382 lt!70384)))

(declare-fun lt!70381 () Unit!4132)

(declare-fun e!87787 () Unit!4132)

(assert (=> d!41661 (= lt!70381 e!87787)))

(declare-fun c!25162 () Bool)

(assert (=> d!41661 (= c!25162 lt!70384)))

(assert (=> d!41661 (= lt!70384 (containsKey!174 (toList!851 lt!69477) lt!69488))))

(assert (=> d!41661 (= (contains!886 lt!69477 lt!69488) lt!70382)))

(declare-fun b!134814 () Bool)

(declare-fun lt!70383 () Unit!4132)

(assert (=> b!134814 (= e!87787 lt!70383)))

(assert (=> b!134814 (= lt!70383 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69477) lt!69488))))

(assert (=> b!134814 (isDefined!124 (getValueByKey!170 (toList!851 lt!69477) lt!69488))))

(declare-fun b!134815 () Bool)

(declare-fun Unit!4224 () Unit!4132)

(assert (=> b!134815 (= e!87787 Unit!4224)))

(declare-fun b!134816 () Bool)

(assert (=> b!134816 (= e!87786 (isDefined!124 (getValueByKey!170 (toList!851 lt!69477) lt!69488)))))

(assert (= (and d!41661 c!25162) b!134814))

(assert (= (and d!41661 (not c!25162)) b!134815))

(assert (= (and d!41661 (not res!64728)) b!134816))

(declare-fun m!159907 () Bool)

(assert (=> d!41661 m!159907))

(declare-fun m!159909 () Bool)

(assert (=> b!134814 m!159909))

(assert (=> b!134814 m!157315))

(assert (=> b!134814 m!157315))

(declare-fun m!159911 () Bool)

(assert (=> b!134814 m!159911))

(assert (=> b!134816 m!157315))

(assert (=> b!134816 m!157315))

(assert (=> b!134816 m!159911))

(assert (=> d!40609 d!41661))

(declare-fun d!41663 () Bool)

(assert (=> d!41663 (= (apply!116 (+!163 lt!69477 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69488) (apply!116 lt!69477 lt!69488))))

(assert (=> d!41663 true))

(declare-fun _$34!983 () Unit!4132)

(assert (=> d!41663 (= (choose!828 lt!69477 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69488) _$34!983)))

(declare-fun bs!5616 () Bool)

(assert (= bs!5616 d!41663))

(assert (=> bs!5616 m!156627))

(assert (=> bs!5616 m!156627))

(assert (=> bs!5616 m!156649))

(assert (=> bs!5616 m!156647))

(assert (=> d!40609 d!41663))

(declare-fun b!134817 () Bool)

(assert (=> b!134817 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> b!134817 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))))))

(declare-fun e!87788 () Bool)

(declare-fun lt!70387 () ListLongMap!1671)

(assert (=> b!134817 (= e!87788 (= (apply!116 lt!70387 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!14831 () Bool)

(declare-fun call!14834 () ListLongMap!1671)

(assert (=> bm!14831 (= call!14834 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!134818 () Bool)

(declare-fun e!87791 () ListLongMap!1671)

(assert (=> b!134818 (= e!87791 call!14834)))

(declare-fun b!134819 () Bool)

(declare-fun e!87793 () Bool)

(declare-fun e!87790 () Bool)

(assert (=> b!134819 (= e!87793 e!87790)))

(declare-fun c!25166 () Bool)

(assert (=> b!134819 (= c!25166 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!134820 () Bool)

(assert (=> b!134820 (= e!87790 (isEmpty!414 lt!70387))))

(declare-fun b!134821 () Bool)

(declare-fun e!87794 () Bool)

(assert (=> b!134821 (= e!87794 e!87793)))

(declare-fun c!25163 () Bool)

(declare-fun e!87789 () Bool)

(assert (=> b!134821 (= c!25163 e!87789)))

(declare-fun res!64731 () Bool)

(assert (=> b!134821 (=> (not res!64731) (not e!87789))))

(assert (=> b!134821 (= res!64731 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!134822 () Bool)

(assert (=> b!134822 (= e!87789 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134822 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134823 () Bool)

(declare-fun lt!70386 () Unit!4132)

(declare-fun lt!70391 () Unit!4132)

(assert (=> b!134823 (= lt!70386 lt!70391)))

(declare-fun lt!70385 () ListLongMap!1671)

(declare-fun lt!70390 () (_ BitVec 64))

(declare-fun lt!70389 () V!3481)

(declare-fun lt!70388 () (_ BitVec 64))

(assert (=> b!134823 (not (contains!886 (+!163 lt!70385 (tuple2!2585 lt!70388 lt!70389)) lt!70390))))

(assert (=> b!134823 (= lt!70391 (addStillNotContains!62 lt!70385 lt!70388 lt!70389 lt!70390))))

(assert (=> b!134823 (= lt!70390 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134823 (= lt!70389 (get!1478 (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134823 (= lt!70388 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!134823 (= lt!70385 call!14834)))

(assert (=> b!134823 (= e!87791 (+!163 call!14834 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134824 () Bool)

(declare-fun e!87792 () ListLongMap!1671)

(assert (=> b!134824 (= e!87792 e!87791)))

(declare-fun c!25164 () Bool)

(assert (=> b!134824 (= c!25164 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134825 () Bool)

(assert (=> b!134825 (= e!87792 (ListLongMap!1672 Nil!1707))))

(declare-fun d!41665 () Bool)

(assert (=> d!41665 e!87794))

(declare-fun res!64730 () Bool)

(assert (=> d!41665 (=> (not res!64730) (not e!87794))))

(assert (=> d!41665 (= res!64730 (not (contains!886 lt!70387 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41665 (= lt!70387 e!87792)))

(declare-fun c!25165 () Bool)

(assert (=> d!41665 (= c!25165 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!41665 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!41665 (= (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!70387)))

(declare-fun b!134826 () Bool)

(assert (=> b!134826 (= e!87790 (= lt!70387 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun b!134827 () Bool)

(declare-fun res!64732 () Bool)

(assert (=> b!134827 (=> (not res!64732) (not e!87794))))

(assert (=> b!134827 (= res!64732 (not (contains!886 lt!70387 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134828 () Bool)

(assert (=> b!134828 (= e!87793 e!87788)))

(assert (=> b!134828 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64729 () Bool)

(assert (=> b!134828 (= res!64729 (contains!886 lt!70387 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134828 (=> (not res!64729) (not e!87788))))

(assert (= (and d!41665 c!25165) b!134825))

(assert (= (and d!41665 (not c!25165)) b!134824))

(assert (= (and b!134824 c!25164) b!134823))

(assert (= (and b!134824 (not c!25164)) b!134818))

(assert (= (or b!134823 b!134818) bm!14831))

(assert (= (and d!41665 res!64730) b!134827))

(assert (= (and b!134827 res!64732) b!134821))

(assert (= (and b!134821 res!64731) b!134822))

(assert (= (and b!134821 c!25163) b!134828))

(assert (= (and b!134821 (not c!25163)) b!134819))

(assert (= (and b!134828 res!64729) b!134817))

(assert (= (and b!134819 c!25166) b!134826))

(assert (= (and b!134819 (not c!25166)) b!134820))

(declare-fun b_lambda!6003 () Bool)

(assert (=> (not b_lambda!6003) (not b!134817)))

(assert (=> b!134817 t!6164))

(declare-fun b_and!8337 () Bool)

(assert (= b_and!8333 (and (=> t!6164 result!3993) b_and!8337)))

(assert (=> b!134817 t!6166))

(declare-fun b_and!8339 () Bool)

(assert (= b_and!8335 (and (=> t!6166 result!3995) b_and!8339)))

(declare-fun b_lambda!6005 () Bool)

(assert (=> (not b_lambda!6005) (not b!134823)))

(assert (=> b!134823 t!6164))

(declare-fun b_and!8341 () Bool)

(assert (= b_and!8337 (and (=> t!6164 result!3993) b_and!8341)))

(assert (=> b!134823 t!6166))

(declare-fun b_and!8343 () Bool)

(assert (= b_and!8339 (and (=> t!6166 result!3995) b_and!8343)))

(assert (=> b!134822 m!156125))

(assert (=> b!134822 m!156125))

(assert (=> b!134822 m!156141))

(declare-fun m!159913 () Bool)

(assert (=> b!134827 m!159913))

(assert (=> b!134823 m!157411))

(declare-fun m!159915 () Bool)

(assert (=> b!134823 m!159915))

(assert (=> b!134823 m!156125))

(assert (=> b!134823 m!157411))

(assert (=> b!134823 m!156135))

(assert (=> b!134823 m!157413))

(declare-fun m!159917 () Bool)

(assert (=> b!134823 m!159917))

(declare-fun m!159919 () Bool)

(assert (=> b!134823 m!159919))

(assert (=> b!134823 m!156135))

(declare-fun m!159921 () Bool)

(assert (=> b!134823 m!159921))

(assert (=> b!134823 m!159917))

(declare-fun m!159923 () Bool)

(assert (=> b!134826 m!159923))

(assert (=> b!134828 m!156125))

(assert (=> b!134828 m!156125))

(declare-fun m!159925 () Bool)

(assert (=> b!134828 m!159925))

(declare-fun m!159927 () Bool)

(assert (=> b!134820 m!159927))

(assert (=> bm!14831 m!159923))

(declare-fun m!159929 () Bool)

(assert (=> d!41665 m!159929))

(assert (=> d!41665 m!156183))

(assert (=> b!134824 m!156125))

(assert (=> b!134824 m!156125))

(assert (=> b!134824 m!156141))

(assert (=> b!134817 m!157411))

(assert (=> b!134817 m!156125))

(assert (=> b!134817 m!157411))

(assert (=> b!134817 m!156135))

(assert (=> b!134817 m!157413))

(assert (=> b!134817 m!156135))

(assert (=> b!134817 m!156125))

(declare-fun m!159931 () Bool)

(assert (=> b!134817 m!159931))

(assert (=> bm!14720 d!41665))

(declare-fun d!41667 () Bool)

(declare-fun c!25167 () Bool)

(assert (=> d!41667 (= c!25167 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69519))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69519)))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87795 () Option!176)

(assert (=> d!41667 (= (getValueByKey!170 (t!6152 (toList!851 lt!69519)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87795)))

(declare-fun b!134831 () Bool)

(declare-fun e!87796 () Option!176)

(assert (=> b!134831 (= e!87796 (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69519))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!134830 () Bool)

(assert (=> b!134830 (= e!87795 e!87796)))

(declare-fun c!25168 () Bool)

(assert (=> b!134830 (= c!25168 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69519))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69519)))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!134829 () Bool)

(assert (=> b!134829 (= e!87795 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 lt!69519))))))))

(declare-fun b!134832 () Bool)

(assert (=> b!134832 (= e!87796 None!174)))

(assert (= (and d!41667 c!25167) b!134829))

(assert (= (and d!41667 (not c!25167)) b!134830))

(assert (= (and b!134830 c!25168) b!134831))

(assert (= (and b!134830 (not c!25168)) b!134832))

(declare-fun m!159933 () Bool)

(assert (=> b!134831 m!159933))

(assert (=> b!133821 d!41667))

(declare-fun d!41669 () Bool)

(declare-fun res!64733 () Bool)

(declare-fun e!87797 () Bool)

(assert (=> d!41669 (=> res!64733 e!87797)))

(assert (=> d!41669 (= res!64733 (and ((_ is Cons!1706) (toList!851 lt!69362)) (= (_1!1303 (h!2311 (toList!851 lt!69362))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41669 (= (containsKey!174 (toList!851 lt!69362) #b0000000000000000000000000000000000000000000000000000000000000000) e!87797)))

(declare-fun b!134833 () Bool)

(declare-fun e!87798 () Bool)

(assert (=> b!134833 (= e!87797 e!87798)))

(declare-fun res!64734 () Bool)

(assert (=> b!134833 (=> (not res!64734) (not e!87798))))

(assert (=> b!134833 (= res!64734 (and (or (not ((_ is Cons!1706) (toList!851 lt!69362))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69362))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1706) (toList!851 lt!69362)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69362))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134834 () Bool)

(assert (=> b!134834 (= e!87798 (containsKey!174 (t!6152 (toList!851 lt!69362)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41669 (not res!64733)) b!134833))

(assert (= (and b!134833 res!64734) b!134834))

(declare-fun m!159935 () Bool)

(assert (=> b!134834 m!159935))

(assert (=> d!40883 d!41669))

(declare-fun d!41671 () Bool)

(declare-fun e!87799 () Bool)

(assert (=> d!41671 e!87799))

(declare-fun res!64735 () Bool)

(assert (=> d!41671 (=> res!64735 e!87799)))

(declare-fun lt!70393 () Bool)

(assert (=> d!41671 (= res!64735 (not lt!70393))))

(declare-fun lt!70395 () Bool)

(assert (=> d!41671 (= lt!70393 lt!70395)))

(declare-fun lt!70392 () Unit!4132)

(declare-fun e!87800 () Unit!4132)

(assert (=> d!41671 (= lt!70392 e!87800)))

(declare-fun c!25169 () Bool)

(assert (=> d!41671 (= c!25169 lt!70395)))

(assert (=> d!41671 (= lt!70395 (containsKey!174 (toList!851 lt!70002) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))

(assert (=> d!41671 (= (contains!886 lt!70002 (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))) lt!70393)))

(declare-fun b!134835 () Bool)

(declare-fun lt!70394 () Unit!4132)

(assert (=> b!134835 (= e!87800 lt!70394)))

(assert (=> b!134835 (= lt!70394 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!70002) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))

(assert (=> b!134835 (isDefined!124 (getValueByKey!170 (toList!851 lt!70002) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))

(declare-fun b!134836 () Bool)

(declare-fun Unit!4225 () Unit!4132)

(assert (=> b!134836 (= e!87800 Unit!4225)))

(declare-fun b!134837 () Bool)

(assert (=> b!134837 (= e!87799 (isDefined!124 (getValueByKey!170 (toList!851 lt!70002) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))))))

(assert (= (and d!41671 c!25169) b!134835))

(assert (= (and d!41671 (not c!25169)) b!134836))

(assert (= (and d!41671 (not res!64735)) b!134837))

(declare-fun m!159937 () Bool)

(assert (=> d!41671 m!159937))

(declare-fun m!159939 () Bool)

(assert (=> b!134835 m!159939))

(assert (=> b!134835 m!158279))

(assert (=> b!134835 m!158279))

(declare-fun m!159941 () Bool)

(assert (=> b!134835 m!159941))

(assert (=> b!134837 m!158279))

(assert (=> b!134837 m!158279))

(assert (=> b!134837 m!159941))

(assert (=> d!40917 d!41671))

(declare-fun d!41673 () Bool)

(declare-fun c!25170 () Bool)

(assert (=> d!41673 (= c!25170 (and ((_ is Cons!1706) lt!70000) (= (_1!1303 (h!2311 lt!70000)) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))))))

(declare-fun e!87801 () Option!176)

(assert (=> d!41673 (= (getValueByKey!170 lt!70000 (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))) e!87801)))

(declare-fun e!87802 () Option!176)

(declare-fun b!134840 () Bool)

(assert (=> b!134840 (= e!87802 (getValueByKey!170 (t!6152 lt!70000) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))

(declare-fun b!134839 () Bool)

(assert (=> b!134839 (= e!87801 e!87802)))

(declare-fun c!25171 () Bool)

(assert (=> b!134839 (= c!25171 (and ((_ is Cons!1706) lt!70000) (not (= (_1!1303 (h!2311 lt!70000)) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))))

(declare-fun b!134838 () Bool)

(assert (=> b!134838 (= e!87801 (Some!175 (_2!1303 (h!2311 lt!70000))))))

(declare-fun b!134841 () Bool)

(assert (=> b!134841 (= e!87802 None!174)))

(assert (= (and d!41673 c!25170) b!134838))

(assert (= (and d!41673 (not c!25170)) b!134839))

(assert (= (and b!134839 c!25171) b!134840))

(assert (= (and b!134839 (not c!25171)) b!134841))

(declare-fun m!159943 () Bool)

(assert (=> b!134840 m!159943))

(assert (=> d!40917 d!41673))

(declare-fun d!41675 () Bool)

(assert (=> d!41675 (= (getValueByKey!170 lt!70000 (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))

(declare-fun lt!70396 () Unit!4132)

(assert (=> d!41675 (= lt!70396 (choose!834 lt!70000 (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))

(declare-fun e!87803 () Bool)

(assert (=> d!41675 e!87803))

(declare-fun res!64736 () Bool)

(assert (=> d!41675 (=> (not res!64736) (not e!87803))))

(assert (=> d!41675 (= res!64736 (isStrictlySorted!317 lt!70000))))

(assert (=> d!41675 (= (lemmaContainsTupThenGetReturnValue!88 lt!70000 (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))) lt!70396)))

(declare-fun b!134842 () Bool)

(declare-fun res!64737 () Bool)

(assert (=> b!134842 (=> (not res!64737) (not e!87803))))

(assert (=> b!134842 (= res!64737 (containsKey!174 lt!70000 (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))

(declare-fun b!134843 () Bool)

(assert (=> b!134843 (= e!87803 (contains!889 lt!70000 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))))))

(assert (= (and d!41675 res!64736) b!134842))

(assert (= (and b!134842 res!64737) b!134843))

(assert (=> d!41675 m!158273))

(declare-fun m!159945 () Bool)

(assert (=> d!41675 m!159945))

(declare-fun m!159947 () Bool)

(assert (=> d!41675 m!159947))

(declare-fun m!159949 () Bool)

(assert (=> b!134842 m!159949))

(declare-fun m!159951 () Bool)

(assert (=> b!134843 m!159951))

(assert (=> d!40917 d!41675))

(declare-fun e!87808 () List!1710)

(declare-fun b!134844 () Bool)

(assert (=> b!134844 (= e!87808 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69355)) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))

(declare-fun b!134845 () Bool)

(declare-fun e!87807 () List!1710)

(declare-fun call!14837 () List!1710)

(assert (=> b!134845 (= e!87807 call!14837)))

(declare-fun b!134846 () Bool)

(declare-fun res!64739 () Bool)

(declare-fun e!87805 () Bool)

(assert (=> b!134846 (=> (not res!64739) (not e!87805))))

(declare-fun lt!70397 () List!1710)

(assert (=> b!134846 (= res!64739 (containsKey!174 lt!70397 (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))

(declare-fun c!25173 () Bool)

(declare-fun bm!14832 () Bool)

(assert (=> bm!14832 (= call!14837 ($colon$colon!91 e!87808 (ite c!25173 (h!2311 (toList!851 lt!69355)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))))

(declare-fun c!25174 () Bool)

(assert (=> bm!14832 (= c!25174 c!25173)))

(declare-fun c!25172 () Bool)

(declare-fun b!134847 () Bool)

(declare-fun c!25175 () Bool)

(assert (=> b!134847 (= e!87808 (ite c!25172 (t!6152 (toList!851 lt!69355)) (ite c!25175 (Cons!1706 (h!2311 (toList!851 lt!69355)) (t!6152 (toList!851 lt!69355))) Nil!1707)))))

(declare-fun d!41677 () Bool)

(assert (=> d!41677 e!87805))

(declare-fun res!64738 () Bool)

(assert (=> d!41677 (=> (not res!64738) (not e!87805))))

(assert (=> d!41677 (= res!64738 (isStrictlySorted!317 lt!70397))))

(assert (=> d!41677 (= lt!70397 e!87807)))

(assert (=> d!41677 (= c!25173 (and ((_ is Cons!1706) (toList!851 lt!69355)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69355))) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))))))

(assert (=> d!41677 (isStrictlySorted!317 (toList!851 lt!69355))))

(assert (=> d!41677 (= (insertStrictlySorted!91 (toList!851 lt!69355) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))) lt!70397)))

(declare-fun b!134848 () Bool)

(declare-fun e!87804 () List!1710)

(assert (=> b!134848 (= e!87807 e!87804)))

(assert (=> b!134848 (= c!25172 (and ((_ is Cons!1706) (toList!851 lt!69355)) (= (_1!1303 (h!2311 (toList!851 lt!69355))) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))))))

(declare-fun b!134849 () Bool)

(declare-fun e!87806 () List!1710)

(declare-fun call!14835 () List!1710)

(assert (=> b!134849 (= e!87806 call!14835)))

(declare-fun b!134850 () Bool)

(declare-fun call!14836 () List!1710)

(assert (=> b!134850 (= e!87804 call!14836)))

(declare-fun b!134851 () Bool)

(assert (=> b!134851 (= e!87805 (contains!889 lt!70397 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))))))

(declare-fun bm!14833 () Bool)

(assert (=> bm!14833 (= call!14836 call!14837)))

(declare-fun bm!14834 () Bool)

(assert (=> bm!14834 (= call!14835 call!14836)))

(declare-fun b!134852 () Bool)

(assert (=> b!134852 (= c!25175 (and ((_ is Cons!1706) (toList!851 lt!69355)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69355))) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))))))

(assert (=> b!134852 (= e!87804 e!87806)))

(declare-fun b!134853 () Bool)

(assert (=> b!134853 (= e!87806 call!14835)))

(assert (= (and d!41677 c!25173) b!134845))

(assert (= (and d!41677 (not c!25173)) b!134848))

(assert (= (and b!134848 c!25172) b!134850))

(assert (= (and b!134848 (not c!25172)) b!134852))

(assert (= (and b!134852 c!25175) b!134853))

(assert (= (and b!134852 (not c!25175)) b!134849))

(assert (= (or b!134853 b!134849) bm!14834))

(assert (= (or b!134850 bm!14834) bm!14833))

(assert (= (or b!134845 bm!14833) bm!14832))

(assert (= (and bm!14832 c!25174) b!134844))

(assert (= (and bm!14832 (not c!25174)) b!134847))

(assert (= (and d!41677 res!64738) b!134846))

(assert (= (and b!134846 res!64739) b!134851))

(declare-fun m!159953 () Bool)

(assert (=> b!134851 m!159953))

(declare-fun m!159955 () Bool)

(assert (=> b!134846 m!159955))

(declare-fun m!159957 () Bool)

(assert (=> b!134844 m!159957))

(declare-fun m!159959 () Bool)

(assert (=> d!41677 m!159959))

(declare-fun m!159961 () Bool)

(assert (=> d!41677 m!159961))

(declare-fun m!159963 () Bool)

(assert (=> bm!14832 m!159963))

(assert (=> d!40917 d!41677))

(declare-fun c!25176 () Bool)

(declare-fun d!41679 () Bool)

(assert (=> d!41679 (= c!25176 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69202))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69202)))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87809 () Option!176)

(assert (=> d!41679 (= (getValueByKey!170 (t!6152 (toList!851 lt!69202)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87809)))

(declare-fun e!87810 () Option!176)

(declare-fun b!134856 () Bool)

(assert (=> b!134856 (= e!87810 (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69202))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134855 () Bool)

(assert (=> b!134855 (= e!87809 e!87810)))

(declare-fun c!25177 () Bool)

(assert (=> b!134855 (= c!25177 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69202))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69202)))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134854 () Bool)

(assert (=> b!134854 (= e!87809 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 lt!69202))))))))

(declare-fun b!134857 () Bool)

(assert (=> b!134857 (= e!87810 None!174)))

(assert (= (and d!41679 c!25176) b!134854))

(assert (= (and d!41679 (not c!25176)) b!134855))

(assert (= (and b!134855 c!25177) b!134856))

(assert (= (and b!134855 (not c!25177)) b!134857))

(declare-fun m!159965 () Bool)

(assert (=> b!134856 m!159965))

(assert (=> b!133543 d!41679))

(declare-fun d!41681 () Bool)

(declare-fun c!25178 () Bool)

(assert (=> d!41681 (= c!25178 (and ((_ is Cons!1706) (toList!851 lt!69805)) (= (_1!1303 (h!2311 (toList!851 lt!69805))) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))))))

(declare-fun e!87811 () Option!176)

(assert (=> d!41681 (= (getValueByKey!170 (toList!851 lt!69805) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))) e!87811)))

(declare-fun b!134860 () Bool)

(declare-fun e!87812 () Option!176)

(assert (=> b!134860 (= e!87812 (getValueByKey!170 (t!6152 (toList!851 lt!69805)) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134859 () Bool)

(assert (=> b!134859 (= e!87811 e!87812)))

(declare-fun c!25179 () Bool)

(assert (=> b!134859 (= c!25179 (and ((_ is Cons!1706) (toList!851 lt!69805)) (not (= (_1!1303 (h!2311 (toList!851 lt!69805))) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!134858 () Bool)

(assert (=> b!134858 (= e!87811 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69805)))))))

(declare-fun b!134861 () Bool)

(assert (=> b!134861 (= e!87812 None!174)))

(assert (= (and d!41681 c!25178) b!134858))

(assert (= (and d!41681 (not c!25178)) b!134859))

(assert (= (and b!134859 c!25179) b!134860))

(assert (= (and b!134859 (not c!25179)) b!134861))

(declare-fun m!159967 () Bool)

(assert (=> b!134860 m!159967))

(assert (=> b!133592 d!41681))

(declare-fun d!41683 () Bool)

(assert (=> d!41683 (= (get!1480 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3191 (select (arr!2249 lt!69094) #b00000000000000000000000000000000)))))

(assert (=> b!133195 d!41683))

(declare-fun d!41685 () Bool)

(assert (=> d!41685 (= (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))) (and (not (= (select (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133433 d!41685))

(declare-fun d!41687 () Bool)

(assert (=> d!41687 (= (isEmpty!414 lt!69735) (isEmpty!415 (toList!851 lt!69735)))))

(declare-fun bs!5617 () Bool)

(assert (= bs!5617 d!41687))

(declare-fun m!159969 () Bool)

(assert (=> bs!5617 m!159969))

(assert (=> b!133497 d!41687))

(declare-fun d!41689 () Bool)

(declare-fun res!64740 () Bool)

(declare-fun e!87813 () Bool)

(assert (=> d!41689 (=> res!64740 e!87813)))

(assert (=> d!41689 (= res!64740 (and ((_ is Cons!1706) (toList!851 lt!69250)) (= (_1!1303 (h!2311 (toList!851 lt!69250))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41689 (= (containsKey!174 (toList!851 lt!69250) #b0000000000000000000000000000000000000000000000000000000000000000) e!87813)))

(declare-fun b!134862 () Bool)

(declare-fun e!87814 () Bool)

(assert (=> b!134862 (= e!87813 e!87814)))

(declare-fun res!64741 () Bool)

(assert (=> b!134862 (=> (not res!64741) (not e!87814))))

(assert (=> b!134862 (= res!64741 (and (or (not ((_ is Cons!1706) (toList!851 lt!69250))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69250))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1706) (toList!851 lt!69250)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69250))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134863 () Bool)

(assert (=> b!134863 (= e!87814 (containsKey!174 (t!6152 (toList!851 lt!69250)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41689 (not res!64740)) b!134862))

(assert (= (and b!134862 res!64741) b!134863))

(declare-fun m!159971 () Bool)

(assert (=> b!134863 m!159971))

(assert (=> d!40665 d!41689))

(assert (=> b!133895 d!41449))

(assert (=> b!133895 d!41023))

(declare-fun lt!70398 () Bool)

(declare-fun d!41691 () Bool)

(assert (=> d!41691 (= lt!70398 (select (content!133 (toList!851 lt!69810)) (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))))

(declare-fun e!87816 () Bool)

(assert (=> d!41691 (= lt!70398 e!87816)))

(declare-fun res!64742 () Bool)

(assert (=> d!41691 (=> (not res!64742) (not e!87816))))

(assert (=> d!41691 (= res!64742 ((_ is Cons!1706) (toList!851 lt!69810)))))

(assert (=> d!41691 (= (contains!889 (toList!851 lt!69810) (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))) lt!70398)))

(declare-fun b!134864 () Bool)

(declare-fun e!87815 () Bool)

(assert (=> b!134864 (= e!87816 e!87815)))

(declare-fun res!64743 () Bool)

(assert (=> b!134864 (=> res!64743 e!87815)))

(assert (=> b!134864 (= res!64743 (= (h!2311 (toList!851 lt!69810)) (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))))

(declare-fun b!134865 () Bool)

(assert (=> b!134865 (= e!87815 (contains!889 (t!6152 (toList!851 lt!69810)) (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41691 res!64742) b!134864))

(assert (= (and b!134864 (not res!64743)) b!134865))

(declare-fun m!159973 () Bool)

(assert (=> d!41691 m!159973))

(declare-fun m!159975 () Bool)

(assert (=> d!41691 m!159975))

(declare-fun m!159977 () Bool)

(assert (=> b!134865 m!159977))

(assert (=> b!133596 d!41691))

(declare-fun d!41693 () Bool)

(declare-fun e!87817 () Bool)

(assert (=> d!41693 e!87817))

(declare-fun res!64744 () Bool)

(assert (=> d!41693 (=> res!64744 e!87817)))

(declare-fun lt!70400 () Bool)

(assert (=> d!41693 (= res!64744 (not lt!70400))))

(declare-fun lt!70402 () Bool)

(assert (=> d!41693 (= lt!70400 lt!70402)))

(declare-fun lt!70399 () Unit!4132)

(declare-fun e!87818 () Unit!4132)

(assert (=> d!41693 (= lt!70399 e!87818)))

(declare-fun c!25180 () Bool)

(assert (=> d!41693 (= c!25180 lt!70402)))

(assert (=> d!41693 (= lt!70402 (containsKey!174 (toList!851 lt!69726) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!41693 (= (contains!886 lt!69726 (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!70400)))

(declare-fun b!134866 () Bool)

(declare-fun lt!70401 () Unit!4132)

(assert (=> b!134866 (= e!87818 lt!70401)))

(assert (=> b!134866 (= lt!70401 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69726) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> b!134866 (isDefined!124 (getValueByKey!170 (toList!851 lt!69726) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!134867 () Bool)

(declare-fun Unit!4226 () Unit!4132)

(assert (=> b!134867 (= e!87818 Unit!4226)))

(declare-fun b!134868 () Bool)

(assert (=> b!134868 (= e!87817 (isDefined!124 (getValueByKey!170 (toList!851 lt!69726) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (= (and d!41693 c!25180) b!134866))

(assert (= (and d!41693 (not c!25180)) b!134867))

(assert (= (and d!41693 (not res!64744)) b!134868))

(declare-fun m!159979 () Bool)

(assert (=> d!41693 m!159979))

(declare-fun m!159981 () Bool)

(assert (=> b!134866 m!159981))

(assert (=> b!134866 m!157363))

(assert (=> b!134866 m!157363))

(declare-fun m!159983 () Bool)

(assert (=> b!134866 m!159983))

(assert (=> b!134868 m!157363))

(assert (=> b!134868 m!157363))

(assert (=> b!134868 m!159983))

(assert (=> d!40613 d!41693))

(declare-fun d!41695 () Bool)

(declare-fun c!25181 () Bool)

(assert (=> d!41695 (= c!25181 (and ((_ is Cons!1706) lt!69724) (= (_1!1303 (h!2311 lt!69724)) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun e!87819 () Option!176)

(assert (=> d!41695 (= (getValueByKey!170 lt!69724 (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) e!87819)))

(declare-fun b!134871 () Bool)

(declare-fun e!87820 () Option!176)

(assert (=> b!134871 (= e!87820 (getValueByKey!170 (t!6152 lt!69724) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!134870 () Bool)

(assert (=> b!134870 (= e!87819 e!87820)))

(declare-fun c!25182 () Bool)

(assert (=> b!134870 (= c!25182 (and ((_ is Cons!1706) lt!69724) (not (= (_1!1303 (h!2311 lt!69724)) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))))

(declare-fun b!134869 () Bool)

(assert (=> b!134869 (= e!87819 (Some!175 (_2!1303 (h!2311 lt!69724))))))

(declare-fun b!134872 () Bool)

(assert (=> b!134872 (= e!87820 None!174)))

(assert (= (and d!41695 c!25181) b!134869))

(assert (= (and d!41695 (not c!25181)) b!134870))

(assert (= (and b!134870 c!25182) b!134871))

(assert (= (and b!134870 (not c!25182)) b!134872))

(declare-fun m!159985 () Bool)

(assert (=> b!134871 m!159985))

(assert (=> d!40613 d!41695))

(declare-fun d!41697 () Bool)

(assert (=> d!41697 (= (getValueByKey!170 lt!69724 (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) (Some!175 (_2!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun lt!70403 () Unit!4132)

(assert (=> d!41697 (= lt!70403 (choose!834 lt!69724 (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun e!87821 () Bool)

(assert (=> d!41697 e!87821))

(declare-fun res!64745 () Bool)

(assert (=> d!41697 (=> (not res!64745) (not e!87821))))

(assert (=> d!41697 (= res!64745 (isStrictlySorted!317 lt!69724))))

(assert (=> d!41697 (= (lemmaContainsTupThenGetReturnValue!88 lt!69724 (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!70403)))

(declare-fun b!134873 () Bool)

(declare-fun res!64746 () Bool)

(assert (=> b!134873 (=> (not res!64746) (not e!87821))))

(assert (=> b!134873 (= res!64746 (containsKey!174 lt!69724 (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!134874 () Bool)

(assert (=> b!134874 (= e!87821 (contains!889 lt!69724 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (= (and d!41697 res!64745) b!134873))

(assert (= (and b!134873 res!64746) b!134874))

(assert (=> d!41697 m!157357))

(declare-fun m!159987 () Bool)

(assert (=> d!41697 m!159987))

(declare-fun m!159989 () Bool)

(assert (=> d!41697 m!159989))

(declare-fun m!159991 () Bool)

(assert (=> b!134873 m!159991))

(declare-fun m!159993 () Bool)

(assert (=> b!134874 m!159993))

(assert (=> d!40613 d!41697))

(declare-fun e!87826 () List!1710)

(declare-fun b!134875 () Bool)

(assert (=> b!134875 (= e!87826 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69468)) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!134876 () Bool)

(declare-fun e!87825 () List!1710)

(declare-fun call!14840 () List!1710)

(assert (=> b!134876 (= e!87825 call!14840)))

(declare-fun b!134877 () Bool)

(declare-fun res!64748 () Bool)

(declare-fun e!87823 () Bool)

(assert (=> b!134877 (=> (not res!64748) (not e!87823))))

(declare-fun lt!70404 () List!1710)

(assert (=> b!134877 (= res!64748 (containsKey!174 lt!70404 (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun bm!14835 () Bool)

(declare-fun c!25184 () Bool)

(assert (=> bm!14835 (= call!14840 ($colon$colon!91 e!87826 (ite c!25184 (h!2311 (toList!851 lt!69468)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))))

(declare-fun c!25185 () Bool)

(assert (=> bm!14835 (= c!25185 c!25184)))

(declare-fun c!25186 () Bool)

(declare-fun b!134878 () Bool)

(declare-fun c!25183 () Bool)

(assert (=> b!134878 (= e!87826 (ite c!25183 (t!6152 (toList!851 lt!69468)) (ite c!25186 (Cons!1706 (h!2311 (toList!851 lt!69468)) (t!6152 (toList!851 lt!69468))) Nil!1707)))))

(declare-fun d!41699 () Bool)

(assert (=> d!41699 e!87823))

(declare-fun res!64747 () Bool)

(assert (=> d!41699 (=> (not res!64747) (not e!87823))))

(assert (=> d!41699 (= res!64747 (isStrictlySorted!317 lt!70404))))

(assert (=> d!41699 (= lt!70404 e!87825)))

(assert (=> d!41699 (= c!25184 (and ((_ is Cons!1706) (toList!851 lt!69468)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69468))) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (=> d!41699 (isStrictlySorted!317 (toList!851 lt!69468))))

(assert (=> d!41699 (= (insertStrictlySorted!91 (toList!851 lt!69468) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!70404)))

(declare-fun b!134879 () Bool)

(declare-fun e!87822 () List!1710)

(assert (=> b!134879 (= e!87825 e!87822)))

(assert (=> b!134879 (= c!25183 (and ((_ is Cons!1706) (toList!851 lt!69468)) (= (_1!1303 (h!2311 (toList!851 lt!69468))) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun b!134880 () Bool)

(declare-fun e!87824 () List!1710)

(declare-fun call!14838 () List!1710)

(assert (=> b!134880 (= e!87824 call!14838)))

(declare-fun b!134881 () Bool)

(declare-fun call!14839 () List!1710)

(assert (=> b!134881 (= e!87822 call!14839)))

(declare-fun b!134882 () Bool)

(assert (=> b!134882 (= e!87823 (contains!889 lt!70404 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun bm!14836 () Bool)

(assert (=> bm!14836 (= call!14839 call!14840)))

(declare-fun bm!14837 () Bool)

(assert (=> bm!14837 (= call!14838 call!14839)))

(declare-fun b!134883 () Bool)

(assert (=> b!134883 (= c!25186 (and ((_ is Cons!1706) (toList!851 lt!69468)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69468))) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (=> b!134883 (= e!87822 e!87824)))

(declare-fun b!134884 () Bool)

(assert (=> b!134884 (= e!87824 call!14838)))

(assert (= (and d!41699 c!25184) b!134876))

(assert (= (and d!41699 (not c!25184)) b!134879))

(assert (= (and b!134879 c!25183) b!134881))

(assert (= (and b!134879 (not c!25183)) b!134883))

(assert (= (and b!134883 c!25186) b!134884))

(assert (= (and b!134883 (not c!25186)) b!134880))

(assert (= (or b!134884 b!134880) bm!14837))

(assert (= (or b!134881 bm!14837) bm!14836))

(assert (= (or b!134876 bm!14836) bm!14835))

(assert (= (and bm!14835 c!25185) b!134875))

(assert (= (and bm!14835 (not c!25185)) b!134878))

(assert (= (and d!41699 res!64747) b!134877))

(assert (= (and b!134877 res!64748) b!134882))

(declare-fun m!159995 () Bool)

(assert (=> b!134882 m!159995))

(declare-fun m!159997 () Bool)

(assert (=> b!134877 m!159997))

(declare-fun m!159999 () Bool)

(assert (=> b!134875 m!159999))

(declare-fun m!160001 () Bool)

(assert (=> d!41699 m!160001))

(declare-fun m!160003 () Bool)

(assert (=> d!41699 m!160003))

(declare-fun m!160005 () Bool)

(assert (=> bm!14835 m!160005))

(assert (=> d!40613 d!41699))

(declare-fun d!41701 () Bool)

(assert (=> d!41701 (= (isEmpty!415 (toList!851 lt!69301)) ((_ is Nil!1707) (toList!851 lt!69301)))))

(assert (=> d!40911 d!41701))

(declare-fun d!41703 () Bool)

(declare-fun e!87827 () Bool)

(assert (=> d!41703 e!87827))

(declare-fun res!64749 () Bool)

(assert (=> d!41703 (=> res!64749 e!87827)))

(declare-fun lt!70406 () Bool)

(assert (=> d!41703 (= res!64749 (not lt!70406))))

(declare-fun lt!70408 () Bool)

(assert (=> d!41703 (= lt!70406 lt!70408)))

(declare-fun lt!70405 () Unit!4132)

(declare-fun e!87828 () Unit!4132)

(assert (=> d!41703 (= lt!70405 e!87828)))

(declare-fun c!25187 () Bool)

(assert (=> d!41703 (= c!25187 lt!70408)))

(assert (=> d!41703 (= lt!70408 (containsKey!174 (toList!851 lt!69674) (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!41703 (= (contains!886 lt!69674 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)) lt!70406)))

(declare-fun b!134885 () Bool)

(declare-fun lt!70407 () Unit!4132)

(assert (=> b!134885 (= e!87828 lt!70407)))

(assert (=> b!134885 (= lt!70407 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69674) (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!134885 (isDefined!124 (getValueByKey!170 (toList!851 lt!69674) (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!134886 () Bool)

(declare-fun Unit!4227 () Unit!4132)

(assert (=> b!134886 (= e!87828 Unit!4227)))

(declare-fun b!134887 () Bool)

(assert (=> b!134887 (= e!87827 (isDefined!124 (getValueByKey!170 (toList!851 lt!69674) (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000))))))

(assert (= (and d!41703 c!25187) b!134885))

(assert (= (and d!41703 (not c!25187)) b!134886))

(assert (= (and d!41703 (not res!64749)) b!134887))

(assert (=> d!41703 m!157049))

(declare-fun m!160007 () Bool)

(assert (=> d!41703 m!160007))

(assert (=> b!134885 m!157049))

(declare-fun m!160009 () Bool)

(assert (=> b!134885 m!160009))

(assert (=> b!134885 m!157049))

(assert (=> b!134885 m!158611))

(assert (=> b!134885 m!158611))

(declare-fun m!160011 () Bool)

(assert (=> b!134885 m!160011))

(assert (=> b!134887 m!157049))

(assert (=> b!134887 m!158611))

(assert (=> b!134887 m!158611))

(assert (=> b!134887 m!160011))

(assert (=> b!133400 d!41703))

(declare-fun d!41705 () Bool)

(assert (=> d!41705 (= ($colon$colon!91 e!86819 (ite c!24689 (h!2311 (toList!851 lt!69170)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (Cons!1706 (ite c!24689 (h!2311 (toList!851 lt!69170)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) e!86819))))

(assert (=> bm!14687 d!41705))

(assert (=> b!133298 d!41133))

(declare-fun d!41707 () Bool)

(assert (=> d!41707 (arrayContainsKey!0 (_keys!4612 newMap!16) lt!69764 #b00000000000000000000000000000000)))

(declare-fun lt!70409 () Unit!4132)

(assert (=> d!41707 (= lt!70409 (choose!13 (_keys!4612 newMap!16) lt!69764 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> d!41707 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!41707 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 newMap!16) lt!69764 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!70409)))

(declare-fun bs!5618 () Bool)

(assert (= bs!5618 d!41707))

(assert (=> bs!5618 m!157483))

(declare-fun m!160013 () Bool)

(assert (=> bs!5618 m!160013))

(assert (=> b!133546 d!41707))

(declare-fun d!41709 () Bool)

(declare-fun res!64750 () Bool)

(declare-fun e!87829 () Bool)

(assert (=> d!41709 (=> res!64750 e!87829)))

(assert (=> d!41709 (= res!64750 (= (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) lt!69764))))

(assert (=> d!41709 (= (arrayContainsKey!0 (_keys!4612 newMap!16) lt!69764 #b00000000000000000000000000000000) e!87829)))

(declare-fun b!134888 () Bool)

(declare-fun e!87830 () Bool)

(assert (=> b!134888 (= e!87829 e!87830)))

(declare-fun res!64751 () Bool)

(assert (=> b!134888 (=> (not res!64751) (not e!87830))))

(assert (=> b!134888 (= res!64751 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!134889 () Bool)

(assert (=> b!134889 (= e!87830 (arrayContainsKey!0 (_keys!4612 newMap!16) lt!69764 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!41709 (not res!64750)) b!134888))

(assert (= (and b!134888 res!64751) b!134889))

(assert (=> d!41709 m!156125))

(declare-fun m!160015 () Bool)

(assert (=> b!134889 m!160015))

(assert (=> b!133546 d!41709))

(declare-fun b!134890 () Bool)

(declare-fun c!25190 () Bool)

(declare-fun lt!70412 () (_ BitVec 64))

(assert (=> b!134890 (= c!25190 (= lt!70412 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87832 () SeekEntryResult!278)

(declare-fun e!87833 () SeekEntryResult!278)

(assert (=> b!134890 (= e!87832 e!87833)))

(declare-fun b!134891 () Bool)

(declare-fun e!87831 () SeekEntryResult!278)

(assert (=> b!134891 (= e!87831 Undefined!278)))

(declare-fun b!134892 () Bool)

(declare-fun lt!70411 () SeekEntryResult!278)

(assert (=> b!134892 (= e!87833 (seekKeyOrZeroReturnVacant!0 (x!15594 lt!70411) (index!3274 lt!70411) (index!3274 lt!70411) (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(declare-fun b!134893 () Bool)

(assert (=> b!134893 (= e!87832 (Found!278 (index!3274 lt!70411)))))

(declare-fun b!134894 () Bool)

(assert (=> b!134894 (= e!87831 e!87832)))

(assert (=> b!134894 (= lt!70412 (select (arr!2248 (_keys!4612 newMap!16)) (index!3274 lt!70411)))))

(declare-fun c!25189 () Bool)

(assert (=> b!134894 (= c!25189 (= lt!70412 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134895 () Bool)

(assert (=> b!134895 (= e!87833 (MissingZero!278 (index!3274 lt!70411)))))

(declare-fun d!41711 () Bool)

(declare-fun lt!70410 () SeekEntryResult!278)

(assert (=> d!41711 (and (or ((_ is Undefined!278) lt!70410) (not ((_ is Found!278) lt!70410)) (and (bvsge (index!3273 lt!70410) #b00000000000000000000000000000000) (bvslt (index!3273 lt!70410) (size!2518 (_keys!4612 newMap!16))))) (or ((_ is Undefined!278) lt!70410) ((_ is Found!278) lt!70410) (not ((_ is MissingZero!278) lt!70410)) (and (bvsge (index!3272 lt!70410) #b00000000000000000000000000000000) (bvslt (index!3272 lt!70410) (size!2518 (_keys!4612 newMap!16))))) (or ((_ is Undefined!278) lt!70410) ((_ is Found!278) lt!70410) ((_ is MissingZero!278) lt!70410) (not ((_ is MissingVacant!278) lt!70410)) (and (bvsge (index!3275 lt!70410) #b00000000000000000000000000000000) (bvslt (index!3275 lt!70410) (size!2518 (_keys!4612 newMap!16))))) (or ((_ is Undefined!278) lt!70410) (ite ((_ is Found!278) lt!70410) (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!70410)) (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!278) lt!70410) (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3272 lt!70410)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!278) lt!70410) (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3275 lt!70410)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41711 (= lt!70410 e!87831)))

(declare-fun c!25188 () Bool)

(assert (=> d!41711 (= c!25188 (and ((_ is Intermediate!278) lt!70411) (undefined!1090 lt!70411)))))

(assert (=> d!41711 (= lt!70411 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7163 newMap!16)) (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(assert (=> d!41711 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!41711 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4612 newMap!16) (mask!7163 newMap!16)) lt!70410)))

(assert (= (and d!41711 c!25188) b!134891))

(assert (= (and d!41711 (not c!25188)) b!134894))

(assert (= (and b!134894 c!25189) b!134893))

(assert (= (and b!134894 (not c!25189)) b!134890))

(assert (= (and b!134890 c!25190) b!134895))

(assert (= (and b!134890 (not c!25190)) b!134892))

(assert (=> b!134892 m!156869))

(declare-fun m!160017 () Bool)

(assert (=> b!134892 m!160017))

(declare-fun m!160019 () Bool)

(assert (=> b!134894 m!160019))

(assert (=> d!41711 m!156183))

(declare-fun m!160021 () Bool)

(assert (=> d!41711 m!160021))

(declare-fun m!160023 () Bool)

(assert (=> d!41711 m!160023))

(assert (=> d!41711 m!156869))

(declare-fun m!160025 () Bool)

(assert (=> d!41711 m!160025))

(declare-fun m!160027 () Bool)

(assert (=> d!41711 m!160027))

(assert (=> d!41711 m!160025))

(assert (=> d!41711 m!156869))

(declare-fun m!160029 () Bool)

(assert (=> d!41711 m!160029))

(assert (=> b!133546 d!41711))

(assert (=> b!133476 d!41443))

(assert (=> b!133476 d!41445))

(declare-fun d!41713 () Bool)

(assert (=> d!41713 (isDefined!124 (getValueByKey!170 (toList!851 lt!69320) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun lt!70413 () Unit!4132)

(assert (=> d!41713 (= lt!70413 (choose!826 (toList!851 lt!69320) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun e!87834 () Bool)

(assert (=> d!41713 e!87834))

(declare-fun res!64752 () Bool)

(assert (=> d!41713 (=> (not res!64752) (not e!87834))))

(assert (=> d!41713 (= res!64752 (isStrictlySorted!317 (toList!851 lt!69320)))))

(assert (=> d!41713 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69320) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!70413)))

(declare-fun b!134896 () Bool)

(assert (=> b!134896 (= e!87834 (containsKey!174 (toList!851 lt!69320) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!41713 res!64752) b!134896))

(assert (=> d!41713 m!156383))

(assert (=> d!41713 m!156383))

(assert (=> d!41713 m!156815))

(declare-fun m!160031 () Bool)

(assert (=> d!41713 m!160031))

(declare-fun m!160033 () Bool)

(assert (=> d!41713 m!160033))

(assert (=> b!134896 m!156811))

(assert (=> b!133197 d!41713))

(assert (=> b!133197 d!41063))

(assert (=> b!133197 d!40445))

(assert (=> d!40921 d!40935))

(assert (=> d!40921 d!40929))

(declare-fun d!41715 () Bool)

(assert (=> d!41715 (contains!886 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))) lt!69358)))

(assert (=> d!41715 true))

(declare-fun _$35!383 () Unit!4132)

(assert (=> d!41715 (= (choose!829 lt!69352 lt!69360 (zeroValue!2719 newMap!16) lt!69358) _$35!383)))

(declare-fun bs!5619 () Bool)

(assert (= bs!5619 d!41715))

(assert (=> bs!5619 m!156489))

(assert (=> bs!5619 m!156489))

(assert (=> bs!5619 m!156501))

(assert (=> d!40921 d!41715))

(declare-fun d!41717 () Bool)

(declare-fun e!87835 () Bool)

(assert (=> d!41717 e!87835))

(declare-fun res!64753 () Bool)

(assert (=> d!41717 (=> res!64753 e!87835)))

(declare-fun lt!70415 () Bool)

(assert (=> d!41717 (= res!64753 (not lt!70415))))

(declare-fun lt!70417 () Bool)

(assert (=> d!41717 (= lt!70415 lt!70417)))

(declare-fun lt!70414 () Unit!4132)

(declare-fun e!87836 () Unit!4132)

(assert (=> d!41717 (= lt!70414 e!87836)))

(declare-fun c!25191 () Bool)

(assert (=> d!41717 (= c!25191 lt!70417)))

(assert (=> d!41717 (= lt!70417 (containsKey!174 (toList!851 lt!69352) lt!69358))))

(assert (=> d!41717 (= (contains!886 lt!69352 lt!69358) lt!70415)))

(declare-fun b!134897 () Bool)

(declare-fun lt!70416 () Unit!4132)

(assert (=> b!134897 (= e!87836 lt!70416)))

(assert (=> b!134897 (= lt!70416 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69352) lt!69358))))

(assert (=> b!134897 (isDefined!124 (getValueByKey!170 (toList!851 lt!69352) lt!69358))))

(declare-fun b!134898 () Bool)

(declare-fun Unit!4228 () Unit!4132)

(assert (=> b!134898 (= e!87836 Unit!4228)))

(declare-fun b!134899 () Bool)

(assert (=> b!134899 (= e!87835 (isDefined!124 (getValueByKey!170 (toList!851 lt!69352) lt!69358)))))

(assert (= (and d!41717 c!25191) b!134897))

(assert (= (and d!41717 (not c!25191)) b!134898))

(assert (= (and d!41717 (not res!64753)) b!134899))

(declare-fun m!160035 () Bool)

(assert (=> d!41717 m!160035))

(declare-fun m!160037 () Bool)

(assert (=> b!134897 m!160037))

(declare-fun m!160039 () Bool)

(assert (=> b!134897 m!160039))

(assert (=> b!134897 m!160039))

(declare-fun m!160041 () Bool)

(assert (=> b!134897 m!160041))

(assert (=> b!134899 m!160039))

(assert (=> b!134899 m!160039))

(assert (=> b!134899 m!160041))

(assert (=> d!40921 d!41717))

(declare-fun d!41719 () Bool)

(assert (=> d!41719 (= ($colon$colon!91 e!87124 (ite c!24832 (h!2311 (toList!851 call!14585)) (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (Cons!1706 (ite c!24832 (h!2311 (toList!851 call!14585)) (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!87124))))

(assert (=> bm!14740 d!41719))

(declare-fun d!41721 () Bool)

(declare-fun res!64754 () Bool)

(declare-fun e!87837 () Bool)

(assert (=> d!41721 (=> res!64754 e!87837)))

(assert (=> d!41721 (= res!64754 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(assert (=> d!41721 (= (containsKey!174 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!87837)))

(declare-fun b!134900 () Bool)

(declare-fun e!87838 () Bool)

(assert (=> b!134900 (= e!87837 e!87838)))

(declare-fun res!64755 () Bool)

(assert (=> b!134900 (=> (not res!64755) (not e!87838))))

(assert (=> b!134900 (= res!64755 (and (or (not ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (bvsle (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvslt (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun b!134901 () Bool)

(assert (=> b!134901 (= e!87838 (containsKey!174 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!41721 (not res!64754)) b!134900))

(assert (= (and b!134900 res!64755) b!134901))

(assert (=> b!134901 m!155841))

(declare-fun m!160043 () Bool)

(assert (=> b!134901 m!160043))

(assert (=> d!40431 d!41721))

(assert (=> b!133249 d!41185))

(declare-fun d!41723 () Bool)

(declare-fun e!87839 () Bool)

(assert (=> d!41723 e!87839))

(declare-fun res!64756 () Bool)

(assert (=> d!41723 (=> res!64756 e!87839)))

(declare-fun lt!70419 () Bool)

(assert (=> d!41723 (= res!64756 (not lt!70419))))

(declare-fun lt!70421 () Bool)

(assert (=> d!41723 (= lt!70419 lt!70421)))

(declare-fun lt!70418 () Unit!4132)

(declare-fun e!87840 () Unit!4132)

(assert (=> d!41723 (= lt!70418 e!87840)))

(declare-fun c!25192 () Bool)

(assert (=> d!41723 (= c!25192 lt!70421)))

(assert (=> d!41723 (= lt!70421 (containsKey!174 (toList!851 lt!69609) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41723 (= (contains!886 lt!69609 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70419)))

(declare-fun b!134902 () Bool)

(declare-fun lt!70420 () Unit!4132)

(assert (=> b!134902 (= e!87840 lt!70420)))

(assert (=> b!134902 (= lt!70420 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69609) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134902 (isDefined!124 (getValueByKey!170 (toList!851 lt!69609) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134903 () Bool)

(declare-fun Unit!4229 () Unit!4132)

(assert (=> b!134903 (= e!87840 Unit!4229)))

(declare-fun b!134904 () Bool)

(assert (=> b!134904 (= e!87839 (isDefined!124 (getValueByKey!170 (toList!851 lt!69609) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41723 c!25192) b!134902))

(assert (= (and d!41723 (not c!25192)) b!134903))

(assert (= (and d!41723 (not res!64756)) b!134904))

(declare-fun m!160045 () Bool)

(assert (=> d!41723 m!160045))

(declare-fun m!160047 () Bool)

(assert (=> b!134902 m!160047))

(declare-fun m!160049 () Bool)

(assert (=> b!134902 m!160049))

(assert (=> b!134902 m!160049))

(declare-fun m!160051 () Bool)

(assert (=> b!134902 m!160051))

(assert (=> b!134904 m!160049))

(assert (=> b!134904 m!160049))

(assert (=> b!134904 m!160051))

(assert (=> b!133341 d!41723))

(declare-fun b!134905 () Bool)

(declare-fun e!87841 () (_ BitVec 32))

(declare-fun e!87842 () (_ BitVec 32))

(assert (=> b!134905 (= e!87841 e!87842)))

(declare-fun c!25194 () Bool)

(assert (=> b!134905 (= c!25194 (validKeyInArray!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134906 () Bool)

(declare-fun call!14841 () (_ BitVec 32))

(assert (=> b!134906 (= e!87842 (bvadd #b00000000000000000000000000000001 call!14841))))

(declare-fun d!41725 () Bool)

(declare-fun lt!70422 () (_ BitVec 32))

(assert (=> d!41725 (and (bvsge lt!70422 #b00000000000000000000000000000000) (bvsle lt!70422 (bvsub (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!41725 (= lt!70422 e!87841)))

(declare-fun c!25193 () Bool)

(assert (=> d!41725 (= c!25193 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!41725 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2518 (_keys!4612 newMap!16)) (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(assert (=> d!41725 (= (arrayCountValidKeys!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))) lt!70422)))

(declare-fun b!134907 () Bool)

(assert (=> b!134907 (= e!87842 call!14841)))

(declare-fun b!134908 () Bool)

(assert (=> b!134908 (= e!87841 #b00000000000000000000000000000000)))

(declare-fun bm!14838 () Bool)

(assert (=> bm!14838 (= call!14841 (arrayCountValidKeys!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (= (and d!41725 c!25193) b!134908))

(assert (= (and d!41725 (not c!25193)) b!134905))

(assert (= (and b!134905 c!25194) b!134906))

(assert (= (and b!134905 (not c!25194)) b!134907))

(assert (= (or b!134906 b!134907) bm!14838))

(declare-fun m!160053 () Bool)

(assert (=> b!134905 m!160053))

(assert (=> b!134905 m!160053))

(declare-fun m!160055 () Bool)

(assert (=> b!134905 m!160055))

(declare-fun m!160057 () Bool)

(assert (=> bm!14838 m!160057))

(assert (=> bm!14697 d!41725))

(assert (=> d!40723 d!40693))

(assert (=> d!40723 d!40709))

(declare-fun d!41727 () Bool)

(assert (=> d!41727 (= (apply!116 (+!163 lt!69243 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))) lt!69254) (apply!116 lt!69243 lt!69254))))

(assert (=> d!41727 true))

(declare-fun _$34!984 () Unit!4132)

(assert (=> d!41727 (= (choose!828 lt!69243 lt!69244 (minValue!2719 newMap!16) lt!69254) _$34!984)))

(declare-fun bs!5620 () Bool)

(assert (= bs!5620 d!41727))

(assert (=> bs!5620 m!156235))

(assert (=> bs!5620 m!156235))

(assert (=> bs!5620 m!156257))

(assert (=> bs!5620 m!156255))

(assert (=> d!40723 d!41727))

(declare-fun d!41729 () Bool)

(declare-fun e!87843 () Bool)

(assert (=> d!41729 e!87843))

(declare-fun res!64757 () Bool)

(assert (=> d!41729 (=> res!64757 e!87843)))

(declare-fun lt!70424 () Bool)

(assert (=> d!41729 (= res!64757 (not lt!70424))))

(declare-fun lt!70426 () Bool)

(assert (=> d!41729 (= lt!70424 lt!70426)))

(declare-fun lt!70423 () Unit!4132)

(declare-fun e!87844 () Unit!4132)

(assert (=> d!41729 (= lt!70423 e!87844)))

(declare-fun c!25195 () Bool)

(assert (=> d!41729 (= c!25195 lt!70426)))

(assert (=> d!41729 (= lt!70426 (containsKey!174 (toList!851 lt!69243) lt!69254))))

(assert (=> d!41729 (= (contains!886 lt!69243 lt!69254) lt!70424)))

(declare-fun b!134909 () Bool)

(declare-fun lt!70425 () Unit!4132)

(assert (=> b!134909 (= e!87844 lt!70425)))

(assert (=> b!134909 (= lt!70425 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69243) lt!69254))))

(assert (=> b!134909 (isDefined!124 (getValueByKey!170 (toList!851 lt!69243) lt!69254))))

(declare-fun b!134910 () Bool)

(declare-fun Unit!4230 () Unit!4132)

(assert (=> b!134910 (= e!87844 Unit!4230)))

(declare-fun b!134911 () Bool)

(assert (=> b!134911 (= e!87843 (isDefined!124 (getValueByKey!170 (toList!851 lt!69243) lt!69254)))))

(assert (= (and d!41729 c!25195) b!134909))

(assert (= (and d!41729 (not c!25195)) b!134910))

(assert (= (and d!41729 (not res!64757)) b!134911))

(declare-fun m!160059 () Bool)

(assert (=> d!41729 m!160059))

(declare-fun m!160061 () Bool)

(assert (=> b!134909 m!160061))

(assert (=> b!134909 m!157609))

(assert (=> b!134909 m!157609))

(declare-fun m!160063 () Bool)

(assert (=> b!134909 m!160063))

(assert (=> b!134911 m!157609))

(assert (=> b!134911 m!157609))

(assert (=> b!134911 m!160063))

(assert (=> d!40723 d!41729))

(assert (=> d!40723 d!40699))

(declare-fun d!41731 () Bool)

(assert (=> d!41731 (= (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69468 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69472)) (v!3198 (getValueByKey!170 (toList!851 (+!163 lt!69468 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69472)))))

(assert (=> d!40603 d!41731))

(declare-fun d!41733 () Bool)

(declare-fun c!25196 () Bool)

(assert (=> d!41733 (= c!25196 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69468 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69468 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) lt!69472)))))

(declare-fun e!87845 () Option!176)

(assert (=> d!41733 (= (getValueByKey!170 (toList!851 (+!163 lt!69468 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69472) e!87845)))

(declare-fun b!134914 () Bool)

(declare-fun e!87846 () Option!176)

(assert (=> b!134914 (= e!87846 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69468 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) lt!69472))))

(declare-fun b!134913 () Bool)

(assert (=> b!134913 (= e!87845 e!87846)))

(declare-fun c!25197 () Bool)

(assert (=> b!134913 (= c!25197 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69468 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69468 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) lt!69472))))))

(declare-fun b!134912 () Bool)

(assert (=> b!134912 (= e!87845 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69468 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))))

(declare-fun b!134915 () Bool)

(assert (=> b!134915 (= e!87846 None!174)))

(assert (= (and d!41733 c!25196) b!134912))

(assert (= (and d!41733 (not c!25196)) b!134913))

(assert (= (and b!134913 c!25197) b!134914))

(assert (= (and b!134913 (not c!25197)) b!134915))

(declare-fun m!160065 () Bool)

(assert (=> b!134914 m!160065))

(assert (=> d!40603 d!41733))

(declare-fun d!41735 () Bool)

(assert (=> d!41735 (= (apply!116 lt!70059 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!70059) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5621 () Bool)

(assert (= bs!5621 d!41735))

(assert (=> bs!5621 m!159569))

(assert (=> bs!5621 m!159569))

(declare-fun m!160067 () Bool)

(assert (=> bs!5621 m!160067))

(assert (=> b!133963 d!41735))

(declare-fun lt!70427 () Bool)

(declare-fun d!41737 () Bool)

(assert (=> d!41737 (= lt!70427 (select (content!133 (toList!851 lt!69616)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87848 () Bool)

(assert (=> d!41737 (= lt!70427 e!87848)))

(declare-fun res!64758 () Bool)

(assert (=> d!41737 (=> (not res!64758) (not e!87848))))

(assert (=> d!41737 (= res!64758 ((_ is Cons!1706) (toList!851 lt!69616)))))

(assert (=> d!41737 (= (contains!889 (toList!851 lt!69616) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70427)))

(declare-fun b!134916 () Bool)

(declare-fun e!87847 () Bool)

(assert (=> b!134916 (= e!87848 e!87847)))

(declare-fun res!64759 () Bool)

(assert (=> b!134916 (=> res!64759 e!87847)))

(assert (=> b!134916 (= res!64759 (= (h!2311 (toList!851 lt!69616)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134917 () Bool)

(assert (=> b!134917 (= e!87847 (contains!889 (t!6152 (toList!851 lt!69616)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41737 res!64758) b!134916))

(assert (= (and b!134916 (not res!64759)) b!134917))

(declare-fun m!160069 () Bool)

(assert (=> d!41737 m!160069))

(declare-fun m!160071 () Bool)

(assert (=> d!41737 m!160071))

(declare-fun m!160073 () Bool)

(assert (=> b!134917 m!160073))

(assert (=> b!133350 d!41737))

(declare-fun d!41739 () Bool)

(declare-fun c!25198 () Bool)

(assert (=> d!41739 (= c!25198 (and ((_ is Cons!1706) (t!6152 lt!69318)) (= (_1!1303 (h!2311 (t!6152 lt!69318))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87849 () Option!176)

(assert (=> d!41739 (= (getValueByKey!170 (t!6152 lt!69318) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87849)))

(declare-fun b!134920 () Bool)

(declare-fun e!87850 () Option!176)

(assert (=> b!134920 (= e!87850 (getValueByKey!170 (t!6152 (t!6152 lt!69318)) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!134919 () Bool)

(assert (=> b!134919 (= e!87849 e!87850)))

(declare-fun c!25199 () Bool)

(assert (=> b!134919 (= c!25199 (and ((_ is Cons!1706) (t!6152 lt!69318)) (not (= (_1!1303 (h!2311 (t!6152 lt!69318))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!134918 () Bool)

(assert (=> b!134918 (= e!87849 (Some!175 (_2!1303 (h!2311 (t!6152 lt!69318)))))))

(declare-fun b!134921 () Bool)

(assert (=> b!134921 (= e!87850 None!174)))

(assert (= (and d!41739 c!25198) b!134918))

(assert (= (and d!41739 (not c!25198)) b!134919))

(assert (= (and b!134919 c!25199) b!134920))

(assert (= (and b!134919 (not c!25199)) b!134921))

(declare-fun m!160075 () Bool)

(assert (=> b!134920 m!160075))

(assert (=> b!133202 d!41739))

(declare-fun d!41741 () Bool)

(declare-fun e!87851 () Bool)

(assert (=> d!41741 e!87851))

(declare-fun res!64760 () Bool)

(assert (=> d!41741 (=> res!64760 e!87851)))

(declare-fun lt!70429 () Bool)

(assert (=> d!41741 (= res!64760 (not lt!70429))))

(declare-fun lt!70431 () Bool)

(assert (=> d!41741 (= lt!70429 lt!70431)))

(declare-fun lt!70428 () Unit!4132)

(declare-fun e!87852 () Unit!4132)

(assert (=> d!41741 (= lt!70428 e!87852)))

(declare-fun c!25200 () Bool)

(assert (=> d!41741 (= c!25200 lt!70431)))

(assert (=> d!41741 (= lt!70431 (containsKey!174 (toList!851 lt!69823) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41741 (= (contains!886 lt!69823 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70429)))

(declare-fun b!134922 () Bool)

(declare-fun lt!70430 () Unit!4132)

(assert (=> b!134922 (= e!87852 lt!70430)))

(assert (=> b!134922 (= lt!70430 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69823) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134922 (isDefined!124 (getValueByKey!170 (toList!851 lt!69823) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134923 () Bool)

(declare-fun Unit!4231 () Unit!4132)

(assert (=> b!134923 (= e!87852 Unit!4231)))

(declare-fun b!134924 () Bool)

(assert (=> b!134924 (= e!87851 (isDefined!124 (getValueByKey!170 (toList!851 lt!69823) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41741 c!25200) b!134922))

(assert (= (and d!41741 (not c!25200)) b!134923))

(assert (= (and d!41741 (not res!64760)) b!134924))

(declare-fun m!160077 () Bool)

(assert (=> d!41741 m!160077))

(declare-fun m!160079 () Bool)

(assert (=> b!134922 m!160079))

(declare-fun m!160081 () Bool)

(assert (=> b!134922 m!160081))

(assert (=> b!134922 m!160081))

(declare-fun m!160083 () Bool)

(assert (=> b!134922 m!160083))

(assert (=> b!134924 m!160081))

(assert (=> b!134924 m!160081))

(assert (=> b!134924 m!160083))

(assert (=> b!133613 d!41741))

(assert (=> b!133825 d!41563))

(assert (=> b!133825 d!40623))

(declare-fun b!134925 () Bool)

(declare-fun e!87856 () Bool)

(declare-fun e!87853 () Bool)

(assert (=> b!134925 (= e!87856 e!87853)))

(declare-fun res!64761 () Bool)

(assert (=> b!134925 (=> (not res!64761) (not e!87853))))

(declare-fun e!87854 () Bool)

(assert (=> b!134925 (= res!64761 (not e!87854))))

(declare-fun res!64763 () Bool)

(assert (=> b!134925 (=> (not res!64763) (not e!87854))))

(assert (=> b!134925 (= res!64763 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000)))))

(declare-fun bm!14839 () Bool)

(declare-fun call!14842 () Bool)

(declare-fun c!25201 () Bool)

(assert (=> bm!14839 (= call!14842 (arrayNoDuplicates!0 (_keys!4612 (_2!1304 lt!69440)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!25201 (Cons!1707 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)))))

(declare-fun d!41743 () Bool)

(declare-fun res!64762 () Bool)

(assert (=> d!41743 (=> res!64762 e!87856)))

(assert (=> d!41743 (= res!64762 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69440)))))))

(assert (=> d!41743 (= (arrayNoDuplicates!0 (_keys!4612 (_2!1304 lt!69440)) #b00000000000000000000000000000000 Nil!1708) e!87856)))

(declare-fun b!134926 () Bool)

(declare-fun e!87855 () Bool)

(assert (=> b!134926 (= e!87855 call!14842)))

(declare-fun b!134927 () Bool)

(assert (=> b!134927 (= e!87854 (contains!888 Nil!1708 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000)))))

(declare-fun b!134928 () Bool)

(assert (=> b!134928 (= e!87853 e!87855)))

(assert (=> b!134928 (= c!25201 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000)))))

(declare-fun b!134929 () Bool)

(assert (=> b!134929 (= e!87855 call!14842)))

(assert (= (and d!41743 (not res!64762)) b!134925))

(assert (= (and b!134925 res!64763) b!134927))

(assert (= (and b!134925 res!64761) b!134928))

(assert (= (and b!134928 c!25201) b!134926))

(assert (= (and b!134928 (not c!25201)) b!134929))

(assert (= (or b!134926 b!134929) bm!14839))

(assert (=> b!134925 m!159623))

(assert (=> b!134925 m!159623))

(assert (=> b!134925 m!159625))

(assert (=> bm!14839 m!159623))

(declare-fun m!160085 () Bool)

(assert (=> bm!14839 m!160085))

(assert (=> b!134927 m!159623))

(assert (=> b!134927 m!159623))

(declare-fun m!160087 () Bool)

(assert (=> b!134927 m!160087))

(assert (=> b!134928 m!159623))

(assert (=> b!134928 m!159623))

(assert (=> b!134928 m!159625))

(assert (=> b!133540 d!41743))

(declare-fun b!134930 () Bool)

(assert (=> b!134930 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> b!134930 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2519 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))))))))

(declare-fun lt!70434 () ListLongMap!1671)

(declare-fun e!87857 () Bool)

(assert (=> b!134930 (= e!87857 (= (apply!116 lt!70434 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!14840 () Bool)

(declare-fun call!14843 () ListLongMap!1671)

(assert (=> bm!14840 (= call!14843 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!134931 () Bool)

(declare-fun e!87860 () ListLongMap!1671)

(assert (=> b!134931 (= e!87860 call!14843)))

(declare-fun b!134932 () Bool)

(declare-fun e!87862 () Bool)

(declare-fun e!87859 () Bool)

(assert (=> b!134932 (= e!87862 e!87859)))

(declare-fun c!25205 () Bool)

(assert (=> b!134932 (= c!25205 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!134933 () Bool)

(assert (=> b!134933 (= e!87859 (isEmpty!414 lt!70434))))

(declare-fun b!134934 () Bool)

(declare-fun e!87863 () Bool)

(assert (=> b!134934 (= e!87863 e!87862)))

(declare-fun c!25202 () Bool)

(declare-fun e!87858 () Bool)

(assert (=> b!134934 (= c!25202 e!87858)))

(declare-fun res!64766 () Bool)

(assert (=> b!134934 (=> (not res!64766) (not e!87858))))

(assert (=> b!134934 (= res!64766 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!134935 () Bool)

(assert (=> b!134935 (= e!87858 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134935 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!134936 () Bool)

(declare-fun lt!70433 () Unit!4132)

(declare-fun lt!70438 () Unit!4132)

(assert (=> b!134936 (= lt!70433 lt!70438)))

(declare-fun lt!70432 () ListLongMap!1671)

(declare-fun lt!70435 () (_ BitVec 64))

(declare-fun lt!70437 () (_ BitVec 64))

(declare-fun lt!70436 () V!3481)

(assert (=> b!134936 (not (contains!886 (+!163 lt!70432 (tuple2!2585 lt!70435 lt!70436)) lt!70437))))

(assert (=> b!134936 (= lt!70438 (addStillNotContains!62 lt!70432 lt!70435 lt!70436 lt!70437))))

(assert (=> b!134936 (= lt!70437 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134936 (= lt!70436 (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134936 (= lt!70435 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!134936 (= lt!70432 call!14843)))

(assert (=> b!134936 (= e!87860 (+!163 call!14843 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134937 () Bool)

(declare-fun e!87861 () ListLongMap!1671)

(assert (=> b!134937 (= e!87861 e!87860)))

(declare-fun c!25203 () Bool)

(assert (=> b!134937 (= c!25203 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134938 () Bool)

(assert (=> b!134938 (= e!87861 (ListLongMap!1672 Nil!1707))))

(declare-fun d!41745 () Bool)

(assert (=> d!41745 e!87863))

(declare-fun res!64765 () Bool)

(assert (=> d!41745 (=> (not res!64765) (not e!87863))))

(assert (=> d!41745 (= res!64765 (not (contains!886 lt!70434 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41745 (= lt!70434 e!87861)))

(declare-fun c!25204 () Bool)

(assert (=> d!41745 (= c!25204 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!41745 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!41745 (= (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)) lt!70434)))

(declare-fun b!134939 () Bool)

(assert (=> b!134939 (= e!87859 (= lt!70434 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun b!134940 () Bool)

(declare-fun res!64767 () Bool)

(assert (=> b!134940 (=> (not res!64767) (not e!87863))))

(assert (=> b!134940 (= res!64767 (not (contains!886 lt!70434 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134941 () Bool)

(assert (=> b!134941 (= e!87862 e!87857)))

(assert (=> b!134941 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64764 () Bool)

(assert (=> b!134941 (= res!64764 (contains!886 lt!70434 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134941 (=> (not res!64764) (not e!87857))))

(assert (= (and d!41745 c!25204) b!134938))

(assert (= (and d!41745 (not c!25204)) b!134937))

(assert (= (and b!134937 c!25203) b!134936))

(assert (= (and b!134937 (not c!25203)) b!134931))

(assert (= (or b!134936 b!134931) bm!14840))

(assert (= (and d!41745 res!64765) b!134940))

(assert (= (and b!134940 res!64767) b!134934))

(assert (= (and b!134934 res!64766) b!134935))

(assert (= (and b!134934 c!25202) b!134941))

(assert (= (and b!134934 (not c!25202)) b!134932))

(assert (= (and b!134941 res!64764) b!134930))

(assert (= (and b!134932 c!25205) b!134939))

(assert (= (and b!134932 (not c!25205)) b!134933))

(declare-fun b_lambda!6007 () Bool)

(assert (=> (not b_lambda!6007) (not b!134930)))

(assert (=> b!134930 t!6164))

(declare-fun b_and!8345 () Bool)

(assert (= b_and!8341 (and (=> t!6164 result!3993) b_and!8345)))

(assert (=> b!134930 t!6166))

(declare-fun b_and!8347 () Bool)

(assert (= b_and!8343 (and (=> t!6166 result!3995) b_and!8347)))

(declare-fun b_lambda!6009 () Bool)

(assert (=> (not b_lambda!6009) (not b!134936)))

(assert (=> b!134936 t!6164))

(declare-fun b_and!8349 () Bool)

(assert (= b_and!8345 (and (=> t!6164 result!3993) b_and!8349)))

(assert (=> b!134936 t!6166))

(declare-fun b_and!8351 () Bool)

(assert (= b_and!8347 (and (=> t!6166 result!3995) b_and!8351)))

(assert (=> b!134935 m!156869))

(assert (=> b!134935 m!156869))

(assert (=> b!134935 m!156871))

(declare-fun m!160089 () Bool)

(assert (=> b!134940 m!160089))

(declare-fun m!160091 () Bool)

(assert (=> b!134936 m!160091))

(declare-fun m!160093 () Bool)

(assert (=> b!134936 m!160093))

(assert (=> b!134936 m!156869))

(assert (=> b!134936 m!160091))

(assert (=> b!134936 m!156135))

(declare-fun m!160095 () Bool)

(assert (=> b!134936 m!160095))

(declare-fun m!160097 () Bool)

(assert (=> b!134936 m!160097))

(declare-fun m!160099 () Bool)

(assert (=> b!134936 m!160099))

(assert (=> b!134936 m!156135))

(declare-fun m!160101 () Bool)

(assert (=> b!134936 m!160101))

(assert (=> b!134936 m!160097))

(declare-fun m!160103 () Bool)

(assert (=> b!134939 m!160103))

(assert (=> b!134941 m!156869))

(assert (=> b!134941 m!156869))

(declare-fun m!160105 () Bool)

(assert (=> b!134941 m!160105))

(declare-fun m!160107 () Bool)

(assert (=> b!134933 m!160107))

(assert (=> bm!14840 m!160103))

(declare-fun m!160109 () Bool)

(assert (=> d!41745 m!160109))

(assert (=> d!41745 m!156183))

(assert (=> b!134937 m!156869))

(assert (=> b!134937 m!156869))

(assert (=> b!134937 m!156871))

(assert (=> b!134930 m!160091))

(assert (=> b!134930 m!156869))

(assert (=> b!134930 m!160091))

(assert (=> b!134930 m!156135))

(assert (=> b!134930 m!160095))

(assert (=> b!134930 m!156135))

(assert (=> b!134930 m!156869))

(declare-fun m!160111 () Bool)

(assert (=> b!134930 m!160111))

(assert (=> bm!14729 d!41745))

(declare-fun d!41747 () Bool)

(declare-fun e!87864 () Bool)

(assert (=> d!41747 e!87864))

(declare-fun res!64768 () Bool)

(assert (=> d!41747 (=> res!64768 e!87864)))

(declare-fun lt!70440 () Bool)

(assert (=> d!41747 (= res!64768 (not lt!70440))))

(declare-fun lt!70442 () Bool)

(assert (=> d!41747 (= lt!70440 lt!70442)))

(declare-fun lt!70439 () Unit!4132)

(declare-fun e!87865 () Unit!4132)

(assert (=> d!41747 (= lt!70439 e!87865)))

(declare-fun c!25206 () Bool)

(assert (=> d!41747 (= c!25206 lt!70442)))

(assert (=> d!41747 (= lt!70442 (containsKey!174 (toList!851 lt!69731) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!41747 (= (contains!886 lt!69731 (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!70440)))

(declare-fun b!134942 () Bool)

(declare-fun lt!70441 () Unit!4132)

(assert (=> b!134942 (= e!87865 lt!70441)))

(assert (=> b!134942 (= lt!70441 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69731) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> b!134942 (isDefined!124 (getValueByKey!170 (toList!851 lt!69731) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!134943 () Bool)

(declare-fun Unit!4232 () Unit!4132)

(assert (=> b!134943 (= e!87865 Unit!4232)))

(declare-fun b!134944 () Bool)

(assert (=> b!134944 (= e!87864 (isDefined!124 (getValueByKey!170 (toList!851 lt!69731) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (= (and d!41747 c!25206) b!134942))

(assert (= (and d!41747 (not c!25206)) b!134943))

(assert (= (and d!41747 (not res!64768)) b!134944))

(declare-fun m!160113 () Bool)

(assert (=> d!41747 m!160113))

(declare-fun m!160115 () Bool)

(assert (=> b!134942 m!160115))

(assert (=> b!134942 m!157379))

(assert (=> b!134942 m!157379))

(declare-fun m!160117 () Bool)

(assert (=> b!134942 m!160117))

(assert (=> b!134944 m!157379))

(assert (=> b!134944 m!157379))

(assert (=> b!134944 m!160117))

(assert (=> d!40617 d!41747))

(declare-fun d!41749 () Bool)

(declare-fun c!25207 () Bool)

(assert (=> d!41749 (= c!25207 (and ((_ is Cons!1706) lt!69729) (= (_1!1303 (h!2311 lt!69729)) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun e!87866 () Option!176)

(assert (=> d!41749 (= (getValueByKey!170 lt!69729 (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) e!87866)))

(declare-fun b!134947 () Bool)

(declare-fun e!87867 () Option!176)

(assert (=> b!134947 (= e!87867 (getValueByKey!170 (t!6152 lt!69729) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!134946 () Bool)

(assert (=> b!134946 (= e!87866 e!87867)))

(declare-fun c!25208 () Bool)

(assert (=> b!134946 (= c!25208 (and ((_ is Cons!1706) lt!69729) (not (= (_1!1303 (h!2311 lt!69729)) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))))

(declare-fun b!134945 () Bool)

(assert (=> b!134945 (= e!87866 (Some!175 (_2!1303 (h!2311 lt!69729))))))

(declare-fun b!134948 () Bool)

(assert (=> b!134948 (= e!87867 None!174)))

(assert (= (and d!41749 c!25207) b!134945))

(assert (= (and d!41749 (not c!25207)) b!134946))

(assert (= (and b!134946 c!25208) b!134947))

(assert (= (and b!134946 (not c!25208)) b!134948))

(declare-fun m!160119 () Bool)

(assert (=> b!134947 m!160119))

(assert (=> d!40617 d!41749))

(declare-fun d!41751 () Bool)

(assert (=> d!41751 (= (getValueByKey!170 lt!69729 (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) (Some!175 (_2!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun lt!70443 () Unit!4132)

(assert (=> d!41751 (= lt!70443 (choose!834 lt!69729 (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun e!87868 () Bool)

(assert (=> d!41751 e!87868))

(declare-fun res!64769 () Bool)

(assert (=> d!41751 (=> (not res!64769) (not e!87868))))

(assert (=> d!41751 (= res!64769 (isStrictlySorted!317 lt!69729))))

(assert (=> d!41751 (= (lemmaContainsTupThenGetReturnValue!88 lt!69729 (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!70443)))

(declare-fun b!134949 () Bool)

(declare-fun res!64770 () Bool)

(assert (=> b!134949 (=> (not res!64770) (not e!87868))))

(assert (=> b!134949 (= res!64770 (containsKey!174 lt!69729 (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!134950 () Bool)

(assert (=> b!134950 (= e!87868 (contains!889 lt!69729 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (= (and d!41751 res!64769) b!134949))

(assert (= (and b!134949 res!64770) b!134950))

(assert (=> d!41751 m!157373))

(declare-fun m!160121 () Bool)

(assert (=> d!41751 m!160121))

(declare-fun m!160123 () Bool)

(assert (=> d!41751 m!160123))

(declare-fun m!160125 () Bool)

(assert (=> b!134949 m!160125))

(declare-fun m!160127 () Bool)

(assert (=> b!134950 m!160127))

(assert (=> d!40617 d!41751))

(declare-fun b!134951 () Bool)

(declare-fun e!87873 () List!1710)

(assert (=> b!134951 (= e!87873 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69474)) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!134952 () Bool)

(declare-fun e!87872 () List!1710)

(declare-fun call!14846 () List!1710)

(assert (=> b!134952 (= e!87872 call!14846)))

(declare-fun b!134953 () Bool)

(declare-fun res!64772 () Bool)

(declare-fun e!87870 () Bool)

(assert (=> b!134953 (=> (not res!64772) (not e!87870))))

(declare-fun lt!70444 () List!1710)

(assert (=> b!134953 (= res!64772 (containsKey!174 lt!70444 (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun c!25210 () Bool)

(declare-fun bm!14841 () Bool)

(assert (=> bm!14841 (= call!14846 ($colon$colon!91 e!87873 (ite c!25210 (h!2311 (toList!851 lt!69474)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))))

(declare-fun c!25211 () Bool)

(assert (=> bm!14841 (= c!25211 c!25210)))

(declare-fun c!25212 () Bool)

(declare-fun b!134954 () Bool)

(declare-fun c!25209 () Bool)

(assert (=> b!134954 (= e!87873 (ite c!25209 (t!6152 (toList!851 lt!69474)) (ite c!25212 (Cons!1706 (h!2311 (toList!851 lt!69474)) (t!6152 (toList!851 lt!69474))) Nil!1707)))))

(declare-fun d!41753 () Bool)

(assert (=> d!41753 e!87870))

(declare-fun res!64771 () Bool)

(assert (=> d!41753 (=> (not res!64771) (not e!87870))))

(assert (=> d!41753 (= res!64771 (isStrictlySorted!317 lt!70444))))

(assert (=> d!41753 (= lt!70444 e!87872)))

(assert (=> d!41753 (= c!25210 (and ((_ is Cons!1706) (toList!851 lt!69474)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69474))) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (=> d!41753 (isStrictlySorted!317 (toList!851 lt!69474))))

(assert (=> d!41753 (= (insertStrictlySorted!91 (toList!851 lt!69474) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!70444)))

(declare-fun b!134955 () Bool)

(declare-fun e!87869 () List!1710)

(assert (=> b!134955 (= e!87872 e!87869)))

(assert (=> b!134955 (= c!25209 (and ((_ is Cons!1706) (toList!851 lt!69474)) (= (_1!1303 (h!2311 (toList!851 lt!69474))) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun b!134956 () Bool)

(declare-fun e!87871 () List!1710)

(declare-fun call!14844 () List!1710)

(assert (=> b!134956 (= e!87871 call!14844)))

(declare-fun b!134957 () Bool)

(declare-fun call!14845 () List!1710)

(assert (=> b!134957 (= e!87869 call!14845)))

(declare-fun b!134958 () Bool)

(assert (=> b!134958 (= e!87870 (contains!889 lt!70444 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun bm!14842 () Bool)

(assert (=> bm!14842 (= call!14845 call!14846)))

(declare-fun bm!14843 () Bool)

(assert (=> bm!14843 (= call!14844 call!14845)))

(declare-fun b!134959 () Bool)

(assert (=> b!134959 (= c!25212 (and ((_ is Cons!1706) (toList!851 lt!69474)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69474))) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (=> b!134959 (= e!87869 e!87871)))

(declare-fun b!134960 () Bool)

(assert (=> b!134960 (= e!87871 call!14844)))

(assert (= (and d!41753 c!25210) b!134952))

(assert (= (and d!41753 (not c!25210)) b!134955))

(assert (= (and b!134955 c!25209) b!134957))

(assert (= (and b!134955 (not c!25209)) b!134959))

(assert (= (and b!134959 c!25212) b!134960))

(assert (= (and b!134959 (not c!25212)) b!134956))

(assert (= (or b!134960 b!134956) bm!14843))

(assert (= (or b!134957 bm!14843) bm!14842))

(assert (= (or b!134952 bm!14842) bm!14841))

(assert (= (and bm!14841 c!25211) b!134951))

(assert (= (and bm!14841 (not c!25211)) b!134954))

(assert (= (and d!41753 res!64771) b!134953))

(assert (= (and b!134953 res!64772) b!134958))

(declare-fun m!160129 () Bool)

(assert (=> b!134958 m!160129))

(declare-fun m!160131 () Bool)

(assert (=> b!134953 m!160131))

(declare-fun m!160133 () Bool)

(assert (=> b!134951 m!160133))

(declare-fun m!160135 () Bool)

(assert (=> d!41753 m!160135))

(declare-fun m!160137 () Bool)

(assert (=> d!41753 m!160137))

(declare-fun m!160139 () Bool)

(assert (=> bm!14841 m!160139))

(assert (=> d!40617 d!41753))

(declare-fun d!41755 () Bool)

(assert (=> d!41755 (= ($colon$colon!91 e!87211 (ite c!24873 (h!2311 (toList!851 lt!69172)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (Cons!1706 (ite c!24873 (h!2311 (toList!851 lt!69172)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) e!87211))))

(assert (=> bm!14764 d!41755))

(declare-fun lt!70445 () Bool)

(declare-fun d!41757 () Bool)

(assert (=> d!41757 (= lt!70445 (select (content!133 lt!69896) (tuple2!2585 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!87875 () Bool)

(assert (=> d!41757 (= lt!70445 e!87875)))

(declare-fun res!64773 () Bool)

(assert (=> d!41757 (=> (not res!64773) (not e!87875))))

(assert (=> d!41757 (= res!64773 ((_ is Cons!1706) lt!69896))))

(assert (=> d!41757 (= (contains!889 lt!69896 (tuple2!2585 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!70445)))

(declare-fun b!134961 () Bool)

(declare-fun e!87874 () Bool)

(assert (=> b!134961 (= e!87875 e!87874)))

(declare-fun res!64774 () Bool)

(assert (=> b!134961 (=> res!64774 e!87874)))

(assert (=> b!134961 (= res!64774 (= (h!2311 lt!69896) (tuple2!2585 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134962 () Bool)

(assert (=> b!134962 (= e!87874 (contains!889 (t!6152 lt!69896) (tuple2!2585 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!41757 res!64773) b!134961))

(assert (= (and b!134961 (not res!64774)) b!134962))

(declare-fun m!160141 () Bool)

(assert (=> d!41757 m!160141))

(declare-fun m!160143 () Bool)

(assert (=> d!41757 m!160143))

(declare-fun m!160145 () Bool)

(assert (=> b!134962 m!160145))

(assert (=> b!133729 d!41757))

(declare-fun d!41759 () Bool)

(declare-fun e!87876 () Bool)

(assert (=> d!41759 e!87876))

(declare-fun res!64776 () Bool)

(assert (=> d!41759 (=> (not res!64776) (not e!87876))))

(declare-fun lt!70448 () ListLongMap!1671)

(assert (=> d!41759 (= res!64776 (contains!886 lt!70448 (_1!1303 (ite (or c!24769 c!24767) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!70446 () List!1710)

(assert (=> d!41759 (= lt!70448 (ListLongMap!1672 lt!70446))))

(declare-fun lt!70449 () Unit!4132)

(declare-fun lt!70447 () Unit!4132)

(assert (=> d!41759 (= lt!70449 lt!70447)))

(assert (=> d!41759 (= (getValueByKey!170 lt!70446 (_1!1303 (ite (or c!24769 c!24767) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24769 c!24767) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41759 (= lt!70447 (lemmaContainsTupThenGetReturnValue!88 lt!70446 (_1!1303 (ite (or c!24769 c!24767) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24769 c!24767) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41759 (= lt!70446 (insertStrictlySorted!91 (toList!851 (ite c!24769 call!14725 (ite c!24767 call!14728 call!14727))) (_1!1303 (ite (or c!24769 c!24767) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24769 c!24767) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41759 (= (+!163 (ite c!24769 call!14725 (ite c!24767 call!14728 call!14727)) (ite (or c!24769 c!24767) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70448)))

(declare-fun b!134963 () Bool)

(declare-fun res!64775 () Bool)

(assert (=> b!134963 (=> (not res!64775) (not e!87876))))

(assert (=> b!134963 (= res!64775 (= (getValueByKey!170 (toList!851 lt!70448) (_1!1303 (ite (or c!24769 c!24767) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24769 c!24767) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!134964 () Bool)

(assert (=> b!134964 (= e!87876 (contains!889 (toList!851 lt!70448) (ite (or c!24769 c!24767) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!41759 res!64776) b!134963))

(assert (= (and b!134963 res!64775) b!134964))

(declare-fun m!160147 () Bool)

(assert (=> d!41759 m!160147))

(declare-fun m!160149 () Bool)

(assert (=> d!41759 m!160149))

(declare-fun m!160151 () Bool)

(assert (=> d!41759 m!160151))

(declare-fun m!160153 () Bool)

(assert (=> d!41759 m!160153))

(declare-fun m!160155 () Bool)

(assert (=> b!134963 m!160155))

(declare-fun m!160157 () Bool)

(assert (=> b!134964 m!160157))

(assert (=> bm!14719 d!41759))

(declare-fun d!41761 () Bool)

(assert (=> d!41761 (isDefined!124 (getValueByKey!170 (toList!851 lt!69331) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun lt!70450 () Unit!4132)

(assert (=> d!41761 (= lt!70450 (choose!826 (toList!851 lt!69331) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun e!87877 () Bool)

(assert (=> d!41761 e!87877))

(declare-fun res!64777 () Bool)

(assert (=> d!41761 (=> (not res!64777) (not e!87877))))

(assert (=> d!41761 (= res!64777 (isStrictlySorted!317 (toList!851 lt!69331)))))

(assert (=> d!41761 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69331) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!70450)))

(declare-fun b!134965 () Bool)

(assert (=> b!134965 (= e!87877 (containsKey!174 (toList!851 lt!69331) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!41761 res!64777) b!134965))

(assert (=> d!41761 m!156423))

(assert (=> d!41761 m!156423))

(assert (=> d!41761 m!157219))

(declare-fun m!160159 () Bool)

(assert (=> d!41761 m!160159))

(declare-fun m!160161 () Bool)

(assert (=> d!41761 m!160161))

(assert (=> b!134965 m!157215))

(assert (=> b!133443 d!41761))

(assert (=> b!133443 d!41143))

(assert (=> b!133443 d!40767))

(declare-fun d!41763 () Bool)

(declare-fun lt!70451 () Bool)

(assert (=> d!41763 (= lt!70451 (select (content!133 lt!69464) (tuple2!2585 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!87879 () Bool)

(assert (=> d!41763 (= lt!70451 e!87879)))

(declare-fun res!64778 () Bool)

(assert (=> d!41763 (=> (not res!64778) (not e!87879))))

(assert (=> d!41763 (= res!64778 ((_ is Cons!1706) lt!69464))))

(assert (=> d!41763 (= (contains!889 lt!69464 (tuple2!2585 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!70451)))

(declare-fun b!134966 () Bool)

(declare-fun e!87878 () Bool)

(assert (=> b!134966 (= e!87879 e!87878)))

(declare-fun res!64779 () Bool)

(assert (=> b!134966 (=> res!64779 e!87878)))

(assert (=> b!134966 (= res!64779 (= (h!2311 lt!69464) (tuple2!2585 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134967 () Bool)

(assert (=> b!134967 (= e!87878 (contains!889 (t!6152 lt!69464) (tuple2!2585 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!41763 res!64778) b!134966))

(assert (= (and b!134966 (not res!64779)) b!134967))

(declare-fun m!160163 () Bool)

(assert (=> d!41763 m!160163))

(declare-fun m!160165 () Bool)

(assert (=> d!41763 m!160165))

(declare-fun m!160167 () Bool)

(assert (=> b!134967 m!160167))

(assert (=> b!133721 d!41763))

(declare-fun d!41765 () Bool)

(assert (=> d!41765 (= (arrayCountValidKeys!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4612 newMap!16) #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))) #b00000000000000000000000000000001))))

(assert (=> d!41765 true))

(declare-fun _$84!12 () Unit!4132)

(assert (=> d!41765 (= (choose!1 (_keys!4612 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) _$84!12)))

(declare-fun bs!5622 () Bool)

(assert (= bs!5622 d!41765))

(assert (=> bs!5622 m!156563))

(assert (=> bs!5622 m!156583))

(assert (=> bs!5622 m!156035))

(assert (=> d!40569 d!41765))

(declare-fun d!41767 () Bool)

(declare-fun lt!70452 () Bool)

(assert (=> d!41767 (= lt!70452 (select (content!133 (toList!851 lt!69563)) (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun e!87881 () Bool)

(assert (=> d!41767 (= lt!70452 e!87881)))

(declare-fun res!64780 () Bool)

(assert (=> d!41767 (=> (not res!64780) (not e!87881))))

(assert (=> d!41767 (= res!64780 ((_ is Cons!1706) (toList!851 lt!69563)))))

(assert (=> d!41767 (= (contains!889 (toList!851 lt!69563) (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70452)))

(declare-fun b!134968 () Bool)

(declare-fun e!87880 () Bool)

(assert (=> b!134968 (= e!87881 e!87880)))

(declare-fun res!64781 () Bool)

(assert (=> b!134968 (=> res!64781 e!87880)))

(assert (=> b!134968 (= res!64781 (= (h!2311 (toList!851 lt!69563)) (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!134969 () Bool)

(assert (=> b!134969 (= e!87880 (contains!889 (t!6152 (toList!851 lt!69563)) (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!41767 res!64780) b!134968))

(assert (= (and b!134968 (not res!64781)) b!134969))

(declare-fun m!160169 () Bool)

(assert (=> d!41767 m!160169))

(declare-fun m!160171 () Bool)

(assert (=> d!41767 m!160171))

(declare-fun m!160173 () Bool)

(assert (=> b!134969 m!160173))

(assert (=> b!133243 d!41767))

(declare-fun d!41769 () Bool)

(declare-fun e!87882 () Bool)

(assert (=> d!41769 e!87882))

(declare-fun res!64782 () Bool)

(assert (=> d!41769 (=> res!64782 e!87882)))

(declare-fun lt!70454 () Bool)

(assert (=> d!41769 (= res!64782 (not lt!70454))))

(declare-fun lt!70456 () Bool)

(assert (=> d!41769 (= lt!70454 lt!70456)))

(declare-fun lt!70453 () Unit!4132)

(declare-fun e!87883 () Unit!4132)

(assert (=> d!41769 (= lt!70453 e!87883)))

(declare-fun c!25213 () Bool)

(assert (=> d!41769 (= c!25213 lt!70456)))

(assert (=> d!41769 (= lt!70456 (containsKey!174 (toList!851 lt!69206) lt!69211))))

(assert (=> d!41769 (= (contains!886 lt!69206 lt!69211) lt!70454)))

(declare-fun b!134970 () Bool)

(declare-fun lt!70455 () Unit!4132)

(assert (=> b!134970 (= e!87883 lt!70455)))

(assert (=> b!134970 (= lt!70455 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69206) lt!69211))))

(assert (=> b!134970 (isDefined!124 (getValueByKey!170 (toList!851 lt!69206) lt!69211))))

(declare-fun b!134971 () Bool)

(declare-fun Unit!4233 () Unit!4132)

(assert (=> b!134971 (= e!87883 Unit!4233)))

(declare-fun b!134972 () Bool)

(assert (=> b!134972 (= e!87882 (isDefined!124 (getValueByKey!170 (toList!851 lt!69206) lt!69211)))))

(assert (= (and d!41769 c!25213) b!134970))

(assert (= (and d!41769 (not c!25213)) b!134971))

(assert (= (and d!41769 (not res!64782)) b!134972))

(declare-fun m!160175 () Bool)

(assert (=> d!41769 m!160175))

(declare-fun m!160177 () Bool)

(assert (=> b!134970 m!160177))

(assert (=> b!134970 m!157817))

(assert (=> b!134970 m!157817))

(declare-fun m!160179 () Bool)

(assert (=> b!134970 m!160179))

(assert (=> b!134972 m!157817))

(assert (=> b!134972 m!157817))

(assert (=> b!134972 m!160179))

(assert (=> d!40727 d!41769))

(assert (=> d!40727 d!40755))

(declare-fun d!41771 () Bool)

(assert (=> d!41771 (= (apply!116 (+!163 lt!69206 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))) lt!69211) (apply!116 lt!69206 lt!69211))))

(assert (=> d!41771 true))

(declare-fun _$34!985 () Unit!4132)

(assert (=> d!41771 (= (choose!828 lt!69206 lt!69223 (minValue!2719 newMap!16) lt!69211) _$34!985)))

(declare-fun bs!5623 () Bool)

(assert (= bs!5623 d!41771))

(assert (=> bs!5623 m!156161))

(assert (=> bs!5623 m!156161))

(assert (=> bs!5623 m!156163))

(assert (=> bs!5623 m!156171))

(assert (=> d!40727 d!41771))

(assert (=> d!40727 d!40743))

(assert (=> d!40727 d!40749))

(declare-fun d!41773 () Bool)

(declare-fun c!25214 () Bool)

(assert (=> d!41773 (= c!25214 (and ((_ is Cons!1706) (toList!851 lt!69810)) (= (_1!1303 (h!2311 (toList!851 lt!69810))) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))))))

(declare-fun e!87884 () Option!176)

(assert (=> d!41773 (= (getValueByKey!170 (toList!851 lt!69810) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) e!87884)))

(declare-fun b!134975 () Bool)

(declare-fun e!87885 () Option!176)

(assert (=> b!134975 (= e!87885 (getValueByKey!170 (t!6152 (toList!851 lt!69810)) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134974 () Bool)

(assert (=> b!134974 (= e!87884 e!87885)))

(declare-fun c!25215 () Bool)

(assert (=> b!134974 (= c!25215 (and ((_ is Cons!1706) (toList!851 lt!69810)) (not (= (_1!1303 (h!2311 (toList!851 lt!69810))) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!134973 () Bool)

(assert (=> b!134973 (= e!87884 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69810)))))))

(declare-fun b!134976 () Bool)

(assert (=> b!134976 (= e!87885 None!174)))

(assert (= (and d!41773 c!25214) b!134973))

(assert (= (and d!41773 (not c!25214)) b!134974))

(assert (= (and b!134974 c!25215) b!134975))

(assert (= (and b!134974 (not c!25215)) b!134976))

(declare-fun m!160181 () Bool)

(assert (=> b!134975 m!160181))

(assert (=> b!133595 d!41773))

(declare-fun b!134977 () Bool)

(declare-fun e!87888 () SeekEntryResult!278)

(assert (=> b!134977 (= e!87888 Undefined!278)))

(declare-fun b!134978 () Bool)

(declare-fun e!87887 () SeekEntryResult!278)

(assert (=> b!134978 (= e!87887 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15594 lt!69279) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (index!3274 lt!69279) (x!15594 lt!69279) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (bvadd (x!15594 lt!69279) #b00000000000000000000000000000001) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!69279) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!134979 () Bool)

(declare-fun e!87886 () SeekEntryResult!278)

(assert (=> b!134979 (= e!87886 (Found!278 (nextIndex!0 (index!3274 lt!69279) (x!15594 lt!69279) (mask!7163 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun d!41775 () Bool)

(declare-fun lt!70457 () SeekEntryResult!278)

(assert (=> d!41775 (and (or ((_ is Undefined!278) lt!70457) (not ((_ is Found!278) lt!70457)) (and (bvsge (index!3273 lt!70457) #b00000000000000000000000000000000) (bvslt (index!3273 lt!70457) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))) (or ((_ is Undefined!278) lt!70457) ((_ is Found!278) lt!70457) (not ((_ is MissingVacant!278) lt!70457)) (not (= (index!3275 lt!70457) (index!3274 lt!69279))) (and (bvsge (index!3275 lt!70457) #b00000000000000000000000000000000) (bvslt (index!3275 lt!70457) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))) (or ((_ is Undefined!278) lt!70457) (ite ((_ is Found!278) lt!70457) (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3273 lt!70457)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!278) lt!70457) (= (index!3275 lt!70457) (index!3274 lt!69279)) (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3275 lt!70457)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!41775 (= lt!70457 e!87888)))

(declare-fun c!25218 () Bool)

(assert (=> d!41775 (= c!25218 (bvsge (bvadd (x!15594 lt!69279) #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(declare-fun lt!70458 () (_ BitVec 64))

(assert (=> d!41775 (= lt!70458 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (nextIndex!0 (index!3274 lt!69279) (x!15594 lt!69279) (mask!7163 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!41775 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!41775 (= (seekKeyOrZeroReturnVacant!0 (bvadd (x!15594 lt!69279) #b00000000000000000000000000000001) (nextIndex!0 (index!3274 lt!69279) (x!15594 lt!69279) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!69279) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) lt!70457)))

(declare-fun b!134980 () Bool)

(declare-fun c!25217 () Bool)

(assert (=> b!134980 (= c!25217 (= lt!70458 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134980 (= e!87886 e!87887)))

(declare-fun b!134981 () Bool)

(assert (=> b!134981 (= e!87887 (MissingVacant!278 (index!3274 lt!69279)))))

(declare-fun b!134982 () Bool)

(assert (=> b!134982 (= e!87888 e!87886)))

(declare-fun c!25216 () Bool)

(assert (=> b!134982 (= c!25216 (= lt!70458 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!41775 c!25218) b!134977))

(assert (= (and d!41775 (not c!25218)) b!134982))

(assert (= (and b!134982 c!25216) b!134979))

(assert (= (and b!134982 (not c!25216)) b!134980))

(assert (= (and b!134980 c!25217) b!134981))

(assert (= (and b!134980 (not c!25217)) b!134978))

(assert (=> b!134978 m!158469))

(declare-fun m!160183 () Bool)

(assert (=> b!134978 m!160183))

(assert (=> b!134978 m!160183))

(assert (=> b!134978 m!156017))

(declare-fun m!160185 () Bool)

(assert (=> b!134978 m!160185))

(declare-fun m!160187 () Bool)

(assert (=> d!41775 m!160187))

(declare-fun m!160189 () Bool)

(assert (=> d!41775 m!160189))

(assert (=> d!41775 m!158469))

(declare-fun m!160191 () Bool)

(assert (=> d!41775 m!160191))

(assert (=> d!41775 m!155855))

(assert (=> b!133965 d!41775))

(declare-fun d!41777 () Bool)

(declare-fun lt!70459 () (_ BitVec 32))

(assert (=> d!41777 (and (bvsge lt!70459 #b00000000000000000000000000000000) (bvslt lt!70459 (bvadd (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000001)))))

(assert (=> d!41777 (= lt!70459 (choose!52 (index!3274 lt!69279) (x!15594 lt!69279) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(assert (=> d!41777 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!41777 (= (nextIndex!0 (index!3274 lt!69279) (x!15594 lt!69279) (mask!7163 (v!3192 (underlying!451 thiss!992)))) lt!70459)))

(declare-fun bs!5624 () Bool)

(assert (= bs!5624 d!41777))

(declare-fun m!160193 () Bool)

(assert (=> bs!5624 m!160193))

(assert (=> bs!5624 m!155855))

(assert (=> b!133965 d!41777))

(declare-fun d!41779 () Bool)

(declare-fun res!64783 () Bool)

(declare-fun e!87889 () Bool)

(assert (=> d!41779 (=> res!64783 e!87889)))

(assert (=> d!41779 (= res!64783 (and ((_ is Cons!1706) lt!69560) (= (_1!1303 (h!2311 lt!69560)) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!41779 (= (containsKey!174 lt!69560 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87889)))

(declare-fun b!134983 () Bool)

(declare-fun e!87890 () Bool)

(assert (=> b!134983 (= e!87889 e!87890)))

(declare-fun res!64784 () Bool)

(assert (=> b!134983 (=> (not res!64784) (not e!87890))))

(assert (=> b!134983 (= res!64784 (and (or (not ((_ is Cons!1706) lt!69560)) (bvsle (_1!1303 (h!2311 lt!69560)) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Cons!1706) lt!69560) (bvslt (_1!1303 (h!2311 lt!69560)) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!134984 () Bool)

(assert (=> b!134984 (= e!87890 (containsKey!174 (t!6152 lt!69560) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!41779 (not res!64783)) b!134983))

(assert (= (and b!134983 res!64784) b!134984))

(declare-fun m!160195 () Bool)

(assert (=> b!134984 m!160195))

(assert (=> b!133232 d!41779))

(declare-fun d!41781 () Bool)

(declare-fun c!25219 () Bool)

(assert (=> d!41781 (= c!25219 (and ((_ is Cons!1706) (t!6152 lt!69329)) (= (_1!1303 (h!2311 (t!6152 lt!69329))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87891 () Option!176)

(assert (=> d!41781 (= (getValueByKey!170 (t!6152 lt!69329) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87891)))

(declare-fun b!134987 () Bool)

(declare-fun e!87892 () Option!176)

(assert (=> b!134987 (= e!87892 (getValueByKey!170 (t!6152 (t!6152 lt!69329)) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!134986 () Bool)

(assert (=> b!134986 (= e!87891 e!87892)))

(declare-fun c!25220 () Bool)

(assert (=> b!134986 (= c!25220 (and ((_ is Cons!1706) (t!6152 lt!69329)) (not (= (_1!1303 (h!2311 (t!6152 lt!69329))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!134985 () Bool)

(assert (=> b!134985 (= e!87891 (Some!175 (_2!1303 (h!2311 (t!6152 lt!69329)))))))

(declare-fun b!134988 () Bool)

(assert (=> b!134988 (= e!87892 None!174)))

(assert (= (and d!41781 c!25219) b!134985))

(assert (= (and d!41781 (not c!25219)) b!134986))

(assert (= (and b!134986 c!25220) b!134987))

(assert (= (and b!134986 (not c!25220)) b!134988))

(declare-fun m!160197 () Bool)

(assert (=> b!134987 m!160197))

(assert (=> b!133448 d!41781))

(declare-fun d!41783 () Bool)

(declare-fun c!25223 () Bool)

(assert (=> d!41783 (= c!25223 ((_ is Nil!1708) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)))))

(declare-fun e!87895 () (InoxSet (_ BitVec 64)))

(assert (=> d!41783 (= (content!132 (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) e!87895)))

(declare-fun b!134993 () Bool)

(assert (=> b!134993 (= e!87895 ((as const (Array (_ BitVec 64) Bool)) false))))

(declare-fun b!134994 () Bool)

(assert (=> b!134994 (= e!87895 ((_ map or) (store ((as const (Array (_ BitVec 64) Bool)) false) (h!2312 (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) true) (content!132 (t!6153 (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)))))))

(assert (= (and d!41783 c!25223) b!134993))

(assert (= (and d!41783 (not c!25223)) b!134994))

(declare-fun m!160199 () Bool)

(assert (=> b!134994 m!160199))

(declare-fun m!160201 () Bool)

(assert (=> b!134994 m!160201))

(assert (=> d!40981 d!41783))

(declare-fun d!41785 () Bool)

(declare-fun res!64785 () Bool)

(declare-fun e!87896 () Bool)

(assert (=> d!41785 (=> res!64785 e!87896)))

(assert (=> d!41785 (= res!64785 (or ((_ is Nil!1707) (t!6152 (toList!851 lt!69005))) ((_ is Nil!1707) (t!6152 (t!6152 (toList!851 lt!69005))))))))

(assert (=> d!41785 (= (isStrictlySorted!317 (t!6152 (toList!851 lt!69005))) e!87896)))

(declare-fun b!134995 () Bool)

(declare-fun e!87897 () Bool)

(assert (=> b!134995 (= e!87896 e!87897)))

(declare-fun res!64786 () Bool)

(assert (=> b!134995 (=> (not res!64786) (not e!87897))))

(assert (=> b!134995 (= res!64786 (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 lt!69005)))) (_1!1303 (h!2311 (t!6152 (t!6152 (toList!851 lt!69005)))))))))

(declare-fun b!134996 () Bool)

(assert (=> b!134996 (= e!87897 (isStrictlySorted!317 (t!6152 (t!6152 (toList!851 lt!69005)))))))

(assert (= (and d!41785 (not res!64785)) b!134995))

(assert (= (and b!134995 res!64786) b!134996))

(declare-fun m!160203 () Bool)

(assert (=> b!134996 m!160203))

(assert (=> b!133929 d!41785))

(declare-fun d!41787 () Bool)

(assert (=> d!41787 (= (apply!116 lt!70059 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (getValueByKey!170 (toList!851 lt!70059) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5625 () Bool)

(assert (= bs!5625 d!41787))

(assert (=> bs!5625 m!156125))

(assert (=> bs!5625 m!159809))

(assert (=> bs!5625 m!159809))

(declare-fun m!160205 () Bool)

(assert (=> bs!5625 m!160205))

(assert (=> b!133948 d!41787))

(assert (=> b!133948 d!40497))

(declare-fun b!134997 () Bool)

(assert (=> b!134997 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> b!134997 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2519 (_values!2847 newMap!16))))))

(declare-fun e!87898 () Bool)

(declare-fun lt!70462 () ListLongMap!1671)

(assert (=> b!134997 (= e!87898 (= (apply!116 lt!70462 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!14844 () Bool)

(declare-fun call!14847 () ListLongMap!1671)

(assert (=> bm!14844 (= call!14847 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!134998 () Bool)

(declare-fun e!87901 () ListLongMap!1671)

(assert (=> b!134998 (= e!87901 call!14847)))

(declare-fun b!134999 () Bool)

(declare-fun e!87903 () Bool)

(declare-fun e!87900 () Bool)

(assert (=> b!134999 (= e!87903 e!87900)))

(declare-fun c!25227 () Bool)

(assert (=> b!134999 (= c!25227 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!135000 () Bool)

(assert (=> b!135000 (= e!87900 (isEmpty!414 lt!70462))))

(declare-fun b!135001 () Bool)

(declare-fun e!87904 () Bool)

(assert (=> b!135001 (= e!87904 e!87903)))

(declare-fun c!25224 () Bool)

(declare-fun e!87899 () Bool)

(assert (=> b!135001 (= c!25224 e!87899)))

(declare-fun res!64789 () Bool)

(assert (=> b!135001 (=> (not res!64789) (not e!87899))))

(assert (=> b!135001 (= res!64789 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!135002 () Bool)

(assert (=> b!135002 (= e!87899 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135002 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!135003 () Bool)

(declare-fun lt!70461 () Unit!4132)

(declare-fun lt!70466 () Unit!4132)

(assert (=> b!135003 (= lt!70461 lt!70466)))

(declare-fun lt!70464 () V!3481)

(declare-fun lt!70463 () (_ BitVec 64))

(declare-fun lt!70460 () ListLongMap!1671)

(declare-fun lt!70465 () (_ BitVec 64))

(assert (=> b!135003 (not (contains!886 (+!163 lt!70460 (tuple2!2585 lt!70463 lt!70464)) lt!70465))))

(assert (=> b!135003 (= lt!70466 (addStillNotContains!62 lt!70460 lt!70463 lt!70464 lt!70465))))

(assert (=> b!135003 (= lt!70465 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!135003 (= lt!70464 (get!1478 (select (arr!2249 (_values!2847 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!135003 (= lt!70463 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!135003 (= lt!70460 call!14847)))

(assert (=> b!135003 (= e!87901 (+!163 call!14847 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135004 () Bool)

(declare-fun e!87902 () ListLongMap!1671)

(assert (=> b!135004 (= e!87902 e!87901)))

(declare-fun c!25225 () Bool)

(assert (=> b!135004 (= c!25225 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135005 () Bool)

(assert (=> b!135005 (= e!87902 (ListLongMap!1672 Nil!1707))))

(declare-fun d!41789 () Bool)

(assert (=> d!41789 e!87904))

(declare-fun res!64788 () Bool)

(assert (=> d!41789 (=> (not res!64788) (not e!87904))))

(assert (=> d!41789 (= res!64788 (not (contains!886 lt!70462 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41789 (= lt!70462 e!87902)))

(declare-fun c!25226 () Bool)

(assert (=> d!41789 (= c!25226 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!41789 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!41789 (= (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)) lt!70462)))

(declare-fun b!135006 () Bool)

(assert (=> b!135006 (= e!87900 (= lt!70462 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun b!135007 () Bool)

(declare-fun res!64790 () Bool)

(assert (=> b!135007 (=> (not res!64790) (not e!87904))))

(assert (=> b!135007 (= res!64790 (not (contains!886 lt!70462 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135008 () Bool)

(assert (=> b!135008 (= e!87903 e!87898)))

(assert (=> b!135008 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64787 () Bool)

(assert (=> b!135008 (= res!64787 (contains!886 lt!70462 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135008 (=> (not res!64787) (not e!87898))))

(assert (= (and d!41789 c!25226) b!135005))

(assert (= (and d!41789 (not c!25226)) b!135004))

(assert (= (and b!135004 c!25225) b!135003))

(assert (= (and b!135004 (not c!25225)) b!134998))

(assert (= (or b!135003 b!134998) bm!14844))

(assert (= (and d!41789 res!64788) b!135007))

(assert (= (and b!135007 res!64790) b!135001))

(assert (= (and b!135001 res!64789) b!135002))

(assert (= (and b!135001 c!25224) b!135008))

(assert (= (and b!135001 (not c!25224)) b!134999))

(assert (= (and b!135008 res!64787) b!134997))

(assert (= (and b!134999 c!25227) b!135006))

(assert (= (and b!134999 (not c!25227)) b!135000))

(declare-fun b_lambda!6011 () Bool)

(assert (=> (not b_lambda!6011) (not b!134997)))

(assert (=> b!134997 t!6164))

(declare-fun b_and!8353 () Bool)

(assert (= b_and!8349 (and (=> t!6164 result!3993) b_and!8353)))

(assert (=> b!134997 t!6166))

(declare-fun b_and!8355 () Bool)

(assert (= b_and!8351 (and (=> t!6166 result!3995) b_and!8355)))

(declare-fun b_lambda!6013 () Bool)

(assert (=> (not b_lambda!6013) (not b!135003)))

(assert (=> b!135003 t!6164))

(declare-fun b_and!8357 () Bool)

(assert (= b_and!8353 (and (=> t!6164 result!3993) b_and!8357)))

(assert (=> b!135003 t!6166))

(declare-fun b_and!8359 () Bool)

(assert (= b_and!8355 (and (=> t!6166 result!3995) b_and!8359)))

(assert (=> b!135002 m!156869))

(assert (=> b!135002 m!156869))

(assert (=> b!135002 m!156871))

(declare-fun m!160207 () Bool)

(assert (=> b!135007 m!160207))

(assert (=> b!135003 m!159585))

(declare-fun m!160209 () Bool)

(assert (=> b!135003 m!160209))

(assert (=> b!135003 m!156869))

(assert (=> b!135003 m!159585))

(assert (=> b!135003 m!156135))

(assert (=> b!135003 m!159589))

(declare-fun m!160211 () Bool)

(assert (=> b!135003 m!160211))

(declare-fun m!160213 () Bool)

(assert (=> b!135003 m!160213))

(assert (=> b!135003 m!156135))

(declare-fun m!160215 () Bool)

(assert (=> b!135003 m!160215))

(assert (=> b!135003 m!160211))

(declare-fun m!160217 () Bool)

(assert (=> b!135006 m!160217))

(assert (=> b!135008 m!156869))

(assert (=> b!135008 m!156869))

(declare-fun m!160219 () Bool)

(assert (=> b!135008 m!160219))

(declare-fun m!160221 () Bool)

(assert (=> b!135000 m!160221))

(assert (=> bm!14844 m!160217))

(declare-fun m!160223 () Bool)

(assert (=> d!41789 m!160223))

(assert (=> d!41789 m!156183))

(assert (=> b!135004 m!156869))

(assert (=> b!135004 m!156869))

(assert (=> b!135004 m!156871))

(assert (=> b!134997 m!159585))

(assert (=> b!134997 m!156869))

(assert (=> b!134997 m!159585))

(assert (=> b!134997 m!156135))

(assert (=> b!134997 m!159589))

(assert (=> b!134997 m!156135))

(assert (=> b!134997 m!156869))

(declare-fun m!160225 () Bool)

(assert (=> b!134997 m!160225))

(assert (=> b!133340 d!41789))

(declare-fun d!41791 () Bool)

(declare-fun lt!70467 () Bool)

(assert (=> d!41791 (= lt!70467 (select (content!132 (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!87906 () Bool)

(assert (=> d!41791 (= lt!70467 e!87906)))

(declare-fun res!64792 () Bool)

(assert (=> d!41791 (=> (not res!64792) (not e!87906))))

(assert (=> d!41791 (= res!64792 ((_ is Cons!1707) (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708)))))

(assert (=> d!41791 (= (contains!888 (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708) (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!70467)))

(declare-fun b!135009 () Bool)

(declare-fun e!87905 () Bool)

(assert (=> b!135009 (= e!87906 e!87905)))

(declare-fun res!64791 () Bool)

(assert (=> b!135009 (=> res!64791 e!87905)))

(assert (=> b!135009 (= res!64791 (= (h!2312 (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135010 () Bool)

(assert (=> b!135010 (= e!87905 (contains!888 (t!6153 (ite c!24579 (Cons!1707 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!41791 res!64792) b!135009))

(assert (= (and b!135009 (not res!64791)) b!135010))

(declare-fun m!160227 () Bool)

(assert (=> d!41791 m!160227))

(assert (=> d!41791 m!156869))

(declare-fun m!160229 () Bool)

(assert (=> d!41791 m!160229))

(assert (=> b!135010 m!156869))

(declare-fun m!160231 () Bool)

(assert (=> b!135010 m!160231))

(assert (=> b!133248 d!41791))

(declare-fun d!41793 () Bool)

(declare-fun res!64793 () Bool)

(declare-fun e!87907 () Bool)

(assert (=> d!41793 (=> res!64793 e!87907)))

(assert (=> d!41793 (= res!64793 (and ((_ is Cons!1706) lt!69902) (= (_1!1303 (h!2311 lt!69902)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41793 (= (containsKey!174 lt!69902 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87907)))

(declare-fun b!135011 () Bool)

(declare-fun e!87908 () Bool)

(assert (=> b!135011 (= e!87907 e!87908)))

(declare-fun res!64794 () Bool)

(assert (=> b!135011 (=> (not res!64794) (not e!87908))))

(assert (=> b!135011 (= res!64794 (and (or (not ((_ is Cons!1706) lt!69902)) (bvsle (_1!1303 (h!2311 lt!69902)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1706) lt!69902) (bvslt (_1!1303 (h!2311 lt!69902)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135012 () Bool)

(assert (=> b!135012 (= e!87908 (containsKey!174 (t!6152 lt!69902) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41793 (not res!64793)) b!135011))

(assert (= (and b!135011 res!64794) b!135012))

(declare-fun m!160233 () Bool)

(assert (=> b!135012 m!160233))

(assert (=> b!133743 d!41793))

(assert (=> d!40967 d!40425))

(declare-fun d!41795 () Bool)

(declare-fun e!87909 () Bool)

(assert (=> d!41795 e!87909))

(declare-fun res!64795 () Bool)

(assert (=> d!41795 (=> res!64795 e!87909)))

(declare-fun lt!70469 () Bool)

(assert (=> d!41795 (= res!64795 (not lt!70469))))

(declare-fun lt!70471 () Bool)

(assert (=> d!41795 (= lt!70469 lt!70471)))

(declare-fun lt!70468 () Unit!4132)

(declare-fun e!87910 () Unit!4132)

(assert (=> d!41795 (= lt!70468 e!87910)))

(declare-fun c!25228 () Bool)

(assert (=> d!41795 (= c!25228 lt!70471)))

(assert (=> d!41795 (= lt!70471 (containsKey!174 (toList!851 lt!69823) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41795 (= (contains!886 lt!69823 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70469)))

(declare-fun b!135013 () Bool)

(declare-fun lt!70470 () Unit!4132)

(assert (=> b!135013 (= e!87910 lt!70470)))

(assert (=> b!135013 (= lt!70470 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69823) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135013 (isDefined!124 (getValueByKey!170 (toList!851 lt!69823) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135014 () Bool)

(declare-fun Unit!4234 () Unit!4132)

(assert (=> b!135014 (= e!87910 Unit!4234)))

(declare-fun b!135015 () Bool)

(assert (=> b!135015 (= e!87909 (isDefined!124 (getValueByKey!170 (toList!851 lt!69823) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41795 c!25228) b!135013))

(assert (= (and d!41795 (not c!25228)) b!135014))

(assert (= (and d!41795 (not res!64795)) b!135015))

(declare-fun m!160235 () Bool)

(assert (=> d!41795 m!160235))

(declare-fun m!160237 () Bool)

(assert (=> b!135013 m!160237))

(declare-fun m!160239 () Bool)

(assert (=> b!135013 m!160239))

(assert (=> b!135013 m!160239))

(declare-fun m!160241 () Bool)

(assert (=> b!135013 m!160241))

(assert (=> b!135015 m!160239))

(assert (=> b!135015 m!160239))

(assert (=> b!135015 m!160241))

(assert (=> d!40717 d!41795))

(assert (=> d!40717 d!40425))

(declare-fun c!25229 () Bool)

(declare-fun d!41797 () Bool)

(assert (=> d!41797 (= c!25229 (and ((_ is Cons!1706) (toList!851 lt!69616)) (= (_1!1303 (h!2311 (toList!851 lt!69616))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87911 () Option!176)

(assert (=> d!41797 (= (getValueByKey!170 (toList!851 lt!69616) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87911)))

(declare-fun b!135018 () Bool)

(declare-fun e!87912 () Option!176)

(assert (=> b!135018 (= e!87912 (getValueByKey!170 (t!6152 (toList!851 lt!69616)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135017 () Bool)

(assert (=> b!135017 (= e!87911 e!87912)))

(declare-fun c!25230 () Bool)

(assert (=> b!135017 (= c!25230 (and ((_ is Cons!1706) (toList!851 lt!69616)) (not (= (_1!1303 (h!2311 (toList!851 lt!69616))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135016 () Bool)

(assert (=> b!135016 (= e!87911 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69616)))))))

(declare-fun b!135019 () Bool)

(assert (=> b!135019 (= e!87912 None!174)))

(assert (= (and d!41797 c!25229) b!135016))

(assert (= (and d!41797 (not c!25229)) b!135017))

(assert (= (and b!135017 c!25230) b!135018))

(assert (= (and b!135017 (not c!25230)) b!135019))

(declare-fun m!160243 () Bool)

(assert (=> b!135018 m!160243))

(assert (=> b!133349 d!41797))

(declare-fun b!135020 () Bool)

(assert (=> b!135020 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> b!135020 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2519 lt!69094)))))

(declare-fun e!87913 () Bool)

(declare-fun lt!70474 () ListLongMap!1671)

(assert (=> b!135020 (= e!87913 (= (apply!116 lt!70474 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1478 (select (arr!2249 lt!69094) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!14845 () Bool)

(declare-fun call!14848 () ListLongMap!1671)

(assert (=> bm!14845 (= call!14848 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!135021 () Bool)

(declare-fun e!87916 () ListLongMap!1671)

(assert (=> b!135021 (= e!87916 call!14848)))

(declare-fun b!135022 () Bool)

(declare-fun e!87918 () Bool)

(declare-fun e!87915 () Bool)

(assert (=> b!135022 (= e!87918 e!87915)))

(declare-fun c!25234 () Bool)

(assert (=> b!135022 (= c!25234 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!135023 () Bool)

(assert (=> b!135023 (= e!87915 (isEmpty!414 lt!70474))))

(declare-fun b!135024 () Bool)

(declare-fun e!87919 () Bool)

(assert (=> b!135024 (= e!87919 e!87918)))

(declare-fun c!25231 () Bool)

(declare-fun e!87914 () Bool)

(assert (=> b!135024 (= c!25231 e!87914)))

(declare-fun res!64798 () Bool)

(assert (=> b!135024 (=> (not res!64798) (not e!87914))))

(assert (=> b!135024 (= res!64798 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!135025 () Bool)

(assert (=> b!135025 (= e!87914 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135025 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!135026 () Bool)

(declare-fun lt!70473 () Unit!4132)

(declare-fun lt!70478 () Unit!4132)

(assert (=> b!135026 (= lt!70473 lt!70478)))

(declare-fun lt!70476 () V!3481)

(declare-fun lt!70475 () (_ BitVec 64))

(declare-fun lt!70472 () ListLongMap!1671)

(declare-fun lt!70477 () (_ BitVec 64))

(assert (=> b!135026 (not (contains!886 (+!163 lt!70472 (tuple2!2585 lt!70475 lt!70476)) lt!70477))))

(assert (=> b!135026 (= lt!70478 (addStillNotContains!62 lt!70472 lt!70475 lt!70476 lt!70477))))

(assert (=> b!135026 (= lt!70477 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!135026 (= lt!70476 (get!1478 (select (arr!2249 lt!69094) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!135026 (= lt!70475 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!135026 (= lt!70472 call!14848)))

(assert (=> b!135026 (= e!87916 (+!163 call!14848 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 lt!69094) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135027 () Bool)

(declare-fun e!87917 () ListLongMap!1671)

(assert (=> b!135027 (= e!87917 e!87916)))

(declare-fun c!25232 () Bool)

(assert (=> b!135027 (= c!25232 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135028 () Bool)

(assert (=> b!135028 (= e!87917 (ListLongMap!1672 Nil!1707))))

(declare-fun d!41799 () Bool)

(assert (=> d!41799 e!87919))

(declare-fun res!64797 () Bool)

(assert (=> d!41799 (=> (not res!64797) (not e!87919))))

(assert (=> d!41799 (= res!64797 (not (contains!886 lt!70474 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41799 (= lt!70474 e!87917)))

(declare-fun c!25233 () Bool)

(assert (=> d!41799 (= c!25233 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!41799 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!41799 (= (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)) lt!70474)))

(declare-fun b!135029 () Bool)

(assert (=> b!135029 (= e!87915 (= lt!70474 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun b!135030 () Bool)

(declare-fun res!64799 () Bool)

(assert (=> b!135030 (=> (not res!64799) (not e!87919))))

(assert (=> b!135030 (= res!64799 (not (contains!886 lt!70474 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135031 () Bool)

(assert (=> b!135031 (= e!87918 e!87913)))

(assert (=> b!135031 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64796 () Bool)

(assert (=> b!135031 (= res!64796 (contains!886 lt!70474 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135031 (=> (not res!64796) (not e!87913))))

(assert (= (and d!41799 c!25233) b!135028))

(assert (= (and d!41799 (not c!25233)) b!135027))

(assert (= (and b!135027 c!25232) b!135026))

(assert (= (and b!135027 (not c!25232)) b!135021))

(assert (= (or b!135026 b!135021) bm!14845))

(assert (= (and d!41799 res!64797) b!135030))

(assert (= (and b!135030 res!64799) b!135024))

(assert (= (and b!135024 res!64798) b!135025))

(assert (= (and b!135024 c!25231) b!135031))

(assert (= (and b!135024 (not c!25231)) b!135022))

(assert (= (and b!135031 res!64796) b!135020))

(assert (= (and b!135022 c!25234) b!135029))

(assert (= (and b!135022 (not c!25234)) b!135023))

(declare-fun b_lambda!6015 () Bool)

(assert (=> (not b_lambda!6015) (not b!135020)))

(assert (=> b!135020 t!6164))

(declare-fun b_and!8361 () Bool)

(assert (= b_and!8357 (and (=> t!6164 result!3993) b_and!8361)))

(assert (=> b!135020 t!6166))

(declare-fun b_and!8363 () Bool)

(assert (= b_and!8359 (and (=> t!6166 result!3995) b_and!8363)))

(declare-fun b_lambda!6017 () Bool)

(assert (=> (not b_lambda!6017) (not b!135026)))

(assert (=> b!135026 t!6164))

(declare-fun b_and!8365 () Bool)

(assert (= b_and!8361 (and (=> t!6164 result!3993) b_and!8365)))

(assert (=> b!135026 t!6166))

(declare-fun b_and!8367 () Bool)

(assert (= b_and!8363 (and (=> t!6166 result!3995) b_and!8367)))

(assert (=> b!135025 m!156869))

(assert (=> b!135025 m!156869))

(assert (=> b!135025 m!156871))

(declare-fun m!160245 () Bool)

(assert (=> b!135030 m!160245))

(declare-fun m!160247 () Bool)

(assert (=> b!135026 m!160247))

(declare-fun m!160249 () Bool)

(assert (=> b!135026 m!160249))

(assert (=> b!135026 m!156869))

(assert (=> b!135026 m!160247))

(assert (=> b!135026 m!156135))

(declare-fun m!160251 () Bool)

(assert (=> b!135026 m!160251))

(declare-fun m!160253 () Bool)

(assert (=> b!135026 m!160253))

(declare-fun m!160255 () Bool)

(assert (=> b!135026 m!160255))

(assert (=> b!135026 m!156135))

(declare-fun m!160257 () Bool)

(assert (=> b!135026 m!160257))

(assert (=> b!135026 m!160253))

(declare-fun m!160259 () Bool)

(assert (=> b!135029 m!160259))

(assert (=> b!135031 m!156869))

(assert (=> b!135031 m!156869))

(declare-fun m!160261 () Bool)

(assert (=> b!135031 m!160261))

(declare-fun m!160263 () Bool)

(assert (=> b!135023 m!160263))

(assert (=> bm!14845 m!160259))

(declare-fun m!160265 () Bool)

(assert (=> d!41799 m!160265))

(assert (=> d!41799 m!156183))

(assert (=> b!135027 m!156869))

(assert (=> b!135027 m!156869))

(assert (=> b!135027 m!156871))

(assert (=> b!135020 m!160247))

(assert (=> b!135020 m!156869))

(assert (=> b!135020 m!160247))

(assert (=> b!135020 m!156135))

(assert (=> b!135020 m!160251))

(assert (=> b!135020 m!156135))

(assert (=> b!135020 m!156869))

(declare-fun m!160267 () Bool)

(assert (=> b!135020 m!160267))

(assert (=> b!133612 d!41799))

(assert (=> b!133389 d!40563))

(declare-fun b!135032 () Bool)

(declare-fun e!87920 () Bool)

(declare-fun call!14849 () Bool)

(assert (=> b!135032 (= e!87920 call!14849)))

(declare-fun b!135033 () Bool)

(declare-fun e!87921 () Bool)

(assert (=> b!135033 (= e!87921 e!87920)))

(declare-fun lt!70479 () (_ BitVec 64))

(assert (=> b!135033 (= lt!70479 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000))))

(declare-fun lt!70481 () Unit!4132)

(assert (=> b!135033 (= lt!70481 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 (_2!1304 lt!69440)) lt!70479 #b00000000000000000000000000000000))))

(assert (=> b!135033 (arrayContainsKey!0 (_keys!4612 (_2!1304 lt!69440)) lt!70479 #b00000000000000000000000000000000)))

(declare-fun lt!70480 () Unit!4132)

(assert (=> b!135033 (= lt!70480 lt!70481)))

(declare-fun res!64801 () Bool)

(assert (=> b!135033 (= res!64801 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000) (_keys!4612 (_2!1304 lt!69440)) (mask!7163 (_2!1304 lt!69440))) (Found!278 #b00000000000000000000000000000000)))))

(assert (=> b!135033 (=> (not res!64801) (not e!87920))))

(declare-fun d!41801 () Bool)

(declare-fun res!64800 () Bool)

(declare-fun e!87922 () Bool)

(assert (=> d!41801 (=> res!64800 e!87922)))

(assert (=> d!41801 (= res!64800 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69440)))))))

(assert (=> d!41801 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4612 (_2!1304 lt!69440)) (mask!7163 (_2!1304 lt!69440))) e!87922)))

(declare-fun b!135034 () Bool)

(assert (=> b!135034 (= e!87922 e!87921)))

(declare-fun c!25235 () Bool)

(assert (=> b!135034 (= c!25235 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000)))))

(declare-fun b!135035 () Bool)

(assert (=> b!135035 (= e!87921 call!14849)))

(declare-fun bm!14846 () Bool)

(assert (=> bm!14846 (= call!14849 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4612 (_2!1304 lt!69440)) (mask!7163 (_2!1304 lt!69440))))))

(assert (= (and d!41801 (not res!64800)) b!135034))

(assert (= (and b!135034 c!25235) b!135033))

(assert (= (and b!135034 (not c!25235)) b!135035))

(assert (= (and b!135033 res!64801) b!135032))

(assert (= (or b!135032 b!135035) bm!14846))

(assert (=> b!135033 m!159623))

(declare-fun m!160269 () Bool)

(assert (=> b!135033 m!160269))

(declare-fun m!160271 () Bool)

(assert (=> b!135033 m!160271))

(assert (=> b!135033 m!159623))

(declare-fun m!160273 () Bool)

(assert (=> b!135033 m!160273))

(assert (=> b!135034 m!159623))

(assert (=> b!135034 m!159623))

(assert (=> b!135034 m!159625))

(declare-fun m!160275 () Bool)

(assert (=> bm!14846 m!160275))

(assert (=> b!133539 d!41801))

(declare-fun b!135036 () Bool)

(declare-fun e!87923 () (_ BitVec 32))

(declare-fun e!87924 () (_ BitVec 32))

(assert (=> b!135036 (= e!87923 e!87924)))

(declare-fun c!25237 () Bool)

(assert (=> b!135036 (= c!25237 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!135037 () Bool)

(declare-fun call!14850 () (_ BitVec 32))

(assert (=> b!135037 (= e!87924 (bvadd #b00000000000000000000000000000001 call!14850))))

(declare-fun d!41803 () Bool)

(declare-fun lt!70482 () (_ BitVec 32))

(assert (=> d!41803 (and (bvsge lt!70482 #b00000000000000000000000000000000) (bvsle lt!70482 (bvsub (size!2518 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> d!41803 (= lt!70482 e!87923)))

(declare-fun c!25236 () Bool)

(assert (=> d!41803 (= c!25236 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!41803 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2518 (_keys!4612 newMap!16)) (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!41803 (= (arrayCountValidKeys!0 (_keys!4612 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))) lt!70482)))

(declare-fun b!135038 () Bool)

(assert (=> b!135038 (= e!87924 call!14850)))

(declare-fun b!135039 () Bool)

(assert (=> b!135039 (= e!87923 #b00000000000000000000000000000000)))

(declare-fun bm!14847 () Bool)

(assert (=> bm!14847 (= call!14850 (arrayCountValidKeys!0 (_keys!4612 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(assert (= (and d!41803 c!25236) b!135039))

(assert (= (and d!41803 (not c!25236)) b!135036))

(assert (= (and b!135036 c!25237) b!135037))

(assert (= (and b!135036 (not c!25237)) b!135038))

(assert (= (or b!135037 b!135038) bm!14847))

(assert (=> b!135036 m!159107))

(assert (=> b!135036 m!159107))

(assert (=> b!135036 m!159115))

(declare-fun m!160277 () Bool)

(assert (=> bm!14847 m!160277))

(assert (=> bm!14727 d!41803))

(declare-fun d!41805 () Bool)

(declare-fun e!87925 () Bool)

(assert (=> d!41805 e!87925))

(declare-fun res!64803 () Bool)

(assert (=> d!41805 (=> (not res!64803) (not e!87925))))

(declare-fun lt!70485 () ListLongMap!1671)

(assert (=> d!41805 (= res!64803 (contains!886 lt!70485 (_1!1303 (tuple2!2585 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70483 () List!1710)

(assert (=> d!41805 (= lt!70485 (ListLongMap!1672 lt!70483))))

(declare-fun lt!70486 () Unit!4132)

(declare-fun lt!70484 () Unit!4132)

(assert (=> d!41805 (= lt!70486 lt!70484)))

(assert (=> d!41805 (= (getValueByKey!170 lt!70483 (_1!1303 (tuple2!2585 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41805 (= lt!70484 (lemmaContainsTupThenGetReturnValue!88 lt!70483 (_1!1303 (tuple2!2585 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41805 (= lt!70483 (insertStrictlySorted!91 (toList!851 lt!69907) (_1!1303 (tuple2!2585 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41805 (= (+!163 lt!69907 (tuple2!2585 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70485)))

(declare-fun b!135040 () Bool)

(declare-fun res!64802 () Bool)

(assert (=> b!135040 (=> (not res!64802) (not e!87925))))

(assert (=> b!135040 (= res!64802 (= (getValueByKey!170 (toList!851 lt!70485) (_1!1303 (tuple2!2585 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135041 () Bool)

(assert (=> b!135041 (= e!87925 (contains!889 (toList!851 lt!70485) (tuple2!2585 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41805 res!64803) b!135040))

(assert (= (and b!135040 res!64802) b!135041))

(declare-fun m!160279 () Bool)

(assert (=> d!41805 m!160279))

(declare-fun m!160281 () Bool)

(assert (=> d!41805 m!160281))

(declare-fun m!160283 () Bool)

(assert (=> d!41805 m!160283))

(declare-fun m!160285 () Bool)

(assert (=> d!41805 m!160285))

(declare-fun m!160287 () Bool)

(assert (=> b!135040 m!160287))

(declare-fun m!160289 () Bool)

(assert (=> b!135041 m!160289))

(assert (=> b!133761 d!41805))

(declare-fun d!41807 () Bool)

(assert (=> d!41807 (= (apply!116 (+!163 lt!69916 (tuple2!2585 lt!69917 (minValue!2719 newMap!16))) lt!69927) (apply!116 lt!69916 lt!69927))))

(declare-fun lt!70487 () Unit!4132)

(assert (=> d!41807 (= lt!70487 (choose!828 lt!69916 lt!69917 (minValue!2719 newMap!16) lt!69927))))

(declare-fun e!87926 () Bool)

(assert (=> d!41807 e!87926))

(declare-fun res!64804 () Bool)

(assert (=> d!41807 (=> (not res!64804) (not e!87926))))

(assert (=> d!41807 (= res!64804 (contains!886 lt!69916 lt!69927))))

(assert (=> d!41807 (= (addApplyDifferent!92 lt!69916 lt!69917 (minValue!2719 newMap!16) lt!69927) lt!70487)))

(declare-fun b!135042 () Bool)

(assert (=> b!135042 (= e!87926 (not (= lt!69927 lt!69917)))))

(assert (= (and d!41807 res!64804) b!135042))

(assert (=> d!41807 m!158031))

(assert (=> d!41807 m!158053))

(declare-fun m!160291 () Bool)

(assert (=> d!41807 m!160291))

(assert (=> d!41807 m!158051))

(declare-fun m!160293 () Bool)

(assert (=> d!41807 m!160293))

(assert (=> d!41807 m!158031))

(assert (=> b!133761 d!41807))

(declare-fun d!41809 () Bool)

(assert (=> d!41809 (= (apply!116 lt!69907 lt!69911) (get!1482 (getValueByKey!170 (toList!851 lt!69907) lt!69911)))))

(declare-fun bs!5626 () Bool)

(assert (= bs!5626 d!41809))

(declare-fun m!160295 () Bool)

(assert (=> bs!5626 m!160295))

(assert (=> bs!5626 m!160295))

(declare-fun m!160297 () Bool)

(assert (=> bs!5626 m!160297))

(assert (=> b!133761 d!41809))

(declare-fun d!41811 () Bool)

(assert (=> d!41811 (= (apply!116 (+!163 lt!69916 (tuple2!2585 lt!69917 (minValue!2719 newMap!16))) lt!69927) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69916 (tuple2!2585 lt!69917 (minValue!2719 newMap!16)))) lt!69927)))))

(declare-fun bs!5627 () Bool)

(assert (= bs!5627 d!41811))

(declare-fun m!160299 () Bool)

(assert (=> bs!5627 m!160299))

(assert (=> bs!5627 m!160299))

(declare-fun m!160301 () Bool)

(assert (=> bs!5627 m!160301))

(assert (=> b!133761 d!41811))

(declare-fun d!41813 () Bool)

(declare-fun e!87927 () Bool)

(assert (=> d!41813 e!87927))

(declare-fun res!64806 () Bool)

(assert (=> d!41813 (=> (not res!64806) (not e!87927))))

(declare-fun lt!70490 () ListLongMap!1671)

(assert (=> d!41813 (= res!64806 (contains!886 lt!70490 (_1!1303 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70488 () List!1710)

(assert (=> d!41813 (= lt!70490 (ListLongMap!1672 lt!70488))))

(declare-fun lt!70491 () Unit!4132)

(declare-fun lt!70489 () Unit!4132)

(assert (=> d!41813 (= lt!70491 lt!70489)))

(assert (=> d!41813 (= (getValueByKey!170 lt!70488 (_1!1303 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41813 (= lt!70489 (lemmaContainsTupThenGetReturnValue!88 lt!70488 (_1!1303 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41813 (= lt!70488 (insertStrictlySorted!91 (toList!851 lt!69913) (_1!1303 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41813 (= (+!163 lt!69913 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70490)))

(declare-fun b!135043 () Bool)

(declare-fun res!64805 () Bool)

(assert (=> b!135043 (=> (not res!64805) (not e!87927))))

(assert (=> b!135043 (= res!64805 (= (getValueByKey!170 (toList!851 lt!70490) (_1!1303 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135044 () Bool)

(assert (=> b!135044 (= e!87927 (contains!889 (toList!851 lt!70490) (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41813 res!64806) b!135043))

(assert (= (and b!135043 res!64805) b!135044))

(declare-fun m!160303 () Bool)

(assert (=> d!41813 m!160303))

(declare-fun m!160305 () Bool)

(assert (=> d!41813 m!160305))

(declare-fun m!160307 () Bool)

(assert (=> d!41813 m!160307))

(declare-fun m!160309 () Bool)

(assert (=> d!41813 m!160309))

(declare-fun m!160311 () Bool)

(assert (=> b!135043 m!160311))

(declare-fun m!160313 () Bool)

(assert (=> b!135044 m!160313))

(assert (=> b!133761 d!41813))

(declare-fun d!41815 () Bool)

(assert (=> d!41815 (= (apply!116 (+!163 lt!69907 (tuple2!2585 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69911) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69907 (tuple2!2585 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69911)))))

(declare-fun bs!5628 () Bool)

(assert (= bs!5628 d!41815))

(declare-fun m!160315 () Bool)

(assert (=> bs!5628 m!160315))

(assert (=> bs!5628 m!160315))

(declare-fun m!160317 () Bool)

(assert (=> bs!5628 m!160317))

(assert (=> b!133761 d!41815))

(declare-fun d!41817 () Bool)

(declare-fun e!87928 () Bool)

(assert (=> d!41817 e!87928))

(declare-fun res!64807 () Bool)

(assert (=> d!41817 (=> res!64807 e!87928)))

(declare-fun lt!70493 () Bool)

(assert (=> d!41817 (= res!64807 (not lt!70493))))

(declare-fun lt!70495 () Bool)

(assert (=> d!41817 (= lt!70493 lt!70495)))

(declare-fun lt!70492 () Unit!4132)

(declare-fun e!87929 () Unit!4132)

(assert (=> d!41817 (= lt!70492 e!87929)))

(declare-fun c!25238 () Bool)

(assert (=> d!41817 (= c!25238 lt!70495)))

(assert (=> d!41817 (= lt!70495 (containsKey!174 (toList!851 (+!163 lt!69913 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69919))))

(assert (=> d!41817 (= (contains!886 (+!163 lt!69913 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69919) lt!70493)))

(declare-fun b!135045 () Bool)

(declare-fun lt!70494 () Unit!4132)

(assert (=> b!135045 (= e!87929 lt!70494)))

(assert (=> b!135045 (= lt!70494 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69913 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69919))))

(assert (=> b!135045 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69913 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69919))))

(declare-fun b!135046 () Bool)

(declare-fun Unit!4235 () Unit!4132)

(assert (=> b!135046 (= e!87929 Unit!4235)))

(declare-fun b!135047 () Bool)

(assert (=> b!135047 (= e!87928 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69913 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69919)))))

(assert (= (and d!41817 c!25238) b!135045))

(assert (= (and d!41817 (not c!25238)) b!135046))

(assert (= (and d!41817 (not res!64807)) b!135047))

(declare-fun m!160319 () Bool)

(assert (=> d!41817 m!160319))

(declare-fun m!160321 () Bool)

(assert (=> b!135045 m!160321))

(declare-fun m!160323 () Bool)

(assert (=> b!135045 m!160323))

(assert (=> b!135045 m!160323))

(declare-fun m!160325 () Bool)

(assert (=> b!135045 m!160325))

(assert (=> b!135047 m!160323))

(assert (=> b!135047 m!160323))

(assert (=> b!135047 m!160325))

(assert (=> b!133761 d!41817))

(declare-fun d!41819 () Bool)

(assert (=> d!41819 (= (apply!116 lt!69909 lt!69914) (get!1482 (getValueByKey!170 (toList!851 lt!69909) lt!69914)))))

(declare-fun bs!5629 () Bool)

(assert (= bs!5629 d!41819))

(declare-fun m!160327 () Bool)

(assert (=> bs!5629 m!160327))

(assert (=> bs!5629 m!160327))

(declare-fun m!160329 () Bool)

(assert (=> bs!5629 m!160329))

(assert (=> b!133761 d!41819))

(declare-fun d!41821 () Bool)

(assert (=> d!41821 (= (apply!116 (+!163 lt!69907 (tuple2!2585 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69911) (apply!116 lt!69907 lt!69911))))

(declare-fun lt!70496 () Unit!4132)

(assert (=> d!41821 (= lt!70496 (choose!828 lt!69907 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69911))))

(declare-fun e!87930 () Bool)

(assert (=> d!41821 e!87930))

(declare-fun res!64808 () Bool)

(assert (=> d!41821 (=> (not res!64808) (not e!87930))))

(assert (=> d!41821 (= res!64808 (contains!886 lt!69907 lt!69911))))

(assert (=> d!41821 (= (addApplyDifferent!92 lt!69907 lt!69908 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69911) lt!70496)))

(declare-fun b!135048 () Bool)

(assert (=> b!135048 (= e!87930 (not (= lt!69911 lt!69908)))))

(assert (= (and d!41821 res!64808) b!135048))

(assert (=> d!41821 m!158025))

(assert (=> d!41821 m!158033))

(declare-fun m!160331 () Bool)

(assert (=> d!41821 m!160331))

(assert (=> d!41821 m!158035))

(assert (=> d!41821 m!155839))

(declare-fun m!160333 () Bool)

(assert (=> d!41821 m!160333))

(assert (=> d!41821 m!158025))

(assert (=> b!133761 d!41821))

(declare-fun d!41823 () Bool)

(assert (=> d!41823 (contains!886 (+!163 lt!69913 (tuple2!2585 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69919)))

(declare-fun lt!70497 () Unit!4132)

(assert (=> d!41823 (= lt!70497 (choose!829 lt!69913 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69919))))

(assert (=> d!41823 (contains!886 lt!69913 lt!69919)))

(assert (=> d!41823 (= (addStillContains!92 lt!69913 lt!69921 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69919) lt!70497)))

(declare-fun bs!5630 () Bool)

(assert (= bs!5630 d!41823))

(assert (=> bs!5630 m!158029))

(assert (=> bs!5630 m!158029))

(assert (=> bs!5630 m!158041))

(assert (=> bs!5630 m!155839))

(declare-fun m!160335 () Bool)

(assert (=> bs!5630 m!160335))

(declare-fun m!160337 () Bool)

(assert (=> bs!5630 m!160337))

(assert (=> b!133761 d!41823))

(declare-fun d!41825 () Bool)

(assert (=> d!41825 (= (apply!116 lt!69916 lt!69927) (get!1482 (getValueByKey!170 (toList!851 lt!69916) lt!69927)))))

(declare-fun bs!5631 () Bool)

(assert (= bs!5631 d!41825))

(declare-fun m!160339 () Bool)

(assert (=> bs!5631 m!160339))

(assert (=> bs!5631 m!160339))

(declare-fun m!160341 () Bool)

(assert (=> bs!5631 m!160341))

(assert (=> b!133761 d!41825))

(declare-fun b!135049 () Bool)

(assert (=> b!135049 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> b!135049 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (_values!2847 newMap!16))))))

(declare-fun e!87931 () Bool)

(declare-fun lt!70500 () ListLongMap!1671)

(assert (=> b!135049 (= e!87931 (= (apply!116 lt!70500 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun call!14851 () ListLongMap!1671)

(declare-fun bm!14848 () Bool)

(assert (=> bm!14848 (= call!14851 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69098 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!135050 () Bool)

(declare-fun e!87934 () ListLongMap!1671)

(assert (=> b!135050 (= e!87934 call!14851)))

(declare-fun b!135051 () Bool)

(declare-fun e!87936 () Bool)

(declare-fun e!87933 () Bool)

(assert (=> b!135051 (= e!87936 e!87933)))

(declare-fun c!25242 () Bool)

(assert (=> b!135051 (= c!25242 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!135052 () Bool)

(assert (=> b!135052 (= e!87933 (isEmpty!414 lt!70500))))

(declare-fun b!135053 () Bool)

(declare-fun e!87937 () Bool)

(assert (=> b!135053 (= e!87937 e!87936)))

(declare-fun c!25239 () Bool)

(declare-fun e!87932 () Bool)

(assert (=> b!135053 (= c!25239 e!87932)))

(declare-fun res!64811 () Bool)

(assert (=> b!135053 (=> (not res!64811) (not e!87932))))

(assert (=> b!135053 (= res!64811 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!135054 () Bool)

(assert (=> b!135054 (= e!87932 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135054 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!135055 () Bool)

(declare-fun lt!70499 () Unit!4132)

(declare-fun lt!70504 () Unit!4132)

(assert (=> b!135055 (= lt!70499 lt!70504)))

(declare-fun lt!70503 () (_ BitVec 64))

(declare-fun lt!70501 () (_ BitVec 64))

(declare-fun lt!70498 () ListLongMap!1671)

(declare-fun lt!70502 () V!3481)

(assert (=> b!135055 (not (contains!886 (+!163 lt!70498 (tuple2!2585 lt!70501 lt!70502)) lt!70503))))

(assert (=> b!135055 (= lt!70504 (addStillNotContains!62 lt!70498 lt!70501 lt!70502 lt!70503))))

(assert (=> b!135055 (= lt!70503 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!135055 (= lt!70502 (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!135055 (= lt!70501 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!135055 (= lt!70498 call!14851)))

(assert (=> b!135055 (= e!87934 (+!163 call!14851 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135056 () Bool)

(declare-fun e!87935 () ListLongMap!1671)

(assert (=> b!135056 (= e!87935 e!87934)))

(declare-fun c!25240 () Bool)

(assert (=> b!135056 (= c!25240 (validKeyInArray!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135057 () Bool)

(assert (=> b!135057 (= e!87935 (ListLongMap!1672 Nil!1707))))

(declare-fun d!41827 () Bool)

(assert (=> d!41827 e!87937))

(declare-fun res!64810 () Bool)

(assert (=> d!41827 (=> (not res!64810) (not e!87937))))

(assert (=> d!41827 (= res!64810 (not (contains!886 lt!70500 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41827 (= lt!70500 e!87935)))

(declare-fun c!25241 () Bool)

(assert (=> d!41827 (= c!25241 (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(assert (=> d!41827 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!41827 (= (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69098 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!70500)))

(declare-fun b!135058 () Bool)

(assert (=> b!135058 (= e!87933 (= lt!70500 (getCurrentListMapNoExtraKeys!128 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) lt!69098 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun b!135059 () Bool)

(declare-fun res!64812 () Bool)

(assert (=> b!135059 (=> (not res!64812) (not e!87937))))

(assert (=> b!135059 (= res!64812 (not (contains!886 lt!70500 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135060 () Bool)

(assert (=> b!135060 (= e!87936 e!87931)))

(assert (=> b!135060 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64809 () Bool)

(assert (=> b!135060 (= res!64809 (contains!886 lt!70500 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135060 (=> (not res!64809) (not e!87931))))

(assert (= (and d!41827 c!25241) b!135057))

(assert (= (and d!41827 (not c!25241)) b!135056))

(assert (= (and b!135056 c!25240) b!135055))

(assert (= (and b!135056 (not c!25240)) b!135050))

(assert (= (or b!135055 b!135050) bm!14848))

(assert (= (and d!41827 res!64810) b!135059))

(assert (= (and b!135059 res!64812) b!135053))

(assert (= (and b!135053 res!64811) b!135054))

(assert (= (and b!135053 c!25239) b!135060))

(assert (= (and b!135053 (not c!25239)) b!135051))

(assert (= (and b!135060 res!64809) b!135049))

(assert (= (and b!135051 c!25242) b!135058))

(assert (= (and b!135051 (not c!25242)) b!135052))

(declare-fun b_lambda!6019 () Bool)

(assert (=> (not b_lambda!6019) (not b!135049)))

(assert (=> b!135049 t!6164))

(declare-fun b_and!8369 () Bool)

(assert (= b_and!8365 (and (=> t!6164 result!3993) b_and!8369)))

(assert (=> b!135049 t!6166))

(declare-fun b_and!8371 () Bool)

(assert (= b_and!8367 (and (=> t!6166 result!3995) b_and!8371)))

(declare-fun b_lambda!6021 () Bool)

(assert (=> (not b_lambda!6021) (not b!135055)))

(assert (=> b!135055 t!6164))

(declare-fun b_and!8373 () Bool)

(assert (= b_and!8369 (and (=> t!6164 result!3993) b_and!8373)))

(assert (=> b!135055 t!6166))

(declare-fun b_and!8375 () Bool)

(assert (= b_and!8371 (and (=> t!6166 result!3995) b_and!8375)))

(assert (=> b!135054 m!156125))

(assert (=> b!135054 m!156125))

(assert (=> b!135054 m!156141))

(declare-fun m!160343 () Bool)

(assert (=> b!135059 m!160343))

(assert (=> b!135055 m!156473))

(declare-fun m!160345 () Bool)

(assert (=> b!135055 m!160345))

(assert (=> b!135055 m!156125))

(assert (=> b!135055 m!156473))

(assert (=> b!135055 m!156135))

(assert (=> b!135055 m!156475))

(declare-fun m!160347 () Bool)

(assert (=> b!135055 m!160347))

(declare-fun m!160349 () Bool)

(assert (=> b!135055 m!160349))

(assert (=> b!135055 m!156135))

(declare-fun m!160351 () Bool)

(assert (=> b!135055 m!160351))

(assert (=> b!135055 m!160347))

(assert (=> b!135058 m!155839))

(declare-fun m!160353 () Bool)

(assert (=> b!135058 m!160353))

(assert (=> b!135060 m!156125))

(assert (=> b!135060 m!156125))

(declare-fun m!160355 () Bool)

(assert (=> b!135060 m!160355))

(declare-fun m!160357 () Bool)

(assert (=> b!135052 m!160357))

(assert (=> bm!14848 m!155839))

(assert (=> bm!14848 m!160353))

(declare-fun m!160359 () Bool)

(assert (=> d!41827 m!160359))

(assert (=> d!41827 m!156183))

(assert (=> b!135056 m!156125))

(assert (=> b!135056 m!156125))

(assert (=> b!135056 m!156141))

(assert (=> b!135049 m!156473))

(assert (=> b!135049 m!156125))

(assert (=> b!135049 m!156473))

(assert (=> b!135049 m!156135))

(assert (=> b!135049 m!156475))

(assert (=> b!135049 m!156135))

(assert (=> b!135049 m!156125))

(declare-fun m!160361 () Bool)

(assert (=> b!135049 m!160361))

(assert (=> b!133761 d!41827))

(declare-fun d!41829 () Bool)

(assert (=> d!41829 (= (apply!116 (+!163 lt!69909 (tuple2!2585 lt!69926 (minValue!2719 newMap!16))) lt!69914) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69909 (tuple2!2585 lt!69926 (minValue!2719 newMap!16)))) lt!69914)))))

(declare-fun bs!5632 () Bool)

(assert (= bs!5632 d!41829))

(declare-fun m!160363 () Bool)

(assert (=> bs!5632 m!160363))

(assert (=> bs!5632 m!160363))

(declare-fun m!160365 () Bool)

(assert (=> bs!5632 m!160365))

(assert (=> b!133761 d!41829))

(declare-fun d!41831 () Bool)

(assert (=> d!41831 (= (apply!116 (+!163 lt!69909 (tuple2!2585 lt!69926 (minValue!2719 newMap!16))) lt!69914) (apply!116 lt!69909 lt!69914))))

(declare-fun lt!70505 () Unit!4132)

(assert (=> d!41831 (= lt!70505 (choose!828 lt!69909 lt!69926 (minValue!2719 newMap!16) lt!69914))))

(declare-fun e!87938 () Bool)

(assert (=> d!41831 e!87938))

(declare-fun res!64813 () Bool)

(assert (=> d!41831 (=> (not res!64813) (not e!87938))))

(assert (=> d!41831 (= res!64813 (contains!886 lt!69909 lt!69914))))

(assert (=> d!41831 (= (addApplyDifferent!92 lt!69909 lt!69926 (minValue!2719 newMap!16) lt!69914) lt!70505)))

(declare-fun b!135061 () Bool)

(assert (=> b!135061 (= e!87938 (not (= lt!69914 lt!69926)))))

(assert (= (and d!41831 res!64813) b!135061))

(assert (=> d!41831 m!158037))

(assert (=> d!41831 m!158039))

(declare-fun m!160367 () Bool)

(assert (=> d!41831 m!160367))

(assert (=> d!41831 m!158047))

(declare-fun m!160369 () Bool)

(assert (=> d!41831 m!160369))

(assert (=> d!41831 m!158037))

(assert (=> b!133761 d!41831))

(declare-fun d!41833 () Bool)

(declare-fun e!87939 () Bool)

(assert (=> d!41833 e!87939))

(declare-fun res!64815 () Bool)

(assert (=> d!41833 (=> (not res!64815) (not e!87939))))

(declare-fun lt!70508 () ListLongMap!1671)

(assert (=> d!41833 (= res!64815 (contains!886 lt!70508 (_1!1303 (tuple2!2585 lt!69926 (minValue!2719 newMap!16)))))))

(declare-fun lt!70506 () List!1710)

(assert (=> d!41833 (= lt!70508 (ListLongMap!1672 lt!70506))))

(declare-fun lt!70509 () Unit!4132)

(declare-fun lt!70507 () Unit!4132)

(assert (=> d!41833 (= lt!70509 lt!70507)))

(assert (=> d!41833 (= (getValueByKey!170 lt!70506 (_1!1303 (tuple2!2585 lt!69926 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69926 (minValue!2719 newMap!16)))))))

(assert (=> d!41833 (= lt!70507 (lemmaContainsTupThenGetReturnValue!88 lt!70506 (_1!1303 (tuple2!2585 lt!69926 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69926 (minValue!2719 newMap!16)))))))

(assert (=> d!41833 (= lt!70506 (insertStrictlySorted!91 (toList!851 lt!69909) (_1!1303 (tuple2!2585 lt!69926 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69926 (minValue!2719 newMap!16)))))))

(assert (=> d!41833 (= (+!163 lt!69909 (tuple2!2585 lt!69926 (minValue!2719 newMap!16))) lt!70508)))

(declare-fun b!135062 () Bool)

(declare-fun res!64814 () Bool)

(assert (=> b!135062 (=> (not res!64814) (not e!87939))))

(assert (=> b!135062 (= res!64814 (= (getValueByKey!170 (toList!851 lt!70508) (_1!1303 (tuple2!2585 lt!69926 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69926 (minValue!2719 newMap!16))))))))

(declare-fun b!135063 () Bool)

(assert (=> b!135063 (= e!87939 (contains!889 (toList!851 lt!70508) (tuple2!2585 lt!69926 (minValue!2719 newMap!16))))))

(assert (= (and d!41833 res!64815) b!135062))

(assert (= (and b!135062 res!64814) b!135063))

(declare-fun m!160371 () Bool)

(assert (=> d!41833 m!160371))

(declare-fun m!160373 () Bool)

(assert (=> d!41833 m!160373))

(declare-fun m!160375 () Bool)

(assert (=> d!41833 m!160375))

(declare-fun m!160377 () Bool)

(assert (=> d!41833 m!160377))

(declare-fun m!160379 () Bool)

(assert (=> b!135062 m!160379))

(declare-fun m!160381 () Bool)

(assert (=> b!135063 m!160381))

(assert (=> b!133761 d!41833))

(declare-fun d!41835 () Bool)

(declare-fun e!87940 () Bool)

(assert (=> d!41835 e!87940))

(declare-fun res!64817 () Bool)

(assert (=> d!41835 (=> (not res!64817) (not e!87940))))

(declare-fun lt!70512 () ListLongMap!1671)

(assert (=> d!41835 (= res!64817 (contains!886 lt!70512 (_1!1303 (tuple2!2585 lt!69917 (minValue!2719 newMap!16)))))))

(declare-fun lt!70510 () List!1710)

(assert (=> d!41835 (= lt!70512 (ListLongMap!1672 lt!70510))))

(declare-fun lt!70513 () Unit!4132)

(declare-fun lt!70511 () Unit!4132)

(assert (=> d!41835 (= lt!70513 lt!70511)))

(assert (=> d!41835 (= (getValueByKey!170 lt!70510 (_1!1303 (tuple2!2585 lt!69917 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69917 (minValue!2719 newMap!16)))))))

(assert (=> d!41835 (= lt!70511 (lemmaContainsTupThenGetReturnValue!88 lt!70510 (_1!1303 (tuple2!2585 lt!69917 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69917 (minValue!2719 newMap!16)))))))

(assert (=> d!41835 (= lt!70510 (insertStrictlySorted!91 (toList!851 lt!69916) (_1!1303 (tuple2!2585 lt!69917 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69917 (minValue!2719 newMap!16)))))))

(assert (=> d!41835 (= (+!163 lt!69916 (tuple2!2585 lt!69917 (minValue!2719 newMap!16))) lt!70512)))

(declare-fun b!135064 () Bool)

(declare-fun res!64816 () Bool)

(assert (=> b!135064 (=> (not res!64816) (not e!87940))))

(assert (=> b!135064 (= res!64816 (= (getValueByKey!170 (toList!851 lt!70512) (_1!1303 (tuple2!2585 lt!69917 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69917 (minValue!2719 newMap!16))))))))

(declare-fun b!135065 () Bool)

(assert (=> b!135065 (= e!87940 (contains!889 (toList!851 lt!70512) (tuple2!2585 lt!69917 (minValue!2719 newMap!16))))))

(assert (= (and d!41835 res!64817) b!135064))

(assert (= (and b!135064 res!64816) b!135065))

(declare-fun m!160383 () Bool)

(assert (=> d!41835 m!160383))

(declare-fun m!160385 () Bool)

(assert (=> d!41835 m!160385))

(declare-fun m!160387 () Bool)

(assert (=> d!41835 m!160387))

(declare-fun m!160389 () Bool)

(assert (=> d!41835 m!160389))

(declare-fun m!160391 () Bool)

(assert (=> b!135064 m!160391))

(declare-fun m!160393 () Bool)

(assert (=> b!135065 m!160393))

(assert (=> b!133761 d!41835))

(declare-fun d!41837 () Bool)

(declare-fun c!25243 () Bool)

(assert (=> d!41837 (= c!25243 ((_ is Nil!1707) (toList!851 lt!69320)))))

(declare-fun e!87941 () (InoxSet tuple2!2584))

(assert (=> d!41837 (= (content!133 (toList!851 lt!69320)) e!87941)))

(declare-fun b!135066 () Bool)

(assert (=> b!135066 (= e!87941 ((as const (Array tuple2!2584 Bool)) false))))

(declare-fun b!135067 () Bool)

(assert (=> b!135067 (= e!87941 ((_ map or) (store ((as const (Array tuple2!2584 Bool)) false) (h!2311 (toList!851 lt!69320)) true) (content!133 (t!6152 (toList!851 lt!69320)))))))

(assert (= (and d!41837 c!25243) b!135066))

(assert (= (and d!41837 (not c!25243)) b!135067))

(declare-fun m!160395 () Bool)

(assert (=> b!135067 m!160395))

(declare-fun m!160397 () Bool)

(assert (=> b!135067 m!160397))

(assert (=> d!40903 d!41837))

(declare-fun d!41839 () Bool)

(assert (=> d!41839 (= (apply!116 lt!69842 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (getValueByKey!170 (toList!851 lt!69842) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5633 () Bool)

(assert (= bs!5633 d!41839))

(assert (=> bs!5633 m!156125))

(declare-fun m!160399 () Bool)

(assert (=> bs!5633 m!160399))

(assert (=> bs!5633 m!160399))

(declare-fun m!160401 () Bool)

(assert (=> bs!5633 m!160401))

(assert (=> b!133622 d!41839))

(assert (=> b!133622 d!40459))

(declare-fun d!41841 () Bool)

(assert (=> d!41841 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69480))))

(declare-fun lt!70514 () Unit!4132)

(assert (=> d!41841 (= lt!70514 (choose!826 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69480))))

(declare-fun e!87942 () Bool)

(assert (=> d!41841 e!87942))

(declare-fun res!64818 () Bool)

(assert (=> d!41841 (=> (not res!64818) (not e!87942))))

(assert (=> d!41841 (= res!64818 (isStrictlySorted!317 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (=> d!41841 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69480) lt!70514)))

(declare-fun b!135068 () Bool)

(assert (=> b!135068 (= e!87942 (containsKey!174 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69480))))

(assert (= (and d!41841 res!64818) b!135068))

(assert (=> d!41841 m!157331))

(assert (=> d!41841 m!157331))

(assert (=> d!41841 m!157333))

(declare-fun m!160403 () Bool)

(assert (=> d!41841 m!160403))

(declare-fun m!160405 () Bool)

(assert (=> d!41841 m!160405))

(assert (=> b!135068 m!157327))

(assert (=> b!133483 d!41841))

(assert (=> b!133483 d!41191))

(assert (=> b!133483 d!41193))

(declare-fun d!41843 () Bool)

(assert (=> d!41843 (= (inRange!0 (ite c!24846 (index!3272 lt!69931) (index!3275 lt!69931)) (mask!7163 newMap!16)) (and (bvsge (ite c!24846 (index!3272 lt!69931) (index!3275 lt!69931)) #b00000000000000000000000000000000) (bvslt (ite c!24846 (index!3272 lt!69931) (index!3275 lt!69931)) (bvadd (mask!7163 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14755 d!41843))

(declare-fun d!41845 () Bool)

(declare-fun res!64819 () Bool)

(declare-fun e!87943 () Bool)

(assert (=> d!41845 (=> res!64819 e!87943)))

(assert (=> d!41845 (= res!64819 (and ((_ is Cons!1706) lt!69990) (= (_1!1303 (h!2311 lt!69990)) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!41845 (= (containsKey!174 lt!69990 (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87943)))

(declare-fun b!135069 () Bool)

(declare-fun e!87944 () Bool)

(assert (=> b!135069 (= e!87943 e!87944)))

(declare-fun res!64820 () Bool)

(assert (=> b!135069 (=> (not res!64820) (not e!87944))))

(assert (=> b!135069 (= res!64820 (and (or (not ((_ is Cons!1706) lt!69990)) (bvsle (_1!1303 (h!2311 lt!69990)) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Cons!1706) lt!69990) (bvslt (_1!1303 (h!2311 lt!69990)) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135070 () Bool)

(assert (=> b!135070 (= e!87944 (containsKey!174 (t!6152 lt!69990) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!41845 (not res!64819)) b!135069))

(assert (= (and b!135069 res!64820) b!135070))

(declare-fun m!160407 () Bool)

(assert (=> b!135070 m!160407))

(assert (=> b!133885 d!41845))

(declare-fun d!41847 () Bool)

(assert (=> d!41847 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (mask!7163 newMap!16))))

(assert (=> d!41847 true))

(declare-fun _$56!12 () Unit!4132)

(assert (=> d!41847 (= (choose!102 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (mask!7163 newMap!16)) _$56!12)))

(declare-fun bs!5634 () Bool)

(assert (= bs!5634 d!41847))

(assert (=> bs!5634 m!156563))

(assert (=> bs!5634 m!156581))

(assert (=> d!40567 d!41847))

(assert (=> d!40567 d!40425))

(declare-fun d!41849 () Bool)

(assert (=> d!41849 (= (isDefined!124 (getValueByKey!170 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) (not (isEmpty!413 (getValueByKey!170 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(declare-fun bs!5635 () Bool)

(assert (= bs!5635 d!41849))

(assert (=> bs!5635 m!156741))

(declare-fun m!160409 () Bool)

(assert (=> bs!5635 m!160409))

(assert (=> b!133134 d!41849))

(declare-fun c!25244 () Bool)

(declare-fun d!41851 () Bool)

(assert (=> d!41851 (= c!25244 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun e!87945 () Option!176)

(assert (=> d!41851 (= (getValueByKey!170 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!87945)))

(declare-fun b!135073 () Bool)

(declare-fun e!87946 () Option!176)

(assert (=> b!135073 (= e!87946 (getValueByKey!170 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!135072 () Bool)

(assert (=> b!135072 (= e!87945 e!87946)))

(declare-fun c!25245 () Bool)

(assert (=> b!135072 (= c!25245 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (not (= (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(declare-fun b!135071 () Bool)

(assert (=> b!135071 (= e!87945 (Some!175 (_2!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))))))

(declare-fun b!135074 () Bool)

(assert (=> b!135074 (= e!87946 None!174)))

(assert (= (and d!41851 c!25244) b!135071))

(assert (= (and d!41851 (not c!25244)) b!135072))

(assert (= (and b!135072 c!25245) b!135073))

(assert (= (and b!135072 (not c!25245)) b!135074))

(assert (=> b!135073 m!155841))

(declare-fun m!160411 () Bool)

(assert (=> b!135073 m!160411))

(assert (=> b!133134 d!41851))

(assert (=> d!40485 d!40487))

(assert (=> d!40485 d!40489))

(declare-fun d!41853 () Bool)

(assert (=> d!41853 (not (contains!886 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303)) lt!69304))))

(assert (=> d!41853 true))

(declare-fun _$36!333 () Unit!4132)

(assert (=> d!41853 (= (choose!835 lt!69299 lt!69302 lt!69303 lt!69304) _$36!333)))

(declare-fun bs!5636 () Bool)

(assert (= bs!5636 d!41853))

(assert (=> bs!5636 m!156321))

(assert (=> bs!5636 m!156321))

(assert (=> bs!5636 m!156323))

(assert (=> d!40485 d!41853))

(declare-fun d!41855 () Bool)

(declare-fun e!87947 () Bool)

(assert (=> d!41855 e!87947))

(declare-fun res!64821 () Bool)

(assert (=> d!41855 (=> res!64821 e!87947)))

(declare-fun lt!70516 () Bool)

(assert (=> d!41855 (= res!64821 (not lt!70516))))

(declare-fun lt!70518 () Bool)

(assert (=> d!41855 (= lt!70516 lt!70518)))

(declare-fun lt!70515 () Unit!4132)

(declare-fun e!87948 () Unit!4132)

(assert (=> d!41855 (= lt!70515 e!87948)))

(declare-fun c!25246 () Bool)

(assert (=> d!41855 (= c!25246 lt!70518)))

(assert (=> d!41855 (= lt!70518 (containsKey!174 (toList!851 lt!69299) lt!69304))))

(assert (=> d!41855 (= (contains!886 lt!69299 lt!69304) lt!70516)))

(declare-fun b!135076 () Bool)

(declare-fun lt!70517 () Unit!4132)

(assert (=> b!135076 (= e!87948 lt!70517)))

(assert (=> b!135076 (= lt!70517 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69299) lt!69304))))

(assert (=> b!135076 (isDefined!124 (getValueByKey!170 (toList!851 lt!69299) lt!69304))))

(declare-fun b!135077 () Bool)

(declare-fun Unit!4236 () Unit!4132)

(assert (=> b!135077 (= e!87948 Unit!4236)))

(declare-fun b!135078 () Bool)

(assert (=> b!135078 (= e!87947 (isDefined!124 (getValueByKey!170 (toList!851 lt!69299) lt!69304)))))

(assert (= (and d!41855 c!25246) b!135076))

(assert (= (and d!41855 (not c!25246)) b!135077))

(assert (= (and d!41855 (not res!64821)) b!135078))

(declare-fun m!160413 () Bool)

(assert (=> d!41855 m!160413))

(declare-fun m!160415 () Bool)

(assert (=> b!135076 m!160415))

(declare-fun m!160417 () Bool)

(assert (=> b!135076 m!160417))

(assert (=> b!135076 m!160417))

(declare-fun m!160419 () Bool)

(assert (=> b!135076 m!160419))

(assert (=> b!135078 m!160417))

(assert (=> b!135078 m!160417))

(assert (=> b!135078 m!160419))

(assert (=> d!40485 d!41855))

(declare-fun lt!70519 () Bool)

(declare-fun d!41857 () Bool)

(assert (=> d!41857 (= lt!70519 (select (content!133 (toList!851 lt!69873)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(declare-fun e!87950 () Bool)

(assert (=> d!41857 (= lt!70519 e!87950)))

(declare-fun res!64822 () Bool)

(assert (=> d!41857 (=> (not res!64822) (not e!87950))))

(assert (=> d!41857 (= res!64822 ((_ is Cons!1706) (toList!851 lt!69873)))))

(assert (=> d!41857 (= (contains!889 (toList!851 lt!69873) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!70519)))

(declare-fun b!135079 () Bool)

(declare-fun e!87949 () Bool)

(assert (=> b!135079 (= e!87950 e!87949)))

(declare-fun res!64823 () Bool)

(assert (=> b!135079 (=> res!64823 e!87949)))

(assert (=> b!135079 (= res!64823 (= (h!2311 (toList!851 lt!69873)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(declare-fun b!135080 () Bool)

(assert (=> b!135080 (= e!87949 (contains!889 (t!6152 (toList!851 lt!69873)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(assert (= (and d!41857 res!64822) b!135079))

(assert (= (and b!135079 (not res!64823)) b!135080))

(declare-fun m!160421 () Bool)

(assert (=> d!41857 m!160421))

(declare-fun m!160423 () Bool)

(assert (=> d!41857 m!160423))

(declare-fun m!160425 () Bool)

(assert (=> b!135080 m!160425))

(assert (=> b!133673 d!41857))

(declare-fun d!41859 () Bool)

(declare-fun c!25247 () Bool)

(assert (=> d!41859 (= c!25247 ((_ is Nil!1707) (toList!851 lt!69496)))))

(declare-fun e!87951 () (InoxSet tuple2!2584))

(assert (=> d!41859 (= (content!133 (toList!851 lt!69496)) e!87951)))

(declare-fun b!135081 () Bool)

(assert (=> b!135081 (= e!87951 ((as const (Array tuple2!2584 Bool)) false))))

(declare-fun b!135082 () Bool)

(assert (=> b!135082 (= e!87951 ((_ map or) (store ((as const (Array tuple2!2584 Bool)) false) (h!2311 (toList!851 lt!69496)) true) (content!133 (t!6152 (toList!851 lt!69496)))))))

(assert (= (and d!41859 c!25247) b!135081))

(assert (= (and d!41859 (not c!25247)) b!135082))

(declare-fun m!160427 () Bool)

(assert (=> b!135082 m!160427))

(assert (=> b!135082 m!158965))

(assert (=> d!40659 d!41859))

(declare-fun d!41861 () Bool)

(declare-fun e!87952 () Bool)

(assert (=> d!41861 e!87952))

(declare-fun res!64824 () Bool)

(assert (=> d!41861 (=> res!64824 e!87952)))

(declare-fun lt!70521 () Bool)

(assert (=> d!41861 (= res!64824 (not lt!70521))))

(declare-fun lt!70523 () Bool)

(assert (=> d!41861 (= lt!70521 lt!70523)))

(declare-fun lt!70520 () Unit!4132)

(declare-fun e!87953 () Unit!4132)

(assert (=> d!41861 (= lt!70520 e!87953)))

(declare-fun c!25248 () Bool)

(assert (=> d!41861 (= c!25248 lt!70523)))

(assert (=> d!41861 (= lt!70523 (containsKey!174 (toList!851 lt!69974) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41861 (= (contains!886 lt!69974 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70521)))

(declare-fun b!135083 () Bool)

(declare-fun lt!70522 () Unit!4132)

(assert (=> b!135083 (= e!87953 lt!70522)))

(assert (=> b!135083 (= lt!70522 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69974) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135083 (isDefined!124 (getValueByKey!170 (toList!851 lt!69974) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135084 () Bool)

(declare-fun Unit!4237 () Unit!4132)

(assert (=> b!135084 (= e!87953 Unit!4237)))

(declare-fun b!135085 () Bool)

(assert (=> b!135085 (= e!87952 (isDefined!124 (getValueByKey!170 (toList!851 lt!69974) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41861 c!25248) b!135083))

(assert (= (and d!41861 (not c!25248)) b!135084))

(assert (= (and d!41861 (not res!64824)) b!135085))

(declare-fun m!160429 () Bool)

(assert (=> d!41861 m!160429))

(declare-fun m!160431 () Bool)

(assert (=> b!135083 m!160431))

(declare-fun m!160433 () Bool)

(assert (=> b!135083 m!160433))

(assert (=> b!135083 m!160433))

(declare-fun m!160435 () Bool)

(assert (=> b!135083 m!160435))

(assert (=> b!135085 m!160433))

(assert (=> b!135085 m!160433))

(assert (=> b!135085 m!160435))

(assert (=> bm!14760 d!41861))

(declare-fun d!41863 () Bool)

(declare-fun res!64825 () Bool)

(declare-fun e!87954 () Bool)

(assert (=> d!41863 (=> res!64825 e!87954)))

(assert (=> d!41863 (= res!64825 (and ((_ is Cons!1706) lt!69896) (= (_1!1303 (h!2311 lt!69896)) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!41863 (= (containsKey!174 lt!69896 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!87954)))

(declare-fun b!135086 () Bool)

(declare-fun e!87955 () Bool)

(assert (=> b!135086 (= e!87954 e!87955)))

(declare-fun res!64826 () Bool)

(assert (=> b!135086 (=> (not res!64826) (not e!87955))))

(assert (=> b!135086 (= res!64826 (and (or (not ((_ is Cons!1706) lt!69896)) (bvsle (_1!1303 (h!2311 lt!69896)) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1706) lt!69896) (bvslt (_1!1303 (h!2311 lt!69896)) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135087 () Bool)

(assert (=> b!135087 (= e!87955 (containsKey!174 (t!6152 lt!69896) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41863 (not res!64825)) b!135086))

(assert (= (and b!135086 res!64826) b!135087))

(declare-fun m!160437 () Bool)

(assert (=> b!135087 m!160437))

(assert (=> b!133724 d!41863))

(declare-fun d!41865 () Bool)

(declare-fun lt!70524 () Bool)

(assert (=> d!41865 (= lt!70524 (select (content!133 (toList!851 lt!69797)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun e!87957 () Bool)

(assert (=> d!41865 (= lt!70524 e!87957)))

(declare-fun res!64827 () Bool)

(assert (=> d!41865 (=> (not res!64827) (not e!87957))))

(assert (=> d!41865 (= res!64827 ((_ is Cons!1706) (toList!851 lt!69797)))))

(assert (=> d!41865 (= (contains!889 (toList!851 lt!69797) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70524)))

(declare-fun b!135088 () Bool)

(declare-fun e!87956 () Bool)

(assert (=> b!135088 (= e!87957 e!87956)))

(declare-fun res!64828 () Bool)

(assert (=> b!135088 (=> res!64828 e!87956)))

(assert (=> b!135088 (= res!64828 (= (h!2311 (toList!851 lt!69797)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun b!135089 () Bool)

(assert (=> b!135089 (= e!87956 (contains!889 (t!6152 (toList!851 lt!69797)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!41865 res!64827) b!135088))

(assert (= (and b!135088 (not res!64828)) b!135089))

(declare-fun m!160439 () Bool)

(assert (=> d!41865 m!160439))

(declare-fun m!160441 () Bool)

(assert (=> d!41865 m!160441))

(declare-fun m!160443 () Bool)

(assert (=> b!135089 m!160443))

(assert (=> b!133589 d!41865))

(declare-fun d!41867 () Bool)

(assert (=> d!41867 (= (get!1482 (getValueByKey!170 (toList!851 lt!69348) lt!69353)) (v!3198 (getValueByKey!170 (toList!851 lt!69348) lt!69353)))))

(assert (=> d!40933 d!41867))

(declare-fun d!41869 () Bool)

(declare-fun c!25249 () Bool)

(assert (=> d!41869 (= c!25249 (and ((_ is Cons!1706) (toList!851 lt!69348)) (= (_1!1303 (h!2311 (toList!851 lt!69348))) lt!69353)))))

(declare-fun e!87958 () Option!176)

(assert (=> d!41869 (= (getValueByKey!170 (toList!851 lt!69348) lt!69353) e!87958)))

(declare-fun b!135092 () Bool)

(declare-fun e!87959 () Option!176)

(assert (=> b!135092 (= e!87959 (getValueByKey!170 (t!6152 (toList!851 lt!69348)) lt!69353))))

(declare-fun b!135091 () Bool)

(assert (=> b!135091 (= e!87958 e!87959)))

(declare-fun c!25250 () Bool)

(assert (=> b!135091 (= c!25250 (and ((_ is Cons!1706) (toList!851 lt!69348)) (not (= (_1!1303 (h!2311 (toList!851 lt!69348))) lt!69353))))))

(declare-fun b!135090 () Bool)

(assert (=> b!135090 (= e!87958 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69348)))))))

(declare-fun b!135093 () Bool)

(assert (=> b!135093 (= e!87959 None!174)))

(assert (= (and d!41869 c!25249) b!135090))

(assert (= (and d!41869 (not c!25249)) b!135091))

(assert (= (and b!135091 c!25250) b!135092))

(assert (= (and b!135091 (not c!25250)) b!135093))

(declare-fun m!160445 () Bool)

(assert (=> b!135092 m!160445))

(assert (=> d!40933 d!41869))

(declare-fun d!41871 () Bool)

(declare-fun e!87960 () Bool)

(assert (=> d!41871 e!87960))

(declare-fun res!64829 () Bool)

(assert (=> d!41871 (=> res!64829 e!87960)))

(declare-fun lt!70526 () Bool)

(assert (=> d!41871 (= res!64829 (not lt!70526))))

(declare-fun lt!70528 () Bool)

(assert (=> d!41871 (= lt!70526 lt!70528)))

(declare-fun lt!70525 () Unit!4132)

(declare-fun e!87961 () Unit!4132)

(assert (=> d!41871 (= lt!70525 e!87961)))

(declare-fun c!25251 () Bool)

(assert (=> d!41871 (= c!25251 lt!70528)))

(assert (=> d!41871 (= lt!70528 (containsKey!174 (toList!851 lt!69842) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41871 (= (contains!886 lt!69842 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!70526)))

(declare-fun b!135094 () Bool)

(declare-fun lt!70527 () Unit!4132)

(assert (=> b!135094 (= e!87961 lt!70527)))

(assert (=> b!135094 (= lt!70527 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69842) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135094 (isDefined!124 (getValueByKey!170 (toList!851 lt!69842) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135095 () Bool)

(declare-fun Unit!4238 () Unit!4132)

(assert (=> b!135095 (= e!87961 Unit!4238)))

(declare-fun b!135096 () Bool)

(assert (=> b!135096 (= e!87960 (isDefined!124 (getValueByKey!170 (toList!851 lt!69842) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41871 c!25251) b!135094))

(assert (= (and d!41871 (not c!25251)) b!135095))

(assert (= (and d!41871 (not res!64829)) b!135096))

(assert (=> d!41871 m!156125))

(declare-fun m!160447 () Bool)

(assert (=> d!41871 m!160447))

(assert (=> b!135094 m!156125))

(declare-fun m!160449 () Bool)

(assert (=> b!135094 m!160449))

(assert (=> b!135094 m!156125))

(assert (=> b!135094 m!160399))

(assert (=> b!135094 m!160399))

(declare-fun m!160451 () Bool)

(assert (=> b!135094 m!160451))

(assert (=> b!135096 m!156125))

(assert (=> b!135096 m!160399))

(assert (=> b!135096 m!160399))

(assert (=> b!135096 m!160451))

(assert (=> b!133633 d!41871))

(declare-fun d!41873 () Bool)

(declare-fun lt!70529 () Bool)

(assert (=> d!41873 (= lt!70529 (select (content!133 lt!69693) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!87963 () Bool)

(assert (=> d!41873 (= lt!70529 e!87963)))

(declare-fun res!64830 () Bool)

(assert (=> d!41873 (=> (not res!64830) (not e!87963))))

(assert (=> d!41873 (= res!64830 ((_ is Cons!1706) lt!69693))))

(assert (=> d!41873 (= (contains!889 lt!69693 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!70529)))

(declare-fun b!135097 () Bool)

(declare-fun e!87962 () Bool)

(assert (=> b!135097 (= e!87963 e!87962)))

(declare-fun res!64831 () Bool)

(assert (=> b!135097 (=> res!64831 e!87962)))

(assert (=> b!135097 (= res!64831 (= (h!2311 lt!69693) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135098 () Bool)

(assert (=> b!135098 (= e!87962 (contains!889 (t!6152 lt!69693) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!41873 res!64830) b!135097))

(assert (= (and b!135097 (not res!64831)) b!135098))

(declare-fun m!160453 () Bool)

(assert (=> d!41873 m!160453))

(declare-fun m!160455 () Bool)

(assert (=> d!41873 m!160455))

(declare-fun m!160457 () Bool)

(assert (=> b!135098 m!160457))

(assert (=> b!133459 d!41873))

(declare-fun d!41875 () Bool)

(declare-fun e!87964 () Bool)

(assert (=> d!41875 e!87964))

(declare-fun res!64832 () Bool)

(assert (=> d!41875 (=> res!64832 e!87964)))

(declare-fun lt!70531 () Bool)

(assert (=> d!41875 (= res!64832 (not lt!70531))))

(declare-fun lt!70533 () Bool)

(assert (=> d!41875 (= lt!70531 lt!70533)))

(declare-fun lt!70530 () Unit!4132)

(declare-fun e!87965 () Unit!4132)

(assert (=> d!41875 (= lt!70530 e!87965)))

(declare-fun c!25252 () Bool)

(assert (=> d!41875 (= c!25252 lt!70533)))

(assert (=> d!41875 (= lt!70533 (containsKey!174 (toList!851 lt!69721) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!41875 (= (contains!886 lt!69721 (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70531)))

(declare-fun b!135099 () Bool)

(declare-fun lt!70532 () Unit!4132)

(assert (=> b!135099 (= e!87965 lt!70532)))

(assert (=> b!135099 (= lt!70532 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69721) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> b!135099 (isDefined!124 (getValueByKey!170 (toList!851 lt!69721) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!135100 () Bool)

(declare-fun Unit!4239 () Unit!4132)

(assert (=> b!135100 (= e!87965 Unit!4239)))

(declare-fun b!135101 () Bool)

(assert (=> b!135101 (= e!87964 (isDefined!124 (getValueByKey!170 (toList!851 lt!69721) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (= (and d!41875 c!25252) b!135099))

(assert (= (and d!41875 (not c!25252)) b!135100))

(assert (= (and d!41875 (not res!64832)) b!135101))

(declare-fun m!160459 () Bool)

(assert (=> d!41875 m!160459))

(declare-fun m!160461 () Bool)

(assert (=> b!135099 m!160461))

(assert (=> b!135099 m!157343))

(assert (=> b!135099 m!157343))

(declare-fun m!160463 () Bool)

(assert (=> b!135099 m!160463))

(assert (=> b!135101 m!157343))

(assert (=> b!135101 m!157343))

(assert (=> b!135101 m!160463))

(assert (=> d!40607 d!41875))

(declare-fun c!25253 () Bool)

(declare-fun d!41877 () Bool)

(assert (=> d!41877 (= c!25253 (and ((_ is Cons!1706) lt!69719) (= (_1!1303 (h!2311 lt!69719)) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun e!87966 () Option!176)

(assert (=> d!41877 (= (getValueByKey!170 lt!69719 (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) e!87966)))

(declare-fun e!87967 () Option!176)

(declare-fun b!135104 () Bool)

(assert (=> b!135104 (= e!87967 (getValueByKey!170 (t!6152 lt!69719) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!135103 () Bool)

(assert (=> b!135103 (= e!87966 e!87967)))

(declare-fun c!25254 () Bool)

(assert (=> b!135103 (= c!25254 (and ((_ is Cons!1706) lt!69719) (not (= (_1!1303 (h!2311 lt!69719)) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!135102 () Bool)

(assert (=> b!135102 (= e!87966 (Some!175 (_2!1303 (h!2311 lt!69719))))))

(declare-fun b!135105 () Bool)

(assert (=> b!135105 (= e!87967 None!174)))

(assert (= (and d!41877 c!25253) b!135102))

(assert (= (and d!41877 (not c!25253)) b!135103))

(assert (= (and b!135103 c!25254) b!135104))

(assert (= (and b!135103 (not c!25254)) b!135105))

(declare-fun m!160465 () Bool)

(assert (=> b!135104 m!160465))

(assert (=> d!40607 d!41877))

(declare-fun d!41879 () Bool)

(assert (=> d!41879 (= (getValueByKey!170 lt!69719 (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun lt!70534 () Unit!4132)

(assert (=> d!41879 (= lt!70534 (choose!834 lt!69719 (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun e!87968 () Bool)

(assert (=> d!41879 e!87968))

(declare-fun res!64833 () Bool)

(assert (=> d!41879 (=> (not res!64833) (not e!87968))))

(assert (=> d!41879 (= res!64833 (isStrictlySorted!317 lt!69719))))

(assert (=> d!41879 (= (lemmaContainsTupThenGetReturnValue!88 lt!69719 (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70534)))

(declare-fun b!135106 () Bool)

(declare-fun res!64834 () Bool)

(assert (=> b!135106 (=> (not res!64834) (not e!87968))))

(assert (=> b!135106 (= res!64834 (containsKey!174 lt!69719 (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!135107 () Bool)

(assert (=> b!135107 (= e!87968 (contains!889 lt!69719 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (= (and d!41879 res!64833) b!135106))

(assert (= (and b!135106 res!64834) b!135107))

(assert (=> d!41879 m!157337))

(declare-fun m!160467 () Bool)

(assert (=> d!41879 m!160467))

(declare-fun m!160469 () Bool)

(assert (=> d!41879 m!160469))

(declare-fun m!160471 () Bool)

(assert (=> b!135106 m!160471))

(declare-fun m!160473 () Bool)

(assert (=> b!135107 m!160473))

(assert (=> d!40607 d!41879))

(declare-fun b!135108 () Bool)

(declare-fun e!87973 () List!1710)

(assert (=> b!135108 (= e!87973 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69470)) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!135109 () Bool)

(declare-fun e!87972 () List!1710)

(declare-fun call!14854 () List!1710)

(assert (=> b!135109 (= e!87972 call!14854)))

(declare-fun b!135110 () Bool)

(declare-fun res!64836 () Bool)

(declare-fun e!87970 () Bool)

(assert (=> b!135110 (=> (not res!64836) (not e!87970))))

(declare-fun lt!70535 () List!1710)

(assert (=> b!135110 (= res!64836 (containsKey!174 lt!70535 (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun c!25256 () Bool)

(declare-fun bm!14849 () Bool)

(assert (=> bm!14849 (= call!14854 ($colon$colon!91 e!87973 (ite c!25256 (h!2311 (toList!851 lt!69470)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun c!25257 () Bool)

(assert (=> bm!14849 (= c!25257 c!25256)))

(declare-fun b!135111 () Bool)

(declare-fun c!25255 () Bool)

(declare-fun c!25258 () Bool)

(assert (=> b!135111 (= e!87973 (ite c!25255 (t!6152 (toList!851 lt!69470)) (ite c!25258 (Cons!1706 (h!2311 (toList!851 lt!69470)) (t!6152 (toList!851 lt!69470))) Nil!1707)))))

(declare-fun d!41881 () Bool)

(assert (=> d!41881 e!87970))

(declare-fun res!64835 () Bool)

(assert (=> d!41881 (=> (not res!64835) (not e!87970))))

(assert (=> d!41881 (= res!64835 (isStrictlySorted!317 lt!70535))))

(assert (=> d!41881 (= lt!70535 e!87972)))

(assert (=> d!41881 (= c!25256 (and ((_ is Cons!1706) (toList!851 lt!69470)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69470))) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!41881 (isStrictlySorted!317 (toList!851 lt!69470))))

(assert (=> d!41881 (= (insertStrictlySorted!91 (toList!851 lt!69470) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70535)))

(declare-fun b!135112 () Bool)

(declare-fun e!87969 () List!1710)

(assert (=> b!135112 (= e!87972 e!87969)))

(assert (=> b!135112 (= c!25255 (and ((_ is Cons!1706) (toList!851 lt!69470)) (= (_1!1303 (h!2311 (toList!851 lt!69470))) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!135113 () Bool)

(declare-fun e!87971 () List!1710)

(declare-fun call!14852 () List!1710)

(assert (=> b!135113 (= e!87971 call!14852)))

(declare-fun b!135114 () Bool)

(declare-fun call!14853 () List!1710)

(assert (=> b!135114 (= e!87969 call!14853)))

(declare-fun b!135115 () Bool)

(assert (=> b!135115 (= e!87970 (contains!889 lt!70535 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun bm!14850 () Bool)

(assert (=> bm!14850 (= call!14853 call!14854)))

(declare-fun bm!14851 () Bool)

(assert (=> bm!14851 (= call!14852 call!14853)))

(declare-fun b!135116 () Bool)

(assert (=> b!135116 (= c!25258 (and ((_ is Cons!1706) (toList!851 lt!69470)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69470))) (_1!1303 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> b!135116 (= e!87969 e!87971)))

(declare-fun b!135117 () Bool)

(assert (=> b!135117 (= e!87971 call!14852)))

(assert (= (and d!41881 c!25256) b!135109))

(assert (= (and d!41881 (not c!25256)) b!135112))

(assert (= (and b!135112 c!25255) b!135114))

(assert (= (and b!135112 (not c!25255)) b!135116))

(assert (= (and b!135116 c!25258) b!135117))

(assert (= (and b!135116 (not c!25258)) b!135113))

(assert (= (or b!135117 b!135113) bm!14851))

(assert (= (or b!135114 bm!14851) bm!14850))

(assert (= (or b!135109 bm!14850) bm!14849))

(assert (= (and bm!14849 c!25257) b!135108))

(assert (= (and bm!14849 (not c!25257)) b!135111))

(assert (= (and d!41881 res!64835) b!135110))

(assert (= (and b!135110 res!64836) b!135115))

(declare-fun m!160475 () Bool)

(assert (=> b!135115 m!160475))

(declare-fun m!160477 () Bool)

(assert (=> b!135110 m!160477))

(declare-fun m!160479 () Bool)

(assert (=> b!135108 m!160479))

(declare-fun m!160481 () Bool)

(assert (=> d!41881 m!160481))

(declare-fun m!160483 () Bool)

(assert (=> d!41881 m!160483))

(declare-fun m!160485 () Bool)

(assert (=> bm!14849 m!160485))

(assert (=> d!40607 d!41881))

(declare-fun d!41883 () Bool)

(assert (=> d!41883 (= (get!1482 (getValueByKey!170 (toList!851 lt!69220) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3198 (getValueByKey!170 (toList!851 lt!69220) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40781 d!41883))

(declare-fun d!41885 () Bool)

(declare-fun c!25259 () Bool)

(assert (=> d!41885 (= c!25259 (and ((_ is Cons!1706) (toList!851 lt!69220)) (= (_1!1303 (h!2311 (toList!851 lt!69220))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!87974 () Option!176)

(assert (=> d!41885 (= (getValueByKey!170 (toList!851 lt!69220) #b0000000000000000000000000000000000000000000000000000000000000000) e!87974)))

(declare-fun b!135120 () Bool)

(declare-fun e!87975 () Option!176)

(assert (=> b!135120 (= e!87975 (getValueByKey!170 (t!6152 (toList!851 lt!69220)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135119 () Bool)

(assert (=> b!135119 (= e!87974 e!87975)))

(declare-fun c!25260 () Bool)

(assert (=> b!135119 (= c!25260 (and ((_ is Cons!1706) (toList!851 lt!69220)) (not (= (_1!1303 (h!2311 (toList!851 lt!69220))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!135118 () Bool)

(assert (=> b!135118 (= e!87974 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69220)))))))

(declare-fun b!135121 () Bool)

(assert (=> b!135121 (= e!87975 None!174)))

(assert (= (and d!41885 c!25259) b!135118))

(assert (= (and d!41885 (not c!25259)) b!135119))

(assert (= (and b!135119 c!25260) b!135120))

(assert (= (and b!135119 (not c!25260)) b!135121))

(declare-fun m!160487 () Bool)

(assert (=> b!135120 m!160487))

(assert (=> d!40781 d!41885))

(declare-fun d!41887 () Bool)

(assert (=> d!41887 (= (get!1482 (getValueByKey!170 (toList!851 lt!69470) lt!69475)) (v!3198 (getValueByKey!170 (toList!851 lt!69470) lt!69475)))))

(assert (=> d!40611 d!41887))

(declare-fun d!41889 () Bool)

(declare-fun c!25261 () Bool)

(assert (=> d!41889 (= c!25261 (and ((_ is Cons!1706) (toList!851 lt!69470)) (= (_1!1303 (h!2311 (toList!851 lt!69470))) lt!69475)))))

(declare-fun e!87976 () Option!176)

(assert (=> d!41889 (= (getValueByKey!170 (toList!851 lt!69470) lt!69475) e!87976)))

(declare-fun b!135124 () Bool)

(declare-fun e!87977 () Option!176)

(assert (=> b!135124 (= e!87977 (getValueByKey!170 (t!6152 (toList!851 lt!69470)) lt!69475))))

(declare-fun b!135123 () Bool)

(assert (=> b!135123 (= e!87976 e!87977)))

(declare-fun c!25262 () Bool)

(assert (=> b!135123 (= c!25262 (and ((_ is Cons!1706) (toList!851 lt!69470)) (not (= (_1!1303 (h!2311 (toList!851 lt!69470))) lt!69475))))))

(declare-fun b!135122 () Bool)

(assert (=> b!135122 (= e!87976 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69470)))))))

(declare-fun b!135125 () Bool)

(assert (=> b!135125 (= e!87977 None!174)))

(assert (= (and d!41889 c!25261) b!135122))

(assert (= (and d!41889 (not c!25261)) b!135123))

(assert (= (and b!135123 c!25262) b!135124))

(assert (= (and b!135123 (not c!25262)) b!135125))

(declare-fun m!160489 () Bool)

(assert (=> b!135124 m!160489))

(assert (=> d!40611 d!41889))

(declare-fun d!41891 () Bool)

(declare-fun c!25263 () Bool)

(assert (=> d!41891 (= c!25263 (and ((_ is Cons!1706) (toList!851 lt!69838)) (= (_1!1303 (h!2311 (toList!851 lt!69838))) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))))))

(declare-fun e!87978 () Option!176)

(assert (=> d!41891 (= (getValueByKey!170 (toList!851 lt!69838) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))) e!87978)))

(declare-fun e!87979 () Option!176)

(declare-fun b!135128 () Bool)

(assert (=> b!135128 (= e!87979 (getValueByKey!170 (t!6152 (toList!851 lt!69838)) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))

(declare-fun b!135127 () Bool)

(assert (=> b!135127 (= e!87978 e!87979)))

(declare-fun c!25264 () Bool)

(assert (=> b!135127 (= c!25264 (and ((_ is Cons!1706) (toList!851 lt!69838)) (not (= (_1!1303 (h!2311 (toList!851 lt!69838))) (_1!1303 (tuple2!2585 lt!69214 (minValue!2719 newMap!16)))))))))

(declare-fun b!135126 () Bool)

(assert (=> b!135126 (= e!87978 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69838)))))))

(declare-fun b!135129 () Bool)

(assert (=> b!135129 (= e!87979 None!174)))

(assert (= (and d!41891 c!25263) b!135126))

(assert (= (and d!41891 (not c!25263)) b!135127))

(assert (= (and b!135127 c!25264) b!135128))

(assert (= (and b!135127 (not c!25264)) b!135129))

(declare-fun m!160491 () Bool)

(assert (=> b!135128 m!160491))

(assert (=> b!133620 d!41891))

(assert (=> b!133518 d!41665))

(declare-fun d!41893 () Bool)

(declare-fun e!87980 () Bool)

(assert (=> d!41893 e!87980))

(declare-fun res!64837 () Bool)

(assert (=> d!41893 (=> res!64837 e!87980)))

(declare-fun lt!70537 () Bool)

(assert (=> d!41893 (= res!64837 (not lt!70537))))

(declare-fun lt!70539 () Bool)

(assert (=> d!41893 (= lt!70537 lt!70539)))

(declare-fun lt!70536 () Unit!4132)

(declare-fun e!87981 () Unit!4132)

(assert (=> d!41893 (= lt!70536 e!87981)))

(declare-fun c!25265 () Bool)

(assert (=> d!41893 (= c!25265 lt!70539)))

(assert (=> d!41893 (= lt!70539 (containsKey!174 (toList!851 (+!163 lt!69746 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16)))) lt!69752))))

(assert (=> d!41893 (= (contains!886 (+!163 lt!69746 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16))) lt!69752) lt!70537)))

(declare-fun b!135130 () Bool)

(declare-fun lt!70538 () Unit!4132)

(assert (=> b!135130 (= e!87981 lt!70538)))

(assert (=> b!135130 (= lt!70538 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69746 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16)))) lt!69752))))

(assert (=> b!135130 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69746 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16)))) lt!69752))))

(declare-fun b!135131 () Bool)

(declare-fun Unit!4240 () Unit!4132)

(assert (=> b!135131 (= e!87981 Unit!4240)))

(declare-fun b!135132 () Bool)

(assert (=> b!135132 (= e!87980 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69746 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16)))) lt!69752)))))

(assert (= (and d!41893 c!25265) b!135130))

(assert (= (and d!41893 (not c!25265)) b!135131))

(assert (= (and d!41893 (not res!64837)) b!135132))

(declare-fun m!160493 () Bool)

(assert (=> d!41893 m!160493))

(declare-fun m!160495 () Bool)

(assert (=> b!135130 m!160495))

(declare-fun m!160497 () Bool)

(assert (=> b!135130 m!160497))

(assert (=> b!135130 m!160497))

(declare-fun m!160499 () Bool)

(assert (=> b!135130 m!160499))

(assert (=> b!135132 m!160497))

(assert (=> b!135132 m!160497))

(assert (=> b!135132 m!160499))

(assert (=> b!133518 d!41893))

(declare-fun d!41895 () Bool)

(assert (=> d!41895 (= (apply!116 (+!163 lt!69749 (tuple2!2585 lt!69750 (minValue!2719 newMap!16))) lt!69760) (apply!116 lt!69749 lt!69760))))

(declare-fun lt!70540 () Unit!4132)

(assert (=> d!41895 (= lt!70540 (choose!828 lt!69749 lt!69750 (minValue!2719 newMap!16) lt!69760))))

(declare-fun e!87982 () Bool)

(assert (=> d!41895 e!87982))

(declare-fun res!64838 () Bool)

(assert (=> d!41895 (=> (not res!64838) (not e!87982))))

(assert (=> d!41895 (= res!64838 (contains!886 lt!69749 lt!69760))))

(assert (=> d!41895 (= (addApplyDifferent!92 lt!69749 lt!69750 (minValue!2719 newMap!16) lt!69760) lt!70540)))

(declare-fun b!135133 () Bool)

(assert (=> b!135133 (= e!87982 (not (= lt!69760 lt!69750)))))

(assert (= (and d!41895 res!64838) b!135133))

(assert (=> d!41895 m!157429))

(assert (=> d!41895 m!157451))

(declare-fun m!160501 () Bool)

(assert (=> d!41895 m!160501))

(assert (=> d!41895 m!157449))

(declare-fun m!160503 () Bool)

(assert (=> d!41895 m!160503))

(assert (=> d!41895 m!157429))

(assert (=> b!133518 d!41895))

(declare-fun d!41897 () Bool)

(assert (=> d!41897 (= (apply!116 (+!163 lt!69740 (tuple2!2585 lt!69741 (zeroValue!2719 newMap!16))) lt!69744) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69740 (tuple2!2585 lt!69741 (zeroValue!2719 newMap!16)))) lt!69744)))))

(declare-fun bs!5637 () Bool)

(assert (= bs!5637 d!41897))

(declare-fun m!160505 () Bool)

(assert (=> bs!5637 m!160505))

(assert (=> bs!5637 m!160505))

(declare-fun m!160507 () Bool)

(assert (=> bs!5637 m!160507))

(assert (=> b!133518 d!41897))

(declare-fun d!41899 () Bool)

(declare-fun e!87983 () Bool)

(assert (=> d!41899 e!87983))

(declare-fun res!64840 () Bool)

(assert (=> d!41899 (=> (not res!64840) (not e!87983))))

(declare-fun lt!70543 () ListLongMap!1671)

(assert (=> d!41899 (= res!64840 (contains!886 lt!70543 (_1!1303 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70541 () List!1710)

(assert (=> d!41899 (= lt!70543 (ListLongMap!1672 lt!70541))))

(declare-fun lt!70544 () Unit!4132)

(declare-fun lt!70542 () Unit!4132)

(assert (=> d!41899 (= lt!70544 lt!70542)))

(assert (=> d!41899 (= (getValueByKey!170 lt!70541 (_1!1303 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41899 (= lt!70542 (lemmaContainsTupThenGetReturnValue!88 lt!70541 (_1!1303 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41899 (= lt!70541 (insertStrictlySorted!91 (toList!851 lt!69746) (_1!1303 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41899 (= (+!163 lt!69746 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16))) lt!70543)))

(declare-fun b!135134 () Bool)

(declare-fun res!64839 () Bool)

(assert (=> b!135134 (=> (not res!64839) (not e!87983))))

(assert (=> b!135134 (= res!64839 (= (getValueByKey!170 (toList!851 lt!70543) (_1!1303 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16))))))))

(declare-fun b!135135 () Bool)

(assert (=> b!135135 (= e!87983 (contains!889 (toList!851 lt!70543) (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41899 res!64840) b!135134))

(assert (= (and b!135134 res!64839) b!135135))

(declare-fun m!160509 () Bool)

(assert (=> d!41899 m!160509))

(declare-fun m!160511 () Bool)

(assert (=> d!41899 m!160511))

(declare-fun m!160513 () Bool)

(assert (=> d!41899 m!160513))

(declare-fun m!160515 () Bool)

(assert (=> d!41899 m!160515))

(declare-fun m!160517 () Bool)

(assert (=> b!135134 m!160517))

(declare-fun m!160519 () Bool)

(assert (=> b!135135 m!160519))

(assert (=> b!133518 d!41899))

(declare-fun d!41901 () Bool)

(assert (=> d!41901 (= (apply!116 (+!163 lt!69749 (tuple2!2585 lt!69750 (minValue!2719 newMap!16))) lt!69760) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69749 (tuple2!2585 lt!69750 (minValue!2719 newMap!16)))) lt!69760)))))

(declare-fun bs!5638 () Bool)

(assert (= bs!5638 d!41901))

(declare-fun m!160521 () Bool)

(assert (=> bs!5638 m!160521))

(assert (=> bs!5638 m!160521))

(declare-fun m!160523 () Bool)

(assert (=> bs!5638 m!160523))

(assert (=> b!133518 d!41901))

(declare-fun d!41903 () Bool)

(assert (=> d!41903 (= (apply!116 (+!163 lt!69742 (tuple2!2585 lt!69759 (minValue!2719 newMap!16))) lt!69747) (apply!116 lt!69742 lt!69747))))

(declare-fun lt!70545 () Unit!4132)

(assert (=> d!41903 (= lt!70545 (choose!828 lt!69742 lt!69759 (minValue!2719 newMap!16) lt!69747))))

(declare-fun e!87984 () Bool)

(assert (=> d!41903 e!87984))

(declare-fun res!64841 () Bool)

(assert (=> d!41903 (=> (not res!64841) (not e!87984))))

(assert (=> d!41903 (= res!64841 (contains!886 lt!69742 lt!69747))))

(assert (=> d!41903 (= (addApplyDifferent!92 lt!69742 lt!69759 (minValue!2719 newMap!16) lt!69747) lt!70545)))

(declare-fun b!135136 () Bool)

(assert (=> b!135136 (= e!87984 (not (= lt!69747 lt!69759)))))

(assert (= (and d!41903 res!64841) b!135136))

(assert (=> d!41903 m!157435))

(assert (=> d!41903 m!157437))

(declare-fun m!160525 () Bool)

(assert (=> d!41903 m!160525))

(assert (=> d!41903 m!157445))

(declare-fun m!160527 () Bool)

(assert (=> d!41903 m!160527))

(assert (=> d!41903 m!157435))

(assert (=> b!133518 d!41903))

(declare-fun d!41905 () Bool)

(assert (=> d!41905 (= (apply!116 lt!69742 lt!69747) (get!1482 (getValueByKey!170 (toList!851 lt!69742) lt!69747)))))

(declare-fun bs!5639 () Bool)

(assert (= bs!5639 d!41905))

(declare-fun m!160529 () Bool)

(assert (=> bs!5639 m!160529))

(assert (=> bs!5639 m!160529))

(declare-fun m!160531 () Bool)

(assert (=> bs!5639 m!160531))

(assert (=> b!133518 d!41905))

(declare-fun d!41907 () Bool)

(declare-fun e!87985 () Bool)

(assert (=> d!41907 e!87985))

(declare-fun res!64843 () Bool)

(assert (=> d!41907 (=> (not res!64843) (not e!87985))))

(declare-fun lt!70548 () ListLongMap!1671)

(assert (=> d!41907 (= res!64843 (contains!886 lt!70548 (_1!1303 (tuple2!2585 lt!69750 (minValue!2719 newMap!16)))))))

(declare-fun lt!70546 () List!1710)

(assert (=> d!41907 (= lt!70548 (ListLongMap!1672 lt!70546))))

(declare-fun lt!70549 () Unit!4132)

(declare-fun lt!70547 () Unit!4132)

(assert (=> d!41907 (= lt!70549 lt!70547)))

(assert (=> d!41907 (= (getValueByKey!170 lt!70546 (_1!1303 (tuple2!2585 lt!69750 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69750 (minValue!2719 newMap!16)))))))

(assert (=> d!41907 (= lt!70547 (lemmaContainsTupThenGetReturnValue!88 lt!70546 (_1!1303 (tuple2!2585 lt!69750 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69750 (minValue!2719 newMap!16)))))))

(assert (=> d!41907 (= lt!70546 (insertStrictlySorted!91 (toList!851 lt!69749) (_1!1303 (tuple2!2585 lt!69750 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69750 (minValue!2719 newMap!16)))))))

(assert (=> d!41907 (= (+!163 lt!69749 (tuple2!2585 lt!69750 (minValue!2719 newMap!16))) lt!70548)))

(declare-fun b!135137 () Bool)

(declare-fun res!64842 () Bool)

(assert (=> b!135137 (=> (not res!64842) (not e!87985))))

(assert (=> b!135137 (= res!64842 (= (getValueByKey!170 (toList!851 lt!70548) (_1!1303 (tuple2!2585 lt!69750 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69750 (minValue!2719 newMap!16))))))))

(declare-fun b!135138 () Bool)

(assert (=> b!135138 (= e!87985 (contains!889 (toList!851 lt!70548) (tuple2!2585 lt!69750 (minValue!2719 newMap!16))))))

(assert (= (and d!41907 res!64843) b!135137))

(assert (= (and b!135137 res!64842) b!135138))

(declare-fun m!160533 () Bool)

(assert (=> d!41907 m!160533))

(declare-fun m!160535 () Bool)

(assert (=> d!41907 m!160535))

(declare-fun m!160537 () Bool)

(assert (=> d!41907 m!160537))

(declare-fun m!160539 () Bool)

(assert (=> d!41907 m!160539))

(declare-fun m!160541 () Bool)

(assert (=> b!135137 m!160541))

(declare-fun m!160543 () Bool)

(assert (=> b!135138 m!160543))

(assert (=> b!133518 d!41907))

(declare-fun d!41909 () Bool)

(assert (=> d!41909 (= (apply!116 (+!163 lt!69742 (tuple2!2585 lt!69759 (minValue!2719 newMap!16))) lt!69747) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69742 (tuple2!2585 lt!69759 (minValue!2719 newMap!16)))) lt!69747)))))

(declare-fun bs!5640 () Bool)

(assert (= bs!5640 d!41909))

(declare-fun m!160545 () Bool)

(assert (=> bs!5640 m!160545))

(assert (=> bs!5640 m!160545))

(declare-fun m!160547 () Bool)

(assert (=> bs!5640 m!160547))

(assert (=> b!133518 d!41909))

(declare-fun d!41911 () Bool)

(assert (=> d!41911 (contains!886 (+!163 lt!69746 (tuple2!2585 lt!69754 (zeroValue!2719 newMap!16))) lt!69752)))

(declare-fun lt!70550 () Unit!4132)

(assert (=> d!41911 (= lt!70550 (choose!829 lt!69746 lt!69754 (zeroValue!2719 newMap!16) lt!69752))))

(assert (=> d!41911 (contains!886 lt!69746 lt!69752)))

(assert (=> d!41911 (= (addStillContains!92 lt!69746 lt!69754 (zeroValue!2719 newMap!16) lt!69752) lt!70550)))

(declare-fun bs!5641 () Bool)

(assert (= bs!5641 d!41911))

(assert (=> bs!5641 m!157427))

(assert (=> bs!5641 m!157427))

(assert (=> bs!5641 m!157439))

(declare-fun m!160549 () Bool)

(assert (=> bs!5641 m!160549))

(declare-fun m!160551 () Bool)

(assert (=> bs!5641 m!160551))

(assert (=> b!133518 d!41911))

(declare-fun d!41913 () Bool)

(assert (=> d!41913 (= (apply!116 lt!69749 lt!69760) (get!1482 (getValueByKey!170 (toList!851 lt!69749) lt!69760)))))

(declare-fun bs!5642 () Bool)

(assert (= bs!5642 d!41913))

(declare-fun m!160553 () Bool)

(assert (=> bs!5642 m!160553))

(assert (=> bs!5642 m!160553))

(declare-fun m!160555 () Bool)

(assert (=> bs!5642 m!160555))

(assert (=> b!133518 d!41913))

(declare-fun d!41915 () Bool)

(declare-fun e!87986 () Bool)

(assert (=> d!41915 e!87986))

(declare-fun res!64845 () Bool)

(assert (=> d!41915 (=> (not res!64845) (not e!87986))))

(declare-fun lt!70553 () ListLongMap!1671)

(assert (=> d!41915 (= res!64845 (contains!886 lt!70553 (_1!1303 (tuple2!2585 lt!69741 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70551 () List!1710)

(assert (=> d!41915 (= lt!70553 (ListLongMap!1672 lt!70551))))

(declare-fun lt!70554 () Unit!4132)

(declare-fun lt!70552 () Unit!4132)

(assert (=> d!41915 (= lt!70554 lt!70552)))

(assert (=> d!41915 (= (getValueByKey!170 lt!70551 (_1!1303 (tuple2!2585 lt!69741 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69741 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41915 (= lt!70552 (lemmaContainsTupThenGetReturnValue!88 lt!70551 (_1!1303 (tuple2!2585 lt!69741 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69741 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41915 (= lt!70551 (insertStrictlySorted!91 (toList!851 lt!69740) (_1!1303 (tuple2!2585 lt!69741 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69741 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41915 (= (+!163 lt!69740 (tuple2!2585 lt!69741 (zeroValue!2719 newMap!16))) lt!70553)))

(declare-fun b!135139 () Bool)

(declare-fun res!64844 () Bool)

(assert (=> b!135139 (=> (not res!64844) (not e!87986))))

(assert (=> b!135139 (= res!64844 (= (getValueByKey!170 (toList!851 lt!70553) (_1!1303 (tuple2!2585 lt!69741 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69741 (zeroValue!2719 newMap!16))))))))

(declare-fun b!135140 () Bool)

(assert (=> b!135140 (= e!87986 (contains!889 (toList!851 lt!70553) (tuple2!2585 lt!69741 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41915 res!64845) b!135139))

(assert (= (and b!135139 res!64844) b!135140))

(declare-fun m!160557 () Bool)

(assert (=> d!41915 m!160557))

(declare-fun m!160559 () Bool)

(assert (=> d!41915 m!160559))

(declare-fun m!160561 () Bool)

(assert (=> d!41915 m!160561))

(declare-fun m!160563 () Bool)

(assert (=> d!41915 m!160563))

(declare-fun m!160565 () Bool)

(assert (=> b!135139 m!160565))

(declare-fun m!160567 () Bool)

(assert (=> b!135140 m!160567))

(assert (=> b!133518 d!41915))

(declare-fun d!41917 () Bool)

(assert (=> d!41917 (= (apply!116 (+!163 lt!69740 (tuple2!2585 lt!69741 (zeroValue!2719 newMap!16))) lt!69744) (apply!116 lt!69740 lt!69744))))

(declare-fun lt!70555 () Unit!4132)

(assert (=> d!41917 (= lt!70555 (choose!828 lt!69740 lt!69741 (zeroValue!2719 newMap!16) lt!69744))))

(declare-fun e!87987 () Bool)

(assert (=> d!41917 e!87987))

(declare-fun res!64846 () Bool)

(assert (=> d!41917 (=> (not res!64846) (not e!87987))))

(assert (=> d!41917 (= res!64846 (contains!886 lt!69740 lt!69744))))

(assert (=> d!41917 (= (addApplyDifferent!92 lt!69740 lt!69741 (zeroValue!2719 newMap!16) lt!69744) lt!70555)))

(declare-fun b!135141 () Bool)

(assert (=> b!135141 (= e!87987 (not (= lt!69744 lt!69741)))))

(assert (= (and d!41917 res!64846) b!135141))

(assert (=> d!41917 m!157423))

(assert (=> d!41917 m!157431))

(declare-fun m!160569 () Bool)

(assert (=> d!41917 m!160569))

(assert (=> d!41917 m!157433))

(declare-fun m!160571 () Bool)

(assert (=> d!41917 m!160571))

(assert (=> d!41917 m!157423))

(assert (=> b!133518 d!41917))

(declare-fun d!41919 () Bool)

(declare-fun e!87988 () Bool)

(assert (=> d!41919 e!87988))

(declare-fun res!64848 () Bool)

(assert (=> d!41919 (=> (not res!64848) (not e!87988))))

(declare-fun lt!70558 () ListLongMap!1671)

(assert (=> d!41919 (= res!64848 (contains!886 lt!70558 (_1!1303 (tuple2!2585 lt!69759 (minValue!2719 newMap!16)))))))

(declare-fun lt!70556 () List!1710)

(assert (=> d!41919 (= lt!70558 (ListLongMap!1672 lt!70556))))

(declare-fun lt!70559 () Unit!4132)

(declare-fun lt!70557 () Unit!4132)

(assert (=> d!41919 (= lt!70559 lt!70557)))

(assert (=> d!41919 (= (getValueByKey!170 lt!70556 (_1!1303 (tuple2!2585 lt!69759 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69759 (minValue!2719 newMap!16)))))))

(assert (=> d!41919 (= lt!70557 (lemmaContainsTupThenGetReturnValue!88 lt!70556 (_1!1303 (tuple2!2585 lt!69759 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69759 (minValue!2719 newMap!16)))))))

(assert (=> d!41919 (= lt!70556 (insertStrictlySorted!91 (toList!851 lt!69742) (_1!1303 (tuple2!2585 lt!69759 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69759 (minValue!2719 newMap!16)))))))

(assert (=> d!41919 (= (+!163 lt!69742 (tuple2!2585 lt!69759 (minValue!2719 newMap!16))) lt!70558)))

(declare-fun b!135142 () Bool)

(declare-fun res!64847 () Bool)

(assert (=> b!135142 (=> (not res!64847) (not e!87988))))

(assert (=> b!135142 (= res!64847 (= (getValueByKey!170 (toList!851 lt!70558) (_1!1303 (tuple2!2585 lt!69759 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69759 (minValue!2719 newMap!16))))))))

(declare-fun b!135143 () Bool)

(assert (=> b!135143 (= e!87988 (contains!889 (toList!851 lt!70558) (tuple2!2585 lt!69759 (minValue!2719 newMap!16))))))

(assert (= (and d!41919 res!64848) b!135142))

(assert (= (and b!135142 res!64847) b!135143))

(declare-fun m!160573 () Bool)

(assert (=> d!41919 m!160573))

(declare-fun m!160575 () Bool)

(assert (=> d!41919 m!160575))

(declare-fun m!160577 () Bool)

(assert (=> d!41919 m!160577))

(declare-fun m!160579 () Bool)

(assert (=> d!41919 m!160579))

(declare-fun m!160581 () Bool)

(assert (=> b!135142 m!160581))

(declare-fun m!160583 () Bool)

(assert (=> b!135143 m!160583))

(assert (=> b!133518 d!41919))

(declare-fun d!41921 () Bool)

(assert (=> d!41921 (= (apply!116 lt!69740 lt!69744) (get!1482 (getValueByKey!170 (toList!851 lt!69740) lt!69744)))))

(declare-fun bs!5643 () Bool)

(assert (= bs!5643 d!41921))

(declare-fun m!160585 () Bool)

(assert (=> bs!5643 m!160585))

(assert (=> bs!5643 m!160585))

(declare-fun m!160587 () Bool)

(assert (=> bs!5643 m!160587))

(assert (=> b!133518 d!41921))

(declare-fun d!41923 () Bool)

(declare-fun res!64849 () Bool)

(declare-fun e!87989 () Bool)

(assert (=> d!41923 (=> res!64849 e!87989)))

(assert (=> d!41923 (= res!64849 (and ((_ is Cons!1706) (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (= (_1!1303 (h!2311 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116)))))))

(assert (=> d!41923 (= (containsKey!174 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))) e!87989)))

(declare-fun b!135144 () Bool)

(declare-fun e!87990 () Bool)

(assert (=> b!135144 (= e!87989 e!87990)))

(declare-fun res!64850 () Bool)

(assert (=> b!135144 (=> (not res!64850) (not e!87990))))

(assert (=> b!135144 (= res!64850 (and (or (not ((_ is Cons!1706) (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))) (bvsle (_1!1303 (h!2311 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116)))) ((_ is Cons!1706) (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116)))))))

(declare-fun b!135145 () Bool)

(assert (=> b!135145 (= e!87990 (containsKey!174 (t!6152 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))

(assert (= (and d!41923 (not res!64849)) b!135144))

(assert (= (and b!135144 res!64850) b!135145))

(assert (=> b!135145 m!155971))

(declare-fun m!160589 () Bool)

(assert (=> b!135145 m!160589))

(assert (=> b!133131 d!41923))

(declare-fun d!41925 () Bool)

(declare-fun e!87991 () Bool)

(assert (=> d!41925 e!87991))

(declare-fun res!64851 () Bool)

(assert (=> d!41925 (=> res!64851 e!87991)))

(declare-fun lt!70561 () Bool)

(assert (=> d!41925 (= res!64851 (not lt!70561))))

(declare-fun lt!70563 () Bool)

(assert (=> d!41925 (= lt!70561 lt!70563)))

(declare-fun lt!70560 () Unit!4132)

(declare-fun e!87992 () Unit!4132)

(assert (=> d!41925 (= lt!70560 e!87992)))

(declare-fun c!25266 () Bool)

(assert (=> d!41925 (= c!25266 lt!70563)))

(assert (=> d!41925 (= lt!70563 (containsKey!174 (toList!851 lt!69923) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41925 (= (contains!886 lt!69923 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!70561)))

(declare-fun b!135146 () Bool)

(declare-fun lt!70562 () Unit!4132)

(assert (=> b!135146 (= e!87992 lt!70562)))

(assert (=> b!135146 (= lt!70562 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69923) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135146 (isDefined!124 (getValueByKey!170 (toList!851 lt!69923) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135147 () Bool)

(declare-fun Unit!4241 () Unit!4132)

(assert (=> b!135147 (= e!87992 Unit!4241)))

(declare-fun b!135148 () Bool)

(assert (=> b!135148 (= e!87991 (isDefined!124 (getValueByKey!170 (toList!851 lt!69923) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41925 c!25266) b!135146))

(assert (= (and d!41925 (not c!25266)) b!135147))

(assert (= (and d!41925 (not res!64851)) b!135148))

(assert (=> d!41925 m!156125))

(declare-fun m!160591 () Bool)

(assert (=> d!41925 m!160591))

(assert (=> b!135146 m!156125))

(declare-fun m!160593 () Bool)

(assert (=> b!135146 m!160593))

(assert (=> b!135146 m!156125))

(declare-fun m!160595 () Bool)

(assert (=> b!135146 m!160595))

(assert (=> b!135146 m!160595))

(declare-fun m!160597 () Bool)

(assert (=> b!135146 m!160597))

(assert (=> b!135148 m!156125))

(assert (=> b!135148 m!160595))

(assert (=> b!135148 m!160595))

(assert (=> b!135148 m!160597))

(assert (=> b!133757 d!41925))

(declare-fun d!41927 () Bool)

(declare-fun res!64852 () Bool)

(declare-fun e!87993 () Bool)

(assert (=> d!41927 (=> res!64852 e!87993)))

(assert (=> d!41927 (= res!64852 (and ((_ is Cons!1706) lt!69318) (= (_1!1303 (h!2311 lt!69318)) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!41927 (= (containsKey!174 lt!69318 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!87993)))

(declare-fun b!135149 () Bool)

(declare-fun e!87994 () Bool)

(assert (=> b!135149 (= e!87993 e!87994)))

(declare-fun res!64853 () Bool)

(assert (=> b!135149 (=> (not res!64853) (not e!87994))))

(assert (=> b!135149 (= res!64853 (and (or (not ((_ is Cons!1706) lt!69318)) (bvsle (_1!1303 (h!2311 lt!69318)) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Cons!1706) lt!69318) (bvslt (_1!1303 (h!2311 lt!69318)) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135150 () Bool)

(assert (=> b!135150 (= e!87994 (containsKey!174 (t!6152 lt!69318) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!41927 (not res!64852)) b!135149))

(assert (= (and b!135149 res!64853) b!135150))

(declare-fun m!160599 () Bool)

(assert (=> b!135150 m!160599))

(assert (=> b!133208 d!41927))

(declare-fun d!41929 () Bool)

(assert (=> d!41929 (isDefined!124 (getValueByKey!170 (toList!851 lt!69220) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!70564 () Unit!4132)

(assert (=> d!41929 (= lt!70564 (choose!826 (toList!851 lt!69220) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!87995 () Bool)

(assert (=> d!41929 e!87995))

(declare-fun res!64854 () Bool)

(assert (=> d!41929 (=> (not res!64854) (not e!87995))))

(assert (=> d!41929 (= res!64854 (isStrictlySorted!317 (toList!851 lt!69220)))))

(assert (=> d!41929 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69220) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!70564)))

(declare-fun b!135151 () Bool)

(assert (=> b!135151 (= e!87995 (containsKey!174 (toList!851 lt!69220) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41929 res!64854) b!135151))

(assert (=> d!41929 m!156125))

(assert (=> d!41929 m!156787))

(assert (=> d!41929 m!156787))

(assert (=> d!41929 m!157889))

(assert (=> d!41929 m!156125))

(declare-fun m!160601 () Bool)

(assert (=> d!41929 m!160601))

(assert (=> d!41929 m!158589))

(assert (=> b!135151 m!156125))

(assert (=> b!135151 m!157885))

(assert (=> b!133676 d!41929))

(declare-fun d!41931 () Bool)

(assert (=> d!41931 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69220) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69220) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5644 () Bool)

(assert (= bs!5644 d!41931))

(assert (=> bs!5644 m!156787))

(declare-fun m!160603 () Bool)

(assert (=> bs!5644 m!160603))

(assert (=> b!133676 d!41931))

(assert (=> b!133676 d!41371))

(declare-fun c!25267 () Bool)

(declare-fun d!41933 () Bool)

(assert (=> d!41933 (= c!25267 (and ((_ is Cons!1706) (t!6152 (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (= (_1!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))) lt!69174)))))

(declare-fun e!87996 () Option!176)

(assert (=> d!41933 (= (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!69174) e!87996)))

(declare-fun e!87997 () Option!176)

(declare-fun b!135154 () Bool)

(assert (=> b!135154 (= e!87997 (getValueByKey!170 (t!6152 (t!6152 (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69174))))

(declare-fun b!135153 () Bool)

(assert (=> b!135153 (= e!87996 e!87997)))

(declare-fun c!25268 () Bool)

(assert (=> b!135153 (= c!25268 (and ((_ is Cons!1706) (t!6152 (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))) lt!69174))))))

(declare-fun b!135152 () Bool)

(assert (=> b!135152 (= e!87996 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69170 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))))

(declare-fun b!135155 () Bool)

(assert (=> b!135155 (= e!87997 None!174)))

(assert (= (and d!41933 c!25267) b!135152))

(assert (= (and d!41933 (not c!25267)) b!135153))

(assert (= (and b!135153 c!25268) b!135154))

(assert (= (and b!135153 (not c!25268)) b!135155))

(declare-fun m!160605 () Bool)

(assert (=> b!135154 m!160605))

(assert (=> b!133900 d!41933))

(declare-fun d!41935 () Bool)

(assert (=> d!41935 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))) lt!69304))))

(declare-fun lt!70565 () Unit!4132)

(assert (=> d!41935 (= lt!70565 (choose!826 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))) lt!69304))))

(declare-fun e!87998 () Bool)

(assert (=> d!41935 e!87998))

(declare-fun res!64855 () Bool)

(assert (=> d!41935 (=> (not res!64855) (not e!87998))))

(assert (=> d!41935 (= res!64855 (isStrictlySorted!317 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303)))))))

(assert (=> d!41935 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))) lt!69304) lt!70565)))

(declare-fun b!135156 () Bool)

(assert (=> b!135156 (= e!87998 (containsKey!174 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))) lt!69304))))

(assert (= (and d!41935 res!64855) b!135156))

(assert (=> d!41935 m!156885))

(assert (=> d!41935 m!156885))

(assert (=> d!41935 m!156887))

(declare-fun m!160607 () Bool)

(assert (=> d!41935 m!160607))

(declare-fun m!160609 () Bool)

(assert (=> d!41935 m!160609))

(assert (=> b!135156 m!156881))

(assert (=> b!133255 d!41935))

(declare-fun d!41937 () Bool)

(assert (=> d!41937 (= (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))) lt!69304)) (not (isEmpty!413 (getValueByKey!170 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))) lt!69304))))))

(declare-fun bs!5645 () Bool)

(assert (= bs!5645 d!41937))

(assert (=> bs!5645 m!156885))

(declare-fun m!160611 () Bool)

(assert (=> bs!5645 m!160611))

(assert (=> b!133255 d!41937))

(declare-fun d!41939 () Bool)

(declare-fun c!25269 () Bool)

(assert (=> d!41939 (= c!25269 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303)))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))))) lt!69304)))))

(declare-fun e!87999 () Option!176)

(assert (=> d!41939 (= (getValueByKey!170 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))) lt!69304) e!87999)))

(declare-fun b!135159 () Bool)

(declare-fun e!88000 () Option!176)

(assert (=> b!135159 (= e!88000 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303)))) lt!69304))))

(declare-fun b!135158 () Bool)

(assert (=> b!135158 (= e!87999 e!88000)))

(declare-fun c!25270 () Bool)

(assert (=> b!135158 (= c!25270 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303)))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303))))) lt!69304))))))

(declare-fun b!135157 () Bool)

(assert (=> b!135157 (= e!87999 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69299 (tuple2!2585 lt!69302 lt!69303)))))))))

(declare-fun b!135160 () Bool)

(assert (=> b!135160 (= e!88000 None!174)))

(assert (= (and d!41939 c!25269) b!135157))

(assert (= (and d!41939 (not c!25269)) b!135158))

(assert (= (and b!135158 c!25270) b!135159))

(assert (= (and b!135158 (not c!25270)) b!135160))

(declare-fun m!160613 () Bool)

(assert (=> b!135159 m!160613))

(assert (=> b!133255 d!41939))

(declare-fun d!41941 () Bool)

(assert (=> d!41941 (= (validMask!0 (mask!7163 (_2!1304 lt!69115))) (and (or (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000000000000000000111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000000000000000001111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000000000000000011111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000000000000000111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000000000000001111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000000000000011111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000000000000111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000000000001111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000000000011111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000000000111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000000001111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000000011111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000000111111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000001111111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000011111111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000000111111111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000001111111111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000011111111111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000000111111111111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000001111111111111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000011111111111111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000000111111111111111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000001111111111111111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000011111111111111111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00000111111111111111111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00001111111111111111111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00011111111111111111111111111111) (= (mask!7163 (_2!1304 lt!69115)) #b00111111111111111111111111111111)) (bvsle (mask!7163 (_2!1304 lt!69115)) #b00111111111111111111111111111111)))))

(assert (=> d!40517 d!41941))

(assert (=> b!133945 d!40519))

(assert (=> b!133806 d!41505))

(declare-fun d!41943 () Bool)

(assert (=> d!41943 (isDefined!124 (getValueByKey!170 (toList!851 lt!69362) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!70566 () Unit!4132)

(assert (=> d!41943 (= lt!70566 (choose!826 (toList!851 lt!69362) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!88001 () Bool)

(assert (=> d!41943 e!88001))

(declare-fun res!64856 () Bool)

(assert (=> d!41943 (=> (not res!64856) (not e!88001))))

(assert (=> d!41943 (= res!64856 (isStrictlySorted!317 (toList!851 lt!69362)))))

(assert (=> d!41943 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69362) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!70566)))

(declare-fun b!135161 () Bool)

(assert (=> b!135161 (= e!88001 (containsKey!174 (toList!851 lt!69362) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41943 res!64856) b!135161))

(assert (=> d!41943 m!156125))

(assert (=> d!41943 m!157571))

(assert (=> d!41943 m!157571))

(assert (=> d!41943 m!158395))

(assert (=> d!41943 m!156125))

(declare-fun m!160615 () Bool)

(assert (=> d!41943 m!160615))

(declare-fun m!160617 () Bool)

(assert (=> d!41943 m!160617))

(assert (=> b!135161 m!156125))

(assert (=> b!135161 m!158391))

(assert (=> b!133936 d!41943))

(declare-fun d!41945 () Bool)

(assert (=> d!41945 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69362) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69362) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5646 () Bool)

(assert (= bs!5646 d!41945))

(assert (=> bs!5646 m!157571))

(declare-fun m!160619 () Bool)

(assert (=> bs!5646 m!160619))

(assert (=> b!133936 d!41945))

(declare-fun d!41947 () Bool)

(declare-fun c!25271 () Bool)

(assert (=> d!41947 (= c!25271 (and ((_ is Cons!1706) (toList!851 lt!69362)) (= (_1!1303 (h!2311 (toList!851 lt!69362))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun e!88002 () Option!176)

(assert (=> d!41947 (= (getValueByKey!170 (toList!851 lt!69362) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) e!88002)))

(declare-fun b!135164 () Bool)

(declare-fun e!88003 () Option!176)

(assert (=> b!135164 (= e!88003 (getValueByKey!170 (t!6152 (toList!851 lt!69362)) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135163 () Bool)

(assert (=> b!135163 (= e!88002 e!88003)))

(declare-fun c!25272 () Bool)

(assert (=> b!135163 (= c!25272 (and ((_ is Cons!1706) (toList!851 lt!69362)) (not (= (_1!1303 (h!2311 (toList!851 lt!69362))) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!135162 () Bool)

(assert (=> b!135162 (= e!88002 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69362)))))))

(declare-fun b!135165 () Bool)

(assert (=> b!135165 (= e!88003 None!174)))

(assert (= (and d!41947 c!25271) b!135162))

(assert (= (and d!41947 (not c!25271)) b!135163))

(assert (= (and b!135163 c!25272) b!135164))

(assert (= (and b!135163 (not c!25272)) b!135165))

(assert (=> b!135164 m!156125))

(declare-fun m!160621 () Bool)

(assert (=> b!135164 m!160621))

(assert (=> b!133936 d!41947))

(declare-fun d!41949 () Bool)

(assert (=> d!41949 (= (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133469 d!41949))

(declare-fun d!41951 () Bool)

(declare-fun c!25273 () Bool)

(assert (=> d!41951 (= c!25273 (and ((_ is Cons!1706) (t!6152 lt!69325)) (= (_1!1303 (h!2311 (t!6152 lt!69325))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!88004 () Option!176)

(assert (=> d!41951 (= (getValueByKey!170 (t!6152 lt!69325) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!88004)))

(declare-fun e!88005 () Option!176)

(declare-fun b!135168 () Bool)

(assert (=> b!135168 (= e!88005 (getValueByKey!170 (t!6152 (t!6152 lt!69325)) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!135167 () Bool)

(assert (=> b!135167 (= e!88004 e!88005)))

(declare-fun c!25274 () Bool)

(assert (=> b!135167 (= c!25274 (and ((_ is Cons!1706) (t!6152 lt!69325)) (not (= (_1!1303 (h!2311 (t!6152 lt!69325))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!135166 () Bool)

(assert (=> b!135166 (= e!88004 (Some!175 (_2!1303 (h!2311 (t!6152 lt!69325)))))))

(declare-fun b!135169 () Bool)

(assert (=> b!135169 (= e!88005 None!174)))

(assert (= (and d!41951 c!25273) b!135166))

(assert (= (and d!41951 (not c!25273)) b!135167))

(assert (= (and b!135167 c!25274) b!135168))

(assert (= (and b!135167 (not c!25274)) b!135169))

(declare-fun m!160623 () Bool)

(assert (=> b!135168 m!160623))

(assert (=> b!133879 d!41951))

(declare-fun d!41953 () Bool)

(assert (=> d!41953 (= (validKeyInArray!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) lt!69450)) (and (not (= (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) lt!69450) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) lt!69450) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133420 d!41953))

(declare-fun d!41955 () Bool)

(declare-fun lt!70567 () Bool)

(assert (=> d!41955 (= lt!70567 (select (content!133 (t!6152 (toList!851 lt!69335))) (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun e!88007 () Bool)

(assert (=> d!41955 (= lt!70567 e!88007)))

(declare-fun res!64857 () Bool)

(assert (=> d!41955 (=> (not res!64857) (not e!88007))))

(assert (=> d!41955 (= res!64857 ((_ is Cons!1706) (t!6152 (toList!851 lt!69335))))))

(assert (=> d!41955 (= (contains!889 (t!6152 (toList!851 lt!69335)) (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!70567)))

(declare-fun b!135170 () Bool)

(declare-fun e!88006 () Bool)

(assert (=> b!135170 (= e!88007 e!88006)))

(declare-fun res!64858 () Bool)

(assert (=> b!135170 (=> res!64858 e!88006)))

(assert (=> b!135170 (= res!64858 (= (h!2311 (t!6152 (toList!851 lt!69335))) (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!135171 () Bool)

(assert (=> b!135171 (= e!88006 (contains!889 (t!6152 (t!6152 (toList!851 lt!69335))) (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!41955 res!64857) b!135170))

(assert (= (and b!135170 (not res!64858)) b!135171))

(assert (=> d!41955 m!159099))

(declare-fun m!160625 () Bool)

(assert (=> d!41955 m!160625))

(declare-fun m!160627 () Bool)

(assert (=> b!135171 m!160627))

(assert (=> b!133269 d!41955))

(declare-fun lt!70568 () Bool)

(declare-fun d!41957 () Bool)

(assert (=> d!41957 (= lt!70568 (select (content!133 lt!69329) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!88009 () Bool)

(assert (=> d!41957 (= lt!70568 e!88009)))

(declare-fun res!64859 () Bool)

(assert (=> d!41957 (=> (not res!64859) (not e!88009))))

(assert (=> d!41957 (= res!64859 ((_ is Cons!1706) lt!69329))))

(assert (=> d!41957 (= (contains!889 lt!69329 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!70568)))

(declare-fun b!135172 () Bool)

(declare-fun e!88008 () Bool)

(assert (=> b!135172 (= e!88009 e!88008)))

(declare-fun res!64860 () Bool)

(assert (=> b!135172 (=> res!64860 e!88008)))

(assert (=> b!135172 (= res!64860 (= (h!2311 lt!69329) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135173 () Bool)

(assert (=> b!135173 (= e!88008 (contains!889 (t!6152 lt!69329) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!41957 res!64859) b!135172))

(assert (= (and b!135172 (not res!64860)) b!135173))

(declare-fun m!160629 () Bool)

(assert (=> d!41957 m!160629))

(declare-fun m!160631 () Bool)

(assert (=> d!41957 m!160631))

(declare-fun m!160633 () Bool)

(assert (=> b!135173 m!160633))

(assert (=> b!133451 d!41957))

(declare-fun d!41959 () Bool)

(assert (=> d!41959 (isDefined!124 (getValueByKey!170 (toList!851 (map!1391 (_2!1304 lt!69440))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun lt!70569 () Unit!4132)

(assert (=> d!41959 (= lt!70569 (choose!826 (toList!851 (map!1391 (_2!1304 lt!69440))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun e!88010 () Bool)

(assert (=> d!41959 e!88010))

(declare-fun res!64861 () Bool)

(assert (=> d!41959 (=> (not res!64861) (not e!88010))))

(assert (=> d!41959 (= res!64861 (isStrictlySorted!317 (toList!851 (map!1391 (_2!1304 lt!69440)))))))

(assert (=> d!41959 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (map!1391 (_2!1304 lt!69440))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) lt!70569)))

(declare-fun b!135174 () Bool)

(assert (=> b!135174 (= e!88010 (containsKey!174 (toList!851 (map!1391 (_2!1304 lt!69440))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!41959 res!64861) b!135174))

(assert (=> d!41959 m!155841))

(assert (=> d!41959 m!157511))

(assert (=> d!41959 m!157511))

(assert (=> d!41959 m!157513))

(assert (=> d!41959 m!155841))

(declare-fun m!160635 () Bool)

(assert (=> d!41959 m!160635))

(declare-fun m!160637 () Bool)

(assert (=> d!41959 m!160637))

(assert (=> b!135174 m!155841))

(assert (=> b!135174 m!157507))

(assert (=> b!133562 d!41959))

(declare-fun d!41961 () Bool)

(assert (=> d!41961 (= (isDefined!124 (getValueByKey!170 (toList!851 (map!1391 (_2!1304 lt!69440))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) (not (isEmpty!413 (getValueByKey!170 (toList!851 (map!1391 (_2!1304 lt!69440))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(declare-fun bs!5647 () Bool)

(assert (= bs!5647 d!41961))

(assert (=> bs!5647 m!157511))

(declare-fun m!160639 () Bool)

(assert (=> bs!5647 m!160639))

(assert (=> b!133562 d!41961))

(declare-fun d!41963 () Bool)

(declare-fun c!25275 () Bool)

(assert (=> d!41963 (= c!25275 (and ((_ is Cons!1706) (toList!851 (map!1391 (_2!1304 lt!69440)))) (= (_1!1303 (h!2311 (toList!851 (map!1391 (_2!1304 lt!69440))))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun e!88011 () Option!176)

(assert (=> d!41963 (= (getValueByKey!170 (toList!851 (map!1391 (_2!1304 lt!69440))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!88011)))

(declare-fun e!88012 () Option!176)

(declare-fun b!135177 () Bool)

(assert (=> b!135177 (= e!88012 (getValueByKey!170 (t!6152 (toList!851 (map!1391 (_2!1304 lt!69440)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!135176 () Bool)

(assert (=> b!135176 (= e!88011 e!88012)))

(declare-fun c!25276 () Bool)

(assert (=> b!135176 (= c!25276 (and ((_ is Cons!1706) (toList!851 (map!1391 (_2!1304 lt!69440)))) (not (= (_1!1303 (h!2311 (toList!851 (map!1391 (_2!1304 lt!69440))))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(declare-fun b!135175 () Bool)

(assert (=> b!135175 (= e!88011 (Some!175 (_2!1303 (h!2311 (toList!851 (map!1391 (_2!1304 lt!69440)))))))))

(declare-fun b!135178 () Bool)

(assert (=> b!135178 (= e!88012 None!174)))

(assert (= (and d!41963 c!25275) b!135175))

(assert (= (and d!41963 (not c!25275)) b!135176))

(assert (= (and b!135176 c!25276) b!135177))

(assert (= (and b!135176 (not c!25276)) b!135178))

(assert (=> b!135177 m!155841))

(declare-fun m!160641 () Bool)

(assert (=> b!135177 m!160641))

(assert (=> b!133562 d!41963))

(assert (=> d!40809 d!40807))

(declare-fun d!41965 () Bool)

(assert (=> d!41965 (= (getValueByKey!170 lt!69464 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!175 (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41965 true))

(declare-fun _$22!487 () Unit!4132)

(assert (=> d!41965 (= (choose!834 lt!69464 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) _$22!487)))

(declare-fun bs!5648 () Bool)

(assert (= bs!5648 d!41965))

(assert (=> bs!5648 m!156597))

(assert (=> d!40809 d!41965))

(declare-fun d!41967 () Bool)

(declare-fun res!64862 () Bool)

(declare-fun e!88013 () Bool)

(assert (=> d!41967 (=> res!64862 e!88013)))

(assert (=> d!41967 (= res!64862 (or ((_ is Nil!1707) lt!69464) ((_ is Nil!1707) (t!6152 lt!69464))))))

(assert (=> d!41967 (= (isStrictlySorted!317 lt!69464) e!88013)))

(declare-fun b!135179 () Bool)

(declare-fun e!88014 () Bool)

(assert (=> b!135179 (= e!88013 e!88014)))

(declare-fun res!64863 () Bool)

(assert (=> b!135179 (=> (not res!64863) (not e!88014))))

(assert (=> b!135179 (= res!64863 (bvslt (_1!1303 (h!2311 lt!69464)) (_1!1303 (h!2311 (t!6152 lt!69464)))))))

(declare-fun b!135180 () Bool)

(assert (=> b!135180 (= e!88014 (isStrictlySorted!317 (t!6152 lt!69464)))))

(assert (= (and d!41967 (not res!64862)) b!135179))

(assert (= (and b!135179 res!64863) b!135180))

(declare-fun m!160643 () Bool)

(assert (=> b!135180 m!160643))

(assert (=> d!40809 d!41967))

(declare-fun d!41969 () Bool)

(assert (=> d!41969 (= (get!1482 (getValueByKey!170 (toList!851 lt!69346) lt!69350)) (v!3198 (getValueByKey!170 (toList!851 lt!69346) lt!69350)))))

(assert (=> d!40915 d!41969))

(declare-fun d!41971 () Bool)

(declare-fun c!25277 () Bool)

(assert (=> d!41971 (= c!25277 (and ((_ is Cons!1706) (toList!851 lt!69346)) (= (_1!1303 (h!2311 (toList!851 lt!69346))) lt!69350)))))

(declare-fun e!88015 () Option!176)

(assert (=> d!41971 (= (getValueByKey!170 (toList!851 lt!69346) lt!69350) e!88015)))

(declare-fun b!135183 () Bool)

(declare-fun e!88016 () Option!176)

(assert (=> b!135183 (= e!88016 (getValueByKey!170 (t!6152 (toList!851 lt!69346)) lt!69350))))

(declare-fun b!135182 () Bool)

(assert (=> b!135182 (= e!88015 e!88016)))

(declare-fun c!25278 () Bool)

(assert (=> b!135182 (= c!25278 (and ((_ is Cons!1706) (toList!851 lt!69346)) (not (= (_1!1303 (h!2311 (toList!851 lt!69346))) lt!69350))))))

(declare-fun b!135181 () Bool)

(assert (=> b!135181 (= e!88015 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69346)))))))

(declare-fun b!135184 () Bool)

(assert (=> b!135184 (= e!88016 None!174)))

(assert (= (and d!41971 c!25277) b!135181))

(assert (= (and d!41971 (not c!25277)) b!135182))

(assert (= (and b!135182 c!25278) b!135183))

(assert (= (and b!135182 (not c!25278)) b!135184))

(declare-fun m!160645 () Bool)

(assert (=> b!135183 m!160645))

(assert (=> d!40915 d!41971))

(declare-fun d!41973 () Bool)

(declare-fun e!88021 () Bool)

(assert (=> d!41973 e!88021))

(declare-fun c!25279 () Bool)

(declare-fun lt!70570 () SeekEntryResult!278)

(assert (=> d!41973 (= c!25279 (and ((_ is Intermediate!278) lt!70570) (undefined!1090 lt!70570)))))

(declare-fun e!88017 () SeekEntryResult!278)

(assert (=> d!41973 (= lt!70570 e!88017)))

(declare-fun c!25280 () Bool)

(assert (=> d!41973 (= c!25280 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!70571 () (_ BitVec 64))

(assert (=> d!41973 (= lt!70571 (select (arr!2248 (_keys!4612 newMap!16)) (toIndex!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (mask!7163 newMap!16))))))

(assert (=> d!41973 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!41973 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (mask!7163 newMap!16)) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (_keys!4612 newMap!16) (mask!7163 newMap!16)) lt!70570)))

(declare-fun b!135185 () Bool)

(assert (=> b!135185 (and (bvsge (index!3274 lt!70570) #b00000000000000000000000000000000) (bvslt (index!3274 lt!70570) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun e!88020 () Bool)

(assert (=> b!135185 (= e!88020 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3274 lt!70570)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135186 () Bool)

(assert (=> b!135186 (and (bvsge (index!3274 lt!70570) #b00000000000000000000000000000000) (bvslt (index!3274 lt!70570) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64866 () Bool)

(assert (=> b!135186 (= res!64866 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3274 lt!70570)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135186 (=> res!64866 e!88020)))

(declare-fun b!135187 () Bool)

(declare-fun e!88019 () SeekEntryResult!278)

(assert (=> b!135187 (= e!88017 e!88019)))

(declare-fun c!25281 () Bool)

(assert (=> b!135187 (= c!25281 (or (= lt!70571 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (= (bvadd lt!70571 lt!70571) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135188 () Bool)

(declare-fun e!88018 () Bool)

(assert (=> b!135188 (= e!88021 e!88018)))

(declare-fun res!64865 () Bool)

(assert (=> b!135188 (= res!64865 (and ((_ is Intermediate!278) lt!70570) (not (undefined!1090 lt!70570)) (bvslt (x!15594 lt!70570) #b01111111111111111111111111111110) (bvsge (x!15594 lt!70570) #b00000000000000000000000000000000) (bvsge (x!15594 lt!70570) #b00000000000000000000000000000000)))))

(assert (=> b!135188 (=> (not res!64865) (not e!88018))))

(declare-fun b!135189 () Bool)

(assert (=> b!135189 (= e!88019 (Intermediate!278 false (toIndex!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (mask!7163 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!135190 () Bool)

(assert (=> b!135190 (= e!88017 (Intermediate!278 true (toIndex!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (mask!7163 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!135191 () Bool)

(assert (=> b!135191 (= e!88019 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (mask!7163 newMap!16)) #b00000000000000000000000000000000 (mask!7163 newMap!16)) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(declare-fun b!135192 () Bool)

(assert (=> b!135192 (= e!88021 (bvsge (x!15594 lt!70570) #b01111111111111111111111111111110))))

(declare-fun b!135193 () Bool)

(assert (=> b!135193 (and (bvsge (index!3274 lt!70570) #b00000000000000000000000000000000) (bvslt (index!3274 lt!70570) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!64864 () Bool)

(assert (=> b!135193 (= res!64864 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3274 lt!70570)) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135193 (=> res!64864 e!88020)))

(assert (=> b!135193 (= e!88018 e!88020)))

(assert (= (and d!41973 c!25280) b!135190))

(assert (= (and d!41973 (not c!25280)) b!135187))

(assert (= (and b!135187 c!25281) b!135189))

(assert (= (and b!135187 (not c!25281)) b!135191))

(assert (= (and d!41973 c!25279) b!135192))

(assert (= (and d!41973 (not c!25279)) b!135188))

(assert (= (and b!135188 res!64865) b!135193))

(assert (= (and b!135193 (not res!64864)) b!135186))

(assert (= (and b!135186 (not res!64866)) b!135185))

(declare-fun m!160647 () Bool)

(assert (=> b!135186 m!160647))

(assert (=> d!41973 m!156767))

(declare-fun m!160649 () Bool)

(assert (=> d!41973 m!160649))

(assert (=> d!41973 m!156183))

(assert (=> b!135185 m!160647))

(assert (=> b!135191 m!156767))

(declare-fun m!160651 () Bool)

(assert (=> b!135191 m!160651))

(assert (=> b!135191 m!160651))

(assert (=> b!135191 m!156125))

(declare-fun m!160653 () Bool)

(assert (=> b!135191 m!160653))

(assert (=> b!135193 m!160647))

(assert (=> d!40443 d!41973))

(declare-fun d!41975 () Bool)

(declare-fun lt!70573 () (_ BitVec 32))

(declare-fun lt!70572 () (_ BitVec 32))

(assert (=> d!41975 (= lt!70573 (bvmul (bvxor lt!70572 (bvlshr lt!70572 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!41975 (= lt!70572 ((_ extract 31 0) (bvand (bvxor (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!41975 (and (bvsge (mask!7163 newMap!16) #b00000000000000000000000000000000) (let ((res!64076 (let ((h!2314 ((_ extract 31 0) (bvand (bvxor (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15697 (bvmul (bvxor h!2314 (bvlshr h!2314 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15697 (bvlshr x!15697 #b00000000000000000000000000001101)) (mask!7163 newMap!16)))))) (and (bvslt res!64076 (bvadd (mask!7163 newMap!16) #b00000000000000000000000000000001)) (bvsge res!64076 #b00000000000000000000000000000000))))))

(assert (=> d!41975 (= (toIndex!0 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (mask!7163 newMap!16)) (bvand (bvxor lt!70573 (bvlshr lt!70573 #b00000000000000000000000000001101)) (mask!7163 newMap!16)))))

(assert (=> d!40443 d!41975))

(assert (=> d!40443 d!40425))

(declare-fun c!25282 () Bool)

(declare-fun d!41977 () Bool)

(assert (=> d!41977 (= c!25282 (and ((_ is Cons!1706) (t!6152 lt!69200)) (= (_1!1303 (h!2311 (t!6152 lt!69200))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88022 () Option!176)

(assert (=> d!41977 (= (getValueByKey!170 (t!6152 lt!69200) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88022)))

(declare-fun b!135196 () Bool)

(declare-fun e!88023 () Option!176)

(assert (=> b!135196 (= e!88023 (getValueByKey!170 (t!6152 (t!6152 lt!69200)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135195 () Bool)

(assert (=> b!135195 (= e!88022 e!88023)))

(declare-fun c!25283 () Bool)

(assert (=> b!135195 (= c!25283 (and ((_ is Cons!1706) (t!6152 lt!69200)) (not (= (_1!1303 (h!2311 (t!6152 lt!69200))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135194 () Bool)

(assert (=> b!135194 (= e!88022 (Some!175 (_2!1303 (h!2311 (t!6152 lt!69200)))))))

(declare-fun b!135197 () Bool)

(assert (=> b!135197 (= e!88023 None!174)))

(assert (= (and d!41977 c!25282) b!135194))

(assert (= (and d!41977 (not c!25282)) b!135195))

(assert (= (and b!135195 c!25283) b!135196))

(assert (= (and b!135195 (not c!25283)) b!135197))

(declare-fun m!160655 () Bool)

(assert (=> b!135196 m!160655))

(assert (=> b!133737 d!41977))

(declare-fun d!41979 () Bool)

(declare-fun res!64867 () Bool)

(declare-fun e!88024 () Bool)

(assert (=> d!41979 (=> res!64867 e!88024)))

(assert (=> d!41979 (= res!64867 (and ((_ is Cons!1706) (toList!851 lt!69220)) (= (_1!1303 (h!2311 (toList!851 lt!69220))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41979 (= (containsKey!174 (toList!851 lt!69220) #b1000000000000000000000000000000000000000000000000000000000000000) e!88024)))

(declare-fun b!135198 () Bool)

(declare-fun e!88025 () Bool)

(assert (=> b!135198 (= e!88024 e!88025)))

(declare-fun res!64868 () Bool)

(assert (=> b!135198 (=> (not res!64868) (not e!88025))))

(assert (=> b!135198 (= res!64868 (and (or (not ((_ is Cons!1706) (toList!851 lt!69220))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69220))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1706) (toList!851 lt!69220)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69220))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135199 () Bool)

(assert (=> b!135199 (= e!88025 (containsKey!174 (t!6152 (toList!851 lt!69220)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41979 (not res!64867)) b!135198))

(assert (= (and b!135198 res!64868) b!135199))

(declare-fun m!160657 () Bool)

(assert (=> b!135199 m!160657))

(assert (=> d!40587 d!41979))

(declare-fun d!41981 () Bool)

(declare-fun res!64869 () Bool)

(declare-fun e!88026 () Bool)

(assert (=> d!41981 (=> res!64869 e!88026)))

(assert (=> d!41981 (= res!64869 (and ((_ is Cons!1706) (toList!851 lt!69496)) (= (_1!1303 (h!2311 (toList!851 lt!69496))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(assert (=> d!41981 (= (containsKey!174 (toList!851 lt!69496) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) e!88026)))

(declare-fun b!135200 () Bool)

(declare-fun e!88027 () Bool)

(assert (=> b!135200 (= e!88026 e!88027)))

(declare-fun res!64870 () Bool)

(assert (=> b!135200 (=> (not res!64870) (not e!88027))))

(assert (=> b!135200 (= res!64870 (and (or (not ((_ is Cons!1706) (toList!851 lt!69496))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69496))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) ((_ is Cons!1706) (toList!851 lt!69496)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69496))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!135201 () Bool)

(assert (=> b!135201 (= e!88027 (containsKey!174 (t!6152 (toList!851 lt!69496)) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!41981 (not res!64869)) b!135200))

(assert (= (and b!135200 res!64870) b!135201))

(declare-fun m!160659 () Bool)

(assert (=> b!135201 m!160659))

(assert (=> d!40759 d!41981))

(declare-fun d!41983 () Bool)

(declare-fun res!64871 () Bool)

(declare-fun e!88028 () Bool)

(assert (=> d!41983 (=> res!64871 e!88028)))

(assert (=> d!41983 (= res!64871 (and ((_ is Cons!1706) (toList!851 lt!69484)) (= (_1!1303 (h!2311 (toList!851 lt!69484))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41983 (= (containsKey!174 (toList!851 lt!69484) #b0000000000000000000000000000000000000000000000000000000000000000) e!88028)))

(declare-fun b!135202 () Bool)

(declare-fun e!88029 () Bool)

(assert (=> b!135202 (= e!88028 e!88029)))

(declare-fun res!64872 () Bool)

(assert (=> b!135202 (=> (not res!64872) (not e!88029))))

(assert (=> b!135202 (= res!64872 (and (or (not ((_ is Cons!1706) (toList!851 lt!69484))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69484))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1706) (toList!851 lt!69484)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69484))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135203 () Bool)

(assert (=> b!135203 (= e!88029 (containsKey!174 (t!6152 (toList!851 lt!69484)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41983 (not res!64871)) b!135202))

(assert (= (and b!135202 res!64872) b!135203))

(declare-fun m!160661 () Bool)

(assert (=> b!135203 m!160661))

(assert (=> d!40521 d!41983))

(declare-fun d!41985 () Bool)

(declare-fun res!64876 () Bool)

(declare-fun e!88030 () Bool)

(assert (=> d!41985 (=> (not res!64876) (not e!88030))))

(assert (=> d!41985 (= res!64876 (validMask!0 (mask!7163 (_2!1304 lt!69440))))))

(assert (=> d!41985 (= (simpleValid!92 (_2!1304 lt!69440)) e!88030)))

(declare-fun b!135204 () Bool)

(declare-fun res!64873 () Bool)

(assert (=> b!135204 (=> (not res!64873) (not e!88030))))

(assert (=> b!135204 (= res!64873 (and (= (size!2519 (_values!2847 (_2!1304 lt!69440))) (bvadd (mask!7163 (_2!1304 lt!69440)) #b00000000000000000000000000000001)) (= (size!2518 (_keys!4612 (_2!1304 lt!69440))) (size!2519 (_values!2847 (_2!1304 lt!69440)))) (bvsge (_size!597 (_2!1304 lt!69440)) #b00000000000000000000000000000000) (bvsle (_size!597 (_2!1304 lt!69440)) (bvadd (mask!7163 (_2!1304 lt!69440)) #b00000000000000000000000000000001))))))

(declare-fun b!135206 () Bool)

(declare-fun res!64875 () Bool)

(assert (=> b!135206 (=> (not res!64875) (not e!88030))))

(assert (=> b!135206 (= res!64875 (= (size!2524 (_2!1304 lt!69440)) (bvadd (_size!597 (_2!1304 lt!69440)) (bvsdiv (bvadd (extraKeys!2629 (_2!1304 lt!69440)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!135205 () Bool)

(declare-fun res!64874 () Bool)

(assert (=> b!135205 (=> (not res!64874) (not e!88030))))

(assert (=> b!135205 (= res!64874 (bvsge (size!2524 (_2!1304 lt!69440)) (_size!597 (_2!1304 lt!69440))))))

(declare-fun b!135207 () Bool)

(assert (=> b!135207 (= e!88030 (and (bvsge (extraKeys!2629 (_2!1304 lt!69440)) #b00000000000000000000000000000000) (bvsle (extraKeys!2629 (_2!1304 lt!69440)) #b00000000000000000000000000000011) (bvsge (_vacant!597 (_2!1304 lt!69440)) #b00000000000000000000000000000000)))))

(assert (= (and d!41985 res!64876) b!135204))

(assert (= (and b!135204 res!64873) b!135205))

(assert (= (and b!135205 res!64874) b!135206))

(assert (= (and b!135206 res!64875) b!135207))

(declare-fun m!160663 () Bool)

(assert (=> d!41985 m!160663))

(declare-fun m!160665 () Bool)

(assert (=> b!135206 m!160665))

(assert (=> b!135205 m!160665))

(assert (=> d!40637 d!41985))

(assert (=> b!133981 d!40427))

(declare-fun d!41987 () Bool)

(declare-fun res!64877 () Bool)

(declare-fun e!88031 () Bool)

(assert (=> d!41987 (=> res!64877 e!88031)))

(assert (=> d!41987 (= res!64877 (and ((_ is Cons!1706) (toList!851 lt!69179)) (= (_1!1303 (h!2311 (toList!851 lt!69179))) lt!69190)))))

(assert (=> d!41987 (= (containsKey!174 (toList!851 lt!69179) lt!69190) e!88031)))

(declare-fun b!135208 () Bool)

(declare-fun e!88032 () Bool)

(assert (=> b!135208 (= e!88031 e!88032)))

(declare-fun res!64878 () Bool)

(assert (=> b!135208 (=> (not res!64878) (not e!88032))))

(assert (=> b!135208 (= res!64878 (and (or (not ((_ is Cons!1706) (toList!851 lt!69179))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69179))) lt!69190)) ((_ is Cons!1706) (toList!851 lt!69179)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69179))) lt!69190)))))

(declare-fun b!135209 () Bool)

(assert (=> b!135209 (= e!88032 (containsKey!174 (t!6152 (toList!851 lt!69179)) lt!69190))))

(assert (= (and d!41987 (not res!64877)) b!135208))

(assert (= (and b!135208 res!64878) b!135209))

(declare-fun m!160667 () Bool)

(assert (=> b!135209 m!160667))

(assert (=> d!40875 d!41987))

(declare-fun d!41989 () Bool)

(assert (=> d!41989 (isDefined!124 (getValueByKey!170 (toList!851 lt!69327) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun lt!70574 () Unit!4132)

(assert (=> d!41989 (= lt!70574 (choose!826 (toList!851 lt!69327) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun e!88033 () Bool)

(assert (=> d!41989 e!88033))

(declare-fun res!64879 () Bool)

(assert (=> d!41989 (=> (not res!64879) (not e!88033))))

(assert (=> d!41989 (= res!64879 (isStrictlySorted!317 (toList!851 lt!69327)))))

(assert (=> d!41989 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69327) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!70574)))

(declare-fun b!135210 () Bool)

(assert (=> b!135210 (= e!88033 (containsKey!174 (toList!851 lt!69327) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!41989 res!64879) b!135210))

(assert (=> d!41989 m!156411))

(assert (=> d!41989 m!156411))

(assert (=> d!41989 m!158211))

(declare-fun m!160669 () Bool)

(assert (=> d!41989 m!160669))

(declare-fun m!160671 () Bool)

(assert (=> d!41989 m!160671))

(assert (=> b!135210 m!158207))

(assert (=> b!133874 d!41989))

(declare-fun d!41991 () Bool)

(assert (=> d!41991 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69327) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69327) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun bs!5649 () Bool)

(assert (= bs!5649 d!41991))

(assert (=> bs!5649 m!156411))

(declare-fun m!160673 () Bool)

(assert (=> bs!5649 m!160673))

(assert (=> b!133874 d!41991))

(assert (=> b!133874 d!40985))

(declare-fun d!41993 () Bool)

(declare-fun e!88034 () Bool)

(assert (=> d!41993 e!88034))

(declare-fun res!64880 () Bool)

(assert (=> d!41993 (=> res!64880 e!88034)))

(declare-fun lt!70576 () Bool)

(assert (=> d!41993 (= res!64880 (not lt!70576))))

(declare-fun lt!70578 () Bool)

(assert (=> d!41993 (= lt!70576 lt!70578)))

(declare-fun lt!70575 () Unit!4132)

(declare-fun e!88035 () Unit!4132)

(assert (=> d!41993 (= lt!70575 e!88035)))

(declare-fun c!25284 () Bool)

(assert (=> d!41993 (= c!25284 lt!70578)))

(assert (=> d!41993 (= lt!70578 (containsKey!174 (toList!851 lt!69832) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41993 (= (contains!886 lt!69832 (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) lt!70576)))

(declare-fun b!135211 () Bool)

(declare-fun lt!70577 () Unit!4132)

(assert (=> b!135211 (= e!88035 lt!70577)))

(assert (=> b!135211 (= lt!70577 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69832) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> b!135211 (isDefined!124 (getValueByKey!170 (toList!851 lt!69832) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135212 () Bool)

(declare-fun Unit!4242 () Unit!4132)

(assert (=> b!135212 (= e!88035 Unit!4242)))

(declare-fun b!135213 () Bool)

(assert (=> b!135213 (= e!88034 (isDefined!124 (getValueByKey!170 (toList!851 lt!69832) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (= (and d!41993 c!25284) b!135211))

(assert (= (and d!41993 (not c!25284)) b!135212))

(assert (= (and d!41993 (not res!64880)) b!135213))

(declare-fun m!160675 () Bool)

(assert (=> d!41993 m!160675))

(declare-fun m!160677 () Bool)

(assert (=> b!135211 m!160677))

(assert (=> b!135211 m!157713))

(assert (=> b!135211 m!157713))

(declare-fun m!160679 () Bool)

(assert (=> b!135211 m!160679))

(assert (=> b!135213 m!157713))

(assert (=> b!135213 m!157713))

(assert (=> b!135213 m!160679))

(assert (=> d!40725 d!41993))

(declare-fun c!25285 () Bool)

(declare-fun d!41995 () Bool)

(assert (=> d!41995 (= c!25285 (and ((_ is Cons!1706) lt!69830) (= (_1!1303 (h!2311 lt!69830)) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun e!88036 () Option!176)

(assert (=> d!41995 (= (getValueByKey!170 lt!69830 (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) e!88036)))

(declare-fun e!88037 () Option!176)

(declare-fun b!135216 () Bool)

(assert (=> b!135216 (= e!88037 (getValueByKey!170 (t!6152 lt!69830) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135215 () Bool)

(assert (=> b!135215 (= e!88036 e!88037)))

(declare-fun c!25286 () Bool)

(assert (=> b!135215 (= c!25286 (and ((_ is Cons!1706) lt!69830) (not (= (_1!1303 (h!2311 lt!69830)) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))))

(declare-fun b!135214 () Bool)

(assert (=> b!135214 (= e!88036 (Some!175 (_2!1303 (h!2311 lt!69830))))))

(declare-fun b!135217 () Bool)

(assert (=> b!135217 (= e!88037 None!174)))

(assert (= (and d!41995 c!25285) b!135214))

(assert (= (and d!41995 (not c!25285)) b!135215))

(assert (= (and b!135215 c!25286) b!135216))

(assert (= (and b!135215 (not c!25286)) b!135217))

(declare-fun m!160681 () Bool)

(assert (=> b!135216 m!160681))

(assert (=> d!40725 d!41995))

(declare-fun d!41997 () Bool)

(assert (=> d!41997 (= (getValueByKey!170 lt!69830 (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!70579 () Unit!4132)

(assert (=> d!41997 (= lt!70579 (choose!834 lt!69830 (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun e!88038 () Bool)

(assert (=> d!41997 e!88038))

(declare-fun res!64881 () Bool)

(assert (=> d!41997 (=> (not res!64881) (not e!88038))))

(assert (=> d!41997 (= res!64881 (isStrictlySorted!317 lt!69830))))

(assert (=> d!41997 (= (lemmaContainsTupThenGetReturnValue!88 lt!69830 (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) lt!70579)))

(declare-fun b!135218 () Bool)

(declare-fun res!64882 () Bool)

(assert (=> b!135218 (=> (not res!64882) (not e!88038))))

(assert (=> b!135218 (= res!64882 (containsKey!174 lt!69830 (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135219 () Bool)

(assert (=> b!135219 (= e!88038 (contains!889 lt!69830 (tuple2!2585 (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (= (and d!41997 res!64881) b!135218))

(assert (= (and b!135218 res!64882) b!135219))

(assert (=> d!41997 m!157707))

(declare-fun m!160683 () Bool)

(assert (=> d!41997 m!160683))

(declare-fun m!160685 () Bool)

(assert (=> d!41997 m!160685))

(declare-fun m!160687 () Bool)

(assert (=> b!135218 m!160687))

(declare-fun m!160689 () Bool)

(assert (=> b!135219 m!160689))

(assert (=> d!40725 d!41997))

(declare-fun e!88043 () List!1710)

(declare-fun b!135220 () Bool)

(assert (=> b!135220 (= e!88043 (insertStrictlySorted!91 (t!6152 (toList!851 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655)))) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135221 () Bool)

(declare-fun e!88042 () List!1710)

(declare-fun call!14857 () List!1710)

(assert (=> b!135221 (= e!88042 call!14857)))

(declare-fun b!135222 () Bool)

(declare-fun res!64884 () Bool)

(declare-fun e!88040 () Bool)

(assert (=> b!135222 (=> (not res!64884) (not e!88040))))

(declare-fun lt!70580 () List!1710)

(assert (=> b!135222 (= res!64884 (containsKey!174 lt!70580 (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun c!25288 () Bool)

(declare-fun bm!14852 () Bool)

(assert (=> bm!14852 (= call!14857 ($colon$colon!91 e!88043 (ite c!25288 (h!2311 (toList!851 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655)))) (tuple2!2585 (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))))

(declare-fun c!25289 () Bool)

(assert (=> bm!14852 (= c!25289 c!25288)))

(declare-fun c!25290 () Bool)

(declare-fun b!135223 () Bool)

(declare-fun c!25287 () Bool)

(assert (=> b!135223 (= e!88043 (ite c!25287 (t!6152 (toList!851 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655)))) (ite c!25290 (Cons!1706 (h!2311 (toList!851 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655)))) (t!6152 (toList!851 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655))))) Nil!1707)))))

(declare-fun d!41999 () Bool)

(assert (=> d!41999 e!88040))

(declare-fun res!64883 () Bool)

(assert (=> d!41999 (=> (not res!64883) (not e!88040))))

(assert (=> d!41999 (= res!64883 (isStrictlySorted!317 lt!70580))))

(assert (=> d!41999 (= lt!70580 e!88042)))

(assert (=> d!41999 (= c!25288 (and ((_ is Cons!1706) (toList!851 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655)))) (bvslt (_1!1303 (h!2311 (toList!851 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655))))) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (=> d!41999 (isStrictlySorted!317 (toList!851 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655))))))

(assert (=> d!41999 (= (insertStrictlySorted!91 (toList!851 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655))) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) lt!70580)))

(declare-fun b!135224 () Bool)

(declare-fun e!88039 () List!1710)

(assert (=> b!135224 (= e!88042 e!88039)))

(assert (=> b!135224 (= c!25287 (and ((_ is Cons!1706) (toList!851 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655)))) (= (_1!1303 (h!2311 (toList!851 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655))))) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!135225 () Bool)

(declare-fun e!88041 () List!1710)

(declare-fun call!14855 () List!1710)

(assert (=> b!135225 (= e!88041 call!14855)))

(declare-fun b!135226 () Bool)

(declare-fun call!14856 () List!1710)

(assert (=> b!135226 (= e!88039 call!14856)))

(declare-fun b!135227 () Bool)

(assert (=> b!135227 (= e!88040 (contains!889 lt!70580 (tuple2!2585 (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun bm!14853 () Bool)

(assert (=> bm!14853 (= call!14856 call!14857)))

(declare-fun bm!14854 () Bool)

(assert (=> bm!14854 (= call!14855 call!14856)))

(declare-fun b!135228 () Bool)

(assert (=> b!135228 (= c!25290 (and ((_ is Cons!1706) (toList!851 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655)))) (bvsgt (_1!1303 (h!2311 (toList!851 (ite c!24624 call!14653 (ite c!24622 call!14656 call!14655))))) (_1!1303 (ite (or c!24624 c!24622) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (=> b!135228 (= e!88039 e!88041)))

(declare-fun b!135229 () Bool)

(assert (=> b!135229 (= e!88041 call!14855)))

(assert (= (and d!41999 c!25288) b!135221))

(assert (= (and d!41999 (not c!25288)) b!135224))

(assert (= (and b!135224 c!25287) b!135226))

(assert (= (and b!135224 (not c!25287)) b!135228))

(assert (= (and b!135228 c!25290) b!135229))

(assert (= (and b!135228 (not c!25290)) b!135225))

(assert (= (or b!135229 b!135225) bm!14854))

(assert (= (or b!135226 bm!14854) bm!14853))

(assert (= (or b!135221 bm!14853) bm!14852))

(assert (= (and bm!14852 c!25289) b!135220))

(assert (= (and bm!14852 (not c!25289)) b!135223))

(assert (= (and d!41999 res!64883) b!135222))

(assert (= (and b!135222 res!64884) b!135227))

(declare-fun m!160691 () Bool)

(assert (=> b!135227 m!160691))

(declare-fun m!160693 () Bool)

(assert (=> b!135222 m!160693))

(declare-fun m!160695 () Bool)

(assert (=> b!135220 m!160695))

(declare-fun m!160697 () Bool)

(assert (=> d!41999 m!160697))

(declare-fun m!160699 () Bool)

(assert (=> d!41999 m!160699))

(declare-fun m!160701 () Bool)

(assert (=> bm!14852 m!160701))

(assert (=> d!40725 d!41999))

(declare-fun d!42001 () Bool)

(assert (=> d!42001 (isDefined!124 (getValueByKey!170 (toList!851 lt!69484) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!70581 () Unit!4132)

(assert (=> d!42001 (= lt!70581 (choose!826 (toList!851 lt!69484) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!88044 () Bool)

(assert (=> d!42001 e!88044))

(declare-fun res!64885 () Bool)

(assert (=> d!42001 (=> (not res!64885) (not e!88044))))

(assert (=> d!42001 (= res!64885 (isStrictlySorted!317 (toList!851 lt!69484)))))

(assert (=> d!42001 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69484) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!70581)))

(declare-fun b!135230 () Bool)

(assert (=> b!135230 (= e!88044 (containsKey!174 (toList!851 lt!69484) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!42001 res!64885) b!135230))

(assert (=> d!42001 m!156125))

(assert (=> d!42001 m!156919))

(assert (=> d!42001 m!156919))

(assert (=> d!42001 m!158073))

(assert (=> d!42001 m!156125))

(declare-fun m!160703 () Bool)

(assert (=> d!42001 m!160703))

(assert (=> d!42001 m!158581))

(assert (=> b!135230 m!156125))

(assert (=> b!135230 m!158069))

(assert (=> b!133799 d!42001))

(declare-fun d!42003 () Bool)

(assert (=> d!42003 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69484) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69484) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5650 () Bool)

(assert (= bs!5650 d!42003))

(assert (=> bs!5650 m!156919))

(declare-fun m!160705 () Bool)

(assert (=> bs!5650 m!160705))

(assert (=> b!133799 d!42003))

(assert (=> b!133799 d!41319))

(declare-fun d!42005 () Bool)

(assert (=> d!42005 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) lt!69358))))

(declare-fun lt!70582 () Unit!4132)

(assert (=> d!42005 (= lt!70582 (choose!826 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) lt!69358))))

(declare-fun e!88045 () Bool)

(assert (=> d!42005 e!88045))

(declare-fun res!64886 () Bool)

(assert (=> d!42005 (=> (not res!64886) (not e!88045))))

(assert (=> d!42005 (= res!64886 (isStrictlySorted!317 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))))))

(assert (=> d!42005 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) lt!69358) lt!70582)))

(declare-fun b!135231 () Bool)

(assert (=> b!135231 (= e!88045 (containsKey!174 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) lt!69358))))

(assert (= (and d!42005 res!64886) b!135231))

(assert (=> d!42005 m!158335))

(assert (=> d!42005 m!158335))

(assert (=> d!42005 m!158337))

(declare-fun m!160707 () Bool)

(assert (=> d!42005 m!160707))

(declare-fun m!160709 () Bool)

(assert (=> d!42005 m!160709))

(assert (=> b!135231 m!158331))

(assert (=> b!133918 d!42005))

(declare-fun d!42007 () Bool)

(assert (=> d!42007 (= (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) lt!69358)) (not (isEmpty!413 (getValueByKey!170 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) lt!69358))))))

(declare-fun bs!5651 () Bool)

(assert (= bs!5651 d!42007))

(assert (=> bs!5651 m!158335))

(declare-fun m!160711 () Bool)

(assert (=> bs!5651 m!160711))

(assert (=> b!133918 d!42007))

(declare-fun d!42009 () Bool)

(declare-fun c!25291 () Bool)

(assert (=> d!42009 (= c!25291 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))) lt!69358)))))

(declare-fun e!88046 () Option!176)

(assert (=> d!42009 (= (getValueByKey!170 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) lt!69358) e!88046)))

(declare-fun b!135234 () Bool)

(declare-fun e!88047 () Option!176)

(assert (=> b!135234 (= e!88047 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))) lt!69358))))

(declare-fun b!135233 () Bool)

(assert (=> b!135233 (= e!88046 e!88047)))

(declare-fun c!25292 () Bool)

(assert (=> b!135233 (= c!25292 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))) lt!69358))))))

(declare-fun b!135232 () Bool)

(assert (=> b!135232 (= e!88046 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69352 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))))))))

(declare-fun b!135235 () Bool)

(assert (=> b!135235 (= e!88047 None!174)))

(assert (= (and d!42009 c!25291) b!135232))

(assert (= (and d!42009 (not c!25291)) b!135233))

(assert (= (and b!135233 c!25292) b!135234))

(assert (= (and b!135233 (not c!25292)) b!135235))

(declare-fun m!160713 () Bool)

(assert (=> b!135234 m!160713))

(assert (=> b!133918 d!42009))

(assert (=> b!133999 d!41297))

(declare-fun d!42011 () Bool)

(declare-fun e!88048 () Bool)

(assert (=> d!42011 e!88048))

(declare-fun res!64887 () Bool)

(assert (=> d!42011 (=> res!64887 e!88048)))

(declare-fun lt!70584 () Bool)

(assert (=> d!42011 (= res!64887 (not lt!70584))))

(declare-fun lt!70586 () Bool)

(assert (=> d!42011 (= lt!70584 lt!70586)))

(declare-fun lt!70583 () Unit!4132)

(declare-fun e!88049 () Unit!4132)

(assert (=> d!42011 (= lt!70583 e!88049)))

(declare-fun c!25293 () Bool)

(assert (=> d!42011 (= c!25293 lt!70586)))

(assert (=> d!42011 (= lt!70586 (containsKey!174 (toList!851 lt!69974) (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(assert (=> d!42011 (= (contains!886 lt!69974 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)) lt!70584)))

(declare-fun b!135236 () Bool)

(declare-fun lt!70585 () Unit!4132)

(assert (=> b!135236 (= e!88049 lt!70585)))

(assert (=> b!135236 (= lt!70585 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69974) (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(assert (=> b!135236 (isDefined!124 (getValueByKey!170 (toList!851 lt!69974) (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(declare-fun b!135237 () Bool)

(declare-fun Unit!4243 () Unit!4132)

(assert (=> b!135237 (= e!88049 Unit!4243)))

(declare-fun b!135238 () Bool)

(assert (=> b!135238 (= e!88048 (isDefined!124 (getValueByKey!170 (toList!851 lt!69974) (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000))))))

(assert (= (and d!42011 c!25293) b!135236))

(assert (= (and d!42011 (not c!25293)) b!135237))

(assert (= (and d!42011 (not res!64887)) b!135238))

(assert (=> d!42011 m!156913))

(declare-fun m!160715 () Bool)

(assert (=> d!42011 m!160715))

(assert (=> b!135236 m!156913))

(declare-fun m!160717 () Bool)

(assert (=> b!135236 m!160717))

(assert (=> b!135236 m!156913))

(declare-fun m!160719 () Bool)

(assert (=> b!135236 m!160719))

(assert (=> b!135236 m!160719))

(declare-fun m!160721 () Bool)

(assert (=> b!135236 m!160721))

(assert (=> b!135238 m!156913))

(assert (=> b!135238 m!160719))

(assert (=> b!135238 m!160719))

(assert (=> b!135238 m!160721))

(assert (=> b!133848 d!42011))

(declare-fun d!42013 () Bool)

(declare-fun c!25294 () Bool)

(assert (=> d!42013 (= c!25294 (and ((_ is Cons!1706) (toList!851 lt!69873)) (= (_1!1303 (h!2311 (toList!851 lt!69873))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun e!88050 () Option!176)

(assert (=> d!42013 (= (getValueByKey!170 (toList!851 lt!69873) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) e!88050)))

(declare-fun b!135241 () Bool)

(declare-fun e!88051 () Option!176)

(assert (=> b!135241 (= e!88051 (getValueByKey!170 (t!6152 (toList!851 lt!69873)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!135240 () Bool)

(assert (=> b!135240 (= e!88050 e!88051)))

(declare-fun c!25295 () Bool)

(assert (=> b!135240 (= c!25295 (and ((_ is Cons!1706) (toList!851 lt!69873)) (not (= (_1!1303 (h!2311 (toList!851 lt!69873))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!135239 () Bool)

(assert (=> b!135239 (= e!88050 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69873)))))))

(declare-fun b!135242 () Bool)

(assert (=> b!135242 (= e!88051 None!174)))

(assert (= (and d!42013 c!25294) b!135239))

(assert (= (and d!42013 (not c!25294)) b!135240))

(assert (= (and b!135240 c!25295) b!135241))

(assert (= (and b!135240 (not c!25295)) b!135242))

(declare-fun m!160723 () Bool)

(assert (=> b!135241 m!160723))

(assert (=> b!133672 d!42013))

(declare-fun lt!70587 () Bool)

(declare-fun d!42015 () Bool)

(assert (=> d!42015 (= lt!70587 (select (content!132 lt!69457) (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) lt!69450)))))

(declare-fun e!88053 () Bool)

(assert (=> d!42015 (= lt!70587 e!88053)))

(declare-fun res!64889 () Bool)

(assert (=> d!42015 (=> (not res!64889) (not e!88053))))

(assert (=> d!42015 (= res!64889 ((_ is Cons!1707) lt!69457))))

(assert (=> d!42015 (= (contains!888 lt!69457 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) lt!69450)) lt!70587)))

(declare-fun b!135243 () Bool)

(declare-fun e!88052 () Bool)

(assert (=> b!135243 (= e!88053 e!88052)))

(declare-fun res!64888 () Bool)

(assert (=> b!135243 (=> res!64888 e!88052)))

(assert (=> b!135243 (= res!64888 (= (h!2312 lt!69457) (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) lt!69450)))))

(declare-fun b!135244 () Bool)

(assert (=> b!135244 (= e!88052 (contains!888 (t!6153 lt!69457) (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) lt!69450)))))

(assert (= (and d!42015 res!64889) b!135243))

(assert (= (and b!135243 (not res!64888)) b!135244))

(declare-fun m!160725 () Bool)

(assert (=> d!42015 m!160725))

(assert (=> d!42015 m!157189))

(declare-fun m!160727 () Bool)

(assert (=> d!42015 m!160727))

(assert (=> b!135244 m!157189))

(declare-fun m!160729 () Bool)

(assert (=> b!135244 m!160729))

(assert (=> b!133419 d!42015))

(declare-fun d!42017 () Bool)

(assert (=> d!42017 (isDefined!124 (getValueByKey!170 (toList!851 lt!69202) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70588 () Unit!4132)

(assert (=> d!42017 (= lt!70588 (choose!826 (toList!851 lt!69202) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88054 () Bool)

(assert (=> d!42017 e!88054))

(declare-fun res!64890 () Bool)

(assert (=> d!42017 (=> (not res!64890) (not e!88054))))

(assert (=> d!42017 (= res!64890 (isStrictlySorted!317 (toList!851 lt!69202)))))

(assert (=> d!42017 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69202) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70588)))

(declare-fun b!135245 () Bool)

(assert (=> b!135245 (= e!88054 (containsKey!174 (toList!851 lt!69202) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42017 res!64890) b!135245))

(assert (=> d!42017 m!156113))

(assert (=> d!42017 m!156113))

(assert (=> d!42017 m!157975))

(declare-fun m!160731 () Bool)

(assert (=> d!42017 m!160731))

(declare-fun m!160733 () Bool)

(assert (=> d!42017 m!160733))

(assert (=> b!135245 m!157971))

(assert (=> b!133732 d!42017))

(declare-fun d!42019 () Bool)

(assert (=> d!42019 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69202) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69202) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bs!5652 () Bool)

(assert (= bs!5652 d!42019))

(assert (=> bs!5652 m!156113))

(declare-fun m!160735 () Bool)

(assert (=> bs!5652 m!160735))

(assert (=> b!133732 d!42019))

(assert (=> b!133732 d!40639))

(declare-fun d!42021 () Bool)

(assert (=> d!42021 (isDefined!124 (getValueByKey!170 (toList!851 lt!69250) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70589 () Unit!4132)

(assert (=> d!42021 (= lt!70589 (choose!826 (toList!851 lt!69250) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88055 () Bool)

(assert (=> d!42021 e!88055))

(declare-fun res!64891 () Bool)

(assert (=> d!42021 (=> (not res!64891) (not e!88055))))

(assert (=> d!42021 (= res!64891 (isStrictlySorted!317 (toList!851 lt!69250)))))

(assert (=> d!42021 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69250) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70589)))

(declare-fun b!135246 () Bool)

(assert (=> b!135246 (= e!88055 (containsKey!174 (toList!851 lt!69250) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42021 res!64891) b!135246))

(assert (=> d!42021 m!157543))

(assert (=> d!42021 m!157543))

(assert (=> d!42021 m!157545))

(declare-fun m!160737 () Bool)

(assert (=> d!42021 m!160737))

(assert (=> d!42021 m!159395))

(assert (=> b!135246 m!157539))

(assert (=> b!133573 d!42021))

(declare-fun d!42023 () Bool)

(assert (=> d!42023 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69250) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69250) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5653 () Bool)

(assert (= bs!5653 d!42023))

(assert (=> bs!5653 m!157543))

(declare-fun m!160739 () Bool)

(assert (=> bs!5653 m!160739))

(assert (=> b!133573 d!42023))

(assert (=> b!133573 d!41215))

(declare-fun d!42025 () Bool)

(declare-fun res!64892 () Bool)

(declare-fun e!88056 () Bool)

(assert (=> d!42025 (=> res!64892 e!88056)))

(assert (=> d!42025 (= res!64892 (and ((_ is Cons!1706) (toList!851 lt!69335)) (= (_1!1303 (h!2311 (toList!851 lt!69335))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!42025 (= (containsKey!174 (toList!851 lt!69335) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!88056)))

(declare-fun b!135247 () Bool)

(declare-fun e!88057 () Bool)

(assert (=> b!135247 (= e!88056 e!88057)))

(declare-fun res!64893 () Bool)

(assert (=> b!135247 (=> (not res!64893) (not e!88057))))

(assert (=> b!135247 (= res!64893 (and (or (not ((_ is Cons!1706) (toList!851 lt!69335))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69335))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Cons!1706) (toList!851 lt!69335)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69335))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135248 () Bool)

(assert (=> b!135248 (= e!88057 (containsKey!174 (t!6152 (toList!851 lt!69335)) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!42025 (not res!64892)) b!135247))

(assert (= (and b!135247 res!64893) b!135248))

(declare-fun m!160741 () Bool)

(assert (=> b!135248 m!160741))

(assert (=> d!40529 d!42025))

(declare-fun d!42027 () Bool)

(declare-fun c!25296 () Bool)

(assert (=> d!42027 (= c!25296 (and ((_ is Cons!1706) (toList!851 lt!69797)) (= (_1!1303 (h!2311 (toList!851 lt!69797))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun e!88058 () Option!176)

(assert (=> d!42027 (= (getValueByKey!170 (toList!851 lt!69797) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) e!88058)))

(declare-fun b!135251 () Bool)

(declare-fun e!88059 () Option!176)

(assert (=> b!135251 (= e!88059 (getValueByKey!170 (t!6152 (toList!851 lt!69797)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!135250 () Bool)

(assert (=> b!135250 (= e!88058 e!88059)))

(declare-fun c!25297 () Bool)

(assert (=> b!135250 (= c!25297 (and ((_ is Cons!1706) (toList!851 lt!69797)) (not (= (_1!1303 (h!2311 (toList!851 lt!69797))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!135249 () Bool)

(assert (=> b!135249 (= e!88058 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69797)))))))

(declare-fun b!135252 () Bool)

(assert (=> b!135252 (= e!88059 None!174)))

(assert (= (and d!42027 c!25296) b!135249))

(assert (= (and d!42027 (not c!25296)) b!135250))

(assert (= (and b!135250 c!25297) b!135251))

(assert (= (and b!135250 (not c!25297)) b!135252))

(declare-fun m!160743 () Bool)

(assert (=> b!135251 m!160743))

(assert (=> b!133588 d!42027))

(assert (=> b!133944 d!40519))

(declare-fun d!42029 () Bool)

(declare-fun res!64894 () Bool)

(declare-fun e!88060 () Bool)

(assert (=> d!42029 (=> res!64894 e!88060)))

(assert (=> d!42029 (= res!64894 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))) lt!69216)))))

(assert (=> d!42029 (= (containsKey!174 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) lt!69216) e!88060)))

(declare-fun b!135253 () Bool)

(declare-fun e!88061 () Bool)

(assert (=> b!135253 (= e!88060 e!88061)))

(declare-fun res!64895 () Bool)

(assert (=> b!135253 (=> (not res!64895) (not e!88061))))

(assert (=> b!135253 (= res!64895 (and (or (not ((_ is Cons!1706) (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))) (bvsle (_1!1303 (h!2311 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))) lt!69216)) ((_ is Cons!1706) (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))) (bvslt (_1!1303 (h!2311 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))) lt!69216)))))

(declare-fun b!135254 () Bool)

(assert (=> b!135254 (= e!88061 (containsKey!174 (t!6152 (toList!851 (+!163 lt!69210 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))) lt!69216))))

(assert (= (and d!42029 (not res!64894)) b!135253))

(assert (= (and b!135253 res!64895) b!135254))

(declare-fun m!160745 () Bool)

(assert (=> b!135254 m!160745))

(assert (=> d!40753 d!42029))

(declare-fun d!42031 () Bool)

(declare-fun e!88062 () Bool)

(assert (=> d!42031 e!88062))

(declare-fun res!64896 () Bool)

(assert (=> d!42031 (=> res!64896 e!88062)))

(declare-fun lt!70591 () Bool)

(assert (=> d!42031 (= res!64896 (not lt!70591))))

(declare-fun lt!70593 () Bool)

(assert (=> d!42031 (= lt!70591 lt!70593)))

(declare-fun lt!70590 () Unit!4132)

(declare-fun e!88063 () Unit!4132)

(assert (=> d!42031 (= lt!70590 e!88063)))

(declare-fun c!25298 () Bool)

(assert (=> d!42031 (= c!25298 lt!70593)))

(assert (=> d!42031 (= lt!70593 (containsKey!174 (toList!851 lt!69842) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42031 (= (contains!886 lt!69842 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70591)))

(declare-fun b!135255 () Bool)

(declare-fun lt!70592 () Unit!4132)

(assert (=> b!135255 (= e!88063 lt!70592)))

(assert (=> b!135255 (= lt!70592 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69842) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135255 (isDefined!124 (getValueByKey!170 (toList!851 lt!69842) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135256 () Bool)

(declare-fun Unit!4244 () Unit!4132)

(assert (=> b!135256 (= e!88063 Unit!4244)))

(declare-fun b!135257 () Bool)

(assert (=> b!135257 (= e!88062 (isDefined!124 (getValueByKey!170 (toList!851 lt!69842) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42031 c!25298) b!135255))

(assert (= (and d!42031 (not c!25298)) b!135256))

(assert (= (and d!42031 (not res!64896)) b!135257))

(declare-fun m!160747 () Bool)

(assert (=> d!42031 m!160747))

(declare-fun m!160749 () Bool)

(assert (=> b!135255 m!160749))

(declare-fun m!160751 () Bool)

(assert (=> b!135255 m!160751))

(assert (=> b!135255 m!160751))

(declare-fun m!160753 () Bool)

(assert (=> b!135255 m!160753))

(assert (=> b!135257 m!160751))

(assert (=> b!135257 m!160751))

(assert (=> b!135257 m!160753))

(assert (=> b!133632 d!42031))

(declare-fun lt!70594 () Bool)

(declare-fun d!42033 () Bool)

(assert (=> d!42033 (= lt!70594 (select (content!133 (t!6152 (toList!851 lt!69327))) (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun e!88065 () Bool)

(assert (=> d!42033 (= lt!70594 e!88065)))

(declare-fun res!64897 () Bool)

(assert (=> d!42033 (=> (not res!64897) (not e!88065))))

(assert (=> d!42033 (= res!64897 ((_ is Cons!1706) (t!6152 (toList!851 lt!69327))))))

(assert (=> d!42033 (= (contains!889 (t!6152 (toList!851 lt!69327)) (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!70594)))

(declare-fun b!135258 () Bool)

(declare-fun e!88064 () Bool)

(assert (=> b!135258 (= e!88065 e!88064)))

(declare-fun res!64898 () Bool)

(assert (=> b!135258 (=> res!64898 e!88064)))

(assert (=> b!135258 (= res!64898 (= (h!2311 (t!6152 (toList!851 lt!69327))) (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!135259 () Bool)

(assert (=> b!135259 (= e!88064 (contains!889 (t!6152 (t!6152 (toList!851 lt!69327))) (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!42033 res!64897) b!135258))

(assert (= (and b!135258 (not res!64898)) b!135259))

(assert (=> d!42033 m!158567))

(declare-fun m!160755 () Bool)

(assert (=> d!42033 m!160755))

(declare-fun m!160757 () Bool)

(assert (=> b!135259 m!160757))

(assert (=> b!133873 d!42033))

(declare-fun d!42035 () Bool)

(assert (=> d!42035 (= (isEmpty!413 (getValueByKey!170 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) (not ((_ is Some!175) (getValueByKey!170 (toList!851 call!14583) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(assert (=> d!40525 d!42035))

(declare-fun d!42037 () Bool)

(declare-fun e!88066 () Bool)

(assert (=> d!42037 e!88066))

(declare-fun res!64900 () Bool)

(assert (=> d!42037 (=> (not res!64900) (not e!88066))))

(declare-fun lt!70597 () ListLongMap!1671)

(assert (=> d!42037 (= res!64900 (contains!886 lt!70597 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70595 () List!1710)

(assert (=> d!42037 (= lt!70597 (ListLongMap!1672 lt!70595))))

(declare-fun lt!70598 () Unit!4132)

(declare-fun lt!70596 () Unit!4132)

(assert (=> d!42037 (= lt!70598 lt!70596)))

(assert (=> d!42037 (= (getValueByKey!170 lt!70595 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42037 (= lt!70596 (lemmaContainsTupThenGetReturnValue!88 lt!70595 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42037 (= lt!70595 (insertStrictlySorted!91 (toList!851 call!14771) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42037 (= (+!163 call!14771 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70597)))

(declare-fun b!135260 () Bool)

(declare-fun res!64899 () Bool)

(assert (=> b!135260 (=> (not res!64899) (not e!88066))))

(assert (=> b!135260 (= res!64899 (= (getValueByKey!170 (toList!851 lt!70597) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135261 () Bool)

(assert (=> b!135261 (= e!88066 (contains!889 (toList!851 lt!70597) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42037 res!64900) b!135260))

(assert (= (and b!135260 res!64899) b!135261))

(declare-fun m!160759 () Bool)

(assert (=> d!42037 m!160759))

(declare-fun m!160761 () Bool)

(assert (=> d!42037 m!160761))

(declare-fun m!160763 () Bool)

(assert (=> d!42037 m!160763))

(declare-fun m!160765 () Bool)

(assert (=> d!42037 m!160765))

(declare-fun m!160767 () Bool)

(assert (=> b!135260 m!160767))

(declare-fun m!160769 () Bool)

(assert (=> b!135261 m!160769))

(assert (=> b!133958 d!42037))

(declare-fun d!42039 () Bool)

(assert (=> d!42039 (= (isEmpty!414 lt!69823) (isEmpty!415 (toList!851 lt!69823)))))

(declare-fun bs!5654 () Bool)

(assert (= bs!5654 d!42039))

(declare-fun m!160771 () Bool)

(assert (=> bs!5654 m!160771))

(assert (=> b!133606 d!42039))

(assert (=> d!40867 d!40869))

(declare-fun d!42041 () Bool)

(assert (=> d!42041 (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69508 #b00000000000000000000000000000000)))

(assert (=> d!42041 true))

(declare-fun _$60!362 () Unit!4132)

(assert (=> d!42041 (= (choose!13 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!69508 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) _$60!362)))

(declare-fun bs!5655 () Bool)

(assert (= bs!5655 d!42041))

(assert (=> bs!5655 m!156697))

(assert (=> d!40867 d!42041))

(declare-fun d!42043 () Bool)

(assert (=> d!42043 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69172) lt!69177)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69172) lt!69177))))))

(declare-fun bs!5656 () Bool)

(assert (= bs!5656 d!42043))

(assert (=> bs!5656 m!156395))

(declare-fun m!160773 () Bool)

(assert (=> bs!5656 m!160773))

(assert (=> b!133805 d!42043))

(assert (=> b!133805 d!40511))

(declare-fun d!42045 () Bool)

(assert (=> d!42045 (= (size!2524 (v!3192 (underlying!451 thiss!992))) (bvadd (_size!597 (v!3192 (underlying!451 thiss!992))) (bvsdiv (bvadd (extraKeys!2629 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!133345 d!42045))

(declare-fun d!42047 () Bool)

(declare-fun res!64901 () Bool)

(declare-fun e!88067 () Bool)

(assert (=> d!42047 (=> res!64901 e!88067)))

(assert (=> d!42047 (= res!64901 (or ((_ is Nil!1707) lt!69896) ((_ is Nil!1707) (t!6152 lt!69896))))))

(assert (=> d!42047 (= (isStrictlySorted!317 lt!69896) e!88067)))

(declare-fun b!135262 () Bool)

(declare-fun e!88068 () Bool)

(assert (=> b!135262 (= e!88067 e!88068)))

(declare-fun res!64902 () Bool)

(assert (=> b!135262 (=> (not res!64902) (not e!88068))))

(assert (=> b!135262 (= res!64902 (bvslt (_1!1303 (h!2311 lt!69896)) (_1!1303 (h!2311 (t!6152 lt!69896)))))))

(declare-fun b!135263 () Bool)

(assert (=> b!135263 (= e!88068 (isStrictlySorted!317 (t!6152 lt!69896)))))

(assert (= (and d!42047 (not res!64901)) b!135262))

(assert (= (and b!135262 res!64902) b!135263))

(declare-fun m!160775 () Bool)

(assert (=> b!135263 m!160775))

(assert (=> d!40811 d!42047))

(declare-fun d!42049 () Bool)

(declare-fun res!64903 () Bool)

(declare-fun e!88069 () Bool)

(assert (=> d!42049 (=> res!64903 e!88069)))

(assert (=> d!42049 (= res!64903 (or ((_ is Nil!1707) (toList!851 (ite c!24523 call!14580 call!14599))) ((_ is Nil!1707) (t!6152 (toList!851 (ite c!24523 call!14580 call!14599))))))))

(assert (=> d!42049 (= (isStrictlySorted!317 (toList!851 (ite c!24523 call!14580 call!14599))) e!88069)))

(declare-fun b!135264 () Bool)

(declare-fun e!88070 () Bool)

(assert (=> b!135264 (= e!88069 e!88070)))

(declare-fun res!64904 () Bool)

(assert (=> b!135264 (=> (not res!64904) (not e!88070))))

(assert (=> b!135264 (= res!64904 (bvslt (_1!1303 (h!2311 (toList!851 (ite c!24523 call!14580 call!14599)))) (_1!1303 (h!2311 (t!6152 (toList!851 (ite c!24523 call!14580 call!14599)))))))))

(declare-fun b!135265 () Bool)

(assert (=> b!135265 (= e!88070 (isStrictlySorted!317 (t!6152 (toList!851 (ite c!24523 call!14580 call!14599)))))))

(assert (= (and d!42049 (not res!64903)) b!135264))

(assert (= (and b!135264 res!64904) b!135265))

(declare-fun m!160777 () Bool)

(assert (=> b!135265 m!160777))

(assert (=> d!40811 d!42049))

(declare-fun d!42051 () Bool)

(declare-fun lt!70599 () Bool)

(assert (=> d!42051 (= lt!70599 (select (content!133 (toList!851 lt!70002)) (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))))

(declare-fun e!88072 () Bool)

(assert (=> d!42051 (= lt!70599 e!88072)))

(declare-fun res!64905 () Bool)

(assert (=> d!42051 (=> (not res!64905) (not e!88072))))

(assert (=> d!42051 (= res!64905 ((_ is Cons!1706) (toList!851 lt!70002)))))

(assert (=> d!42051 (= (contains!889 (toList!851 lt!70002) (tuple2!2585 lt!69356 (minValue!2719 newMap!16))) lt!70599)))

(declare-fun b!135266 () Bool)

(declare-fun e!88071 () Bool)

(assert (=> b!135266 (= e!88072 e!88071)))

(declare-fun res!64906 () Bool)

(assert (=> b!135266 (=> res!64906 e!88071)))

(assert (=> b!135266 (= res!64906 (= (h!2311 (toList!851 lt!70002)) (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))))

(declare-fun b!135267 () Bool)

(assert (=> b!135267 (= e!88071 (contains!889 (t!6152 (toList!851 lt!70002)) (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))))

(assert (= (and d!42051 res!64905) b!135266))

(assert (= (and b!135266 (not res!64906)) b!135267))

(declare-fun m!160779 () Bool)

(assert (=> d!42051 m!160779))

(declare-fun m!160781 () Bool)

(assert (=> d!42051 m!160781))

(declare-fun m!160783 () Bool)

(assert (=> b!135267 m!160783))

(assert (=> b!133911 d!42051))

(assert (=> d!40729 d!40731))

(declare-fun d!42053 () Bool)

(assert (=> d!42053 (= (apply!116 (+!163 lt!69213 (tuple2!2585 lt!69214 (minValue!2719 newMap!16))) lt!69224) (apply!116 lt!69213 lt!69224))))

(assert (=> d!42053 true))

(declare-fun _$34!986 () Unit!4132)

(assert (=> d!42053 (= (choose!828 lt!69213 lt!69214 (minValue!2719 newMap!16) lt!69224) _$34!986)))

(declare-fun bs!5657 () Bool)

(assert (= bs!5657 d!42053))

(assert (=> bs!5657 m!156155))

(assert (=> bs!5657 m!156155))

(assert (=> bs!5657 m!156177))

(assert (=> bs!5657 m!156175))

(assert (=> d!40729 d!42053))

(assert (=> d!40729 d!40745))

(declare-fun d!42055 () Bool)

(declare-fun e!88073 () Bool)

(assert (=> d!42055 e!88073))

(declare-fun res!64907 () Bool)

(assert (=> d!42055 (=> res!64907 e!88073)))

(declare-fun lt!70601 () Bool)

(assert (=> d!42055 (= res!64907 (not lt!70601))))

(declare-fun lt!70603 () Bool)

(assert (=> d!42055 (= lt!70601 lt!70603)))

(declare-fun lt!70600 () Unit!4132)

(declare-fun e!88074 () Unit!4132)

(assert (=> d!42055 (= lt!70600 e!88074)))

(declare-fun c!25299 () Bool)

(assert (=> d!42055 (= c!25299 lt!70603)))

(assert (=> d!42055 (= lt!70603 (containsKey!174 (toList!851 lt!69213) lt!69224))))

(assert (=> d!42055 (= (contains!886 lt!69213 lt!69224) lt!70601)))

(declare-fun b!135268 () Bool)

(declare-fun lt!70602 () Unit!4132)

(assert (=> b!135268 (= e!88074 lt!70602)))

(assert (=> b!135268 (= lt!70602 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69213) lt!69224))))

(assert (=> b!135268 (isDefined!124 (getValueByKey!170 (toList!851 lt!69213) lt!69224))))

(declare-fun b!135269 () Bool)

(declare-fun Unit!4245 () Unit!4132)

(assert (=> b!135269 (= e!88074 Unit!4245)))

(declare-fun b!135270 () Bool)

(assert (=> b!135270 (= e!88073 (isDefined!124 (getValueByKey!170 (toList!851 lt!69213) lt!69224)))))

(assert (= (and d!42055 c!25299) b!135268))

(assert (= (and d!42055 (not c!25299)) b!135269))

(assert (= (and d!42055 (not res!64907)) b!135270))

(declare-fun m!160785 () Bool)

(assert (=> d!42055 m!160785))

(declare-fun m!160787 () Bool)

(assert (=> b!135268 m!160787))

(assert (=> b!135268 m!157789))

(assert (=> b!135268 m!157789))

(declare-fun m!160789 () Bool)

(assert (=> b!135268 m!160789))

(assert (=> b!135270 m!157789))

(assert (=> b!135270 m!157789))

(assert (=> b!135270 m!160789))

(assert (=> d!40729 d!42055))

(assert (=> d!40729 d!40747))

(declare-fun d!42057 () Bool)

(assert (=> d!42057 (isDefined!124 (getValueByKey!170 (toList!851 lt!69362) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70604 () Unit!4132)

(assert (=> d!42057 (= lt!70604 (choose!826 (toList!851 lt!69362) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88075 () Bool)

(assert (=> d!42057 e!88075))

(declare-fun res!64908 () Bool)

(assert (=> d!42057 (=> (not res!64908) (not e!88075))))

(assert (=> d!42057 (= res!64908 (isStrictlySorted!317 (toList!851 lt!69362)))))

(assert (=> d!42057 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69362) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70604)))

(declare-fun b!135271 () Bool)

(assert (=> b!135271 (= e!88075 (containsKey!174 (toList!851 lt!69362) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42057 res!64908) b!135271))

(assert (=> d!42057 m!156839))

(assert (=> d!42057 m!156839))

(assert (=> d!42057 m!158199))

(declare-fun m!160791 () Bool)

(assert (=> d!42057 m!160791))

(assert (=> d!42057 m!160617))

(assert (=> b!135271 m!158195))

(assert (=> b!133869 d!42057))

(declare-fun d!42059 () Bool)

(assert (=> d!42059 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69362) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69362) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5658 () Bool)

(assert (= bs!5658 d!42059))

(assert (=> bs!5658 m!156839))

(declare-fun m!160793 () Bool)

(assert (=> bs!5658 m!160793))

(assert (=> b!133869 d!42059))

(declare-fun d!42061 () Bool)

(declare-fun c!25300 () Bool)

(assert (=> d!42061 (= c!25300 (and ((_ is Cons!1706) (toList!851 lt!69362)) (= (_1!1303 (h!2311 (toList!851 lt!69362))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!88076 () Option!176)

(assert (=> d!42061 (= (getValueByKey!170 (toList!851 lt!69362) #b0000000000000000000000000000000000000000000000000000000000000000) e!88076)))

(declare-fun b!135274 () Bool)

(declare-fun e!88077 () Option!176)

(assert (=> b!135274 (= e!88077 (getValueByKey!170 (t!6152 (toList!851 lt!69362)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135273 () Bool)

(assert (=> b!135273 (= e!88076 e!88077)))

(declare-fun c!25301 () Bool)

(assert (=> b!135273 (= c!25301 (and ((_ is Cons!1706) (toList!851 lt!69362)) (not (= (_1!1303 (h!2311 (toList!851 lt!69362))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!135272 () Bool)

(assert (=> b!135272 (= e!88076 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69362)))))))

(declare-fun b!135275 () Bool)

(assert (=> b!135275 (= e!88077 None!174)))

(assert (= (and d!42061 c!25300) b!135272))

(assert (= (and d!42061 (not c!25300)) b!135273))

(assert (= (and b!135273 c!25301) b!135274))

(assert (= (and b!135273 (not c!25301)) b!135275))

(declare-fun m!160795 () Bool)

(assert (=> b!135274 m!160795))

(assert (=> b!133869 d!42061))

(declare-fun d!42063 () Bool)

(declare-fun e!88078 () Bool)

(assert (=> d!42063 e!88078))

(declare-fun res!64909 () Bool)

(assert (=> d!42063 (=> res!64909 e!88078)))

(declare-fun lt!70606 () Bool)

(assert (=> d!42063 (= res!64909 (not lt!70606))))

(declare-fun lt!70608 () Bool)

(assert (=> d!42063 (= lt!70606 lt!70608)))

(declare-fun lt!70605 () Unit!4132)

(declare-fun e!88079 () Unit!4132)

(assert (=> d!42063 (= lt!70605 e!88079)))

(declare-fun c!25302 () Bool)

(assert (=> d!42063 (= c!25302 lt!70608)))

(assert (=> d!42063 (= lt!70608 (containsKey!174 (toList!851 lt!70041) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42063 (= (contains!886 lt!70041 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70606)))

(declare-fun b!135276 () Bool)

(declare-fun lt!70607 () Unit!4132)

(assert (=> b!135276 (= e!88079 lt!70607)))

(assert (=> b!135276 (= lt!70607 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!70041) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!135276 (isDefined!124 (getValueByKey!170 (toList!851 lt!70041) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135277 () Bool)

(declare-fun Unit!4246 () Unit!4132)

(assert (=> b!135277 (= e!88079 Unit!4246)))

(declare-fun b!135278 () Bool)

(assert (=> b!135278 (= e!88078 (isDefined!124 (getValueByKey!170 (toList!851 lt!70041) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42063 c!25302) b!135276))

(assert (= (and d!42063 (not c!25302)) b!135277))

(assert (= (and d!42063 (not res!64909)) b!135278))

(declare-fun m!160797 () Bool)

(assert (=> d!42063 m!160797))

(declare-fun m!160799 () Bool)

(assert (=> b!135276 m!160799))

(assert (=> b!135276 m!158417))

(assert (=> b!135276 m!158417))

(declare-fun m!160801 () Bool)

(assert (=> b!135276 m!160801))

(assert (=> b!135278 m!158417))

(assert (=> b!135278 m!158417))

(assert (=> b!135278 m!160801))

(assert (=> d!40965 d!42063))

(declare-fun c!25303 () Bool)

(declare-fun d!42065 () Bool)

(assert (=> d!42065 (= c!25303 (and ((_ is Cons!1706) lt!70039) (= (_1!1303 (h!2311 lt!70039)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88080 () Option!176)

(assert (=> d!42065 (= (getValueByKey!170 lt!70039 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88080)))

(declare-fun b!135281 () Bool)

(declare-fun e!88081 () Option!176)

(assert (=> b!135281 (= e!88081 (getValueByKey!170 (t!6152 lt!70039) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135280 () Bool)

(assert (=> b!135280 (= e!88080 e!88081)))

(declare-fun c!25304 () Bool)

(assert (=> b!135280 (= c!25304 (and ((_ is Cons!1706) lt!70039) (not (= (_1!1303 (h!2311 lt!70039)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135279 () Bool)

(assert (=> b!135279 (= e!88080 (Some!175 (_2!1303 (h!2311 lt!70039))))))

(declare-fun b!135282 () Bool)

(assert (=> b!135282 (= e!88081 None!174)))

(assert (= (and d!42065 c!25303) b!135279))

(assert (= (and d!42065 (not c!25303)) b!135280))

(assert (= (and b!135280 c!25304) b!135281))

(assert (= (and b!135280 (not c!25304)) b!135282))

(declare-fun m!160803 () Bool)

(assert (=> b!135281 m!160803))

(assert (=> d!40965 d!42065))

(declare-fun d!42067 () Bool)

(assert (=> d!42067 (= (getValueByKey!170 lt!70039 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70609 () Unit!4132)

(assert (=> d!42067 (= lt!70609 (choose!834 lt!70039 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88082 () Bool)

(assert (=> d!42067 e!88082))

(declare-fun res!64910 () Bool)

(assert (=> d!42067 (=> (not res!64910) (not e!88082))))

(assert (=> d!42067 (= res!64910 (isStrictlySorted!317 lt!70039))))

(assert (=> d!42067 (= (lemmaContainsTupThenGetReturnValue!88 lt!70039 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70609)))

(declare-fun b!135283 () Bool)

(declare-fun res!64911 () Bool)

(assert (=> b!135283 (=> (not res!64911) (not e!88082))))

(assert (=> b!135283 (= res!64911 (containsKey!174 lt!70039 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135284 () Bool)

(assert (=> b!135284 (= e!88082 (contains!889 lt!70039 (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42067 res!64910) b!135283))

(assert (= (and b!135283 res!64911) b!135284))

(assert (=> d!42067 m!158411))

(declare-fun m!160805 () Bool)

(assert (=> d!42067 m!160805))

(declare-fun m!160807 () Bool)

(assert (=> d!42067 m!160807))

(declare-fun m!160809 () Bool)

(assert (=> b!135283 m!160809))

(declare-fun m!160811 () Bool)

(assert (=> b!135284 m!160811))

(assert (=> d!40965 d!42067))

(declare-fun e!88087 () List!1710)

(declare-fun b!135285 () Bool)

(assert (=> b!135285 (= e!88087 (insertStrictlySorted!91 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135286 () Bool)

(declare-fun e!88086 () List!1710)

(declare-fun call!14860 () List!1710)

(assert (=> b!135286 (= e!88086 call!14860)))

(declare-fun b!135287 () Bool)

(declare-fun res!64913 () Bool)

(declare-fun e!88084 () Bool)

(assert (=> b!135287 (=> (not res!64913) (not e!88084))))

(declare-fun lt!70610 () List!1710)

(assert (=> b!135287 (= res!64913 (containsKey!174 lt!70610 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14855 () Bool)

(declare-fun c!25306 () Bool)

(assert (=> bm!14855 (= call!14860 ($colon$colon!91 e!88087 (ite c!25306 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25307 () Bool)

(assert (=> bm!14855 (= c!25307 c!25306)))

(declare-fun b!135288 () Bool)

(declare-fun c!25308 () Bool)

(declare-fun c!25305 () Bool)

(assert (=> b!135288 (= e!88087 (ite c!25305 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (ite c!25308 (Cons!1706 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) Nil!1707)))))

(declare-fun d!42069 () Bool)

(assert (=> d!42069 e!88084))

(declare-fun res!64912 () Bool)

(assert (=> d!42069 (=> (not res!64912) (not e!88084))))

(assert (=> d!42069 (= res!64912 (isStrictlySorted!317 lt!70610))))

(assert (=> d!42069 (= lt!70610 e!88086)))

(assert (=> d!42069 (= c!25306 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvslt (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42069 (isStrictlySorted!317 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))

(assert (=> d!42069 (= (insertStrictlySorted!91 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70610)))

(declare-fun b!135289 () Bool)

(declare-fun e!88083 () List!1710)

(assert (=> b!135289 (= e!88086 e!88083)))

(assert (=> b!135289 (= c!25305 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135290 () Bool)

(declare-fun e!88085 () List!1710)

(declare-fun call!14858 () List!1710)

(assert (=> b!135290 (= e!88085 call!14858)))

(declare-fun b!135291 () Bool)

(declare-fun call!14859 () List!1710)

(assert (=> b!135291 (= e!88083 call!14859)))

(declare-fun b!135292 () Bool)

(assert (=> b!135292 (= e!88084 (contains!889 lt!70610 (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14856 () Bool)

(assert (=> bm!14856 (= call!14859 call!14860)))

(declare-fun bm!14857 () Bool)

(assert (=> bm!14857 (= call!14858 call!14859)))

(declare-fun b!135293 () Bool)

(assert (=> b!135293 (= c!25308 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvsgt (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!135293 (= e!88083 e!88085)))

(declare-fun b!135294 () Bool)

(assert (=> b!135294 (= e!88085 call!14858)))

(assert (= (and d!42069 c!25306) b!135286))

(assert (= (and d!42069 (not c!25306)) b!135289))

(assert (= (and b!135289 c!25305) b!135291))

(assert (= (and b!135289 (not c!25305)) b!135293))

(assert (= (and b!135293 c!25308) b!135294))

(assert (= (and b!135293 (not c!25308)) b!135290))

(assert (= (or b!135294 b!135290) bm!14857))

(assert (= (or b!135291 bm!14857) bm!14856))

(assert (= (or b!135286 bm!14856) bm!14855))

(assert (= (and bm!14855 c!25307) b!135285))

(assert (= (and bm!14855 (not c!25307)) b!135288))

(assert (= (and d!42069 res!64912) b!135287))

(assert (= (and b!135287 res!64913) b!135292))

(declare-fun m!160813 () Bool)

(assert (=> b!135292 m!160813))

(declare-fun m!160815 () Bool)

(assert (=> b!135287 m!160815))

(declare-fun m!160817 () Bool)

(assert (=> b!135285 m!160817))

(declare-fun m!160819 () Bool)

(assert (=> d!42069 m!160819))

(declare-fun m!160821 () Bool)

(assert (=> d!42069 m!160821))

(declare-fun m!160823 () Bool)

(assert (=> bm!14855 m!160823))

(assert (=> d!40965 d!42069))

(declare-fun d!42071 () Bool)

(assert (=> d!42071 (= (isEmpty!414 lt!69609) (isEmpty!415 (toList!851 lt!69609)))))

(declare-fun bs!5659 () Bool)

(assert (= bs!5659 d!42071))

(declare-fun m!160825 () Bool)

(assert (=> bs!5659 m!160825))

(assert (=> b!133334 d!42071))

(declare-fun d!42073 () Bool)

(declare-fun e!88088 () Bool)

(assert (=> d!42073 e!88088))

(declare-fun res!64915 () Bool)

(assert (=> d!42073 (=> (not res!64915) (not e!88088))))

(declare-fun lt!70613 () ListLongMap!1671)

(assert (=> d!42073 (= res!64915 (contains!886 lt!70613 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70611 () List!1710)

(assert (=> d!42073 (= lt!70613 (ListLongMap!1672 lt!70611))))

(declare-fun lt!70614 () Unit!4132)

(declare-fun lt!70612 () Unit!4132)

(assert (=> d!42073 (= lt!70614 lt!70612)))

(assert (=> d!42073 (= (getValueByKey!170 lt!70611 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42073 (= lt!70612 (lemmaContainsTupThenGetReturnValue!88 lt!70611 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42073 (= lt!70611 (insertStrictlySorted!91 (toList!851 call!14720) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42073 (= (+!163 call!14720 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70613)))

(declare-fun b!135295 () Bool)

(declare-fun res!64914 () Bool)

(assert (=> b!135295 (=> (not res!64914) (not e!88088))))

(assert (=> b!135295 (= res!64914 (= (getValueByKey!170 (toList!851 lt!70613) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135296 () Bool)

(assert (=> b!135296 (= e!88088 (contains!889 (toList!851 lt!70613) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42073 res!64915) b!135295))

(assert (= (and b!135295 res!64914) b!135296))

(declare-fun m!160827 () Bool)

(assert (=> d!42073 m!160827))

(declare-fun m!160829 () Bool)

(assert (=> d!42073 m!160829))

(declare-fun m!160831 () Bool)

(assert (=> d!42073 m!160831))

(declare-fun m!160833 () Bool)

(assert (=> d!42073 m!160833))

(declare-fun m!160835 () Bool)

(assert (=> b!135295 m!160835))

(declare-fun m!160837 () Bool)

(assert (=> b!135296 m!160837))

(assert (=> b!133468 d!42073))

(declare-fun d!42075 () Bool)

(declare-fun e!88089 () Bool)

(assert (=> d!42075 e!88089))

(declare-fun res!64917 () Bool)

(assert (=> d!42075 (=> (not res!64917) (not e!88089))))

(declare-fun lt!70617 () ListLongMap!1671)

(assert (=> d!42075 (= res!64917 (contains!886 lt!70617 (_1!1303 (tuple2!2585 lt!69697 lt!69698))))))

(declare-fun lt!70615 () List!1710)

(assert (=> d!42075 (= lt!70617 (ListLongMap!1672 lt!70615))))

(declare-fun lt!70618 () Unit!4132)

(declare-fun lt!70616 () Unit!4132)

(assert (=> d!42075 (= lt!70618 lt!70616)))

(assert (=> d!42075 (= (getValueByKey!170 lt!70615 (_1!1303 (tuple2!2585 lt!69697 lt!69698))) (Some!175 (_2!1303 (tuple2!2585 lt!69697 lt!69698))))))

(assert (=> d!42075 (= lt!70616 (lemmaContainsTupThenGetReturnValue!88 lt!70615 (_1!1303 (tuple2!2585 lt!69697 lt!69698)) (_2!1303 (tuple2!2585 lt!69697 lt!69698))))))

(assert (=> d!42075 (= lt!70615 (insertStrictlySorted!91 (toList!851 lt!69694) (_1!1303 (tuple2!2585 lt!69697 lt!69698)) (_2!1303 (tuple2!2585 lt!69697 lt!69698))))))

(assert (=> d!42075 (= (+!163 lt!69694 (tuple2!2585 lt!69697 lt!69698)) lt!70617)))

(declare-fun b!135297 () Bool)

(declare-fun res!64916 () Bool)

(assert (=> b!135297 (=> (not res!64916) (not e!88089))))

(assert (=> b!135297 (= res!64916 (= (getValueByKey!170 (toList!851 lt!70617) (_1!1303 (tuple2!2585 lt!69697 lt!69698))) (Some!175 (_2!1303 (tuple2!2585 lt!69697 lt!69698)))))))

(declare-fun b!135298 () Bool)

(assert (=> b!135298 (= e!88089 (contains!889 (toList!851 lt!70617) (tuple2!2585 lt!69697 lt!69698)))))

(assert (= (and d!42075 res!64917) b!135297))

(assert (= (and b!135297 res!64916) b!135298))

(declare-fun m!160839 () Bool)

(assert (=> d!42075 m!160839))

(declare-fun m!160841 () Bool)

(assert (=> d!42075 m!160841))

(declare-fun m!160843 () Bool)

(assert (=> d!42075 m!160843))

(declare-fun m!160845 () Bool)

(assert (=> d!42075 m!160845))

(declare-fun m!160847 () Bool)

(assert (=> b!135297 m!160847))

(declare-fun m!160849 () Bool)

(assert (=> b!135298 m!160849))

(assert (=> b!133468 d!42075))

(declare-fun d!42077 () Bool)

(declare-fun e!88090 () Bool)

(assert (=> d!42077 e!88090))

(declare-fun res!64918 () Bool)

(assert (=> d!42077 (=> res!64918 e!88090)))

(declare-fun lt!70620 () Bool)

(assert (=> d!42077 (= res!64918 (not lt!70620))))

(declare-fun lt!70622 () Bool)

(assert (=> d!42077 (= lt!70620 lt!70622)))

(declare-fun lt!70619 () Unit!4132)

(declare-fun e!88091 () Unit!4132)

(assert (=> d!42077 (= lt!70619 e!88091)))

(declare-fun c!25309 () Bool)

(assert (=> d!42077 (= c!25309 lt!70622)))

(assert (=> d!42077 (= lt!70622 (containsKey!174 (toList!851 (+!163 lt!69694 (tuple2!2585 lt!69697 lt!69698))) lt!69699))))

(assert (=> d!42077 (= (contains!886 (+!163 lt!69694 (tuple2!2585 lt!69697 lt!69698)) lt!69699) lt!70620)))

(declare-fun b!135299 () Bool)

(declare-fun lt!70621 () Unit!4132)

(assert (=> b!135299 (= e!88091 lt!70621)))

(assert (=> b!135299 (= lt!70621 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69694 (tuple2!2585 lt!69697 lt!69698))) lt!69699))))

(assert (=> b!135299 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69694 (tuple2!2585 lt!69697 lt!69698))) lt!69699))))

(declare-fun b!135300 () Bool)

(declare-fun Unit!4247 () Unit!4132)

(assert (=> b!135300 (= e!88091 Unit!4247)))

(declare-fun b!135301 () Bool)

(assert (=> b!135301 (= e!88090 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69694 (tuple2!2585 lt!69697 lt!69698))) lt!69699)))))

(assert (= (and d!42077 c!25309) b!135299))

(assert (= (and d!42077 (not c!25309)) b!135300))

(assert (= (and d!42077 (not res!64918)) b!135301))

(declare-fun m!160851 () Bool)

(assert (=> d!42077 m!160851))

(declare-fun m!160853 () Bool)

(assert (=> b!135299 m!160853))

(declare-fun m!160855 () Bool)

(assert (=> b!135299 m!160855))

(assert (=> b!135299 m!160855))

(declare-fun m!160857 () Bool)

(assert (=> b!135299 m!160857))

(assert (=> b!135301 m!160855))

(assert (=> b!135301 m!160855))

(assert (=> b!135301 m!160857))

(assert (=> b!133468 d!42077))

(assert (=> b!133468 d!41039))

(declare-fun d!42079 () Bool)

(assert (=> d!42079 (not (contains!886 (+!163 lt!69694 (tuple2!2585 lt!69697 lt!69698)) lt!69699))))

(declare-fun lt!70623 () Unit!4132)

(assert (=> d!42079 (= lt!70623 (choose!835 lt!69694 lt!69697 lt!69698 lt!69699))))

(declare-fun e!88092 () Bool)

(assert (=> d!42079 e!88092))

(declare-fun res!64919 () Bool)

(assert (=> d!42079 (=> (not res!64919) (not e!88092))))

(assert (=> d!42079 (= res!64919 (not (contains!886 lt!69694 lt!69699)))))

(assert (=> d!42079 (= (addStillNotContains!62 lt!69694 lt!69697 lt!69698 lt!69699) lt!70623)))

(declare-fun b!135302 () Bool)

(assert (=> b!135302 (= e!88092 (not (= lt!69697 lt!69699)))))

(assert (= (and d!42079 res!64919) b!135302))

(assert (=> d!42079 m!157255))

(assert (=> d!42079 m!157255))

(assert (=> d!42079 m!157257))

(declare-fun m!160859 () Bool)

(assert (=> d!42079 m!160859))

(declare-fun m!160861 () Bool)

(assert (=> d!42079 m!160861))

(assert (=> b!133468 d!42079))

(declare-fun lt!70624 () Bool)

(declare-fun d!42081 () Bool)

(assert (=> d!42081 (= lt!70624 (select (content!133 (toList!851 lt!69726)) (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(declare-fun e!88094 () Bool)

(assert (=> d!42081 (= lt!70624 e!88094)))

(declare-fun res!64920 () Bool)

(assert (=> d!42081 (=> (not res!64920) (not e!88094))))

(assert (=> d!42081 (= res!64920 ((_ is Cons!1706) (toList!851 lt!69726)))))

(assert (=> d!42081 (= (contains!889 (toList!851 lt!69726) (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!70624)))

(declare-fun b!135303 () Bool)

(declare-fun e!88093 () Bool)

(assert (=> b!135303 (= e!88094 e!88093)))

(declare-fun res!64921 () Bool)

(assert (=> b!135303 (=> res!64921 e!88093)))

(assert (=> b!135303 (= res!64921 (= (h!2311 (toList!851 lt!69726)) (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(declare-fun b!135304 () Bool)

(assert (=> b!135304 (= e!88093 (contains!889 (t!6152 (toList!851 lt!69726)) (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(assert (= (and d!42081 res!64920) b!135303))

(assert (= (and b!135303 (not res!64921)) b!135304))

(declare-fun m!160863 () Bool)

(assert (=> d!42081 m!160863))

(declare-fun m!160865 () Bool)

(assert (=> d!42081 m!160865))

(declare-fun m!160867 () Bool)

(assert (=> b!135304 m!160867))

(assert (=> b!133490 d!42081))

(declare-fun d!42083 () Bool)

(declare-fun res!64922 () Bool)

(declare-fun e!88095 () Bool)

(assert (=> d!42083 (=> res!64922 e!88095)))

(assert (=> d!42083 (= res!64922 (and ((_ is Cons!1706) lt!69329) (= (_1!1303 (h!2311 lt!69329)) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!42083 (= (containsKey!174 lt!69329 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!88095)))

(declare-fun b!135305 () Bool)

(declare-fun e!88096 () Bool)

(assert (=> b!135305 (= e!88095 e!88096)))

(declare-fun res!64923 () Bool)

(assert (=> b!135305 (=> (not res!64923) (not e!88096))))

(assert (=> b!135305 (= res!64923 (and (or (not ((_ is Cons!1706) lt!69329)) (bvsle (_1!1303 (h!2311 lt!69329)) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Cons!1706) lt!69329) (bvslt (_1!1303 (h!2311 lt!69329)) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135306 () Bool)

(assert (=> b!135306 (= e!88096 (containsKey!174 (t!6152 lt!69329) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!42083 (not res!64922)) b!135305))

(assert (= (and b!135305 res!64923) b!135306))

(declare-fun m!160869 () Bool)

(assert (=> b!135306 m!160869))

(assert (=> b!133450 d!42083))

(declare-fun d!42085 () Bool)

(assert (=> d!42085 (= (isDefined!124 (getValueByKey!170 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))))) (not (isEmpty!413 (getValueByKey!170 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))))

(declare-fun bs!5660 () Bool)

(assert (= bs!5660 d!42085))

(assert (=> bs!5660 m!157133))

(declare-fun m!160871 () Bool)

(assert (=> bs!5660 m!160871))

(assert (=> b!133395 d!42085))

(declare-fun d!42087 () Bool)

(declare-fun c!25310 () Bool)

(assert (=> d!42087 (= c!25310 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))))))))

(declare-fun e!88097 () Option!176)

(assert (=> d!42087 (= (getValueByKey!170 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))) e!88097)))

(declare-fun b!135309 () Bool)

(declare-fun e!88098 () Option!176)

(assert (=> b!135309 (= e!88098 (getValueByKey!170 (t!6152 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))

(declare-fun b!135308 () Bool)

(assert (=> b!135308 (= e!88097 e!88098)))

(declare-fun c!25311 () Bool)

(assert (=> b!135308 (= c!25311 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (not (= (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))))

(declare-fun b!135307 () Bool)

(assert (=> b!135307 (= e!88097 (Some!175 (_2!1303 (h!2311 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))))))

(declare-fun b!135310 () Bool)

(assert (=> b!135310 (= e!88098 None!174)))

(assert (= (and d!42087 c!25310) b!135307))

(assert (= (and d!42087 (not c!25310)) b!135308))

(assert (= (and b!135308 c!25311) b!135309))

(assert (= (and b!135308 (not c!25311)) b!135310))

(assert (=> b!135309 m!156567))

(declare-fun m!160873 () Bool)

(assert (=> b!135309 m!160873))

(assert (=> b!133395 d!42087))

(declare-fun d!42089 () Bool)

(assert (=> d!42089 (= ($colon$colon!91 e!87073 (ite c!24802 (h!2311 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))) (tuple2!2585 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))) (Cons!1706 (ite c!24802 (h!2311 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))) (tuple2!2585 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) e!87073))))

(assert (=> bm!14730 d!42089))

(declare-fun d!42091 () Bool)

(declare-fun lt!70625 () Bool)

(assert (=> d!42091 (= lt!70625 (select (content!133 (t!6152 (toList!851 lt!69519))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun e!88100 () Bool)

(assert (=> d!42091 (= lt!70625 e!88100)))

(declare-fun res!64924 () Bool)

(assert (=> d!42091 (=> (not res!64924) (not e!88100))))

(assert (=> d!42091 (= res!64924 ((_ is Cons!1706) (t!6152 (toList!851 lt!69519))))))

(assert (=> d!42091 (= (contains!889 (t!6152 (toList!851 lt!69519)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!70625)))

(declare-fun b!135311 () Bool)

(declare-fun e!88099 () Bool)

(assert (=> b!135311 (= e!88100 e!88099)))

(declare-fun res!64925 () Bool)

(assert (=> b!135311 (=> res!64925 e!88099)))

(assert (=> b!135311 (= res!64925 (= (h!2311 (t!6152 (toList!851 lt!69519))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!135312 () Bool)

(assert (=> b!135312 (= e!88099 (contains!889 (t!6152 (t!6152 (toList!851 lt!69519))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!42091 res!64924) b!135311))

(assert (= (and b!135311 (not res!64925)) b!135312))

(assert (=> d!42091 m!158527))

(declare-fun m!160875 () Bool)

(assert (=> d!42091 m!160875))

(declare-fun m!160877 () Bool)

(assert (=> b!135312 m!160877))

(assert (=> b!133585 d!42091))

(declare-fun d!42093 () Bool)

(assert (=> d!42093 (= (apply!116 lt!69756 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69756) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5661 () Bool)

(assert (= bs!5661 d!42093))

(declare-fun m!160879 () Bool)

(assert (=> bs!5661 m!160879))

(assert (=> bs!5661 m!160879))

(declare-fun m!160881 () Bool)

(assert (=> bs!5661 m!160881))

(assert (=> b!133517 d!42093))

(declare-fun d!42095 () Bool)

(declare-fun res!64926 () Bool)

(declare-fun e!88101 () Bool)

(assert (=> d!42095 (=> res!64926 e!88101)))

(assert (=> d!42095 (= res!64926 (and ((_ is Cons!1706) (toList!851 lt!69519)) (= (_1!1303 (h!2311 (toList!851 lt!69519))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!42095 (= (containsKey!174 (toList!851 lt!69519) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!88101)))

(declare-fun b!135313 () Bool)

(declare-fun e!88102 () Bool)

(assert (=> b!135313 (= e!88101 e!88102)))

(declare-fun res!64927 () Bool)

(assert (=> b!135313 (=> (not res!64927) (not e!88102))))

(assert (=> b!135313 (= res!64927 (and (or (not ((_ is Cons!1706) (toList!851 lt!69519))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69519))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Cons!1706) (toList!851 lt!69519)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69519))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135314 () Bool)

(assert (=> b!135314 (= e!88102 (containsKey!174 (t!6152 (toList!851 lt!69519)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!42095 (not res!64926)) b!135313))

(assert (= (and b!135313 res!64927) b!135314))

(declare-fun m!160883 () Bool)

(assert (=> b!135314 m!160883))

(assert (=> d!40791 d!42095))

(declare-fun d!42097 () Bool)

(assert (=> d!42097 (= (get!1480 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3191 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000)))))

(assert (=> b!133190 d!42097))

(declare-fun d!42099 () Bool)

(declare-fun c!25312 () Bool)

(assert (=> d!42099 (= c!25312 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69466))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69466)))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!88103 () Option!176)

(assert (=> d!42099 (= (getValueByKey!170 (t!6152 (toList!851 lt!69466)) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!88103)))

(declare-fun e!88104 () Option!176)

(declare-fun b!135317 () Bool)

(assert (=> b!135317 (= e!88104 (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69466))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135316 () Bool)

(assert (=> b!135316 (= e!88103 e!88104)))

(declare-fun c!25313 () Bool)

(assert (=> b!135316 (= c!25313 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69466))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69466)))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!135315 () Bool)

(assert (=> b!135315 (= e!88103 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 lt!69466))))))))

(declare-fun b!135318 () Bool)

(assert (=> b!135318 (= e!88104 None!174)))

(assert (= (and d!42099 c!25312) b!135315))

(assert (= (and d!42099 (not c!25312)) b!135316))

(assert (= (and b!135316 c!25313) b!135317))

(assert (= (and b!135316 (not c!25313)) b!135318))

(declare-fun m!160885 () Bool)

(assert (=> b!135317 m!160885))

(assert (=> b!133684 d!42099))

(declare-fun d!42101 () Bool)

(declare-fun lt!70626 () Bool)

(assert (=> d!42101 (= lt!70626 (select (content!133 (toList!851 lt!69863)) (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))))

(declare-fun e!88106 () Bool)

(assert (=> d!42101 (= lt!70626 e!88106)))

(declare-fun res!64928 () Bool)

(assert (=> d!42101 (=> (not res!64928) (not e!88106))))

(assert (=> d!42101 (= res!64928 ((_ is Cons!1706) (toList!851 lt!69863)))))

(assert (=> d!42101 (= (contains!889 (toList!851 lt!69863) (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))) lt!70626)))

(declare-fun b!135319 () Bool)

(declare-fun e!88105 () Bool)

(assert (=> b!135319 (= e!88106 e!88105)))

(declare-fun res!64929 () Bool)

(assert (=> b!135319 (=> res!64929 e!88105)))

(assert (=> b!135319 (= res!64929 (= (h!2311 (toList!851 lt!69863)) (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))))

(declare-fun b!135320 () Bool)

(assert (=> b!135320 (= e!88105 (contains!889 (t!6152 (toList!851 lt!69863)) (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))))

(assert (= (and d!42101 res!64928) b!135319))

(assert (= (and b!135319 (not res!64929)) b!135320))

(declare-fun m!160887 () Bool)

(assert (=> d!42101 m!160887))

(declare-fun m!160889 () Bool)

(assert (=> d!42101 m!160889))

(declare-fun m!160891 () Bool)

(assert (=> b!135320 m!160891))

(assert (=> b!133643 d!42101))

(declare-fun d!42103 () Bool)

(assert (=> d!42103 (not (contains!886 (+!163 lt!69821 (tuple2!2585 lt!69824 lt!69825)) lt!69826))))

(declare-fun lt!70627 () Unit!4132)

(assert (=> d!42103 (= lt!70627 (choose!835 lt!69821 lt!69824 lt!69825 lt!69826))))

(declare-fun e!88107 () Bool)

(assert (=> d!42103 e!88107))

(declare-fun res!64930 () Bool)

(assert (=> d!42103 (=> (not res!64930) (not e!88107))))

(assert (=> d!42103 (= res!64930 (not (contains!886 lt!69821 lt!69826)))))

(assert (=> d!42103 (= (addStillNotContains!62 lt!69821 lt!69824 lt!69825 lt!69826) lt!70627)))

(declare-fun b!135321 () Bool)

(assert (=> b!135321 (= e!88107 (not (= lt!69824 lt!69826)))))

(assert (= (and d!42103 res!64930) b!135321))

(assert (=> d!42103 m!157677))

(assert (=> d!42103 m!157677))

(assert (=> d!42103 m!157679))

(declare-fun m!160893 () Bool)

(assert (=> d!42103 m!160893))

(declare-fun m!160895 () Bool)

(assert (=> d!42103 m!160895))

(assert (=> b!133609 d!42103))

(declare-fun d!42105 () Bool)

(declare-fun e!88108 () Bool)

(assert (=> d!42105 e!88108))

(declare-fun res!64932 () Bool)

(assert (=> d!42105 (=> (not res!64932) (not e!88108))))

(declare-fun lt!70630 () ListLongMap!1671)

(assert (=> d!42105 (= res!64932 (contains!886 lt!70630 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70628 () List!1710)

(assert (=> d!42105 (= lt!70630 (ListLongMap!1672 lt!70628))))

(declare-fun lt!70631 () Unit!4132)

(declare-fun lt!70629 () Unit!4132)

(assert (=> d!42105 (= lt!70631 lt!70629)))

(assert (=> d!42105 (= (getValueByKey!170 lt!70628 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42105 (= lt!70629 (lemmaContainsTupThenGetReturnValue!88 lt!70628 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42105 (= lt!70628 (insertStrictlySorted!91 (toList!851 call!14731) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42105 (= (+!163 call!14731 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70630)))

(declare-fun b!135322 () Bool)

(declare-fun res!64931 () Bool)

(assert (=> b!135322 (=> (not res!64931) (not e!88108))))

(assert (=> b!135322 (= res!64931 (= (getValueByKey!170 (toList!851 lt!70630) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135323 () Bool)

(assert (=> b!135323 (= e!88108 (contains!889 (toList!851 lt!70630) (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 lt!69094) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42105 res!64932) b!135322))

(assert (= (and b!135322 res!64931) b!135323))

(declare-fun m!160897 () Bool)

(assert (=> d!42105 m!160897))

(declare-fun m!160899 () Bool)

(assert (=> d!42105 m!160899))

(declare-fun m!160901 () Bool)

(assert (=> d!42105 m!160901))

(declare-fun m!160903 () Bool)

(assert (=> d!42105 m!160903))

(declare-fun m!160905 () Bool)

(assert (=> b!135322 m!160905))

(declare-fun m!160907 () Bool)

(assert (=> b!135323 m!160907))

(assert (=> b!133609 d!42105))

(declare-fun d!42107 () Bool)

(declare-fun e!88109 () Bool)

(assert (=> d!42107 e!88109))

(declare-fun res!64934 () Bool)

(assert (=> d!42107 (=> (not res!64934) (not e!88109))))

(declare-fun lt!70634 () ListLongMap!1671)

(assert (=> d!42107 (= res!64934 (contains!886 lt!70634 (_1!1303 (tuple2!2585 lt!69824 lt!69825))))))

(declare-fun lt!70632 () List!1710)

(assert (=> d!42107 (= lt!70634 (ListLongMap!1672 lt!70632))))

(declare-fun lt!70635 () Unit!4132)

(declare-fun lt!70633 () Unit!4132)

(assert (=> d!42107 (= lt!70635 lt!70633)))

(assert (=> d!42107 (= (getValueByKey!170 lt!70632 (_1!1303 (tuple2!2585 lt!69824 lt!69825))) (Some!175 (_2!1303 (tuple2!2585 lt!69824 lt!69825))))))

(assert (=> d!42107 (= lt!70633 (lemmaContainsTupThenGetReturnValue!88 lt!70632 (_1!1303 (tuple2!2585 lt!69824 lt!69825)) (_2!1303 (tuple2!2585 lt!69824 lt!69825))))))

(assert (=> d!42107 (= lt!70632 (insertStrictlySorted!91 (toList!851 lt!69821) (_1!1303 (tuple2!2585 lt!69824 lt!69825)) (_2!1303 (tuple2!2585 lt!69824 lt!69825))))))

(assert (=> d!42107 (= (+!163 lt!69821 (tuple2!2585 lt!69824 lt!69825)) lt!70634)))

(declare-fun b!135324 () Bool)

(declare-fun res!64933 () Bool)

(assert (=> b!135324 (=> (not res!64933) (not e!88109))))

(assert (=> b!135324 (= res!64933 (= (getValueByKey!170 (toList!851 lt!70634) (_1!1303 (tuple2!2585 lt!69824 lt!69825))) (Some!175 (_2!1303 (tuple2!2585 lt!69824 lt!69825)))))))

(declare-fun b!135325 () Bool)

(assert (=> b!135325 (= e!88109 (contains!889 (toList!851 lt!70634) (tuple2!2585 lt!69824 lt!69825)))))

(assert (= (and d!42107 res!64934) b!135324))

(assert (= (and b!135324 res!64933) b!135325))

(declare-fun m!160909 () Bool)

(assert (=> d!42107 m!160909))

(declare-fun m!160911 () Bool)

(assert (=> d!42107 m!160911))

(declare-fun m!160913 () Bool)

(assert (=> d!42107 m!160913))

(declare-fun m!160915 () Bool)

(assert (=> d!42107 m!160915))

(declare-fun m!160917 () Bool)

(assert (=> b!135324 m!160917))

(declare-fun m!160919 () Bool)

(assert (=> b!135325 m!160919))

(assert (=> b!133609 d!42107))

(assert (=> b!133609 d!40465))

(declare-fun d!42109 () Bool)

(declare-fun e!88110 () Bool)

(assert (=> d!42109 e!88110))

(declare-fun res!64935 () Bool)

(assert (=> d!42109 (=> res!64935 e!88110)))

(declare-fun lt!70637 () Bool)

(assert (=> d!42109 (= res!64935 (not lt!70637))))

(declare-fun lt!70639 () Bool)

(assert (=> d!42109 (= lt!70637 lt!70639)))

(declare-fun lt!70636 () Unit!4132)

(declare-fun e!88111 () Unit!4132)

(assert (=> d!42109 (= lt!70636 e!88111)))

(declare-fun c!25314 () Bool)

(assert (=> d!42109 (= c!25314 lt!70639)))

(assert (=> d!42109 (= lt!70639 (containsKey!174 (toList!851 (+!163 lt!69821 (tuple2!2585 lt!69824 lt!69825))) lt!69826))))

(assert (=> d!42109 (= (contains!886 (+!163 lt!69821 (tuple2!2585 lt!69824 lt!69825)) lt!69826) lt!70637)))

(declare-fun b!135326 () Bool)

(declare-fun lt!70638 () Unit!4132)

(assert (=> b!135326 (= e!88111 lt!70638)))

(assert (=> b!135326 (= lt!70638 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69821 (tuple2!2585 lt!69824 lt!69825))) lt!69826))))

(assert (=> b!135326 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69821 (tuple2!2585 lt!69824 lt!69825))) lt!69826))))

(declare-fun b!135327 () Bool)

(declare-fun Unit!4248 () Unit!4132)

(assert (=> b!135327 (= e!88111 Unit!4248)))

(declare-fun b!135328 () Bool)

(assert (=> b!135328 (= e!88110 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69821 (tuple2!2585 lt!69824 lt!69825))) lt!69826)))))

(assert (= (and d!42109 c!25314) b!135326))

(assert (= (and d!42109 (not c!25314)) b!135327))

(assert (= (and d!42109 (not res!64935)) b!135328))

(declare-fun m!160921 () Bool)

(assert (=> d!42109 m!160921))

(declare-fun m!160923 () Bool)

(assert (=> b!135326 m!160923))

(declare-fun m!160925 () Bool)

(assert (=> b!135326 m!160925))

(assert (=> b!135326 m!160925))

(declare-fun m!160927 () Bool)

(assert (=> b!135326 m!160927))

(assert (=> b!135328 m!160925))

(assert (=> b!135328 m!160925))

(assert (=> b!135328 m!160927))

(assert (=> b!133609 d!42109))

(declare-fun d!42111 () Bool)

(declare-fun lt!70640 () Bool)

(assert (=> d!42111 (= lt!70640 (select (content!133 lt!69889) (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!88113 () Bool)

(assert (=> d!42111 (= lt!70640 e!88113)))

(declare-fun res!64936 () Bool)

(assert (=> d!42111 (=> (not res!64936) (not e!88113))))

(assert (=> d!42111 (= res!64936 ((_ is Cons!1706) lt!69889))))

(assert (=> d!42111 (= (contains!889 lt!69889 (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!70640)))

(declare-fun b!135329 () Bool)

(declare-fun e!88112 () Bool)

(assert (=> b!135329 (= e!88113 e!88112)))

(declare-fun res!64937 () Bool)

(assert (=> b!135329 (=> res!64937 e!88112)))

(assert (=> b!135329 (= res!64937 (= (h!2311 lt!69889) (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135330 () Bool)

(assert (=> b!135330 (= e!88112 (contains!889 (t!6152 lt!69889) (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!42111 res!64936) b!135329))

(assert (= (and b!135329 (not res!64937)) b!135330))

(declare-fun m!160929 () Bool)

(assert (=> d!42111 m!160929))

(declare-fun m!160931 () Bool)

(assert (=> d!42111 m!160931))

(declare-fun m!160933 () Bool)

(assert (=> b!135330 m!160933))

(assert (=> b!133703 d!42111))

(declare-fun d!42113 () Bool)

(declare-fun c!25315 () Bool)

(assert (=> d!42113 (= c!25315 (and ((_ is Cons!1706) (toList!851 lt!70021)) (= (_1!1303 (h!2311 (toList!851 lt!70021))) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))))))

(declare-fun e!88114 () Option!176)

(assert (=> d!42113 (= (getValueByKey!170 (toList!851 lt!70021) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))) e!88114)))

(declare-fun e!88115 () Option!176)

(declare-fun b!135333 () Bool)

(assert (=> b!135333 (= e!88115 (getValueByKey!170 (t!6152 (toList!851 lt!70021)) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135332 () Bool)

(assert (=> b!135332 (= e!88114 e!88115)))

(declare-fun c!25316 () Bool)

(assert (=> b!135332 (= c!25316 (and ((_ is Cons!1706) (toList!851 lt!70021)) (not (= (_1!1303 (h!2311 (toList!851 lt!70021))) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!135331 () Bool)

(assert (=> b!135331 (= e!88114 (Some!175 (_2!1303 (h!2311 (toList!851 lt!70021)))))))

(declare-fun b!135334 () Bool)

(assert (=> b!135334 (= e!88115 None!174)))

(assert (= (and d!42113 c!25315) b!135331))

(assert (= (and d!42113 (not c!25315)) b!135332))

(assert (= (and b!135332 c!25316) b!135333))

(assert (= (and b!135332 (not c!25316)) b!135334))

(declare-fun m!160935 () Bool)

(assert (=> b!135333 m!160935))

(assert (=> b!133921 d!42113))

(declare-fun d!42115 () Bool)

(assert (=> d!42115 (= (apply!116 lt!69974 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69974) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5662 () Bool)

(assert (= bs!5662 d!42115))

(assert (=> bs!5662 m!160433))

(assert (=> bs!5662 m!160433))

(declare-fun m!160937 () Bool)

(assert (=> bs!5662 m!160937))

(assert (=> b!133864 d!42115))

(declare-fun d!42117 () Bool)

(declare-fun lt!70641 () Bool)

(assert (=> d!42117 (= lt!70641 (select (content!133 lt!69517) (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!88117 () Bool)

(assert (=> d!42117 (= lt!70641 e!88117)))

(declare-fun res!64938 () Bool)

(assert (=> d!42117 (=> (not res!64938) (not e!88117))))

(assert (=> d!42117 (= res!64938 ((_ is Cons!1706) lt!69517))))

(assert (=> d!42117 (= (contains!889 lt!69517 (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!70641)))

(declare-fun b!135335 () Bool)

(declare-fun e!88116 () Bool)

(assert (=> b!135335 (= e!88117 e!88116)))

(declare-fun res!64939 () Bool)

(assert (=> b!135335 (=> res!64939 e!88116)))

(assert (=> b!135335 (= res!64939 (= (h!2311 lt!69517) (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135336 () Bool)

(assert (=> b!135336 (= e!88116 (contains!889 (t!6152 lt!69517) (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!42117 res!64938) b!135335))

(assert (= (and b!135335 (not res!64939)) b!135336))

(declare-fun m!160939 () Bool)

(assert (=> d!42117 m!160939))

(declare-fun m!160941 () Bool)

(assert (=> d!42117 m!160941))

(declare-fun m!160943 () Bool)

(assert (=> b!135336 m!160943))

(assert (=> b!133695 d!42117))

(declare-fun d!42119 () Bool)

(declare-fun res!64940 () Bool)

(declare-fun e!88118 () Bool)

(assert (=> d!42119 (=> res!64940 e!88118)))

(assert (=> d!42119 (= res!64940 (and ((_ is Cons!1706) lt!69494) (= (_1!1303 (h!2311 lt!69494)) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(assert (=> d!42119 (= (containsKey!174 lt!69494 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) e!88118)))

(declare-fun b!135337 () Bool)

(declare-fun e!88119 () Bool)

(assert (=> b!135337 (= e!88118 e!88119)))

(declare-fun res!64941 () Bool)

(assert (=> b!135337 (=> (not res!64941) (not e!88119))))

(assert (=> b!135337 (= res!64941 (and (or (not ((_ is Cons!1706) lt!69494)) (bvsle (_1!1303 (h!2311 lt!69494)) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) ((_ is Cons!1706) lt!69494) (bvslt (_1!1303 (h!2311 lt!69494)) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!135338 () Bool)

(assert (=> b!135338 (= e!88119 (containsKey!174 (t!6152 lt!69494) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!42119 (not res!64940)) b!135337))

(assert (= (and b!135337 res!64941) b!135338))

(declare-fun m!160945 () Bool)

(assert (=> b!135338 m!160945))

(assert (=> b!133651 d!42119))

(declare-fun d!42121 () Bool)

(assert (=> d!42121 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) lt!69246))))

(declare-fun lt!70642 () Unit!4132)

(assert (=> d!42121 (= lt!70642 (choose!826 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) lt!69246))))

(declare-fun e!88120 () Bool)

(assert (=> d!42121 e!88120))

(declare-fun res!64942 () Bool)

(assert (=> d!42121 (=> (not res!64942) (not e!88120))))

(assert (=> d!42121 (= res!64942 (isStrictlySorted!317 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))))))

(assert (=> d!42121 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) lt!69246) lt!70642)))

(declare-fun b!135339 () Bool)

(assert (=> b!135339 (= e!88120 (containsKey!174 (toList!851 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) lt!69246))))

(assert (= (and d!42121 res!64942) b!135339))

(assert (=> d!42121 m!157665))

(assert (=> d!42121 m!157665))

(assert (=> d!42121 m!157667))

(declare-fun m!160947 () Bool)

(assert (=> d!42121 m!160947))

(declare-fun m!160949 () Bool)

(assert (=> d!42121 m!160949))

(assert (=> b!135339 m!157661))

(assert (=> b!133600 d!42121))

(assert (=> b!133600 d!41437))

(assert (=> b!133600 d!41439))

(declare-fun d!42123 () Bool)

(declare-fun res!64943 () Bool)

(declare-fun e!88121 () Bool)

(assert (=> d!42123 (=> res!64943 e!88121)))

(assert (=> d!42123 (= res!64943 (and ((_ is Cons!1706) (toList!851 lt!69466)) (= (_1!1303 (h!2311 (toList!851 lt!69466))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!42123 (= (containsKey!174 (toList!851 lt!69466) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!88121)))

(declare-fun b!135340 () Bool)

(declare-fun e!88122 () Bool)

(assert (=> b!135340 (= e!88121 e!88122)))

(declare-fun res!64944 () Bool)

(assert (=> b!135340 (=> (not res!64944) (not e!88122))))

(assert (=> b!135340 (= res!64944 (and (or (not ((_ is Cons!1706) (toList!851 lt!69466))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69466))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1706) (toList!851 lt!69466)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69466))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135341 () Bool)

(assert (=> b!135341 (= e!88122 (containsKey!174 (t!6152 (toList!851 lt!69466)) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42123 (not res!64943)) b!135340))

(assert (= (and b!135340 res!64944) b!135341))

(declare-fun m!160951 () Bool)

(assert (=> b!135341 m!160951))

(assert (=> d!40805 d!42123))

(declare-fun d!42125 () Bool)

(declare-fun res!64945 () Bool)

(declare-fun e!88123 () Bool)

(assert (=> d!42125 (=> res!64945 e!88123)))

(assert (=> d!42125 (= res!64945 (and ((_ is Cons!1706) (toList!851 lt!69220)) (= (_1!1303 (h!2311 (toList!851 lt!69220))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42125 (= (containsKey!174 (toList!851 lt!69220) #b0000000000000000000000000000000000000000000000000000000000000000) e!88123)))

(declare-fun b!135342 () Bool)

(declare-fun e!88124 () Bool)

(assert (=> b!135342 (= e!88123 e!88124)))

(declare-fun res!64946 () Bool)

(assert (=> b!135342 (=> (not res!64946) (not e!88124))))

(assert (=> b!135342 (= res!64946 (and (or (not ((_ is Cons!1706) (toList!851 lt!69220))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69220))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1706) (toList!851 lt!69220)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69220))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135343 () Bool)

(assert (=> b!135343 (= e!88124 (containsKey!174 (t!6152 (toList!851 lt!69220)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42125 (not res!64945)) b!135342))

(assert (= (and b!135342 res!64946) b!135343))

(declare-fun m!160953 () Bool)

(assert (=> b!135343 m!160953))

(assert (=> d!40663 d!42125))

(declare-fun d!42127 () Bool)

(declare-fun e!88125 () Bool)

(assert (=> d!42127 e!88125))

(declare-fun res!64947 () Bool)

(assert (=> d!42127 (=> res!64947 e!88125)))

(declare-fun lt!70644 () Bool)

(assert (=> d!42127 (= res!64947 (not lt!70644))))

(declare-fun lt!70646 () Bool)

(assert (=> d!42127 (= lt!70644 lt!70646)))

(declare-fun lt!70643 () Unit!4132)

(declare-fun e!88126 () Unit!4132)

(assert (=> d!42127 (= lt!70643 e!88126)))

(declare-fun c!25317 () Bool)

(assert (=> d!42127 (= c!25317 lt!70646)))

(assert (=> d!42127 (= lt!70646 (containsKey!174 (toList!851 lt!69567) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42127 (= (contains!886 lt!69567 (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) lt!70644)))

(declare-fun b!135344 () Bool)

(declare-fun lt!70645 () Unit!4132)

(assert (=> b!135344 (= e!88126 lt!70645)))

(assert (=> b!135344 (= lt!70645 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69567) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> b!135344 (isDefined!124 (getValueByKey!170 (toList!851 lt!69567) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135345 () Bool)

(declare-fun Unit!4249 () Unit!4132)

(assert (=> b!135345 (= e!88126 Unit!4249)))

(declare-fun b!135346 () Bool)

(assert (=> b!135346 (= e!88125 (isDefined!124 (getValueByKey!170 (toList!851 lt!69567) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (= (and d!42127 c!25317) b!135344))

(assert (= (and d!42127 (not c!25317)) b!135345))

(assert (= (and d!42127 (not res!64947)) b!135346))

(declare-fun m!160955 () Bool)

(assert (=> d!42127 m!160955))

(declare-fun m!160957 () Bool)

(assert (=> b!135344 m!160957))

(assert (=> b!135344 m!156865))

(assert (=> b!135344 m!156865))

(declare-fun m!160959 () Bool)

(assert (=> b!135344 m!160959))

(assert (=> b!135346 m!156865))

(assert (=> b!135346 m!156865))

(assert (=> b!135346 m!160959))

(assert (=> d!40481 d!42127))

(declare-fun d!42129 () Bool)

(declare-fun c!25318 () Bool)

(assert (=> d!42129 (= c!25318 (and ((_ is Cons!1706) lt!69565) (= (_1!1303 (h!2311 lt!69565)) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun e!88127 () Option!176)

(assert (=> d!42129 (= (getValueByKey!170 lt!69565 (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) e!88127)))

(declare-fun b!135349 () Bool)

(declare-fun e!88128 () Option!176)

(assert (=> b!135349 (= e!88128 (getValueByKey!170 (t!6152 lt!69565) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135348 () Bool)

(assert (=> b!135348 (= e!88127 e!88128)))

(declare-fun c!25319 () Bool)

(assert (=> b!135348 (= c!25319 (and ((_ is Cons!1706) lt!69565) (not (= (_1!1303 (h!2311 lt!69565)) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))))

(declare-fun b!135347 () Bool)

(assert (=> b!135347 (= e!88127 (Some!175 (_2!1303 (h!2311 lt!69565))))))

(declare-fun b!135350 () Bool)

(assert (=> b!135350 (= e!88128 None!174)))

(assert (= (and d!42129 c!25318) b!135347))

(assert (= (and d!42129 (not c!25318)) b!135348))

(assert (= (and b!135348 c!25319) b!135349))

(assert (= (and b!135348 (not c!25319)) b!135350))

(declare-fun m!160961 () Bool)

(assert (=> b!135349 m!160961))

(assert (=> d!40481 d!42129))

(declare-fun d!42131 () Bool)

(assert (=> d!42131 (= (getValueByKey!170 lt!69565 (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!70647 () Unit!4132)

(assert (=> d!42131 (= lt!70647 (choose!834 lt!69565 (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun e!88129 () Bool)

(assert (=> d!42131 e!88129))

(declare-fun res!64948 () Bool)

(assert (=> d!42131 (=> (not res!64948) (not e!88129))))

(assert (=> d!42131 (= res!64948 (isStrictlySorted!317 lt!69565))))

(assert (=> d!42131 (= (lemmaContainsTupThenGetReturnValue!88 lt!69565 (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) lt!70647)))

(declare-fun b!135351 () Bool)

(declare-fun res!64949 () Bool)

(assert (=> b!135351 (=> (not res!64949) (not e!88129))))

(assert (=> b!135351 (= res!64949 (containsKey!174 lt!69565 (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135352 () Bool)

(assert (=> b!135352 (= e!88129 (contains!889 lt!69565 (tuple2!2585 (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (= (and d!42131 res!64948) b!135351))

(assert (= (and b!135351 res!64949) b!135352))

(assert (=> d!42131 m!156859))

(declare-fun m!160963 () Bool)

(assert (=> d!42131 m!160963))

(declare-fun m!160965 () Bool)

(assert (=> d!42131 m!160965))

(declare-fun m!160967 () Bool)

(assert (=> b!135351 m!160967))

(declare-fun m!160969 () Bool)

(assert (=> b!135352 m!160969))

(assert (=> d!40481 d!42131))

(declare-fun e!88134 () List!1710)

(declare-fun b!135353 () Bool)

(assert (=> b!135353 (= e!88134 (insertStrictlySorted!91 (t!6152 (toList!851 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640)))) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135354 () Bool)

(declare-fun e!88133 () List!1710)

(declare-fun call!14863 () List!1710)

(assert (=> b!135354 (= e!88133 call!14863)))

(declare-fun b!135355 () Bool)

(declare-fun res!64951 () Bool)

(declare-fun e!88131 () Bool)

(assert (=> b!135355 (=> (not res!64951) (not e!88131))))

(declare-fun lt!70648 () List!1710)

(assert (=> b!135355 (= res!64951 (containsKey!174 lt!70648 (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun c!25321 () Bool)

(declare-fun bm!14858 () Bool)

(assert (=> bm!14858 (= call!14863 ($colon$colon!91 e!88134 (ite c!25321 (h!2311 (toList!851 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640)))) (tuple2!2585 (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))))

(declare-fun c!25322 () Bool)

(assert (=> bm!14858 (= c!25322 c!25321)))

(declare-fun c!25320 () Bool)

(declare-fun c!25323 () Bool)

(declare-fun b!135356 () Bool)

(assert (=> b!135356 (= e!88134 (ite c!25320 (t!6152 (toList!851 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640)))) (ite c!25323 (Cons!1706 (h!2311 (toList!851 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640)))) (t!6152 (toList!851 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640))))) Nil!1707)))))

(declare-fun d!42133 () Bool)

(assert (=> d!42133 e!88131))

(declare-fun res!64950 () Bool)

(assert (=> d!42133 (=> (not res!64950) (not e!88131))))

(assert (=> d!42133 (= res!64950 (isStrictlySorted!317 lt!70648))))

(assert (=> d!42133 (= lt!70648 e!88133)))

(assert (=> d!42133 (= c!25321 (and ((_ is Cons!1706) (toList!851 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640)))) (bvslt (_1!1303 (h!2311 (toList!851 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640))))) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (=> d!42133 (isStrictlySorted!317 (toList!851 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640))))))

(assert (=> d!42133 (= (insertStrictlySorted!91 (toList!851 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640))) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) lt!70648)))

(declare-fun b!135357 () Bool)

(declare-fun e!88130 () List!1710)

(assert (=> b!135357 (= e!88133 e!88130)))

(assert (=> b!135357 (= c!25320 (and ((_ is Cons!1706) (toList!851 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640)))) (= (_1!1303 (h!2311 (toList!851 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640))))) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!135358 () Bool)

(declare-fun e!88132 () List!1710)

(declare-fun call!14861 () List!1710)

(assert (=> b!135358 (= e!88132 call!14861)))

(declare-fun b!135359 () Bool)

(declare-fun call!14862 () List!1710)

(assert (=> b!135359 (= e!88130 call!14862)))

(declare-fun b!135360 () Bool)

(assert (=> b!135360 (= e!88131 (contains!889 lt!70648 (tuple2!2585 (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun bm!14859 () Bool)

(assert (=> bm!14859 (= call!14862 call!14863)))

(declare-fun bm!14860 () Bool)

(assert (=> bm!14860 (= call!14861 call!14862)))

(declare-fun b!135361 () Bool)

(assert (=> b!135361 (= c!25323 (and ((_ is Cons!1706) (toList!851 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640)))) (bvsgt (_1!1303 (h!2311 (toList!851 (ite c!24577 call!14638 (ite c!24575 call!14641 call!14640))))) (_1!1303 (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (=> b!135361 (= e!88130 e!88132)))

(declare-fun b!135362 () Bool)

(assert (=> b!135362 (= e!88132 call!14861)))

(assert (= (and d!42133 c!25321) b!135354))

(assert (= (and d!42133 (not c!25321)) b!135357))

(assert (= (and b!135357 c!25320) b!135359))

(assert (= (and b!135357 (not c!25320)) b!135361))

(assert (= (and b!135361 c!25323) b!135362))

(assert (= (and b!135361 (not c!25323)) b!135358))

(assert (= (or b!135362 b!135358) bm!14860))

(assert (= (or b!135359 bm!14860) bm!14859))

(assert (= (or b!135354 bm!14859) bm!14858))

(assert (= (and bm!14858 c!25322) b!135353))

(assert (= (and bm!14858 (not c!25322)) b!135356))

(assert (= (and d!42133 res!64950) b!135355))

(assert (= (and b!135355 res!64951) b!135360))

(declare-fun m!160971 () Bool)

(assert (=> b!135360 m!160971))

(declare-fun m!160973 () Bool)

(assert (=> b!135355 m!160973))

(declare-fun m!160975 () Bool)

(assert (=> b!135353 m!160975))

(declare-fun m!160977 () Bool)

(assert (=> d!42133 m!160977))

(declare-fun m!160979 () Bool)

(assert (=> d!42133 m!160979))

(declare-fun m!160981 () Bool)

(assert (=> bm!14858 m!160981))

(assert (=> d!40481 d!42133))

(declare-fun c!25324 () Bool)

(declare-fun d!42135 () Bool)

(assert (=> d!42135 (= c!25324 (and ((_ is Cons!1706) (toList!851 lt!69712)) (= (_1!1303 (h!2311 (toList!851 lt!69712))) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun e!88135 () Option!176)

(assert (=> d!42135 (= (getValueByKey!170 (toList!851 lt!69712) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) e!88135)))

(declare-fun e!88136 () Option!176)

(declare-fun b!135365 () Bool)

(assert (=> b!135365 (= e!88136 (getValueByKey!170 (t!6152 (toList!851 lt!69712)) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!135364 () Bool)

(assert (=> b!135364 (= e!88135 e!88136)))

(declare-fun c!25325 () Bool)

(assert (=> b!135364 (= c!25325 (and ((_ is Cons!1706) (toList!851 lt!69712)) (not (= (_1!1303 (h!2311 (toList!851 lt!69712))) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!135363 () Bool)

(assert (=> b!135363 (= e!88135 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69712)))))))

(declare-fun b!135366 () Bool)

(assert (=> b!135366 (= e!88136 None!174)))

(assert (= (and d!42135 c!25324) b!135363))

(assert (= (and d!42135 (not c!25324)) b!135364))

(assert (= (and b!135364 c!25325) b!135365))

(assert (= (and b!135364 (not c!25325)) b!135366))

(declare-fun m!160983 () Bool)

(assert (=> b!135365 m!160983))

(assert (=> b!133481 d!42135))

(declare-fun d!42137 () Bool)

(declare-fun lt!70649 () Bool)

(assert (=> d!42137 (= lt!70649 (select (content!133 (toList!851 lt!70026)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!88138 () Bool)

(assert (=> d!42137 (= lt!70649 e!88138)))

(declare-fun res!64952 () Bool)

(assert (=> d!42137 (=> (not res!64952) (not e!88138))))

(assert (=> d!42137 (= res!64952 ((_ is Cons!1706) (toList!851 lt!70026)))))

(assert (=> d!42137 (= (contains!889 (toList!851 lt!70026) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70649)))

(declare-fun b!135367 () Bool)

(declare-fun e!88137 () Bool)

(assert (=> b!135367 (= e!88138 e!88137)))

(declare-fun res!64953 () Bool)

(assert (=> b!135367 (=> res!64953 e!88137)))

(assert (=> b!135367 (= res!64953 (= (h!2311 (toList!851 lt!70026)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135368 () Bool)

(assert (=> b!135368 (= e!88137 (contains!889 (t!6152 (toList!851 lt!70026)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42137 res!64952) b!135367))

(assert (= (and b!135367 (not res!64953)) b!135368))

(declare-fun m!160985 () Bool)

(assert (=> d!42137 m!160985))

(declare-fun m!160987 () Bool)

(assert (=> d!42137 m!160987))

(declare-fun m!160989 () Bool)

(assert (=> b!135368 m!160989))

(assert (=> b!133931 d!42137))

(assert (=> bm!14754 d!40387))

(assert (=> d!40825 d!40425))

(declare-fun b!135369 () Bool)

(assert (=> b!135369 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(assert (=> b!135369 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))))))

(declare-fun e!88139 () Bool)

(declare-fun lt!70652 () ListLongMap!1671)

(assert (=> b!135369 (= e!88139 (= (apply!116 lt!70652 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun call!14864 () ListLongMap!1671)

(declare-fun bm!14861 () Bool)

(assert (=> bm!14861 (= call!14864 (getCurrentListMapNoExtraKeys!128 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!135370 () Bool)

(declare-fun e!88142 () ListLongMap!1671)

(assert (=> b!135370 (= e!88142 call!14864)))

(declare-fun b!135371 () Bool)

(declare-fun e!88144 () Bool)

(declare-fun e!88141 () Bool)

(assert (=> b!135371 (= e!88144 e!88141)))

(declare-fun c!25329 () Bool)

(assert (=> b!135371 (= c!25329 (bvslt #b00000000000000000000000000000000 (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(declare-fun b!135372 () Bool)

(assert (=> b!135372 (= e!88141 (isEmpty!414 lt!70652))))

(declare-fun b!135373 () Bool)

(declare-fun e!88145 () Bool)

(assert (=> b!135373 (= e!88145 e!88144)))

(declare-fun c!25326 () Bool)

(declare-fun e!88140 () Bool)

(assert (=> b!135373 (= c!25326 e!88140)))

(declare-fun res!64956 () Bool)

(assert (=> b!135373 (=> (not res!64956) (not e!88140))))

(assert (=> b!135373 (= res!64956 (bvslt #b00000000000000000000000000000000 (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(declare-fun b!135374 () Bool)

(assert (=> b!135374 (= e!88140 (validKeyInArray!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!135374 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!135375 () Bool)

(declare-fun lt!70651 () Unit!4132)

(declare-fun lt!70656 () Unit!4132)

(assert (=> b!135375 (= lt!70651 lt!70656)))

(declare-fun lt!70654 () V!3481)

(declare-fun lt!70655 () (_ BitVec 64))

(declare-fun lt!70650 () ListLongMap!1671)

(declare-fun lt!70653 () (_ BitVec 64))

(assert (=> b!135375 (not (contains!886 (+!163 lt!70650 (tuple2!2585 lt!70653 lt!70654)) lt!70655))))

(assert (=> b!135375 (= lt!70656 (addStillNotContains!62 lt!70650 lt!70653 lt!70654 lt!70655))))

(assert (=> b!135375 (= lt!70655 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!135375 (= lt!70654 (get!1478 (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!135375 (= lt!70653 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!135375 (= lt!70650 call!14864)))

(assert (=> b!135375 (= e!88142 (+!163 call!14864 (tuple2!2585 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135376 () Bool)

(declare-fun e!88143 () ListLongMap!1671)

(assert (=> b!135376 (= e!88143 e!88142)))

(declare-fun c!25327 () Bool)

(assert (=> b!135376 (= c!25327 (validKeyInArray!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!135377 () Bool)

(assert (=> b!135377 (= e!88143 (ListLongMap!1672 Nil!1707))))

(declare-fun d!42139 () Bool)

(assert (=> d!42139 e!88145))

(declare-fun res!64955 () Bool)

(assert (=> d!42139 (=> (not res!64955) (not e!88145))))

(assert (=> d!42139 (= res!64955 (not (contains!886 lt!70652 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42139 (= lt!70652 e!88143)))

(declare-fun c!25328 () Bool)

(assert (=> d!42139 (= c!25328 (bvsge #b00000000000000000000000000000000 (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(assert (=> d!42139 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!42139 (= (getCurrentListMapNoExtraKeys!128 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!70652)))

(declare-fun b!135378 () Bool)

(assert (=> b!135378 (= e!88141 (= lt!70652 (getCurrentListMapNoExtraKeys!128 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun b!135379 () Bool)

(declare-fun res!64957 () Bool)

(assert (=> b!135379 (=> (not res!64957) (not e!88145))))

(assert (=> b!135379 (= res!64957 (not (contains!886 lt!70652 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135380 () Bool)

(assert (=> b!135380 (= e!88144 e!88139)))

(assert (=> b!135380 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(declare-fun res!64954 () Bool)

(assert (=> b!135380 (= res!64954 (contains!886 lt!70652 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!135380 (=> (not res!64954) (not e!88139))))

(assert (= (and d!42139 c!25328) b!135377))

(assert (= (and d!42139 (not c!25328)) b!135376))

(assert (= (and b!135376 c!25327) b!135375))

(assert (= (and b!135376 (not c!25327)) b!135370))

(assert (= (or b!135375 b!135370) bm!14861))

(assert (= (and d!42139 res!64955) b!135379))

(assert (= (and b!135379 res!64957) b!135373))

(assert (= (and b!135373 res!64956) b!135374))

(assert (= (and b!135373 c!25326) b!135380))

(assert (= (and b!135373 (not c!25326)) b!135371))

(assert (= (and b!135380 res!64954) b!135369))

(assert (= (and b!135371 c!25329) b!135378))

(assert (= (and b!135371 (not c!25329)) b!135372))

(declare-fun b_lambda!6023 () Bool)

(assert (=> (not b_lambda!6023) (not b!135369)))

(assert (=> b!135369 t!6164))

(declare-fun b_and!8377 () Bool)

(assert (= b_and!8373 (and (=> t!6164 result!3993) b_and!8377)))

(assert (=> b!135369 t!6166))

(declare-fun b_and!8379 () Bool)

(assert (= b_and!8375 (and (=> t!6166 result!3995) b_and!8379)))

(declare-fun b_lambda!6025 () Bool)

(assert (=> (not b_lambda!6025) (not b!135375)))

(assert (=> b!135375 t!6164))

(declare-fun b_and!8381 () Bool)

(assert (= b_and!8377 (and (=> t!6164 result!3993) b_and!8381)))

(assert (=> b!135375 t!6166))

(declare-fun b_and!8383 () Bool)

(assert (= b_and!8379 (and (=> t!6166 result!3995) b_and!8383)))

(assert (=> b!135374 m!157049))

(assert (=> b!135374 m!157049))

(assert (=> b!135374 m!157057))

(declare-fun m!160991 () Bool)

(assert (=> b!135379 m!160991))

(assert (=> b!135375 m!157143))

(declare-fun m!160993 () Bool)

(assert (=> b!135375 m!160993))

(assert (=> b!135375 m!157049))

(assert (=> b!135375 m!157143))

(assert (=> b!135375 m!156135))

(assert (=> b!135375 m!157145))

(declare-fun m!160995 () Bool)

(assert (=> b!135375 m!160995))

(declare-fun m!160997 () Bool)

(assert (=> b!135375 m!160997))

(assert (=> b!135375 m!156135))

(declare-fun m!160999 () Bool)

(assert (=> b!135375 m!160999))

(assert (=> b!135375 m!160995))

(declare-fun m!161001 () Bool)

(assert (=> b!135378 m!161001))

(assert (=> b!135380 m!157049))

(assert (=> b!135380 m!157049))

(declare-fun m!161003 () Bool)

(assert (=> b!135380 m!161003))

(declare-fun m!161005 () Bool)

(assert (=> b!135372 m!161005))

(assert (=> bm!14861 m!161001))

(declare-fun m!161007 () Bool)

(assert (=> d!42139 m!161007))

(assert (=> d!42139 m!156183))

(assert (=> b!135376 m!157049))

(assert (=> b!135376 m!157049))

(assert (=> b!135376 m!157057))

(assert (=> b!135369 m!157143))

(assert (=> b!135369 m!157049))

(assert (=> b!135369 m!157143))

(assert (=> b!135369 m!156135))

(assert (=> b!135369 m!157145))

(assert (=> b!135369 m!156135))

(assert (=> b!135369 m!157049))

(declare-fun m!161009 () Bool)

(assert (=> b!135369 m!161009))

(assert (=> bm!14706 d!42139))

(declare-fun d!42141 () Bool)

(declare-fun e!88146 () Bool)

(assert (=> d!42141 e!88146))

(declare-fun res!64959 () Bool)

(assert (=> d!42141 (=> (not res!64959) (not e!88146))))

(declare-fun lt!70659 () ListLongMap!1671)

(assert (=> d!42141 (= res!64959 (contains!886 lt!70659 (_1!1303 (ite (or c!24733 c!24731) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!70657 () List!1710)

(assert (=> d!42141 (= lt!70659 (ListLongMap!1672 lt!70657))))

(declare-fun lt!70660 () Unit!4132)

(declare-fun lt!70658 () Unit!4132)

(assert (=> d!42141 (= lt!70660 lt!70658)))

(assert (=> d!42141 (= (getValueByKey!170 lt!70657 (_1!1303 (ite (or c!24733 c!24731) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24733 c!24731) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42141 (= lt!70658 (lemmaContainsTupThenGetReturnValue!88 lt!70657 (_1!1303 (ite (or c!24733 c!24731) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24733 c!24731) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42141 (= lt!70657 (insertStrictlySorted!91 (toList!851 (ite c!24733 call!14704 (ite c!24731 call!14707 call!14706))) (_1!1303 (ite (or c!24733 c!24731) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24733 c!24731) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42141 (= (+!163 (ite c!24733 call!14704 (ite c!24731 call!14707 call!14706)) (ite (or c!24733 c!24731) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70659)))

(declare-fun b!135381 () Bool)

(declare-fun res!64958 () Bool)

(assert (=> b!135381 (=> (not res!64958) (not e!88146))))

(assert (=> b!135381 (= res!64958 (= (getValueByKey!170 (toList!851 lt!70659) (_1!1303 (ite (or c!24733 c!24731) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24733 c!24731) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!135382 () Bool)

(assert (=> b!135382 (= e!88146 (contains!889 (toList!851 lt!70659) (ite (or c!24733 c!24731) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!42141 res!64959) b!135381))

(assert (= (and b!135381 res!64958) b!135382))

(declare-fun m!161011 () Bool)

(assert (=> d!42141 m!161011))

(declare-fun m!161013 () Bool)

(assert (=> d!42141 m!161013))

(declare-fun m!161015 () Bool)

(assert (=> d!42141 m!161015))

(declare-fun m!161017 () Bool)

(assert (=> d!42141 m!161017))

(declare-fun m!161019 () Bool)

(assert (=> b!135381 m!161019))

(declare-fun m!161021 () Bool)

(assert (=> b!135382 m!161021))

(assert (=> bm!14698 d!42141))

(assert (=> b!133257 d!41937))

(assert (=> b!133257 d!41939))

(declare-fun d!42143 () Bool)

(assert (=> d!42143 (isDefined!124 (getValueByKey!170 (toList!851 lt!69250) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!70661 () Unit!4132)

(assert (=> d!42143 (= lt!70661 (choose!826 (toList!851 lt!69250) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!88147 () Bool)

(assert (=> d!42143 e!88147))

(declare-fun res!64960 () Bool)

(assert (=> d!42143 (=> (not res!64960) (not e!88147))))

(assert (=> d!42143 (= res!64960 (isStrictlySorted!317 (toList!851 lt!69250)))))

(assert (=> d!42143 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69250) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!70661)))

(declare-fun b!135383 () Bool)

(assert (=> b!135383 (= e!88147 (containsKey!174 (toList!851 lt!69250) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!42143 res!64960) b!135383))

(assert (=> d!42143 m!156125))

(assert (=> d!42143 m!156803))

(assert (=> d!42143 m!156803))

(assert (=> d!42143 m!157895))

(assert (=> d!42143 m!156125))

(declare-fun m!161023 () Bool)

(assert (=> d!42143 m!161023))

(assert (=> d!42143 m!159395))

(assert (=> b!135383 m!156125))

(assert (=> b!135383 m!157891))

(assert (=> b!133679 d!42143))

(assert (=> b!133679 d!41509))

(assert (=> b!133679 d!41511))

(declare-fun d!42145 () Bool)

(declare-fun e!88148 () Bool)

(assert (=> d!42145 e!88148))

(declare-fun res!64961 () Bool)

(assert (=> d!42145 (=> res!64961 e!88148)))

(declare-fun lt!70663 () Bool)

(assert (=> d!42145 (= res!64961 (not lt!70663))))

(declare-fun lt!70665 () Bool)

(assert (=> d!42145 (= lt!70663 lt!70665)))

(declare-fun lt!70662 () Unit!4132)

(declare-fun e!88149 () Unit!4132)

(assert (=> d!42145 (= lt!70662 e!88149)))

(declare-fun c!25330 () Bool)

(assert (=> d!42145 (= c!25330 lt!70665)))

(assert (=> d!42145 (= lt!70665 (containsKey!174 (toList!851 lt!69854) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))

(assert (=> d!42145 (= (contains!886 lt!69854 (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))) lt!70663)))

(declare-fun b!135384 () Bool)

(declare-fun lt!70664 () Unit!4132)

(assert (=> b!135384 (= e!88149 lt!70664)))

(assert (=> b!135384 (= lt!70664 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69854) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))

(assert (=> b!135384 (isDefined!124 (getValueByKey!170 (toList!851 lt!69854) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))

(declare-fun b!135385 () Bool)

(declare-fun Unit!4250 () Unit!4132)

(assert (=> b!135385 (= e!88149 Unit!4250)))

(declare-fun b!135386 () Bool)

(assert (=> b!135386 (= e!88148 (isDefined!124 (getValueByKey!170 (toList!851 lt!69854) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))))))

(assert (= (and d!42145 c!25330) b!135384))

(assert (= (and d!42145 (not c!25330)) b!135385))

(assert (= (and d!42145 (not res!64961)) b!135386))

(declare-fun m!161025 () Bool)

(assert (=> d!42145 m!161025))

(declare-fun m!161027 () Bool)

(assert (=> b!135384 m!161027))

(assert (=> b!135384 m!157801))

(assert (=> b!135384 m!157801))

(declare-fun m!161029 () Bool)

(assert (=> b!135384 m!161029))

(assert (=> b!135386 m!157801))

(assert (=> b!135386 m!157801))

(assert (=> b!135386 m!161029))

(assert (=> d!40749 d!42145))

(declare-fun d!42147 () Bool)

(declare-fun c!25331 () Bool)

(assert (=> d!42147 (= c!25331 (and ((_ is Cons!1706) lt!69852) (= (_1!1303 (h!2311 lt!69852)) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))))))

(declare-fun e!88150 () Option!176)

(assert (=> d!42147 (= (getValueByKey!170 lt!69852 (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))) e!88150)))

(declare-fun e!88151 () Option!176)

(declare-fun b!135389 () Bool)

(assert (=> b!135389 (= e!88151 (getValueByKey!170 (t!6152 lt!69852) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))

(declare-fun b!135388 () Bool)

(assert (=> b!135388 (= e!88150 e!88151)))

(declare-fun c!25332 () Bool)

(assert (=> b!135388 (= c!25332 (and ((_ is Cons!1706) lt!69852) (not (= (_1!1303 (h!2311 lt!69852)) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))))

(declare-fun b!135387 () Bool)

(assert (=> b!135387 (= e!88150 (Some!175 (_2!1303 (h!2311 lt!69852))))))

(declare-fun b!135390 () Bool)

(assert (=> b!135390 (= e!88151 None!174)))

(assert (= (and d!42147 c!25331) b!135387))

(assert (= (and d!42147 (not c!25331)) b!135388))

(assert (= (and b!135388 c!25332) b!135389))

(assert (= (and b!135388 (not c!25332)) b!135390))

(declare-fun m!161031 () Bool)

(assert (=> b!135389 m!161031))

(assert (=> d!40749 d!42147))

(declare-fun d!42149 () Bool)

(assert (=> d!42149 (= (getValueByKey!170 lt!69852 (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))

(declare-fun lt!70666 () Unit!4132)

(assert (=> d!42149 (= lt!70666 (choose!834 lt!69852 (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))

(declare-fun e!88152 () Bool)

(assert (=> d!42149 e!88152))

(declare-fun res!64962 () Bool)

(assert (=> d!42149 (=> (not res!64962) (not e!88152))))

(assert (=> d!42149 (= res!64962 (isStrictlySorted!317 lt!69852))))

(assert (=> d!42149 (= (lemmaContainsTupThenGetReturnValue!88 lt!69852 (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))) lt!70666)))

(declare-fun b!135391 () Bool)

(declare-fun res!64963 () Bool)

(assert (=> b!135391 (=> (not res!64963) (not e!88152))))

(assert (=> b!135391 (= res!64963 (containsKey!174 lt!69852 (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))

(declare-fun b!135392 () Bool)

(assert (=> b!135392 (= e!88152 (contains!889 lt!69852 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))))))

(assert (= (and d!42149 res!64962) b!135391))

(assert (= (and b!135391 res!64963) b!135392))

(assert (=> d!42149 m!157795))

(declare-fun m!161033 () Bool)

(assert (=> d!42149 m!161033))

(declare-fun m!161035 () Bool)

(assert (=> d!42149 m!161035))

(declare-fun m!161037 () Bool)

(assert (=> b!135391 m!161037))

(declare-fun m!161039 () Bool)

(assert (=> b!135392 m!161039))

(assert (=> d!40749 d!42149))

(declare-fun e!88157 () List!1710)

(declare-fun b!135393 () Bool)

(assert (=> b!135393 (= e!88157 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69206)) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))

(declare-fun b!135394 () Bool)

(declare-fun e!88156 () List!1710)

(declare-fun call!14867 () List!1710)

(assert (=> b!135394 (= e!88156 call!14867)))

(declare-fun b!135395 () Bool)

(declare-fun res!64965 () Bool)

(declare-fun e!88154 () Bool)

(assert (=> b!135395 (=> (not res!64965) (not e!88154))))

(declare-fun lt!70667 () List!1710)

(assert (=> b!135395 (= res!64965 (containsKey!174 lt!70667 (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))

(declare-fun c!25334 () Bool)

(declare-fun bm!14862 () Bool)

(assert (=> bm!14862 (= call!14867 ($colon$colon!91 e!88157 (ite c!25334 (h!2311 (toList!851 lt!69206)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))))))

(declare-fun c!25335 () Bool)

(assert (=> bm!14862 (= c!25335 c!25334)))

(declare-fun c!25336 () Bool)

(declare-fun c!25333 () Bool)

(declare-fun b!135396 () Bool)

(assert (=> b!135396 (= e!88157 (ite c!25333 (t!6152 (toList!851 lt!69206)) (ite c!25336 (Cons!1706 (h!2311 (toList!851 lt!69206)) (t!6152 (toList!851 lt!69206))) Nil!1707)))))

(declare-fun d!42151 () Bool)

(assert (=> d!42151 e!88154))

(declare-fun res!64964 () Bool)

(assert (=> d!42151 (=> (not res!64964) (not e!88154))))

(assert (=> d!42151 (= res!64964 (isStrictlySorted!317 lt!70667))))

(assert (=> d!42151 (= lt!70667 e!88156)))

(assert (=> d!42151 (= c!25334 (and ((_ is Cons!1706) (toList!851 lt!69206)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69206))) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))))))

(assert (=> d!42151 (isStrictlySorted!317 (toList!851 lt!69206))))

(assert (=> d!42151 (= (insertStrictlySorted!91 (toList!851 lt!69206) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))) lt!70667)))

(declare-fun b!135397 () Bool)

(declare-fun e!88153 () List!1710)

(assert (=> b!135397 (= e!88156 e!88153)))

(assert (=> b!135397 (= c!25333 (and ((_ is Cons!1706) (toList!851 lt!69206)) (= (_1!1303 (h!2311 (toList!851 lt!69206))) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))))))

(declare-fun b!135398 () Bool)

(declare-fun e!88155 () List!1710)

(declare-fun call!14865 () List!1710)

(assert (=> b!135398 (= e!88155 call!14865)))

(declare-fun b!135399 () Bool)

(declare-fun call!14866 () List!1710)

(assert (=> b!135399 (= e!88153 call!14866)))

(declare-fun b!135400 () Bool)

(assert (=> b!135400 (= e!88154 (contains!889 lt!70667 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))))))

(declare-fun bm!14863 () Bool)

(assert (=> bm!14863 (= call!14866 call!14867)))

(declare-fun bm!14864 () Bool)

(assert (=> bm!14864 (= call!14865 call!14866)))

(declare-fun b!135401 () Bool)

(assert (=> b!135401 (= c!25336 (and ((_ is Cons!1706) (toList!851 lt!69206)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69206))) (_1!1303 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))))))

(assert (=> b!135401 (= e!88153 e!88155)))

(declare-fun b!135402 () Bool)

(assert (=> b!135402 (= e!88155 call!14865)))

(assert (= (and d!42151 c!25334) b!135394))

(assert (= (and d!42151 (not c!25334)) b!135397))

(assert (= (and b!135397 c!25333) b!135399))

(assert (= (and b!135397 (not c!25333)) b!135401))

(assert (= (and b!135401 c!25336) b!135402))

(assert (= (and b!135401 (not c!25336)) b!135398))

(assert (= (or b!135402 b!135398) bm!14864))

(assert (= (or b!135399 bm!14864) bm!14863))

(assert (= (or b!135394 bm!14863) bm!14862))

(assert (= (and bm!14862 c!25335) b!135393))

(assert (= (and bm!14862 (not c!25335)) b!135396))

(assert (= (and d!42151 res!64964) b!135395))

(assert (= (and b!135395 res!64965) b!135400))

(declare-fun m!161041 () Bool)

(assert (=> b!135400 m!161041))

(declare-fun m!161043 () Bool)

(assert (=> b!135395 m!161043))

(declare-fun m!161045 () Bool)

(assert (=> b!135393 m!161045))

(declare-fun m!161047 () Bool)

(assert (=> d!42151 m!161047))

(declare-fun m!161049 () Bool)

(assert (=> d!42151 m!161049))

(declare-fun m!161051 () Bool)

(assert (=> bm!14862 m!161051))

(assert (=> d!40749 d!42151))

(declare-fun c!25337 () Bool)

(declare-fun d!42153 () Bool)

(assert (=> d!42153 (= c!25337 (and ((_ is Cons!1706) (t!6152 (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (= (_1!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))) lt!69177)))))

(declare-fun e!88158 () Option!176)

(assert (=> d!42153 (= (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!69177) e!88158)))

(declare-fun b!135405 () Bool)

(declare-fun e!88159 () Option!176)

(assert (=> b!135405 (= e!88159 (getValueByKey!170 (t!6152 (t!6152 (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69177))))

(declare-fun b!135404 () Bool)

(assert (=> b!135404 (= e!88158 e!88159)))

(declare-fun c!25338 () Bool)

(assert (=> b!135404 (= c!25338 (and ((_ is Cons!1706) (t!6152 (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))) lt!69177))))))

(declare-fun b!135403 () Bool)

(assert (=> b!135403 (= e!88158 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69172 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))))

(declare-fun b!135406 () Bool)

(assert (=> b!135406 (= e!88159 None!174)))

(assert (= (and d!42153 c!25337) b!135403))

(assert (= (and d!42153 (not c!25337)) b!135404))

(assert (= (and b!135404 c!25338) b!135405))

(assert (= (and b!135404 (not c!25338)) b!135406))

(declare-fun m!161053 () Bool)

(assert (=> b!135405 m!161053))

(assert (=> b!133867 d!42153))

(assert (=> b!133471 d!41367))

(assert (=> d!40823 d!40821))

(assert (=> d!40823 d!40383))

(assert (=> d!40823 d!40825))

(declare-fun lt!70668 () Bool)

(declare-fun d!42155 () Bool)

(assert (=> d!42155 (= lt!70668 (select (content!133 (toList!851 lt!70037)) (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun e!88161 () Bool)

(assert (=> d!42155 (= lt!70668 e!88161)))

(declare-fun res!64966 () Bool)

(assert (=> d!42155 (=> (not res!64966) (not e!88161))))

(assert (=> d!42155 (= res!64966 ((_ is Cons!1706) (toList!851 lt!70037)))))

(assert (=> d!42155 (= (contains!889 (toList!851 lt!70037) (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70668)))

(declare-fun b!135407 () Bool)

(declare-fun e!88160 () Bool)

(assert (=> b!135407 (= e!88161 e!88160)))

(declare-fun res!64967 () Bool)

(assert (=> b!135407 (=> res!64967 e!88160)))

(assert (=> b!135407 (= res!64967 (= (h!2311 (toList!851 lt!70037)) (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!135408 () Bool)

(assert (=> b!135408 (= e!88160 (contains!889 (t!6152 (toList!851 lt!70037)) (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (= (and d!42155 res!64966) b!135407))

(assert (= (and b!135407 (not res!64967)) b!135408))

(declare-fun m!161055 () Bool)

(assert (=> d!42155 m!161055))

(declare-fun m!161057 () Bool)

(assert (=> d!42155 m!161057))

(declare-fun m!161059 () Bool)

(assert (=> b!135408 m!161059))

(assert (=> b!133940 d!42155))

(assert (=> b!133246 d!41185))

(declare-fun d!42157 () Bool)

(assert (=> d!42157 (isDefined!124 (getValueByKey!170 (toList!851 lt!69301) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70669 () Unit!4132)

(assert (=> d!42157 (= lt!70669 (choose!826 (toList!851 lt!69301) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88162 () Bool)

(assert (=> d!42157 e!88162))

(declare-fun res!64968 () Bool)

(assert (=> d!42157 (=> (not res!64968) (not e!88162))))

(assert (=> d!42157 (= res!64968 (isStrictlySorted!317 (toList!851 lt!69301)))))

(assert (=> d!42157 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69301) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70669)))

(declare-fun b!135409 () Bool)

(assert (=> b!135409 (= e!88162 (containsKey!174 (toList!851 lt!69301) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42157 res!64968) b!135409))

(assert (=> d!42157 m!156949))

(assert (=> d!42157 m!156949))

(assert (=> d!42157 m!156951))

(declare-fun m!161061 () Bool)

(assert (=> d!42157 m!161061))

(assert (=> d!42157 m!159403))

(assert (=> b!135409 m!156945))

(assert (=> b!133288 d!42157))

(assert (=> b!133288 d!41569))

(assert (=> b!133288 d!41571))

(declare-fun d!42159 () Bool)

(declare-fun e!88163 () Bool)

(assert (=> d!42159 e!88163))

(declare-fun res!64970 () Bool)

(assert (=> d!42159 (=> (not res!64970) (not e!88163))))

(declare-fun lt!70672 () ListLongMap!1671)

(assert (=> d!42159 (= res!64970 (contains!886 lt!70672 (_1!1303 (tuple2!2585 lt!69610 lt!69611))))))

(declare-fun lt!70670 () List!1710)

(assert (=> d!42159 (= lt!70672 (ListLongMap!1672 lt!70670))))

(declare-fun lt!70673 () Unit!4132)

(declare-fun lt!70671 () Unit!4132)

(assert (=> d!42159 (= lt!70673 lt!70671)))

(assert (=> d!42159 (= (getValueByKey!170 lt!70670 (_1!1303 (tuple2!2585 lt!69610 lt!69611))) (Some!175 (_2!1303 (tuple2!2585 lt!69610 lt!69611))))))

(assert (=> d!42159 (= lt!70671 (lemmaContainsTupThenGetReturnValue!88 lt!70670 (_1!1303 (tuple2!2585 lt!69610 lt!69611)) (_2!1303 (tuple2!2585 lt!69610 lt!69611))))))

(assert (=> d!42159 (= lt!70670 (insertStrictlySorted!91 (toList!851 lt!69607) (_1!1303 (tuple2!2585 lt!69610 lt!69611)) (_2!1303 (tuple2!2585 lt!69610 lt!69611))))))

(assert (=> d!42159 (= (+!163 lt!69607 (tuple2!2585 lt!69610 lt!69611)) lt!70672)))

(declare-fun b!135410 () Bool)

(declare-fun res!64969 () Bool)

(assert (=> b!135410 (=> (not res!64969) (not e!88163))))

(assert (=> b!135410 (= res!64969 (= (getValueByKey!170 (toList!851 lt!70672) (_1!1303 (tuple2!2585 lt!69610 lt!69611))) (Some!175 (_2!1303 (tuple2!2585 lt!69610 lt!69611)))))))

(declare-fun b!135411 () Bool)

(assert (=> b!135411 (= e!88163 (contains!889 (toList!851 lt!70672) (tuple2!2585 lt!69610 lt!69611)))))

(assert (= (and d!42159 res!64970) b!135410))

(assert (= (and b!135410 res!64969) b!135411))

(declare-fun m!161063 () Bool)

(assert (=> d!42159 m!161063))

(declare-fun m!161065 () Bool)

(assert (=> d!42159 m!161065))

(declare-fun m!161067 () Bool)

(assert (=> d!42159 m!161067))

(declare-fun m!161069 () Bool)

(assert (=> d!42159 m!161069))

(declare-fun m!161071 () Bool)

(assert (=> b!135410 m!161071))

(declare-fun m!161073 () Bool)

(assert (=> b!135411 m!161073))

(assert (=> b!133337 d!42159))

(assert (=> b!133337 d!40497))

(declare-fun d!42161 () Bool)

(declare-fun e!88164 () Bool)

(assert (=> d!42161 e!88164))

(declare-fun res!64971 () Bool)

(assert (=> d!42161 (=> res!64971 e!88164)))

(declare-fun lt!70675 () Bool)

(assert (=> d!42161 (= res!64971 (not lt!70675))))

(declare-fun lt!70677 () Bool)

(assert (=> d!42161 (= lt!70675 lt!70677)))

(declare-fun lt!70674 () Unit!4132)

(declare-fun e!88165 () Unit!4132)

(assert (=> d!42161 (= lt!70674 e!88165)))

(declare-fun c!25339 () Bool)

(assert (=> d!42161 (= c!25339 lt!70677)))

(assert (=> d!42161 (= lt!70677 (containsKey!174 (toList!851 (+!163 lt!69607 (tuple2!2585 lt!69610 lt!69611))) lt!69612))))

(assert (=> d!42161 (= (contains!886 (+!163 lt!69607 (tuple2!2585 lt!69610 lt!69611)) lt!69612) lt!70675)))

(declare-fun b!135412 () Bool)

(declare-fun lt!70676 () Unit!4132)

(assert (=> b!135412 (= e!88165 lt!70676)))

(assert (=> b!135412 (= lt!70676 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69607 (tuple2!2585 lt!69610 lt!69611))) lt!69612))))

(assert (=> b!135412 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69607 (tuple2!2585 lt!69610 lt!69611))) lt!69612))))

(declare-fun b!135413 () Bool)

(declare-fun Unit!4251 () Unit!4132)

(assert (=> b!135413 (= e!88165 Unit!4251)))

(declare-fun b!135414 () Bool)

(assert (=> b!135414 (= e!88164 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69607 (tuple2!2585 lt!69610 lt!69611))) lt!69612)))))

(assert (= (and d!42161 c!25339) b!135412))

(assert (= (and d!42161 (not c!25339)) b!135413))

(assert (= (and d!42161 (not res!64971)) b!135414))

(declare-fun m!161075 () Bool)

(assert (=> d!42161 m!161075))

(declare-fun m!161077 () Bool)

(assert (=> b!135412 m!161077))

(declare-fun m!161079 () Bool)

(assert (=> b!135412 m!161079))

(assert (=> b!135412 m!161079))

(declare-fun m!161081 () Bool)

(assert (=> b!135412 m!161081))

(assert (=> b!135414 m!161079))

(assert (=> b!135414 m!161079))

(assert (=> b!135414 m!161081))

(assert (=> b!133337 d!42161))

(declare-fun d!42163 () Bool)

(declare-fun e!88166 () Bool)

(assert (=> d!42163 e!88166))

(declare-fun res!64973 () Bool)

(assert (=> d!42163 (=> (not res!64973) (not e!88166))))

(declare-fun lt!70680 () ListLongMap!1671)

(assert (=> d!42163 (= res!64973 (contains!886 lt!70680 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70678 () List!1710)

(assert (=> d!42163 (= lt!70680 (ListLongMap!1672 lt!70678))))

(declare-fun lt!70681 () Unit!4132)

(declare-fun lt!70679 () Unit!4132)

(assert (=> d!42163 (= lt!70681 lt!70679)))

(assert (=> d!42163 (= (getValueByKey!170 lt!70678 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42163 (= lt!70679 (lemmaContainsTupThenGetReturnValue!88 lt!70678 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42163 (= lt!70678 (insertStrictlySorted!91 (toList!851 call!14698) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42163 (= (+!163 call!14698 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70680)))

(declare-fun b!135415 () Bool)

(declare-fun res!64972 () Bool)

(assert (=> b!135415 (=> (not res!64972) (not e!88166))))

(assert (=> b!135415 (= res!64972 (= (getValueByKey!170 (toList!851 lt!70680) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135416 () Bool)

(assert (=> b!135416 (= e!88166 (contains!889 (toList!851 lt!70680) (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42163 res!64973) b!135415))

(assert (= (and b!135415 res!64972) b!135416))

(declare-fun m!161083 () Bool)

(assert (=> d!42163 m!161083))

(declare-fun m!161085 () Bool)

(assert (=> d!42163 m!161085))

(declare-fun m!161087 () Bool)

(assert (=> d!42163 m!161087))

(declare-fun m!161089 () Bool)

(assert (=> d!42163 m!161089))

(declare-fun m!161091 () Bool)

(assert (=> b!135415 m!161091))

(declare-fun m!161093 () Bool)

(assert (=> b!135416 m!161093))

(assert (=> b!133337 d!42163))

(declare-fun d!42165 () Bool)

(assert (=> d!42165 (not (contains!886 (+!163 lt!69607 (tuple2!2585 lt!69610 lt!69611)) lt!69612))))

(declare-fun lt!70682 () Unit!4132)

(assert (=> d!42165 (= lt!70682 (choose!835 lt!69607 lt!69610 lt!69611 lt!69612))))

(declare-fun e!88167 () Bool)

(assert (=> d!42165 e!88167))

(declare-fun res!64974 () Bool)

(assert (=> d!42165 (=> (not res!64974) (not e!88167))))

(assert (=> d!42165 (= res!64974 (not (contains!886 lt!69607 lt!69612)))))

(assert (=> d!42165 (= (addStillNotContains!62 lt!69607 lt!69610 lt!69611 lt!69612) lt!70682)))

(declare-fun b!135417 () Bool)

(assert (=> b!135417 (= e!88167 (not (= lt!69610 lt!69612)))))

(assert (= (and d!42165 res!64974) b!135417))

(assert (=> d!42165 m!157011))

(assert (=> d!42165 m!157011))

(assert (=> d!42165 m!157013))

(declare-fun m!161095 () Bool)

(assert (=> d!42165 m!161095))

(declare-fun m!161097 () Bool)

(assert (=> d!42165 m!161097))

(assert (=> b!133337 d!42165))

(declare-fun d!42167 () Bool)

(declare-fun res!64975 () Bool)

(declare-fun e!88168 () Bool)

(assert (=> d!42167 (=> res!64975 e!88168)))

(assert (=> d!42167 (= res!64975 (and ((_ is Cons!1706) lt!69333) (= (_1!1303 (h!2311 lt!69333)) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!42167 (= (containsKey!174 lt!69333 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!88168)))

(declare-fun b!135418 () Bool)

(declare-fun e!88169 () Bool)

(assert (=> b!135418 (= e!88168 e!88169)))

(declare-fun res!64976 () Bool)

(assert (=> b!135418 (=> (not res!64976) (not e!88169))))

(assert (=> b!135418 (= res!64976 (and (or (not ((_ is Cons!1706) lt!69333)) (bvsle (_1!1303 (h!2311 lt!69333)) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Cons!1706) lt!69333) (bvslt (_1!1303 (h!2311 lt!69333)) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135419 () Bool)

(assert (=> b!135419 (= e!88169 (containsKey!174 (t!6152 lt!69333) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!42167 (not res!64975)) b!135418))

(assert (= (and b!135418 res!64976) b!135419))

(declare-fun m!161099 () Bool)

(assert (=> b!135419 m!161099))

(assert (=> b!133319 d!42167))

(assert (=> b!133564 d!41961))

(assert (=> b!133564 d!41963))

(declare-fun d!42169 () Bool)

(assert (=> d!42169 (= (apply!116 lt!69923 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (getValueByKey!170 (toList!851 lt!69923) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5663 () Bool)

(assert (= bs!5663 d!42169))

(assert (=> bs!5663 m!156125))

(assert (=> bs!5663 m!160595))

(assert (=> bs!5663 m!160595))

(declare-fun m!161101 () Bool)

(assert (=> bs!5663 m!161101))

(assert (=> b!133758 d!42169))

(assert (=> b!133758 d!40497))

(assert (=> b!133361 d!41519))

(assert (=> b!133678 d!41931))

(assert (=> b!133678 d!41371))

(assert (=> b!133876 d!41991))

(assert (=> b!133876 d!40985))

(assert (=> b!133801 d!42003))

(assert (=> b!133801 d!41319))

(assert (=> b!133920 d!42007))

(assert (=> b!133920 d!42009))

(assert (=> d!40593 d!40607))

(declare-fun d!42171 () Bool)

(declare-fun e!88170 () Bool)

(assert (=> d!42171 e!88170))

(declare-fun res!64977 () Bool)

(assert (=> d!42171 (=> res!64977 e!88170)))

(declare-fun lt!70684 () Bool)

(assert (=> d!42171 (= res!64977 (not lt!70684))))

(declare-fun lt!70686 () Bool)

(assert (=> d!42171 (= lt!70684 lt!70686)))

(declare-fun lt!70683 () Unit!4132)

(declare-fun e!88171 () Unit!4132)

(assert (=> d!42171 (= lt!70683 e!88171)))

(declare-fun c!25340 () Bool)

(assert (=> d!42171 (= c!25340 lt!70686)))

(assert (=> d!42171 (= lt!70686 (containsKey!174 (toList!851 lt!69470) lt!69475))))

(assert (=> d!42171 (= (contains!886 lt!69470 lt!69475) lt!70684)))

(declare-fun b!135420 () Bool)

(declare-fun lt!70685 () Unit!4132)

(assert (=> b!135420 (= e!88171 lt!70685)))

(assert (=> b!135420 (= lt!70685 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69470) lt!69475))))

(assert (=> b!135420 (isDefined!124 (getValueByKey!170 (toList!851 lt!69470) lt!69475))))

(declare-fun b!135421 () Bool)

(declare-fun Unit!4252 () Unit!4132)

(assert (=> b!135421 (= e!88171 Unit!4252)))

(declare-fun b!135422 () Bool)

(assert (=> b!135422 (= e!88170 (isDefined!124 (getValueByKey!170 (toList!851 lt!69470) lt!69475)))))

(assert (= (and d!42171 c!25340) b!135420))

(assert (= (and d!42171 (not c!25340)) b!135421))

(assert (= (and d!42171 (not res!64977)) b!135422))

(declare-fun m!161103 () Bool)

(assert (=> d!42171 m!161103))

(declare-fun m!161105 () Bool)

(assert (=> b!135420 m!161105))

(assert (=> b!135420 m!157351))

(assert (=> b!135420 m!157351))

(declare-fun m!161107 () Bool)

(assert (=> b!135420 m!161107))

(assert (=> b!135422 m!157351))

(assert (=> b!135422 m!157351))

(assert (=> b!135422 m!161107))

(assert (=> d!40593 d!42171))

(assert (=> d!40593 d!40611))

(assert (=> d!40593 d!40597))

(declare-fun d!42173 () Bool)

(assert (=> d!42173 (= (apply!116 (+!163 lt!69470 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69475) (apply!116 lt!69470 lt!69475))))

(assert (=> d!42173 true))

(declare-fun _$34!987 () Unit!4132)

(assert (=> d!42173 (= (choose!828 lt!69470 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69475) _$34!987)))

(declare-fun bs!5664 () Bool)

(assert (= bs!5664 d!42173))

(assert (=> bs!5664 m!156633))

(assert (=> bs!5664 m!156633))

(assert (=> bs!5664 m!156635))

(assert (=> bs!5664 m!156643))

(assert (=> d!40593 d!42173))

(declare-fun d!42175 () Bool)

(assert (=> d!42175 (= (get!1482 (getValueByKey!170 (toList!851 lt!69362) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))) (v!3198 (getValueByKey!170 (toList!851 lt!69362) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!40685 d!42175))

(assert (=> d!40685 d!41947))

(declare-fun d!42177 () Bool)

(assert (=> d!42177 (= (apply!116 lt!69974 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)) (get!1482 (getValueByKey!170 (toList!851 lt!69974) (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000))))))

(declare-fun bs!5665 () Bool)

(assert (= bs!5665 d!42177))

(assert (=> bs!5665 m!156913))

(assert (=> bs!5665 m!160719))

(assert (=> bs!5665 m!160719))

(declare-fun m!161109 () Bool)

(assert (=> bs!5665 m!161109))

(assert (=> b!133849 d!42177))

(declare-fun d!42179 () Bool)

(declare-fun c!25341 () Bool)

(assert (=> d!42179 (= c!25341 ((_ is ValueCellFull!1094) (select (arr!2249 (_values!2847 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(declare-fun e!88172 () V!3481)

(assert (=> d!42179 (= (get!1478 (select (arr!2249 (_values!2847 (_2!1304 lt!69115))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 (_2!1304 lt!69115)) #b0000000000000000000000000000000000000000000000000000000000000000)) e!88172)))

(declare-fun b!135423 () Bool)

(assert (=> b!135423 (= e!88172 (get!1480 (select (arr!2249 (_values!2847 (_2!1304 lt!69115))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 (_2!1304 lt!69115)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135424 () Bool)

(assert (=> b!135424 (= e!88172 (get!1481 (select (arr!2249 (_values!2847 (_2!1304 lt!69115))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 (_2!1304 lt!69115)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42179 c!25341) b!135423))

(assert (= (and d!42179 (not c!25341)) b!135424))

(assert (=> b!135423 m!158145))

(assert (=> b!135423 m!158147))

(declare-fun m!161111 () Bool)

(assert (=> b!135423 m!161111))

(assert (=> b!135424 m!158145))

(assert (=> b!135424 m!158147))

(declare-fun m!161113 () Bool)

(assert (=> b!135424 m!161113))

(assert (=> b!133849 d!42179))

(assert (=> b!133608 d!40519))

(declare-fun b!135425 () Bool)

(declare-fun e!88173 () Bool)

(declare-fun call!14868 () Bool)

(assert (=> b!135425 (= e!88173 call!14868)))

(declare-fun b!135426 () Bool)

(declare-fun e!88174 () Bool)

(assert (=> b!135426 (= e!88174 e!88173)))

(declare-fun lt!70687 () (_ BitVec 64))

(assert (=> b!135426 (= lt!70687 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!70689 () Unit!4132)

(assert (=> b!135426 (= lt!70689 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!70687 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!135426 (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!70687 #b00000000000000000000000000000000)))

(declare-fun lt!70688 () Unit!4132)

(assert (=> b!135426 (= lt!70688 lt!70689)))

(declare-fun res!64979 () Bool)

(assert (=> b!135426 (= res!64979 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (Found!278 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!135426 (=> (not res!64979) (not e!88173))))

(declare-fun d!42181 () Bool)

(declare-fun res!64978 () Bool)

(declare-fun e!88175 () Bool)

(assert (=> d!42181 (=> res!64978 e!88175)))

(assert (=> d!42181 (= res!64978 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!42181 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) e!88175)))

(declare-fun b!135427 () Bool)

(assert (=> b!135427 (= e!88175 e!88174)))

(declare-fun c!25342 () Bool)

(assert (=> b!135427 (= c!25342 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!135428 () Bool)

(assert (=> b!135428 (= e!88174 call!14868)))

(declare-fun bm!14865 () Bool)

(assert (=> bm!14865 (= call!14868 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(assert (= (and d!42181 (not res!64978)) b!135427))

(assert (= (and b!135427 c!25342) b!135426))

(assert (= (and b!135427 (not c!25342)) b!135428))

(assert (= (and b!135426 res!64979) b!135425))

(assert (= (or b!135425 b!135428) bm!14865))

(assert (=> b!135426 m!158981))

(declare-fun m!161115 () Bool)

(assert (=> b!135426 m!161115))

(declare-fun m!161117 () Bool)

(assert (=> b!135426 m!161117))

(assert (=> b!135426 m!158981))

(declare-fun m!161119 () Bool)

(assert (=> b!135426 m!161119))

(assert (=> b!135427 m!158981))

(assert (=> b!135427 m!158981))

(assert (=> b!135427 m!158983))

(declare-fun m!161121 () Bool)

(assert (=> bm!14865 m!161121))

(assert (=> bm!14776 d!42181))

(assert (=> b!133576 d!41185))

(assert (=> b!133734 d!42019))

(assert (=> b!133734 d!40639))

(declare-fun d!42183 () Bool)

(declare-fun c!25343 () Bool)

(assert (=> d!42183 (= c!25343 (and ((_ is Cons!1706) (t!6152 (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (= (_1!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))) lt!69190)))))

(declare-fun e!88176 () Option!176)

(assert (=> d!42183 (= (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!69190) e!88176)))

(declare-fun b!135431 () Bool)

(declare-fun e!88177 () Option!176)

(assert (=> b!135431 (= e!88177 (getValueByKey!170 (t!6152 (t!6152 (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69190))))

(declare-fun b!135430 () Bool)

(assert (=> b!135430 (= e!88176 e!88177)))

(declare-fun c!25344 () Bool)

(assert (=> b!135430 (= c!25344 (and ((_ is Cons!1706) (t!6152 (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))) lt!69190))))))

(declare-fun b!135429 () Bool)

(assert (=> b!135429 (= e!88176 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69179 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))))

(declare-fun b!135432 () Bool)

(assert (=> b!135432 (= e!88177 None!174)))

(assert (= (and d!42183 c!25343) b!135429))

(assert (= (and d!42183 (not c!25343)) b!135430))

(assert (= (and b!135430 c!25344) b!135431))

(assert (= (and b!135430 (not c!25344)) b!135432))

(declare-fun m!161123 () Bool)

(assert (=> b!135431 m!161123))

(assert (=> b!133908 d!42183))

(declare-fun c!25345 () Bool)

(declare-fun d!42185 () Bool)

(assert (=> d!42185 (= c!25345 (and ((_ is Cons!1706) (toList!851 lt!69863)) (= (_1!1303 (h!2311 (toList!851 lt!69863))) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))))))))

(declare-fun e!88178 () Option!176)

(assert (=> d!42185 (= (getValueByKey!170 (toList!851 lt!69863) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))) e!88178)))

(declare-fun e!88179 () Option!176)

(declare-fun b!135435 () Bool)

(assert (=> b!135435 (= e!88179 (getValueByKey!170 (t!6152 (toList!851 lt!69863)) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135434 () Bool)

(assert (=> b!135434 (= e!88178 e!88179)))

(declare-fun c!25346 () Bool)

(assert (=> b!135434 (= c!25346 (and ((_ is Cons!1706) (toList!851 lt!69863)) (not (= (_1!1303 (h!2311 (toList!851 lt!69863))) (_1!1303 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!135433 () Bool)

(assert (=> b!135433 (= e!88178 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69863)))))))

(declare-fun b!135436 () Bool)

(assert (=> b!135436 (= e!88179 None!174)))

(assert (= (and d!42185 c!25345) b!135433))

(assert (= (and d!42185 (not c!25345)) b!135434))

(assert (= (and b!135434 c!25346) b!135435))

(assert (= (and b!135434 (not c!25346)) b!135436))

(declare-fun m!161125 () Bool)

(assert (=> b!135435 m!161125))

(assert (=> b!133642 d!42185))

(assert (=> b!133938 d!41945))

(assert (=> b!133938 d!41947))

(declare-fun d!42187 () Bool)

(assert (=> d!42187 (= (get!1482 (getValueByKey!170 (toList!851 lt!69236) lt!69241)) (v!3198 (getValueByKey!170 (toList!851 lt!69236) lt!69241)))))

(assert (=> d!40697 d!42187))

(declare-fun d!42189 () Bool)

(declare-fun c!25347 () Bool)

(assert (=> d!42189 (= c!25347 (and ((_ is Cons!1706) (toList!851 lt!69236)) (= (_1!1303 (h!2311 (toList!851 lt!69236))) lt!69241)))))

(declare-fun e!88180 () Option!176)

(assert (=> d!42189 (= (getValueByKey!170 (toList!851 lt!69236) lt!69241) e!88180)))

(declare-fun b!135439 () Bool)

(declare-fun e!88181 () Option!176)

(assert (=> b!135439 (= e!88181 (getValueByKey!170 (t!6152 (toList!851 lt!69236)) lt!69241))))

(declare-fun b!135438 () Bool)

(assert (=> b!135438 (= e!88180 e!88181)))

(declare-fun c!25348 () Bool)

(assert (=> b!135438 (= c!25348 (and ((_ is Cons!1706) (toList!851 lt!69236)) (not (= (_1!1303 (h!2311 (toList!851 lt!69236))) lt!69241))))))

(declare-fun b!135437 () Bool)

(assert (=> b!135437 (= e!88180 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69236)))))))

(declare-fun b!135440 () Bool)

(assert (=> b!135440 (= e!88181 None!174)))

(assert (= (and d!42189 c!25347) b!135437))

(assert (= (and d!42189 (not c!25347)) b!135438))

(assert (= (and b!135438 c!25348) b!135439))

(assert (= (and b!135438 (not c!25348)) b!135440))

(declare-fun m!161127 () Bool)

(assert (=> b!135439 m!161127))

(assert (=> d!40697 d!42189))

(assert (=> d!40877 d!41941))

(declare-fun d!42191 () Bool)

(declare-fun e!88182 () Bool)

(assert (=> d!42191 e!88182))

(declare-fun res!64980 () Bool)

(assert (=> d!42191 (=> res!64980 e!88182)))

(declare-fun lt!70691 () Bool)

(assert (=> d!42191 (= res!64980 (not lt!70691))))

(declare-fun lt!70693 () Bool)

(assert (=> d!42191 (= lt!70691 lt!70693)))

(declare-fun lt!70690 () Unit!4132)

(declare-fun e!88183 () Unit!4132)

(assert (=> d!42191 (= lt!70690 e!88183)))

(declare-fun c!25349 () Bool)

(assert (=> d!42191 (= c!25349 lt!70693)))

(assert (=> d!42191 (= lt!70693 (containsKey!174 (toList!851 lt!69696) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42191 (= (contains!886 lt!69696 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70691)))

(declare-fun b!135441 () Bool)

(declare-fun lt!70692 () Unit!4132)

(assert (=> b!135441 (= e!88183 lt!70692)))

(assert (=> b!135441 (= lt!70692 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69696) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135441 (isDefined!124 (getValueByKey!170 (toList!851 lt!69696) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135442 () Bool)

(declare-fun Unit!4253 () Unit!4132)

(assert (=> b!135442 (= e!88183 Unit!4253)))

(declare-fun b!135443 () Bool)

(assert (=> b!135443 (= e!88182 (isDefined!124 (getValueByKey!170 (toList!851 lt!69696) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42191 c!25349) b!135441))

(assert (= (and d!42191 (not c!25349)) b!135442))

(assert (= (and d!42191 (not res!64980)) b!135443))

(declare-fun m!161129 () Bool)

(assert (=> d!42191 m!161129))

(declare-fun m!161131 () Bool)

(assert (=> b!135441 m!161131))

(declare-fun m!161133 () Bool)

(assert (=> b!135441 m!161133))

(assert (=> b!135441 m!161133))

(declare-fun m!161135 () Bool)

(assert (=> b!135441 m!161135))

(assert (=> b!135443 m!161133))

(assert (=> b!135443 m!161133))

(assert (=> b!135443 m!161135))

(assert (=> d!40583 d!42191))

(assert (=> d!40583 d!40269))

(declare-fun d!42193 () Bool)

(assert (=> d!42193 (isDefined!124 (getValueByKey!170 (toList!851 lt!69301) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70694 () Unit!4132)

(assert (=> d!42193 (= lt!70694 (choose!826 (toList!851 lt!69301) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88184 () Bool)

(assert (=> d!42193 e!88184))

(declare-fun res!64981 () Bool)

(assert (=> d!42193 (=> (not res!64981) (not e!88184))))

(assert (=> d!42193 (= res!64981 (isStrictlySorted!317 (toList!851 lt!69301)))))

(assert (=> d!42193 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69301) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70694)))

(declare-fun b!135444 () Bool)

(assert (=> b!135444 (= e!88184 (containsKey!174 (toList!851 lt!69301) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42193 res!64981) b!135444))

(assert (=> d!42193 m!156799))

(assert (=> d!42193 m!156799))

(assert (=> d!42193 m!156801))

(declare-fun m!161137 () Bool)

(assert (=> d!42193 m!161137))

(assert (=> d!42193 m!159403))

(assert (=> b!135444 m!156795))

(assert (=> b!133192 d!42193))

(assert (=> b!133192 d!41599))

(assert (=> b!133192 d!41601))

(declare-fun d!42195 () Bool)

(declare-fun res!64982 () Bool)

(declare-fun e!88185 () Bool)

(assert (=> d!42195 (=> res!64982 e!88185)))

(assert (=> d!42195 (= res!64982 (and ((_ is Cons!1706) lt!69517) (= (_1!1303 (h!2311 lt!69517)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!42195 (= (containsKey!174 lt!69517 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!88185)))

(declare-fun b!135445 () Bool)

(declare-fun e!88186 () Bool)

(assert (=> b!135445 (= e!88185 e!88186)))

(declare-fun res!64983 () Bool)

(assert (=> b!135445 (=> (not res!64983) (not e!88186))))

(assert (=> b!135445 (= res!64983 (and (or (not ((_ is Cons!1706) lt!69517)) (bvsle (_1!1303 (h!2311 lt!69517)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Cons!1706) lt!69517) (bvslt (_1!1303 (h!2311 lt!69517)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135446 () Bool)

(assert (=> b!135446 (= e!88186 (containsKey!174 (t!6152 lt!69517) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!42195 (not res!64982)) b!135445))

(assert (= (and b!135445 res!64983) b!135446))

(declare-fun m!161139 () Bool)

(assert (=> b!135446 m!161139))

(assert (=> b!133694 d!42195))

(declare-fun b!135447 () Bool)

(declare-fun e!88187 () (_ BitVec 32))

(declare-fun e!88188 () (_ BitVec 32))

(assert (=> b!135447 (= e!88187 e!88188)))

(declare-fun c!25351 () Bool)

(assert (=> b!135447 (= c!25351 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135448 () Bool)

(declare-fun call!14869 () (_ BitVec 32))

(assert (=> b!135448 (= e!88188 (bvadd #b00000000000000000000000000000001 call!14869))))

(declare-fun d!42197 () Bool)

(declare-fun lt!70695 () (_ BitVec 32))

(assert (=> d!42197 (and (bvsge lt!70695 #b00000000000000000000000000000000) (bvsle lt!70695 (bvsub (size!2518 (_keys!4612 (_2!1304 lt!69115))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!42197 (= lt!70695 e!88187)))

(declare-fun c!25350 () Bool)

(assert (=> d!42197 (= c!25350 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(assert (=> d!42197 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (_2!1304 lt!69115)))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2518 (_keys!4612 (_2!1304 lt!69115))) (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(assert (=> d!42197 (= (arrayCountValidKeys!0 (_keys!4612 (_2!1304 lt!69115)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (_2!1304 lt!69115)))) lt!70695)))

(declare-fun b!135449 () Bool)

(assert (=> b!135449 (= e!88188 call!14869)))

(declare-fun b!135450 () Bool)

(assert (=> b!135450 (= e!88187 #b00000000000000000000000000000000)))

(declare-fun bm!14866 () Bool)

(assert (=> bm!14866 (= call!14869 (arrayCountValidKeys!0 (_keys!4612 (_2!1304 lt!69115)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(assert (= (and d!42197 c!25350) b!135450))

(assert (= (and d!42197 (not c!25350)) b!135447))

(assert (= (and b!135447 c!25351) b!135448))

(assert (= (and b!135447 (not c!25351)) b!135449))

(assert (= (or b!135448 b!135449) bm!14866))

(declare-fun m!161141 () Bool)

(assert (=> b!135447 m!161141))

(assert (=> b!135447 m!161141))

(declare-fun m!161143 () Bool)

(assert (=> b!135447 m!161143))

(declare-fun m!161145 () Bool)

(assert (=> bm!14866 m!161145))

(assert (=> bm!14691 d!42197))

(assert (=> b!133798 d!40849))

(assert (=> b!133557 d!40773))

(assert (=> b!133424 d!40547))

(declare-fun d!42199 () Bool)

(declare-fun e!88189 () Bool)

(assert (=> d!42199 e!88189))

(declare-fun res!64984 () Bool)

(assert (=> d!42199 (=> res!64984 e!88189)))

(declare-fun lt!70697 () Bool)

(assert (=> d!42199 (= res!64984 (not lt!70697))))

(declare-fun lt!70699 () Bool)

(assert (=> d!42199 (= lt!70697 lt!70699)))

(declare-fun lt!70696 () Unit!4132)

(declare-fun e!88190 () Unit!4132)

(assert (=> d!42199 (= lt!70696 e!88190)))

(declare-fun c!25352 () Bool)

(assert (=> d!42199 (= c!25352 lt!70699)))

(assert (=> d!42199 (= lt!70699 (containsKey!174 (toList!851 lt!69923) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42199 (= (contains!886 lt!69923 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70697)))

(declare-fun b!135451 () Bool)

(declare-fun lt!70698 () Unit!4132)

(assert (=> b!135451 (= e!88190 lt!70698)))

(assert (=> b!135451 (= lt!70698 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69923) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135451 (isDefined!124 (getValueByKey!170 (toList!851 lt!69923) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135452 () Bool)

(declare-fun Unit!4254 () Unit!4132)

(assert (=> b!135452 (= e!88190 Unit!4254)))

(declare-fun b!135453 () Bool)

(assert (=> b!135453 (= e!88189 (isDefined!124 (getValueByKey!170 (toList!851 lt!69923) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42199 c!25352) b!135451))

(assert (= (and d!42199 (not c!25352)) b!135452))

(assert (= (and d!42199 (not res!64984)) b!135453))

(declare-fun m!161147 () Bool)

(assert (=> d!42199 m!161147))

(declare-fun m!161149 () Bool)

(assert (=> b!135451 m!161149))

(assert (=> b!135451 m!159801))

(assert (=> b!135451 m!159801))

(declare-fun m!161151 () Bool)

(assert (=> b!135451 m!161151))

(assert (=> b!135453 m!159801))

(assert (=> b!135453 m!159801))

(assert (=> b!135453 m!161151))

(assert (=> bm!14746 d!42199))

(declare-fun d!42201 () Bool)

(assert (=> d!42201 (= (isEmpty!413 (getValueByKey!170 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) (not ((_ is Some!175) (getValueByKey!170 (toList!851 e!86457) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(assert (=> d!40631 d!42201))

(declare-fun d!42203 () Bool)

(assert (=> d!42203 (= (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69355 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))) lt!69366)) (v!3198 (getValueByKey!170 (toList!851 (+!163 lt!69355 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))) lt!69366)))))

(assert (=> d!40939 d!42203))

(declare-fun c!25353 () Bool)

(declare-fun d!42205 () Bool)

(assert (=> d!42205 (= c!25353 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69355 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69355 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))) lt!69366)))))

(declare-fun e!88191 () Option!176)

(assert (=> d!42205 (= (getValueByKey!170 (toList!851 (+!163 lt!69355 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))) lt!69366) e!88191)))

(declare-fun b!135456 () Bool)

(declare-fun e!88192 () Option!176)

(assert (=> b!135456 (= e!88192 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69355 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))) lt!69366))))

(declare-fun b!135455 () Bool)

(assert (=> b!135455 (= e!88191 e!88192)))

(declare-fun c!25354 () Bool)

(assert (=> b!135455 (= c!25354 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69355 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69355 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))) lt!69366))))))

(declare-fun b!135454 () Bool)

(assert (=> b!135454 (= e!88191 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69355 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))))))))

(declare-fun b!135457 () Bool)

(assert (=> b!135457 (= e!88192 None!174)))

(assert (= (and d!42205 c!25353) b!135454))

(assert (= (and d!42205 (not c!25353)) b!135455))

(assert (= (and b!135455 c!25354) b!135456))

(assert (= (and b!135455 (not c!25354)) b!135457))

(declare-fun m!161153 () Bool)

(assert (=> b!135456 m!161153))

(assert (=> d!40939 d!42205))

(declare-fun lt!70700 () Bool)

(declare-fun d!42207 () Bool)

(assert (=> d!42207 (= lt!70700 (select (content!133 (toList!851 lt!69838)) (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))))

(declare-fun e!88194 () Bool)

(assert (=> d!42207 (= lt!70700 e!88194)))

(declare-fun res!64985 () Bool)

(assert (=> d!42207 (=> (not res!64985) (not e!88194))))

(assert (=> d!42207 (= res!64985 ((_ is Cons!1706) (toList!851 lt!69838)))))

(assert (=> d!42207 (= (contains!889 (toList!851 lt!69838) (tuple2!2585 lt!69214 (minValue!2719 newMap!16))) lt!70700)))

(declare-fun b!135458 () Bool)

(declare-fun e!88193 () Bool)

(assert (=> b!135458 (= e!88194 e!88193)))

(declare-fun res!64986 () Bool)

(assert (=> b!135458 (=> res!64986 e!88193)))

(assert (=> b!135458 (= res!64986 (= (h!2311 (toList!851 lt!69838)) (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))))

(declare-fun b!135459 () Bool)

(assert (=> b!135459 (= e!88193 (contains!889 (t!6152 (toList!851 lt!69838)) (tuple2!2585 lt!69214 (minValue!2719 newMap!16))))))

(assert (= (and d!42207 res!64985) b!135458))

(assert (= (and b!135458 (not res!64986)) b!135459))

(declare-fun m!161155 () Bool)

(assert (=> d!42207 m!161155))

(declare-fun m!161157 () Bool)

(assert (=> d!42207 m!161157))

(declare-fun m!161159 () Bool)

(assert (=> b!135459 m!161159))

(assert (=> b!133621 d!42207))

(declare-fun c!25355 () Bool)

(declare-fun d!42209 () Bool)

(assert (=> d!42209 (= c!25355 (and ((_ is Cons!1706) (toList!851 lt!70026)) (= (_1!1303 (h!2311 (toList!851 lt!70026))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88195 () Option!176)

(assert (=> d!42209 (= (getValueByKey!170 (toList!851 lt!70026) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88195)))

(declare-fun b!135462 () Bool)

(declare-fun e!88196 () Option!176)

(assert (=> b!135462 (= e!88196 (getValueByKey!170 (t!6152 (toList!851 lt!70026)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135461 () Bool)

(assert (=> b!135461 (= e!88195 e!88196)))

(declare-fun c!25356 () Bool)

(assert (=> b!135461 (= c!25356 (and ((_ is Cons!1706) (toList!851 lt!70026)) (not (= (_1!1303 (h!2311 (toList!851 lt!70026))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135460 () Bool)

(assert (=> b!135460 (= e!88195 (Some!175 (_2!1303 (h!2311 (toList!851 lt!70026)))))))

(declare-fun b!135463 () Bool)

(assert (=> b!135463 (= e!88196 None!174)))

(assert (= (and d!42209 c!25355) b!135460))

(assert (= (and d!42209 (not c!25355)) b!135461))

(assert (= (and b!135461 c!25356) b!135462))

(assert (= (and b!135461 (not c!25356)) b!135463))

(declare-fun m!161161 () Bool)

(assert (=> b!135462 m!161161))

(assert (=> b!133930 d!42209))

(declare-fun d!42211 () Bool)

(declare-fun e!88197 () Bool)

(assert (=> d!42211 e!88197))

(declare-fun res!64988 () Bool)

(assert (=> d!42211 (=> (not res!64988) (not e!88197))))

(declare-fun lt!70703 () ListLongMap!1671)

(assert (=> d!42211 (= res!64988 (contains!886 lt!70703 (_1!1303 (ite (or c!24740 c!24738) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!70701 () List!1710)

(assert (=> d!42211 (= lt!70703 (ListLongMap!1672 lt!70701))))

(declare-fun lt!70704 () Unit!4132)

(declare-fun lt!70702 () Unit!4132)

(assert (=> d!42211 (= lt!70704 lt!70702)))

(assert (=> d!42211 (= (getValueByKey!170 lt!70701 (_1!1303 (ite (or c!24740 c!24738) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24740 c!24738) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42211 (= lt!70702 (lemmaContainsTupThenGetReturnValue!88 lt!70701 (_1!1303 (ite (or c!24740 c!24738) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24740 c!24738) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42211 (= lt!70701 (insertStrictlySorted!91 (toList!851 (ite c!24740 call!14711 (ite c!24738 call!14714 call!14713))) (_1!1303 (ite (or c!24740 c!24738) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24740 c!24738) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42211 (= (+!163 (ite c!24740 call!14711 (ite c!24738 call!14714 call!14713)) (ite (or c!24740 c!24738) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70703)))

(declare-fun b!135464 () Bool)

(declare-fun res!64987 () Bool)

(assert (=> b!135464 (=> (not res!64987) (not e!88197))))

(assert (=> b!135464 (= res!64987 (= (getValueByKey!170 (toList!851 lt!70703) (_1!1303 (ite (or c!24740 c!24738) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24740 c!24738) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!135465 () Bool)

(assert (=> b!135465 (= e!88197 (contains!889 (toList!851 lt!70703) (ite (or c!24740 c!24738) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!42211 res!64988) b!135464))

(assert (= (and b!135464 res!64987) b!135465))

(declare-fun m!161163 () Bool)

(assert (=> d!42211 m!161163))

(declare-fun m!161165 () Bool)

(assert (=> d!42211 m!161165))

(declare-fun m!161167 () Bool)

(assert (=> d!42211 m!161167))

(declare-fun m!161169 () Bool)

(assert (=> d!42211 m!161169))

(declare-fun m!161171 () Bool)

(assert (=> b!135464 m!161171))

(declare-fun m!161173 () Bool)

(assert (=> b!135465 m!161173))

(assert (=> bm!14705 d!42211))

(assert (=> b!133871 d!42059))

(assert (=> b!133871 d!42061))

(declare-fun lt!70705 () Bool)

(declare-fun d!42213 () Bool)

(assert (=> d!42213 (= lt!70705 (select (content!133 lt!69318) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!88199 () Bool)

(assert (=> d!42213 (= lt!70705 e!88199)))

(declare-fun res!64989 () Bool)

(assert (=> d!42213 (=> (not res!64989) (not e!88199))))

(assert (=> d!42213 (= res!64989 ((_ is Cons!1706) lt!69318))))

(assert (=> d!42213 (= (contains!889 lt!69318 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!70705)))

(declare-fun b!135466 () Bool)

(declare-fun e!88198 () Bool)

(assert (=> b!135466 (= e!88199 e!88198)))

(declare-fun res!64990 () Bool)

(assert (=> b!135466 (=> res!64990 e!88198)))

(assert (=> b!135466 (= res!64990 (= (h!2311 lt!69318) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135467 () Bool)

(assert (=> b!135467 (= e!88198 (contains!889 (t!6152 lt!69318) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!42213 res!64989) b!135466))

(assert (= (and b!135466 (not res!64990)) b!135467))

(declare-fun m!161175 () Bool)

(assert (=> d!42213 m!161175))

(declare-fun m!161177 () Bool)

(assert (=> d!42213 m!161177))

(declare-fun m!161179 () Bool)

(assert (=> b!135467 m!161179))

(assert (=> b!133209 d!42213))

(declare-fun d!42215 () Bool)

(assert (=> d!42215 (= (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69470 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69475)) (v!3198 (getValueByKey!170 (toList!851 (+!163 lt!69470 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69475)))))

(assert (=> d!40597 d!42215))

(declare-fun d!42217 () Bool)

(declare-fun c!25357 () Bool)

(assert (=> d!42217 (= c!25357 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69470 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69470 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))) lt!69475)))))

(declare-fun e!88200 () Option!176)

(assert (=> d!42217 (= (getValueByKey!170 (toList!851 (+!163 lt!69470 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69475) e!88200)))

(declare-fun b!135470 () Bool)

(declare-fun e!88201 () Option!176)

(assert (=> b!135470 (= e!88201 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69470 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) lt!69475))))

(declare-fun b!135469 () Bool)

(assert (=> b!135469 (= e!88200 e!88201)))

(declare-fun c!25358 () Bool)

(assert (=> b!135469 (= c!25358 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69470 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69470 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))) lt!69475))))))

(declare-fun b!135468 () Bool)

(assert (=> b!135468 (= e!88200 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69470 (tuple2!2585 lt!69487 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))))

(declare-fun b!135471 () Bool)

(assert (=> b!135471 (= e!88201 None!174)))

(assert (= (and d!42217 c!25357) b!135468))

(assert (= (and d!42217 (not c!25357)) b!135469))

(assert (= (and b!135469 c!25358) b!135470))

(assert (= (and b!135469 (not c!25358)) b!135471))

(declare-fun m!161181 () Bool)

(assert (=> b!135470 m!161181))

(assert (=> d!40597 d!42217))

(assert (=> d!40439 d!40441))

(declare-fun d!42219 () Bool)

(assert (=> d!42219 (arrayContainsKey!0 (_keys!4612 newMap!16) lt!69498 #b00000000000000000000000000000000)))

(assert (=> d!42219 true))

(declare-fun _$60!363 () Unit!4132)

(assert (=> d!42219 (= (choose!13 (_keys!4612 newMap!16) lt!69498 #b00000000000000000000000000000000) _$60!363)))

(declare-fun bs!5666 () Bool)

(assert (= bs!5666 d!42219))

(assert (=> bs!5666 m!156675))

(assert (=> d!40439 d!42219))

(assert (=> b!133392 d!40543))

(assert (=> b!133392 d!40383))

(assert (=> b!133392 d!40561))

(declare-fun b!135472 () Bool)

(declare-fun e!88205 () Bool)

(declare-fun e!88202 () Bool)

(assert (=> b!135472 (= e!88205 e!88202)))

(declare-fun res!64991 () Bool)

(assert (=> b!135472 (=> (not res!64991) (not e!88202))))

(declare-fun e!88203 () Bool)

(assert (=> b!135472 (= res!64991 (not e!88203))))

(declare-fun res!64993 () Bool)

(assert (=> b!135472 (=> (not res!64993) (not e!88203))))

(assert (=> b!135472 (= res!64993 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun c!25359 () Bool)

(declare-fun bm!14867 () Bool)

(declare-fun call!14870 () Bool)

(assert (=> bm!14867 (= call!14870 (arrayNoDuplicates!0 (_keys!4612 (_2!1304 lt!69115)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!25359 (Cons!1707 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24849 (Cons!1707 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24849 (Cons!1707 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))))))

(declare-fun d!42221 () Bool)

(declare-fun res!64992 () Bool)

(assert (=> d!42221 (=> res!64992 e!88205)))

(assert (=> d!42221 (= res!64992 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(assert (=> d!42221 (= (arrayNoDuplicates!0 (_keys!4612 (_2!1304 lt!69115)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24849 (Cons!1707 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) e!88205)))

(declare-fun b!135473 () Bool)

(declare-fun e!88204 () Bool)

(assert (=> b!135473 (= e!88204 call!14870)))

(declare-fun b!135474 () Bool)

(assert (=> b!135474 (= e!88203 (contains!888 (ite c!24849 (Cons!1707 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000) Nil!1708) Nil!1708) (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135475 () Bool)

(assert (=> b!135475 (= e!88202 e!88204)))

(assert (=> b!135475 (= c!25359 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135476 () Bool)

(assert (=> b!135476 (= e!88204 call!14870)))

(assert (= (and d!42221 (not res!64992)) b!135472))

(assert (= (and b!135472 res!64993) b!135474))

(assert (= (and b!135472 res!64991) b!135475))

(assert (= (and b!135475 c!25359) b!135473))

(assert (= (and b!135475 (not c!25359)) b!135476))

(assert (= (or b!135473 b!135476) bm!14867))

(assert (=> b!135472 m!161141))

(assert (=> b!135472 m!161141))

(assert (=> b!135472 m!161143))

(assert (=> bm!14867 m!161141))

(declare-fun m!161183 () Bool)

(assert (=> bm!14867 m!161183))

(assert (=> b!135474 m!161141))

(assert (=> b!135474 m!161141))

(declare-fun m!161185 () Bool)

(assert (=> b!135474 m!161185))

(assert (=> b!135475 m!161141))

(assert (=> b!135475 m!161141))

(assert (=> b!135475 m!161143))

(assert (=> bm!14756 d!42221))

(declare-fun d!42223 () Bool)

(declare-fun e!88206 () Bool)

(assert (=> d!42223 e!88206))

(declare-fun res!64994 () Bool)

(assert (=> d!42223 (=> res!64994 e!88206)))

(declare-fun lt!70707 () Bool)

(assert (=> d!42223 (= res!64994 (not lt!70707))))

(declare-fun lt!70709 () Bool)

(assert (=> d!42223 (= lt!70707 lt!70709)))

(declare-fun lt!70706 () Unit!4132)

(declare-fun e!88207 () Unit!4132)

(assert (=> d!42223 (= lt!70706 e!88207)))

(declare-fun c!25360 () Bool)

(assert (=> d!42223 (= c!25360 lt!70709)))

(assert (=> d!42223 (= lt!70709 (containsKey!174 (toList!851 lt!69850) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42223 (= (contains!886 lt!69850 (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) lt!70707)))

(declare-fun b!135477 () Bool)

(declare-fun lt!70708 () Unit!4132)

(assert (=> b!135477 (= e!88207 lt!70708)))

(assert (=> b!135477 (= lt!70708 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69850) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))

(assert (=> b!135477 (isDefined!124 (getValueByKey!170 (toList!851 lt!69850) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135478 () Bool)

(declare-fun Unit!4255 () Unit!4132)

(assert (=> b!135478 (= e!88207 Unit!4255)))

(declare-fun b!135479 () Bool)

(assert (=> b!135479 (= e!88206 (isDefined!124 (getValueByKey!170 (toList!851 lt!69850) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!42223 c!25360) b!135477))

(assert (= (and d!42223 (not c!25360)) b!135478))

(assert (= (and d!42223 (not res!64994)) b!135479))

(declare-fun m!161187 () Bool)

(assert (=> d!42223 m!161187))

(declare-fun m!161189 () Bool)

(assert (=> b!135477 m!161189))

(assert (=> b!135477 m!157773))

(assert (=> b!135477 m!157773))

(declare-fun m!161191 () Bool)

(assert (=> b!135477 m!161191))

(assert (=> b!135479 m!157773))

(assert (=> b!135479 m!157773))

(assert (=> b!135479 m!161191))

(assert (=> d!40739 d!42223))

(declare-fun c!25361 () Bool)

(declare-fun d!42225 () Bool)

(assert (=> d!42225 (= c!25361 (and ((_ is Cons!1706) lt!69848) (= (_1!1303 (h!2311 lt!69848)) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))))))

(declare-fun e!88208 () Option!176)

(assert (=> d!42225 (= (getValueByKey!170 lt!69848 (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) e!88208)))

(declare-fun e!88209 () Option!176)

(declare-fun b!135482 () Bool)

(assert (=> b!135482 (= e!88209 (getValueByKey!170 (t!6152 lt!69848) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135481 () Bool)

(assert (=> b!135481 (= e!88208 e!88209)))

(declare-fun c!25362 () Bool)

(assert (=> b!135481 (= c!25362 (and ((_ is Cons!1706) lt!69848) (not (= (_1!1303 (h!2311 lt!69848)) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!135480 () Bool)

(assert (=> b!135480 (= e!88208 (Some!175 (_2!1303 (h!2311 lt!69848))))))

(declare-fun b!135483 () Bool)

(assert (=> b!135483 (= e!88209 None!174)))

(assert (= (and d!42225 c!25361) b!135480))

(assert (= (and d!42225 (not c!25361)) b!135481))

(assert (= (and b!135481 c!25362) b!135482))

(assert (= (and b!135481 (not c!25362)) b!135483))

(declare-fun m!161193 () Bool)

(assert (=> b!135482 m!161193))

(assert (=> d!40739 d!42225))

(declare-fun d!42227 () Bool)

(assert (=> d!42227 (= (getValueByKey!170 lt!69848 (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70710 () Unit!4132)

(assert (=> d!42227 (= lt!70710 (choose!834 lt!69848 (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))

(declare-fun e!88210 () Bool)

(assert (=> d!42227 e!88210))

(declare-fun res!64995 () Bool)

(assert (=> d!42227 (=> (not res!64995) (not e!88210))))

(assert (=> d!42227 (= res!64995 (isStrictlySorted!317 lt!69848))))

(assert (=> d!42227 (= (lemmaContainsTupThenGetReturnValue!88 lt!69848 (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) lt!70710)))

(declare-fun b!135484 () Bool)

(declare-fun res!64996 () Bool)

(assert (=> b!135484 (=> (not res!64996) (not e!88210))))

(assert (=> b!135484 (= res!64996 (containsKey!174 lt!69848 (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135485 () Bool)

(assert (=> b!135485 (= e!88210 (contains!889 lt!69848 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!42227 res!64995) b!135484))

(assert (= (and b!135484 res!64996) b!135485))

(assert (=> d!42227 m!157767))

(declare-fun m!161195 () Bool)

(assert (=> d!42227 m!161195))

(declare-fun m!161197 () Bool)

(assert (=> d!42227 m!161197))

(declare-fun m!161199 () Bool)

(assert (=> b!135484 m!161199))

(declare-fun m!161201 () Bool)

(assert (=> b!135485 m!161201))

(assert (=> d!40739 d!42227))

(declare-fun b!135486 () Bool)

(declare-fun e!88215 () List!1710)

(assert (=> b!135486 (= e!88215 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69210)) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135487 () Bool)

(declare-fun e!88214 () List!1710)

(declare-fun call!14873 () List!1710)

(assert (=> b!135487 (= e!88214 call!14873)))

(declare-fun b!135488 () Bool)

(declare-fun res!64998 () Bool)

(declare-fun e!88212 () Bool)

(assert (=> b!135488 (=> (not res!64998) (not e!88212))))

(declare-fun lt!70711 () List!1710)

(assert (=> b!135488 (= res!64998 (containsKey!174 lt!70711 (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))

(declare-fun c!25364 () Bool)

(declare-fun bm!14868 () Bool)

(assert (=> bm!14868 (= call!14873 ($colon$colon!91 e!88215 (ite c!25364 (h!2311 (toList!851 lt!69210)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))))))))

(declare-fun c!25365 () Bool)

(assert (=> bm!14868 (= c!25365 c!25364)))

(declare-fun c!25363 () Bool)

(declare-fun b!135489 () Bool)

(declare-fun c!25366 () Bool)

(assert (=> b!135489 (= e!88215 (ite c!25363 (t!6152 (toList!851 lt!69210)) (ite c!25366 (Cons!1706 (h!2311 (toList!851 lt!69210)) (t!6152 (toList!851 lt!69210))) Nil!1707)))))

(declare-fun d!42229 () Bool)

(assert (=> d!42229 e!88212))

(declare-fun res!64997 () Bool)

(assert (=> d!42229 (=> (not res!64997) (not e!88212))))

(assert (=> d!42229 (= res!64997 (isStrictlySorted!317 lt!70711))))

(assert (=> d!42229 (= lt!70711 e!88214)))

(assert (=> d!42229 (= c!25364 (and ((_ is Cons!1706) (toList!851 lt!69210)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69210))) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))))))

(assert (=> d!42229 (isStrictlySorted!317 (toList!851 lt!69210))))

(assert (=> d!42229 (= (insertStrictlySorted!91 (toList!851 lt!69210) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16)))) lt!70711)))

(declare-fun b!135490 () Bool)

(declare-fun e!88211 () List!1710)

(assert (=> b!135490 (= e!88214 e!88211)))

(assert (=> b!135490 (= c!25363 (and ((_ is Cons!1706) (toList!851 lt!69210)) (= (_1!1303 (h!2311 (toList!851 lt!69210))) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))))))

(declare-fun b!135491 () Bool)

(declare-fun e!88213 () List!1710)

(declare-fun call!14871 () List!1710)

(assert (=> b!135491 (= e!88213 call!14871)))

(declare-fun b!135492 () Bool)

(declare-fun call!14872 () List!1710)

(assert (=> b!135492 (= e!88211 call!14872)))

(declare-fun b!135493 () Bool)

(assert (=> b!135493 (= e!88212 (contains!889 lt!70711 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))))))

(declare-fun bm!14869 () Bool)

(assert (=> bm!14869 (= call!14872 call!14873)))

(declare-fun bm!14870 () Bool)

(assert (=> bm!14870 (= call!14871 call!14872)))

(declare-fun b!135494 () Bool)

(assert (=> b!135494 (= c!25366 (and ((_ is Cons!1706) (toList!851 lt!69210)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69210))) (_1!1303 (tuple2!2585 lt!69218 (zeroValue!2719 newMap!16))))))))

(assert (=> b!135494 (= e!88211 e!88213)))

(declare-fun b!135495 () Bool)

(assert (=> b!135495 (= e!88213 call!14871)))

(assert (= (and d!42229 c!25364) b!135487))

(assert (= (and d!42229 (not c!25364)) b!135490))

(assert (= (and b!135490 c!25363) b!135492))

(assert (= (and b!135490 (not c!25363)) b!135494))

(assert (= (and b!135494 c!25366) b!135495))

(assert (= (and b!135494 (not c!25366)) b!135491))

(assert (= (or b!135495 b!135491) bm!14870))

(assert (= (or b!135492 bm!14870) bm!14869))

(assert (= (or b!135487 bm!14869) bm!14868))

(assert (= (and bm!14868 c!25365) b!135486))

(assert (= (and bm!14868 (not c!25365)) b!135489))

(assert (= (and d!42229 res!64997) b!135488))

(assert (= (and b!135488 res!64998) b!135493))

(declare-fun m!161203 () Bool)

(assert (=> b!135493 m!161203))

(declare-fun m!161205 () Bool)

(assert (=> b!135488 m!161205))

(declare-fun m!161207 () Bool)

(assert (=> b!135486 m!161207))

(declare-fun m!161209 () Bool)

(assert (=> d!42229 m!161209))

(declare-fun m!161211 () Bool)

(assert (=> d!42229 m!161211))

(declare-fun m!161213 () Bool)

(assert (=> bm!14868 m!161213))

(assert (=> d!40739 d!42229))

(declare-fun d!42231 () Bool)

(declare-fun e!88216 () Bool)

(assert (=> d!42231 e!88216))

(declare-fun res!64999 () Bool)

(assert (=> d!42231 (=> res!64999 e!88216)))

(declare-fun lt!70713 () Bool)

(assert (=> d!42231 (= res!64999 (not lt!70713))))

(declare-fun lt!70715 () Bool)

(assert (=> d!42231 (= lt!70713 lt!70715)))

(declare-fun lt!70712 () Unit!4132)

(declare-fun e!88217 () Unit!4132)

(assert (=> d!42231 (= lt!70712 e!88217)))

(declare-fun c!25367 () Bool)

(assert (=> d!42231 (= c!25367 lt!70715)))

(assert (=> d!42231 (= lt!70715 (containsKey!174 (toList!851 lt!69923) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42231 (= (contains!886 lt!69923 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70713)))

(declare-fun b!135496 () Bool)

(declare-fun lt!70714 () Unit!4132)

(assert (=> b!135496 (= e!88217 lt!70714)))

(assert (=> b!135496 (= lt!70714 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69923) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135496 (isDefined!124 (getValueByKey!170 (toList!851 lt!69923) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135497 () Bool)

(declare-fun Unit!4256 () Unit!4132)

(assert (=> b!135497 (= e!88217 Unit!4256)))

(declare-fun b!135498 () Bool)

(assert (=> b!135498 (= e!88216 (isDefined!124 (getValueByKey!170 (toList!851 lt!69923) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42231 c!25367) b!135496))

(assert (= (and d!42231 (not c!25367)) b!135497))

(assert (= (and d!42231 (not res!64999)) b!135498))

(declare-fun m!161215 () Bool)

(assert (=> d!42231 m!161215))

(declare-fun m!161217 () Bool)

(assert (=> b!135496 m!161217))

(assert (=> b!135496 m!159693))

(assert (=> b!135496 m!159693))

(declare-fun m!161219 () Bool)

(assert (=> b!135496 m!161219))

(assert (=> b!135498 m!159693))

(assert (=> b!135498 m!159693))

(assert (=> b!135498 m!161219))

(assert (=> bm!14749 d!42231))

(declare-fun d!42233 () Bool)

(assert (=> d!42233 (= ($colon$colon!91 e!87114 (ite c!24825 (h!2311 (toList!851 (ite c!24523 call!14580 call!14599))) (tuple2!2585 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))) (Cons!1706 (ite c!24825 (h!2311 (toList!851 (ite c!24523 call!14580 call!14599))) (tuple2!2585 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) e!87114))))

(assert (=> bm!14737 d!42233))

(declare-fun d!42235 () Bool)

(declare-fun e!88218 () Bool)

(assert (=> d!42235 e!88218))

(declare-fun res!65000 () Bool)

(assert (=> d!42235 (=> res!65000 e!88218)))

(declare-fun lt!70717 () Bool)

(assert (=> d!42235 (= res!65000 (not lt!70717))))

(declare-fun lt!70719 () Bool)

(assert (=> d!42235 (= lt!70717 lt!70719)))

(declare-fun lt!70716 () Unit!4132)

(declare-fun e!88219 () Unit!4132)

(assert (=> d!42235 (= lt!70716 e!88219)))

(declare-fun c!25368 () Bool)

(assert (=> d!42235 (= c!25368 lt!70719)))

(assert (=> d!42235 (= lt!70719 (containsKey!174 (toList!851 lt!69582) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42235 (= (contains!886 lt!69582 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70717)))

(declare-fun b!135499 () Bool)

(declare-fun lt!70718 () Unit!4132)

(assert (=> b!135499 (= e!88219 lt!70718)))

(assert (=> b!135499 (= lt!70718 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69582) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!135499 (isDefined!124 (getValueByKey!170 (toList!851 lt!69582) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135500 () Bool)

(declare-fun Unit!4257 () Unit!4132)

(assert (=> b!135500 (= e!88219 Unit!4257)))

(declare-fun b!135501 () Bool)

(assert (=> b!135501 (= e!88218 (isDefined!124 (getValueByKey!170 (toList!851 lt!69582) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42235 c!25368) b!135499))

(assert (= (and d!42235 (not c!25368)) b!135500))

(assert (= (and d!42235 (not res!65000)) b!135501))

(declare-fun m!161221 () Bool)

(assert (=> d!42235 m!161221))

(declare-fun m!161223 () Bool)

(assert (=> b!135499 m!161223))

(assert (=> b!135499 m!156909))

(assert (=> b!135499 m!156909))

(declare-fun m!161225 () Bool)

(assert (=> b!135499 m!161225))

(assert (=> b!135501 m!156909))

(assert (=> b!135501 m!156909))

(assert (=> b!135501 m!161225))

(assert (=> d!40491 d!42235))

(declare-fun d!42237 () Bool)

(declare-fun c!25369 () Bool)

(assert (=> d!42237 (= c!25369 (and ((_ is Cons!1706) lt!69580) (= (_1!1303 (h!2311 lt!69580)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88220 () Option!176)

(assert (=> d!42237 (= (getValueByKey!170 lt!69580 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88220)))

(declare-fun e!88221 () Option!176)

(declare-fun b!135504 () Bool)

(assert (=> b!135504 (= e!88221 (getValueByKey!170 (t!6152 lt!69580) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135503 () Bool)

(assert (=> b!135503 (= e!88220 e!88221)))

(declare-fun c!25370 () Bool)

(assert (=> b!135503 (= c!25370 (and ((_ is Cons!1706) lt!69580) (not (= (_1!1303 (h!2311 lt!69580)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135502 () Bool)

(assert (=> b!135502 (= e!88220 (Some!175 (_2!1303 (h!2311 lt!69580))))))

(declare-fun b!135505 () Bool)

(assert (=> b!135505 (= e!88221 None!174)))

(assert (= (and d!42237 c!25369) b!135502))

(assert (= (and d!42237 (not c!25369)) b!135503))

(assert (= (and b!135503 c!25370) b!135504))

(assert (= (and b!135503 (not c!25370)) b!135505))

(declare-fun m!161227 () Bool)

(assert (=> b!135504 m!161227))

(assert (=> d!40491 d!42237))

(declare-fun d!42239 () Bool)

(assert (=> d!42239 (= (getValueByKey!170 lt!69580 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70720 () Unit!4132)

(assert (=> d!42239 (= lt!70720 (choose!834 lt!69580 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88222 () Bool)

(assert (=> d!42239 e!88222))

(declare-fun res!65001 () Bool)

(assert (=> d!42239 (=> (not res!65001) (not e!88222))))

(assert (=> d!42239 (= res!65001 (isStrictlySorted!317 lt!69580))))

(assert (=> d!42239 (= (lemmaContainsTupThenGetReturnValue!88 lt!69580 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70720)))

(declare-fun b!135506 () Bool)

(declare-fun res!65002 () Bool)

(assert (=> b!135506 (=> (not res!65002) (not e!88222))))

(assert (=> b!135506 (= res!65002 (containsKey!174 lt!69580 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135507 () Bool)

(assert (=> b!135507 (= e!88222 (contains!889 lt!69580 (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42239 res!65001) b!135506))

(assert (= (and b!135506 res!65002) b!135507))

(assert (=> d!42239 m!156903))

(declare-fun m!161229 () Bool)

(assert (=> d!42239 m!161229))

(declare-fun m!161231 () Bool)

(assert (=> d!42239 m!161231))

(declare-fun m!161233 () Bool)

(assert (=> b!135506 m!161233))

(declare-fun m!161235 () Bool)

(assert (=> b!135507 m!161235))

(assert (=> d!40491 d!42239))

(declare-fun e!88227 () List!1710)

(declare-fun b!135508 () Bool)

(assert (=> b!135508 (= e!88227 (insertStrictlySorted!91 (t!6152 (toList!851 call!14645)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135509 () Bool)

(declare-fun e!88226 () List!1710)

(declare-fun call!14876 () List!1710)

(assert (=> b!135509 (= e!88226 call!14876)))

(declare-fun b!135510 () Bool)

(declare-fun res!65004 () Bool)

(declare-fun e!88224 () Bool)

(assert (=> b!135510 (=> (not res!65004) (not e!88224))))

(declare-fun lt!70721 () List!1710)

(assert (=> b!135510 (= res!65004 (containsKey!174 lt!70721 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14871 () Bool)

(declare-fun c!25372 () Bool)

(assert (=> bm!14871 (= call!14876 ($colon$colon!91 e!88227 (ite c!25372 (h!2311 (toList!851 call!14645)) (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25373 () Bool)

(assert (=> bm!14871 (= c!25373 c!25372)))

(declare-fun c!25371 () Bool)

(declare-fun b!135511 () Bool)

(declare-fun c!25374 () Bool)

(assert (=> b!135511 (= e!88227 (ite c!25371 (t!6152 (toList!851 call!14645)) (ite c!25374 (Cons!1706 (h!2311 (toList!851 call!14645)) (t!6152 (toList!851 call!14645))) Nil!1707)))))

(declare-fun d!42241 () Bool)

(assert (=> d!42241 e!88224))

(declare-fun res!65003 () Bool)

(assert (=> d!42241 (=> (not res!65003) (not e!88224))))

(assert (=> d!42241 (= res!65003 (isStrictlySorted!317 lt!70721))))

(assert (=> d!42241 (= lt!70721 e!88226)))

(assert (=> d!42241 (= c!25372 (and ((_ is Cons!1706) (toList!851 call!14645)) (bvslt (_1!1303 (h!2311 (toList!851 call!14645))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42241 (isStrictlySorted!317 (toList!851 call!14645))))

(assert (=> d!42241 (= (insertStrictlySorted!91 (toList!851 call!14645) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70721)))

(declare-fun b!135512 () Bool)

(declare-fun e!88223 () List!1710)

(assert (=> b!135512 (= e!88226 e!88223)))

(assert (=> b!135512 (= c!25371 (and ((_ is Cons!1706) (toList!851 call!14645)) (= (_1!1303 (h!2311 (toList!851 call!14645))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135513 () Bool)

(declare-fun e!88225 () List!1710)

(declare-fun call!14874 () List!1710)

(assert (=> b!135513 (= e!88225 call!14874)))

(declare-fun b!135514 () Bool)

(declare-fun call!14875 () List!1710)

(assert (=> b!135514 (= e!88223 call!14875)))

(declare-fun b!135515 () Bool)

(assert (=> b!135515 (= e!88224 (contains!889 lt!70721 (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14872 () Bool)

(assert (=> bm!14872 (= call!14875 call!14876)))

(declare-fun bm!14873 () Bool)

(assert (=> bm!14873 (= call!14874 call!14875)))

(declare-fun b!135516 () Bool)

(assert (=> b!135516 (= c!25374 (and ((_ is Cons!1706) (toList!851 call!14645)) (bvsgt (_1!1303 (h!2311 (toList!851 call!14645))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!135516 (= e!88223 e!88225)))

(declare-fun b!135517 () Bool)

(assert (=> b!135517 (= e!88225 call!14874)))

(assert (= (and d!42241 c!25372) b!135509))

(assert (= (and d!42241 (not c!25372)) b!135512))

(assert (= (and b!135512 c!25371) b!135514))

(assert (= (and b!135512 (not c!25371)) b!135516))

(assert (= (and b!135516 c!25374) b!135517))

(assert (= (and b!135516 (not c!25374)) b!135513))

(assert (= (or b!135517 b!135513) bm!14873))

(assert (= (or b!135514 bm!14873) bm!14872))

(assert (= (or b!135509 bm!14872) bm!14871))

(assert (= (and bm!14871 c!25373) b!135508))

(assert (= (and bm!14871 (not c!25373)) b!135511))

(assert (= (and d!42241 res!65003) b!135510))

(assert (= (and b!135510 res!65004) b!135515))

(declare-fun m!161237 () Bool)

(assert (=> b!135515 m!161237))

(declare-fun m!161239 () Bool)

(assert (=> b!135510 m!161239))

(declare-fun m!161241 () Bool)

(assert (=> b!135508 m!161241))

(declare-fun m!161243 () Bool)

(assert (=> d!42241 m!161243))

(declare-fun m!161245 () Bool)

(assert (=> d!42241 m!161245))

(declare-fun m!161247 () Bool)

(assert (=> bm!14871 m!161247))

(assert (=> d!40491 d!42241))

(declare-fun d!42243 () Bool)

(declare-fun c!25375 () Bool)

(assert (=> d!42243 (= c!25375 ((_ is Nil!1707) (toList!851 lt!69466)))))

(declare-fun e!88228 () (InoxSet tuple2!2584))

(assert (=> d!42243 (= (content!133 (toList!851 lt!69466)) e!88228)))

(declare-fun b!135518 () Bool)

(assert (=> b!135518 (= e!88228 ((as const (Array tuple2!2584 Bool)) false))))

(declare-fun b!135519 () Bool)

(assert (=> b!135519 (= e!88228 ((_ map or) (store ((as const (Array tuple2!2584 Bool)) false) (h!2311 (toList!851 lt!69466)) true) (content!133 (t!6152 (toList!851 lt!69466)))))))

(assert (= (and d!42243 c!25375) b!135518))

(assert (= (and d!42243 (not c!25375)) b!135519))

(declare-fun m!161249 () Bool)

(assert (=> b!135519 m!161249))

(assert (=> b!135519 m!158655))

(assert (=> d!40635 d!42243))

(declare-fun d!42245 () Bool)

(declare-fun e!88229 () Bool)

(assert (=> d!42245 e!88229))

(declare-fun res!65005 () Bool)

(assert (=> d!42245 (=> res!65005 e!88229)))

(declare-fun lt!70723 () Bool)

(assert (=> d!42245 (= res!65005 (not lt!70723))))

(declare-fun lt!70725 () Bool)

(assert (=> d!42245 (= lt!70723 lt!70725)))

(declare-fun lt!70722 () Unit!4132)

(declare-fun e!88230 () Unit!4132)

(assert (=> d!42245 (= lt!70722 e!88230)))

(declare-fun c!25376 () Bool)

(assert (=> d!42245 (= c!25376 lt!70725)))

(assert (=> d!42245 (= lt!70725 (containsKey!174 (toList!851 lt!69974) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42245 (= (contains!886 lt!69974 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70723)))

(declare-fun b!135520 () Bool)

(declare-fun lt!70724 () Unit!4132)

(assert (=> b!135520 (= e!88230 lt!70724)))

(assert (=> b!135520 (= lt!70724 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69974) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135520 (isDefined!124 (getValueByKey!170 (toList!851 lt!69974) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135521 () Bool)

(declare-fun Unit!4258 () Unit!4132)

(assert (=> b!135521 (= e!88230 Unit!4258)))

(declare-fun b!135522 () Bool)

(assert (=> b!135522 (= e!88229 (isDefined!124 (getValueByKey!170 (toList!851 lt!69974) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42245 c!25376) b!135520))

(assert (= (and d!42245 (not c!25376)) b!135521))

(assert (= (and d!42245 (not res!65005)) b!135522))

(declare-fun m!161251 () Bool)

(assert (=> d!42245 m!161251))

(declare-fun m!161253 () Bool)

(assert (=> b!135520 m!161253))

(assert (=> b!135520 m!159765))

(assert (=> b!135520 m!159765))

(declare-fun m!161255 () Bool)

(assert (=> b!135520 m!161255))

(assert (=> b!135522 m!159765))

(assert (=> b!135522 m!159765))

(assert (=> b!135522 m!161255))

(assert (=> bm!14763 d!42245))

(assert (=> b!133575 d!42023))

(assert (=> b!133575 d!41215))

(assert (=> b!133336 d!40519))

(assert (=> d!40975 d!40351))

(declare-fun d!42247 () Bool)

(declare-fun lt!70726 () Bool)

(assert (=> d!42247 (= lt!70726 (select (content!133 (t!6152 (toList!851 lt!69202))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!88232 () Bool)

(assert (=> d!42247 (= lt!70726 e!88232)))

(declare-fun res!65006 () Bool)

(assert (=> d!42247 (=> (not res!65006) (not e!88232))))

(assert (=> d!42247 (= res!65006 ((_ is Cons!1706) (t!6152 (toList!851 lt!69202))))))

(assert (=> d!42247 (= (contains!889 (t!6152 (toList!851 lt!69202)) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70726)))

(declare-fun b!135523 () Bool)

(declare-fun e!88231 () Bool)

(assert (=> b!135523 (= e!88232 e!88231)))

(declare-fun res!65007 () Bool)

(assert (=> b!135523 (=> res!65007 e!88231)))

(assert (=> b!135523 (= res!65007 (= (h!2311 (t!6152 (toList!851 lt!69202))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135524 () Bool)

(assert (=> b!135524 (= e!88231 (contains!889 (t!6152 (t!6152 (toList!851 lt!69202))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42247 res!65006) b!135523))

(assert (= (and b!135523 (not res!65007)) b!135524))

(assert (=> d!42247 m!159135))

(declare-fun m!161257 () Bool)

(assert (=> d!42247 m!161257))

(declare-fun m!161259 () Bool)

(assert (=> b!135524 m!161259))

(assert (=> b!133185 d!42247))

(declare-fun d!42249 () Bool)

(declare-fun c!25377 () Bool)

(assert (=> d!42249 (= c!25377 (and ((_ is Cons!1706) (toList!851 lt!70037)) (= (_1!1303 (h!2311 (toList!851 lt!70037))) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun e!88233 () Option!176)

(assert (=> d!42249 (= (getValueByKey!170 (toList!851 lt!70037) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) e!88233)))

(declare-fun e!88234 () Option!176)

(declare-fun b!135527 () Bool)

(assert (=> b!135527 (= e!88234 (getValueByKey!170 (t!6152 (toList!851 lt!70037)) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!135526 () Bool)

(assert (=> b!135526 (= e!88233 e!88234)))

(declare-fun c!25378 () Bool)

(assert (=> b!135526 (= c!25378 (and ((_ is Cons!1706) (toList!851 lt!70037)) (not (= (_1!1303 (h!2311 (toList!851 lt!70037))) (_1!1303 (ite (or c!24642 c!24640) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))))

(declare-fun b!135525 () Bool)

(assert (=> b!135525 (= e!88233 (Some!175 (_2!1303 (h!2311 (toList!851 lt!70037)))))))

(declare-fun b!135528 () Bool)

(assert (=> b!135528 (= e!88234 None!174)))

(assert (= (and d!42249 c!25377) b!135525))

(assert (= (and d!42249 (not c!25377)) b!135526))

(assert (= (and b!135526 c!25378) b!135527))

(assert (= (and b!135526 (not c!25378)) b!135528))

(declare-fun m!161261 () Bool)

(assert (=> b!135527 m!161261))

(assert (=> b!133939 d!42249))

(assert (=> d!40987 d!40269))

(assert (=> d!40735 d!40757))

(declare-fun d!42251 () Bool)

(declare-fun e!88235 () Bool)

(assert (=> d!42251 e!88235))

(declare-fun res!65008 () Bool)

(assert (=> d!42251 (=> res!65008 e!88235)))

(declare-fun lt!70728 () Bool)

(assert (=> d!42251 (= res!65008 (not lt!70728))))

(declare-fun lt!70730 () Bool)

(assert (=> d!42251 (= lt!70728 lt!70730)))

(declare-fun lt!70727 () Unit!4132)

(declare-fun e!88236 () Unit!4132)

(assert (=> d!42251 (= lt!70727 e!88236)))

(declare-fun c!25379 () Bool)

(assert (=> d!42251 (= c!25379 lt!70730)))

(assert (=> d!42251 (= lt!70730 (containsKey!174 (toList!851 lt!69204) lt!69208))))

(assert (=> d!42251 (= (contains!886 lt!69204 lt!69208) lt!70728)))

(declare-fun b!135529 () Bool)

(declare-fun lt!70729 () Unit!4132)

(assert (=> b!135529 (= e!88236 lt!70729)))

(assert (=> b!135529 (= lt!70729 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69204) lt!69208))))

(assert (=> b!135529 (isDefined!124 (getValueByKey!170 (toList!851 lt!69204) lt!69208))))

(declare-fun b!135530 () Bool)

(declare-fun Unit!4259 () Unit!4132)

(assert (=> b!135530 (= e!88236 Unit!4259)))

(declare-fun b!135531 () Bool)

(assert (=> b!135531 (= e!88235 (isDefined!124 (getValueByKey!170 (toList!851 lt!69204) lt!69208)))))

(assert (= (and d!42251 c!25379) b!135529))

(assert (= (and d!42251 (not c!25379)) b!135530))

(assert (= (and d!42251 (not res!65008)) b!135531))

(declare-fun m!161263 () Bool)

(assert (=> d!42251 m!161263))

(declare-fun m!161265 () Bool)

(assert (=> b!135529 m!161265))

(assert (=> b!135529 m!157777))

(assert (=> b!135529 m!157777))

(declare-fun m!161267 () Bool)

(assert (=> b!135529 m!161267))

(assert (=> b!135531 m!157777))

(assert (=> b!135531 m!157777))

(assert (=> b!135531 m!161267))

(assert (=> d!40735 d!42251))

(assert (=> d!40735 d!40737))

(assert (=> d!40735 d!40741))

(declare-fun d!42253 () Bool)

(assert (=> d!42253 (= (apply!116 (+!163 lt!69204 (tuple2!2585 lt!69205 (zeroValue!2719 newMap!16))) lt!69208) (apply!116 lt!69204 lt!69208))))

(assert (=> d!42253 true))

(declare-fun _$34!988 () Unit!4132)

(assert (=> d!42253 (= (choose!828 lt!69204 lt!69205 (zeroValue!2719 newMap!16) lt!69208) _$34!988)))

(declare-fun bs!5667 () Bool)

(assert (= bs!5667 d!42253))

(assert (=> bs!5667 m!156149))

(assert (=> bs!5667 m!156149))

(assert (=> bs!5667 m!156157))

(assert (=> bs!5667 m!156159))

(assert (=> d!40735 d!42253))

(assert (=> d!40919 d!40917))

(assert (=> d!40919 d!40939))

(declare-fun d!42255 () Bool)

(assert (=> d!42255 (= (apply!116 (+!163 lt!69355 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))) lt!69366) (apply!116 lt!69355 lt!69366))))

(assert (=> d!42255 true))

(declare-fun _$34!989 () Unit!4132)

(assert (=> d!42255 (= (choose!828 lt!69355 lt!69356 (minValue!2719 newMap!16) lt!69366) _$34!989)))

(declare-fun bs!5668 () Bool)

(assert (= bs!5668 d!42255))

(assert (=> bs!5668 m!156491))

(assert (=> bs!5668 m!156491))

(assert (=> bs!5668 m!156513))

(assert (=> bs!5668 m!156511))

(assert (=> d!40919 d!42255))

(declare-fun d!42257 () Bool)

(declare-fun e!88237 () Bool)

(assert (=> d!42257 e!88237))

(declare-fun res!65009 () Bool)

(assert (=> d!42257 (=> res!65009 e!88237)))

(declare-fun lt!70732 () Bool)

(assert (=> d!42257 (= res!65009 (not lt!70732))))

(declare-fun lt!70734 () Bool)

(assert (=> d!42257 (= lt!70732 lt!70734)))

(declare-fun lt!70731 () Unit!4132)

(declare-fun e!88238 () Unit!4132)

(assert (=> d!42257 (= lt!70731 e!88238)))

(declare-fun c!25380 () Bool)

(assert (=> d!42257 (= c!25380 lt!70734)))

(assert (=> d!42257 (= lt!70734 (containsKey!174 (toList!851 lt!69355) lt!69366))))

(assert (=> d!42257 (= (contains!886 lt!69355 lt!69366) lt!70732)))

(declare-fun b!135532 () Bool)

(declare-fun lt!70733 () Unit!4132)

(assert (=> b!135532 (= e!88238 lt!70733)))

(assert (=> b!135532 (= lt!70733 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69355) lt!69366))))

(assert (=> b!135532 (isDefined!124 (getValueByKey!170 (toList!851 lt!69355) lt!69366))))

(declare-fun b!135533 () Bool)

(declare-fun Unit!4260 () Unit!4132)

(assert (=> b!135533 (= e!88238 Unit!4260)))

(declare-fun b!135534 () Bool)

(assert (=> b!135534 (= e!88237 (isDefined!124 (getValueByKey!170 (toList!851 lt!69355) lt!69366)))))

(assert (= (and d!42257 c!25380) b!135532))

(assert (= (and d!42257 (not c!25380)) b!135533))

(assert (= (and d!42257 (not res!65009)) b!135534))

(declare-fun m!161269 () Bool)

(assert (=> d!42257 m!161269))

(declare-fun m!161271 () Bool)

(assert (=> b!135532 m!161271))

(assert (=> b!135532 m!158355))

(assert (=> b!135532 m!158355))

(declare-fun m!161273 () Bool)

(assert (=> b!135532 m!161273))

(assert (=> b!135534 m!158355))

(assert (=> b!135534 m!158355))

(assert (=> b!135534 m!161273))

(assert (=> d!40919 d!42257))

(assert (=> d!40919 d!40941))

(assert (=> d!40795 d!40793))

(declare-fun d!42259 () Bool)

(assert (=> d!42259 (= (getValueByKey!170 lt!69517 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!42259 true))

(declare-fun _$22!488 () Unit!4132)

(assert (=> d!42259 (= (choose!834 lt!69517 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) _$22!488)))

(declare-fun bs!5669 () Bool)

(assert (= bs!5669 d!42259))

(assert (=> bs!5669 m!156713))

(assert (=> d!40795 d!42259))

(declare-fun d!42261 () Bool)

(declare-fun res!65010 () Bool)

(declare-fun e!88239 () Bool)

(assert (=> d!42261 (=> res!65010 e!88239)))

(assert (=> d!42261 (= res!65010 (or ((_ is Nil!1707) lt!69517) ((_ is Nil!1707) (t!6152 lt!69517))))))

(assert (=> d!42261 (= (isStrictlySorted!317 lt!69517) e!88239)))

(declare-fun b!135535 () Bool)

(declare-fun e!88240 () Bool)

(assert (=> b!135535 (= e!88239 e!88240)))

(declare-fun res!65011 () Bool)

(assert (=> b!135535 (=> (not res!65011) (not e!88240))))

(assert (=> b!135535 (= res!65011 (bvslt (_1!1303 (h!2311 lt!69517)) (_1!1303 (h!2311 (t!6152 lt!69517)))))))

(declare-fun b!135536 () Bool)

(assert (=> b!135536 (= e!88240 (isStrictlySorted!317 (t!6152 lt!69517)))))

(assert (= (and d!42261 (not res!65010)) b!135535))

(assert (= (and b!135535 res!65011) b!135536))

(declare-fun m!161275 () Bool)

(assert (=> b!135536 m!161275))

(assert (=> d!40795 d!42261))

(assert (=> b!133503 d!41513))

(declare-fun c!25381 () Bool)

(declare-fun d!42263 () Bool)

(assert (=> d!42263 (= c!25381 (and ((_ is Cons!1706) (t!6152 (toList!851 e!86457))) (= (_1!1303 (h!2311 (t!6152 (toList!851 e!86457)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun e!88241 () Option!176)

(assert (=> d!42263 (= (getValueByKey!170 (t!6152 (toList!851 e!86457)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!88241)))

(declare-fun e!88242 () Option!176)

(declare-fun b!135539 () Bool)

(assert (=> b!135539 (= e!88242 (getValueByKey!170 (t!6152 (t!6152 (toList!851 e!86457))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!135538 () Bool)

(assert (=> b!135538 (= e!88241 e!88242)))

(declare-fun c!25382 () Bool)

(assert (=> b!135538 (= c!25382 (and ((_ is Cons!1706) (t!6152 (toList!851 e!86457))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 e!86457)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(declare-fun b!135537 () Bool)

(assert (=> b!135537 (= e!88241 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 e!86457))))))))

(declare-fun b!135540 () Bool)

(assert (=> b!135540 (= e!88242 None!174)))

(assert (= (and d!42263 c!25381) b!135537))

(assert (= (and d!42263 (not c!25381)) b!135538))

(assert (= (and b!135538 c!25382) b!135539))

(assert (= (and b!135538 (not c!25382)) b!135540))

(assert (=> b!135539 m!155841))

(declare-fun m!161277 () Bool)

(assert (=> b!135539 m!161277))

(assert (=> b!133534 d!42263))

(declare-fun d!42265 () Bool)

(assert (=> d!42265 (= (isEmpty!414 lt!69696) (isEmpty!415 (toList!851 lt!69696)))))

(declare-fun bs!5670 () Bool)

(assert (= bs!5670 d!42265))

(declare-fun m!161279 () Bool)

(assert (=> bs!5670 m!161279))

(assert (=> b!133465 d!42265))

(assert (=> b!133417 d!41953))

(declare-fun lt!70735 () Bool)

(declare-fun d!42267 () Bool)

(assert (=> d!42267 (= lt!70735 (select (content!132 (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun e!88244 () Bool)

(assert (=> d!42267 (= lt!70735 e!88244)))

(declare-fun res!65013 () Bool)

(assert (=> d!42267 (=> (not res!65013) (not e!88244))))

(assert (=> d!42267 (= res!65013 ((_ is Cons!1707) (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))))))

(assert (=> d!42267 (= (contains!888 (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) lt!70735)))

(declare-fun b!135541 () Bool)

(declare-fun e!88243 () Bool)

(assert (=> b!135541 (= e!88244 e!88243)))

(declare-fun res!65012 () Bool)

(assert (=> b!135541 (=> res!65012 e!88243)))

(assert (=> b!135541 (= res!65012 (= (h!2312 (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!135542 () Bool)

(assert (=> b!135542 (= e!88243 (contains!888 (t!6153 (ite c!24614 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!42267 res!65013) b!135541))

(assert (= (and b!135541 (not res!65012)) b!135542))

(declare-fun m!161281 () Bool)

(assert (=> d!42267 m!161281))

(assert (=> d!42267 m!157863))

(declare-fun m!161283 () Bool)

(assert (=> d!42267 m!161283))

(assert (=> b!135542 m!157863))

(declare-fun m!161285 () Bool)

(assert (=> b!135542 m!161285))

(assert (=> b!133669 d!42267))

(declare-fun d!42269 () Bool)

(declare-fun e!88245 () Bool)

(assert (=> d!42269 e!88245))

(declare-fun res!65014 () Bool)

(assert (=> d!42269 (=> res!65014 e!88245)))

(declare-fun lt!70737 () Bool)

(assert (=> d!42269 (= res!65014 (not lt!70737))))

(declare-fun lt!70739 () Bool)

(assert (=> d!42269 (= lt!70737 lt!70739)))

(declare-fun lt!70736 () Unit!4132)

(declare-fun e!88246 () Unit!4132)

(assert (=> d!42269 (= lt!70736 e!88246)))

(declare-fun c!25383 () Bool)

(assert (=> d!42269 (= c!25383 lt!70739)))

(assert (=> d!42269 (= lt!70739 (containsKey!174 (toList!851 (+!163 lt!69631 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16)))) lt!69637))))

(assert (=> d!42269 (= (contains!886 (+!163 lt!69631 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16))) lt!69637) lt!70737)))

(declare-fun b!135543 () Bool)

(declare-fun lt!70738 () Unit!4132)

(assert (=> b!135543 (= e!88246 lt!70738)))

(assert (=> b!135543 (= lt!70738 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69631 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16)))) lt!69637))))

(assert (=> b!135543 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69631 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16)))) lt!69637))))

(declare-fun b!135544 () Bool)

(declare-fun Unit!4261 () Unit!4132)

(assert (=> b!135544 (= e!88246 Unit!4261)))

(declare-fun b!135545 () Bool)

(assert (=> b!135545 (= e!88245 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69631 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16)))) lt!69637)))))

(assert (= (and d!42269 c!25383) b!135543))

(assert (= (and d!42269 (not c!25383)) b!135544))

(assert (= (and d!42269 (not res!65014)) b!135545))

(declare-fun m!161287 () Bool)

(assert (=> d!42269 m!161287))

(declare-fun m!161289 () Bool)

(assert (=> b!135543 m!161289))

(declare-fun m!161291 () Bool)

(assert (=> b!135543 m!161291))

(assert (=> b!135543 m!161291))

(declare-fun m!161293 () Bool)

(assert (=> b!135543 m!161293))

(assert (=> b!135545 m!161291))

(assert (=> b!135545 m!161291))

(assert (=> b!135545 m!161293))

(assert (=> b!133373 d!42269))

(declare-fun d!42271 () Bool)

(assert (=> d!42271 (= (apply!116 (+!163 lt!69625 (tuple2!2585 lt!69626 (zeroValue!2719 newMap!16))) lt!69629) (apply!116 lt!69625 lt!69629))))

(declare-fun lt!70740 () Unit!4132)

(assert (=> d!42271 (= lt!70740 (choose!828 lt!69625 lt!69626 (zeroValue!2719 newMap!16) lt!69629))))

(declare-fun e!88247 () Bool)

(assert (=> d!42271 e!88247))

(declare-fun res!65015 () Bool)

(assert (=> d!42271 (=> (not res!65015) (not e!88247))))

(assert (=> d!42271 (= res!65015 (contains!886 lt!69625 lt!69629))))

(assert (=> d!42271 (= (addApplyDifferent!92 lt!69625 lt!69626 (zeroValue!2719 newMap!16) lt!69629) lt!70740)))

(declare-fun b!135546 () Bool)

(assert (=> b!135546 (= e!88247 (not (= lt!69629 lt!69626)))))

(assert (= (and d!42271 res!65015) b!135546))

(assert (=> d!42271 m!157085))

(assert (=> d!42271 m!157093))

(declare-fun m!161295 () Bool)

(assert (=> d!42271 m!161295))

(assert (=> d!42271 m!157095))

(declare-fun m!161297 () Bool)

(assert (=> d!42271 m!161297))

(assert (=> d!42271 m!157085))

(assert (=> b!133373 d!42271))

(declare-fun d!42273 () Bool)

(declare-fun e!88248 () Bool)

(assert (=> d!42273 e!88248))

(declare-fun res!65017 () Bool)

(assert (=> d!42273 (=> (not res!65017) (not e!88248))))

(declare-fun lt!70743 () ListLongMap!1671)

(assert (=> d!42273 (= res!65017 (contains!886 lt!70743 (_1!1303 (tuple2!2585 lt!69626 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70741 () List!1710)

(assert (=> d!42273 (= lt!70743 (ListLongMap!1672 lt!70741))))

(declare-fun lt!70744 () Unit!4132)

(declare-fun lt!70742 () Unit!4132)

(assert (=> d!42273 (= lt!70744 lt!70742)))

(assert (=> d!42273 (= (getValueByKey!170 lt!70741 (_1!1303 (tuple2!2585 lt!69626 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69626 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42273 (= lt!70742 (lemmaContainsTupThenGetReturnValue!88 lt!70741 (_1!1303 (tuple2!2585 lt!69626 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69626 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42273 (= lt!70741 (insertStrictlySorted!91 (toList!851 lt!69625) (_1!1303 (tuple2!2585 lt!69626 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69626 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42273 (= (+!163 lt!69625 (tuple2!2585 lt!69626 (zeroValue!2719 newMap!16))) lt!70743)))

(declare-fun b!135547 () Bool)

(declare-fun res!65016 () Bool)

(assert (=> b!135547 (=> (not res!65016) (not e!88248))))

(assert (=> b!135547 (= res!65016 (= (getValueByKey!170 (toList!851 lt!70743) (_1!1303 (tuple2!2585 lt!69626 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69626 (zeroValue!2719 newMap!16))))))))

(declare-fun b!135548 () Bool)

(assert (=> b!135548 (= e!88248 (contains!889 (toList!851 lt!70743) (tuple2!2585 lt!69626 (zeroValue!2719 newMap!16))))))

(assert (= (and d!42273 res!65017) b!135547))

(assert (= (and b!135547 res!65016) b!135548))

(declare-fun m!161299 () Bool)

(assert (=> d!42273 m!161299))

(declare-fun m!161301 () Bool)

(assert (=> d!42273 m!161301))

(declare-fun m!161303 () Bool)

(assert (=> d!42273 m!161303))

(declare-fun m!161305 () Bool)

(assert (=> d!42273 m!161305))

(declare-fun m!161307 () Bool)

(assert (=> b!135547 m!161307))

(declare-fun m!161309 () Bool)

(assert (=> b!135548 m!161309))

(assert (=> b!133373 d!42273))

(assert (=> b!133373 d!41635))

(declare-fun d!42275 () Bool)

(assert (=> d!42275 (= (apply!116 lt!69627 lt!69632) (get!1482 (getValueByKey!170 (toList!851 lt!69627) lt!69632)))))

(declare-fun bs!5671 () Bool)

(assert (= bs!5671 d!42275))

(declare-fun m!161311 () Bool)

(assert (=> bs!5671 m!161311))

(assert (=> bs!5671 m!161311))

(declare-fun m!161313 () Bool)

(assert (=> bs!5671 m!161313))

(assert (=> b!133373 d!42275))

(declare-fun d!42277 () Bool)

(assert (=> d!42277 (= (apply!116 (+!163 lt!69627 (tuple2!2585 lt!69644 (minValue!2719 newMap!16))) lt!69632) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69627 (tuple2!2585 lt!69644 (minValue!2719 newMap!16)))) lt!69632)))))

(declare-fun bs!5672 () Bool)

(assert (= bs!5672 d!42277))

(declare-fun m!161315 () Bool)

(assert (=> bs!5672 m!161315))

(assert (=> bs!5672 m!161315))

(declare-fun m!161317 () Bool)

(assert (=> bs!5672 m!161317))

(assert (=> b!133373 d!42277))

(declare-fun d!42279 () Bool)

(assert (=> d!42279 (= (apply!116 lt!69625 lt!69629) (get!1482 (getValueByKey!170 (toList!851 lt!69625) lt!69629)))))

(declare-fun bs!5673 () Bool)

(assert (= bs!5673 d!42279))

(declare-fun m!161319 () Bool)

(assert (=> bs!5673 m!161319))

(assert (=> bs!5673 m!161319))

(declare-fun m!161321 () Bool)

(assert (=> bs!5673 m!161321))

(assert (=> b!133373 d!42279))

(declare-fun d!42281 () Bool)

(assert (=> d!42281 (= (apply!116 (+!163 lt!69634 (tuple2!2585 lt!69635 (minValue!2719 newMap!16))) lt!69645) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69634 (tuple2!2585 lt!69635 (minValue!2719 newMap!16)))) lt!69645)))))

(declare-fun bs!5674 () Bool)

(assert (= bs!5674 d!42281))

(declare-fun m!161323 () Bool)

(assert (=> bs!5674 m!161323))

(assert (=> bs!5674 m!161323))

(declare-fun m!161325 () Bool)

(assert (=> bs!5674 m!161325))

(assert (=> b!133373 d!42281))

(declare-fun d!42283 () Bool)

(assert (=> d!42283 (= (apply!116 (+!163 lt!69627 (tuple2!2585 lt!69644 (minValue!2719 newMap!16))) lt!69632) (apply!116 lt!69627 lt!69632))))

(declare-fun lt!70745 () Unit!4132)

(assert (=> d!42283 (= lt!70745 (choose!828 lt!69627 lt!69644 (minValue!2719 newMap!16) lt!69632))))

(declare-fun e!88249 () Bool)

(assert (=> d!42283 e!88249))

(declare-fun res!65018 () Bool)

(assert (=> d!42283 (=> (not res!65018) (not e!88249))))

(assert (=> d!42283 (= res!65018 (contains!886 lt!69627 lt!69632))))

(assert (=> d!42283 (= (addApplyDifferent!92 lt!69627 lt!69644 (minValue!2719 newMap!16) lt!69632) lt!70745)))

(declare-fun b!135549 () Bool)

(assert (=> b!135549 (= e!88249 (not (= lt!69632 lt!69644)))))

(assert (= (and d!42283 res!65018) b!135549))

(assert (=> d!42283 m!157097))

(assert (=> d!42283 m!157099))

(declare-fun m!161327 () Bool)

(assert (=> d!42283 m!161327))

(assert (=> d!42283 m!157107))

(declare-fun m!161329 () Bool)

(assert (=> d!42283 m!161329))

(assert (=> d!42283 m!157097))

(assert (=> b!133373 d!42283))

(declare-fun d!42285 () Bool)

(assert (=> d!42285 (= (apply!116 lt!69634 lt!69645) (get!1482 (getValueByKey!170 (toList!851 lt!69634) lt!69645)))))

(declare-fun bs!5675 () Bool)

(assert (= bs!5675 d!42285))

(declare-fun m!161331 () Bool)

(assert (=> bs!5675 m!161331))

(assert (=> bs!5675 m!161331))

(declare-fun m!161333 () Bool)

(assert (=> bs!5675 m!161333))

(assert (=> b!133373 d!42285))

(declare-fun d!42287 () Bool)

(declare-fun e!88250 () Bool)

(assert (=> d!42287 e!88250))

(declare-fun res!65020 () Bool)

(assert (=> d!42287 (=> (not res!65020) (not e!88250))))

(declare-fun lt!70748 () ListLongMap!1671)

(assert (=> d!42287 (= res!65020 (contains!886 lt!70748 (_1!1303 (tuple2!2585 lt!69644 (minValue!2719 newMap!16)))))))

(declare-fun lt!70746 () List!1710)

(assert (=> d!42287 (= lt!70748 (ListLongMap!1672 lt!70746))))

(declare-fun lt!70749 () Unit!4132)

(declare-fun lt!70747 () Unit!4132)

(assert (=> d!42287 (= lt!70749 lt!70747)))

(assert (=> d!42287 (= (getValueByKey!170 lt!70746 (_1!1303 (tuple2!2585 lt!69644 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69644 (minValue!2719 newMap!16)))))))

(assert (=> d!42287 (= lt!70747 (lemmaContainsTupThenGetReturnValue!88 lt!70746 (_1!1303 (tuple2!2585 lt!69644 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69644 (minValue!2719 newMap!16)))))))

(assert (=> d!42287 (= lt!70746 (insertStrictlySorted!91 (toList!851 lt!69627) (_1!1303 (tuple2!2585 lt!69644 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69644 (minValue!2719 newMap!16)))))))

(assert (=> d!42287 (= (+!163 lt!69627 (tuple2!2585 lt!69644 (minValue!2719 newMap!16))) lt!70748)))

(declare-fun b!135550 () Bool)

(declare-fun res!65019 () Bool)

(assert (=> b!135550 (=> (not res!65019) (not e!88250))))

(assert (=> b!135550 (= res!65019 (= (getValueByKey!170 (toList!851 lt!70748) (_1!1303 (tuple2!2585 lt!69644 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69644 (minValue!2719 newMap!16))))))))

(declare-fun b!135551 () Bool)

(assert (=> b!135551 (= e!88250 (contains!889 (toList!851 lt!70748) (tuple2!2585 lt!69644 (minValue!2719 newMap!16))))))

(assert (= (and d!42287 res!65020) b!135550))

(assert (= (and b!135550 res!65019) b!135551))

(declare-fun m!161335 () Bool)

(assert (=> d!42287 m!161335))

(declare-fun m!161337 () Bool)

(assert (=> d!42287 m!161337))

(declare-fun m!161339 () Bool)

(assert (=> d!42287 m!161339))

(declare-fun m!161341 () Bool)

(assert (=> d!42287 m!161341))

(declare-fun m!161343 () Bool)

(assert (=> b!135550 m!161343))

(declare-fun m!161345 () Bool)

(assert (=> b!135551 m!161345))

(assert (=> b!133373 d!42287))

(declare-fun d!42289 () Bool)

(assert (=> d!42289 (= (apply!116 (+!163 lt!69634 (tuple2!2585 lt!69635 (minValue!2719 newMap!16))) lt!69645) (apply!116 lt!69634 lt!69645))))

(declare-fun lt!70750 () Unit!4132)

(assert (=> d!42289 (= lt!70750 (choose!828 lt!69634 lt!69635 (minValue!2719 newMap!16) lt!69645))))

(declare-fun e!88251 () Bool)

(assert (=> d!42289 e!88251))

(declare-fun res!65021 () Bool)

(assert (=> d!42289 (=> (not res!65021) (not e!88251))))

(assert (=> d!42289 (= res!65021 (contains!886 lt!69634 lt!69645))))

(assert (=> d!42289 (= (addApplyDifferent!92 lt!69634 lt!69635 (minValue!2719 newMap!16) lt!69645) lt!70750)))

(declare-fun b!135552 () Bool)

(assert (=> b!135552 (= e!88251 (not (= lt!69645 lt!69635)))))

(assert (= (and d!42289 res!65021) b!135552))

(assert (=> d!42289 m!157091))

(assert (=> d!42289 m!157113))

(declare-fun m!161347 () Bool)

(assert (=> d!42289 m!161347))

(assert (=> d!42289 m!157111))

(declare-fun m!161349 () Bool)

(assert (=> d!42289 m!161349))

(assert (=> d!42289 m!157091))

(assert (=> b!133373 d!42289))

(declare-fun d!42291 () Bool)

(assert (=> d!42291 (contains!886 (+!163 lt!69631 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16))) lt!69637)))

(declare-fun lt!70751 () Unit!4132)

(assert (=> d!42291 (= lt!70751 (choose!829 lt!69631 lt!69639 (zeroValue!2719 newMap!16) lt!69637))))

(assert (=> d!42291 (contains!886 lt!69631 lt!69637)))

(assert (=> d!42291 (= (addStillContains!92 lt!69631 lt!69639 (zeroValue!2719 newMap!16) lt!69637) lt!70751)))

(declare-fun bs!5676 () Bool)

(assert (= bs!5676 d!42291))

(assert (=> bs!5676 m!157089))

(assert (=> bs!5676 m!157089))

(assert (=> bs!5676 m!157101))

(declare-fun m!161351 () Bool)

(assert (=> bs!5676 m!161351))

(declare-fun m!161353 () Bool)

(assert (=> bs!5676 m!161353))

(assert (=> b!133373 d!42291))

(declare-fun d!42293 () Bool)

(assert (=> d!42293 (= (apply!116 (+!163 lt!69625 (tuple2!2585 lt!69626 (zeroValue!2719 newMap!16))) lt!69629) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69625 (tuple2!2585 lt!69626 (zeroValue!2719 newMap!16)))) lt!69629)))))

(declare-fun bs!5677 () Bool)

(assert (= bs!5677 d!42293))

(declare-fun m!161355 () Bool)

(assert (=> bs!5677 m!161355))

(assert (=> bs!5677 m!161355))

(declare-fun m!161357 () Bool)

(assert (=> bs!5677 m!161357))

(assert (=> b!133373 d!42293))

(declare-fun d!42295 () Bool)

(declare-fun e!88252 () Bool)

(assert (=> d!42295 e!88252))

(declare-fun res!65023 () Bool)

(assert (=> d!42295 (=> (not res!65023) (not e!88252))))

(declare-fun lt!70754 () ListLongMap!1671)

(assert (=> d!42295 (= res!65023 (contains!886 lt!70754 (_1!1303 (tuple2!2585 lt!69635 (minValue!2719 newMap!16)))))))

(declare-fun lt!70752 () List!1710)

(assert (=> d!42295 (= lt!70754 (ListLongMap!1672 lt!70752))))

(declare-fun lt!70755 () Unit!4132)

(declare-fun lt!70753 () Unit!4132)

(assert (=> d!42295 (= lt!70755 lt!70753)))

(assert (=> d!42295 (= (getValueByKey!170 lt!70752 (_1!1303 (tuple2!2585 lt!69635 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69635 (minValue!2719 newMap!16)))))))

(assert (=> d!42295 (= lt!70753 (lemmaContainsTupThenGetReturnValue!88 lt!70752 (_1!1303 (tuple2!2585 lt!69635 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69635 (minValue!2719 newMap!16)))))))

(assert (=> d!42295 (= lt!70752 (insertStrictlySorted!91 (toList!851 lt!69634) (_1!1303 (tuple2!2585 lt!69635 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69635 (minValue!2719 newMap!16)))))))

(assert (=> d!42295 (= (+!163 lt!69634 (tuple2!2585 lt!69635 (minValue!2719 newMap!16))) lt!70754)))

(declare-fun b!135553 () Bool)

(declare-fun res!65022 () Bool)

(assert (=> b!135553 (=> (not res!65022) (not e!88252))))

(assert (=> b!135553 (= res!65022 (= (getValueByKey!170 (toList!851 lt!70754) (_1!1303 (tuple2!2585 lt!69635 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69635 (minValue!2719 newMap!16))))))))

(declare-fun b!135554 () Bool)

(assert (=> b!135554 (= e!88252 (contains!889 (toList!851 lt!70754) (tuple2!2585 lt!69635 (minValue!2719 newMap!16))))))

(assert (= (and d!42295 res!65023) b!135553))

(assert (= (and b!135553 res!65022) b!135554))

(declare-fun m!161359 () Bool)

(assert (=> d!42295 m!161359))

(declare-fun m!161361 () Bool)

(assert (=> d!42295 m!161361))

(declare-fun m!161363 () Bool)

(assert (=> d!42295 m!161363))

(declare-fun m!161365 () Bool)

(assert (=> d!42295 m!161365))

(declare-fun m!161367 () Bool)

(assert (=> b!135553 m!161367))

(declare-fun m!161369 () Bool)

(assert (=> b!135554 m!161369))

(assert (=> b!133373 d!42295))

(declare-fun d!42297 () Bool)

(declare-fun e!88253 () Bool)

(assert (=> d!42297 e!88253))

(declare-fun res!65025 () Bool)

(assert (=> d!42297 (=> (not res!65025) (not e!88253))))

(declare-fun lt!70758 () ListLongMap!1671)

(assert (=> d!42297 (= res!65025 (contains!886 lt!70758 (_1!1303 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70756 () List!1710)

(assert (=> d!42297 (= lt!70758 (ListLongMap!1672 lt!70756))))

(declare-fun lt!70759 () Unit!4132)

(declare-fun lt!70757 () Unit!4132)

(assert (=> d!42297 (= lt!70759 lt!70757)))

(assert (=> d!42297 (= (getValueByKey!170 lt!70756 (_1!1303 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42297 (= lt!70757 (lemmaContainsTupThenGetReturnValue!88 lt!70756 (_1!1303 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42297 (= lt!70756 (insertStrictlySorted!91 (toList!851 lt!69631) (_1!1303 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42297 (= (+!163 lt!69631 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16))) lt!70758)))

(declare-fun b!135555 () Bool)

(declare-fun res!65024 () Bool)

(assert (=> b!135555 (=> (not res!65024) (not e!88253))))

(assert (=> b!135555 (= res!65024 (= (getValueByKey!170 (toList!851 lt!70758) (_1!1303 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16))))))))

(declare-fun b!135556 () Bool)

(assert (=> b!135556 (= e!88253 (contains!889 (toList!851 lt!70758) (tuple2!2585 lt!69639 (zeroValue!2719 newMap!16))))))

(assert (= (and d!42297 res!65025) b!135555))

(assert (= (and b!135555 res!65024) b!135556))

(declare-fun m!161371 () Bool)

(assert (=> d!42297 m!161371))

(declare-fun m!161373 () Bool)

(assert (=> d!42297 m!161373))

(declare-fun m!161375 () Bool)

(assert (=> d!42297 m!161375))

(declare-fun m!161377 () Bool)

(assert (=> d!42297 m!161377))

(declare-fun m!161379 () Bool)

(assert (=> b!135555 m!161379))

(declare-fun m!161381 () Bool)

(assert (=> b!135556 m!161381))

(assert (=> b!133373 d!42297))

(assert (=> bm!14695 d!41789))

(declare-fun d!42299 () Bool)

(declare-fun e!88254 () Bool)

(assert (=> d!42299 e!88254))

(declare-fun res!65026 () Bool)

(assert (=> d!42299 (=> res!65026 e!88254)))

(declare-fun lt!70761 () Bool)

(assert (=> d!42299 (= res!65026 (not lt!70761))))

(declare-fun lt!70763 () Bool)

(assert (=> d!42299 (= lt!70761 lt!70763)))

(declare-fun lt!70760 () Unit!4132)

(declare-fun e!88255 () Unit!4132)

(assert (=> d!42299 (= lt!70760 e!88255)))

(declare-fun c!25384 () Bool)

(assert (=> d!42299 (= c!25384 lt!70763)))

(assert (=> d!42299 (= lt!70763 (containsKey!174 (toList!851 lt!69756) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42299 (= (contains!886 lt!69756 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70761)))

(declare-fun b!135557 () Bool)

(declare-fun lt!70762 () Unit!4132)

(assert (=> b!135557 (= e!88255 lt!70762)))

(assert (=> b!135557 (= lt!70762 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69756) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135557 (isDefined!124 (getValueByKey!170 (toList!851 lt!69756) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135558 () Bool)

(declare-fun Unit!4262 () Unit!4132)

(assert (=> b!135558 (= e!88255 Unit!4262)))

(declare-fun b!135559 () Bool)

(assert (=> b!135559 (= e!88254 (isDefined!124 (getValueByKey!170 (toList!851 lt!69756) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42299 c!25384) b!135557))

(assert (= (and d!42299 (not c!25384)) b!135558))

(assert (= (and d!42299 (not res!65026)) b!135559))

(declare-fun m!161383 () Bool)

(assert (=> d!42299 m!161383))

(declare-fun m!161385 () Bool)

(assert (=> b!135557 m!161385))

(assert (=> b!135557 m!160879))

(assert (=> b!135557 m!160879))

(declare-fun m!161387 () Bool)

(assert (=> b!135557 m!161387))

(assert (=> b!135559 m!160879))

(assert (=> b!135559 m!160879))

(assert (=> b!135559 m!161387))

(assert (=> bm!14725 d!42299))

(declare-fun d!42301 () Bool)

(declare-fun c!25385 () Bool)

(assert (=> d!42301 (= c!25385 (and ((_ is Cons!1706) (toList!851 lt!69801)) (= (_1!1303 (h!2311 (toList!851 lt!69801))) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))))))

(declare-fun e!88256 () Option!176)

(assert (=> d!42301 (= (getValueByKey!170 (toList!851 lt!69801) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))) e!88256)))

(declare-fun b!135562 () Bool)

(declare-fun e!88257 () Option!176)

(assert (=> b!135562 (= e!88257 (getValueByKey!170 (t!6152 (toList!851 lt!69801)) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))

(declare-fun b!135561 () Bool)

(assert (=> b!135561 (= e!88256 e!88257)))

(declare-fun c!25386 () Bool)

(assert (=> b!135561 (= c!25386 (and ((_ is Cons!1706) (toList!851 lt!69801)) (not (= (_1!1303 (h!2311 (toList!851 lt!69801))) (_1!1303 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))))))

(declare-fun b!135560 () Bool)

(assert (=> b!135560 (= e!88256 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69801)))))))

(declare-fun b!135563 () Bool)

(assert (=> b!135563 (= e!88257 None!174)))

(assert (= (and d!42301 c!25385) b!135560))

(assert (= (and d!42301 (not c!25385)) b!135561))

(assert (= (and b!135561 c!25386) b!135562))

(assert (= (and b!135561 (not c!25386)) b!135563))

(declare-fun m!161389 () Bool)

(assert (=> b!135562 m!161389))

(assert (=> b!133590 d!42301))

(declare-fun d!42303 () Bool)

(declare-fun res!65027 () Bool)

(declare-fun e!88258 () Bool)

(assert (=> d!42303 (=> res!65027 e!88258)))

(assert (=> d!42303 (= res!65027 (= (select (arr!2248 (_keys!4612 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!69498))))

(assert (=> d!42303 (= (arrayContainsKey!0 (_keys!4612 newMap!16) lt!69498 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!88258)))

(declare-fun b!135564 () Bool)

(declare-fun e!88259 () Bool)

(assert (=> b!135564 (= e!88258 e!88259)))

(declare-fun res!65028 () Bool)

(assert (=> b!135564 (=> (not res!65028) (not e!88259))))

(assert (=> b!135564 (= res!65028 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun b!135565 () Bool)

(assert (=> b!135565 (= e!88259 (arrayContainsKey!0 (_keys!4612 newMap!16) lt!69498 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!42303 (not res!65027)) b!135564))

(assert (= (and b!135564 res!65028) b!135565))

(assert (=> d!42303 m!156869))

(declare-fun m!161391 () Bool)

(assert (=> b!135565 m!161391))

(assert (=> b!133165 d!42303))

(declare-fun d!42305 () Bool)

(declare-fun e!88260 () Bool)

(assert (=> d!42305 e!88260))

(declare-fun res!65029 () Bool)

(assert (=> d!42305 (=> res!65029 e!88260)))

(declare-fun lt!70765 () Bool)

(assert (=> d!42305 (= res!65029 (not lt!70765))))

(declare-fun lt!70767 () Bool)

(assert (=> d!42305 (= lt!70765 lt!70767)))

(declare-fun lt!70764 () Unit!4132)

(declare-fun e!88261 () Unit!4132)

(assert (=> d!42305 (= lt!70764 e!88261)))

(declare-fun c!25387 () Bool)

(assert (=> d!42305 (= c!25387 lt!70767)))

(assert (=> d!42305 (= lt!70767 (containsKey!174 (toList!851 lt!69563) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42305 (= (contains!886 lt!69563 (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) lt!70765)))

(declare-fun b!135566 () Bool)

(declare-fun lt!70766 () Unit!4132)

(assert (=> b!135566 (= e!88261 lt!70766)))

(assert (=> b!135566 (= lt!70766 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69563) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> b!135566 (isDefined!124 (getValueByKey!170 (toList!851 lt!69563) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135567 () Bool)

(declare-fun Unit!4263 () Unit!4132)

(assert (=> b!135567 (= e!88261 Unit!4263)))

(declare-fun b!135568 () Bool)

(assert (=> b!135568 (= e!88260 (isDefined!124 (getValueByKey!170 (toList!851 lt!69563) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (= (and d!42305 c!25387) b!135566))

(assert (= (and d!42305 (not c!25387)) b!135567))

(assert (= (and d!42305 (not res!65029)) b!135568))

(declare-fun m!161393 () Bool)

(assert (=> d!42305 m!161393))

(declare-fun m!161395 () Bool)

(assert (=> b!135566 m!161395))

(assert (=> b!135566 m!156853))

(assert (=> b!135566 m!156853))

(declare-fun m!161397 () Bool)

(assert (=> b!135566 m!161397))

(assert (=> b!135568 m!156853))

(assert (=> b!135568 m!156853))

(assert (=> b!135568 m!161397))

(assert (=> d!40479 d!42305))

(declare-fun d!42307 () Bool)

(declare-fun c!25388 () Bool)

(assert (=> d!42307 (= c!25388 (and ((_ is Cons!1706) lt!69561) (= (_1!1303 (h!2311 lt!69561)) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun e!88262 () Option!176)

(assert (=> d!42307 (= (getValueByKey!170 lt!69561 (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) e!88262)))

(declare-fun e!88263 () Option!176)

(declare-fun b!135571 () Bool)

(assert (=> b!135571 (= e!88263 (getValueByKey!170 (t!6152 lt!69561) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135570 () Bool)

(assert (=> b!135570 (= e!88262 e!88263)))

(declare-fun c!25389 () Bool)

(assert (=> b!135570 (= c!25389 (and ((_ is Cons!1706) lt!69561) (not (= (_1!1303 (h!2311 lt!69561)) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))))

(declare-fun b!135569 () Bool)

(assert (=> b!135569 (= e!88262 (Some!175 (_2!1303 (h!2311 lt!69561))))))

(declare-fun b!135572 () Bool)

(assert (=> b!135572 (= e!88263 None!174)))

(assert (= (and d!42307 c!25388) b!135569))

(assert (= (and d!42307 (not c!25388)) b!135570))

(assert (= (and b!135570 c!25389) b!135571))

(assert (= (and b!135570 (not c!25389)) b!135572))

(declare-fun m!161399 () Bool)

(assert (=> b!135571 m!161399))

(assert (=> d!40479 d!42307))

(declare-fun d!42309 () Bool)

(assert (=> d!42309 (= (getValueByKey!170 lt!69561 (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!70768 () Unit!4132)

(assert (=> d!42309 (= lt!70768 (choose!834 lt!69561 (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun e!88264 () Bool)

(assert (=> d!42309 e!88264))

(declare-fun res!65030 () Bool)

(assert (=> d!42309 (=> (not res!65030) (not e!88264))))

(assert (=> d!42309 (= res!65030 (isStrictlySorted!317 lt!69561))))

(assert (=> d!42309 (= (lemmaContainsTupThenGetReturnValue!88 lt!69561 (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) lt!70768)))

(declare-fun b!135573 () Bool)

(declare-fun res!65031 () Bool)

(assert (=> b!135573 (=> (not res!65031) (not e!88264))))

(assert (=> b!135573 (= res!65031 (containsKey!174 lt!69561 (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135574 () Bool)

(assert (=> b!135574 (= e!88264 (contains!889 lt!69561 (tuple2!2585 (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (= (and d!42309 res!65030) b!135573))

(assert (= (and b!135573 res!65031) b!135574))

(assert (=> d!42309 m!156847))

(declare-fun m!161401 () Bool)

(assert (=> d!42309 m!161401))

(declare-fun m!161403 () Bool)

(assert (=> d!42309 m!161403))

(declare-fun m!161405 () Bool)

(assert (=> b!135573 m!161405))

(declare-fun m!161407 () Bool)

(assert (=> b!135574 m!161407))

(assert (=> d!40479 d!42309))

(declare-fun b!135575 () Bool)

(declare-fun e!88269 () List!1710)

(assert (=> b!135575 (= e!88269 (insertStrictlySorted!91 (t!6152 (toList!851 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633)))) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135576 () Bool)

(declare-fun e!88268 () List!1710)

(declare-fun call!14879 () List!1710)

(assert (=> b!135576 (= e!88268 call!14879)))

(declare-fun b!135577 () Bool)

(declare-fun res!65033 () Bool)

(declare-fun e!88266 () Bool)

(assert (=> b!135577 (=> (not res!65033) (not e!88266))))

(declare-fun lt!70769 () List!1710)

(assert (=> b!135577 (= res!65033 (containsKey!174 lt!70769 (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun c!25391 () Bool)

(declare-fun bm!14874 () Bool)

(assert (=> bm!14874 (= call!14879 ($colon$colon!91 e!88269 (ite c!25391 (h!2311 (toList!851 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633)))) (tuple2!2585 (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))))

(declare-fun c!25392 () Bool)

(assert (=> bm!14874 (= c!25392 c!25391)))

(declare-fun c!25390 () Bool)

(declare-fun c!25393 () Bool)

(declare-fun b!135578 () Bool)

(assert (=> b!135578 (= e!88269 (ite c!25390 (t!6152 (toList!851 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633)))) (ite c!25393 (Cons!1706 (h!2311 (toList!851 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633)))) (t!6152 (toList!851 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633))))) Nil!1707)))))

(declare-fun d!42311 () Bool)

(assert (=> d!42311 e!88266))

(declare-fun res!65032 () Bool)

(assert (=> d!42311 (=> (not res!65032) (not e!88266))))

(assert (=> d!42311 (= res!65032 (isStrictlySorted!317 lt!70769))))

(assert (=> d!42311 (= lt!70769 e!88268)))

(assert (=> d!42311 (= c!25391 (and ((_ is Cons!1706) (toList!851 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633)))) (bvslt (_1!1303 (h!2311 (toList!851 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633))))) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (=> d!42311 (isStrictlySorted!317 (toList!851 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633))))))

(assert (=> d!42311 (= (insertStrictlySorted!91 (toList!851 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633))) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) lt!70769)))

(declare-fun b!135579 () Bool)

(declare-fun e!88265 () List!1710)

(assert (=> b!135579 (= e!88268 e!88265)))

(assert (=> b!135579 (= c!25390 (and ((_ is Cons!1706) (toList!851 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633)))) (= (_1!1303 (h!2311 (toList!851 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633))))) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!135580 () Bool)

(declare-fun e!88267 () List!1710)

(declare-fun call!14877 () List!1710)

(assert (=> b!135580 (= e!88267 call!14877)))

(declare-fun b!135581 () Bool)

(declare-fun call!14878 () List!1710)

(assert (=> b!135581 (= e!88265 call!14878)))

(declare-fun b!135582 () Bool)

(assert (=> b!135582 (= e!88266 (contains!889 lt!70769 (tuple2!2585 (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun bm!14875 () Bool)

(assert (=> bm!14875 (= call!14878 call!14879)))

(declare-fun bm!14876 () Bool)

(assert (=> bm!14876 (= call!14877 call!14878)))

(declare-fun b!135583 () Bool)

(assert (=> b!135583 (= c!25393 (and ((_ is Cons!1706) (toList!851 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633)))) (bvsgt (_1!1303 (h!2311 (toList!851 (ite c!24568 call!14631 (ite c!24566 call!14634 call!14633))))) (_1!1303 (ite (or c!24568 c!24566) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (=> b!135583 (= e!88265 e!88267)))

(declare-fun b!135584 () Bool)

(assert (=> b!135584 (= e!88267 call!14877)))

(assert (= (and d!42311 c!25391) b!135576))

(assert (= (and d!42311 (not c!25391)) b!135579))

(assert (= (and b!135579 c!25390) b!135581))

(assert (= (and b!135579 (not c!25390)) b!135583))

(assert (= (and b!135583 c!25393) b!135584))

(assert (= (and b!135583 (not c!25393)) b!135580))

(assert (= (or b!135584 b!135580) bm!14876))

(assert (= (or b!135581 bm!14876) bm!14875))

(assert (= (or b!135576 bm!14875) bm!14874))

(assert (= (and bm!14874 c!25392) b!135575))

(assert (= (and bm!14874 (not c!25392)) b!135578))

(assert (= (and d!42311 res!65032) b!135577))

(assert (= (and b!135577 res!65033) b!135582))

(declare-fun m!161409 () Bool)

(assert (=> b!135582 m!161409))

(declare-fun m!161411 () Bool)

(assert (=> b!135577 m!161411))

(declare-fun m!161413 () Bool)

(assert (=> b!135575 m!161413))

(declare-fun m!161415 () Bool)

(assert (=> d!42311 m!161415))

(declare-fun m!161417 () Bool)

(assert (=> d!42311 m!161417))

(declare-fun m!161419 () Bool)

(assert (=> bm!14874 m!161419))

(assert (=> d!40479 d!42311))

(assert (=> bm!14728 d!41799))

(declare-fun d!42313 () Bool)

(declare-fun lt!70770 () Bool)

(assert (=> d!42313 (= lt!70770 (select (content!133 (toList!851 lt!70013)) (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))))

(declare-fun e!88271 () Bool)

(assert (=> d!42313 (= lt!70770 e!88271)))

(declare-fun res!65034 () Bool)

(assert (=> d!42313 (=> (not res!65034) (not e!88271))))

(assert (=> d!42313 (= res!65034 ((_ is Cons!1706) (toList!851 lt!70013)))))

(assert (=> d!42313 (= (contains!889 (toList!851 lt!70013) (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))) lt!70770)))

(declare-fun b!135585 () Bool)

(declare-fun e!88270 () Bool)

(assert (=> b!135585 (= e!88271 e!88270)))

(declare-fun res!65035 () Bool)

(assert (=> b!135585 (=> res!65035 e!88270)))

(assert (=> b!135585 (= res!65035 (= (h!2311 (toList!851 lt!70013)) (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))))

(declare-fun b!135586 () Bool)

(assert (=> b!135586 (= e!88270 (contains!889 (t!6152 (toList!851 lt!70013)) (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))))

(assert (= (and d!42313 res!65034) b!135585))

(assert (= (and b!135585 (not res!65035)) b!135586))

(declare-fun m!161421 () Bool)

(assert (=> d!42313 m!161421))

(declare-fun m!161423 () Bool)

(assert (=> d!42313 m!161423))

(declare-fun m!161425 () Bool)

(assert (=> b!135586 m!161425))

(assert (=> b!133917 d!42313))

(assert (=> d!40615 d!40591))

(declare-fun d!42315 () Bool)

(assert (=> d!42315 (= (apply!116 (+!163 lt!69468 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69472) (apply!116 lt!69468 lt!69472))))

(assert (=> d!42315 true))

(declare-fun _$34!990 () Unit!4132)

(assert (=> d!42315 (= (choose!828 lt!69468 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69472) _$34!990)))

(declare-fun bs!5678 () Bool)

(assert (= bs!5678 d!42315))

(assert (=> bs!5678 m!156621))

(assert (=> bs!5678 m!156621))

(assert (=> bs!5678 m!156629))

(assert (=> bs!5678 m!156631))

(assert (=> d!40615 d!42315))

(assert (=> d!40615 d!40603))

(assert (=> d!40615 d!40613))

(declare-fun d!42317 () Bool)

(declare-fun e!88272 () Bool)

(assert (=> d!42317 e!88272))

(declare-fun res!65036 () Bool)

(assert (=> d!42317 (=> res!65036 e!88272)))

(declare-fun lt!70772 () Bool)

(assert (=> d!42317 (= res!65036 (not lt!70772))))

(declare-fun lt!70774 () Bool)

(assert (=> d!42317 (= lt!70772 lt!70774)))

(declare-fun lt!70771 () Unit!4132)

(declare-fun e!88273 () Unit!4132)

(assert (=> d!42317 (= lt!70771 e!88273)))

(declare-fun c!25394 () Bool)

(assert (=> d!42317 (= c!25394 lt!70774)))

(assert (=> d!42317 (= lt!70774 (containsKey!174 (toList!851 lt!69468) lt!69472))))

(assert (=> d!42317 (= (contains!886 lt!69468 lt!69472) lt!70772)))

(declare-fun b!135587 () Bool)

(declare-fun lt!70773 () Unit!4132)

(assert (=> b!135587 (= e!88273 lt!70773)))

(assert (=> b!135587 (= lt!70773 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69468) lt!69472))))

(assert (=> b!135587 (isDefined!124 (getValueByKey!170 (toList!851 lt!69468) lt!69472))))

(declare-fun b!135588 () Bool)

(declare-fun Unit!4264 () Unit!4132)

(assert (=> b!135588 (= e!88273 Unit!4264)))

(declare-fun b!135589 () Bool)

(assert (=> b!135589 (= e!88272 (isDefined!124 (getValueByKey!170 (toList!851 lt!69468) lt!69472)))))

(assert (= (and d!42317 c!25394) b!135587))

(assert (= (and d!42317 (not c!25394)) b!135588))

(assert (= (and d!42317 (not res!65036)) b!135589))

(declare-fun m!161427 () Bool)

(assert (=> d!42317 m!161427))

(declare-fun m!161429 () Bool)

(assert (=> b!135587 m!161429))

(assert (=> b!135587 m!157291))

(assert (=> b!135587 m!157291))

(declare-fun m!161431 () Bool)

(assert (=> b!135587 m!161431))

(assert (=> b!135589 m!157291))

(assert (=> b!135589 m!157291))

(assert (=> b!135589 m!161431))

(assert (=> d!40615 d!42317))

(declare-fun d!42319 () Bool)

(declare-fun e!88274 () Bool)

(assert (=> d!42319 e!88274))

(declare-fun res!65038 () Bool)

(assert (=> d!42319 (=> (not res!65038) (not e!88274))))

(declare-fun lt!70777 () ListLongMap!1671)

(assert (=> d!42319 (= res!65038 (contains!886 lt!70777 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70775 () List!1710)

(assert (=> d!42319 (= lt!70777 (ListLongMap!1672 lt!70775))))

(declare-fun lt!70778 () Unit!4132)

(declare-fun lt!70776 () Unit!4132)

(assert (=> d!42319 (= lt!70778 lt!70776)))

(assert (=> d!42319 (= (getValueByKey!170 lt!70775 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!42319 (= lt!70776 (lemmaContainsTupThenGetReturnValue!88 lt!70775 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!42319 (= lt!70775 (insertStrictlySorted!91 (toList!851 call!14746) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!42319 (= (+!163 call!14746 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70777)))

(declare-fun b!135590 () Bool)

(declare-fun res!65037 () Bool)

(assert (=> b!135590 (=> (not res!65037) (not e!88274))))

(assert (=> b!135590 (= res!65037 (= (getValueByKey!170 (toList!851 lt!70777) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135591 () Bool)

(assert (=> b!135591 (= e!88274 (contains!889 (toList!851 lt!70777) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!42319 res!65038) b!135590))

(assert (= (and b!135590 res!65037) b!135591))

(declare-fun m!161433 () Bool)

(assert (=> d!42319 m!161433))

(declare-fun m!161435 () Bool)

(assert (=> d!42319 m!161435))

(declare-fun m!161437 () Bool)

(assert (=> d!42319 m!161437))

(declare-fun m!161439 () Bool)

(assert (=> d!42319 m!161439))

(declare-fun m!161441 () Bool)

(assert (=> b!135590 m!161441))

(declare-fun m!161443 () Bool)

(assert (=> b!135591 m!161443))

(assert (=> b!133768 d!42319))

(declare-fun d!42321 () Bool)

(declare-fun res!65039 () Bool)

(declare-fun e!88275 () Bool)

(assert (=> d!42321 (=> res!65039 e!88275)))

(assert (=> d!42321 (= res!65039 (or ((_ is Nil!1707) lt!69606) ((_ is Nil!1707) (t!6152 lt!69606))))))

(assert (=> d!42321 (= (isStrictlySorted!317 lt!69606) e!88275)))

(declare-fun b!135592 () Bool)

(declare-fun e!88276 () Bool)

(assert (=> b!135592 (= e!88275 e!88276)))

(declare-fun res!65040 () Bool)

(assert (=> b!135592 (=> (not res!65040) (not e!88276))))

(assert (=> b!135592 (= res!65040 (bvslt (_1!1303 (h!2311 lt!69606)) (_1!1303 (h!2311 (t!6152 lt!69606)))))))

(declare-fun b!135593 () Bool)

(assert (=> b!135593 (= e!88276 (isStrictlySorted!317 (t!6152 lt!69606)))))

(assert (= (and d!42321 (not res!65039)) b!135592))

(assert (= (and b!135592 res!65040) b!135593))

(declare-fun m!161445 () Bool)

(assert (=> b!135593 m!161445))

(assert (=> d!40535 d!42321))

(declare-fun d!42323 () Bool)

(declare-fun res!65041 () Bool)

(declare-fun e!88277 () Bool)

(assert (=> d!42323 (=> res!65041 e!88277)))

(assert (=> d!42323 (= res!65041 (or ((_ is Nil!1707) (toList!851 lt!69176)) ((_ is Nil!1707) (t!6152 (toList!851 lt!69176)))))))

(assert (=> d!42323 (= (isStrictlySorted!317 (toList!851 lt!69176)) e!88277)))

(declare-fun b!135594 () Bool)

(declare-fun e!88278 () Bool)

(assert (=> b!135594 (= e!88277 e!88278)))

(declare-fun res!65042 () Bool)

(assert (=> b!135594 (=> (not res!65042) (not e!88278))))

(assert (=> b!135594 (= res!65042 (bvslt (_1!1303 (h!2311 (toList!851 lt!69176))) (_1!1303 (h!2311 (t!6152 (toList!851 lt!69176))))))))

(declare-fun b!135595 () Bool)

(assert (=> b!135595 (= e!88278 (isStrictlySorted!317 (t!6152 (toList!851 lt!69176))))))

(assert (= (and d!42323 (not res!65041)) b!135594))

(assert (= (and b!135594 res!65042) b!135595))

(declare-fun m!161447 () Bool)

(assert (=> b!135595 m!161447))

(assert (=> d!40535 d!42323))

(declare-fun d!42325 () Bool)

(declare-fun res!65043 () Bool)

(declare-fun e!88279 () Bool)

(assert (=> d!42325 (=> res!65043 e!88279)))

(assert (=> d!42325 (= res!65043 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) lt!69480)))))

(assert (=> d!42325 (= (containsKey!174 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69480) e!88279)))

(declare-fun b!135596 () Bool)

(declare-fun e!88280 () Bool)

(assert (=> b!135596 (= e!88279 e!88280)))

(declare-fun res!65044 () Bool)

(assert (=> b!135596 (=> (not res!65044) (not e!88280))))

(assert (=> b!135596 (= res!65044 (and (or (not ((_ is Cons!1706) (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) (bvsle (_1!1303 (h!2311 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) lt!69480)) ((_ is Cons!1706) (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) (bvslt (_1!1303 (h!2311 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) lt!69480)))))

(declare-fun b!135597 () Bool)

(assert (=> b!135597 (= e!88280 (containsKey!174 (t!6152 (toList!851 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) lt!69480))))

(assert (= (and d!42325 (not res!65043)) b!135596))

(assert (= (and b!135596 res!65044) b!135597))

(declare-fun m!161449 () Bool)

(assert (=> b!135597 m!161449))

(assert (=> d!40605 d!42325))

(declare-fun d!42327 () Bool)

(assert (=> d!42327 (= (get!1482 (getValueByKey!170 (toList!851 lt!69362) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3198 (getValueByKey!170 (toList!851 lt!69362) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40475 d!42327))

(assert (=> d!40475 d!42061))

(declare-fun b!135598 () Bool)

(declare-fun e!88285 () List!1710)

(assert (=> b!135598 (= e!88285 (insertStrictlySorted!91 (t!6152 (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135599 () Bool)

(declare-fun e!88284 () List!1710)

(declare-fun call!14882 () List!1710)

(assert (=> b!135599 (= e!88284 call!14882)))

(declare-fun b!135600 () Bool)

(declare-fun res!65046 () Bool)

(declare-fun e!88282 () Bool)

(assert (=> b!135600 (=> (not res!65046) (not e!88282))))

(declare-fun lt!70779 () List!1710)

(assert (=> b!135600 (= res!65046 (containsKey!174 lt!70779 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun c!25396 () Bool)

(declare-fun bm!14877 () Bool)

(assert (=> bm!14877 (= call!14882 ($colon$colon!91 e!88285 (ite c!25396 (h!2311 (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))))) (tuple2!2585 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))))

(declare-fun c!25397 () Bool)

(assert (=> bm!14877 (= c!25397 c!25396)))

(declare-fun b!135601 () Bool)

(declare-fun c!25395 () Bool)

(declare-fun c!25398 () Bool)

(assert (=> b!135601 (= e!88285 (ite c!25395 (t!6152 (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))))) (ite c!25398 (Cons!1706 (h!2311 (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))))) (t!6152 (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))))) Nil!1707)))))

(declare-fun d!42329 () Bool)

(assert (=> d!42329 e!88282))

(declare-fun res!65045 () Bool)

(assert (=> d!42329 (=> (not res!65045) (not e!88282))))

(assert (=> d!42329 (= res!65045 (isStrictlySorted!317 lt!70779))))

(assert (=> d!42329 (= lt!70779 e!88284)))

(assert (=> d!42329 (= c!25396 (and ((_ is Cons!1706) (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(assert (=> d!42329 (isStrictlySorted!317 (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))))))

(assert (=> d!42329 (= (insertStrictlySorted!91 (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!70779)))

(declare-fun b!135602 () Bool)

(declare-fun e!88281 () List!1710)

(assert (=> b!135602 (= e!88284 e!88281)))

(assert (=> b!135602 (= c!25395 (and ((_ is Cons!1706) (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))))) (= (_1!1303 (h!2311 (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!135603 () Bool)

(declare-fun e!88283 () List!1710)

(declare-fun call!14880 () List!1710)

(assert (=> b!135603 (= e!88283 call!14880)))

(declare-fun b!135604 () Bool)

(declare-fun call!14881 () List!1710)

(assert (=> b!135604 (= e!88281 call!14881)))

(declare-fun b!135605 () Bool)

(assert (=> b!135605 (= e!88282 (contains!889 lt!70779 (tuple2!2585 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun bm!14878 () Bool)

(assert (=> bm!14878 (= call!14881 call!14882)))

(declare-fun bm!14879 () Bool)

(assert (=> bm!14879 (= call!14880 call!14881)))

(declare-fun b!135606 () Bool)

(assert (=> b!135606 (= c!25398 (and ((_ is Cons!1706) (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))))) (bvsgt (_1!1303 (h!2311 (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))))) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(assert (=> b!135606 (= e!88281 e!88283)))

(declare-fun b!135607 () Bool)

(assert (=> b!135607 (= e!88283 call!14880)))

(assert (= (and d!42329 c!25396) b!135599))

(assert (= (and d!42329 (not c!25396)) b!135602))

(assert (= (and b!135602 c!25395) b!135604))

(assert (= (and b!135602 (not c!25395)) b!135606))

(assert (= (and b!135606 c!25398) b!135607))

(assert (= (and b!135606 (not c!25398)) b!135603))

(assert (= (or b!135607 b!135603) bm!14879))

(assert (= (or b!135604 bm!14879) bm!14878))

(assert (= (or b!135599 bm!14878) bm!14877))

(assert (= (and bm!14877 c!25397) b!135598))

(assert (= (and bm!14877 (not c!25397)) b!135601))

(assert (= (and d!42329 res!65045) b!135600))

(assert (= (and b!135600 res!65046) b!135605))

(declare-fun m!161451 () Bool)

(assert (=> b!135605 m!161451))

(declare-fun m!161453 () Bool)

(assert (=> b!135600 m!161453))

(declare-fun m!161455 () Bool)

(assert (=> b!135598 m!161455))

(declare-fun m!161457 () Bool)

(assert (=> d!42329 m!161457))

(declare-fun m!161459 () Bool)

(assert (=> d!42329 m!161459))

(declare-fun m!161461 () Bool)

(assert (=> bm!14877 m!161461))

(assert (=> b!133653 d!42329))

(declare-fun d!42331 () Bool)

(declare-fun lt!70780 () Bool)

(assert (=> d!42331 (= lt!70780 (select (content!132 (t!6153 (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!88287 () Bool)

(assert (=> d!42331 (= lt!70780 e!88287)))

(declare-fun res!65048 () Bool)

(assert (=> d!42331 (=> (not res!65048) (not e!88287))))

(assert (=> d!42331 (= res!65048 ((_ is Cons!1707) (t!6153 (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))))))

(assert (=> d!42331 (= (contains!888 (t!6153 (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!70780)))

(declare-fun b!135608 () Bool)

(declare-fun e!88286 () Bool)

(assert (=> b!135608 (= e!88287 e!88286)))

(declare-fun res!65047 () Bool)

(assert (=> b!135608 (=> res!65047 e!88286)))

(assert (=> b!135608 (= res!65047 (= (h!2312 (t!6153 (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135609 () Bool)

(assert (=> b!135609 (= e!88286 (contains!888 (t!6153 (t!6153 (ite c!24544 (Cons!1707 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) Nil!1708) Nil!1708))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!42331 res!65048) b!135608))

(assert (= (and b!135608 (not res!65047)) b!135609))

(assert (=> d!42331 m!160201))

(assert (=> d!42331 m!156349))

(declare-fun m!161463 () Bool)

(assert (=> d!42331 m!161463))

(assert (=> b!135609 m!156349))

(declare-fun m!161465 () Bool)

(assert (=> b!135609 m!161465))

(assert (=> b!133983 d!42331))

(declare-fun d!42333 () Bool)

(declare-fun res!65049 () Bool)

(declare-fun e!88288 () Bool)

(assert (=> d!42333 (=> res!65049 e!88288)))

(assert (=> d!42333 (= res!65049 (and ((_ is Cons!1706) (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (= (_1!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))) lt!69182)))))

(assert (=> d!42333 (= (containsKey!174 (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!69182) e!88288)))

(declare-fun b!135610 () Bool)

(declare-fun e!88289 () Bool)

(assert (=> b!135610 (= e!88288 e!88289)))

(declare-fun res!65050 () Bool)

(assert (=> b!135610 (=> (not res!65050) (not e!88289))))

(assert (=> b!135610 (= res!65050 (and (or (not ((_ is Cons!1706) (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))) (bvsle (_1!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))) lt!69182)) ((_ is Cons!1706) (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))) lt!69182)))))

(declare-fun b!135611 () Bool)

(assert (=> b!135611 (= e!88289 (containsKey!174 (t!6152 (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) lt!69182))))

(assert (= (and d!42333 (not res!65049)) b!135610))

(assert (= (and b!135610 res!65050) b!135611))

(declare-fun m!161467 () Bool)

(assert (=> b!135611 m!161467))

(assert (=> b!133818 d!42333))

(declare-fun d!42335 () Bool)

(declare-fun e!88290 () Bool)

(assert (=> d!42335 e!88290))

(declare-fun res!65052 () Bool)

(assert (=> d!42335 (=> (not res!65052) (not e!88290))))

(declare-fun lt!70783 () ListLongMap!1671)

(assert (=> d!42335 (= res!65052 (contains!886 lt!70783 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115))))))))

(declare-fun lt!70781 () List!1710)

(assert (=> d!42335 (= lt!70783 (ListLongMap!1672 lt!70781))))

(declare-fun lt!70784 () Unit!4132)

(declare-fun lt!70782 () Unit!4132)

(assert (=> d!42335 (= lt!70784 lt!70782)))

(assert (=> d!42335 (= (getValueByKey!170 lt!70781 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115))))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115))))))))

(assert (=> d!42335 (= lt!70782 (lemmaContainsTupThenGetReturnValue!88 lt!70781 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115))))))))

(assert (=> d!42335 (= lt!70781 (insertStrictlySorted!91 (toList!851 call!14760) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115)))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115))))))))

(assert (=> d!42335 (= (+!163 call!14760 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115)))) lt!70783)))

(declare-fun b!135612 () Bool)

(declare-fun res!65051 () Bool)

(assert (=> b!135612 (=> (not res!65051) (not e!88290))))

(assert (=> b!135612 (= res!65051 (= (getValueByKey!170 (toList!851 lt!70783) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115))))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115)))))))))

(declare-fun b!135613 () Bool)

(assert (=> b!135613 (= e!88290 (contains!889 (toList!851 lt!70783) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69115)))))))

(assert (= (and d!42335 res!65052) b!135612))

(assert (= (and b!135612 res!65051) b!135613))

(declare-fun m!161469 () Bool)

(assert (=> d!42335 m!161469))

(declare-fun m!161471 () Bool)

(assert (=> d!42335 m!161471))

(declare-fun m!161473 () Bool)

(assert (=> d!42335 m!161473))

(declare-fun m!161475 () Bool)

(assert (=> d!42335 m!161475))

(declare-fun m!161477 () Bool)

(assert (=> b!135612 m!161477))

(declare-fun m!161479 () Bool)

(assert (=> b!135613 m!161479))

(assert (=> b!133859 d!42335))

(declare-fun c!25399 () Bool)

(declare-fun d!42337 () Bool)

(assert (=> d!42337 (= c!25399 (and ((_ is Cons!1706) (toList!851 lt!69815)) (= (_1!1303 (h!2311 (toList!851 lt!69815))) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))))))

(declare-fun e!88291 () Option!176)

(assert (=> d!42337 (= (getValueByKey!170 (toList!851 lt!69815) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))) e!88291)))

(declare-fun e!88292 () Option!176)

(declare-fun b!135616 () Bool)

(assert (=> b!135616 (= e!88292 (getValueByKey!170 (t!6152 (toList!851 lt!69815)) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))

(declare-fun b!135615 () Bool)

(assert (=> b!135615 (= e!88291 e!88292)))

(declare-fun c!25400 () Bool)

(assert (=> b!135615 (= c!25400 (and ((_ is Cons!1706) (toList!851 lt!69815)) (not (= (_1!1303 (h!2311 (toList!851 lt!69815))) (_1!1303 (tuple2!2585 lt!69253 (minValue!2719 newMap!16)))))))))

(declare-fun b!135614 () Bool)

(assert (=> b!135614 (= e!88291 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69815)))))))

(declare-fun b!135617 () Bool)

(assert (=> b!135617 (= e!88292 None!174)))

(assert (= (and d!42337 c!25399) b!135614))

(assert (= (and d!42337 (not c!25399)) b!135615))

(assert (= (and b!135615 c!25400) b!135616))

(assert (= (and b!135615 (not c!25400)) b!135617))

(declare-fun m!161481 () Bool)

(assert (=> b!135616 m!161481))

(assert (=> b!133598 d!42337))

(assert (=> b!133628 d!40459))

(declare-fun d!42339 () Bool)

(declare-fun e!88293 () Bool)

(assert (=> d!42339 e!88293))

(declare-fun res!65053 () Bool)

(assert (=> d!42339 (=> res!65053 e!88293)))

(declare-fun lt!70786 () Bool)

(assert (=> d!42339 (= res!65053 (not lt!70786))))

(declare-fun lt!70788 () Bool)

(assert (=> d!42339 (= lt!70786 lt!70788)))

(declare-fun lt!70785 () Unit!4132)

(declare-fun e!88294 () Unit!4132)

(assert (=> d!42339 (= lt!70785 e!88294)))

(declare-fun c!25401 () Bool)

(assert (=> d!42339 (= c!25401 lt!70788)))

(assert (=> d!42339 (= lt!70788 (containsKey!174 (toList!851 (+!163 lt!69840 (tuple2!2585 lt!69843 lt!69844))) lt!69845))))

(assert (=> d!42339 (= (contains!886 (+!163 lt!69840 (tuple2!2585 lt!69843 lt!69844)) lt!69845) lt!70786)))

(declare-fun b!135618 () Bool)

(declare-fun lt!70787 () Unit!4132)

(assert (=> b!135618 (= e!88294 lt!70787)))

(assert (=> b!135618 (= lt!70787 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69840 (tuple2!2585 lt!69843 lt!69844))) lt!69845))))

(assert (=> b!135618 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69840 (tuple2!2585 lt!69843 lt!69844))) lt!69845))))

(declare-fun b!135619 () Bool)

(declare-fun Unit!4265 () Unit!4132)

(assert (=> b!135619 (= e!88294 Unit!4265)))

(declare-fun b!135620 () Bool)

(assert (=> b!135620 (= e!88293 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69840 (tuple2!2585 lt!69843 lt!69844))) lt!69845)))))

(assert (= (and d!42339 c!25401) b!135618))

(assert (= (and d!42339 (not c!25401)) b!135619))

(assert (= (and d!42339 (not res!65053)) b!135620))

(declare-fun m!161483 () Bool)

(assert (=> d!42339 m!161483))

(declare-fun m!161485 () Bool)

(assert (=> b!135618 m!161485))

(declare-fun m!161487 () Bool)

(assert (=> b!135618 m!161487))

(assert (=> b!135618 m!161487))

(declare-fun m!161489 () Bool)

(assert (=> b!135618 m!161489))

(assert (=> b!135620 m!161487))

(assert (=> b!135620 m!161487))

(assert (=> b!135620 m!161489))

(assert (=> b!133628 d!42339))

(declare-fun d!42341 () Bool)

(assert (=> d!42341 (not (contains!886 (+!163 lt!69840 (tuple2!2585 lt!69843 lt!69844)) lt!69845))))

(declare-fun lt!70789 () Unit!4132)

(assert (=> d!42341 (= lt!70789 (choose!835 lt!69840 lt!69843 lt!69844 lt!69845))))

(declare-fun e!88295 () Bool)

(assert (=> d!42341 e!88295))

(declare-fun res!65054 () Bool)

(assert (=> d!42341 (=> (not res!65054) (not e!88295))))

(assert (=> d!42341 (= res!65054 (not (contains!886 lt!69840 lt!69845)))))

(assert (=> d!42341 (= (addStillNotContains!62 lt!69840 lt!69843 lt!69844 lt!69845) lt!70789)))

(declare-fun b!135621 () Bool)

(assert (=> b!135621 (= e!88295 (not (= lt!69843 lt!69845)))))

(assert (= (and d!42341 res!65054) b!135621))

(assert (=> d!42341 m!157741))

(assert (=> d!42341 m!157741))

(assert (=> d!42341 m!157743))

(declare-fun m!161491 () Bool)

(assert (=> d!42341 m!161491))

(declare-fun m!161493 () Bool)

(assert (=> d!42341 m!161493))

(assert (=> b!133628 d!42341))

(declare-fun d!42343 () Bool)

(declare-fun e!88296 () Bool)

(assert (=> d!42343 e!88296))

(declare-fun res!65056 () Bool)

(assert (=> d!42343 (=> (not res!65056) (not e!88296))))

(declare-fun lt!70792 () ListLongMap!1671)

(assert (=> d!42343 (= res!65056 (contains!886 lt!70792 (_1!1303 (tuple2!2585 lt!69843 lt!69844))))))

(declare-fun lt!70790 () List!1710)

(assert (=> d!42343 (= lt!70792 (ListLongMap!1672 lt!70790))))

(declare-fun lt!70793 () Unit!4132)

(declare-fun lt!70791 () Unit!4132)

(assert (=> d!42343 (= lt!70793 lt!70791)))

(assert (=> d!42343 (= (getValueByKey!170 lt!70790 (_1!1303 (tuple2!2585 lt!69843 lt!69844))) (Some!175 (_2!1303 (tuple2!2585 lt!69843 lt!69844))))))

(assert (=> d!42343 (= lt!70791 (lemmaContainsTupThenGetReturnValue!88 lt!70790 (_1!1303 (tuple2!2585 lt!69843 lt!69844)) (_2!1303 (tuple2!2585 lt!69843 lt!69844))))))

(assert (=> d!42343 (= lt!70790 (insertStrictlySorted!91 (toList!851 lt!69840) (_1!1303 (tuple2!2585 lt!69843 lt!69844)) (_2!1303 (tuple2!2585 lt!69843 lt!69844))))))

(assert (=> d!42343 (= (+!163 lt!69840 (tuple2!2585 lt!69843 lt!69844)) lt!70792)))

(declare-fun b!135622 () Bool)

(declare-fun res!65055 () Bool)

(assert (=> b!135622 (=> (not res!65055) (not e!88296))))

(assert (=> b!135622 (= res!65055 (= (getValueByKey!170 (toList!851 lt!70792) (_1!1303 (tuple2!2585 lt!69843 lt!69844))) (Some!175 (_2!1303 (tuple2!2585 lt!69843 lt!69844)))))))

(declare-fun b!135623 () Bool)

(assert (=> b!135623 (= e!88296 (contains!889 (toList!851 lt!70792) (tuple2!2585 lt!69843 lt!69844)))))

(assert (= (and d!42343 res!65056) b!135622))

(assert (= (and b!135622 res!65055) b!135623))

(declare-fun m!161495 () Bool)

(assert (=> d!42343 m!161495))

(declare-fun m!161497 () Bool)

(assert (=> d!42343 m!161497))

(declare-fun m!161499 () Bool)

(assert (=> d!42343 m!161499))

(declare-fun m!161501 () Bool)

(assert (=> d!42343 m!161501))

(declare-fun m!161503 () Bool)

(assert (=> b!135622 m!161503))

(declare-fun m!161505 () Bool)

(assert (=> b!135623 m!161505))

(assert (=> b!133628 d!42343))

(declare-fun d!42345 () Bool)

(declare-fun e!88297 () Bool)

(assert (=> d!42345 e!88297))

(declare-fun res!65058 () Bool)

(assert (=> d!42345 (=> (not res!65058) (not e!88297))))

(declare-fun lt!70796 () ListLongMap!1671)

(assert (=> d!42345 (= res!65058 (contains!886 lt!70796 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70794 () List!1710)

(assert (=> d!42345 (= lt!70796 (ListLongMap!1672 lt!70794))))

(declare-fun lt!70797 () Unit!4132)

(declare-fun lt!70795 () Unit!4132)

(assert (=> d!42345 (= lt!70797 lt!70795)))

(assert (=> d!42345 (= (getValueByKey!170 lt!70794 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42345 (= lt!70795 (lemmaContainsTupThenGetReturnValue!88 lt!70794 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42345 (= lt!70794 (insertStrictlySorted!91 (toList!851 call!14732) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42345 (= (+!163 call!14732 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70796)))

(declare-fun b!135624 () Bool)

(declare-fun res!65057 () Bool)

(assert (=> b!135624 (=> (not res!65057) (not e!88297))))

(assert (=> b!135624 (= res!65057 (= (getValueByKey!170 (toList!851 lt!70796) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135625 () Bool)

(assert (=> b!135625 (= e!88297 (contains!889 (toList!851 lt!70796) (tuple2!2585 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (get!1478 (select (arr!2249 (ite (or c!24523 c!24526) (_values!2847 newMap!16) (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42345 res!65058) b!135624))

(assert (= (and b!135624 res!65057) b!135625))

(declare-fun m!161507 () Bool)

(assert (=> d!42345 m!161507))

(declare-fun m!161509 () Bool)

(assert (=> d!42345 m!161509))

(declare-fun m!161511 () Bool)

(assert (=> d!42345 m!161511))

(declare-fun m!161513 () Bool)

(assert (=> d!42345 m!161513))

(declare-fun m!161515 () Bool)

(assert (=> b!135624 m!161515))

(declare-fun m!161517 () Bool)

(assert (=> b!135625 m!161517))

(assert (=> b!133628 d!42345))

(declare-fun b!135626 () Bool)

(declare-fun e!88302 () List!1710)

(assert (=> b!135626 (= e!88302 (insertStrictlySorted!91 (t!6152 (t!6152 (toList!851 lt!69176))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!135627 () Bool)

(declare-fun e!88301 () List!1710)

(declare-fun call!14885 () List!1710)

(assert (=> b!135627 (= e!88301 call!14885)))

(declare-fun b!135628 () Bool)

(declare-fun res!65060 () Bool)

(declare-fun e!88299 () Bool)

(assert (=> b!135628 (=> (not res!65060) (not e!88299))))

(declare-fun lt!70798 () List!1710)

(assert (=> b!135628 (= res!65060 (containsKey!174 lt!70798 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun bm!14880 () Bool)

(declare-fun c!25403 () Bool)

(assert (=> bm!14880 (= call!14885 ($colon$colon!91 e!88302 (ite c!25403 (h!2311 (t!6152 (toList!851 lt!69176))) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun c!25404 () Bool)

(assert (=> bm!14880 (= c!25404 c!25403)))

(declare-fun b!135629 () Bool)

(declare-fun c!25402 () Bool)

(declare-fun c!25405 () Bool)

(assert (=> b!135629 (= e!88302 (ite c!25402 (t!6152 (t!6152 (toList!851 lt!69176))) (ite c!25405 (Cons!1706 (h!2311 (t!6152 (toList!851 lt!69176))) (t!6152 (t!6152 (toList!851 lt!69176)))) Nil!1707)))))

(declare-fun d!42347 () Bool)

(assert (=> d!42347 e!88299))

(declare-fun res!65059 () Bool)

(assert (=> d!42347 (=> (not res!65059) (not e!88299))))

(assert (=> d!42347 (= res!65059 (isStrictlySorted!317 lt!70798))))

(assert (=> d!42347 (= lt!70798 e!88301)))

(assert (=> d!42347 (= c!25403 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69176))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 lt!69176)))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!42347 (isStrictlySorted!317 (t!6152 (toList!851 lt!69176)))))

(assert (=> d!42347 (= (insertStrictlySorted!91 (t!6152 (toList!851 lt!69176)) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!70798)))

(declare-fun b!135630 () Bool)

(declare-fun e!88298 () List!1710)

(assert (=> b!135630 (= e!88301 e!88298)))

(assert (=> b!135630 (= c!25402 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69176))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69176)))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135631 () Bool)

(declare-fun e!88300 () List!1710)

(declare-fun call!14883 () List!1710)

(assert (=> b!135631 (= e!88300 call!14883)))

(declare-fun b!135632 () Bool)

(declare-fun call!14884 () List!1710)

(assert (=> b!135632 (= e!88298 call!14884)))

(declare-fun b!135633 () Bool)

(assert (=> b!135633 (= e!88299 (contains!889 lt!70798 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun bm!14881 () Bool)

(assert (=> bm!14881 (= call!14884 call!14885)))

(declare-fun bm!14882 () Bool)

(assert (=> bm!14882 (= call!14883 call!14884)))

(declare-fun b!135634 () Bool)

(assert (=> b!135634 (= c!25405 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69176))) (bvsgt (_1!1303 (h!2311 (t!6152 (toList!851 lt!69176)))) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> b!135634 (= e!88298 e!88300)))

(declare-fun b!135635 () Bool)

(assert (=> b!135635 (= e!88300 call!14883)))

(assert (= (and d!42347 c!25403) b!135627))

(assert (= (and d!42347 (not c!25403)) b!135630))

(assert (= (and b!135630 c!25402) b!135632))

(assert (= (and b!135630 (not c!25402)) b!135634))

(assert (= (and b!135634 c!25405) b!135635))

(assert (= (and b!135634 (not c!25405)) b!135631))

(assert (= (or b!135635 b!135631) bm!14882))

(assert (= (or b!135632 bm!14882) bm!14881))

(assert (= (or b!135627 bm!14881) bm!14880))

(assert (= (and bm!14880 c!25404) b!135626))

(assert (= (and bm!14880 (not c!25404)) b!135629))

(assert (= (and d!42347 res!65059) b!135628))

(assert (= (and b!135628 res!65060) b!135633))

(declare-fun m!161519 () Bool)

(assert (=> b!135633 m!161519))

(declare-fun m!161521 () Bool)

(assert (=> b!135628 m!161521))

(declare-fun m!161523 () Bool)

(assert (=> b!135626 m!161523))

(declare-fun m!161525 () Bool)

(assert (=> d!42347 m!161525))

(assert (=> d!42347 m!161447))

(declare-fun m!161527 () Bool)

(assert (=> bm!14880 m!161527))

(assert (=> b!133321 d!42347))

(declare-fun d!42349 () Bool)

(assert (=> d!42349 (= ($colon$colon!91 e!86952 (ite c!24748 (h!2311 (toList!851 lt!69179)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (Cons!1706 (ite c!24748 (h!2311 (toList!851 lt!69179)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) e!86952))))

(assert (=> bm!14714 d!42349))

(assert (=> b!133754 d!40519))

(declare-fun c!25406 () Bool)

(declare-fun d!42351 () Bool)

(assert (=> d!42351 (= c!25406 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69327))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69327)))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!88303 () Option!176)

(assert (=> d!42351 (= (getValueByKey!170 (t!6152 (toList!851 lt!69327)) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!88303)))

(declare-fun b!135638 () Bool)

(declare-fun e!88304 () Option!176)

(assert (=> b!135638 (= e!88304 (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69327))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!135637 () Bool)

(assert (=> b!135637 (= e!88303 e!88304)))

(declare-fun c!25407 () Bool)

(assert (=> b!135637 (= c!25407 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69327))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69327)))) (_1!1303 (tuple2!2585 lt!69189 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!135636 () Bool)

(assert (=> b!135636 (= e!88303 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 lt!69327))))))))

(declare-fun b!135639 () Bool)

(assert (=> b!135639 (= e!88304 None!174)))

(assert (= (and d!42351 c!25406) b!135636))

(assert (= (and d!42351 (not c!25406)) b!135637))

(assert (= (and b!135637 c!25407) b!135638))

(assert (= (and b!135637 (not c!25407)) b!135639))

(declare-fun m!161529 () Bool)

(assert (=> b!135638 m!161529))

(assert (=> b!133986 d!42351))

(assert (=> b!133934 d!41505))

(assert (=> d!40979 d!40673))

(assert (=> d!40979 d!40675))

(declare-fun d!42353 () Bool)

(assert (=> d!42353 (isDefined!124 (getValueByKey!170 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))))))

(assert (=> d!42353 true))

(declare-fun _$12!404 () Unit!4132)

(assert (=> d!42353 (= (choose!826 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!69116))) _$12!404)))

(declare-fun bs!5679 () Bool)

(assert (= bs!5679 d!42353))

(assert (=> bs!5679 m!155971))

(assert (=> bs!5679 m!156207))

(assert (=> bs!5679 m!156207))

(assert (=> bs!5679 m!156209))

(assert (=> d!40979 d!42353))

(declare-fun d!42355 () Bool)

(declare-fun res!65061 () Bool)

(declare-fun e!88305 () Bool)

(assert (=> d!42355 (=> res!65061 e!88305)))

(assert (=> d!42355 (= res!65061 (or ((_ is Nil!1707) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) ((_ is Nil!1707) (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))))))

(assert (=> d!42355 (= (isStrictlySorted!317 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) e!88305)))

(declare-fun b!135640 () Bool)

(declare-fun e!88306 () Bool)

(assert (=> b!135640 (= e!88305 e!88306)))

(declare-fun res!65062 () Bool)

(assert (=> b!135640 (=> (not res!65062) (not e!88306))))

(assert (=> b!135640 (= res!65062 (bvslt (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1303 (h!2311 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))))))

(declare-fun b!135641 () Bool)

(assert (=> b!135641 (= e!88306 (isStrictlySorted!317 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) lt!69094 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))))

(assert (= (and d!42355 (not res!65061)) b!135640))

(assert (= (and b!135640 res!65062) b!135641))

(declare-fun m!161531 () Bool)

(assert (=> b!135641 m!161531))

(assert (=> d!40979 d!42355))

(declare-fun d!42357 () Bool)

(declare-fun res!65063 () Bool)

(declare-fun e!88307 () Bool)

(assert (=> d!42357 (=> res!65063 e!88307)))

(assert (=> d!42357 (= res!65063 (or ((_ is Nil!1707) lt!69889) ((_ is Nil!1707) (t!6152 lt!69889))))))

(assert (=> d!42357 (= (isStrictlySorted!317 lt!69889) e!88307)))

(declare-fun b!135642 () Bool)

(declare-fun e!88308 () Bool)

(assert (=> b!135642 (= e!88307 e!88308)))

(declare-fun res!65064 () Bool)

(assert (=> b!135642 (=> (not res!65064) (not e!88308))))

(assert (=> b!135642 (= res!65064 (bvslt (_1!1303 (h!2311 lt!69889)) (_1!1303 (h!2311 (t!6152 lt!69889)))))))

(declare-fun b!135643 () Bool)

(assert (=> b!135643 (= e!88308 (isStrictlySorted!317 (t!6152 lt!69889)))))

(assert (= (and d!42357 (not res!65063)) b!135642))

(assert (= (and b!135642 res!65064) b!135643))

(declare-fun m!161533 () Bool)

(assert (=> b!135643 m!161533))

(assert (=> d!40797 d!42357))

(declare-fun d!42359 () Bool)

(declare-fun res!65065 () Bool)

(declare-fun e!88309 () Bool)

(assert (=> d!42359 (=> res!65065 e!88309)))

(assert (=> d!42359 (= res!65065 (or ((_ is Nil!1707) (toList!851 call!14621)) ((_ is Nil!1707) (t!6152 (toList!851 call!14621)))))))

(assert (=> d!42359 (= (isStrictlySorted!317 (toList!851 call!14621)) e!88309)))

(declare-fun b!135644 () Bool)

(declare-fun e!88310 () Bool)

(assert (=> b!135644 (= e!88309 e!88310)))

(declare-fun res!65066 () Bool)

(assert (=> b!135644 (=> (not res!65066) (not e!88310))))

(assert (=> b!135644 (= res!65066 (bvslt (_1!1303 (h!2311 (toList!851 call!14621))) (_1!1303 (h!2311 (t!6152 (toList!851 call!14621))))))))

(declare-fun b!135645 () Bool)

(assert (=> b!135645 (= e!88310 (isStrictlySorted!317 (t!6152 (toList!851 call!14621))))))

(assert (= (and d!42359 (not res!65065)) b!135644))

(assert (= (and b!135644 res!65066) b!135645))

(declare-fun m!161535 () Bool)

(assert (=> b!135645 m!161535))

(assert (=> d!40797 d!42359))

(assert (=> d!40873 d!40369))

(assert (=> d!40873 d!40367))

(assert (=> d!40873 d!40357))

(declare-fun b!135646 () Bool)

(declare-fun e!88313 () SeekEntryResult!278)

(assert (=> b!135646 (= e!88313 Undefined!278)))

(declare-fun b!135647 () Bool)

(declare-fun e!88312 () SeekEntryResult!278)

(assert (=> b!135647 (= e!88312 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15594 lt!69316) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (index!3274 lt!69316) (x!15594 lt!69316) (mask!7163 newMap!16)) (bvadd (x!15594 lt!69316) #b00000000000000000000000000000001) (mask!7163 newMap!16)) (index!3274 lt!69316) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(declare-fun b!135648 () Bool)

(declare-fun e!88311 () SeekEntryResult!278)

(assert (=> b!135648 (= e!88311 (Found!278 (nextIndex!0 (index!3274 lt!69316) (x!15594 lt!69316) (mask!7163 newMap!16))))))

(declare-fun d!42361 () Bool)

(declare-fun lt!70799 () SeekEntryResult!278)

(assert (=> d!42361 (and (or ((_ is Undefined!278) lt!70799) (not ((_ is Found!278) lt!70799)) (and (bvsge (index!3273 lt!70799) #b00000000000000000000000000000000) (bvslt (index!3273 lt!70799) (size!2518 (_keys!4612 newMap!16))))) (or ((_ is Undefined!278) lt!70799) ((_ is Found!278) lt!70799) (not ((_ is MissingVacant!278) lt!70799)) (not (= (index!3275 lt!70799) (index!3274 lt!69316))) (and (bvsge (index!3275 lt!70799) #b00000000000000000000000000000000) (bvslt (index!3275 lt!70799) (size!2518 (_keys!4612 newMap!16))))) (or ((_ is Undefined!278) lt!70799) (ite ((_ is Found!278) lt!70799) (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!70799)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (and ((_ is MissingVacant!278) lt!70799) (= (index!3275 lt!70799) (index!3274 lt!69316)) (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3275 lt!70799)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!42361 (= lt!70799 e!88313)))

(declare-fun c!25410 () Bool)

(assert (=> d!42361 (= c!25410 (bvsge (bvadd (x!15594 lt!69316) #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(declare-fun lt!70800 () (_ BitVec 64))

(assert (=> d!42361 (= lt!70800 (select (arr!2248 (_keys!4612 newMap!16)) (nextIndex!0 (index!3274 lt!69316) (x!15594 lt!69316) (mask!7163 newMap!16))))))

(assert (=> d!42361 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!42361 (= (seekKeyOrZeroReturnVacant!0 (bvadd (x!15594 lt!69316) #b00000000000000000000000000000001) (nextIndex!0 (index!3274 lt!69316) (x!15594 lt!69316) (mask!7163 newMap!16)) (index!3274 lt!69316) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)) lt!70799)))

(declare-fun b!135649 () Bool)

(declare-fun c!25409 () Bool)

(assert (=> b!135649 (= c!25409 (= lt!70800 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135649 (= e!88311 e!88312)))

(declare-fun b!135650 () Bool)

(assert (=> b!135650 (= e!88312 (MissingVacant!278 (index!3274 lt!69316)))))

(declare-fun b!135651 () Bool)

(assert (=> b!135651 (= e!88313 e!88311)))

(declare-fun c!25408 () Bool)

(assert (=> b!135651 (= c!25408 (= lt!70800 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!42361 c!25410) b!135646))

(assert (= (and d!42361 (not c!25410)) b!135651))

(assert (= (and b!135651 c!25408) b!135648))

(assert (= (and b!135651 (not c!25408)) b!135649))

(assert (= (and b!135649 c!25409) b!135650))

(assert (= (and b!135649 (not c!25409)) b!135647))

(assert (=> b!135647 m!156937))

(declare-fun m!161537 () Bool)

(assert (=> b!135647 m!161537))

(assert (=> b!135647 m!161537))

(assert (=> b!135647 m!155841))

(declare-fun m!161539 () Bool)

(assert (=> b!135647 m!161539))

(declare-fun m!161541 () Bool)

(assert (=> d!42361 m!161541))

(declare-fun m!161543 () Bool)

(assert (=> d!42361 m!161543))

(assert (=> d!42361 m!156937))

(declare-fun m!161545 () Bool)

(assert (=> d!42361 m!161545))

(assert (=> d!42361 m!156183))

(assert (=> b!133283 d!42361))

(declare-fun d!42363 () Bool)

(declare-fun lt!70801 () (_ BitVec 32))

(assert (=> d!42363 (and (bvsge lt!70801 #b00000000000000000000000000000000) (bvslt lt!70801 (bvadd (mask!7163 newMap!16) #b00000000000000000000000000000001)))))

(assert (=> d!42363 (= lt!70801 (choose!52 (index!3274 lt!69316) (x!15594 lt!69316) (mask!7163 newMap!16)))))

(assert (=> d!42363 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!42363 (= (nextIndex!0 (index!3274 lt!69316) (x!15594 lt!69316) (mask!7163 newMap!16)) lt!70801)))

(declare-fun bs!5680 () Bool)

(assert (= bs!5680 d!42363))

(declare-fun m!161547 () Bool)

(assert (=> bs!5680 m!161547))

(assert (=> bs!5680 m!156183))

(assert (=> b!133283 d!42363))

(declare-fun d!42365 () Bool)

(declare-fun e!88314 () Bool)

(assert (=> d!42365 e!88314))

(declare-fun res!65067 () Bool)

(assert (=> d!42365 (=> res!65067 e!88314)))

(declare-fun lt!70803 () Bool)

(assert (=> d!42365 (= res!65067 (not lt!70803))))

(declare-fun lt!70805 () Bool)

(assert (=> d!42365 (= lt!70803 lt!70805)))

(declare-fun lt!70802 () Unit!4132)

(declare-fun e!88315 () Unit!4132)

(assert (=> d!42365 (= lt!70802 e!88315)))

(declare-fun c!25411 () Bool)

(assert (=> d!42365 (= c!25411 lt!70805)))

(assert (=> d!42365 (= lt!70805 (containsKey!174 (toList!851 lt!69756) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42365 (= (contains!886 lt!69756 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70803)))

(declare-fun b!135652 () Bool)

(declare-fun lt!70804 () Unit!4132)

(assert (=> b!135652 (= e!88315 lt!70804)))

(assert (=> b!135652 (= lt!70804 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69756) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135652 (isDefined!124 (getValueByKey!170 (toList!851 lt!69756) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135653 () Bool)

(declare-fun Unit!4266 () Unit!4132)

(assert (=> b!135653 (= e!88315 Unit!4266)))

(declare-fun b!135654 () Bool)

(assert (=> b!135654 (= e!88314 (isDefined!124 (getValueByKey!170 (toList!851 lt!69756) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42365 c!25411) b!135652))

(assert (= (and d!42365 (not c!25411)) b!135653))

(assert (= (and d!42365 (not res!65067)) b!135654))

(declare-fun m!161549 () Bool)

(assert (=> d!42365 m!161549))

(declare-fun m!161551 () Bool)

(assert (=> b!135652 m!161551))

(declare-fun m!161553 () Bool)

(assert (=> b!135652 m!161553))

(assert (=> b!135652 m!161553))

(declare-fun m!161555 () Bool)

(assert (=> b!135652 m!161555))

(assert (=> b!135654 m!161553))

(assert (=> b!135654 m!161553))

(assert (=> b!135654 m!161555))

(assert (=> bm!14722 d!42365))

(assert (=> b!133845 d!41505))

(declare-fun d!42367 () Bool)

(declare-fun res!65068 () Bool)

(declare-fun e!88316 () Bool)

(assert (=> d!42367 (=> res!65068 e!88316)))

(assert (=> d!42367 (= res!65068 (and ((_ is Cons!1706) (toList!851 lt!69301)) (= (_1!1303 (h!2311 (toList!851 lt!69301))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!42367 (= (containsKey!174 (toList!851 lt!69301) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!88316)))

(declare-fun b!135655 () Bool)

(declare-fun e!88317 () Bool)

(assert (=> b!135655 (= e!88316 e!88317)))

(declare-fun res!65069 () Bool)

(assert (=> b!135655 (=> (not res!65069) (not e!88317))))

(assert (=> b!135655 (= res!65069 (and (or (not ((_ is Cons!1706) (toList!851 lt!69301))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69301))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1706) (toList!851 lt!69301)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69301))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!135656 () Bool)

(assert (=> b!135656 (= e!88317 (containsKey!174 (t!6152 (toList!851 lt!69301)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!42367 (not res!65068)) b!135655))

(assert (= (and b!135655 res!65069) b!135656))

(assert (=> b!135656 m!156043))

(declare-fun m!161557 () Bool)

(assert (=> b!135656 m!161557))

(assert (=> d!40895 d!42367))

(assert (=> d!40625 d!40543))

(assert (=> d!40625 d!40383))

(assert (=> d!40625 d!40627))

(assert (=> b!133359 d!41519))

(declare-fun d!42369 () Bool)

(declare-fun res!65070 () Bool)

(declare-fun e!88318 () Bool)

(assert (=> d!42369 (=> res!65070 e!88318)))

(assert (=> d!42369 (= res!65070 (and ((_ is Cons!1706) (toList!851 lt!69250)) (= (_1!1303 (h!2311 (toList!851 lt!69250))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42369 (= (containsKey!174 (toList!851 lt!69250) #b1000000000000000000000000000000000000000000000000000000000000000) e!88318)))

(declare-fun b!135657 () Bool)

(declare-fun e!88319 () Bool)

(assert (=> b!135657 (= e!88318 e!88319)))

(declare-fun res!65071 () Bool)

(assert (=> b!135657 (=> (not res!65071) (not e!88319))))

(assert (=> b!135657 (= res!65071 (and (or (not ((_ is Cons!1706) (toList!851 lt!69250))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69250))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1706) (toList!851 lt!69250)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69250))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135658 () Bool)

(assert (=> b!135658 (= e!88319 (containsKey!174 (t!6152 (toList!851 lt!69250)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42369 (not res!65070)) b!135657))

(assert (= (and b!135657 res!65071) b!135658))

(declare-fun m!161559 () Bool)

(assert (=> b!135658 m!161559))

(assert (=> d!40585 d!42369))

(declare-fun d!42371 () Bool)

(declare-fun e!88320 () Bool)

(assert (=> d!42371 e!88320))

(declare-fun res!65072 () Bool)

(assert (=> d!42371 (=> res!65072 e!88320)))

(declare-fun lt!70807 () Bool)

(assert (=> d!42371 (= res!65072 (not lt!70807))))

(declare-fun lt!70809 () Bool)

(assert (=> d!42371 (= lt!70807 lt!70809)))

(declare-fun lt!70806 () Unit!4132)

(declare-fun e!88321 () Unit!4132)

(assert (=> d!42371 (= lt!70806 e!88321)))

(declare-fun c!25412 () Bool)

(assert (=> d!42371 (= c!25412 lt!70809)))

(assert (=> d!42371 (= lt!70809 (containsKey!174 (toList!851 lt!69735) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42371 (= (contains!886 lt!69735 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70807)))

(declare-fun b!135659 () Bool)

(declare-fun lt!70808 () Unit!4132)

(assert (=> b!135659 (= e!88321 lt!70808)))

(assert (=> b!135659 (= lt!70808 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69735) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135659 (isDefined!124 (getValueByKey!170 (toList!851 lt!69735) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135660 () Bool)

(declare-fun Unit!4267 () Unit!4132)

(assert (=> b!135660 (= e!88321 Unit!4267)))

(declare-fun b!135661 () Bool)

(assert (=> b!135661 (= e!88320 (isDefined!124 (getValueByKey!170 (toList!851 lt!69735) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42371 c!25412) b!135659))

(assert (= (and d!42371 (not c!25412)) b!135660))

(assert (= (and d!42371 (not res!65072)) b!135661))

(declare-fun m!161561 () Bool)

(assert (=> d!42371 m!161561))

(declare-fun m!161563 () Bool)

(assert (=> b!135659 m!161563))

(declare-fun m!161565 () Bool)

(assert (=> b!135659 m!161565))

(assert (=> b!135659 m!161565))

(declare-fun m!161567 () Bool)

(assert (=> b!135659 m!161567))

(assert (=> b!135661 m!161565))

(assert (=> b!135661 m!161565))

(assert (=> b!135661 m!161567))

(assert (=> d!40619 d!42371))

(assert (=> d!40619 d!40425))

(declare-fun d!42373 () Bool)

(declare-fun e!88322 () Bool)

(assert (=> d!42373 e!88322))

(declare-fun res!65073 () Bool)

(assert (=> d!42373 (=> res!65073 e!88322)))

(declare-fun lt!70811 () Bool)

(assert (=> d!42373 (= res!65073 (not lt!70811))))

(declare-fun lt!70813 () Bool)

(assert (=> d!42373 (= lt!70811 lt!70813)))

(declare-fun lt!70810 () Unit!4132)

(declare-fun e!88323 () Unit!4132)

(assert (=> d!42373 (= lt!70810 e!88323)))

(declare-fun c!25413 () Bool)

(assert (=> d!42373 (= c!25413 lt!70813)))

(assert (=> d!42373 (= lt!70813 (containsKey!174 (toList!851 lt!69905) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42373 (= (contains!886 lt!69905 (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70811)))

(declare-fun b!135662 () Bool)

(declare-fun lt!70812 () Unit!4132)

(assert (=> b!135662 (= e!88323 lt!70812)))

(assert (=> b!135662 (= lt!70812 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69905) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!135662 (isDefined!124 (getValueByKey!170 (toList!851 lt!69905) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135663 () Bool)

(declare-fun Unit!4268 () Unit!4132)

(assert (=> b!135663 (= e!88323 Unit!4268)))

(declare-fun b!135664 () Bool)

(assert (=> b!135664 (= e!88322 (isDefined!124 (getValueByKey!170 (toList!851 lt!69905) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42373 c!25413) b!135662))

(assert (= (and d!42373 (not c!25413)) b!135663))

(assert (= (and d!42373 (not res!65073)) b!135664))

(declare-fun m!161569 () Bool)

(assert (=> d!42373 m!161569))

(declare-fun m!161571 () Bool)

(assert (=> b!135662 m!161571))

(assert (=> b!135662 m!158007))

(assert (=> b!135662 m!158007))

(declare-fun m!161573 () Bool)

(assert (=> b!135662 m!161573))

(assert (=> b!135664 m!158007))

(assert (=> b!135664 m!158007))

(assert (=> b!135664 m!161573))

(assert (=> d!40821 d!42373))

(declare-fun c!25414 () Bool)

(declare-fun d!42375 () Bool)

(assert (=> d!42375 (= c!25414 (and ((_ is Cons!1706) lt!69903) (= (_1!1303 (h!2311 lt!69903)) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88324 () Option!176)

(assert (=> d!42375 (= (getValueByKey!170 lt!69903 (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88324)))

(declare-fun e!88325 () Option!176)

(declare-fun b!135667 () Bool)

(assert (=> b!135667 (= e!88325 (getValueByKey!170 (t!6152 lt!69903) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135666 () Bool)

(assert (=> b!135666 (= e!88324 e!88325)))

(declare-fun c!25415 () Bool)

(assert (=> b!135666 (= c!25415 (and ((_ is Cons!1706) lt!69903) (not (= (_1!1303 (h!2311 lt!69903)) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135665 () Bool)

(assert (=> b!135665 (= e!88324 (Some!175 (_2!1303 (h!2311 lt!69903))))))

(declare-fun b!135668 () Bool)

(assert (=> b!135668 (= e!88325 None!174)))

(assert (= (and d!42375 c!25414) b!135665))

(assert (= (and d!42375 (not c!25414)) b!135666))

(assert (= (and b!135666 c!25415) b!135667))

(assert (= (and b!135666 (not c!25415)) b!135668))

(declare-fun m!161575 () Bool)

(assert (=> b!135667 m!161575))

(assert (=> d!40821 d!42375))

(declare-fun d!42377 () Bool)

(assert (=> d!42377 (= (getValueByKey!170 lt!69903 (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70814 () Unit!4132)

(assert (=> d!42377 (= lt!70814 (choose!834 lt!69903 (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88326 () Bool)

(assert (=> d!42377 e!88326))

(declare-fun res!65074 () Bool)

(assert (=> d!42377 (=> (not res!65074) (not e!88326))))

(assert (=> d!42377 (= res!65074 (isStrictlySorted!317 lt!69903))))

(assert (=> d!42377 (= (lemmaContainsTupThenGetReturnValue!88 lt!69903 (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70814)))

(declare-fun b!135669 () Bool)

(declare-fun res!65075 () Bool)

(assert (=> b!135669 (=> (not res!65075) (not e!88326))))

(assert (=> b!135669 (= res!65075 (containsKey!174 lt!69903 (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135670 () Bool)

(assert (=> b!135670 (= e!88326 (contains!889 lt!69903 (tuple2!2585 (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42377 res!65074) b!135669))

(assert (= (and b!135669 res!65075) b!135670))

(assert (=> d!42377 m!158001))

(declare-fun m!161577 () Bool)

(assert (=> d!42377 m!161577))

(declare-fun m!161579 () Bool)

(assert (=> d!42377 m!161579))

(declare-fun m!161581 () Bool)

(assert (=> b!135669 m!161581))

(declare-fun m!161583 () Bool)

(assert (=> b!135670 m!161583))

(assert (=> d!40821 d!42377))

(declare-fun b!135671 () Bool)

(declare-fun e!88331 () List!1710)

(assert (=> b!135671 (= e!88331 (insertStrictlySorted!91 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135672 () Bool)

(declare-fun e!88330 () List!1710)

(declare-fun call!14888 () List!1710)

(assert (=> b!135672 (= e!88330 call!14888)))

(declare-fun b!135673 () Bool)

(declare-fun res!65077 () Bool)

(declare-fun e!88328 () Bool)

(assert (=> b!135673 (=> (not res!65077) (not e!88328))))

(declare-fun lt!70815 () List!1710)

(assert (=> b!135673 (= res!65077 (containsKey!174 lt!70815 (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14883 () Bool)

(declare-fun c!25417 () Bool)

(assert (=> bm!14883 (= call!14888 ($colon$colon!91 e!88331 (ite c!25417 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (tuple2!2585 (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25418 () Bool)

(assert (=> bm!14883 (= c!25418 c!25417)))

(declare-fun b!135674 () Bool)

(declare-fun c!25419 () Bool)

(declare-fun c!25416 () Bool)

(assert (=> b!135674 (= e!88331 (ite c!25416 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (ite c!25419 (Cons!1706 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) Nil!1707)))))

(declare-fun d!42379 () Bool)

(assert (=> d!42379 e!88328))

(declare-fun res!65076 () Bool)

(assert (=> d!42379 (=> (not res!65076) (not e!88328))))

(assert (=> d!42379 (= res!65076 (isStrictlySorted!317 lt!70815))))

(assert (=> d!42379 (= lt!70815 e!88330)))

(assert (=> d!42379 (= c!25417 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvslt (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42379 (isStrictlySorted!317 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))

(assert (=> d!42379 (= (insertStrictlySorted!91 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70815)))

(declare-fun b!135675 () Bool)

(declare-fun e!88327 () List!1710)

(assert (=> b!135675 (= e!88330 e!88327)))

(assert (=> b!135675 (= c!25416 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135676 () Bool)

(declare-fun e!88329 () List!1710)

(declare-fun call!14886 () List!1710)

(assert (=> b!135676 (= e!88329 call!14886)))

(declare-fun b!135677 () Bool)

(declare-fun call!14887 () List!1710)

(assert (=> b!135677 (= e!88327 call!14887)))

(declare-fun b!135678 () Bool)

(assert (=> b!135678 (= e!88328 (contains!889 lt!70815 (tuple2!2585 (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14884 () Bool)

(assert (=> bm!14884 (= call!14887 call!14888)))

(declare-fun bm!14885 () Bool)

(assert (=> bm!14885 (= call!14886 call!14887)))

(declare-fun b!135679 () Bool)

(assert (=> b!135679 (= c!25419 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvsgt (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1303 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!135679 (= e!88327 e!88329)))

(declare-fun b!135680 () Bool)

(assert (=> b!135680 (= e!88329 call!14886)))

(assert (= (and d!42379 c!25417) b!135672))

(assert (= (and d!42379 (not c!25417)) b!135675))

(assert (= (and b!135675 c!25416) b!135677))

(assert (= (and b!135675 (not c!25416)) b!135679))

(assert (= (and b!135679 c!25419) b!135680))

(assert (= (and b!135679 (not c!25419)) b!135676))

(assert (= (or b!135680 b!135676) bm!14885))

(assert (= (or b!135677 bm!14885) bm!14884))

(assert (= (or b!135672 bm!14884) bm!14883))

(assert (= (and bm!14883 c!25418) b!135671))

(assert (= (and bm!14883 (not c!25418)) b!135674))

(assert (= (and d!42379 res!65076) b!135673))

(assert (= (and b!135673 res!65077) b!135678))

(declare-fun m!161585 () Bool)

(assert (=> b!135678 m!161585))

(declare-fun m!161587 () Bool)

(assert (=> b!135673 m!161587))

(declare-fun m!161589 () Bool)

(assert (=> b!135671 m!161589))

(declare-fun m!161591 () Bool)

(assert (=> d!42379 m!161591))

(assert (=> d!42379 m!160821))

(declare-fun m!161593 () Bool)

(assert (=> bm!14883 m!161593))

(assert (=> d!40821 d!42379))

(declare-fun d!42381 () Bool)

(declare-fun c!25420 () Bool)

(assert (=> d!42381 (= c!25420 (and ((_ is Cons!1706) (toList!851 lt!70008)) (= (_1!1303 (h!2311 (toList!851 lt!70008))) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))))))

(declare-fun e!88332 () Option!176)

(assert (=> d!42381 (= (getValueByKey!170 (toList!851 lt!70008) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))) e!88332)))

(declare-fun b!135683 () Bool)

(declare-fun e!88333 () Option!176)

(assert (=> b!135683 (= e!88333 (getValueByKey!170 (t!6152 (toList!851 lt!70008)) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))

(declare-fun b!135682 () Bool)

(assert (=> b!135682 (= e!88332 e!88333)))

(declare-fun c!25421 () Bool)

(assert (=> b!135682 (= c!25421 (and ((_ is Cons!1706) (toList!851 lt!70008)) (not (= (_1!1303 (h!2311 (toList!851 lt!70008))) (_1!1303 (tuple2!2585 lt!69365 (minValue!2719 newMap!16)))))))))

(declare-fun b!135681 () Bool)

(assert (=> b!135681 (= e!88332 (Some!175 (_2!1303 (h!2311 (toList!851 lt!70008)))))))

(declare-fun b!135684 () Bool)

(assert (=> b!135684 (= e!88333 None!174)))

(assert (= (and d!42381 c!25420) b!135681))

(assert (= (and d!42381 (not c!25420)) b!135682))

(assert (= (and b!135682 c!25421) b!135683))

(assert (= (and b!135682 (not c!25421)) b!135684))

(declare-fun m!161595 () Bool)

(assert (=> b!135683 m!161595))

(assert (=> b!133913 d!42381))

(assert (=> d!40969 d!40965))

(assert (=> d!40969 d!40383))

(assert (=> d!40969 d!40967))

(declare-fun lt!70816 () Bool)

(declare-fun d!42383 () Bool)

(assert (=> d!42383 (= lt!70816 (select (content!133 (t!6152 (toList!851 lt!69320))) (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun e!88335 () Bool)

(assert (=> d!42383 (= lt!70816 e!88335)))

(declare-fun res!65078 () Bool)

(assert (=> d!42383 (=> (not res!65078) (not e!88335))))

(assert (=> d!42383 (= res!65078 ((_ is Cons!1706) (t!6152 (toList!851 lt!69320))))))

(assert (=> d!42383 (= (contains!889 (t!6152 (toList!851 lt!69320)) (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) lt!70816)))

(declare-fun b!135685 () Bool)

(declare-fun e!88334 () Bool)

(assert (=> b!135685 (= e!88335 e!88334)))

(declare-fun res!65079 () Bool)

(assert (=> b!135685 (=> res!65079 e!88334)))

(assert (=> b!135685 (= res!65079 (= (h!2311 (t!6152 (toList!851 lt!69320))) (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!135686 () Bool)

(assert (=> b!135686 (= e!88334 (contains!889 (t!6152 (t!6152 (toList!851 lt!69320))) (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!42383 res!65078) b!135685))

(assert (= (and b!135685 (not res!65079)) b!135686))

(assert (=> d!42383 m!160397))

(declare-fun m!161597 () Bool)

(assert (=> d!42383 m!161597))

(declare-fun m!161599 () Bool)

(assert (=> b!135686 m!161599))

(assert (=> b!133903 d!42383))

(declare-fun d!42385 () Bool)

(declare-fun e!88336 () Bool)

(assert (=> d!42385 e!88336))

(declare-fun res!65080 () Bool)

(assert (=> d!42385 (=> res!65080 e!88336)))

(declare-fun lt!70818 () Bool)

(assert (=> d!42385 (= res!65080 (not lt!70818))))

(declare-fun lt!70820 () Bool)

(assert (=> d!42385 (= lt!70818 lt!70820)))

(declare-fun lt!70817 () Unit!4132)

(declare-fun e!88337 () Unit!4132)

(assert (=> d!42385 (= lt!70817 e!88337)))

(declare-fun c!25422 () Bool)

(assert (=> d!42385 (= c!25422 lt!70820)))

(assert (=> d!42385 (= lt!70820 (containsKey!174 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 lt!69447) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))

(assert (=> d!42385 (= (contains!886 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2248 lt!69447) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))) lt!70818)))

(declare-fun b!135687 () Bool)

(declare-fun lt!70819 () Unit!4132)

(assert (=> b!135687 (= e!88337 lt!70819)))

(assert (=> b!135687 (= lt!70819 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 lt!69447) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))

(assert (=> b!135687 (isDefined!124 (getValueByKey!170 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 lt!69447) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))

(declare-fun b!135688 () Bool)

(declare-fun Unit!4269 () Unit!4132)

(assert (=> b!135688 (= e!88337 Unit!4269)))

(declare-fun b!135689 () Bool)

(assert (=> b!135689 (= e!88336 (isDefined!124 (getValueByKey!170 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 lt!69447) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116))))))))

(assert (= (and d!42385 c!25422) b!135687))

(assert (= (and d!42385 (not c!25422)) b!135688))

(assert (= (and d!42385 (not res!65080)) b!135689))

(assert (=> d!42385 m!157121))

(declare-fun m!161601 () Bool)

(assert (=> d!42385 m!161601))

(assert (=> b!135687 m!157121))

(declare-fun m!161603 () Bool)

(assert (=> b!135687 m!161603))

(assert (=> b!135687 m!157121))

(declare-fun m!161605 () Bool)

(assert (=> b!135687 m!161605))

(assert (=> b!135687 m!161605))

(declare-fun m!161607 () Bool)

(assert (=> b!135687 m!161607))

(assert (=> b!135689 m!157121))

(assert (=> b!135689 m!161605))

(assert (=> b!135689 m!161605))

(assert (=> b!135689 m!161607))

(assert (=> b!133386 d!42385))

(assert (=> b!133386 d!40551))

(declare-fun d!42387 () Bool)

(assert (=> d!42387 (= (apply!116 lt!69609 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (getValueByKey!170 (toList!851 lt!69609) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5681 () Bool)

(assert (= bs!5681 d!42387))

(assert (=> bs!5681 m!156125))

(assert (=> bs!5681 m!158925))

(assert (=> bs!5681 m!158925))

(declare-fun m!161609 () Bool)

(assert (=> bs!5681 m!161609))

(assert (=> b!133331 d!42387))

(assert (=> b!133331 d!40497))

(declare-fun lt!70821 () Bool)

(declare-fun d!42389 () Bool)

(assert (=> d!42389 (= lt!70821 (select (content!133 lt!69560) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!88339 () Bool)

(assert (=> d!42389 (= lt!70821 e!88339)))

(declare-fun res!65081 () Bool)

(assert (=> d!42389 (=> (not res!65081) (not e!88339))))

(assert (=> d!42389 (= res!65081 ((_ is Cons!1706) lt!69560))))

(assert (=> d!42389 (= (contains!889 lt!69560 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) lt!70821)))

(declare-fun b!135690 () Bool)

(declare-fun e!88338 () Bool)

(assert (=> b!135690 (= e!88339 e!88338)))

(declare-fun res!65082 () Bool)

(assert (=> b!135690 (=> res!65082 e!88338)))

(assert (=> b!135690 (= res!65082 (= (h!2311 lt!69560) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135691 () Bool)

(assert (=> b!135691 (= e!88338 (contains!889 (t!6152 lt!69560) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!42389 res!65081) b!135690))

(assert (= (and b!135690 (not res!65082)) b!135691))

(declare-fun m!161611 () Bool)

(assert (=> d!42389 m!161611))

(declare-fun m!161613 () Bool)

(assert (=> d!42389 m!161613))

(declare-fun m!161615 () Bool)

(assert (=> b!135691 m!161615))

(assert (=> b!133237 d!42389))

(declare-fun d!42391 () Bool)

(assert (=> d!42391 (contains!886 (+!163 lt!69664 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16))) lt!69670)))

(declare-fun lt!70822 () Unit!4132)

(assert (=> d!42391 (= lt!70822 (choose!829 lt!69664 lt!69672 (zeroValue!2719 newMap!16) lt!69670))))

(assert (=> d!42391 (contains!886 lt!69664 lt!69670)))

(assert (=> d!42391 (= (addStillContains!92 lt!69664 lt!69672 (zeroValue!2719 newMap!16) lt!69670) lt!70822)))

(declare-fun bs!5682 () Bool)

(assert (= bs!5682 d!42391))

(assert (=> bs!5682 m!157159))

(assert (=> bs!5682 m!157159))

(assert (=> bs!5682 m!157171))

(declare-fun m!161617 () Bool)

(assert (=> bs!5682 m!161617))

(declare-fun m!161619 () Bool)

(assert (=> bs!5682 m!161619))

(assert (=> b!133404 d!42391))

(declare-fun d!42393 () Bool)

(assert (=> d!42393 (= (apply!116 (+!163 lt!69658 (tuple2!2585 lt!69659 (zeroValue!2719 newMap!16))) lt!69662) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69658 (tuple2!2585 lt!69659 (zeroValue!2719 newMap!16)))) lt!69662)))))

(declare-fun bs!5683 () Bool)

(assert (= bs!5683 d!42393))

(declare-fun m!161621 () Bool)

(assert (=> bs!5683 m!161621))

(assert (=> bs!5683 m!161621))

(declare-fun m!161623 () Bool)

(assert (=> bs!5683 m!161623))

(assert (=> b!133404 d!42393))

(assert (=> b!133404 d!42139))

(declare-fun d!42395 () Bool)

(assert (=> d!42395 (= (apply!116 lt!69658 lt!69662) (get!1482 (getValueByKey!170 (toList!851 lt!69658) lt!69662)))))

(declare-fun bs!5684 () Bool)

(assert (= bs!5684 d!42395))

(declare-fun m!161625 () Bool)

(assert (=> bs!5684 m!161625))

(assert (=> bs!5684 m!161625))

(declare-fun m!161627 () Bool)

(assert (=> bs!5684 m!161627))

(assert (=> b!133404 d!42395))

(declare-fun d!42397 () Bool)

(declare-fun e!88340 () Bool)

(assert (=> d!42397 e!88340))

(declare-fun res!65084 () Bool)

(assert (=> d!42397 (=> (not res!65084) (not e!88340))))

(declare-fun lt!70825 () ListLongMap!1671)

(assert (=> d!42397 (= res!65084 (contains!886 lt!70825 (_1!1303 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70823 () List!1710)

(assert (=> d!42397 (= lt!70825 (ListLongMap!1672 lt!70823))))

(declare-fun lt!70826 () Unit!4132)

(declare-fun lt!70824 () Unit!4132)

(assert (=> d!42397 (= lt!70826 lt!70824)))

(assert (=> d!42397 (= (getValueByKey!170 lt!70823 (_1!1303 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42397 (= lt!70824 (lemmaContainsTupThenGetReturnValue!88 lt!70823 (_1!1303 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42397 (= lt!70823 (insertStrictlySorted!91 (toList!851 lt!69664) (_1!1303 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42397 (= (+!163 lt!69664 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16))) lt!70825)))

(declare-fun b!135692 () Bool)

(declare-fun res!65083 () Bool)

(assert (=> b!135692 (=> (not res!65083) (not e!88340))))

(assert (=> b!135692 (= res!65083 (= (getValueByKey!170 (toList!851 lt!70825) (_1!1303 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16))))))))

(declare-fun b!135693 () Bool)

(assert (=> b!135693 (= e!88340 (contains!889 (toList!851 lt!70825) (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16))))))

(assert (= (and d!42397 res!65084) b!135692))

(assert (= (and b!135692 res!65083) b!135693))

(declare-fun m!161629 () Bool)

(assert (=> d!42397 m!161629))

(declare-fun m!161631 () Bool)

(assert (=> d!42397 m!161631))

(declare-fun m!161633 () Bool)

(assert (=> d!42397 m!161633))

(declare-fun m!161635 () Bool)

(assert (=> d!42397 m!161635))

(declare-fun m!161637 () Bool)

(assert (=> b!135692 m!161637))

(declare-fun m!161639 () Bool)

(assert (=> b!135693 m!161639))

(assert (=> b!133404 d!42397))

(declare-fun d!42399 () Bool)

(assert (=> d!42399 (= (apply!116 (+!163 lt!69660 (tuple2!2585 lt!69677 (minValue!2719 newMap!16))) lt!69665) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69660 (tuple2!2585 lt!69677 (minValue!2719 newMap!16)))) lt!69665)))))

(declare-fun bs!5685 () Bool)

(assert (= bs!5685 d!42399))

(declare-fun m!161641 () Bool)

(assert (=> bs!5685 m!161641))

(assert (=> bs!5685 m!161641))

(declare-fun m!161643 () Bool)

(assert (=> bs!5685 m!161643))

(assert (=> b!133404 d!42399))

(declare-fun d!42401 () Bool)

(declare-fun e!88341 () Bool)

(assert (=> d!42401 e!88341))

(declare-fun res!65085 () Bool)

(assert (=> d!42401 (=> res!65085 e!88341)))

(declare-fun lt!70828 () Bool)

(assert (=> d!42401 (= res!65085 (not lt!70828))))

(declare-fun lt!70830 () Bool)

(assert (=> d!42401 (= lt!70828 lt!70830)))

(declare-fun lt!70827 () Unit!4132)

(declare-fun e!88342 () Unit!4132)

(assert (=> d!42401 (= lt!70827 e!88342)))

(declare-fun c!25423 () Bool)

(assert (=> d!42401 (= c!25423 lt!70830)))

(assert (=> d!42401 (= lt!70830 (containsKey!174 (toList!851 (+!163 lt!69664 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16)))) lt!69670))))

(assert (=> d!42401 (= (contains!886 (+!163 lt!69664 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16))) lt!69670) lt!70828)))

(declare-fun b!135694 () Bool)

(declare-fun lt!70829 () Unit!4132)

(assert (=> b!135694 (= e!88342 lt!70829)))

(assert (=> b!135694 (= lt!70829 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (+!163 lt!69664 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16)))) lt!69670))))

(assert (=> b!135694 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69664 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16)))) lt!69670))))

(declare-fun b!135695 () Bool)

(declare-fun Unit!4270 () Unit!4132)

(assert (=> b!135695 (= e!88342 Unit!4270)))

(declare-fun b!135696 () Bool)

(assert (=> b!135696 (= e!88341 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69664 (tuple2!2585 lt!69672 (zeroValue!2719 newMap!16)))) lt!69670)))))

(assert (= (and d!42401 c!25423) b!135694))

(assert (= (and d!42401 (not c!25423)) b!135695))

(assert (= (and d!42401 (not res!65085)) b!135696))

(declare-fun m!161645 () Bool)

(assert (=> d!42401 m!161645))

(declare-fun m!161647 () Bool)

(assert (=> b!135694 m!161647))

(declare-fun m!161649 () Bool)

(assert (=> b!135694 m!161649))

(assert (=> b!135694 m!161649))

(declare-fun m!161651 () Bool)

(assert (=> b!135694 m!161651))

(assert (=> b!135696 m!161649))

(assert (=> b!135696 m!161649))

(assert (=> b!135696 m!161651))

(assert (=> b!133404 d!42401))

(declare-fun d!42403 () Bool)

(assert (=> d!42403 (= (apply!116 (+!163 lt!69667 (tuple2!2585 lt!69668 (minValue!2719 newMap!16))) lt!69678) (apply!116 lt!69667 lt!69678))))

(declare-fun lt!70831 () Unit!4132)

(assert (=> d!42403 (= lt!70831 (choose!828 lt!69667 lt!69668 (minValue!2719 newMap!16) lt!69678))))

(declare-fun e!88343 () Bool)

(assert (=> d!42403 e!88343))

(declare-fun res!65086 () Bool)

(assert (=> d!42403 (=> (not res!65086) (not e!88343))))

(assert (=> d!42403 (= res!65086 (contains!886 lt!69667 lt!69678))))

(assert (=> d!42403 (= (addApplyDifferent!92 lt!69667 lt!69668 (minValue!2719 newMap!16) lt!69678) lt!70831)))

(declare-fun b!135697 () Bool)

(assert (=> b!135697 (= e!88343 (not (= lt!69678 lt!69668)))))

(assert (= (and d!42403 res!65086) b!135697))

(assert (=> d!42403 m!157161))

(assert (=> d!42403 m!157183))

(declare-fun m!161653 () Bool)

(assert (=> d!42403 m!161653))

(assert (=> d!42403 m!157181))

(declare-fun m!161655 () Bool)

(assert (=> d!42403 m!161655))

(assert (=> d!42403 m!157161))

(assert (=> b!133404 d!42403))

(declare-fun d!42405 () Bool)

(declare-fun e!88344 () Bool)

(assert (=> d!42405 e!88344))

(declare-fun res!65088 () Bool)

(assert (=> d!42405 (=> (not res!65088) (not e!88344))))

(declare-fun lt!70834 () ListLongMap!1671)

(assert (=> d!42405 (= res!65088 (contains!886 lt!70834 (_1!1303 (tuple2!2585 lt!69668 (minValue!2719 newMap!16)))))))

(declare-fun lt!70832 () List!1710)

(assert (=> d!42405 (= lt!70834 (ListLongMap!1672 lt!70832))))

(declare-fun lt!70835 () Unit!4132)

(declare-fun lt!70833 () Unit!4132)

(assert (=> d!42405 (= lt!70835 lt!70833)))

(assert (=> d!42405 (= (getValueByKey!170 lt!70832 (_1!1303 (tuple2!2585 lt!69668 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69668 (minValue!2719 newMap!16)))))))

(assert (=> d!42405 (= lt!70833 (lemmaContainsTupThenGetReturnValue!88 lt!70832 (_1!1303 (tuple2!2585 lt!69668 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69668 (minValue!2719 newMap!16)))))))

(assert (=> d!42405 (= lt!70832 (insertStrictlySorted!91 (toList!851 lt!69667) (_1!1303 (tuple2!2585 lt!69668 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69668 (minValue!2719 newMap!16)))))))

(assert (=> d!42405 (= (+!163 lt!69667 (tuple2!2585 lt!69668 (minValue!2719 newMap!16))) lt!70834)))

(declare-fun b!135698 () Bool)

(declare-fun res!65087 () Bool)

(assert (=> b!135698 (=> (not res!65087) (not e!88344))))

(assert (=> b!135698 (= res!65087 (= (getValueByKey!170 (toList!851 lt!70834) (_1!1303 (tuple2!2585 lt!69668 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69668 (minValue!2719 newMap!16))))))))

(declare-fun b!135699 () Bool)

(assert (=> b!135699 (= e!88344 (contains!889 (toList!851 lt!70834) (tuple2!2585 lt!69668 (minValue!2719 newMap!16))))))

(assert (= (and d!42405 res!65088) b!135698))

(assert (= (and b!135698 res!65087) b!135699))

(declare-fun m!161657 () Bool)

(assert (=> d!42405 m!161657))

(declare-fun m!161659 () Bool)

(assert (=> d!42405 m!161659))

(declare-fun m!161661 () Bool)

(assert (=> d!42405 m!161661))

(declare-fun m!161663 () Bool)

(assert (=> d!42405 m!161663))

(declare-fun m!161665 () Bool)

(assert (=> b!135698 m!161665))

(declare-fun m!161667 () Bool)

(assert (=> b!135699 m!161667))

(assert (=> b!133404 d!42405))

(declare-fun d!42407 () Bool)

(assert (=> d!42407 (= (apply!116 (+!163 lt!69658 (tuple2!2585 lt!69659 (zeroValue!2719 newMap!16))) lt!69662) (apply!116 lt!69658 lt!69662))))

(declare-fun lt!70836 () Unit!4132)

(assert (=> d!42407 (= lt!70836 (choose!828 lt!69658 lt!69659 (zeroValue!2719 newMap!16) lt!69662))))

(declare-fun e!88345 () Bool)

(assert (=> d!42407 e!88345))

(declare-fun res!65089 () Bool)

(assert (=> d!42407 (=> (not res!65089) (not e!88345))))

(assert (=> d!42407 (= res!65089 (contains!886 lt!69658 lt!69662))))

(assert (=> d!42407 (= (addApplyDifferent!92 lt!69658 lt!69659 (zeroValue!2719 newMap!16) lt!69662) lt!70836)))

(declare-fun b!135700 () Bool)

(assert (=> b!135700 (= e!88345 (not (= lt!69662 lt!69659)))))

(assert (= (and d!42407 res!65089) b!135700))

(assert (=> d!42407 m!157155))

(assert (=> d!42407 m!157163))

(declare-fun m!161669 () Bool)

(assert (=> d!42407 m!161669))

(assert (=> d!42407 m!157165))

(declare-fun m!161671 () Bool)

(assert (=> d!42407 m!161671))

(assert (=> d!42407 m!157155))

(assert (=> b!133404 d!42407))

(declare-fun d!42409 () Bool)

(declare-fun e!88346 () Bool)

(assert (=> d!42409 e!88346))

(declare-fun res!65091 () Bool)

(assert (=> d!42409 (=> (not res!65091) (not e!88346))))

(declare-fun lt!70839 () ListLongMap!1671)

(assert (=> d!42409 (= res!65091 (contains!886 lt!70839 (_1!1303 (tuple2!2585 lt!69677 (minValue!2719 newMap!16)))))))

(declare-fun lt!70837 () List!1710)

(assert (=> d!42409 (= lt!70839 (ListLongMap!1672 lt!70837))))

(declare-fun lt!70840 () Unit!4132)

(declare-fun lt!70838 () Unit!4132)

(assert (=> d!42409 (= lt!70840 lt!70838)))

(assert (=> d!42409 (= (getValueByKey!170 lt!70837 (_1!1303 (tuple2!2585 lt!69677 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69677 (minValue!2719 newMap!16)))))))

(assert (=> d!42409 (= lt!70838 (lemmaContainsTupThenGetReturnValue!88 lt!70837 (_1!1303 (tuple2!2585 lt!69677 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69677 (minValue!2719 newMap!16)))))))

(assert (=> d!42409 (= lt!70837 (insertStrictlySorted!91 (toList!851 lt!69660) (_1!1303 (tuple2!2585 lt!69677 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69677 (minValue!2719 newMap!16)))))))

(assert (=> d!42409 (= (+!163 lt!69660 (tuple2!2585 lt!69677 (minValue!2719 newMap!16))) lt!70839)))

(declare-fun b!135701 () Bool)

(declare-fun res!65090 () Bool)

(assert (=> b!135701 (=> (not res!65090) (not e!88346))))

(assert (=> b!135701 (= res!65090 (= (getValueByKey!170 (toList!851 lt!70839) (_1!1303 (tuple2!2585 lt!69677 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69677 (minValue!2719 newMap!16))))))))

(declare-fun b!135702 () Bool)

(assert (=> b!135702 (= e!88346 (contains!889 (toList!851 lt!70839) (tuple2!2585 lt!69677 (minValue!2719 newMap!16))))))

(assert (= (and d!42409 res!65091) b!135701))

(assert (= (and b!135701 res!65090) b!135702))

(declare-fun m!161673 () Bool)

(assert (=> d!42409 m!161673))

(declare-fun m!161675 () Bool)

(assert (=> d!42409 m!161675))

(declare-fun m!161677 () Bool)

(assert (=> d!42409 m!161677))

(declare-fun m!161679 () Bool)

(assert (=> d!42409 m!161679))

(declare-fun m!161681 () Bool)

(assert (=> b!135701 m!161681))

(declare-fun m!161683 () Bool)

(assert (=> b!135702 m!161683))

(assert (=> b!133404 d!42409))

(declare-fun d!42411 () Bool)

(assert (=> d!42411 (= (apply!116 (+!163 lt!69667 (tuple2!2585 lt!69668 (minValue!2719 newMap!16))) lt!69678) (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69667 (tuple2!2585 lt!69668 (minValue!2719 newMap!16)))) lt!69678)))))

(declare-fun bs!5686 () Bool)

(assert (= bs!5686 d!42411))

(declare-fun m!161685 () Bool)

(assert (=> bs!5686 m!161685))

(assert (=> bs!5686 m!161685))

(declare-fun m!161687 () Bool)

(assert (=> bs!5686 m!161687))

(assert (=> b!133404 d!42411))

(declare-fun d!42413 () Bool)

(assert (=> d!42413 (= (apply!116 lt!69667 lt!69678) (get!1482 (getValueByKey!170 (toList!851 lt!69667) lt!69678)))))

(declare-fun bs!5687 () Bool)

(assert (= bs!5687 d!42413))

(declare-fun m!161689 () Bool)

(assert (=> bs!5687 m!161689))

(assert (=> bs!5687 m!161689))

(declare-fun m!161691 () Bool)

(assert (=> bs!5687 m!161691))

(assert (=> b!133404 d!42413))

(declare-fun d!42415 () Bool)

(assert (=> d!42415 (= (apply!116 lt!69660 lt!69665) (get!1482 (getValueByKey!170 (toList!851 lt!69660) lt!69665)))))

(declare-fun bs!5688 () Bool)

(assert (= bs!5688 d!42415))

(declare-fun m!161693 () Bool)

(assert (=> bs!5688 m!161693))

(assert (=> bs!5688 m!161693))

(declare-fun m!161695 () Bool)

(assert (=> bs!5688 m!161695))

(assert (=> b!133404 d!42415))

(declare-fun d!42417 () Bool)

(declare-fun e!88347 () Bool)

(assert (=> d!42417 e!88347))

(declare-fun res!65093 () Bool)

(assert (=> d!42417 (=> (not res!65093) (not e!88347))))

(declare-fun lt!70843 () ListLongMap!1671)

(assert (=> d!42417 (= res!65093 (contains!886 lt!70843 (_1!1303 (tuple2!2585 lt!69659 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70841 () List!1710)

(assert (=> d!42417 (= lt!70843 (ListLongMap!1672 lt!70841))))

(declare-fun lt!70844 () Unit!4132)

(declare-fun lt!70842 () Unit!4132)

(assert (=> d!42417 (= lt!70844 lt!70842)))

(assert (=> d!42417 (= (getValueByKey!170 lt!70841 (_1!1303 (tuple2!2585 lt!69659 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69659 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42417 (= lt!70842 (lemmaContainsTupThenGetReturnValue!88 lt!70841 (_1!1303 (tuple2!2585 lt!69659 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69659 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42417 (= lt!70841 (insertStrictlySorted!91 (toList!851 lt!69658) (_1!1303 (tuple2!2585 lt!69659 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69659 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42417 (= (+!163 lt!69658 (tuple2!2585 lt!69659 (zeroValue!2719 newMap!16))) lt!70843)))

(declare-fun b!135703 () Bool)

(declare-fun res!65092 () Bool)

(assert (=> b!135703 (=> (not res!65092) (not e!88347))))

(assert (=> b!135703 (= res!65092 (= (getValueByKey!170 (toList!851 lt!70843) (_1!1303 (tuple2!2585 lt!69659 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69659 (zeroValue!2719 newMap!16))))))))

(declare-fun b!135704 () Bool)

(assert (=> b!135704 (= e!88347 (contains!889 (toList!851 lt!70843) (tuple2!2585 lt!69659 (zeroValue!2719 newMap!16))))))

(assert (= (and d!42417 res!65093) b!135703))

(assert (= (and b!135703 res!65092) b!135704))

(declare-fun m!161697 () Bool)

(assert (=> d!42417 m!161697))

(declare-fun m!161699 () Bool)

(assert (=> d!42417 m!161699))

(declare-fun m!161701 () Bool)

(assert (=> d!42417 m!161701))

(declare-fun m!161703 () Bool)

(assert (=> d!42417 m!161703))

(declare-fun m!161705 () Bool)

(assert (=> b!135703 m!161705))

(declare-fun m!161707 () Bool)

(assert (=> b!135704 m!161707))

(assert (=> b!133404 d!42417))

(declare-fun d!42419 () Bool)

(assert (=> d!42419 (= (apply!116 (+!163 lt!69660 (tuple2!2585 lt!69677 (minValue!2719 newMap!16))) lt!69665) (apply!116 lt!69660 lt!69665))))

(declare-fun lt!70845 () Unit!4132)

(assert (=> d!42419 (= lt!70845 (choose!828 lt!69660 lt!69677 (minValue!2719 newMap!16) lt!69665))))

(declare-fun e!88348 () Bool)

(assert (=> d!42419 e!88348))

(declare-fun res!65094 () Bool)

(assert (=> d!42419 (=> (not res!65094) (not e!88348))))

(assert (=> d!42419 (= res!65094 (contains!886 lt!69660 lt!69665))))

(assert (=> d!42419 (= (addApplyDifferent!92 lt!69660 lt!69677 (minValue!2719 newMap!16) lt!69665) lt!70845)))

(declare-fun b!135705 () Bool)

(assert (=> b!135705 (= e!88348 (not (= lt!69665 lt!69677)))))

(assert (= (and d!42419 res!65094) b!135705))

(assert (=> d!42419 m!157167))

(assert (=> d!42419 m!157169))

(declare-fun m!161709 () Bool)

(assert (=> d!42419 m!161709))

(assert (=> d!42419 m!157177))

(declare-fun m!161711 () Bool)

(assert (=> d!42419 m!161711))

(assert (=> d!42419 m!157167))

(assert (=> b!133404 d!42419))

(declare-fun d!42421 () Bool)

(assert (=> d!42421 (= (apply!116 lt!69641 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69641) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5689 () Bool)

(assert (= bs!5689 d!42421))

(assert (=> bs!5689 m!158573))

(assert (=> bs!5689 m!158573))

(declare-fun m!161713 () Bool)

(assert (=> bs!5689 m!161713))

(assert (=> b!133372 d!42421))

(declare-fun d!42423 () Bool)

(declare-fun lt!70846 () Bool)

(assert (=> d!42423 (= lt!70846 (select (content!133 (toList!851 lt!69998)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun e!88350 () Bool)

(assert (=> d!42423 (= lt!70846 e!88350)))

(declare-fun res!65095 () Bool)

(assert (=> d!42423 (=> (not res!65095) (not e!88350))))

(assert (=> d!42423 (= res!65095 ((_ is Cons!1706) (toList!851 lt!69998)))))

(assert (=> d!42423 (= (contains!889 (toList!851 lt!69998) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70846)))

(declare-fun b!135706 () Bool)

(declare-fun e!88349 () Bool)

(assert (=> b!135706 (= e!88350 e!88349)))

(declare-fun res!65096 () Bool)

(assert (=> b!135706 (=> res!65096 e!88349)))

(assert (=> b!135706 (= res!65096 (= (h!2311 (toList!851 lt!69998)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun b!135707 () Bool)

(assert (=> b!135707 (= e!88349 (contains!889 (t!6152 (toList!851 lt!69998)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!42423 res!65095) b!135706))

(assert (= (and b!135706 (not res!65096)) b!135707))

(declare-fun m!161715 () Bool)

(assert (=> d!42423 m!161715))

(declare-fun m!161717 () Bool)

(assert (=> d!42423 m!161717))

(declare-fun m!161719 () Bool)

(assert (=> b!135707 m!161719))

(assert (=> b!133905 d!42423))

(assert (=> d!40971 d!40269))

(declare-fun d!42425 () Bool)

(declare-fun e!88351 () Bool)

(assert (=> d!42425 e!88351))

(declare-fun res!65097 () Bool)

(assert (=> d!42425 (=> res!65097 e!88351)))

(declare-fun lt!70848 () Bool)

(assert (=> d!42425 (= res!65097 (not lt!70848))))

(declare-fun lt!70850 () Bool)

(assert (=> d!42425 (= lt!70848 lt!70850)))

(declare-fun lt!70847 () Unit!4132)

(declare-fun e!88352 () Unit!4132)

(assert (=> d!42425 (= lt!70847 e!88352)))

(declare-fun c!25424 () Bool)

(assert (=> d!42425 (= c!25424 lt!70850)))

(assert (=> d!42425 (= lt!70850 (containsKey!174 (toList!851 lt!69578) (_1!1303 (tuple2!2585 lt!69302 lt!69303))))))

(assert (=> d!42425 (= (contains!886 lt!69578 (_1!1303 (tuple2!2585 lt!69302 lt!69303))) lt!70848)))

(declare-fun b!135708 () Bool)

(declare-fun lt!70849 () Unit!4132)

(assert (=> b!135708 (= e!88352 lt!70849)))

(assert (=> b!135708 (= lt!70849 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69578) (_1!1303 (tuple2!2585 lt!69302 lt!69303))))))

(assert (=> b!135708 (isDefined!124 (getValueByKey!170 (toList!851 lt!69578) (_1!1303 (tuple2!2585 lt!69302 lt!69303))))))

(declare-fun b!135709 () Bool)

(declare-fun Unit!4271 () Unit!4132)

(assert (=> b!135709 (= e!88352 Unit!4271)))

(declare-fun b!135710 () Bool)

(assert (=> b!135710 (= e!88351 (isDefined!124 (getValueByKey!170 (toList!851 lt!69578) (_1!1303 (tuple2!2585 lt!69302 lt!69303)))))))

(assert (= (and d!42425 c!25424) b!135708))

(assert (= (and d!42425 (not c!25424)) b!135709))

(assert (= (and d!42425 (not res!65097)) b!135710))

(declare-fun m!161721 () Bool)

(assert (=> d!42425 m!161721))

(declare-fun m!161723 () Bool)

(assert (=> b!135708 m!161723))

(assert (=> b!135708 m!156897))

(assert (=> b!135708 m!156897))

(declare-fun m!161725 () Bool)

(assert (=> b!135708 m!161725))

(assert (=> b!135710 m!156897))

(assert (=> b!135710 m!156897))

(assert (=> b!135710 m!161725))

(assert (=> d!40489 d!42425))

(declare-fun d!42427 () Bool)

(declare-fun c!25425 () Bool)

(assert (=> d!42427 (= c!25425 (and ((_ is Cons!1706) lt!69576) (= (_1!1303 (h!2311 lt!69576)) (_1!1303 (tuple2!2585 lt!69302 lt!69303)))))))

(declare-fun e!88353 () Option!176)

(assert (=> d!42427 (= (getValueByKey!170 lt!69576 (_1!1303 (tuple2!2585 lt!69302 lt!69303))) e!88353)))

(declare-fun e!88354 () Option!176)

(declare-fun b!135713 () Bool)

(assert (=> b!135713 (= e!88354 (getValueByKey!170 (t!6152 lt!69576) (_1!1303 (tuple2!2585 lt!69302 lt!69303))))))

(declare-fun b!135712 () Bool)

(assert (=> b!135712 (= e!88353 e!88354)))

(declare-fun c!25426 () Bool)

(assert (=> b!135712 (= c!25426 (and ((_ is Cons!1706) lt!69576) (not (= (_1!1303 (h!2311 lt!69576)) (_1!1303 (tuple2!2585 lt!69302 lt!69303))))))))

(declare-fun b!135711 () Bool)

(assert (=> b!135711 (= e!88353 (Some!175 (_2!1303 (h!2311 lt!69576))))))

(declare-fun b!135714 () Bool)

(assert (=> b!135714 (= e!88354 None!174)))

(assert (= (and d!42427 c!25425) b!135711))

(assert (= (and d!42427 (not c!25425)) b!135712))

(assert (= (and b!135712 c!25426) b!135713))

(assert (= (and b!135712 (not c!25426)) b!135714))

(declare-fun m!161727 () Bool)

(assert (=> b!135713 m!161727))

(assert (=> d!40489 d!42427))

(declare-fun d!42429 () Bool)

(assert (=> d!42429 (= (getValueByKey!170 lt!69576 (_1!1303 (tuple2!2585 lt!69302 lt!69303))) (Some!175 (_2!1303 (tuple2!2585 lt!69302 lt!69303))))))

(declare-fun lt!70851 () Unit!4132)

(assert (=> d!42429 (= lt!70851 (choose!834 lt!69576 (_1!1303 (tuple2!2585 lt!69302 lt!69303)) (_2!1303 (tuple2!2585 lt!69302 lt!69303))))))

(declare-fun e!88355 () Bool)

(assert (=> d!42429 e!88355))

(declare-fun res!65098 () Bool)

(assert (=> d!42429 (=> (not res!65098) (not e!88355))))

(assert (=> d!42429 (= res!65098 (isStrictlySorted!317 lt!69576))))

(assert (=> d!42429 (= (lemmaContainsTupThenGetReturnValue!88 lt!69576 (_1!1303 (tuple2!2585 lt!69302 lt!69303)) (_2!1303 (tuple2!2585 lt!69302 lt!69303))) lt!70851)))

(declare-fun b!135715 () Bool)

(declare-fun res!65099 () Bool)

(assert (=> b!135715 (=> (not res!65099) (not e!88355))))

(assert (=> b!135715 (= res!65099 (containsKey!174 lt!69576 (_1!1303 (tuple2!2585 lt!69302 lt!69303))))))

(declare-fun b!135716 () Bool)

(assert (=> b!135716 (= e!88355 (contains!889 lt!69576 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69302 lt!69303)) (_2!1303 (tuple2!2585 lt!69302 lt!69303)))))))

(assert (= (and d!42429 res!65098) b!135715))

(assert (= (and b!135715 res!65099) b!135716))

(assert (=> d!42429 m!156891))

(declare-fun m!161729 () Bool)

(assert (=> d!42429 m!161729))

(declare-fun m!161731 () Bool)

(assert (=> d!42429 m!161731))

(declare-fun m!161733 () Bool)

(assert (=> b!135715 m!161733))

(declare-fun m!161735 () Bool)

(assert (=> b!135716 m!161735))

(assert (=> d!40489 d!42429))

(declare-fun e!88360 () List!1710)

(declare-fun b!135717 () Bool)

(assert (=> b!135717 (= e!88360 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69299)) (_1!1303 (tuple2!2585 lt!69302 lt!69303)) (_2!1303 (tuple2!2585 lt!69302 lt!69303))))))

(declare-fun b!135718 () Bool)

(declare-fun e!88359 () List!1710)

(declare-fun call!14891 () List!1710)

(assert (=> b!135718 (= e!88359 call!14891)))

(declare-fun b!135719 () Bool)

(declare-fun res!65101 () Bool)

(declare-fun e!88357 () Bool)

(assert (=> b!135719 (=> (not res!65101) (not e!88357))))

(declare-fun lt!70852 () List!1710)

(assert (=> b!135719 (= res!65101 (containsKey!174 lt!70852 (_1!1303 (tuple2!2585 lt!69302 lt!69303))))))

(declare-fun bm!14886 () Bool)

(declare-fun c!25428 () Bool)

(assert (=> bm!14886 (= call!14891 ($colon$colon!91 e!88360 (ite c!25428 (h!2311 (toList!851 lt!69299)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69302 lt!69303)) (_2!1303 (tuple2!2585 lt!69302 lt!69303))))))))

(declare-fun c!25429 () Bool)

(assert (=> bm!14886 (= c!25429 c!25428)))

(declare-fun b!135720 () Bool)

(declare-fun c!25430 () Bool)

(declare-fun c!25427 () Bool)

(assert (=> b!135720 (= e!88360 (ite c!25427 (t!6152 (toList!851 lt!69299)) (ite c!25430 (Cons!1706 (h!2311 (toList!851 lt!69299)) (t!6152 (toList!851 lt!69299))) Nil!1707)))))

(declare-fun d!42431 () Bool)

(assert (=> d!42431 e!88357))

(declare-fun res!65100 () Bool)

(assert (=> d!42431 (=> (not res!65100) (not e!88357))))

(assert (=> d!42431 (= res!65100 (isStrictlySorted!317 lt!70852))))

(assert (=> d!42431 (= lt!70852 e!88359)))

(assert (=> d!42431 (= c!25428 (and ((_ is Cons!1706) (toList!851 lt!69299)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69299))) (_1!1303 (tuple2!2585 lt!69302 lt!69303)))))))

(assert (=> d!42431 (isStrictlySorted!317 (toList!851 lt!69299))))

(assert (=> d!42431 (= (insertStrictlySorted!91 (toList!851 lt!69299) (_1!1303 (tuple2!2585 lt!69302 lt!69303)) (_2!1303 (tuple2!2585 lt!69302 lt!69303))) lt!70852)))

(declare-fun b!135721 () Bool)

(declare-fun e!88356 () List!1710)

(assert (=> b!135721 (= e!88359 e!88356)))

(assert (=> b!135721 (= c!25427 (and ((_ is Cons!1706) (toList!851 lt!69299)) (= (_1!1303 (h!2311 (toList!851 lt!69299))) (_1!1303 (tuple2!2585 lt!69302 lt!69303)))))))

(declare-fun b!135722 () Bool)

(declare-fun e!88358 () List!1710)

(declare-fun call!14889 () List!1710)

(assert (=> b!135722 (= e!88358 call!14889)))

(declare-fun b!135723 () Bool)

(declare-fun call!14890 () List!1710)

(assert (=> b!135723 (= e!88356 call!14890)))

(declare-fun b!135724 () Bool)

(assert (=> b!135724 (= e!88357 (contains!889 lt!70852 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69302 lt!69303)) (_2!1303 (tuple2!2585 lt!69302 lt!69303)))))))

(declare-fun bm!14887 () Bool)

(assert (=> bm!14887 (= call!14890 call!14891)))

(declare-fun bm!14888 () Bool)

(assert (=> bm!14888 (= call!14889 call!14890)))

(declare-fun b!135725 () Bool)

(assert (=> b!135725 (= c!25430 (and ((_ is Cons!1706) (toList!851 lt!69299)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69299))) (_1!1303 (tuple2!2585 lt!69302 lt!69303)))))))

(assert (=> b!135725 (= e!88356 e!88358)))

(declare-fun b!135726 () Bool)

(assert (=> b!135726 (= e!88358 call!14889)))

(assert (= (and d!42431 c!25428) b!135718))

(assert (= (and d!42431 (not c!25428)) b!135721))

(assert (= (and b!135721 c!25427) b!135723))

(assert (= (and b!135721 (not c!25427)) b!135725))

(assert (= (and b!135725 c!25430) b!135726))

(assert (= (and b!135725 (not c!25430)) b!135722))

(assert (= (or b!135726 b!135722) bm!14888))

(assert (= (or b!135723 bm!14888) bm!14887))

(assert (= (or b!135718 bm!14887) bm!14886))

(assert (= (and bm!14886 c!25429) b!135717))

(assert (= (and bm!14886 (not c!25429)) b!135720))

(assert (= (and d!42431 res!65100) b!135719))

(assert (= (and b!135719 res!65101) b!135724))

(declare-fun m!161737 () Bool)

(assert (=> b!135724 m!161737))

(declare-fun m!161739 () Bool)

(assert (=> b!135719 m!161739))

(declare-fun m!161741 () Bool)

(assert (=> b!135717 m!161741))

(declare-fun m!161743 () Bool)

(assert (=> d!42431 m!161743))

(declare-fun m!161745 () Bool)

(assert (=> d!42431 m!161745))

(declare-fun m!161747 () Bool)

(assert (=> bm!14886 m!161747))

(assert (=> d!40489 d!42431))

(declare-fun d!42433 () Bool)

(assert (=> d!42433 (= (get!1482 (getValueByKey!170 (toList!851 lt!69484) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3198 (getValueByKey!170 (toList!851 lt!69484) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40779 d!42433))

(assert (=> d!40779 d!41029))

(declare-fun d!42435 () Bool)

(assert (=> d!42435 (isDefined!124 (getValueByKey!170 (toList!851 lt!69362) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70853 () Unit!4132)

(assert (=> d!42435 (= lt!70853 (choose!826 (toList!851 lt!69362) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88361 () Bool)

(assert (=> d!42435 e!88361))

(declare-fun res!65102 () Bool)

(assert (=> d!42435 (=> (not res!65102) (not e!88361))))

(assert (=> d!42435 (= res!65102 (isStrictlySorted!317 (toList!851 lt!69362)))))

(assert (=> d!42435 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69362) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70853)))

(declare-fun b!135727 () Bool)

(assert (=> b!135727 (= e!88361 (containsKey!174 (toList!851 lt!69362) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42435 res!65102) b!135727))

(assert (=> d!42435 m!156933))

(assert (=> d!42435 m!156933))

(assert (=> d!42435 m!158105))

(declare-fun m!161749 () Bool)

(assert (=> d!42435 m!161749))

(assert (=> d!42435 m!160617))

(assert (=> b!135727 m!158101))

(assert (=> b!133826 d!42435))

(declare-fun d!42437 () Bool)

(assert (=> d!42437 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69362) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69362) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5690 () Bool)

(assert (= bs!5690 d!42437))

(assert (=> bs!5690 m!156933))

(declare-fun m!161751 () Bool)

(assert (=> bs!5690 m!161751))

(assert (=> b!133826 d!42437))

(assert (=> b!133826 d!41067))

(assert (=> b!133531 d!40803))

(assert (=> bm!14744 d!41827))

(declare-fun d!42439 () Bool)

(assert (=> d!42439 (= (apply!116 lt!69823 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (getValueByKey!170 (toList!851 lt!69823) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5691 () Bool)

(assert (= bs!5691 d!42439))

(assert (=> bs!5691 m!156125))

(assert (=> bs!5691 m!158955))

(assert (=> bs!5691 m!158955))

(declare-fun m!161753 () Bool)

(assert (=> bs!5691 m!161753))

(assert (=> b!133603 d!42439))

(assert (=> b!133603 d!40465))

(declare-fun d!42441 () Bool)

(declare-fun res!65103 () Bool)

(declare-fun e!88362 () Bool)

(assert (=> d!42441 (=> res!65103 e!88362)))

(assert (=> d!42441 (= res!65103 (and ((_ is Cons!1706) (toList!851 lt!69170)) (= (_1!1303 (h!2311 (toList!851 lt!69170))) lt!69174)))))

(assert (=> d!42441 (= (containsKey!174 (toList!851 lt!69170) lt!69174) e!88362)))

(declare-fun b!135728 () Bool)

(declare-fun e!88363 () Bool)

(assert (=> b!135728 (= e!88362 e!88363)))

(declare-fun res!65104 () Bool)

(assert (=> b!135728 (=> (not res!65104) (not e!88363))))

(assert (=> b!135728 (= res!65104 (and (or (not ((_ is Cons!1706) (toList!851 lt!69170))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69170))) lt!69174)) ((_ is Cons!1706) (toList!851 lt!69170)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69170))) lt!69174)))))

(declare-fun b!135729 () Bool)

(assert (=> b!135729 (= e!88363 (containsKey!174 (t!6152 (toList!851 lt!69170)) lt!69174))))

(assert (= (and d!42441 (not res!65103)) b!135728))

(assert (= (and b!135728 res!65104) b!135729))

(declare-fun m!161755 () Bool)

(assert (=> b!135729 m!161755))

(assert (=> d!40853 d!42441))

(declare-fun b!135730 () Bool)

(declare-fun e!88376 () Bool)

(declare-fun e!88369 () Bool)

(assert (=> b!135730 (= e!88376 e!88369)))

(declare-fun res!65109 () Bool)

(declare-fun call!14896 () Bool)

(assert (=> b!135730 (= res!65109 call!14896)))

(assert (=> b!135730 (=> (not res!65109) (not e!88369))))

(declare-fun bm!14889 () Bool)

(declare-fun call!14897 () ListLongMap!1671)

(declare-fun c!25434 () Bool)

(declare-fun call!14895 () ListLongMap!1671)

(declare-fun call!14898 () ListLongMap!1671)

(declare-fun call!14892 () ListLongMap!1671)

(declare-fun c!25436 () Bool)

(assert (=> bm!14889 (= call!14892 (+!163 (ite c!25436 call!14895 (ite c!25434 call!14898 call!14897)) (ite (or c!25436 c!25434) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1304 lt!69440))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69440))))))))

(declare-fun bm!14890 () Bool)

(assert (=> bm!14890 (= call!14895 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (_2!1304 lt!69440)) (_values!2847 (_2!1304 lt!69440)) (mask!7163 (_2!1304 lt!69440)) (extraKeys!2629 (_2!1304 lt!69440)) (zeroValue!2719 (_2!1304 lt!69440)) (minValue!2719 (_2!1304 lt!69440)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1304 lt!69440))))))

(declare-fun b!135731 () Bool)

(declare-fun e!88374 () Bool)

(assert (=> b!135731 (= e!88374 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000)))))

(declare-fun b!135732 () Bool)

(declare-fun e!88371 () Bool)

(assert (=> b!135732 (= e!88371 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000)))))

(declare-fun bm!14891 () Bool)

(assert (=> bm!14891 (= call!14897 call!14898)))

(declare-fun b!135733 () Bool)

(declare-fun e!88373 () ListLongMap!1671)

(declare-fun e!88375 () ListLongMap!1671)

(assert (=> b!135733 (= e!88373 e!88375)))

(assert (=> b!135733 (= c!25434 (and (not (= (bvand (extraKeys!2629 (_2!1304 lt!69440)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 (_2!1304 lt!69440)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!135734 () Bool)

(declare-fun e!88366 () Bool)

(declare-fun e!88372 () Bool)

(assert (=> b!135734 (= e!88366 e!88372)))

(declare-fun res!65110 () Bool)

(assert (=> b!135734 (=> (not res!65110) (not e!88372))))

(declare-fun lt!70870 () ListLongMap!1671)

(assert (=> b!135734 (= res!65110 (contains!886 lt!70870 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000)))))

(assert (=> b!135734 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69440)))))))

(declare-fun bm!14892 () Bool)

(assert (=> bm!14892 (= call!14896 (contains!886 lt!70870 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135735 () Bool)

(assert (=> b!135735 (= e!88372 (= (apply!116 lt!70870 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000)) (get!1478 (select (arr!2249 (_values!2847 (_2!1304 lt!69440))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 (_2!1304 lt!69440)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!135735 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2519 (_values!2847 (_2!1304 lt!69440)))))))

(assert (=> b!135735 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69440)))))))

(declare-fun b!135737 () Bool)

(declare-fun e!88364 () Bool)

(assert (=> b!135737 (= e!88364 (= (apply!116 lt!70870 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 (_2!1304 lt!69440))))))

(declare-fun b!135738 () Bool)

(declare-fun e!88368 () Unit!4132)

(declare-fun lt!70872 () Unit!4132)

(assert (=> b!135738 (= e!88368 lt!70872)))

(declare-fun lt!70860 () ListLongMap!1671)

(assert (=> b!135738 (= lt!70860 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (_2!1304 lt!69440)) (_values!2847 (_2!1304 lt!69440)) (mask!7163 (_2!1304 lt!69440)) (extraKeys!2629 (_2!1304 lt!69440)) (zeroValue!2719 (_2!1304 lt!69440)) (minValue!2719 (_2!1304 lt!69440)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1304 lt!69440))))))

(declare-fun lt!70868 () (_ BitVec 64))

(assert (=> b!135738 (= lt!70868 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70866 () (_ BitVec 64))

(assert (=> b!135738 (= lt!70866 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000))))

(declare-fun lt!70875 () Unit!4132)

(assert (=> b!135738 (= lt!70875 (addStillContains!92 lt!70860 lt!70868 (zeroValue!2719 (_2!1304 lt!69440)) lt!70866))))

(assert (=> b!135738 (contains!886 (+!163 lt!70860 (tuple2!2585 lt!70868 (zeroValue!2719 (_2!1304 lt!69440)))) lt!70866)))

(declare-fun lt!70867 () Unit!4132)

(assert (=> b!135738 (= lt!70867 lt!70875)))

(declare-fun lt!70856 () ListLongMap!1671)

(assert (=> b!135738 (= lt!70856 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (_2!1304 lt!69440)) (_values!2847 (_2!1304 lt!69440)) (mask!7163 (_2!1304 lt!69440)) (extraKeys!2629 (_2!1304 lt!69440)) (zeroValue!2719 (_2!1304 lt!69440)) (minValue!2719 (_2!1304 lt!69440)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1304 lt!69440))))))

(declare-fun lt!70873 () (_ BitVec 64))

(assert (=> b!135738 (= lt!70873 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70861 () (_ BitVec 64))

(assert (=> b!135738 (= lt!70861 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000))))

(declare-fun lt!70862 () Unit!4132)

(assert (=> b!135738 (= lt!70862 (addApplyDifferent!92 lt!70856 lt!70873 (minValue!2719 (_2!1304 lt!69440)) lt!70861))))

(assert (=> b!135738 (= (apply!116 (+!163 lt!70856 (tuple2!2585 lt!70873 (minValue!2719 (_2!1304 lt!69440)))) lt!70861) (apply!116 lt!70856 lt!70861))))

(declare-fun lt!70871 () Unit!4132)

(assert (=> b!135738 (= lt!70871 lt!70862)))

(declare-fun lt!70854 () ListLongMap!1671)

(assert (=> b!135738 (= lt!70854 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (_2!1304 lt!69440)) (_values!2847 (_2!1304 lt!69440)) (mask!7163 (_2!1304 lt!69440)) (extraKeys!2629 (_2!1304 lt!69440)) (zeroValue!2719 (_2!1304 lt!69440)) (minValue!2719 (_2!1304 lt!69440)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1304 lt!69440))))))

(declare-fun lt!70855 () (_ BitVec 64))

(assert (=> b!135738 (= lt!70855 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70858 () (_ BitVec 64))

(assert (=> b!135738 (= lt!70858 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000))))

(declare-fun lt!70857 () Unit!4132)

(assert (=> b!135738 (= lt!70857 (addApplyDifferent!92 lt!70854 lt!70855 (zeroValue!2719 (_2!1304 lt!69440)) lt!70858))))

(assert (=> b!135738 (= (apply!116 (+!163 lt!70854 (tuple2!2585 lt!70855 (zeroValue!2719 (_2!1304 lt!69440)))) lt!70858) (apply!116 lt!70854 lt!70858))))

(declare-fun lt!70865 () Unit!4132)

(assert (=> b!135738 (= lt!70865 lt!70857)))

(declare-fun lt!70863 () ListLongMap!1671)

(assert (=> b!135738 (= lt!70863 (getCurrentListMapNoExtraKeys!128 (_keys!4612 (_2!1304 lt!69440)) (_values!2847 (_2!1304 lt!69440)) (mask!7163 (_2!1304 lt!69440)) (extraKeys!2629 (_2!1304 lt!69440)) (zeroValue!2719 (_2!1304 lt!69440)) (minValue!2719 (_2!1304 lt!69440)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1304 lt!69440))))))

(declare-fun lt!70864 () (_ BitVec 64))

(assert (=> b!135738 (= lt!70864 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70874 () (_ BitVec 64))

(assert (=> b!135738 (= lt!70874 (select (arr!2248 (_keys!4612 (_2!1304 lt!69440))) #b00000000000000000000000000000000))))

(assert (=> b!135738 (= lt!70872 (addApplyDifferent!92 lt!70863 lt!70864 (minValue!2719 (_2!1304 lt!69440)) lt!70874))))

(assert (=> b!135738 (= (apply!116 (+!163 lt!70863 (tuple2!2585 lt!70864 (minValue!2719 (_2!1304 lt!69440)))) lt!70874) (apply!116 lt!70863 lt!70874))))

(declare-fun b!135739 () Bool)

(declare-fun e!88365 () ListLongMap!1671)

(assert (=> b!135739 (= e!88365 call!14897)))

(declare-fun b!135740 () Bool)

(declare-fun call!14893 () ListLongMap!1671)

(assert (=> b!135740 (= e!88375 call!14893)))

(declare-fun b!135741 () Bool)

(declare-fun res!65106 () Bool)

(declare-fun e!88370 () Bool)

(assert (=> b!135741 (=> (not res!65106) (not e!88370))))

(declare-fun e!88367 () Bool)

(assert (=> b!135741 (= res!65106 e!88367)))

(declare-fun c!25433 () Bool)

(assert (=> b!135741 (= c!25433 (not (= (bvand (extraKeys!2629 (_2!1304 lt!69440)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!14893 () Bool)

(assert (=> bm!14893 (= call!14898 call!14895)))

(declare-fun b!135742 () Bool)

(assert (=> b!135742 (= e!88376 (not call!14896))))

(declare-fun b!135743 () Bool)

(declare-fun c!25435 () Bool)

(assert (=> b!135743 (= c!25435 (and (not (= (bvand (extraKeys!2629 (_2!1304 lt!69440)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 (_2!1304 lt!69440)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!135743 (= e!88375 e!88365)))

(declare-fun b!135744 () Bool)

(declare-fun Unit!4272 () Unit!4132)

(assert (=> b!135744 (= e!88368 Unit!4272)))

(declare-fun b!135745 () Bool)

(assert (=> b!135745 (= e!88373 (+!163 call!14892 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1304 lt!69440)))))))

(declare-fun bm!14894 () Bool)

(assert (=> bm!14894 (= call!14893 call!14892)))

(declare-fun b!135746 () Bool)

(assert (=> b!135746 (= e!88365 call!14893)))

(declare-fun b!135747 () Bool)

(declare-fun call!14894 () Bool)

(assert (=> b!135747 (= e!88367 (not call!14894))))

(declare-fun b!135748 () Bool)

(assert (=> b!135748 (= e!88370 e!88376)))

(declare-fun c!25432 () Bool)

(assert (=> b!135748 (= c!25432 (not (= (bvand (extraKeys!2629 (_2!1304 lt!69440)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!14895 () Bool)

(assert (=> bm!14895 (= call!14894 (contains!886 lt!70870 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135736 () Bool)

(assert (=> b!135736 (= e!88367 e!88364)))

(declare-fun res!65108 () Bool)

(assert (=> b!135736 (= res!65108 call!14894)))

(assert (=> b!135736 (=> (not res!65108) (not e!88364))))

(declare-fun d!42443 () Bool)

(assert (=> d!42443 e!88370))

(declare-fun res!65113 () Bool)

(assert (=> d!42443 (=> (not res!65113) (not e!88370))))

(assert (=> d!42443 (= res!65113 (or (bvsge #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69440)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69440)))))))))

(declare-fun lt!70859 () ListLongMap!1671)

(assert (=> d!42443 (= lt!70870 lt!70859)))

(declare-fun lt!70869 () Unit!4132)

(assert (=> d!42443 (= lt!70869 e!88368)))

(declare-fun c!25431 () Bool)

(assert (=> d!42443 (= c!25431 e!88371)))

(declare-fun res!65112 () Bool)

(assert (=> d!42443 (=> (not res!65112) (not e!88371))))

(assert (=> d!42443 (= res!65112 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69440)))))))

(assert (=> d!42443 (= lt!70859 e!88373)))

(assert (=> d!42443 (= c!25436 (and (not (= (bvand (extraKeys!2629 (_2!1304 lt!69440)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 (_2!1304 lt!69440)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!42443 (validMask!0 (mask!7163 (_2!1304 lt!69440)))))

(assert (=> d!42443 (= (getCurrentListMap!519 (_keys!4612 (_2!1304 lt!69440)) (_values!2847 (_2!1304 lt!69440)) (mask!7163 (_2!1304 lt!69440)) (extraKeys!2629 (_2!1304 lt!69440)) (zeroValue!2719 (_2!1304 lt!69440)) (minValue!2719 (_2!1304 lt!69440)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1304 lt!69440))) lt!70870)))

(declare-fun b!135749 () Bool)

(declare-fun res!65105 () Bool)

(assert (=> b!135749 (=> (not res!65105) (not e!88370))))

(assert (=> b!135749 (= res!65105 e!88366)))

(declare-fun res!65111 () Bool)

(assert (=> b!135749 (=> res!65111 e!88366)))

(assert (=> b!135749 (= res!65111 (not e!88374))))

(declare-fun res!65107 () Bool)

(assert (=> b!135749 (=> (not res!65107) (not e!88374))))

(assert (=> b!135749 (= res!65107 (bvslt #b00000000000000000000000000000000 (size!2518 (_keys!4612 (_2!1304 lt!69440)))))))

(declare-fun b!135750 () Bool)

(assert (=> b!135750 (= e!88369 (= (apply!116 lt!70870 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 (_2!1304 lt!69440))))))

(assert (= (and d!42443 c!25436) b!135745))

(assert (= (and d!42443 (not c!25436)) b!135733))

(assert (= (and b!135733 c!25434) b!135740))

(assert (= (and b!135733 (not c!25434)) b!135743))

(assert (= (and b!135743 c!25435) b!135746))

(assert (= (and b!135743 (not c!25435)) b!135739))

(assert (= (or b!135746 b!135739) bm!14891))

(assert (= (or b!135740 bm!14891) bm!14893))

(assert (= (or b!135740 b!135746) bm!14894))

(assert (= (or b!135745 bm!14893) bm!14890))

(assert (= (or b!135745 bm!14894) bm!14889))

(assert (= (and d!42443 res!65112) b!135732))

(assert (= (and d!42443 c!25431) b!135738))

(assert (= (and d!42443 (not c!25431)) b!135744))

(assert (= (and d!42443 res!65113) b!135749))

(assert (= (and b!135749 res!65107) b!135731))

(assert (= (and b!135749 (not res!65111)) b!135734))

(assert (= (and b!135734 res!65110) b!135735))

(assert (= (and b!135749 res!65105) b!135741))

(assert (= (and b!135741 c!25433) b!135736))

(assert (= (and b!135741 (not c!25433)) b!135747))

(assert (= (and b!135736 res!65108) b!135737))

(assert (= (or b!135736 b!135747) bm!14895))

(assert (= (and b!135741 res!65106) b!135748))

(assert (= (and b!135748 c!25432) b!135730))

(assert (= (and b!135748 (not c!25432)) b!135742))

(assert (= (and b!135730 res!65109) b!135750))

(assert (= (or b!135730 b!135742) bm!14892))

(declare-fun b_lambda!6027 () Bool)

(assert (=> (not b_lambda!6027) (not b!135735)))

(declare-fun tb!2425 () Bool)

(declare-fun t!6173 () Bool)

(assert (=> (and b!132380 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 (_2!1304 lt!69440))) t!6173) tb!2425))

(declare-fun result!4001 () Bool)

(assert (=> tb!2425 (= result!4001 tp_is_empty!2875)))

(assert (=> b!135735 t!6173))

(declare-fun b_and!8385 () Bool)

(assert (= b_and!8381 (and (=> t!6173 result!4001) b_and!8385)))

(declare-fun t!6175 () Bool)

(declare-fun tb!2427 () Bool)

(assert (=> (and b!132384 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (_2!1304 lt!69440))) t!6175) tb!2427))

(declare-fun result!4003 () Bool)

(assert (= result!4003 result!4001))

(assert (=> b!135735 t!6175))

(declare-fun b_and!8387 () Bool)

(assert (= b_and!8383 (and (=> t!6175 result!4003) b_and!8387)))

(assert (=> b!135734 m!159623))

(assert (=> b!135734 m!159623))

(declare-fun m!161757 () Bool)

(assert (=> b!135734 m!161757))

(declare-fun m!161759 () Bool)

(assert (=> bm!14890 m!161759))

(declare-fun m!161761 () Bool)

(assert (=> bm!14889 m!161761))

(declare-fun m!161763 () Bool)

(assert (=> b!135735 m!161763))

(declare-fun m!161765 () Bool)

(assert (=> b!135735 m!161765))

(declare-fun m!161767 () Bool)

(assert (=> b!135735 m!161767))

(assert (=> b!135735 m!161765))

(assert (=> b!135735 m!159623))

(assert (=> b!135735 m!161763))

(assert (=> b!135735 m!159623))

(declare-fun m!161769 () Bool)

(assert (=> b!135735 m!161769))

(assert (=> b!135731 m!159623))

(assert (=> b!135731 m!159623))

(assert (=> b!135731 m!159625))

(assert (=> b!135732 m!159623))

(assert (=> b!135732 m!159623))

(assert (=> b!135732 m!159625))

(declare-fun m!161771 () Bool)

(assert (=> b!135737 m!161771))

(declare-fun m!161773 () Bool)

(assert (=> b!135745 m!161773))

(declare-fun m!161775 () Bool)

(assert (=> bm!14892 m!161775))

(declare-fun m!161777 () Bool)

(assert (=> b!135738 m!161777))

(declare-fun m!161779 () Bool)

(assert (=> b!135738 m!161779))

(declare-fun m!161781 () Bool)

(assert (=> b!135738 m!161781))

(declare-fun m!161783 () Bool)

(assert (=> b!135738 m!161783))

(assert (=> b!135738 m!161777))

(declare-fun m!161785 () Bool)

(assert (=> b!135738 m!161785))

(declare-fun m!161787 () Bool)

(assert (=> b!135738 m!161787))

(declare-fun m!161789 () Bool)

(assert (=> b!135738 m!161789))

(declare-fun m!161791 () Bool)

(assert (=> b!135738 m!161791))

(assert (=> b!135738 m!161781))

(declare-fun m!161793 () Bool)

(assert (=> b!135738 m!161793))

(declare-fun m!161795 () Bool)

(assert (=> b!135738 m!161795))

(declare-fun m!161797 () Bool)

(assert (=> b!135738 m!161797))

(declare-fun m!161799 () Bool)

(assert (=> b!135738 m!161799))

(declare-fun m!161801 () Bool)

(assert (=> b!135738 m!161801))

(assert (=> b!135738 m!161789))

(assert (=> b!135738 m!159623))

(assert (=> b!135738 m!161759))

(declare-fun m!161803 () Bool)

(assert (=> b!135738 m!161803))

(assert (=> b!135738 m!161783))

(declare-fun m!161805 () Bool)

(assert (=> b!135738 m!161805))

(declare-fun m!161807 () Bool)

(assert (=> b!135750 m!161807))

(declare-fun m!161809 () Bool)

(assert (=> bm!14895 m!161809))

(assert (=> d!42443 m!160663))

(assert (=> d!40657 d!42443))

(declare-fun c!25437 () Bool)

(declare-fun d!42445 () Bool)

(assert (=> d!42445 (= c!25437 (and ((_ is Cons!1706) (toList!851 lt!70013)) (= (_1!1303 (h!2311 (toList!851 lt!70013))) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16))))))))

(declare-fun e!88377 () Option!176)

(assert (=> d!42445 (= (getValueByKey!170 (toList!851 lt!70013) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))) e!88377)))

(declare-fun b!135753 () Bool)

(declare-fun e!88378 () Option!176)

(assert (=> b!135753 (= e!88378 (getValueByKey!170 (t!6152 (toList!851 lt!70013)) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135752 () Bool)

(assert (=> b!135752 (= e!88377 e!88378)))

(declare-fun c!25438 () Bool)

(assert (=> b!135752 (= c!25438 (and ((_ is Cons!1706) (toList!851 lt!70013)) (not (= (_1!1303 (h!2311 (toList!851 lt!70013))) (_1!1303 (tuple2!2585 lt!69360 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!135751 () Bool)

(assert (=> b!135751 (= e!88377 (Some!175 (_2!1303 (h!2311 (toList!851 lt!70013)))))))

(declare-fun b!135754 () Bool)

(assert (=> b!135754 (= e!88378 None!174)))

(assert (= (and d!42445 c!25437) b!135751))

(assert (= (and d!42445 (not c!25437)) b!135752))

(assert (= (and b!135752 c!25438) b!135753))

(assert (= (and b!135752 (not c!25438)) b!135754))

(declare-fun m!161811 () Bool)

(assert (=> b!135753 m!161811))

(assert (=> b!133916 d!42445))

(declare-fun d!42447 () Bool)

(declare-fun c!25439 () Bool)

(assert (=> d!42447 (= c!25439 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69331))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69331)))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun e!88379 () Option!176)

(assert (=> d!42447 (= (getValueByKey!170 (t!6152 (toList!851 lt!69331)) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!88379)))

(declare-fun b!135757 () Bool)

(declare-fun e!88380 () Option!176)

(assert (=> b!135757 (= e!88380 (getValueByKey!170 (t!6152 (t!6152 (toList!851 lt!69331))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!135756 () Bool)

(assert (=> b!135756 (= e!88379 e!88380)))

(declare-fun c!25440 () Bool)

(assert (=> b!135756 (= c!25440 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69331))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69331)))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!135755 () Bool)

(assert (=> b!135755 (= e!88379 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 lt!69331))))))))

(declare-fun b!135758 () Bool)

(assert (=> b!135758 (= e!88380 None!174)))

(assert (= (and d!42447 c!25439) b!135755))

(assert (= (and d!42447 (not c!25439)) b!135756))

(assert (= (and b!135756 c!25440) b!135757))

(assert (= (and b!135756 (not c!25440)) b!135758))

(declare-fun m!161813 () Bool)

(assert (=> b!135757 m!161813))

(assert (=> b!133665 d!42447))

(declare-fun b!135759 () Bool)

(declare-fun e!88383 () SeekEntryResult!278)

(assert (=> b!135759 (= e!88383 Undefined!278)))

(declare-fun b!135760 () Bool)

(declare-fun e!88382 () SeekEntryResult!278)

(assert (=> b!135760 (= e!88382 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15594 lt!69542) #b00000000000000000000000000000001) (nextIndex!0 (index!3274 lt!69542) (x!15594 lt!69542) (mask!7163 newMap!16)) (index!3274 lt!69542) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(declare-fun b!135761 () Bool)

(declare-fun e!88381 () SeekEntryResult!278)

(assert (=> b!135761 (= e!88381 (Found!278 (index!3274 lt!69542)))))

(declare-fun d!42449 () Bool)

(declare-fun lt!70876 () SeekEntryResult!278)

(assert (=> d!42449 (and (or ((_ is Undefined!278) lt!70876) (not ((_ is Found!278) lt!70876)) (and (bvsge (index!3273 lt!70876) #b00000000000000000000000000000000) (bvslt (index!3273 lt!70876) (size!2518 (_keys!4612 newMap!16))))) (or ((_ is Undefined!278) lt!70876) ((_ is Found!278) lt!70876) (not ((_ is MissingVacant!278) lt!70876)) (not (= (index!3275 lt!70876) (index!3274 lt!69542))) (and (bvsge (index!3275 lt!70876) #b00000000000000000000000000000000) (bvslt (index!3275 lt!70876) (size!2518 (_keys!4612 newMap!16))))) (or ((_ is Undefined!278) lt!70876) (ite ((_ is Found!278) lt!70876) (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3273 lt!70876)) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!278) lt!70876) (= (index!3275 lt!70876) (index!3274 lt!69542)) (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3275 lt!70876)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!42449 (= lt!70876 e!88383)))

(declare-fun c!25443 () Bool)

(assert (=> d!42449 (= c!25443 (bvsge (x!15594 lt!69542) #b01111111111111111111111111111110))))

(declare-fun lt!70877 () (_ BitVec 64))

(assert (=> d!42449 (= lt!70877 (select (arr!2248 (_keys!4612 newMap!16)) (index!3274 lt!69542)))))

(assert (=> d!42449 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!42449 (= (seekKeyOrZeroReturnVacant!0 (x!15594 lt!69542) (index!3274 lt!69542) (index!3274 lt!69542) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000) (_keys!4612 newMap!16) (mask!7163 newMap!16)) lt!70876)))

(declare-fun b!135762 () Bool)

(declare-fun c!25442 () Bool)

(assert (=> b!135762 (= c!25442 (= lt!70877 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135762 (= e!88381 e!88382)))

(declare-fun b!135763 () Bool)

(assert (=> b!135763 (= e!88382 (MissingVacant!278 (index!3274 lt!69542)))))

(declare-fun b!135764 () Bool)

(assert (=> b!135764 (= e!88383 e!88381)))

(declare-fun c!25441 () Bool)

(assert (=> b!135764 (= c!25441 (= lt!70877 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!42449 c!25443) b!135759))

(assert (= (and d!42449 (not c!25443)) b!135764))

(assert (= (and b!135764 c!25441) b!135761))

(assert (= (and b!135764 (not c!25441)) b!135762))

(assert (= (and b!135762 c!25442) b!135763))

(assert (= (and b!135762 (not c!25442)) b!135760))

(declare-fun m!161815 () Bool)

(assert (=> b!135760 m!161815))

(assert (=> b!135760 m!161815))

(assert (=> b!135760 m!156125))

(declare-fun m!161817 () Bool)

(assert (=> b!135760 m!161817))

(declare-fun m!161819 () Bool)

(assert (=> d!42449 m!161819))

(declare-fun m!161821 () Bool)

(assert (=> d!42449 m!161821))

(assert (=> d!42449 m!156761))

(assert (=> d!42449 m!156183))

(assert (=> b!133168 d!42449))

(declare-fun d!42451 () Bool)

(declare-fun e!88384 () Bool)

(assert (=> d!42451 e!88384))

(declare-fun res!65114 () Bool)

(assert (=> d!42451 (=> res!65114 e!88384)))

(declare-fun lt!70879 () Bool)

(assert (=> d!42451 (= res!65114 (not lt!70879))))

(declare-fun lt!70881 () Bool)

(assert (=> d!42451 (= lt!70879 lt!70881)))

(declare-fun lt!70878 () Unit!4132)

(declare-fun e!88385 () Unit!4132)

(assert (=> d!42451 (= lt!70878 e!88385)))

(declare-fun c!25444 () Bool)

(assert (=> d!42451 (= c!25444 lt!70881)))

(assert (=> d!42451 (= lt!70881 (containsKey!174 (toList!851 lt!69793) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!42451 (= (contains!886 lt!69793 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70879)))

(declare-fun b!135765 () Bool)

(declare-fun lt!70880 () Unit!4132)

(assert (=> b!135765 (= e!88385 lt!70880)))

(assert (=> b!135765 (= lt!70880 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69793) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> b!135765 (isDefined!124 (getValueByKey!170 (toList!851 lt!69793) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!135766 () Bool)

(declare-fun Unit!4273 () Unit!4132)

(assert (=> b!135766 (= e!88385 Unit!4273)))

(declare-fun b!135767 () Bool)

(assert (=> b!135767 (= e!88384 (isDefined!124 (getValueByKey!170 (toList!851 lt!69793) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (= (and d!42451 c!25444) b!135765))

(assert (= (and d!42451 (not c!25444)) b!135766))

(assert (= (and d!42451 (not res!65114)) b!135767))

(declare-fun m!161823 () Bool)

(assert (=> d!42451 m!161823))

(declare-fun m!161825 () Bool)

(assert (=> b!135765 m!161825))

(assert (=> b!135765 m!157567))

(assert (=> b!135765 m!157567))

(declare-fun m!161827 () Bool)

(assert (=> b!135765 m!161827))

(assert (=> b!135767 m!157567))

(assert (=> b!135767 m!157567))

(assert (=> b!135767 m!161827))

(assert (=> d!40683 d!42451))

(declare-fun d!42453 () Bool)

(declare-fun c!25445 () Bool)

(assert (=> d!42453 (= c!25445 (and ((_ is Cons!1706) lt!69791) (= (_1!1303 (h!2311 lt!69791)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun e!88386 () Option!176)

(assert (=> d!42453 (= (getValueByKey!170 lt!69791 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) e!88386)))

(declare-fun b!135770 () Bool)

(declare-fun e!88387 () Option!176)

(assert (=> b!135770 (= e!88387 (getValueByKey!170 (t!6152 lt!69791) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!135769 () Bool)

(assert (=> b!135769 (= e!88386 e!88387)))

(declare-fun c!25446 () Bool)

(assert (=> b!135769 (= c!25446 (and ((_ is Cons!1706) lt!69791) (not (= (_1!1303 (h!2311 lt!69791)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!135768 () Bool)

(assert (=> b!135768 (= e!88386 (Some!175 (_2!1303 (h!2311 lt!69791))))))

(declare-fun b!135771 () Bool)

(assert (=> b!135771 (= e!88387 None!174)))

(assert (= (and d!42453 c!25445) b!135768))

(assert (= (and d!42453 (not c!25445)) b!135769))

(assert (= (and b!135769 c!25446) b!135770))

(assert (= (and b!135769 (not c!25446)) b!135771))

(declare-fun m!161829 () Bool)

(assert (=> b!135770 m!161829))

(assert (=> d!40683 d!42453))

(declare-fun d!42455 () Bool)

(assert (=> d!42455 (= (getValueByKey!170 lt!69791 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70882 () Unit!4132)

(assert (=> d!42455 (= lt!70882 (choose!834 lt!69791 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun e!88388 () Bool)

(assert (=> d!42455 e!88388))

(declare-fun res!65115 () Bool)

(assert (=> d!42455 (=> (not res!65115) (not e!88388))))

(assert (=> d!42455 (= res!65115 (isStrictlySorted!317 lt!69791))))

(assert (=> d!42455 (= (lemmaContainsTupThenGetReturnValue!88 lt!69791 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70882)))

(declare-fun b!135772 () Bool)

(declare-fun res!65116 () Bool)

(assert (=> b!135772 (=> (not res!65116) (not e!88388))))

(assert (=> b!135772 (= res!65116 (containsKey!174 lt!69791 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!135773 () Bool)

(assert (=> b!135773 (= e!88388 (contains!889 lt!69791 (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (= (and d!42455 res!65115) b!135772))

(assert (= (and b!135772 res!65116) b!135773))

(assert (=> d!42455 m!157561))

(declare-fun m!161831 () Bool)

(assert (=> d!42455 m!161831))

(declare-fun m!161833 () Bool)

(assert (=> d!42455 m!161833))

(declare-fun m!161835 () Bool)

(assert (=> b!135772 m!161835))

(declare-fun m!161837 () Bool)

(assert (=> b!135773 m!161837))

(assert (=> d!40683 d!42455))

(declare-fun b!135774 () Bool)

(declare-fun e!88393 () List!1710)

(assert (=> b!135774 (= e!88393 (insertStrictlySorted!91 (t!6152 (toList!851 call!14635)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!135775 () Bool)

(declare-fun e!88392 () List!1710)

(declare-fun call!14901 () List!1710)

(assert (=> b!135775 (= e!88392 call!14901)))

(declare-fun b!135776 () Bool)

(declare-fun res!65118 () Bool)

(declare-fun e!88390 () Bool)

(assert (=> b!135776 (=> (not res!65118) (not e!88390))))

(declare-fun lt!70883 () List!1710)

(assert (=> b!135776 (= res!65118 (containsKey!174 lt!70883 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun bm!14896 () Bool)

(declare-fun c!25448 () Bool)

(assert (=> bm!14896 (= call!14901 ($colon$colon!91 e!88393 (ite c!25448 (h!2311 (toList!851 call!14635)) (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun c!25449 () Bool)

(assert (=> bm!14896 (= c!25449 c!25448)))

(declare-fun c!25450 () Bool)

(declare-fun c!25447 () Bool)

(declare-fun b!135777 () Bool)

(assert (=> b!135777 (= e!88393 (ite c!25447 (t!6152 (toList!851 call!14635)) (ite c!25450 (Cons!1706 (h!2311 (toList!851 call!14635)) (t!6152 (toList!851 call!14635))) Nil!1707)))))

(declare-fun d!42457 () Bool)

(assert (=> d!42457 e!88390))

(declare-fun res!65117 () Bool)

(assert (=> d!42457 (=> (not res!65117) (not e!88390))))

(assert (=> d!42457 (= res!65117 (isStrictlySorted!317 lt!70883))))

(assert (=> d!42457 (= lt!70883 e!88392)))

(assert (=> d!42457 (= c!25448 (and ((_ is Cons!1706) (toList!851 call!14635)) (bvslt (_1!1303 (h!2311 (toList!851 call!14635))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42457 (isStrictlySorted!317 (toList!851 call!14635))))

(assert (=> d!42457 (= (insertStrictlySorted!91 (toList!851 call!14635) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70883)))

(declare-fun b!135778 () Bool)

(declare-fun e!88389 () List!1710)

(assert (=> b!135778 (= e!88392 e!88389)))

(assert (=> b!135778 (= c!25447 (and ((_ is Cons!1706) (toList!851 call!14635)) (= (_1!1303 (h!2311 (toList!851 call!14635))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135779 () Bool)

(declare-fun e!88391 () List!1710)

(declare-fun call!14899 () List!1710)

(assert (=> b!135779 (= e!88391 call!14899)))

(declare-fun b!135780 () Bool)

(declare-fun call!14900 () List!1710)

(assert (=> b!135780 (= e!88389 call!14900)))

(declare-fun b!135781 () Bool)

(assert (=> b!135781 (= e!88390 (contains!889 lt!70883 (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun bm!14897 () Bool)

(assert (=> bm!14897 (= call!14900 call!14901)))

(declare-fun bm!14898 () Bool)

(assert (=> bm!14898 (= call!14899 call!14900)))

(declare-fun b!135782 () Bool)

(assert (=> b!135782 (= c!25450 (and ((_ is Cons!1706) (toList!851 call!14635)) (bvsgt (_1!1303 (h!2311 (toList!851 call!14635))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> b!135782 (= e!88389 e!88391)))

(declare-fun b!135783 () Bool)

(assert (=> b!135783 (= e!88391 call!14899)))

(assert (= (and d!42457 c!25448) b!135775))

(assert (= (and d!42457 (not c!25448)) b!135778))

(assert (= (and b!135778 c!25447) b!135780))

(assert (= (and b!135778 (not c!25447)) b!135782))

(assert (= (and b!135782 c!25450) b!135783))

(assert (= (and b!135782 (not c!25450)) b!135779))

(assert (= (or b!135783 b!135779) bm!14898))

(assert (= (or b!135780 bm!14898) bm!14897))

(assert (= (or b!135775 bm!14897) bm!14896))

(assert (= (and bm!14896 c!25449) b!135774))

(assert (= (and bm!14896 (not c!25449)) b!135777))

(assert (= (and d!42457 res!65117) b!135776))

(assert (= (and b!135776 res!65118) b!135781))

(declare-fun m!161839 () Bool)

(assert (=> b!135781 m!161839))

(declare-fun m!161841 () Bool)

(assert (=> b!135776 m!161841))

(declare-fun m!161843 () Bool)

(assert (=> b!135774 m!161843))

(declare-fun m!161845 () Bool)

(assert (=> d!42457 m!161845))

(declare-fun m!161847 () Bool)

(assert (=> d!42457 m!161847))

(declare-fun m!161849 () Bool)

(assert (=> bm!14896 m!161849))

(assert (=> d!40683 d!42457))

(declare-fun c!25451 () Bool)

(declare-fun d!42459 () Bool)

(assert (=> d!42459 (= c!25451 (and ((_ is Cons!1706) (t!6152 (toList!851 call!14583))) (= (_1!1303 (h!2311 (t!6152 (toList!851 call!14583)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun e!88394 () Option!176)

(assert (=> d!42459 (= (getValueByKey!170 (t!6152 (toList!851 call!14583)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!88394)))

(declare-fun b!135786 () Bool)

(declare-fun e!88395 () Option!176)

(assert (=> b!135786 (= e!88395 (getValueByKey!170 (t!6152 (t!6152 (toList!851 call!14583))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun b!135785 () Bool)

(assert (=> b!135785 (= e!88394 e!88395)))

(declare-fun c!25452 () Bool)

(assert (=> b!135785 (= c!25452 (and ((_ is Cons!1706) (t!6152 (toList!851 call!14583))) (not (= (_1!1303 (h!2311 (t!6152 (toList!851 call!14583)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))))

(declare-fun b!135784 () Bool)

(assert (=> b!135784 (= e!88394 (Some!175 (_2!1303 (h!2311 (t!6152 (toList!851 call!14583))))))))

(declare-fun b!135787 () Bool)

(assert (=> b!135787 (= e!88395 None!174)))

(assert (= (and d!42459 c!25451) b!135784))

(assert (= (and d!42459 (not c!25451)) b!135785))

(assert (= (and b!135785 c!25452) b!135786))

(assert (= (and b!135785 (not c!25452)) b!135787))

(assert (=> b!135786 m!155841))

(declare-fun m!161851 () Bool)

(assert (=> b!135786 m!161851))

(assert (=> b!133310 d!42459))

(declare-fun d!42461 () Bool)

(declare-fun e!88396 () Bool)

(assert (=> d!42461 e!88396))

(declare-fun res!65119 () Bool)

(assert (=> d!42461 (=> res!65119 e!88396)))

(declare-fun lt!70885 () Bool)

(assert (=> d!42461 (= res!65119 (not lt!70885))))

(declare-fun lt!70887 () Bool)

(assert (=> d!42461 (= lt!70885 lt!70887)))

(declare-fun lt!70884 () Unit!4132)

(declare-fun e!88397 () Unit!4132)

(assert (=> d!42461 (= lt!70884 e!88397)))

(declare-fun c!25453 () Bool)

(assert (=> d!42461 (= c!25453 lt!70887)))

(assert (=> d!42461 (= lt!70887 (containsKey!174 (toList!851 lt!69712) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!42461 (= (contains!886 lt!69712 (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70885)))

(declare-fun b!135788 () Bool)

(declare-fun lt!70886 () Unit!4132)

(assert (=> b!135788 (= e!88397 lt!70886)))

(assert (=> b!135788 (= lt!70886 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69712) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> b!135788 (isDefined!124 (getValueByKey!170 (toList!851 lt!69712) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!135789 () Bool)

(declare-fun Unit!4274 () Unit!4132)

(assert (=> b!135789 (= e!88397 Unit!4274)))

(declare-fun b!135790 () Bool)

(assert (=> b!135790 (= e!88396 (isDefined!124 (getValueByKey!170 (toList!851 lt!69712) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (= (and d!42461 c!25453) b!135788))

(assert (= (and d!42461 (not c!25453)) b!135789))

(assert (= (and d!42461 (not res!65119)) b!135790))

(declare-fun m!161853 () Bool)

(assert (=> d!42461 m!161853))

(declare-fun m!161855 () Bool)

(assert (=> b!135788 m!161855))

(assert (=> b!135788 m!157307))

(assert (=> b!135788 m!157307))

(declare-fun m!161857 () Bool)

(assert (=> b!135788 m!161857))

(assert (=> b!135790 m!157307))

(assert (=> b!135790 m!157307))

(assert (=> b!135790 m!161857))

(assert (=> d!40595 d!42461))

(declare-fun c!25454 () Bool)

(declare-fun d!42463 () Bool)

(assert (=> d!42463 (= c!25454 (and ((_ is Cons!1706) lt!69710) (= (_1!1303 (h!2311 lt!69710)) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun e!88398 () Option!176)

(assert (=> d!42463 (= (getValueByKey!170 lt!69710 (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) e!88398)))

(declare-fun b!135793 () Bool)

(declare-fun e!88399 () Option!176)

(assert (=> b!135793 (= e!88399 (getValueByKey!170 (t!6152 lt!69710) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!135792 () Bool)

(assert (=> b!135792 (= e!88398 e!88399)))

(declare-fun c!25455 () Bool)

(assert (=> b!135792 (= c!25455 (and ((_ is Cons!1706) lt!69710) (not (= (_1!1303 (h!2311 lt!69710)) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!135791 () Bool)

(assert (=> b!135791 (= e!88398 (Some!175 (_2!1303 (h!2311 lt!69710))))))

(declare-fun b!135794 () Bool)

(assert (=> b!135794 (= e!88399 None!174)))

(assert (= (and d!42463 c!25454) b!135791))

(assert (= (and d!42463 (not c!25454)) b!135792))

(assert (= (and b!135792 c!25455) b!135793))

(assert (= (and b!135792 (not c!25455)) b!135794))

(declare-fun m!161859 () Bool)

(assert (=> b!135793 m!161859))

(assert (=> d!40595 d!42463))

(declare-fun d!42465 () Bool)

(assert (=> d!42465 (= (getValueByKey!170 lt!69710 (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!175 (_2!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun lt!70888 () Unit!4132)

(assert (=> d!42465 (= lt!70888 (choose!834 lt!69710 (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun e!88400 () Bool)

(assert (=> d!42465 e!88400))

(declare-fun res!65120 () Bool)

(assert (=> d!42465 (=> (not res!65120) (not e!88400))))

(assert (=> d!42465 (= res!65120 (isStrictlySorted!317 lt!69710))))

(assert (=> d!42465 (= (lemmaContainsTupThenGetReturnValue!88 lt!69710 (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70888)))

(declare-fun b!135795 () Bool)

(declare-fun res!65121 () Bool)

(assert (=> b!135795 (=> (not res!65121) (not e!88400))))

(assert (=> b!135795 (= res!65121 (containsKey!174 lt!69710 (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!135796 () Bool)

(assert (=> b!135796 (= e!88400 (contains!889 lt!69710 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (= (and d!42465 res!65120) b!135795))

(assert (= (and b!135795 res!65121) b!135796))

(assert (=> d!42465 m!157301))

(declare-fun m!161861 () Bool)

(assert (=> d!42465 m!161861))

(declare-fun m!161863 () Bool)

(assert (=> d!42465 m!161863))

(declare-fun m!161865 () Bool)

(assert (=> b!135795 m!161865))

(declare-fun m!161867 () Bool)

(assert (=> b!135796 m!161867))

(assert (=> d!40595 d!42465))

(declare-fun b!135797 () Bool)

(declare-fun e!88405 () List!1710)

(assert (=> b!135797 (= e!88405 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69477)) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!135798 () Bool)

(declare-fun e!88404 () List!1710)

(declare-fun call!14904 () List!1710)

(assert (=> b!135798 (= e!88404 call!14904)))

(declare-fun b!135799 () Bool)

(declare-fun res!65123 () Bool)

(declare-fun e!88402 () Bool)

(assert (=> b!135799 (=> (not res!65123) (not e!88402))))

(declare-fun lt!70889 () List!1710)

(assert (=> b!135799 (= res!65123 (containsKey!174 lt!70889 (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun bm!14899 () Bool)

(declare-fun c!25457 () Bool)

(assert (=> bm!14899 (= call!14904 ($colon$colon!91 e!88405 (ite c!25457 (h!2311 (toList!851 lt!69477)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun c!25458 () Bool)

(assert (=> bm!14899 (= c!25458 c!25457)))

(declare-fun b!135800 () Bool)

(declare-fun c!25459 () Bool)

(declare-fun c!25456 () Bool)

(assert (=> b!135800 (= e!88405 (ite c!25456 (t!6152 (toList!851 lt!69477)) (ite c!25459 (Cons!1706 (h!2311 (toList!851 lt!69477)) (t!6152 (toList!851 lt!69477))) Nil!1707)))))

(declare-fun d!42467 () Bool)

(assert (=> d!42467 e!88402))

(declare-fun res!65122 () Bool)

(assert (=> d!42467 (=> (not res!65122) (not e!88402))))

(assert (=> d!42467 (= res!65122 (isStrictlySorted!317 lt!70889))))

(assert (=> d!42467 (= lt!70889 e!88404)))

(assert (=> d!42467 (= c!25457 (and ((_ is Cons!1706) (toList!851 lt!69477)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69477))) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!42467 (isStrictlySorted!317 (toList!851 lt!69477))))

(assert (=> d!42467 (= (insertStrictlySorted!91 (toList!851 lt!69477) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70889)))

(declare-fun b!135801 () Bool)

(declare-fun e!88401 () List!1710)

(assert (=> b!135801 (= e!88404 e!88401)))

(assert (=> b!135801 (= c!25456 (and ((_ is Cons!1706) (toList!851 lt!69477)) (= (_1!1303 (h!2311 (toList!851 lt!69477))) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!135802 () Bool)

(declare-fun e!88403 () List!1710)

(declare-fun call!14902 () List!1710)

(assert (=> b!135802 (= e!88403 call!14902)))

(declare-fun b!135803 () Bool)

(declare-fun call!14903 () List!1710)

(assert (=> b!135803 (= e!88401 call!14903)))

(declare-fun b!135804 () Bool)

(assert (=> b!135804 (= e!88402 (contains!889 lt!70889 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun bm!14900 () Bool)

(assert (=> bm!14900 (= call!14903 call!14904)))

(declare-fun bm!14901 () Bool)

(assert (=> bm!14901 (= call!14902 call!14903)))

(declare-fun b!135805 () Bool)

(assert (=> b!135805 (= c!25459 (and ((_ is Cons!1706) (toList!851 lt!69477)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69477))) (_1!1303 (tuple2!2585 lt!69478 (ite c!24523 (ite c!24530 (minValue!2719 newMap!16) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> b!135805 (= e!88401 e!88403)))

(declare-fun b!135806 () Bool)

(assert (=> b!135806 (= e!88403 call!14902)))

(assert (= (and d!42467 c!25457) b!135798))

(assert (= (and d!42467 (not c!25457)) b!135801))

(assert (= (and b!135801 c!25456) b!135803))

(assert (= (and b!135801 (not c!25456)) b!135805))

(assert (= (and b!135805 c!25459) b!135806))

(assert (= (and b!135805 (not c!25459)) b!135802))

(assert (= (or b!135806 b!135802) bm!14901))

(assert (= (or b!135803 bm!14901) bm!14900))

(assert (= (or b!135798 bm!14900) bm!14899))

(assert (= (and bm!14899 c!25458) b!135797))

(assert (= (and bm!14899 (not c!25458)) b!135800))

(assert (= (and d!42467 res!65122) b!135799))

(assert (= (and b!135799 res!65123) b!135804))

(declare-fun m!161869 () Bool)

(assert (=> b!135804 m!161869))

(declare-fun m!161871 () Bool)

(assert (=> b!135799 m!161871))

(declare-fun m!161873 () Bool)

(assert (=> b!135797 m!161873))

(declare-fun m!161875 () Bool)

(assert (=> d!42467 m!161875))

(declare-fun m!161877 () Bool)

(assert (=> d!42467 m!161877))

(declare-fun m!161879 () Bool)

(assert (=> bm!14899 m!161879))

(assert (=> d!40595 d!42467))

(declare-fun b!135807 () Bool)

(declare-fun e!88410 () List!1710)

(assert (=> b!135807 (= e!88410 (insertStrictlySorted!91 (t!6152 (t!6152 (toList!851 call!14621))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun b!135808 () Bool)

(declare-fun e!88409 () List!1710)

(declare-fun call!14907 () List!1710)

(assert (=> b!135808 (= e!88409 call!14907)))

(declare-fun b!135809 () Bool)

(declare-fun res!65125 () Bool)

(declare-fun e!88407 () Bool)

(assert (=> b!135809 (=> (not res!65125) (not e!88407))))

(declare-fun lt!70890 () List!1710)

(assert (=> b!135809 (= res!65125 (containsKey!174 lt!70890 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(declare-fun bm!14902 () Bool)

(declare-fun c!25461 () Bool)

(assert (=> bm!14902 (= call!14907 ($colon$colon!91 e!88410 (ite c!25461 (h!2311 (t!6152 (toList!851 call!14621))) (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun c!25462 () Bool)

(assert (=> bm!14902 (= c!25462 c!25461)))

(declare-fun c!25460 () Bool)

(declare-fun b!135810 () Bool)

(declare-fun c!25463 () Bool)

(assert (=> b!135810 (= e!88410 (ite c!25460 (t!6152 (t!6152 (toList!851 call!14621))) (ite c!25463 (Cons!1706 (h!2311 (t!6152 (toList!851 call!14621))) (t!6152 (t!6152 (toList!851 call!14621)))) Nil!1707)))))

(declare-fun d!42469 () Bool)

(assert (=> d!42469 e!88407))

(declare-fun res!65124 () Bool)

(assert (=> d!42469 (=> (not res!65124) (not e!88407))))

(assert (=> d!42469 (= res!65124 (isStrictlySorted!317 lt!70890))))

(assert (=> d!42469 (= lt!70890 e!88409)))

(assert (=> d!42469 (= c!25461 (and ((_ is Cons!1706) (t!6152 (toList!851 call!14621))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 call!14621)))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!42469 (isStrictlySorted!317 (t!6152 (toList!851 call!14621)))))

(assert (=> d!42469 (= (insertStrictlySorted!91 (t!6152 (toList!851 call!14621)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!70890)))

(declare-fun b!135811 () Bool)

(declare-fun e!88406 () List!1710)

(assert (=> b!135811 (= e!88409 e!88406)))

(assert (=> b!135811 (= c!25460 (and ((_ is Cons!1706) (t!6152 (toList!851 call!14621))) (= (_1!1303 (h!2311 (t!6152 (toList!851 call!14621)))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135812 () Bool)

(declare-fun e!88408 () List!1710)

(declare-fun call!14905 () List!1710)

(assert (=> b!135812 (= e!88408 call!14905)))

(declare-fun b!135813 () Bool)

(declare-fun call!14906 () List!1710)

(assert (=> b!135813 (= e!88406 call!14906)))

(declare-fun b!135814 () Bool)

(assert (=> b!135814 (= e!88407 (contains!889 lt!70890 (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun bm!14903 () Bool)

(assert (=> bm!14903 (= call!14906 call!14907)))

(declare-fun bm!14904 () Bool)

(assert (=> bm!14904 (= call!14905 call!14906)))

(declare-fun b!135815 () Bool)

(assert (=> b!135815 (= c!25463 (and ((_ is Cons!1706) (t!6152 (toList!851 call!14621))) (bvsgt (_1!1303 (h!2311 (t!6152 (toList!851 call!14621)))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> b!135815 (= e!88406 e!88408)))

(declare-fun b!135816 () Bool)

(assert (=> b!135816 (= e!88408 call!14905)))

(assert (= (and d!42469 c!25461) b!135808))

(assert (= (and d!42469 (not c!25461)) b!135811))

(assert (= (and b!135811 c!25460) b!135813))

(assert (= (and b!135811 (not c!25460)) b!135815))

(assert (= (and b!135815 c!25463) b!135816))

(assert (= (and b!135815 (not c!25463)) b!135812))

(assert (= (or b!135816 b!135812) bm!14904))

(assert (= (or b!135813 bm!14904) bm!14903))

(assert (= (or b!135808 bm!14903) bm!14902))

(assert (= (and bm!14902 c!25462) b!135807))

(assert (= (and bm!14902 (not c!25462)) b!135810))

(assert (= (and d!42469 res!65124) b!135809))

(assert (= (and b!135809 res!65125) b!135814))

(declare-fun m!161881 () Bool)

(assert (=> b!135814 m!161881))

(declare-fun m!161883 () Bool)

(assert (=> b!135809 m!161883))

(declare-fun m!161885 () Bool)

(assert (=> b!135807 m!161885))

(declare-fun m!161887 () Bool)

(assert (=> d!42469 m!161887))

(assert (=> d!42469 m!161535))

(declare-fun m!161889 () Bool)

(assert (=> bm!14902 m!161889))

(assert (=> b!133696 d!42469))

(declare-fun d!42471 () Bool)

(declare-fun e!88411 () Bool)

(assert (=> d!42471 e!88411))

(declare-fun res!65126 () Bool)

(assert (=> d!42471 (=> res!65126 e!88411)))

(declare-fun lt!70892 () Bool)

(assert (=> d!42471 (= res!65126 (not lt!70892))))

(declare-fun lt!70894 () Bool)

(assert (=> d!42471 (= lt!70892 lt!70894)))

(declare-fun lt!70891 () Unit!4132)

(declare-fun e!88412 () Unit!4132)

(assert (=> d!42471 (= lt!70891 e!88412)))

(declare-fun c!25464 () Bool)

(assert (=> d!42471 (= c!25464 lt!70894)))

(assert (=> d!42471 (= lt!70894 (containsKey!174 (toList!851 lt!70021) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42471 (= (contains!886 lt!70021 (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))) lt!70892)))

(declare-fun b!135817 () Bool)

(declare-fun lt!70893 () Unit!4132)

(assert (=> b!135817 (= e!88412 lt!70893)))

(assert (=> b!135817 (= lt!70893 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!70021) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))

(assert (=> b!135817 (isDefined!124 (getValueByKey!170 (toList!851 lt!70021) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135818 () Bool)

(declare-fun Unit!4275 () Unit!4132)

(assert (=> b!135818 (= e!88412 Unit!4275)))

(declare-fun b!135819 () Bool)

(assert (=> b!135819 (= e!88411 (isDefined!124 (getValueByKey!170 (toList!851 lt!70021) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!42471 c!25464) b!135817))

(assert (= (and d!42471 (not c!25464)) b!135818))

(assert (= (and d!42471 (not res!65126)) b!135819))

(declare-fun m!161891 () Bool)

(assert (=> d!42471 m!161891))

(declare-fun m!161893 () Bool)

(assert (=> b!135817 m!161893))

(assert (=> b!135817 m!158347))

(assert (=> b!135817 m!158347))

(declare-fun m!161895 () Bool)

(assert (=> b!135817 m!161895))

(assert (=> b!135819 m!158347))

(assert (=> b!135819 m!158347))

(assert (=> b!135819 m!161895))

(assert (=> d!40937 d!42471))

(declare-fun c!25465 () Bool)

(declare-fun d!42473 () Bool)

(assert (=> d!42473 (= c!25465 (and ((_ is Cons!1706) lt!70019) (= (_1!1303 (h!2311 lt!70019)) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))))))

(declare-fun e!88413 () Option!176)

(assert (=> d!42473 (= (getValueByKey!170 lt!70019 (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))) e!88413)))

(declare-fun e!88414 () Option!176)

(declare-fun b!135822 () Bool)

(assert (=> b!135822 (= e!88414 (getValueByKey!170 (t!6152 lt!70019) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135821 () Bool)

(assert (=> b!135821 (= e!88413 e!88414)))

(declare-fun c!25466 () Bool)

(assert (=> b!135821 (= c!25466 (and ((_ is Cons!1706) lt!70019) (not (= (_1!1303 (h!2311 lt!70019)) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!135820 () Bool)

(assert (=> b!135820 (= e!88413 (Some!175 (_2!1303 (h!2311 lt!70019))))))

(declare-fun b!135823 () Bool)

(assert (=> b!135823 (= e!88414 None!174)))

(assert (= (and d!42473 c!25465) b!135820))

(assert (= (and d!42473 (not c!25465)) b!135821))

(assert (= (and b!135821 c!25466) b!135822))

(assert (= (and b!135821 (not c!25466)) b!135823))

(declare-fun m!161897 () Bool)

(assert (=> b!135822 m!161897))

(assert (=> d!40937 d!42473))

(declare-fun d!42475 () Bool)

(assert (=> d!42475 (= (getValueByKey!170 lt!70019 (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70895 () Unit!4132)

(assert (=> d!42475 (= lt!70895 (choose!834 lt!70019 (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))

(declare-fun e!88415 () Bool)

(assert (=> d!42475 e!88415))

(declare-fun res!65127 () Bool)

(assert (=> d!42475 (=> (not res!65127) (not e!88415))))

(assert (=> d!42475 (= res!65127 (isStrictlySorted!317 lt!70019))))

(assert (=> d!42475 (= (lemmaContainsTupThenGetReturnValue!88 lt!70019 (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))) lt!70895)))

(declare-fun b!135824 () Bool)

(declare-fun res!65128 () Bool)

(assert (=> b!135824 (=> (not res!65128) (not e!88415))))

(assert (=> b!135824 (= res!65128 (containsKey!174 lt!70019 (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135825 () Bool)

(assert (=> b!135825 (= e!88415 (contains!889 lt!70019 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!42475 res!65127) b!135824))

(assert (= (and b!135824 res!65128) b!135825))

(assert (=> d!42475 m!158341))

(declare-fun m!161899 () Bool)

(assert (=> d!42475 m!161899))

(declare-fun m!161901 () Bool)

(assert (=> d!42475 m!161901))

(declare-fun m!161903 () Bool)

(assert (=> b!135824 m!161903))

(declare-fun m!161905 () Bool)

(assert (=> b!135825 m!161905))

(assert (=> d!40937 d!42475))

(declare-fun b!135826 () Bool)

(declare-fun e!88420 () List!1710)

(assert (=> b!135826 (= e!88420 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69346)) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135827 () Bool)

(declare-fun e!88419 () List!1710)

(declare-fun call!14910 () List!1710)

(assert (=> b!135827 (= e!88419 call!14910)))

(declare-fun b!135828 () Bool)

(declare-fun res!65130 () Bool)

(declare-fun e!88417 () Bool)

(assert (=> b!135828 (=> (not res!65130) (not e!88417))))

(declare-fun lt!70896 () List!1710)

(assert (=> b!135828 (= res!65130 (containsKey!174 lt!70896 (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))

(declare-fun bm!14905 () Bool)

(declare-fun c!25468 () Bool)

(assert (=> bm!14905 (= call!14910 ($colon$colon!91 e!88420 (ite c!25468 (h!2311 (toList!851 lt!69346)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))))))

(declare-fun c!25469 () Bool)

(assert (=> bm!14905 (= c!25469 c!25468)))

(declare-fun b!135829 () Bool)

(declare-fun c!25467 () Bool)

(declare-fun c!25470 () Bool)

(assert (=> b!135829 (= e!88420 (ite c!25467 (t!6152 (toList!851 lt!69346)) (ite c!25470 (Cons!1706 (h!2311 (toList!851 lt!69346)) (t!6152 (toList!851 lt!69346))) Nil!1707)))))

(declare-fun d!42477 () Bool)

(assert (=> d!42477 e!88417))

(declare-fun res!65129 () Bool)

(assert (=> d!42477 (=> (not res!65129) (not e!88417))))

(assert (=> d!42477 (= res!65129 (isStrictlySorted!317 lt!70896))))

(assert (=> d!42477 (= lt!70896 e!88419)))

(assert (=> d!42477 (= c!25468 (and ((_ is Cons!1706) (toList!851 lt!69346)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69346))) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))))))

(assert (=> d!42477 (isStrictlySorted!317 (toList!851 lt!69346))))

(assert (=> d!42477 (= (insertStrictlySorted!91 (toList!851 lt!69346) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))) lt!70896)))

(declare-fun b!135830 () Bool)

(declare-fun e!88416 () List!1710)

(assert (=> b!135830 (= e!88419 e!88416)))

(assert (=> b!135830 (= c!25467 (and ((_ is Cons!1706) (toList!851 lt!69346)) (= (_1!1303 (h!2311 (toList!851 lt!69346))) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))))))

(declare-fun b!135831 () Bool)

(declare-fun e!88418 () List!1710)

(declare-fun call!14908 () List!1710)

(assert (=> b!135831 (= e!88418 call!14908)))

(declare-fun b!135832 () Bool)

(declare-fun call!14909 () List!1710)

(assert (=> b!135832 (= e!88416 call!14909)))

(declare-fun b!135833 () Bool)

(assert (=> b!135833 (= e!88417 (contains!889 lt!70896 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))))))

(declare-fun bm!14906 () Bool)

(assert (=> bm!14906 (= call!14909 call!14910)))

(declare-fun bm!14907 () Bool)

(assert (=> bm!14907 (= call!14908 call!14909)))

(declare-fun b!135834 () Bool)

(assert (=> b!135834 (= c!25470 (and ((_ is Cons!1706) (toList!851 lt!69346)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69346))) (_1!1303 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))))))

(assert (=> b!135834 (= e!88416 e!88418)))

(declare-fun b!135835 () Bool)

(assert (=> b!135835 (= e!88418 call!14908)))

(assert (= (and d!42477 c!25468) b!135827))

(assert (= (and d!42477 (not c!25468)) b!135830))

(assert (= (and b!135830 c!25467) b!135832))

(assert (= (and b!135830 (not c!25467)) b!135834))

(assert (= (and b!135834 c!25470) b!135835))

(assert (= (and b!135834 (not c!25470)) b!135831))

(assert (= (or b!135835 b!135831) bm!14907))

(assert (= (or b!135832 bm!14907) bm!14906))

(assert (= (or b!135827 bm!14906) bm!14905))

(assert (= (and bm!14905 c!25469) b!135826))

(assert (= (and bm!14905 (not c!25469)) b!135829))

(assert (= (and d!42477 res!65129) b!135828))

(assert (= (and b!135828 res!65130) b!135833))

(declare-fun m!161907 () Bool)

(assert (=> b!135833 m!161907))

(declare-fun m!161909 () Bool)

(assert (=> b!135828 m!161909))

(declare-fun m!161911 () Bool)

(assert (=> b!135826 m!161911))

(declare-fun m!161913 () Bool)

(assert (=> d!42477 m!161913))

(declare-fun m!161915 () Bool)

(assert (=> d!42477 m!161915))

(declare-fun m!161917 () Bool)

(assert (=> bm!14905 m!161917))

(assert (=> d!40937 d!42477))

(declare-fun d!42479 () Bool)

(declare-fun c!25471 () Bool)

(assert (=> d!42479 (= c!25471 (and ((_ is Cons!1706) (t!6152 lt!69464)) (= (_1!1303 (h!2311 (t!6152 lt!69464))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!88421 () Option!176)

(assert (=> d!42479 (= (getValueByKey!170 (t!6152 lt!69464) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!88421)))

(declare-fun e!88422 () Option!176)

(declare-fun b!135838 () Bool)

(assert (=> b!135838 (= e!88422 (getValueByKey!170 (t!6152 (t!6152 lt!69464)) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135837 () Bool)

(assert (=> b!135837 (= e!88421 e!88422)))

(declare-fun c!25472 () Bool)

(assert (=> b!135837 (= c!25472 (and ((_ is Cons!1706) (t!6152 lt!69464)) (not (= (_1!1303 (h!2311 (t!6152 lt!69464))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!135836 () Bool)

(assert (=> b!135836 (= e!88421 (Some!175 (_2!1303 (h!2311 (t!6152 lt!69464)))))))

(declare-fun b!135839 () Bool)

(assert (=> b!135839 (= e!88422 None!174)))

(assert (= (and d!42479 c!25471) b!135836))

(assert (= (and d!42479 (not c!25471)) b!135837))

(assert (= (and b!135837 c!25472) b!135838))

(assert (= (and b!135837 (not c!25472)) b!135839))

(declare-fun m!161919 () Bool)

(assert (=> b!135838 m!161919))

(assert (=> b!133718 d!42479))

(assert (=> d!40471 d!40469))

(declare-fun d!42481 () Bool)

(assert (=> d!42481 (= (getValueByKey!170 lt!69318 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!42481 true))

(declare-fun _$22!489 () Unit!4132)

(assert (=> d!42481 (= (choose!834 lt!69318 (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) _$22!489)))

(declare-fun bs!5692 () Bool)

(assert (= bs!5692 d!42481))

(assert (=> bs!5692 m!156377))

(assert (=> d!40471 d!42481))

(declare-fun d!42483 () Bool)

(declare-fun res!65131 () Bool)

(declare-fun e!88423 () Bool)

(assert (=> d!42483 (=> res!65131 e!88423)))

(assert (=> d!42483 (= res!65131 (or ((_ is Nil!1707) lt!69318) ((_ is Nil!1707) (t!6152 lt!69318))))))

(assert (=> d!42483 (= (isStrictlySorted!317 lt!69318) e!88423)))

(declare-fun b!135840 () Bool)

(declare-fun e!88424 () Bool)

(assert (=> b!135840 (= e!88423 e!88424)))

(declare-fun res!65132 () Bool)

(assert (=> b!135840 (=> (not res!65132) (not e!88424))))

(assert (=> b!135840 (= res!65132 (bvslt (_1!1303 (h!2311 lt!69318)) (_1!1303 (h!2311 (t!6152 lt!69318)))))))

(declare-fun b!135841 () Bool)

(assert (=> b!135841 (= e!88424 (isStrictlySorted!317 (t!6152 lt!69318)))))

(assert (= (and d!42483 (not res!65131)) b!135840))

(assert (= (and b!135840 res!65132) b!135841))

(declare-fun m!161921 () Bool)

(assert (=> b!135841 m!161921))

(assert (=> d!40471 d!42483))

(assert (=> b!133627 d!40519))

(declare-fun d!42485 () Bool)

(assert (=> d!42485 (= (get!1482 (getValueByKey!170 (toList!851 lt!69213) lt!69224)) (v!3198 (getValueByKey!170 (toList!851 lt!69213) lt!69224)))))

(assert (=> d!40747 d!42485))

(declare-fun d!42487 () Bool)

(declare-fun c!25473 () Bool)

(assert (=> d!42487 (= c!25473 (and ((_ is Cons!1706) (toList!851 lt!69213)) (= (_1!1303 (h!2311 (toList!851 lt!69213))) lt!69224)))))

(declare-fun e!88425 () Option!176)

(assert (=> d!42487 (= (getValueByKey!170 (toList!851 lt!69213) lt!69224) e!88425)))

(declare-fun b!135844 () Bool)

(declare-fun e!88426 () Option!176)

(assert (=> b!135844 (= e!88426 (getValueByKey!170 (t!6152 (toList!851 lt!69213)) lt!69224))))

(declare-fun b!135843 () Bool)

(assert (=> b!135843 (= e!88425 e!88426)))

(declare-fun c!25474 () Bool)

(assert (=> b!135843 (= c!25474 (and ((_ is Cons!1706) (toList!851 lt!69213)) (not (= (_1!1303 (h!2311 (toList!851 lt!69213))) lt!69224))))))

(declare-fun b!135842 () Bool)

(assert (=> b!135842 (= e!88425 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69213)))))))

(declare-fun b!135845 () Bool)

(assert (=> b!135845 (= e!88426 None!174)))

(assert (= (and d!42487 c!25473) b!135842))

(assert (= (and d!42487 (not c!25473)) b!135843))

(assert (= (and b!135843 c!25474) b!135844))

(assert (= (and b!135843 (not c!25474)) b!135845))

(declare-fun m!161923 () Bool)

(assert (=> b!135844 m!161923))

(assert (=> d!40747 d!42487))

(declare-fun d!42489 () Bool)

(declare-fun res!65133 () Bool)

(declare-fun e!88427 () Bool)

(assert (=> d!42489 (=> res!65133 e!88427)))

(assert (=> d!42489 (= res!65133 (and ((_ is Cons!1706) lt!69693) (= (_1!1303 (h!2311 lt!69693)) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!42489 (= (containsKey!174 lt!69693 (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!88427)))

(declare-fun b!135846 () Bool)

(declare-fun e!88428 () Bool)

(assert (=> b!135846 (= e!88427 e!88428)))

(declare-fun res!65134 () Bool)

(assert (=> b!135846 (=> (not res!65134) (not e!88428))))

(assert (=> b!135846 (= res!65134 (and (or (not ((_ is Cons!1706) lt!69693)) (bvsle (_1!1303 (h!2311 lt!69693)) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Cons!1706) lt!69693) (bvslt (_1!1303 (h!2311 lt!69693)) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!135847 () Bool)

(assert (=> b!135847 (= e!88428 (containsKey!174 (t!6152 lt!69693) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!42489 (not res!65133)) b!135846))

(assert (= (and b!135846 res!65134) b!135847))

(declare-fun m!161925 () Bool)

(assert (=> b!135847 m!161925))

(assert (=> b!133454 d!42489))

(assert (=> b!133686 d!40861))

(declare-fun d!42491 () Bool)

(assert (=> d!42491 (isDefined!124 (getValueByKey!170 (toList!851 lt!69220) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70897 () Unit!4132)

(assert (=> d!42491 (= lt!70897 (choose!826 (toList!851 lt!69220) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88429 () Bool)

(assert (=> d!42491 e!88429))

(declare-fun res!65135 () Bool)

(assert (=> d!42491 (=> (not res!65135) (not e!88429))))

(assert (=> d!42491 (= res!65135 (isStrictlySorted!317 (toList!851 lt!69220)))))

(assert (=> d!42491 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69220) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70897)))

(declare-fun b!135848 () Bool)

(assert (=> b!135848 (= e!88429 (containsKey!174 (toList!851 lt!69220) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42491 res!65135) b!135848))

(assert (=> d!42491 m!157535))

(assert (=> d!42491 m!157535))

(assert (=> d!42491 m!157537))

(declare-fun m!161927 () Bool)

(assert (=> d!42491 m!161927))

(assert (=> d!42491 m!158589))

(assert (=> b!135848 m!157531))

(assert (=> b!133570 d!42491))

(declare-fun d!42493 () Bool)

(assert (=> d!42493 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69220) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69220) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5693 () Bool)

(assert (= bs!5693 d!42493))

(assert (=> bs!5693 m!157535))

(declare-fun m!161929 () Bool)

(assert (=> bs!5693 m!161929))

(assert (=> b!133570 d!42493))

(assert (=> b!133570 d!41885))

(declare-fun d!42495 () Bool)

(declare-fun c!25475 () Bool)

(assert (=> d!42495 (= c!25475 (and ((_ is Cons!1706) (toList!851 lt!69998)) (= (_1!1303 (h!2311 (toList!851 lt!69998))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun e!88430 () Option!176)

(assert (=> d!42495 (= (getValueByKey!170 (toList!851 lt!69998) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) e!88430)))

(declare-fun b!135851 () Bool)

(declare-fun e!88431 () Option!176)

(assert (=> b!135851 (= e!88431 (getValueByKey!170 (t!6152 (toList!851 lt!69998)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!135850 () Bool)

(assert (=> b!135850 (= e!88430 e!88431)))

(declare-fun c!25476 () Bool)

(assert (=> b!135850 (= c!25476 (and ((_ is Cons!1706) (toList!851 lt!69998)) (not (= (_1!1303 (h!2311 (toList!851 lt!69998))) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!135849 () Bool)

(assert (=> b!135849 (= e!88430 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69998)))))))

(declare-fun b!135852 () Bool)

(assert (=> b!135852 (= e!88431 None!174)))

(assert (= (and d!42495 c!25475) b!135849))

(assert (= (and d!42495 (not c!25475)) b!135850))

(assert (= (and b!135850 c!25476) b!135851))

(assert (= (and b!135850 (not c!25476)) b!135852))

(declare-fun m!161931 () Bool)

(assert (=> b!135851 m!161931))

(assert (=> b!133904 d!42495))

(declare-fun d!42497 () Bool)

(declare-fun lt!70898 () Bool)

(assert (=> d!42497 (= lt!70898 (select (content!133 (toList!851 lt!69567)) (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun e!88433 () Bool)

(assert (=> d!42497 (= lt!70898 e!88433)))

(declare-fun res!65136 () Bool)

(assert (=> d!42497 (=> (not res!65136) (not e!88433))))

(assert (=> d!42497 (= res!65136 ((_ is Cons!1706) (toList!851 lt!69567)))))

(assert (=> d!42497 (= (contains!889 (toList!851 lt!69567) (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70898)))

(declare-fun b!135853 () Bool)

(declare-fun e!88432 () Bool)

(assert (=> b!135853 (= e!88433 e!88432)))

(declare-fun res!65137 () Bool)

(assert (=> b!135853 (=> res!65137 e!88432)))

(assert (=> b!135853 (= res!65137 (= (h!2311 (toList!851 lt!69567)) (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!135854 () Bool)

(assert (=> b!135854 (= e!88432 (contains!889 (t!6152 (toList!851 lt!69567)) (ite (or c!24577 c!24575) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!42497 res!65136) b!135853))

(assert (= (and b!135853 (not res!65137)) b!135854))

(declare-fun m!161933 () Bool)

(assert (=> d!42497 m!161933))

(declare-fun m!161935 () Bool)

(assert (=> d!42497 m!161935))

(declare-fun m!161937 () Bool)

(assert (=> b!135854 m!161937))

(assert (=> b!133245 d!42497))

(declare-fun d!42499 () Bool)

(assert (=> d!42499 (arrayContainsKey!0 (_keys!4612 (_2!1304 lt!69115)) lt!70028 #b00000000000000000000000000000000)))

(declare-fun lt!70899 () Unit!4132)

(assert (=> d!42499 (= lt!70899 (choose!13 (_keys!4612 (_2!1304 lt!69115)) lt!70028 #b00000000000000000000000000000000))))

(assert (=> d!42499 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!42499 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 (_2!1304 lt!69115)) lt!70028 #b00000000000000000000000000000000) lt!70899)))

(declare-fun bs!5694 () Bool)

(assert (= bs!5694 d!42499))

(assert (=> bs!5694 m!158385))

(declare-fun m!161939 () Bool)

(assert (=> bs!5694 m!161939))

(assert (=> b!133933 d!42499))

(declare-fun d!42501 () Bool)

(declare-fun res!65138 () Bool)

(declare-fun e!88434 () Bool)

(assert (=> d!42501 (=> res!65138 e!88434)))

(assert (=> d!42501 (= res!65138 (= (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000) lt!70028))))

(assert (=> d!42501 (= (arrayContainsKey!0 (_keys!4612 (_2!1304 lt!69115)) lt!70028 #b00000000000000000000000000000000) e!88434)))

(declare-fun b!135855 () Bool)

(declare-fun e!88435 () Bool)

(assert (=> b!135855 (= e!88434 e!88435)))

(declare-fun res!65139 () Bool)

(assert (=> b!135855 (=> (not res!65139) (not e!88435))))

(assert (=> b!135855 (= res!65139 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(declare-fun b!135856 () Bool)

(assert (=> b!135856 (= e!88435 (arrayContainsKey!0 (_keys!4612 (_2!1304 lt!69115)) lt!70028 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!42501 (not res!65138)) b!135855))

(assert (= (and b!135855 res!65139) b!135856))

(assert (=> d!42501 m!156913))

(declare-fun m!161941 () Bool)

(assert (=> b!135856 m!161941))

(assert (=> b!133933 d!42501))

(declare-fun b!135857 () Bool)

(declare-fun c!25479 () Bool)

(declare-fun lt!70902 () (_ BitVec 64))

(assert (=> b!135857 (= c!25479 (= lt!70902 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88437 () SeekEntryResult!278)

(declare-fun e!88438 () SeekEntryResult!278)

(assert (=> b!135857 (= e!88437 e!88438)))

(declare-fun b!135858 () Bool)

(declare-fun e!88436 () SeekEntryResult!278)

(assert (=> b!135858 (= e!88436 Undefined!278)))

(declare-fun b!135859 () Bool)

(declare-fun lt!70901 () SeekEntryResult!278)

(assert (=> b!135859 (= e!88438 (seekKeyOrZeroReturnVacant!0 (x!15594 lt!70901) (index!3274 lt!70901) (index!3274 lt!70901) (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000) (_keys!4612 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115))))))

(declare-fun b!135860 () Bool)

(assert (=> b!135860 (= e!88437 (Found!278 (index!3274 lt!70901)))))

(declare-fun b!135861 () Bool)

(assert (=> b!135861 (= e!88436 e!88437)))

(assert (=> b!135861 (= lt!70902 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) (index!3274 lt!70901)))))

(declare-fun c!25478 () Bool)

(assert (=> b!135861 (= c!25478 (= lt!70902 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)))))

(declare-fun b!135862 () Bool)

(assert (=> b!135862 (= e!88438 (MissingZero!278 (index!3274 lt!70901)))))

(declare-fun d!42503 () Bool)

(declare-fun lt!70900 () SeekEntryResult!278)

(assert (=> d!42503 (and (or ((_ is Undefined!278) lt!70900) (not ((_ is Found!278) lt!70900)) (and (bvsge (index!3273 lt!70900) #b00000000000000000000000000000000) (bvslt (index!3273 lt!70900) (size!2518 (_keys!4612 (_2!1304 lt!69115)))))) (or ((_ is Undefined!278) lt!70900) ((_ is Found!278) lt!70900) (not ((_ is MissingZero!278) lt!70900)) (and (bvsge (index!3272 lt!70900) #b00000000000000000000000000000000) (bvslt (index!3272 lt!70900) (size!2518 (_keys!4612 (_2!1304 lt!69115)))))) (or ((_ is Undefined!278) lt!70900) ((_ is Found!278) lt!70900) ((_ is MissingZero!278) lt!70900) (not ((_ is MissingVacant!278) lt!70900)) (and (bvsge (index!3275 lt!70900) #b00000000000000000000000000000000) (bvslt (index!3275 lt!70900) (size!2518 (_keys!4612 (_2!1304 lt!69115)))))) (or ((_ is Undefined!278) lt!70900) (ite ((_ is Found!278) lt!70900) (= (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) (index!3273 lt!70900)) (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!278) lt!70900) (= (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) (index!3272 lt!70900)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!278) lt!70900) (= (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) (index!3275 lt!70900)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42503 (= lt!70900 e!88436)))

(declare-fun c!25477 () Bool)

(assert (=> d!42503 (= c!25477 (and ((_ is Intermediate!278) lt!70901) (undefined!1090 lt!70901)))))

(assert (=> d!42503 (= lt!70901 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000) (mask!7163 (_2!1304 lt!69115))) (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000) (_keys!4612 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115))))))

(assert (=> d!42503 (validMask!0 (mask!7163 (_2!1304 lt!69115)))))

(assert (=> d!42503 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) #b00000000000000000000000000000000) (_keys!4612 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115))) lt!70900)))

(assert (= (and d!42503 c!25477) b!135858))

(assert (= (and d!42503 (not c!25477)) b!135861))

(assert (= (and b!135861 c!25478) b!135860))

(assert (= (and b!135861 (not c!25478)) b!135857))

(assert (= (and b!135857 c!25479) b!135862))

(assert (= (and b!135857 (not c!25479)) b!135859))

(assert (=> b!135859 m!156913))

(declare-fun m!161943 () Bool)

(assert (=> b!135859 m!161943))

(declare-fun m!161945 () Bool)

(assert (=> b!135861 m!161945))

(assert (=> d!42503 m!156961))

(declare-fun m!161947 () Bool)

(assert (=> d!42503 m!161947))

(declare-fun m!161949 () Bool)

(assert (=> d!42503 m!161949))

(assert (=> d!42503 m!156913))

(declare-fun m!161951 () Bool)

(assert (=> d!42503 m!161951))

(declare-fun m!161953 () Bool)

(assert (=> d!42503 m!161953))

(assert (=> d!42503 m!161951))

(assert (=> d!42503 m!156913))

(declare-fun m!161955 () Bool)

(assert (=> d!42503 m!161955))

(assert (=> b!133933 d!42503))

(declare-fun d!42505 () Bool)

(declare-fun e!88439 () Bool)

(assert (=> d!42505 e!88439))

(declare-fun res!65140 () Bool)

(assert (=> d!42505 (=> res!65140 e!88439)))

(declare-fun lt!70904 () Bool)

(assert (=> d!42505 (= res!65140 (not lt!70904))))

(declare-fun lt!70906 () Bool)

(assert (=> d!42505 (= lt!70904 lt!70906)))

(declare-fun lt!70903 () Unit!4132)

(declare-fun e!88440 () Unit!4132)

(assert (=> d!42505 (= lt!70903 e!88440)))

(declare-fun c!25480 () Bool)

(assert (=> d!42505 (= c!25480 lt!70906)))

(assert (=> d!42505 (= lt!70906 (containsKey!174 (toList!851 lt!69756) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!42505 (= (contains!886 lt!69756 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!70904)))

(declare-fun b!135863 () Bool)

(declare-fun lt!70905 () Unit!4132)

(assert (=> b!135863 (= e!88440 lt!70905)))

(assert (=> b!135863 (= lt!70905 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69756) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135863 (isDefined!124 (getValueByKey!170 (toList!851 lt!69756) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135864 () Bool)

(declare-fun Unit!4276 () Unit!4132)

(assert (=> b!135864 (= e!88440 Unit!4276)))

(declare-fun b!135865 () Bool)

(assert (=> b!135865 (= e!88439 (isDefined!124 (getValueByKey!170 (toList!851 lt!69756) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!42505 c!25480) b!135863))

(assert (= (and d!42505 (not c!25480)) b!135864))

(assert (= (and d!42505 (not res!65140)) b!135865))

(assert (=> d!42505 m!156125))

(declare-fun m!161957 () Bool)

(assert (=> d!42505 m!161957))

(assert (=> b!135863 m!156125))

(declare-fun m!161959 () Bool)

(assert (=> b!135863 m!161959))

(assert (=> b!135863 m!156125))

(declare-fun m!161961 () Bool)

(assert (=> b!135863 m!161961))

(assert (=> b!135863 m!161961))

(declare-fun m!161963 () Bool)

(assert (=> b!135863 m!161963))

(assert (=> b!135865 m!156125))

(assert (=> b!135865 m!161961))

(assert (=> b!135865 m!161961))

(assert (=> b!135865 m!161963))

(assert (=> b!133514 d!42505))

(declare-fun d!42507 () Bool)

(declare-fun lt!70907 () Bool)

(assert (=> d!42507 (= lt!70907 (select (content!133 lt!69902) (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88442 () Bool)

(assert (=> d!42507 (= lt!70907 e!88442)))

(declare-fun res!65141 () Bool)

(assert (=> d!42507 (=> (not res!65141) (not e!88442))))

(assert (=> d!42507 (= res!65141 ((_ is Cons!1706) lt!69902))))

(assert (=> d!42507 (= (contains!889 lt!69902 (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70907)))

(declare-fun b!135866 () Bool)

(declare-fun e!88441 () Bool)

(assert (=> b!135866 (= e!88442 e!88441)))

(declare-fun res!65142 () Bool)

(assert (=> b!135866 (=> res!65142 e!88441)))

(assert (=> b!135866 (= res!65142 (= (h!2311 lt!69902) (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135867 () Bool)

(assert (=> b!135867 (= e!88441 (contains!889 (t!6152 lt!69902) (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42507 res!65141) b!135866))

(assert (= (and b!135866 (not res!65142)) b!135867))

(declare-fun m!161965 () Bool)

(assert (=> d!42507 m!161965))

(declare-fun m!161967 () Bool)

(assert (=> d!42507 m!161967))

(declare-fun m!161969 () Bool)

(assert (=> b!135867 m!161969))

(assert (=> b!133748 d!42507))

(declare-fun d!42509 () Bool)

(assert (=> d!42509 (arrayContainsKey!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) lt!69621 #b00000000000000000000000000000000)))

(declare-fun lt!70908 () Unit!4132)

(assert (=> d!42509 (= lt!70908 (choose!13 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) lt!69621 #b00000000000000000000000000000000))))

(assert (=> d!42509 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!42509 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) lt!69621 #b00000000000000000000000000000000) lt!70908)))

(declare-fun bs!5695 () Bool)

(assert (= bs!5695 d!42509))

(assert (=> bs!5695 m!157053))

(declare-fun m!161971 () Bool)

(assert (=> bs!5695 m!161971))

(assert (=> b!133358 d!42509))

(declare-fun d!42511 () Bool)

(declare-fun res!65143 () Bool)

(declare-fun e!88443 () Bool)

(assert (=> d!42511 (=> res!65143 e!88443)))

(assert (=> d!42511 (= res!65143 (= (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000) lt!69621))))

(assert (=> d!42511 (= (arrayContainsKey!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) lt!69621 #b00000000000000000000000000000000) e!88443)))

(declare-fun b!135868 () Bool)

(declare-fun e!88444 () Bool)

(assert (=> b!135868 (= e!88443 e!88444)))

(declare-fun res!65144 () Bool)

(assert (=> b!135868 (=> (not res!65144) (not e!88444))))

(assert (=> b!135868 (= res!65144 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(declare-fun b!135869 () Bool)

(assert (=> b!135869 (= e!88444 (arrayContainsKey!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) lt!69621 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!42511 (not res!65143)) b!135868))

(assert (= (and b!135868 res!65144) b!135869))

(assert (=> d!42511 m!157049))

(declare-fun m!161973 () Bool)

(assert (=> b!135869 m!161973))

(assert (=> b!133358 d!42511))

(declare-fun b!135870 () Bool)

(declare-fun c!25483 () Bool)

(declare-fun lt!70911 () (_ BitVec 64))

(assert (=> b!135870 (= c!25483 (= lt!70911 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88446 () SeekEntryResult!278)

(declare-fun e!88447 () SeekEntryResult!278)

(assert (=> b!135870 (= e!88446 e!88447)))

(declare-fun b!135871 () Bool)

(declare-fun e!88445 () SeekEntryResult!278)

(assert (=> b!135871 (= e!88445 Undefined!278)))

(declare-fun b!135872 () Bool)

(declare-fun lt!70910 () SeekEntryResult!278)

(assert (=> b!135872 (= e!88447 (seekKeyOrZeroReturnVacant!0 (x!15594 lt!70910) (index!3274 lt!70910) (index!3274 lt!70910) (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000) (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (mask!7163 newMap!16)))))

(declare-fun b!135873 () Bool)

(assert (=> b!135873 (= e!88446 (Found!278 (index!3274 lt!70910)))))

(declare-fun b!135874 () Bool)

(assert (=> b!135874 (= e!88445 e!88446)))

(assert (=> b!135874 (= lt!70911 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) (index!3274 lt!70910)))))

(declare-fun c!25482 () Bool)

(assert (=> b!135874 (= c!25482 (= lt!70911 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!135875 () Bool)

(assert (=> b!135875 (= e!88447 (MissingZero!278 (index!3274 lt!70910)))))

(declare-fun d!42513 () Bool)

(declare-fun lt!70909 () SeekEntryResult!278)

(assert (=> d!42513 (and (or ((_ is Undefined!278) lt!70909) (not ((_ is Found!278) lt!70909)) (and (bvsge (index!3273 lt!70909) #b00000000000000000000000000000000) (bvslt (index!3273 lt!70909) (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))) (or ((_ is Undefined!278) lt!70909) ((_ is Found!278) lt!70909) (not ((_ is MissingZero!278) lt!70909)) (and (bvsge (index!3272 lt!70909) #b00000000000000000000000000000000) (bvslt (index!3272 lt!70909) (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))) (or ((_ is Undefined!278) lt!70909) ((_ is Found!278) lt!70909) ((_ is MissingZero!278) lt!70909) (not ((_ is MissingVacant!278) lt!70909)) (and (bvsge (index!3275 lt!70909) #b00000000000000000000000000000000) (bvslt (index!3275 lt!70909) (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))) (or ((_ is Undefined!278) lt!70909) (ite ((_ is Found!278) lt!70909) (= (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) (index!3273 lt!70909)) (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!278) lt!70909) (= (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) (index!3272 lt!70909)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!278) lt!70909) (= (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) (index!3275 lt!70909)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42513 (= lt!70909 e!88445)))

(declare-fun c!25481 () Bool)

(assert (=> d!42513 (= c!25481 (and ((_ is Intermediate!278) lt!70910) (undefined!1090 lt!70910)))))

(assert (=> d!42513 (= lt!70910 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000) (mask!7163 newMap!16)) (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000) (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (mask!7163 newMap!16)))))

(assert (=> d!42513 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!42513 (= (seekEntryOrOpen!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) #b00000000000000000000000000000000) (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (mask!7163 newMap!16)) lt!70909)))

(assert (= (and d!42513 c!25481) b!135871))

(assert (= (and d!42513 (not c!25481)) b!135874))

(assert (= (and b!135874 c!25482) b!135873))

(assert (= (and b!135874 (not c!25482)) b!135870))

(assert (= (and b!135870 c!25483) b!135875))

(assert (= (and b!135870 (not c!25483)) b!135872))

(assert (=> b!135872 m!157049))

(declare-fun m!161975 () Bool)

(assert (=> b!135872 m!161975))

(declare-fun m!161977 () Bool)

(assert (=> b!135874 m!161977))

(assert (=> d!42513 m!156183))

(declare-fun m!161979 () Bool)

(assert (=> d!42513 m!161979))

(declare-fun m!161981 () Bool)

(assert (=> d!42513 m!161981))

(assert (=> d!42513 m!157049))

(declare-fun m!161983 () Bool)

(assert (=> d!42513 m!161983))

(declare-fun m!161985 () Bool)

(assert (=> d!42513 m!161985))

(assert (=> d!42513 m!161983))

(assert (=> d!42513 m!157049))

(declare-fun m!161987 () Bool)

(assert (=> d!42513 m!161987))

(assert (=> b!133358 d!42513))

(declare-fun d!42515 () Bool)

(assert (=> d!42515 (isDefined!124 (getValueByKey!170 (toList!851 lt!69466) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!70912 () Unit!4132)

(assert (=> d!42515 (= lt!70912 (choose!826 (toList!851 lt!69466) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88448 () Bool)

(assert (=> d!42515 e!88448))

(declare-fun res!65145 () Bool)

(assert (=> d!42515 (=> (not res!65145) (not e!88448))))

(assert (=> d!42515 (= res!65145 (isStrictlySorted!317 (toList!851 lt!69466)))))

(assert (=> d!42515 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69466) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70912)))

(declare-fun b!135876 () Bool)

(assert (=> b!135876 (= e!88448 (containsKey!174 (toList!851 lt!69466) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42515 res!65145) b!135876))

(assert (=> d!42515 m!156603))

(assert (=> d!42515 m!156603))

(assert (=> d!42515 m!157947))

(declare-fun m!161989 () Bool)

(assert (=> d!42515 m!161989))

(declare-fun m!161991 () Bool)

(assert (=> d!42515 m!161991))

(assert (=> b!135876 m!157943))

(assert (=> b!133713 d!42515))

(declare-fun d!42517 () Bool)

(assert (=> d!42517 (= (isDefined!124 (getValueByKey!170 (toList!851 lt!69466) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (not (isEmpty!413 (getValueByKey!170 (toList!851 lt!69466) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun bs!5696 () Bool)

(assert (= bs!5696 d!42517))

(assert (=> bs!5696 m!156603))

(declare-fun m!161993 () Bool)

(assert (=> bs!5696 m!161993))

(assert (=> b!133713 d!42517))

(assert (=> b!133713 d!40787))

(assert (=> bm!14758 d!41481))

(declare-fun d!42519 () Bool)

(declare-fun res!65146 () Bool)

(declare-fun e!88449 () Bool)

(assert (=> d!42519 (=> res!65146 e!88449)))

(assert (=> d!42519 (= res!65146 (and ((_ is Cons!1706) (t!6152 (toList!851 lt!69186))) (= (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42519 (= (containsKey!174 (t!6152 (toList!851 lt!69186)) #b0000000000000000000000000000000000000000000000000000000000000000) e!88449)))

(declare-fun b!135877 () Bool)

(declare-fun e!88450 () Bool)

(assert (=> b!135877 (= e!88449 e!88450)))

(declare-fun res!65147 () Bool)

(assert (=> b!135877 (=> (not res!65147) (not e!88450))))

(assert (=> b!135877 (= res!65147 (and (or (not ((_ is Cons!1706) (t!6152 (toList!851 lt!69186)))) (bvsle (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186)))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1706) (t!6152 (toList!851 lt!69186))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 lt!69186)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135878 () Bool)

(assert (=> b!135878 (= e!88450 (containsKey!174 (t!6152 (t!6152 (toList!851 lt!69186))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42519 (not res!65146)) b!135877))

(assert (= (and b!135877 res!65147) b!135878))

(declare-fun m!161995 () Bool)

(assert (=> b!135878 m!161995))

(assert (=> b!133830 d!42519))

(declare-fun d!42521 () Bool)

(declare-fun res!65148 () Bool)

(declare-fun e!88451 () Bool)

(assert (=> d!42521 (=> res!65148 e!88451)))

(assert (=> d!42521 (= res!65148 (and ((_ is Cons!1706) (t!6152 (toList!851 e!86457))) (= (_1!1303 (h!2311 (t!6152 (toList!851 e!86457)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(assert (=> d!42521 (= (containsKey!174 (t!6152 (toList!851 e!86457)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!88451)))

(declare-fun b!135879 () Bool)

(declare-fun e!88452 () Bool)

(assert (=> b!135879 (= e!88451 e!88452)))

(declare-fun res!65149 () Bool)

(assert (=> b!135879 (=> (not res!65149) (not e!88452))))

(assert (=> b!135879 (= res!65149 (and (or (not ((_ is Cons!1706) (t!6152 (toList!851 e!86457)))) (bvsle (_1!1303 (h!2311 (t!6152 (toList!851 e!86457)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) ((_ is Cons!1706) (t!6152 (toList!851 e!86457))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 e!86457)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun b!135880 () Bool)

(assert (=> b!135880 (= e!88452 (containsKey!174 (t!6152 (t!6152 (toList!851 e!86457))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!42521 (not res!65148)) b!135879))

(assert (= (and b!135879 res!65149) b!135880))

(assert (=> b!135880 m!155841))

(declare-fun m!161997 () Bool)

(assert (=> b!135880 m!161997))

(assert (=> b!133712 d!42521))

(declare-fun d!42523 () Bool)

(assert (=> d!42523 (isDefined!124 (getValueByKey!170 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun lt!70913 () Unit!4132)

(assert (=> d!42523 (= lt!70913 (choose!826 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(declare-fun e!88453 () Bool)

(assert (=> d!42523 e!88453))

(declare-fun res!65150 () Bool)

(assert (=> d!42523 (=> (not res!65150) (not e!88453))))

(assert (=> d!42523 (= res!65150 (isStrictlySorted!317 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))))

(assert (=> d!42523 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) lt!70913)))

(declare-fun b!135881 () Bool)

(assert (=> b!135881 (= e!88453 (containsKey!174 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!42523 res!65150) b!135881))

(assert (=> d!42523 m!155841))

(assert (=> d!42523 m!156741))

(assert (=> d!42523 m!156741))

(assert (=> d!42523 m!156743))

(assert (=> d!42523 m!155841))

(declare-fun m!161999 () Bool)

(assert (=> d!42523 m!161999))

(assert (=> d!42523 m!160821))

(assert (=> b!135881 m!155841))

(assert (=> b!135881 m!156737))

(assert (=> b!133132 d!42523))

(assert (=> b!133132 d!41849))

(assert (=> b!133132 d!41851))

(assert (=> d!40503 d!40425))

(declare-fun d!42525 () Bool)

(declare-fun res!65151 () Bool)

(declare-fun e!88454 () Bool)

(assert (=> d!42525 (=> res!65151 e!88454)))

(assert (=> d!42525 (= res!65151 (and ((_ is Cons!1706) (toList!851 lt!69176)) (= (_1!1303 (h!2311 (toList!851 lt!69176))) lt!69182)))))

(assert (=> d!42525 (= (containsKey!174 (toList!851 lt!69176) lt!69182) e!88454)))

(declare-fun b!135882 () Bool)

(declare-fun e!88455 () Bool)

(assert (=> b!135882 (= e!88454 e!88455)))

(declare-fun res!65152 () Bool)

(assert (=> b!135882 (=> (not res!65152) (not e!88455))))

(assert (=> b!135882 (= res!65152 (and (or (not ((_ is Cons!1706) (toList!851 lt!69176))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69176))) lt!69182)) ((_ is Cons!1706) (toList!851 lt!69176)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69176))) lt!69182)))))

(declare-fun b!135883 () Bool)

(assert (=> b!135883 (= e!88455 (containsKey!174 (t!6152 (toList!851 lt!69176)) lt!69182))))

(assert (= (and d!42525 (not res!65151)) b!135882))

(assert (= (and b!135882 res!65152) b!135883))

(declare-fun m!162001 () Bool)

(assert (=> b!135883 m!162001))

(assert (=> d!40645 d!42525))

(declare-fun d!42527 () Bool)

(declare-fun e!88456 () Bool)

(assert (=> d!42527 e!88456))

(declare-fun res!65153 () Bool)

(assert (=> d!42527 (=> res!65153 e!88456)))

(declare-fun lt!70915 () Bool)

(assert (=> d!42527 (= res!65153 (not lt!70915))))

(declare-fun lt!70917 () Bool)

(assert (=> d!42527 (= lt!70915 lt!70917)))

(declare-fun lt!70914 () Unit!4132)

(declare-fun e!88457 () Unit!4132)

(assert (=> d!42527 (= lt!70914 e!88457)))

(declare-fun c!25484 () Bool)

(assert (=> d!42527 (= c!25484 lt!70917)))

(assert (=> d!42527 (= lt!70917 (containsKey!174 (toList!851 lt!69735) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!42527 (= (contains!886 lt!69735 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) lt!70915)))

(declare-fun b!135884 () Bool)

(declare-fun lt!70916 () Unit!4132)

(assert (=> b!135884 (= e!88457 lt!70916)))

(assert (=> b!135884 (= lt!70916 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69735) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135884 (isDefined!124 (getValueByKey!170 (toList!851 lt!69735) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135885 () Bool)

(declare-fun Unit!4277 () Unit!4132)

(assert (=> b!135885 (= e!88457 Unit!4277)))

(declare-fun b!135886 () Bool)

(assert (=> b!135886 (= e!88456 (isDefined!124 (getValueByKey!170 (toList!851 lt!69735) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!42527 c!25484) b!135884))

(assert (= (and d!42527 (not c!25484)) b!135885))

(assert (= (and d!42527 (not res!65153)) b!135886))

(assert (=> d!42527 m!156125))

(declare-fun m!162003 () Bool)

(assert (=> d!42527 m!162003))

(assert (=> b!135884 m!156125))

(declare-fun m!162005 () Bool)

(assert (=> b!135884 m!162005))

(assert (=> b!135884 m!156125))

(assert (=> b!135884 m!159793))

(assert (=> b!135884 m!159793))

(declare-fun m!162007 () Bool)

(assert (=> b!135884 m!162007))

(assert (=> b!135886 m!156125))

(assert (=> b!135886 m!159793))

(assert (=> b!135886 m!159793))

(assert (=> b!135886 m!162007))

(assert (=> b!133505 d!42527))

(assert (=> b!133467 d!41949))

(declare-fun d!42529 () Bool)

(assert (=> d!42529 (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!70078 #b00000000000000000000000000000000)))

(declare-fun lt!70918 () Unit!4132)

(assert (=> d!42529 (= lt!70918 (choose!13 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!70078 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> d!42529 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!42529 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!70078 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) lt!70918)))

(declare-fun bs!5697 () Bool)

(assert (= bs!5697 d!42529))

(assert (=> bs!5697 m!158507))

(declare-fun m!162009 () Bool)

(assert (=> bs!5697 m!162009))

(assert (=> b!133998 d!42529))

(declare-fun d!42531 () Bool)

(declare-fun res!65154 () Bool)

(declare-fun e!88458 () Bool)

(assert (=> d!42531 (=> res!65154 e!88458)))

(assert (=> d!42531 (= res!65154 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000) lt!70078))))

(assert (=> d!42531 (= (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!70078 #b00000000000000000000000000000000) e!88458)))

(declare-fun b!135887 () Bool)

(declare-fun e!88459 () Bool)

(assert (=> b!135887 (= e!88458 e!88459)))

(declare-fun res!65155 () Bool)

(assert (=> b!135887 (=> (not res!65155) (not e!88459))))

(assert (=> b!135887 (= res!65155 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun b!135888 () Bool)

(assert (=> b!135888 (= e!88459 (arrayContainsKey!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) lt!70078 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!42531 (not res!65154)) b!135887))

(assert (= (and b!135887 res!65155) b!135888))

(assert (=> d!42531 m!156017))

(declare-fun m!162011 () Bool)

(assert (=> b!135888 m!162011))

(assert (=> b!133998 d!42531))

(declare-fun b!135889 () Bool)

(declare-fun c!25487 () Bool)

(declare-fun lt!70921 () (_ BitVec 64))

(assert (=> b!135889 (= c!25487 (= lt!70921 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88461 () SeekEntryResult!278)

(declare-fun e!88462 () SeekEntryResult!278)

(assert (=> b!135889 (= e!88461 e!88462)))

(declare-fun b!135890 () Bool)

(declare-fun e!88460 () SeekEntryResult!278)

(assert (=> b!135890 (= e!88460 Undefined!278)))

(declare-fun b!135891 () Bool)

(declare-fun lt!70920 () SeekEntryResult!278)

(assert (=> b!135891 (= e!88462 (seekKeyOrZeroReturnVacant!0 (x!15594 lt!70920) (index!3274 lt!70920) (index!3274 lt!70920) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!135892 () Bool)

(assert (=> b!135892 (= e!88461 (Found!278 (index!3274 lt!70920)))))

(declare-fun b!135893 () Bool)

(assert (=> b!135893 (= e!88460 e!88461)))

(assert (=> b!135893 (= lt!70921 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!70920)))))

(declare-fun c!25486 () Bool)

(assert (=> b!135893 (= c!25486 (= lt!70921 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!135894 () Bool)

(assert (=> b!135894 (= e!88462 (MissingZero!278 (index!3274 lt!70920)))))

(declare-fun d!42533 () Bool)

(declare-fun lt!70919 () SeekEntryResult!278)

(assert (=> d!42533 (and (or ((_ is Undefined!278) lt!70919) (not ((_ is Found!278) lt!70919)) (and (bvsge (index!3273 lt!70919) #b00000000000000000000000000000000) (bvslt (index!3273 lt!70919) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))) (or ((_ is Undefined!278) lt!70919) ((_ is Found!278) lt!70919) (not ((_ is MissingZero!278) lt!70919)) (and (bvsge (index!3272 lt!70919) #b00000000000000000000000000000000) (bvslt (index!3272 lt!70919) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))) (or ((_ is Undefined!278) lt!70919) ((_ is Found!278) lt!70919) ((_ is MissingZero!278) lt!70919) (not ((_ is MissingVacant!278) lt!70919)) (and (bvsge (index!3275 lt!70919) #b00000000000000000000000000000000) (bvslt (index!3275 lt!70919) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))) (or ((_ is Undefined!278) lt!70919) (ite ((_ is Found!278) lt!70919) (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3273 lt!70919)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!278) lt!70919) (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3272 lt!70919)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!278) lt!70919) (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3275 lt!70919)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42533 (= lt!70919 e!88460)))

(declare-fun c!25485 () Bool)

(assert (=> d!42533 (= c!25485 (and ((_ is Intermediate!278) lt!70920) (undefined!1090 lt!70920)))))

(assert (=> d!42533 (= lt!70920 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(assert (=> d!42533 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!42533 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) lt!70919)))

(assert (= (and d!42533 c!25485) b!135890))

(assert (= (and d!42533 (not c!25485)) b!135893))

(assert (= (and b!135893 c!25486) b!135892))

(assert (= (and b!135893 (not c!25486)) b!135889))

(assert (= (and b!135889 c!25487) b!135894))

(assert (= (and b!135889 (not c!25487)) b!135891))

(assert (=> b!135891 m!157863))

(declare-fun m!162013 () Bool)

(assert (=> b!135891 m!162013))

(declare-fun m!162015 () Bool)

(assert (=> b!135893 m!162015))

(assert (=> d!42533 m!155855))

(declare-fun m!162017 () Bool)

(assert (=> d!42533 m!162017))

(declare-fun m!162019 () Bool)

(assert (=> d!42533 m!162019))

(assert (=> d!42533 m!157863))

(declare-fun m!162021 () Bool)

(assert (=> d!42533 m!162021))

(declare-fun m!162023 () Bool)

(assert (=> d!42533 m!162023))

(assert (=> d!42533 m!162021))

(assert (=> d!42533 m!157863))

(declare-fun m!162025 () Bool)

(assert (=> d!42533 m!162025))

(assert (=> b!133998 d!42533))

(declare-fun d!42535 () Bool)

(declare-fun e!88463 () Bool)

(assert (=> d!42535 e!88463))

(declare-fun res!65156 () Bool)

(assert (=> d!42535 (=> res!65156 e!88463)))

(declare-fun lt!70923 () Bool)

(assert (=> d!42535 (= res!65156 (not lt!70923))))

(declare-fun lt!70925 () Bool)

(assert (=> d!42535 (= lt!70923 lt!70925)))

(declare-fun lt!70922 () Unit!4132)

(declare-fun e!88464 () Unit!4132)

(assert (=> d!42535 (= lt!70922 e!88464)))

(declare-fun c!25488 () Bool)

(assert (=> d!42535 (= c!25488 lt!70925)))

(assert (=> d!42535 (= lt!70925 (containsKey!174 (toList!851 lt!69842) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42535 (= (contains!886 lt!69842 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70923)))

(declare-fun b!135895 () Bool)

(declare-fun lt!70924 () Unit!4132)

(assert (=> b!135895 (= e!88464 lt!70924)))

(assert (=> b!135895 (= lt!70924 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69842) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135895 (isDefined!124 (getValueByKey!170 (toList!851 lt!69842) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135896 () Bool)

(declare-fun Unit!4278 () Unit!4132)

(assert (=> b!135896 (= e!88464 Unit!4278)))

(declare-fun b!135897 () Bool)

(assert (=> b!135897 (= e!88463 (isDefined!124 (getValueByKey!170 (toList!851 lt!69842) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42535 c!25488) b!135895))

(assert (= (and d!42535 (not c!25488)) b!135896))

(assert (= (and d!42535 (not res!65156)) b!135897))

(declare-fun m!162027 () Bool)

(assert (=> d!42535 m!162027))

(declare-fun m!162029 () Bool)

(assert (=> b!135895 m!162029))

(declare-fun m!162031 () Bool)

(assert (=> b!135895 m!162031))

(assert (=> b!135895 m!162031))

(declare-fun m!162033 () Bool)

(assert (=> b!135895 m!162033))

(assert (=> b!135897 m!162031))

(assert (=> b!135897 m!162031))

(assert (=> b!135897 m!162033))

(assert (=> d!40733 d!42535))

(assert (=> d!40733 d!40425))

(declare-fun c!25489 () Bool)

(declare-fun d!42537 () Bool)

(assert (=> d!42537 (= c!25489 (and ((_ is Cons!1706) (toList!851 lt!69726)) (= (_1!1303 (h!2311 (toList!851 lt!69726))) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun e!88465 () Option!176)

(assert (=> d!42537 (= (getValueByKey!170 (toList!851 lt!69726) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) e!88465)))

(declare-fun e!88466 () Option!176)

(declare-fun b!135900 () Bool)

(assert (=> b!135900 (= e!88466 (getValueByKey!170 (t!6152 (toList!851 lt!69726)) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!135899 () Bool)

(assert (=> b!135899 (= e!88465 e!88466)))

(declare-fun c!25490 () Bool)

(assert (=> b!135899 (= c!25490 (and ((_ is Cons!1706) (toList!851 lt!69726)) (not (= (_1!1303 (h!2311 (toList!851 lt!69726))) (_1!1303 (tuple2!2585 lt!69469 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))))

(declare-fun b!135898 () Bool)

(assert (=> b!135898 (= e!88465 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69726)))))))

(declare-fun b!135901 () Bool)

(assert (=> b!135901 (= e!88466 None!174)))

(assert (= (and d!42537 c!25489) b!135898))

(assert (= (and d!42537 (not c!25489)) b!135899))

(assert (= (and b!135899 c!25490) b!135900))

(assert (= (and b!135899 (not c!25490)) b!135901))

(declare-fun m!162035 () Bool)

(assert (=> b!135900 m!162035))

(assert (=> b!133489 d!42537))

(declare-fun d!42539 () Bool)

(assert (not d!42539))

(assert (=> b!133816 d!42539))

(declare-fun d!42541 () Bool)

(assert (=> d!42541 (= (apply!116 lt!69756 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1482 (getValueByKey!170 (toList!851 lt!69756) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5698 () Bool)

(assert (= bs!5698 d!42541))

(assert (=> bs!5698 m!161553))

(assert (=> bs!5698 m!161553))

(declare-fun m!162037 () Bool)

(assert (=> bs!5698 m!162037))

(assert (=> b!133530 d!42541))

(declare-fun d!42543 () Bool)

(declare-fun e!88471 () Bool)

(assert (=> d!42543 e!88471))

(declare-fun c!25491 () Bool)

(declare-fun lt!70926 () SeekEntryResult!278)

(assert (=> d!42543 (= c!25491 (and ((_ is Intermediate!278) lt!70926) (undefined!1090 lt!70926)))))

(declare-fun e!88467 () SeekEntryResult!278)

(assert (=> d!42543 (= lt!70926 e!88467)))

(declare-fun c!25492 () Bool)

(assert (=> d!42543 (= c!25492 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!70927 () (_ BitVec 64))

(assert (=> d!42543 (= lt!70927 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7163 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!42543 (validMask!0 (mask!7163 (v!3192 (underlying!451 thiss!992))))))

(assert (=> d!42543 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))) lt!70926)))

(declare-fun b!135902 () Bool)

(assert (=> b!135902 (and (bvsge (index!3274 lt!70926) #b00000000000000000000000000000000) (bvslt (index!3274 lt!70926) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun e!88470 () Bool)

(assert (=> b!135902 (= e!88470 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!70926)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135903 () Bool)

(assert (=> b!135903 (and (bvsge (index!3274 lt!70926) #b00000000000000000000000000000000) (bvslt (index!3274 lt!70926) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun res!65159 () Bool)

(assert (=> b!135903 (= res!65159 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!70926)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135903 (=> res!65159 e!88470)))

(declare-fun b!135904 () Bool)

(declare-fun e!88469 () SeekEntryResult!278)

(assert (=> b!135904 (= e!88467 e!88469)))

(declare-fun c!25493 () Bool)

(assert (=> b!135904 (= c!25493 (or (= lt!70927 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (= (bvadd lt!70927 lt!70927) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135905 () Bool)

(declare-fun e!88468 () Bool)

(assert (=> b!135905 (= e!88471 e!88468)))

(declare-fun res!65158 () Bool)

(assert (=> b!135905 (= res!65158 (and ((_ is Intermediate!278) lt!70926) (not (undefined!1090 lt!70926)) (bvslt (x!15594 lt!70926) #b01111111111111111111111111111110) (bvsge (x!15594 lt!70926) #b00000000000000000000000000000000) (bvsge (x!15594 lt!70926) #b00000000000000000000000000000000)))))

(assert (=> b!135905 (=> (not res!65158) (not e!88468))))

(declare-fun b!135906 () Bool)

(assert (=> b!135906 (= e!88469 (Intermediate!278 false (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7163 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!135907 () Bool)

(assert (=> b!135907 (= e!88467 (Intermediate!278 true (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7163 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!135908 () Bool)

(assert (=> b!135908 (= e!88469 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7163 (v!3192 (underlying!451 thiss!992)))) #b00000000000000000000000000000000 (mask!7163 (v!3192 (underlying!451 thiss!992)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4612 (v!3192 (underlying!451 thiss!992))) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(declare-fun b!135909 () Bool)

(assert (=> b!135909 (= e!88471 (bvsge (x!15594 lt!70926) #b01111111111111111111111111111110))))

(declare-fun b!135910 () Bool)

(assert (=> b!135910 (and (bvsge (index!3274 lt!70926) #b00000000000000000000000000000000) (bvslt (index!3274 lt!70926) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(declare-fun res!65157 () Bool)

(assert (=> b!135910 (= res!65157 (= (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (index!3274 lt!70926)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135910 (=> res!65157 e!88470)))

(assert (=> b!135910 (= e!88468 e!88470)))

(assert (= (and d!42543 c!25492) b!135907))

(assert (= (and d!42543 (not c!25492)) b!135904))

(assert (= (and b!135904 c!25493) b!135906))

(assert (= (and b!135904 (not c!25493)) b!135908))

(assert (= (and d!42543 c!25491) b!135909))

(assert (= (and d!42543 (not c!25491)) b!135905))

(assert (= (and b!135905 res!65158) b!135910))

(assert (= (and b!135910 (not res!65157)) b!135903))

(assert (= (and b!135903 (not res!65159)) b!135902))

(declare-fun m!162039 () Bool)

(assert (=> b!135903 m!162039))

(assert (=> d!42543 m!158127))

(declare-fun m!162041 () Bool)

(assert (=> d!42543 m!162041))

(assert (=> d!42543 m!155855))

(assert (=> b!135902 m!162039))

(assert (=> b!135908 m!158127))

(declare-fun m!162043 () Bool)

(assert (=> b!135908 m!162043))

(assert (=> b!135908 m!162043))

(assert (=> b!135908 m!156349))

(declare-fun m!162045 () Bool)

(assert (=> b!135908 m!162045))

(assert (=> b!135910 m!162039))

(assert (=> d!40871 d!42543))

(declare-fun d!42545 () Bool)

(declare-fun lt!70929 () (_ BitVec 32))

(declare-fun lt!70928 () (_ BitVec 32))

(assert (=> d!42545 (= lt!70929 (bvmul (bvxor lt!70928 (bvlshr lt!70928 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!42545 (= lt!70928 ((_ extract 31 0) (bvand (bvxor (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (bvlshr (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!42545 (and (bvsge (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000000) (let ((res!64076 (let ((h!2314 ((_ extract 31 0) (bvand (bvxor (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (bvlshr (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15697 (bvmul (bvxor h!2314 (bvlshr h!2314 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15697 (bvlshr x!15697 #b00000000000000000000000000001101)) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))) (and (bvslt res!64076 (bvadd (mask!7163 (v!3192 (underlying!451 thiss!992))) #b00000000000000000000000000000001)) (bvsge res!64076 #b00000000000000000000000000000000))))))

(assert (=> d!42545 (= (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7163 (v!3192 (underlying!451 thiss!992)))) (bvand (bvxor lt!70929 (bvlshr lt!70929 #b00000000000000000000000000001101)) (mask!7163 (v!3192 (underlying!451 thiss!992)))))))

(assert (=> d!40871 d!42545))

(assert (=> d!40871 d!40269))

(assert (=> b!133631 d!41745))

(declare-fun lt!70930 () Bool)

(declare-fun d!42547 () Bool)

(assert (=> d!42547 (= lt!70930 (select (content!133 (toList!851 lt!69731)) (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(declare-fun e!88473 () Bool)

(assert (=> d!42547 (= lt!70930 e!88473)))

(declare-fun res!65160 () Bool)

(assert (=> d!42547 (=> (not res!65160) (not e!88473))))

(assert (=> d!42547 (= res!65160 ((_ is Cons!1706) (toList!851 lt!69731)))))

(assert (=> d!42547 (= (contains!889 (toList!851 lt!69731) (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!70930)))

(declare-fun b!135911 () Bool)

(declare-fun e!88472 () Bool)

(assert (=> b!135911 (= e!88473 e!88472)))

(declare-fun res!65161 () Bool)

(assert (=> b!135911 (=> res!65161 e!88472)))

(assert (=> b!135911 (= res!65161 (= (h!2311 (toList!851 lt!69731)) (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(declare-fun b!135912 () Bool)

(assert (=> b!135912 (= e!88472 (contains!889 (t!6152 (toList!851 lt!69731)) (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(assert (= (and d!42547 res!65160) b!135911))

(assert (= (and b!135911 (not res!65161)) b!135912))

(declare-fun m!162047 () Bool)

(assert (=> d!42547 m!162047))

(declare-fun m!162049 () Bool)

(assert (=> d!42547 m!162049))

(declare-fun m!162051 () Bool)

(assert (=> b!135912 m!162051))

(assert (=> b!133493 d!42547))

(assert (=> bm!14769 d!41099))

(declare-fun d!42549 () Bool)

(declare-fun res!65162 () Bool)

(declare-fun e!88474 () Bool)

(assert (=> d!42549 (=> res!65162 e!88474)))

(assert (=> d!42549 (= res!65162 (and ((_ is Cons!1706) (toList!851 lt!69484)) (= (_1!1303 (h!2311 (toList!851 lt!69484))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42549 (= (containsKey!174 (toList!851 lt!69484) #b1000000000000000000000000000000000000000000000000000000000000000) e!88474)))

(declare-fun b!135913 () Bool)

(declare-fun e!88475 () Bool)

(assert (=> b!135913 (= e!88474 e!88475)))

(declare-fun res!65163 () Bool)

(assert (=> b!135913 (=> (not res!65163) (not e!88475))))

(assert (=> b!135913 (= res!65163 (and (or (not ((_ is Cons!1706) (toList!851 lt!69484))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69484))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1706) (toList!851 lt!69484)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69484))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135914 () Bool)

(assert (=> b!135914 (= e!88475 (containsKey!174 (t!6152 (toList!851 lt!69484)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42549 (not res!65162)) b!135913))

(assert (= (and b!135913 res!65163) b!135914))

(declare-fun m!162053 () Bool)

(assert (=> b!135914 m!162053))

(assert (=> d!40661 d!42549))

(declare-fun d!42551 () Bool)

(declare-fun e!88476 () Bool)

(assert (=> d!42551 e!88476))

(declare-fun res!65164 () Bool)

(assert (=> d!42551 (=> res!65164 e!88476)))

(declare-fun lt!70932 () Bool)

(assert (=> d!42551 (= res!65164 (not lt!70932))))

(declare-fun lt!70934 () Bool)

(assert (=> d!42551 (= lt!70932 lt!70934)))

(declare-fun lt!70931 () Unit!4132)

(declare-fun e!88477 () Unit!4132)

(assert (=> d!42551 (= lt!70931 e!88477)))

(declare-fun c!25494 () Bool)

(assert (=> d!42551 (= c!25494 lt!70934)))

(assert (=> d!42551 (= lt!70934 (containsKey!174 (toList!851 lt!69805) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42551 (= (contains!886 lt!69805 (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))) lt!70932)))

(declare-fun b!135915 () Bool)

(declare-fun lt!70933 () Unit!4132)

(assert (=> b!135915 (= e!88477 lt!70933)))

(assert (=> b!135915 (= lt!70933 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69805) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))

(assert (=> b!135915 (isDefined!124 (getValueByKey!170 (toList!851 lt!69805) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135916 () Bool)

(declare-fun Unit!4279 () Unit!4132)

(assert (=> b!135916 (= e!88477 Unit!4279)))

(declare-fun b!135917 () Bool)

(assert (=> b!135917 (= e!88476 (isDefined!124 (getValueByKey!170 (toList!851 lt!69805) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!42551 c!25494) b!135915))

(assert (= (and d!42551 (not c!25494)) b!135916))

(assert (= (and d!42551 (not res!65164)) b!135917))

(declare-fun m!162055 () Bool)

(assert (=> d!42551 m!162055))

(declare-fun m!162057 () Bool)

(assert (=> b!135915 m!162057))

(assert (=> b!135915 m!157621))

(assert (=> b!135915 m!157621))

(declare-fun m!162059 () Bool)

(assert (=> b!135915 m!162059))

(assert (=> b!135917 m!157621))

(assert (=> b!135917 m!157621))

(assert (=> b!135917 m!162059))

(assert (=> d!40701 d!42551))

(declare-fun d!42553 () Bool)

(declare-fun c!25495 () Bool)

(assert (=> d!42553 (= c!25495 (and ((_ is Cons!1706) lt!69803) (= (_1!1303 (h!2311 lt!69803)) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))))))

(declare-fun e!88478 () Option!176)

(assert (=> d!42553 (= (getValueByKey!170 lt!69803 (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))) e!88478)))

(declare-fun b!135920 () Bool)

(declare-fun e!88479 () Option!176)

(assert (=> b!135920 (= e!88479 (getValueByKey!170 (t!6152 lt!69803) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135919 () Bool)

(assert (=> b!135919 (= e!88478 e!88479)))

(declare-fun c!25496 () Bool)

(assert (=> b!135919 (= c!25496 (and ((_ is Cons!1706) lt!69803) (not (= (_1!1303 (h!2311 lt!69803)) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!135918 () Bool)

(assert (=> b!135918 (= e!88478 (Some!175 (_2!1303 (h!2311 lt!69803))))))

(declare-fun b!135921 () Bool)

(assert (=> b!135921 (= e!88479 None!174)))

(assert (= (and d!42553 c!25495) b!135918))

(assert (= (and d!42553 (not c!25495)) b!135919))

(assert (= (and b!135919 c!25496) b!135920))

(assert (= (and b!135919 (not c!25496)) b!135921))

(declare-fun m!162061 () Bool)

(assert (=> b!135920 m!162061))

(assert (=> d!40701 d!42553))

(declare-fun d!42555 () Bool)

(assert (=> d!42555 (= (getValueByKey!170 lt!69803 (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70935 () Unit!4132)

(assert (=> d!42555 (= lt!70935 (choose!834 lt!69803 (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))

(declare-fun e!88480 () Bool)

(assert (=> d!42555 e!88480))

(declare-fun res!65165 () Bool)

(assert (=> d!42555 (=> (not res!65165) (not e!88480))))

(assert (=> d!42555 (= res!65165 (isStrictlySorted!317 lt!69803))))

(assert (=> d!42555 (= (lemmaContainsTupThenGetReturnValue!88 lt!69803 (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))) lt!70935)))

(declare-fun b!135922 () Bool)

(declare-fun res!65166 () Bool)

(assert (=> b!135922 (=> (not res!65166) (not e!88480))))

(assert (=> b!135922 (= res!65166 (containsKey!174 lt!69803 (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135923 () Bool)

(assert (=> b!135923 (= e!88480 (contains!889 lt!69803 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!42555 res!65165) b!135922))

(assert (= (and b!135922 res!65166) b!135923))

(assert (=> d!42555 m!157615))

(declare-fun m!162063 () Bool)

(assert (=> d!42555 m!162063))

(declare-fun m!162065 () Bool)

(assert (=> d!42555 m!162065))

(declare-fun m!162067 () Bool)

(assert (=> b!135922 m!162067))

(declare-fun m!162069 () Bool)

(assert (=> b!135923 m!162069))

(assert (=> d!40701 d!42555))

(declare-fun b!135924 () Bool)

(declare-fun e!88485 () List!1710)

(assert (=> b!135924 (= e!88485 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69234)) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135925 () Bool)

(declare-fun e!88484 () List!1710)

(declare-fun call!14913 () List!1710)

(assert (=> b!135925 (= e!88484 call!14913)))

(declare-fun b!135926 () Bool)

(declare-fun res!65168 () Bool)

(declare-fun e!88482 () Bool)

(assert (=> b!135926 (=> (not res!65168) (not e!88482))))

(declare-fun lt!70936 () List!1710)

(assert (=> b!135926 (= res!65168 (containsKey!174 lt!70936 (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))

(declare-fun bm!14908 () Bool)

(declare-fun c!25498 () Bool)

(assert (=> bm!14908 (= call!14913 ($colon$colon!91 e!88485 (ite c!25498 (h!2311 (toList!851 lt!69234)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))))))))

(declare-fun c!25499 () Bool)

(assert (=> bm!14908 (= c!25499 c!25498)))

(declare-fun c!25497 () Bool)

(declare-fun b!135927 () Bool)

(declare-fun c!25500 () Bool)

(assert (=> b!135927 (= e!88485 (ite c!25497 (t!6152 (toList!851 lt!69234)) (ite c!25500 (Cons!1706 (h!2311 (toList!851 lt!69234)) (t!6152 (toList!851 lt!69234))) Nil!1707)))))

(declare-fun d!42557 () Bool)

(assert (=> d!42557 e!88482))

(declare-fun res!65167 () Bool)

(assert (=> d!42557 (=> (not res!65167) (not e!88482))))

(assert (=> d!42557 (= res!65167 (isStrictlySorted!317 lt!70936))))

(assert (=> d!42557 (= lt!70936 e!88484)))

(assert (=> d!42557 (= c!25498 (and ((_ is Cons!1706) (toList!851 lt!69234)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69234))) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))))))

(assert (=> d!42557 (isStrictlySorted!317 (toList!851 lt!69234))))

(assert (=> d!42557 (= (insertStrictlySorted!91 (toList!851 lt!69234) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16)))) lt!70936)))

(declare-fun b!135928 () Bool)

(declare-fun e!88481 () List!1710)

(assert (=> b!135928 (= e!88484 e!88481)))

(assert (=> b!135928 (= c!25497 (and ((_ is Cons!1706) (toList!851 lt!69234)) (= (_1!1303 (h!2311 (toList!851 lt!69234))) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))))))

(declare-fun b!135929 () Bool)

(declare-fun e!88483 () List!1710)

(declare-fun call!14911 () List!1710)

(assert (=> b!135929 (= e!88483 call!14911)))

(declare-fun b!135930 () Bool)

(declare-fun call!14912 () List!1710)

(assert (=> b!135930 (= e!88481 call!14912)))

(declare-fun b!135931 () Bool)

(assert (=> b!135931 (= e!88482 (contains!889 lt!70936 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))))))

(declare-fun bm!14909 () Bool)

(assert (=> bm!14909 (= call!14912 call!14913)))

(declare-fun bm!14910 () Bool)

(assert (=> bm!14910 (= call!14911 call!14912)))

(declare-fun b!135932 () Bool)

(assert (=> b!135932 (= c!25500 (and ((_ is Cons!1706) (toList!851 lt!69234)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69234))) (_1!1303 (tuple2!2585 lt!69235 (zeroValue!2719 newMap!16))))))))

(assert (=> b!135932 (= e!88481 e!88483)))

(declare-fun b!135933 () Bool)

(assert (=> b!135933 (= e!88483 call!14911)))

(assert (= (and d!42557 c!25498) b!135925))

(assert (= (and d!42557 (not c!25498)) b!135928))

(assert (= (and b!135928 c!25497) b!135930))

(assert (= (and b!135928 (not c!25497)) b!135932))

(assert (= (and b!135932 c!25500) b!135933))

(assert (= (and b!135932 (not c!25500)) b!135929))

(assert (= (or b!135933 b!135929) bm!14910))

(assert (= (or b!135930 bm!14910) bm!14909))

(assert (= (or b!135925 bm!14909) bm!14908))

(assert (= (and bm!14908 c!25499) b!135924))

(assert (= (and bm!14908 (not c!25499)) b!135927))

(assert (= (and d!42557 res!65167) b!135926))

(assert (= (and b!135926 res!65168) b!135931))

(declare-fun m!162071 () Bool)

(assert (=> b!135931 m!162071))

(declare-fun m!162073 () Bool)

(assert (=> b!135926 m!162073))

(declare-fun m!162075 () Bool)

(assert (=> b!135924 m!162075))

(declare-fun m!162077 () Bool)

(assert (=> d!42557 m!162077))

(declare-fun m!162079 () Bool)

(assert (=> d!42557 m!162079))

(declare-fun m!162081 () Bool)

(assert (=> bm!14908 m!162081))

(assert (=> d!40701 d!42557))

(declare-fun e!88490 () List!1710)

(declare-fun b!135934 () Bool)

(assert (=> b!135934 (= e!88490 (insertStrictlySorted!91 (t!6152 (t!6152 (toList!851 (ite c!24523 call!14580 call!14599)))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135935 () Bool)

(declare-fun e!88489 () List!1710)

(declare-fun call!14916 () List!1710)

(assert (=> b!135935 (= e!88489 call!14916)))

(declare-fun b!135936 () Bool)

(declare-fun res!65170 () Bool)

(declare-fun e!88487 () Bool)

(assert (=> b!135936 (=> (not res!65170) (not e!88487))))

(declare-fun lt!70937 () List!1710)

(assert (=> b!135936 (= res!65170 (containsKey!174 lt!70937 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun c!25502 () Bool)

(declare-fun bm!14911 () Bool)

(assert (=> bm!14911 (= call!14916 ($colon$colon!91 e!88490 (ite c!25502 (h!2311 (t!6152 (toList!851 (ite c!24523 call!14580 call!14599)))) (tuple2!2585 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!25503 () Bool)

(assert (=> bm!14911 (= c!25503 c!25502)))

(declare-fun c!25501 () Bool)

(declare-fun c!25504 () Bool)

(declare-fun b!135937 () Bool)

(assert (=> b!135937 (= e!88490 (ite c!25501 (t!6152 (t!6152 (toList!851 (ite c!24523 call!14580 call!14599)))) (ite c!25504 (Cons!1706 (h!2311 (t!6152 (toList!851 (ite c!24523 call!14580 call!14599)))) (t!6152 (t!6152 (toList!851 (ite c!24523 call!14580 call!14599))))) Nil!1707)))))

(declare-fun d!42559 () Bool)

(assert (=> d!42559 e!88487))

(declare-fun res!65169 () Bool)

(assert (=> d!42559 (=> (not res!65169) (not e!88487))))

(assert (=> d!42559 (= res!65169 (isStrictlySorted!317 lt!70937))))

(assert (=> d!42559 (= lt!70937 e!88489)))

(assert (=> d!42559 (= c!25502 (and ((_ is Cons!1706) (t!6152 (toList!851 (ite c!24523 call!14580 call!14599)))) (bvslt (_1!1303 (h!2311 (t!6152 (toList!851 (ite c!24523 call!14580 call!14599))))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!42559 (isStrictlySorted!317 (t!6152 (toList!851 (ite c!24523 call!14580 call!14599))))))

(assert (=> d!42559 (= (insertStrictlySorted!91 (t!6152 (toList!851 (ite c!24523 call!14580 call!14599))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70937)))

(declare-fun b!135938 () Bool)

(declare-fun e!88486 () List!1710)

(assert (=> b!135938 (= e!88489 e!88486)))

(assert (=> b!135938 (= c!25501 (and ((_ is Cons!1706) (t!6152 (toList!851 (ite c!24523 call!14580 call!14599)))) (= (_1!1303 (h!2311 (t!6152 (toList!851 (ite c!24523 call!14580 call!14599))))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135939 () Bool)

(declare-fun e!88488 () List!1710)

(declare-fun call!14914 () List!1710)

(assert (=> b!135939 (= e!88488 call!14914)))

(declare-fun b!135940 () Bool)

(declare-fun call!14915 () List!1710)

(assert (=> b!135940 (= e!88486 call!14915)))

(declare-fun b!135941 () Bool)

(assert (=> b!135941 (= e!88487 (contains!889 lt!70937 (tuple2!2585 (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bm!14912 () Bool)

(assert (=> bm!14912 (= call!14915 call!14916)))

(declare-fun bm!14913 () Bool)

(assert (=> bm!14913 (= call!14914 call!14915)))

(declare-fun b!135942 () Bool)

(assert (=> b!135942 (= c!25504 (and ((_ is Cons!1706) (t!6152 (toList!851 (ite c!24523 call!14580 call!14599)))) (bvsgt (_1!1303 (h!2311 (t!6152 (toList!851 (ite c!24523 call!14580 call!14599))))) (_1!1303 (ite c!24523 (ite c!24530 (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!135942 (= e!88486 e!88488)))

(declare-fun b!135943 () Bool)

(assert (=> b!135943 (= e!88488 call!14914)))

(assert (= (and d!42559 c!25502) b!135935))

(assert (= (and d!42559 (not c!25502)) b!135938))

(assert (= (and b!135938 c!25501) b!135940))

(assert (= (and b!135938 (not c!25501)) b!135942))

(assert (= (and b!135942 c!25504) b!135943))

(assert (= (and b!135942 (not c!25504)) b!135939))

(assert (= (or b!135943 b!135939) bm!14913))

(assert (= (or b!135940 bm!14913) bm!14912))

(assert (= (or b!135935 bm!14912) bm!14911))

(assert (= (and bm!14911 c!25503) b!135934))

(assert (= (and bm!14911 (not c!25503)) b!135937))

(assert (= (and d!42559 res!65169) b!135936))

(assert (= (and b!135936 res!65170) b!135941))

(declare-fun m!162083 () Bool)

(assert (=> b!135941 m!162083))

(declare-fun m!162085 () Bool)

(assert (=> b!135936 m!162085))

(declare-fun m!162087 () Bool)

(assert (=> b!135934 m!162087))

(declare-fun m!162089 () Bool)

(assert (=> d!42559 m!162089))

(assert (=> d!42559 m!160777))

(declare-fun m!162091 () Bool)

(assert (=> bm!14911 m!162091))

(assert (=> b!133722 d!42559))

(declare-fun d!42561 () Bool)

(assert (=> d!42561 (= (apply!116 (+!163 lt!69348 (tuple2!2585 lt!69365 (minValue!2719 newMap!16))) lt!69353) (apply!116 lt!69348 lt!69353))))

(assert (=> d!42561 true))

(declare-fun _$34!991 () Unit!4132)

(assert (=> d!42561 (= (choose!828 lt!69348 lt!69365 (minValue!2719 newMap!16) lt!69353) _$34!991)))

(declare-fun bs!5699 () Bool)

(assert (= bs!5699 d!42561))

(assert (=> bs!5699 m!156497))

(assert (=> bs!5699 m!156497))

(assert (=> bs!5699 m!156499))

(assert (=> bs!5699 m!156507))

(assert (=> d!40943 d!42561))

(assert (=> d!40943 d!40933))

(declare-fun d!42563 () Bool)

(declare-fun e!88491 () Bool)

(assert (=> d!42563 e!88491))

(declare-fun res!65171 () Bool)

(assert (=> d!42563 (=> res!65171 e!88491)))

(declare-fun lt!70939 () Bool)

(assert (=> d!42563 (= res!65171 (not lt!70939))))

(declare-fun lt!70941 () Bool)

(assert (=> d!42563 (= lt!70939 lt!70941)))

(declare-fun lt!70938 () Unit!4132)

(declare-fun e!88492 () Unit!4132)

(assert (=> d!42563 (= lt!70938 e!88492)))

(declare-fun c!25505 () Bool)

(assert (=> d!42563 (= c!25505 lt!70941)))

(assert (=> d!42563 (= lt!70941 (containsKey!174 (toList!851 lt!69348) lt!69353))))

(assert (=> d!42563 (= (contains!886 lt!69348 lt!69353) lt!70939)))

(declare-fun b!135944 () Bool)

(declare-fun lt!70940 () Unit!4132)

(assert (=> b!135944 (= e!88492 lt!70940)))

(assert (=> b!135944 (= lt!70940 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69348) lt!69353))))

(assert (=> b!135944 (isDefined!124 (getValueByKey!170 (toList!851 lt!69348) lt!69353))))

(declare-fun b!135945 () Bool)

(declare-fun Unit!4280 () Unit!4132)

(assert (=> b!135945 (= e!88492 Unit!4280)))

(declare-fun b!135946 () Bool)

(assert (=> b!135946 (= e!88491 (isDefined!124 (getValueByKey!170 (toList!851 lt!69348) lt!69353)))))

(assert (= (and d!42563 c!25505) b!135944))

(assert (= (and d!42563 (not c!25505)) b!135945))

(assert (= (and d!42563 (not res!65171)) b!135946))

(declare-fun m!162093 () Bool)

(assert (=> d!42563 m!162093))

(declare-fun m!162095 () Bool)

(assert (=> b!135944 m!162095))

(assert (=> b!135944 m!158327))

(assert (=> b!135944 m!158327))

(declare-fun m!162097 () Bool)

(assert (=> b!135944 m!162097))

(assert (=> b!135946 m!158327))

(assert (=> b!135946 m!158327))

(assert (=> b!135946 m!162097))

(assert (=> d!40943 d!42563))

(assert (=> d!40943 d!40925))

(assert (=> d!40943 d!40931))

(declare-fun d!42565 () Bool)

(assert (=> d!42565 (= ($colon$colon!91 e!86871 (ite c!24718 (h!2311 (toList!851 lt!69176)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (Cons!1706 (ite c!24718 (h!2311 (toList!851 lt!69176)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) e!86871))))

(assert (=> bm!14692 d!42565))

(declare-fun b!135947 () Bool)

(declare-fun e!88493 () Bool)

(declare-fun call!14917 () Bool)

(assert (=> b!135947 (= e!88493 call!14917)))

(declare-fun b!135948 () Bool)

(declare-fun e!88494 () Bool)

(assert (=> b!135948 (= e!88494 e!88493)))

(declare-fun lt!70942 () (_ BitVec 64))

(assert (=> b!135948 (= lt!70942 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!70944 () Unit!4132)

(assert (=> b!135948 (= lt!70944 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) lt!70942 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!135948 (arrayContainsKey!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) lt!70942 #b00000000000000000000000000000000)))

(declare-fun lt!70943 () Unit!4132)

(assert (=> b!135948 (= lt!70943 lt!70944)))

(declare-fun res!65173 () Bool)

(assert (=> b!135948 (= res!65173 (= (seekEntryOrOpen!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (mask!7163 newMap!16)) (Found!278 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135948 (=> (not res!65173) (not e!88493))))

(declare-fun d!42567 () Bool)

(declare-fun res!65172 () Bool)

(declare-fun e!88495 () Bool)

(assert (=> d!42567 (=> res!65172 e!88495)))

(assert (=> d!42567 (= res!65172 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(assert (=> d!42567 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (mask!7163 newMap!16)) e!88495)))

(declare-fun b!135949 () Bool)

(assert (=> b!135949 (= e!88495 e!88494)))

(declare-fun c!25506 () Bool)

(assert (=> b!135949 (= c!25506 (validKeyInArray!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135950 () Bool)

(assert (=> b!135950 (= e!88494 call!14917)))

(declare-fun bm!14914 () Bool)

(assert (=> bm!14914 (= call!14917 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (mask!7163 newMap!16)))))

(assert (= (and d!42567 (not res!65172)) b!135949))

(assert (= (and b!135949 c!25506) b!135948))

(assert (= (and b!135949 (not c!25506)) b!135950))

(assert (= (and b!135948 res!65173) b!135947))

(assert (= (or b!135947 b!135950) bm!14914))

(assert (=> b!135948 m!160053))

(declare-fun m!162099 () Bool)

(assert (=> b!135948 m!162099))

(declare-fun m!162101 () Bool)

(assert (=> b!135948 m!162101))

(assert (=> b!135948 m!160053))

(declare-fun m!162103 () Bool)

(assert (=> b!135948 m!162103))

(assert (=> b!135949 m!160053))

(assert (=> b!135949 m!160053))

(assert (=> b!135949 m!160055))

(declare-fun m!162105 () Bool)

(assert (=> bm!14914 m!162105))

(assert (=> bm!14696 d!42567))

(declare-fun d!42569 () Bool)

(assert (=> d!42569 (= (get!1482 (getValueByKey!170 (toList!851 lt!69220) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3198 (getValueByKey!170 (toList!851 lt!69220) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40951 d!42569))

(assert (=> d!40951 d!41035))

(assert (=> b!133344 d!42045))

(assert (=> b!133262 d!41505))

(assert (=> d!40649 d!40651))

(assert (=> d!40649 d!40653))

(declare-fun d!42571 () Bool)

(assert (=> d!42571 (isDefined!124 (getValueByKey!170 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42571 true))

(declare-fun _$12!405 () Unit!4132)

(assert (=> d!42571 (= (choose!826 (toList!851 lt!69186) #b1000000000000000000000000000000000000000000000000000000000000000) _$12!405)))

(declare-fun bs!5700 () Bool)

(assert (= bs!5700 d!42571))

(assert (=> bs!5700 m!156591))

(assert (=> bs!5700 m!156591))

(assert (=> bs!5700 m!156659))

(assert (=> d!40649 d!42571))

(assert (=> d!40649 d!41167))

(assert (=> d!40671 d!40329))

(declare-fun d!42573 () Bool)

(declare-fun c!25507 () Bool)

(assert (=> d!42573 (= c!25507 (and ((_ is Cons!1706) (toList!851 lt!70002)) (= (_1!1303 (h!2311 (toList!851 lt!70002))) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16))))))))

(declare-fun e!88496 () Option!176)

(assert (=> d!42573 (= (getValueByKey!170 (toList!851 lt!70002) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))) e!88496)))

(declare-fun b!135953 () Bool)

(declare-fun e!88497 () Option!176)

(assert (=> b!135953 (= e!88497 (getValueByKey!170 (t!6152 (toList!851 lt!70002)) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))

(declare-fun b!135952 () Bool)

(assert (=> b!135952 (= e!88496 e!88497)))

(declare-fun c!25508 () Bool)

(assert (=> b!135952 (= c!25508 (and ((_ is Cons!1706) (toList!851 lt!70002)) (not (= (_1!1303 (h!2311 (toList!851 lt!70002))) (_1!1303 (tuple2!2585 lt!69356 (minValue!2719 newMap!16)))))))))

(declare-fun b!135951 () Bool)

(assert (=> b!135951 (= e!88496 (Some!175 (_2!1303 (h!2311 (toList!851 lt!70002)))))))

(declare-fun b!135954 () Bool)

(assert (=> b!135954 (= e!88497 None!174)))

(assert (= (and d!42573 c!25507) b!135951))

(assert (= (and d!42573 (not c!25507)) b!135952))

(assert (= (and b!135952 c!25508) b!135953))

(assert (= (and b!135952 (not c!25508)) b!135954))

(declare-fun m!162107 () Bool)

(assert (=> b!135953 m!162107))

(assert (=> b!133910 d!42573))

(assert (=> d!40721 d!40713))

(assert (=> d!40721 d!40705))

(declare-fun d!42575 () Bool)

(assert (=> d!42575 (contains!886 (+!163 lt!69240 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))) lt!69246)))

(assert (=> d!42575 true))

(declare-fun _$35!384 () Unit!4132)

(assert (=> d!42575 (= (choose!829 lt!69240 lt!69248 (zeroValue!2719 newMap!16) lt!69246) _$35!384)))

(declare-fun bs!5701 () Bool)

(assert (= bs!5701 d!42575))

(assert (=> bs!5701 m!156233))

(assert (=> bs!5701 m!156233))

(assert (=> bs!5701 m!156245))

(assert (=> d!40721 d!42575))

(declare-fun d!42577 () Bool)

(declare-fun e!88498 () Bool)

(assert (=> d!42577 e!88498))

(declare-fun res!65174 () Bool)

(assert (=> d!42577 (=> res!65174 e!88498)))

(declare-fun lt!70946 () Bool)

(assert (=> d!42577 (= res!65174 (not lt!70946))))

(declare-fun lt!70948 () Bool)

(assert (=> d!42577 (= lt!70946 lt!70948)))

(declare-fun lt!70945 () Unit!4132)

(declare-fun e!88499 () Unit!4132)

(assert (=> d!42577 (= lt!70945 e!88499)))

(declare-fun c!25509 () Bool)

(assert (=> d!42577 (= c!25509 lt!70948)))

(assert (=> d!42577 (= lt!70948 (containsKey!174 (toList!851 lt!69240) lt!69246))))

(assert (=> d!42577 (= (contains!886 lt!69240 lt!69246) lt!70946)))

(declare-fun b!135955 () Bool)

(declare-fun lt!70947 () Unit!4132)

(assert (=> b!135955 (= e!88499 lt!70947)))

(assert (=> b!135955 (= lt!70947 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69240) lt!69246))))

(assert (=> b!135955 (isDefined!124 (getValueByKey!170 (toList!851 lt!69240) lt!69246))))

(declare-fun b!135956 () Bool)

(declare-fun Unit!4281 () Unit!4132)

(assert (=> b!135956 (= e!88499 Unit!4281)))

(declare-fun b!135957 () Bool)

(assert (=> b!135957 (= e!88498 (isDefined!124 (getValueByKey!170 (toList!851 lt!69240) lt!69246)))))

(assert (= (and d!42577 c!25509) b!135955))

(assert (= (and d!42577 (not c!25509)) b!135956))

(assert (= (and d!42577 (not res!65174)) b!135957))

(declare-fun m!162109 () Bool)

(assert (=> d!42577 m!162109))

(declare-fun m!162111 () Bool)

(assert (=> b!135955 m!162111))

(declare-fun m!162113 () Bool)

(assert (=> b!135955 m!162113))

(assert (=> b!135955 m!162113))

(declare-fun m!162115 () Bool)

(assert (=> b!135955 m!162115))

(assert (=> b!135957 m!162113))

(assert (=> b!135957 m!162113))

(assert (=> b!135957 m!162115))

(assert (=> d!40721 d!42577))

(declare-fun d!42579 () Bool)

(assert (=> d!42579 (= (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69206 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))) lt!69211)) (v!3198 (getValueByKey!170 (toList!851 (+!163 lt!69206 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))) lt!69211)))))

(assert (=> d!40743 d!42579))

(declare-fun c!25510 () Bool)

(declare-fun d!42581 () Bool)

(assert (=> d!42581 (= c!25510 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69206 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69206 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))) lt!69211)))))

(declare-fun e!88500 () Option!176)

(assert (=> d!42581 (= (getValueByKey!170 (toList!851 (+!163 lt!69206 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))) lt!69211) e!88500)))

(declare-fun b!135960 () Bool)

(declare-fun e!88501 () Option!176)

(assert (=> b!135960 (= e!88501 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69206 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))) lt!69211))))

(declare-fun b!135959 () Bool)

(assert (=> b!135959 (= e!88500 e!88501)))

(declare-fun c!25511 () Bool)

(assert (=> b!135959 (= c!25511 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69206 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69206 (tuple2!2585 lt!69223 (minValue!2719 newMap!16)))))) lt!69211))))))

(declare-fun b!135958 () Bool)

(assert (=> b!135958 (= e!88500 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69206 (tuple2!2585 lt!69223 (minValue!2719 newMap!16))))))))))

(declare-fun b!135961 () Bool)

(assert (=> b!135961 (= e!88501 None!174)))

(assert (= (and d!42581 c!25510) b!135958))

(assert (= (and d!42581 (not c!25510)) b!135959))

(assert (= (and b!135959 c!25511) b!135960))

(assert (= (and b!135959 (not c!25511)) b!135961))

(declare-fun m!162117 () Bool)

(assert (=> b!135960 m!162117))

(assert (=> d!40743 d!42581))

(assert (=> d!40601 d!40605))

(assert (=> d!40601 d!40617))

(declare-fun d!42583 () Bool)

(assert (=> d!42583 (contains!886 (+!163 lt!69474 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69480)))

(assert (=> d!42583 true))

(declare-fun _$35!385 () Unit!4132)

(assert (=> d!42583 (= (choose!829 lt!69474 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69480) _$35!385)))

(declare-fun bs!5702 () Bool)

(assert (= bs!5702 d!42583))

(assert (=> bs!5702 m!156625))

(assert (=> bs!5702 m!156625))

(assert (=> bs!5702 m!156637))

(assert (=> d!40601 d!42583))

(declare-fun d!42585 () Bool)

(declare-fun e!88502 () Bool)

(assert (=> d!42585 e!88502))

(declare-fun res!65175 () Bool)

(assert (=> d!42585 (=> res!65175 e!88502)))

(declare-fun lt!70950 () Bool)

(assert (=> d!42585 (= res!65175 (not lt!70950))))

(declare-fun lt!70952 () Bool)

(assert (=> d!42585 (= lt!70950 lt!70952)))

(declare-fun lt!70949 () Unit!4132)

(declare-fun e!88503 () Unit!4132)

(assert (=> d!42585 (= lt!70949 e!88503)))

(declare-fun c!25512 () Bool)

(assert (=> d!42585 (= c!25512 lt!70952)))

(assert (=> d!42585 (= lt!70952 (containsKey!174 (toList!851 lt!69474) lt!69480))))

(assert (=> d!42585 (= (contains!886 lt!69474 lt!69480) lt!70950)))

(declare-fun b!135962 () Bool)

(declare-fun lt!70951 () Unit!4132)

(assert (=> b!135962 (= e!88503 lt!70951)))

(assert (=> b!135962 (= lt!70951 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69474) lt!69480))))

(assert (=> b!135962 (isDefined!124 (getValueByKey!170 (toList!851 lt!69474) lt!69480))))

(declare-fun b!135963 () Bool)

(declare-fun Unit!4282 () Unit!4132)

(assert (=> b!135963 (= e!88503 Unit!4282)))

(declare-fun b!135964 () Bool)

(assert (=> b!135964 (= e!88502 (isDefined!124 (getValueByKey!170 (toList!851 lt!69474) lt!69480)))))

(assert (= (and d!42585 c!25512) b!135962))

(assert (= (and d!42585 (not c!25512)) b!135963))

(assert (= (and d!42585 (not res!65175)) b!135964))

(declare-fun m!162119 () Bool)

(assert (=> d!42585 m!162119))

(declare-fun m!162121 () Bool)

(assert (=> b!135962 m!162121))

(declare-fun m!162123 () Bool)

(assert (=> b!135962 m!162123))

(assert (=> b!135962 m!162123))

(declare-fun m!162125 () Bool)

(assert (=> b!135962 m!162125))

(assert (=> b!135964 m!162123))

(assert (=> b!135964 m!162123))

(assert (=> b!135964 m!162125))

(assert (=> d!40601 d!42585))

(declare-fun d!42587 () Bool)

(assert (=> d!42587 (= (get!1482 (getValueByKey!170 (toList!851 lt!69234) lt!69238)) (v!3198 (getValueByKey!170 (toList!851 lt!69234) lt!69238)))))

(assert (=> d!40715 d!42587))

(declare-fun d!42589 () Bool)

(declare-fun c!25513 () Bool)

(assert (=> d!42589 (= c!25513 (and ((_ is Cons!1706) (toList!851 lt!69234)) (= (_1!1303 (h!2311 (toList!851 lt!69234))) lt!69238)))))

(declare-fun e!88504 () Option!176)

(assert (=> d!42589 (= (getValueByKey!170 (toList!851 lt!69234) lt!69238) e!88504)))

(declare-fun b!135967 () Bool)

(declare-fun e!88505 () Option!176)

(assert (=> b!135967 (= e!88505 (getValueByKey!170 (t!6152 (toList!851 lt!69234)) lt!69238))))

(declare-fun b!135966 () Bool)

(assert (=> b!135966 (= e!88504 e!88505)))

(declare-fun c!25514 () Bool)

(assert (=> b!135966 (= c!25514 (and ((_ is Cons!1706) (toList!851 lt!69234)) (not (= (_1!1303 (h!2311 (toList!851 lt!69234))) lt!69238))))))

(declare-fun b!135965 () Bool)

(assert (=> b!135965 (= e!88504 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69234)))))))

(declare-fun b!135968 () Bool)

(assert (=> b!135968 (= e!88505 None!174)))

(assert (= (and d!42589 c!25513) b!135965))

(assert (= (and d!42589 (not c!25513)) b!135966))

(assert (= (and b!135966 c!25514) b!135967))

(assert (= (and b!135966 (not c!25514)) b!135968))

(declare-fun m!162127 () Bool)

(assert (=> b!135967 m!162127))

(assert (=> d!40715 d!42589))

(declare-fun d!42591 () Bool)

(assert (=> d!42591 (= ($colon$colon!91 e!87099 (ite c!24816 (h!2311 (toList!851 call!14621)) (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (Cons!1706 (ite c!24816 (h!2311 (toList!851 call!14621)) (tuple2!2585 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) e!87099))))

(assert (=> bm!14734 d!42591))

(declare-fun d!42593 () Bool)

(declare-fun e!88506 () Bool)

(assert (=> d!42593 e!88506))

(declare-fun res!65176 () Bool)

(assert (=> d!42593 (=> res!65176 e!88506)))

(declare-fun lt!70954 () Bool)

(assert (=> d!42593 (= res!65176 (not lt!70954))))

(declare-fun lt!70956 () Bool)

(assert (=> d!42593 (= lt!70954 lt!70956)))

(declare-fun lt!70953 () Unit!4132)

(declare-fun e!88507 () Unit!4132)

(assert (=> d!42593 (= lt!70953 e!88507)))

(declare-fun c!25515 () Bool)

(assert (=> d!42593 (= c!25515 lt!70956)))

(assert (=> d!42593 (= lt!70956 (containsKey!174 (toList!851 lt!69810) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42593 (= (contains!886 lt!69810 (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) lt!70954)))

(declare-fun b!135969 () Bool)

(declare-fun lt!70955 () Unit!4132)

(assert (=> b!135969 (= e!88507 lt!70955)))

(assert (=> b!135969 (= lt!70955 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69810) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))

(assert (=> b!135969 (isDefined!124 (getValueByKey!170 (toList!851 lt!69810) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135970 () Bool)

(declare-fun Unit!4283 () Unit!4132)

(assert (=> b!135970 (= e!88507 Unit!4283)))

(declare-fun b!135971 () Bool)

(assert (=> b!135971 (= e!88506 (isDefined!124 (getValueByKey!170 (toList!851 lt!69810) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!42593 c!25515) b!135969))

(assert (= (and d!42593 (not c!25515)) b!135970))

(assert (= (and d!42593 (not res!65176)) b!135971))

(declare-fun m!162129 () Bool)

(assert (=> d!42593 m!162129))

(declare-fun m!162131 () Bool)

(assert (=> b!135969 m!162131))

(assert (=> b!135969 m!157637))

(assert (=> b!135969 m!157637))

(declare-fun m!162133 () Bool)

(assert (=> b!135969 m!162133))

(assert (=> b!135971 m!157637))

(assert (=> b!135971 m!157637))

(assert (=> b!135971 m!162133))

(assert (=> d!40705 d!42593))

(declare-fun c!25516 () Bool)

(declare-fun d!42595 () Bool)

(assert (=> d!42595 (= c!25516 (and ((_ is Cons!1706) lt!69808) (= (_1!1303 (h!2311 lt!69808)) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))))))

(declare-fun e!88508 () Option!176)

(assert (=> d!42595 (= (getValueByKey!170 lt!69808 (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) e!88508)))

(declare-fun e!88509 () Option!176)

(declare-fun b!135974 () Bool)

(assert (=> b!135974 (= e!88509 (getValueByKey!170 (t!6152 lt!69808) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135973 () Bool)

(assert (=> b!135973 (= e!88508 e!88509)))

(declare-fun c!25517 () Bool)

(assert (=> b!135973 (= c!25517 (and ((_ is Cons!1706) lt!69808) (not (= (_1!1303 (h!2311 lt!69808)) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!135972 () Bool)

(assert (=> b!135972 (= e!88508 (Some!175 (_2!1303 (h!2311 lt!69808))))))

(declare-fun b!135975 () Bool)

(assert (=> b!135975 (= e!88509 None!174)))

(assert (= (and d!42595 c!25516) b!135972))

(assert (= (and d!42595 (not c!25516)) b!135973))

(assert (= (and b!135973 c!25517) b!135974))

(assert (= (and b!135973 (not c!25517)) b!135975))

(declare-fun m!162135 () Bool)

(assert (=> b!135974 m!162135))

(assert (=> d!40705 d!42595))

(declare-fun d!42597 () Bool)

(assert (=> d!42597 (= (getValueByKey!170 lt!69808 (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) (Some!175 (_2!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70957 () Unit!4132)

(assert (=> d!42597 (= lt!70957 (choose!834 lt!69808 (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))

(declare-fun e!88510 () Bool)

(assert (=> d!42597 e!88510))

(declare-fun res!65177 () Bool)

(assert (=> d!42597 (=> (not res!65177) (not e!88510))))

(assert (=> d!42597 (= res!65177 (isStrictlySorted!317 lt!69808))))

(assert (=> d!42597 (= (lemmaContainsTupThenGetReturnValue!88 lt!69808 (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) lt!70957)))

(declare-fun b!135976 () Bool)

(declare-fun res!65178 () Bool)

(assert (=> b!135976 (=> (not res!65178) (not e!88510))))

(assert (=> b!135976 (= res!65178 (containsKey!174 lt!69808 (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135977 () Bool)

(assert (=> b!135977 (= e!88510 (contains!889 lt!69808 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!42597 res!65177) b!135976))

(assert (= (and b!135976 res!65178) b!135977))

(assert (=> d!42597 m!157631))

(declare-fun m!162137 () Bool)

(assert (=> d!42597 m!162137))

(declare-fun m!162139 () Bool)

(assert (=> d!42597 m!162139))

(declare-fun m!162141 () Bool)

(assert (=> b!135976 m!162141))

(declare-fun m!162143 () Bool)

(assert (=> b!135977 m!162143))

(assert (=> d!40705 d!42597))

(declare-fun e!88515 () List!1710)

(declare-fun b!135978 () Bool)

(assert (=> b!135978 (= e!88515 (insertStrictlySorted!91 (t!6152 (toList!851 lt!69240)) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135979 () Bool)

(declare-fun e!88514 () List!1710)

(declare-fun call!14920 () List!1710)

(assert (=> b!135979 (= e!88514 call!14920)))

(declare-fun b!135980 () Bool)

(declare-fun res!65180 () Bool)

(declare-fun e!88512 () Bool)

(assert (=> b!135980 (=> (not res!65180) (not e!88512))))

(declare-fun lt!70958 () List!1710)

(assert (=> b!135980 (= res!65180 (containsKey!174 lt!70958 (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))

(declare-fun c!25519 () Bool)

(declare-fun bm!14915 () Bool)

(assert (=> bm!14915 (= call!14920 ($colon$colon!91 e!88515 (ite c!25519 (h!2311 (toList!851 lt!69240)) (tuple2!2585 (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))))))))

(declare-fun c!25520 () Bool)

(assert (=> bm!14915 (= c!25520 c!25519)))

(declare-fun c!25518 () Bool)

(declare-fun c!25521 () Bool)

(declare-fun b!135981 () Bool)

(assert (=> b!135981 (= e!88515 (ite c!25518 (t!6152 (toList!851 lt!69240)) (ite c!25521 (Cons!1706 (h!2311 (toList!851 lt!69240)) (t!6152 (toList!851 lt!69240))) Nil!1707)))))

(declare-fun d!42599 () Bool)

(assert (=> d!42599 e!88512))

(declare-fun res!65179 () Bool)

(assert (=> d!42599 (=> (not res!65179) (not e!88512))))

(assert (=> d!42599 (= res!65179 (isStrictlySorted!317 lt!70958))))

(assert (=> d!42599 (= lt!70958 e!88514)))

(assert (=> d!42599 (= c!25519 (and ((_ is Cons!1706) (toList!851 lt!69240)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69240))) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))))))

(assert (=> d!42599 (isStrictlySorted!317 (toList!851 lt!69240))))

(assert (=> d!42599 (= (insertStrictlySorted!91 (toList!851 lt!69240) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16)))) lt!70958)))

(declare-fun b!135982 () Bool)

(declare-fun e!88511 () List!1710)

(assert (=> b!135982 (= e!88514 e!88511)))

(assert (=> b!135982 (= c!25518 (and ((_ is Cons!1706) (toList!851 lt!69240)) (= (_1!1303 (h!2311 (toList!851 lt!69240))) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))))))

(declare-fun b!135983 () Bool)

(declare-fun e!88513 () List!1710)

(declare-fun call!14918 () List!1710)

(assert (=> b!135983 (= e!88513 call!14918)))

(declare-fun b!135984 () Bool)

(declare-fun call!14919 () List!1710)

(assert (=> b!135984 (= e!88511 call!14919)))

(declare-fun b!135985 () Bool)

(assert (=> b!135985 (= e!88512 (contains!889 lt!70958 (tuple2!2585 (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))) (_2!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))))))

(declare-fun bm!14916 () Bool)

(assert (=> bm!14916 (= call!14919 call!14920)))

(declare-fun bm!14917 () Bool)

(assert (=> bm!14917 (= call!14918 call!14919)))

(declare-fun b!135986 () Bool)

(assert (=> b!135986 (= c!25521 (and ((_ is Cons!1706) (toList!851 lt!69240)) (bvsgt (_1!1303 (h!2311 (toList!851 lt!69240))) (_1!1303 (tuple2!2585 lt!69248 (zeroValue!2719 newMap!16))))))))

(assert (=> b!135986 (= e!88511 e!88513)))

(declare-fun b!135987 () Bool)

(assert (=> b!135987 (= e!88513 call!14918)))

(assert (= (and d!42599 c!25519) b!135979))

(assert (= (and d!42599 (not c!25519)) b!135982))

(assert (= (and b!135982 c!25518) b!135984))

(assert (= (and b!135982 (not c!25518)) b!135986))

(assert (= (and b!135986 c!25521) b!135987))

(assert (= (and b!135986 (not c!25521)) b!135983))

(assert (= (or b!135987 b!135983) bm!14917))

(assert (= (or b!135984 bm!14917) bm!14916))

(assert (= (or b!135979 bm!14916) bm!14915))

(assert (= (and bm!14915 c!25520) b!135978))

(assert (= (and bm!14915 (not c!25520)) b!135981))

(assert (= (and d!42599 res!65179) b!135980))

(assert (= (and b!135980 res!65180) b!135985))

(declare-fun m!162145 () Bool)

(assert (=> b!135985 m!162145))

(declare-fun m!162147 () Bool)

(assert (=> b!135980 m!162147))

(declare-fun m!162149 () Bool)

(assert (=> b!135978 m!162149))

(declare-fun m!162151 () Bool)

(assert (=> d!42599 m!162151))

(declare-fun m!162153 () Bool)

(assert (=> d!42599 m!162153))

(declare-fun m!162155 () Bool)

(assert (=> bm!14915 m!162155))

(assert (=> d!40705 d!42599))

(declare-fun d!42601 () Bool)

(declare-fun res!65181 () Bool)

(declare-fun e!88516 () Bool)

(assert (=> d!42601 (=> res!65181 e!88516)))

(assert (=> d!42601 (= res!65181 (and ((_ is Cons!1706) lt!69870) (= (_1!1303 (h!2311 lt!69870)) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(assert (=> d!42601 (= (containsKey!174 lt!69870 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) e!88516)))

(declare-fun b!135988 () Bool)

(declare-fun e!88517 () Bool)

(assert (=> b!135988 (= e!88516 e!88517)))

(declare-fun res!65182 () Bool)

(assert (=> b!135988 (=> (not res!65182) (not e!88517))))

(assert (=> b!135988 (= res!65182 (and (or (not ((_ is Cons!1706) lt!69870)) (bvsle (_1!1303 (h!2311 lt!69870)) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))) ((_ is Cons!1706) lt!69870) (bvslt (_1!1303 (h!2311 lt!69870)) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(declare-fun b!135989 () Bool)

(assert (=> b!135989 (= e!88517 (containsKey!174 (t!6152 lt!69870) (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (= (and d!42601 (not res!65181)) b!135988))

(assert (= (and b!135988 res!65182) b!135989))

(declare-fun m!162157 () Bool)

(assert (=> b!135989 m!162157))

(assert (=> b!133655 d!42601))

(declare-fun d!42603 () Bool)

(assert (=> d!42603 (= (isEmpty!413 (getValueByKey!170 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not ((_ is Some!175) (getValueByKey!170 (toList!851 lt!69186) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (=> d!40689 d!42603))

(assert (=> d!40763 d!40761))

(declare-fun d!42605 () Bool)

(assert (=> d!42605 (= (getValueByKey!170 lt!69494 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) (Some!175 (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!42605 true))

(declare-fun _$22!490 () Unit!4132)

(assert (=> d!42605 (= (choose!834 lt!69494 (_1!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) (_2!1303 (ite (or c!24562 c!24560) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) _$22!490)))

(declare-fun bs!5703 () Bool)

(assert (= bs!5703 d!42605))

(assert (=> bs!5703 m!156663))

(assert (=> d!40763 d!42605))

(declare-fun d!42607 () Bool)

(declare-fun res!65183 () Bool)

(declare-fun e!88518 () Bool)

(assert (=> d!42607 (=> res!65183 e!88518)))

(assert (=> d!42607 (= res!65183 (or ((_ is Nil!1707) lt!69494) ((_ is Nil!1707) (t!6152 lt!69494))))))

(assert (=> d!42607 (= (isStrictlySorted!317 lt!69494) e!88518)))

(declare-fun b!135990 () Bool)

(declare-fun e!88519 () Bool)

(assert (=> b!135990 (= e!88518 e!88519)))

(declare-fun res!65184 () Bool)

(assert (=> b!135990 (=> (not res!65184) (not e!88519))))

(assert (=> b!135990 (= res!65184 (bvslt (_1!1303 (h!2311 lt!69494)) (_1!1303 (h!2311 (t!6152 lt!69494)))))))

(declare-fun b!135991 () Bool)

(assert (=> b!135991 (= e!88519 (isStrictlySorted!317 (t!6152 lt!69494)))))

(assert (= (and d!42607 (not res!65183)) b!135990))

(assert (= (and b!135990 res!65184) b!135991))

(declare-fun m!162159 () Bool)

(assert (=> b!135991 m!162159))

(assert (=> d!40763 d!42607))

(assert (=> d!40831 d!40421))

(assert (=> d!40831 d!40423))

(declare-fun d!42609 () Bool)

(assert (=> d!42609 (isDefined!124 (getValueByKey!170 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182))))

(assert (=> d!42609 true))

(declare-fun _$12!406 () Unit!4132)

(assert (=> d!42609 (= (choose!826 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) lt!69182) _$12!406)))

(declare-fun bs!5704 () Bool)

(assert (= bs!5704 d!42609))

(assert (=> bs!5704 m!156447))

(assert (=> bs!5704 m!156447))

(assert (=> bs!5704 m!156449))

(assert (=> d!40831 d!42609))

(declare-fun d!42611 () Bool)

(declare-fun res!65185 () Bool)

(declare-fun e!88520 () Bool)

(assert (=> d!42611 (=> res!65185 e!88520)))

(assert (=> d!42611 (= res!65185 (or ((_ is Nil!1707) (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Nil!1707) (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))))

(assert (=> d!42611 (= (isStrictlySorted!317 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) e!88520)))

(declare-fun b!135992 () Bool)

(declare-fun e!88521 () Bool)

(assert (=> b!135992 (= e!88520 e!88521)))

(declare-fun res!65186 () Bool)

(assert (=> b!135992 (=> (not res!65186) (not e!88521))))

(assert (=> b!135992 (= res!65186 (bvslt (_1!1303 (h!2311 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))) (_1!1303 (h!2311 (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))))

(declare-fun b!135993 () Bool)

(assert (=> b!135993 (= e!88521 (isStrictlySorted!317 (t!6152 (toList!851 (+!163 lt!69176 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))))

(assert (= (and d!42611 (not res!65185)) b!135992))

(assert (= (and b!135992 res!65186) b!135993))

(declare-fun m!162161 () Bool)

(assert (=> b!135993 m!162161))

(assert (=> d!40831 d!42611))

(declare-fun d!42613 () Bool)

(assert (=> d!42613 (= (inRange!0 (index!3273 lt!70070) (mask!7163 newMap!16)) (and (bvsge (index!3273 lt!70070) #b00000000000000000000000000000000) (bvslt (index!3273 lt!70070) (bvadd (mask!7163 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!133978 d!42613))

(assert (=> b!133670 d!41297))

(declare-fun d!42615 () Bool)

(declare-fun e!88522 () Bool)

(assert (=> d!42615 e!88522))

(declare-fun res!65187 () Bool)

(assert (=> d!42615 (=> res!65187 e!88522)))

(declare-fun lt!70960 () Bool)

(assert (=> d!42615 (= res!65187 (not lt!70960))))

(declare-fun lt!70962 () Bool)

(assert (=> d!42615 (= lt!70960 lt!70962)))

(declare-fun lt!70959 () Unit!4132)

(declare-fun e!88523 () Unit!4132)

(assert (=> d!42615 (= lt!70959 e!88523)))

(declare-fun c!25522 () Bool)

(assert (=> d!42615 (= c!25522 lt!70962)))

(assert (=> d!42615 (= lt!70962 (containsKey!174 (toList!851 lt!69735) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42615 (= (contains!886 lt!69735 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70960)))

(declare-fun b!135994 () Bool)

(declare-fun lt!70961 () Unit!4132)

(assert (=> b!135994 (= e!88523 lt!70961)))

(assert (=> b!135994 (= lt!70961 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69735) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135994 (isDefined!124 (getValueByKey!170 (toList!851 lt!69735) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135995 () Bool)

(declare-fun Unit!4284 () Unit!4132)

(assert (=> b!135995 (= e!88523 Unit!4284)))

(declare-fun b!135996 () Bool)

(assert (=> b!135996 (= e!88522 (isDefined!124 (getValueByKey!170 (toList!851 lt!69735) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42615 c!25522) b!135994))

(assert (= (and d!42615 (not c!25522)) b!135995))

(assert (= (and d!42615 (not res!65187)) b!135996))

(declare-fun m!162163 () Bool)

(assert (=> d!42615 m!162163))

(declare-fun m!162165 () Bool)

(assert (=> b!135994 m!162165))

(declare-fun m!162167 () Bool)

(assert (=> b!135994 m!162167))

(assert (=> b!135994 m!162167))

(declare-fun m!162169 () Bool)

(assert (=> b!135994 m!162169))

(assert (=> b!135996 m!162167))

(assert (=> b!135996 m!162167))

(assert (=> b!135996 m!162169))

(assert (=> b!133504 d!42615))

(declare-fun b!135997 () Bool)

(declare-fun e!88527 () Bool)

(declare-fun e!88524 () Bool)

(assert (=> b!135997 (= e!88527 e!88524)))

(declare-fun res!65188 () Bool)

(assert (=> b!135997 (=> (not res!65188) (not e!88524))))

(declare-fun e!88525 () Bool)

(assert (=> b!135997 (= res!65188 (not e!88525))))

(declare-fun res!65190 () Bool)

(assert (=> b!135997 (=> (not res!65190) (not e!88525))))

(assert (=> b!135997 (= res!65190 (validKeyInArray!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) (bvadd lt!69450 #b00000000000000000000000000000001))))))

(declare-fun c!25523 () Bool)

(declare-fun bm!14918 () Bool)

(declare-fun call!14921 () Bool)

(assert (=> bm!14918 (= call!14921 (arrayNoDuplicates!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (bvadd lt!69450 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!25523 (Cons!1707 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) (bvadd lt!69450 #b00000000000000000000000000000001)) (ite c!24741 (Cons!1707 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) lt!69450) lt!69457) lt!69457)) (ite c!24741 (Cons!1707 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) lt!69450) lt!69457) lt!69457))))))

(declare-fun d!42617 () Bool)

(declare-fun res!65189 () Bool)

(assert (=> d!42617 (=> res!65189 e!88527)))

(assert (=> d!42617 (= res!65189 (bvsge (bvadd lt!69450 #b00000000000000000000000000000001) (size!2518 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))))))))

(assert (=> d!42617 (= (arrayNoDuplicates!0 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16))) (bvadd lt!69450 #b00000000000000000000000000000001) (ite c!24741 (Cons!1707 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) lt!69450) lt!69457) lt!69457)) e!88527)))

(declare-fun b!135998 () Bool)

(declare-fun e!88526 () Bool)

(assert (=> b!135998 (= e!88526 call!14921)))

(declare-fun b!135999 () Bool)

(assert (=> b!135999 (= e!88525 (contains!888 (ite c!24741 (Cons!1707 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) lt!69450) lt!69457) lt!69457) (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) (bvadd lt!69450 #b00000000000000000000000000000001))))))

(declare-fun b!136000 () Bool)

(assert (=> b!136000 (= e!88524 e!88526)))

(assert (=> b!136000 (= c!25523 (validKeyInArray!0 (select (arr!2248 (array!4758 (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (size!2518 (_keys!4612 newMap!16)))) (bvadd lt!69450 #b00000000000000000000000000000001))))))

(declare-fun b!136001 () Bool)

(assert (=> b!136001 (= e!88526 call!14921)))

(assert (= (and d!42617 (not res!65189)) b!135997))

(assert (= (and b!135997 res!65190) b!135999))

(assert (= (and b!135997 res!65188) b!136000))

(assert (= (and b!136000 c!25523) b!135998))

(assert (= (and b!136000 (not c!25523)) b!136001))

(assert (= (or b!135998 b!136001) bm!14918))

(declare-fun m!162171 () Bool)

(assert (=> b!135997 m!162171))

(assert (=> b!135997 m!162171))

(declare-fun m!162173 () Bool)

(assert (=> b!135997 m!162173))

(assert (=> bm!14918 m!162171))

(declare-fun m!162175 () Bool)

(assert (=> bm!14918 m!162175))

(assert (=> b!135999 m!162171))

(assert (=> b!135999 m!162171))

(declare-fun m!162177 () Bool)

(assert (=> b!135999 m!162177))

(assert (=> b!136000 m!162171))

(assert (=> b!136000 m!162171))

(assert (=> b!136000 m!162173))

(assert (=> bm!14712 d!42617))

(assert (=> b!133828 d!42437))

(assert (=> b!133828 d!41067))

(declare-fun d!42619 () Bool)

(declare-fun res!65191 () Bool)

(declare-fun e!88528 () Bool)

(assert (=> d!42619 (=> res!65191 e!88528)))

(assert (=> d!42619 (= res!65191 (and ((_ is Cons!1706) (toList!851 lt!69320)) (= (_1!1303 (h!2311 (toList!851 lt!69320))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!42619 (= (containsKey!174 (toList!851 lt!69320) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!88528)))

(declare-fun b!136002 () Bool)

(declare-fun e!88529 () Bool)

(assert (=> b!136002 (= e!88528 e!88529)))

(declare-fun res!65192 () Bool)

(assert (=> b!136002 (=> (not res!65192) (not e!88529))))

(assert (=> b!136002 (= res!65192 (and (or (not ((_ is Cons!1706) (toList!851 lt!69320))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69320))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Cons!1706) (toList!851 lt!69320)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69320))) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!136003 () Bool)

(assert (=> b!136003 (= e!88529 (containsKey!174 (t!6152 (toList!851 lt!69320)) (_1!1303 (tuple2!2585 lt!69171 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!42619 (not res!65191)) b!136002))

(assert (= (and b!136002 res!65192) b!136003))

(declare-fun m!162179 () Bool)

(assert (=> b!136003 m!162179))

(assert (=> d!40467 d!42619))

(declare-fun d!42621 () Bool)

(assert (=> d!42621 (= (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69346 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))) lt!69350)) (v!3198 (getValueByKey!170 (toList!851 (+!163 lt!69346 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))) lt!69350)))))

(assert (=> d!40923 d!42621))

(declare-fun c!25524 () Bool)

(declare-fun d!42623 () Bool)

(assert (=> d!42623 (= c!25524 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69346 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69346 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))) lt!69350)))))

(declare-fun e!88530 () Option!176)

(assert (=> d!42623 (= (getValueByKey!170 (toList!851 (+!163 lt!69346 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))) lt!69350) e!88530)))

(declare-fun e!88531 () Option!176)

(declare-fun b!136006 () Bool)

(assert (=> b!136006 (= e!88531 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69346 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))) lt!69350))))

(declare-fun b!136005 () Bool)

(assert (=> b!136005 (= e!88530 e!88531)))

(declare-fun c!25525 () Bool)

(assert (=> b!136005 (= c!25525 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69346 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69346 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16)))))) lt!69350))))))

(declare-fun b!136004 () Bool)

(assert (=> b!136004 (= e!88530 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69346 (tuple2!2585 lt!69347 (zeroValue!2719 newMap!16))))))))))

(declare-fun b!136007 () Bool)

(assert (=> b!136007 (= e!88531 None!174)))

(assert (= (and d!42623 c!25524) b!136004))

(assert (= (and d!42623 (not c!25524)) b!136005))

(assert (= (and b!136005 c!25525) b!136006))

(assert (= (and b!136005 (not c!25525)) b!136007))

(declare-fun m!162181 () Bool)

(assert (=> b!136006 m!162181))

(assert (=> d!40923 d!42623))

(declare-fun b!136008 () Bool)

(declare-fun e!88532 () Bool)

(declare-fun call!14922 () Bool)

(assert (=> b!136008 (= e!88532 call!14922)))

(declare-fun b!136009 () Bool)

(declare-fun e!88533 () Bool)

(assert (=> b!136009 (= e!88533 e!88532)))

(declare-fun lt!70963 () (_ BitVec 64))

(assert (=> b!136009 (= lt!70963 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!70965 () Unit!4132)

(assert (=> b!136009 (= lt!70965 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4612 (_2!1304 lt!69115)) lt!70963 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!136009 (arrayContainsKey!0 (_keys!4612 (_2!1304 lt!69115)) lt!70963 #b00000000000000000000000000000000)))

(declare-fun lt!70964 () Unit!4132)

(assert (=> b!136009 (= lt!70964 lt!70965)))

(declare-fun res!65194 () Bool)

(assert (=> b!136009 (= res!65194 (= (seekEntryOrOpen!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4612 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115))) (Found!278 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!136009 (=> (not res!65194) (not e!88532))))

(declare-fun d!42625 () Bool)

(declare-fun res!65193 () Bool)

(declare-fun e!88534 () Bool)

(assert (=> d!42625 (=> res!65193 e!88534)))

(assert (=> d!42625 (= res!65193 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (_2!1304 lt!69115)))))))

(assert (=> d!42625 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4612 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115))) e!88534)))

(declare-fun b!136010 () Bool)

(assert (=> b!136010 (= e!88534 e!88533)))

(declare-fun c!25526 () Bool)

(assert (=> b!136010 (= c!25526 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (_2!1304 lt!69115))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!136011 () Bool)

(assert (=> b!136011 (= e!88533 call!14922)))

(declare-fun bm!14919 () Bool)

(assert (=> bm!14919 (= call!14922 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4612 (_2!1304 lt!69115)) (mask!7163 (_2!1304 lt!69115))))))

(assert (= (and d!42625 (not res!65193)) b!136010))

(assert (= (and b!136010 c!25526) b!136009))

(assert (= (and b!136010 (not c!25526)) b!136011))

(assert (= (and b!136009 res!65194) b!136008))

(assert (= (or b!136008 b!136011) bm!14919))

(assert (=> b!136009 m!161141))

(declare-fun m!162183 () Bool)

(assert (=> b!136009 m!162183))

(declare-fun m!162185 () Bool)

(assert (=> b!136009 m!162185))

(assert (=> b!136009 m!161141))

(declare-fun m!162187 () Bool)

(assert (=> b!136009 m!162187))

(assert (=> b!136010 m!161141))

(assert (=> b!136010 m!161141))

(assert (=> b!136010 m!161143))

(declare-fun m!162189 () Bool)

(assert (=> bm!14919 m!162189))

(assert (=> bm!14767 d!42625))

(assert (=> d!40533 d!40531))

(declare-fun d!42627 () Bool)

(assert (=> d!42627 (= (getValueByKey!170 lt!69333 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) (Some!175 (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (=> d!42627 true))

(declare-fun _$22!491 () Unit!4132)

(assert (=> d!42627 (= (choose!834 lt!69333 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))) (_2!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) _$22!491)))

(declare-fun bs!5705 () Bool)

(assert (= bs!5705 d!42627))

(assert (=> bs!5705 m!156433))

(assert (=> d!40533 d!42627))

(declare-fun d!42629 () Bool)

(declare-fun res!65195 () Bool)

(declare-fun e!88535 () Bool)

(assert (=> d!42629 (=> res!65195 e!88535)))

(assert (=> d!42629 (= res!65195 (or ((_ is Nil!1707) lt!69333) ((_ is Nil!1707) (t!6152 lt!69333))))))

(assert (=> d!42629 (= (isStrictlySorted!317 lt!69333) e!88535)))

(declare-fun b!136012 () Bool)

(declare-fun e!88536 () Bool)

(assert (=> b!136012 (= e!88535 e!88536)))

(declare-fun res!65196 () Bool)

(assert (=> b!136012 (=> (not res!65196) (not e!88536))))

(assert (=> b!136012 (= res!65196 (bvslt (_1!1303 (h!2311 lt!69333)) (_1!1303 (h!2311 (t!6152 lt!69333)))))))

(declare-fun b!136013 () Bool)

(assert (=> b!136013 (= e!88536 (isStrictlySorted!317 (t!6152 lt!69333)))))

(assert (= (and d!42629 (not res!65195)) b!136012))

(assert (= (and b!136012 res!65196) b!136013))

(declare-fun m!162191 () Bool)

(assert (=> b!136013 m!162191))

(assert (=> d!40533 d!42629))

(declare-fun lt!70966 () Bool)

(declare-fun d!42631 () Bool)

(assert (=> d!42631 (= lt!70966 (select (content!133 (toList!851 lt!69801)) (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))))

(declare-fun e!88538 () Bool)

(assert (=> d!42631 (= lt!70966 e!88538)))

(declare-fun res!65197 () Bool)

(assert (=> d!42631 (=> (not res!65197) (not e!88538))))

(assert (=> d!42631 (= res!65197 ((_ is Cons!1706) (toList!851 lt!69801)))))

(assert (=> d!42631 (= (contains!889 (toList!851 lt!69801) (tuple2!2585 lt!69244 (minValue!2719 newMap!16))) lt!70966)))

(declare-fun b!136014 () Bool)

(declare-fun e!88537 () Bool)

(assert (=> b!136014 (= e!88538 e!88537)))

(declare-fun res!65198 () Bool)

(assert (=> b!136014 (=> res!65198 e!88537)))

(assert (=> b!136014 (= res!65198 (= (h!2311 (toList!851 lt!69801)) (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))))

(declare-fun b!136015 () Bool)

(assert (=> b!136015 (= e!88537 (contains!889 (t!6152 (toList!851 lt!69801)) (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))))

(assert (= (and d!42631 res!65197) b!136014))

(assert (= (and b!136014 (not res!65198)) b!136015))

(declare-fun m!162193 () Bool)

(assert (=> d!42631 m!162193))

(declare-fun m!162195 () Bool)

(assert (=> d!42631 m!162195))

(declare-fun m!162197 () Bool)

(assert (=> b!136015 m!162197))

(assert (=> b!133591 d!42631))

(declare-fun d!42633 () Bool)

(declare-fun c!25527 () Bool)

(assert (=> d!42633 (= c!25527 (and ((_ is Cons!1706) (toList!851 lt!69731)) (= (_1!1303 (h!2311 (toList!851 lt!69731))) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun e!88539 () Option!176)

(assert (=> d!42633 (= (getValueByKey!170 (toList!851 lt!69731) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) e!88539)))

(declare-fun e!88540 () Option!176)

(declare-fun b!136018 () Bool)

(assert (=> b!136018 (= e!88540 (getValueByKey!170 (t!6152 (toList!851 lt!69731)) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!136017 () Bool)

(assert (=> b!136017 (= e!88539 e!88540)))

(declare-fun c!25528 () Bool)

(assert (=> b!136017 (= c!25528 (and ((_ is Cons!1706) (toList!851 lt!69731)) (not (= (_1!1303 (h!2311 (toList!851 lt!69731))) (_1!1303 (tuple2!2585 lt!69482 (ite (and c!24523 c!24530) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))))

(declare-fun b!136016 () Bool)

(assert (=> b!136016 (= e!88539 (Some!175 (_2!1303 (h!2311 (toList!851 lt!69731)))))))

(declare-fun b!136019 () Bool)

(assert (=> b!136019 (= e!88540 None!174)))

(assert (= (and d!42633 c!25527) b!136016))

(assert (= (and d!42633 (not c!25527)) b!136017))

(assert (= (and b!136017 c!25528) b!136018))

(assert (= (and b!136017 (not c!25528)) b!136019))

(declare-fun m!162199 () Bool)

(assert (=> b!136018 m!162199))

(assert (=> b!133492 d!42633))

(declare-fun d!42635 () Bool)

(declare-fun res!65199 () Bool)

(declare-fun e!88541 () Bool)

(assert (=> d!42635 (=> res!65199 e!88541)))

(assert (=> d!42635 (= res!65199 (and ((_ is Cons!1706) lt!69606) (= (_1!1303 (h!2311 lt!69606)) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!42635 (= (containsKey!174 lt!69606 (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!88541)))

(declare-fun b!136020 () Bool)

(declare-fun e!88542 () Bool)

(assert (=> b!136020 (= e!88541 e!88542)))

(declare-fun res!65200 () Bool)

(assert (=> b!136020 (=> (not res!65200) (not e!88542))))

(assert (=> b!136020 (= res!65200 (and (or (not ((_ is Cons!1706) lt!69606)) (bvsle (_1!1303 (h!2311 lt!69606)) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Cons!1706) lt!69606) (bvslt (_1!1303 (h!2311 lt!69606)) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!136021 () Bool)

(assert (=> b!136021 (= e!88542 (containsKey!174 (t!6152 lt!69606) (_1!1303 (tuple2!2585 lt!69184 (zeroValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!42635 (not res!65199)) b!136020))

(assert (= (and b!136020 res!65200) b!136021))

(declare-fun m!162201 () Bool)

(assert (=> b!136021 m!162201))

(assert (=> b!133323 d!42635))

(declare-fun d!42637 () Bool)

(declare-fun e!88547 () Bool)

(assert (=> d!42637 e!88547))

(declare-fun c!25529 () Bool)

(declare-fun lt!70967 () SeekEntryResult!278)

(assert (=> d!42637 (= c!25529 (and ((_ is Intermediate!278) lt!70967) (undefined!1090 lt!70967)))))

(declare-fun e!88543 () SeekEntryResult!278)

(assert (=> d!42637 (= lt!70967 e!88543)))

(declare-fun c!25530 () Bool)

(assert (=> d!42637 (= c!25530 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(declare-fun lt!70968 () (_ BitVec 64))

(assert (=> d!42637 (= lt!70968 (select (arr!2248 (_keys!4612 newMap!16)) (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (mask!7163 newMap!16)) #b00000000000000000000000000000000 (mask!7163 newMap!16))))))

(assert (=> d!42637 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!42637 (= (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (mask!7163 newMap!16)) #b00000000000000000000000000000000 (mask!7163 newMap!16)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)) lt!70967)))

(declare-fun b!136022 () Bool)

(assert (=> b!136022 (and (bvsge (index!3274 lt!70967) #b00000000000000000000000000000000) (bvslt (index!3274 lt!70967) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun e!88546 () Bool)

(assert (=> b!136022 (= e!88546 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3274 lt!70967)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!136023 () Bool)

(assert (=> b!136023 (and (bvsge (index!3274 lt!70967) #b00000000000000000000000000000000) (bvslt (index!3274 lt!70967) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!65203 () Bool)

(assert (=> b!136023 (= res!65203 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3274 lt!70967)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!136023 (=> res!65203 e!88546)))

(declare-fun b!136024 () Bool)

(declare-fun e!88545 () SeekEntryResult!278)

(assert (=> b!136024 (= e!88543 e!88545)))

(declare-fun c!25531 () Bool)

(assert (=> b!136024 (= c!25531 (or (= lt!70968 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (= (bvadd lt!70968 lt!70968) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!136025 () Bool)

(declare-fun e!88544 () Bool)

(assert (=> b!136025 (= e!88547 e!88544)))

(declare-fun res!65202 () Bool)

(assert (=> b!136025 (= res!65202 (and ((_ is Intermediate!278) lt!70967) (not (undefined!1090 lt!70967)) (bvslt (x!15594 lt!70967) #b01111111111111111111111111111110) (bvsge (x!15594 lt!70967) #b00000000000000000000000000000000) (bvsge (x!15594 lt!70967) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!136025 (=> (not res!65202) (not e!88544))))

(declare-fun b!136026 () Bool)

(assert (=> b!136026 (= e!88545 (Intermediate!278 false (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (mask!7163 newMap!16)) #b00000000000000000000000000000000 (mask!7163 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!136027 () Bool)

(assert (=> b!136027 (= e!88543 (Intermediate!278 true (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (mask!7163 newMap!16)) #b00000000000000000000000000000000 (mask!7163 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!136028 () Bool)

(assert (=> b!136028 (= e!88545 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (mask!7163 newMap!16)) #b00000000000000000000000000000000 (mask!7163 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7163 newMap!16)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (_keys!4612 newMap!16) (mask!7163 newMap!16)))))

(declare-fun b!136029 () Bool)

(assert (=> b!136029 (= e!88547 (bvsge (x!15594 lt!70967) #b01111111111111111111111111111110))))

(declare-fun b!136030 () Bool)

(assert (=> b!136030 (and (bvsge (index!3274 lt!70967) #b00000000000000000000000000000000) (bvslt (index!3274 lt!70967) (size!2518 (_keys!4612 newMap!16))))))

(declare-fun res!65201 () Bool)

(assert (=> b!136030 (= res!65201 (= (select (arr!2248 (_keys!4612 newMap!16)) (index!3274 lt!70967)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (=> b!136030 (=> res!65201 e!88546)))

(assert (=> b!136030 (= e!88544 e!88546)))

(assert (= (and d!42637 c!25530) b!136027))

(assert (= (and d!42637 (not c!25530)) b!136024))

(assert (= (and b!136024 c!25531) b!136026))

(assert (= (and b!136024 (not c!25531)) b!136028))

(assert (= (and d!42637 c!25529) b!136029))

(assert (= (and d!42637 (not c!25529)) b!136025))

(assert (= (and b!136025 res!65202) b!136030))

(assert (= (and b!136030 (not res!65201)) b!136023))

(assert (= (and b!136023 (not res!65203)) b!136022))

(declare-fun m!162203 () Bool)

(assert (=> b!136023 m!162203))

(assert (=> d!42637 m!156749))

(declare-fun m!162205 () Bool)

(assert (=> d!42637 m!162205))

(assert (=> d!42637 m!156183))

(assert (=> b!136022 m!162203))

(assert (=> b!136028 m!156749))

(declare-fun m!162207 () Bool)

(assert (=> b!136028 m!162207))

(assert (=> b!136028 m!162207))

(assert (=> b!136028 m!155841))

(declare-fun m!162209 () Bool)

(assert (=> b!136028 m!162209))

(assert (=> b!136030 m!162203))

(assert (=> b!133159 d!42637))

(declare-fun d!42639 () Bool)

(declare-fun lt!70969 () (_ BitVec 32))

(assert (=> d!42639 (and (bvsge lt!70969 #b00000000000000000000000000000000) (bvslt lt!70969 (bvadd (mask!7163 newMap!16) #b00000000000000000000000000000001)))))

(assert (=> d!42639 (= lt!70969 (choose!52 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (mask!7163 newMap!16)) #b00000000000000000000000000000000 (mask!7163 newMap!16)))))

(assert (=> d!42639 (validMask!0 (mask!7163 newMap!16))))

(assert (=> d!42639 (= (nextIndex!0 (toIndex!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (mask!7163 newMap!16)) #b00000000000000000000000000000000 (mask!7163 newMap!16)) lt!70969)))

(declare-fun bs!5706 () Bool)

(assert (= bs!5706 d!42639))

(assert (=> bs!5706 m!156365))

(declare-fun m!162211 () Bool)

(assert (=> bs!5706 m!162211))

(assert (=> bs!5706 m!156183))

(assert (=> b!133159 d!42639))

(declare-fun b!136031 () Bool)

(declare-fun e!88548 () (_ BitVec 32))

(declare-fun e!88549 () (_ BitVec 32))

(assert (=> b!136031 (= e!88548 e!88549)))

(declare-fun c!25533 () Bool)

(assert (=> b!136031 (= c!25533 (validKeyInArray!0 (select (arr!2248 lt!69449) (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001))))))

(declare-fun b!136032 () Bool)

(declare-fun call!14923 () (_ BitVec 32))

(assert (=> b!136032 (= e!88549 (bvadd #b00000000000000000000000000000001 call!14923))))

(declare-fun lt!70970 () (_ BitVec 32))

(declare-fun d!42641 () Bool)

(assert (=> d!42641 (and (bvsge lt!70970 #b00000000000000000000000000000000) (bvsle lt!70970 (bvsub (size!2518 lt!69449) (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001))))))

(assert (=> d!42641 (= lt!70970 e!88548)))

(declare-fun c!25532 () Bool)

(assert (=> d!42641 (= c!25532 (bvsge (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001) (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001)))))

(assert (=> d!42641 (and (bvsle (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001) (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001)) (bvsge (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001) (size!2518 lt!69449)))))

(assert (=> d!42641 (= (arrayCountValidKeys!0 lt!69449 (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001) (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001)) lt!70970)))

(declare-fun b!136033 () Bool)

(assert (=> b!136033 (= e!88549 call!14923)))

(declare-fun b!136034 () Bool)

(assert (=> b!136034 (= e!88548 #b00000000000000000000000000000000)))

(declare-fun bm!14920 () Bool)

(assert (=> bm!14920 (= call!14923 (arrayCountValidKeys!0 lt!69449 (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (bvadd (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) #b00000000000000000000000000000001)))))

(assert (= (and d!42641 c!25532) b!136034))

(assert (= (and d!42641 (not c!25532)) b!136031))

(assert (= (and b!136031 c!25533) b!136032))

(assert (= (and b!136031 (not c!25533)) b!136033))

(assert (= (or b!136032 b!136033) bm!14920))

(declare-fun m!162213 () Bool)

(assert (=> b!136031 m!162213))

(assert (=> b!136031 m!162213))

(declare-fun m!162215 () Bool)

(assert (=> b!136031 m!162215))

(declare-fun m!162217 () Bool)

(assert (=> bm!14920 m!162217))

(assert (=> bm!14713 d!42641))

(declare-fun d!42643 () Bool)

(declare-fun e!88550 () Bool)

(assert (=> d!42643 e!88550))

(declare-fun res!65205 () Bool)

(assert (=> d!42643 (=> (not res!65205) (not e!88550))))

(declare-fun lt!70973 () ListLongMap!1671)

(assert (=> d!42643 (= res!65205 (contains!886 lt!70973 (_1!1303 (ite (or c!24889 c!24887) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!70971 () List!1710)

(assert (=> d!42643 (= lt!70973 (ListLongMap!1672 lt!70971))))

(declare-fun lt!70974 () Unit!4132)

(declare-fun lt!70972 () Unit!4132)

(assert (=> d!42643 (= lt!70974 lt!70972)))

(assert (=> d!42643 (= (getValueByKey!170 lt!70971 (_1!1303 (ite (or c!24889 c!24887) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!175 (_2!1303 (ite (or c!24889 c!24887) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42643 (= lt!70972 (lemmaContainsTupThenGetReturnValue!88 lt!70971 (_1!1303 (ite (or c!24889 c!24887) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite (or c!24889 c!24887) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42643 (= lt!70971 (insertStrictlySorted!91 (toList!851 (ite c!24889 call!14774 (ite c!24887 call!14777 call!14776))) (_1!1303 (ite (or c!24889 c!24887) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1303 (ite (or c!24889 c!24887) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42643 (= (+!163 (ite c!24889 call!14774 (ite c!24887 call!14777 call!14776)) (ite (or c!24889 c!24887) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70973)))

(declare-fun b!136035 () Bool)

(declare-fun res!65204 () Bool)

(assert (=> b!136035 (=> (not res!65204) (not e!88550))))

(assert (=> b!136035 (= res!65204 (= (getValueByKey!170 (toList!851 lt!70973) (_1!1303 (ite (or c!24889 c!24887) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!175 (_2!1303 (ite (or c!24889 c!24887) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!136036 () Bool)

(assert (=> b!136036 (= e!88550 (contains!889 (toList!851 lt!70973) (ite (or c!24889 c!24887) (tuple2!2585 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42643 res!65205) b!136035))

(assert (= (and b!136035 res!65204) b!136036))

(declare-fun m!162219 () Bool)

(assert (=> d!42643 m!162219))

(declare-fun m!162221 () Bool)

(assert (=> d!42643 m!162221))

(declare-fun m!162223 () Bool)

(assert (=> d!42643 m!162223))

(declare-fun m!162225 () Bool)

(assert (=> d!42643 m!162225))

(declare-fun m!162227 () Bool)

(assert (=> b!136035 m!162227))

(declare-fun m!162229 () Bool)

(assert (=> b!136036 m!162229))

(assert (=> bm!14768 d!42643))

(declare-fun d!42645 () Bool)

(assert (=> d!42645 (= (get!1482 (getValueByKey!170 (toList!851 (+!163 lt!69243 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))) lt!69254)) (v!3198 (getValueByKey!170 (toList!851 (+!163 lt!69243 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))) lt!69254)))))

(assert (=> d!40709 d!42645))

(declare-fun d!42647 () Bool)

(declare-fun c!25534 () Bool)

(assert (=> d!42647 (= c!25534 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69243 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))) (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69243 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))) lt!69254)))))

(declare-fun e!88551 () Option!176)

(assert (=> d!42647 (= (getValueByKey!170 (toList!851 (+!163 lt!69243 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))) lt!69254) e!88551)))

(declare-fun e!88552 () Option!176)

(declare-fun b!136039 () Bool)

(assert (=> b!136039 (= e!88552 (getValueByKey!170 (t!6152 (toList!851 (+!163 lt!69243 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))) lt!69254))))

(declare-fun b!136038 () Bool)

(assert (=> b!136038 (= e!88551 e!88552)))

(declare-fun c!25535 () Bool)

(assert (=> b!136038 (= c!25535 (and ((_ is Cons!1706) (toList!851 (+!163 lt!69243 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))) (not (= (_1!1303 (h!2311 (toList!851 (+!163 lt!69243 (tuple2!2585 lt!69244 (minValue!2719 newMap!16)))))) lt!69254))))))

(declare-fun b!136037 () Bool)

(assert (=> b!136037 (= e!88551 (Some!175 (_2!1303 (h!2311 (toList!851 (+!163 lt!69243 (tuple2!2585 lt!69244 (minValue!2719 newMap!16))))))))))

(declare-fun b!136040 () Bool)

(assert (=> b!136040 (= e!88552 None!174)))

(assert (= (and d!42647 c!25534) b!136037))

(assert (= (and d!42647 (not c!25534)) b!136038))

(assert (= (and b!136038 c!25535) b!136039))

(assert (= (and b!136038 (not c!25535)) b!136040))

(declare-fun m!162231 () Bool)

(assert (=> b!136039 m!162231))

(assert (=> d!40709 d!42647))

(assert (=> d!40855 d!40359))

(assert (=> d!40855 d!40355))

(assert (=> d!40855 d!40377))

(declare-fun d!42649 () Bool)

(declare-fun c!25536 () Bool)

(assert (=> d!42649 (= c!25536 ((_ is Nil!1707) (toList!851 lt!69331)))))

(declare-fun e!88553 () (InoxSet tuple2!2584))

(assert (=> d!42649 (= (content!133 (toList!851 lt!69331)) e!88553)))

(declare-fun b!136041 () Bool)

(assert (=> b!136041 (= e!88553 ((as const (Array tuple2!2584 Bool)) false))))

(declare-fun b!136042 () Bool)

(assert (=> b!136042 (= e!88553 ((_ map or) (store ((as const (Array tuple2!2584 Bool)) false) (h!2311 (toList!851 lt!69331)) true) (content!133 (t!6152 (toList!851 lt!69331)))))))

(assert (= (and d!42649 c!25536) b!136041))

(assert (= (and d!42649 (not c!25536)) b!136042))

(declare-fun m!162233 () Bool)

(assert (=> b!136042 m!162233))

(assert (=> b!136042 m!159617))

(assert (=> d!40507 d!42649))

(declare-fun b!136043 () Bool)

(declare-fun e!88554 () (_ BitVec 32))

(declare-fun e!88555 () (_ BitVec 32))

(assert (=> b!136043 (= e!88554 e!88555)))

(declare-fun c!25538 () Bool)

(assert (=> b!136043 (= c!25538 (validKeyInArray!0 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!136044 () Bool)

(declare-fun call!14924 () (_ BitVec 32))

(assert (=> b!136044 (= e!88555 (bvadd #b00000000000000000000000000000001 call!14924))))

(declare-fun d!42651 () Bool)

(declare-fun lt!70975 () (_ BitVec 32))

(assert (=> d!42651 (and (bvsge lt!70975 #b00000000000000000000000000000000) (bvsle lt!70975 (bvsub (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!42651 (= lt!70975 e!88554)))

(declare-fun c!25537 () Bool)

(assert (=> d!42651 (= c!25537 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!42651 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (=> d!42651 (= (arrayCountValidKeys!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))) lt!70975)))

(declare-fun b!136045 () Bool)

(assert (=> b!136045 (= e!88555 call!14924)))

(declare-fun b!136046 () Bool)

(assert (=> b!136046 (= e!88554 #b00000000000000000000000000000000)))

(declare-fun bm!14921 () Bool)

(assert (=> bm!14921 (= call!14924 (arrayCountValidKeys!0 (_keys!4612 (v!3192 (underlying!451 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2518 (_keys!4612 (v!3192 (underlying!451 thiss!992))))))))

(assert (= (and d!42651 c!25537) b!136046))

(assert (= (and d!42651 (not c!25537)) b!136043))

(assert (= (and b!136043 c!25538) b!136044))

(assert (= (and b!136043 (not c!25538)) b!136045))

(assert (= (or b!136044 b!136045) bm!14921))

(assert (=> b!136043 m!156349))

(assert (=> b!136043 m!156349))

(assert (=> b!136043 m!156351))

(declare-fun m!162235 () Bool)

(assert (=> bm!14921 m!162235))

(assert (=> bm!14775 d!42651))

(declare-fun d!42653 () Bool)

(declare-fun res!65206 () Bool)

(declare-fun e!88556 () Bool)

(assert (=> d!42653 (=> res!65206 e!88556)))

(assert (=> d!42653 (= res!65206 (and ((_ is Cons!1706) (toList!851 lt!69331)) (= (_1!1303 (h!2311 (toList!851 lt!69331))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!42653 (= (containsKey!174 (toList!851 lt!69331) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!88556)))

(declare-fun b!136047 () Bool)

(declare-fun e!88557 () Bool)

(assert (=> b!136047 (= e!88556 e!88557)))

(declare-fun res!65207 () Bool)

(assert (=> b!136047 (=> (not res!65207) (not e!88557))))

(assert (=> b!136047 (= res!65207 (and (or (not ((_ is Cons!1706) (toList!851 lt!69331))) (bvsle (_1!1303 (h!2311 (toList!851 lt!69331))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Cons!1706) (toList!851 lt!69331)) (bvslt (_1!1303 (h!2311 (toList!851 lt!69331))) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!136048 () Bool)

(assert (=> b!136048 (= e!88557 (containsKey!174 (t!6152 (toList!851 lt!69331)) (_1!1303 (tuple2!2585 lt!69180 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!42653 (not res!65206)) b!136047))

(assert (= (and b!136047 res!65207) b!136048))

(declare-fun m!162237 () Bool)

(assert (=> b!136048 m!162237))

(assert (=> d!40575 d!42653))

(declare-fun d!42655 () Bool)

(assert (=> d!42655 (isDefined!124 (getValueByKey!170 (toList!851 lt!69172) lt!69177))))

(declare-fun lt!70976 () Unit!4132)

(assert (=> d!42655 (= lt!70976 (choose!826 (toList!851 lt!69172) lt!69177))))

(declare-fun e!88558 () Bool)

(assert (=> d!42655 e!88558))

(declare-fun res!65208 () Bool)

(assert (=> d!42655 (=> (not res!65208) (not e!88558))))

(assert (=> d!42655 (= res!65208 (isStrictlySorted!317 (toList!851 lt!69172)))))

(assert (=> d!42655 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69172) lt!69177) lt!70976)))

(declare-fun b!136049 () Bool)

(assert (=> b!136049 (= e!88558 (containsKey!174 (toList!851 lt!69172) lt!69177))))

(assert (= (and d!42655 res!65208) b!136049))

(assert (=> d!42655 m!156395))

(assert (=> d!42655 m!156395))

(assert (=> d!42655 m!158079))

(declare-fun m!162239 () Bool)

(assert (=> d!42655 m!162239))

(assert (=> d!42655 m!158231))

(assert (=> b!136049 m!158075))

(assert (=> b!133803 d!42655))

(assert (=> b!133803 d!42043))

(assert (=> b!133803 d!40511))

(assert (=> b!133755 d!40519))

(declare-fun d!42657 () Bool)

(declare-fun lt!70977 () Bool)

(assert (=> d!42657 (= lt!70977 (select (content!133 (toList!851 lt!69815)) (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))))

(declare-fun e!88560 () Bool)

(assert (=> d!42657 (= lt!70977 e!88560)))

(declare-fun res!65209 () Bool)

(assert (=> d!42657 (=> (not res!65209) (not e!88560))))

(assert (=> d!42657 (= res!65209 ((_ is Cons!1706) (toList!851 lt!69815)))))

(assert (=> d!42657 (= (contains!889 (toList!851 lt!69815) (tuple2!2585 lt!69253 (minValue!2719 newMap!16))) lt!70977)))

(declare-fun b!136050 () Bool)

(declare-fun e!88559 () Bool)

(assert (=> b!136050 (= e!88560 e!88559)))

(declare-fun res!65210 () Bool)

(assert (=> b!136050 (=> res!65210 e!88559)))

(assert (=> b!136050 (= res!65210 (= (h!2311 (toList!851 lt!69815)) (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))))

(declare-fun b!136051 () Bool)

(assert (=> b!136051 (= e!88559 (contains!889 (t!6152 (toList!851 lt!69815)) (tuple2!2585 lt!69253 (minValue!2719 newMap!16))))))

(assert (= (and d!42657 res!65209) b!136050))

(assert (= (and b!136050 (not res!65210)) b!136051))

(declare-fun m!162241 () Bool)

(assert (=> d!42657 m!162241))

(declare-fun m!162243 () Bool)

(assert (=> d!42657 m!162243))

(declare-fun m!162245 () Bool)

(assert (=> b!136051 m!162245))

(assert (=> b!133599 d!42657))

(assert (=> b!133629 d!40519))

(declare-fun d!42659 () Bool)

(assert (=> d!42659 (isDefined!124 (getValueByKey!170 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))

(declare-fun lt!70978 () Unit!4132)

(assert (=> d!42659 (= lt!70978 (choose!826 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))

(declare-fun e!88561 () Bool)

(assert (=> d!42659 e!88561))

(declare-fun res!65211 () Bool)

(assert (=> d!42659 (=> (not res!65211) (not e!88561))))

(assert (=> d!42659 (= res!65211 (isStrictlySorted!317 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))))

(assert (=> d!42659 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))) lt!70978)))

(declare-fun b!136052 () Bool)

(assert (=> b!136052 (= e!88561 (containsKey!174 (toList!851 (getCurrentListMap!519 lt!69447 lt!69436 (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2248 (_keys!4612 newMap!16)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) (ite c!24527 (index!3275 lt!69116) (index!3272 lt!69116)))))))

(assert (= (and d!42659 res!65211) b!136052))

(assert (=> d!42659 m!156567))

(assert (=> d!42659 m!157133))

(assert (=> d!42659 m!157133))

(assert (=> d!42659 m!157135))

(assert (=> d!42659 m!156567))

(declare-fun m!162247 () Bool)

(assert (=> d!42659 m!162247))

(declare-fun m!162249 () Bool)

(assert (=> d!42659 m!162249))

(assert (=> b!136052 m!156567))

(assert (=> b!136052 m!157129))

(assert (=> b!133393 d!42659))

(assert (=> b!133393 d!42085))

(assert (=> b!133393 d!42087))

(assert (=> d!40627 d!40425))

(declare-fun d!42661 () Bool)

(declare-fun res!65212 () Bool)

(declare-fun e!88562 () Bool)

(assert (=> d!42661 (=> res!65212 e!88562)))

(assert (=> d!42661 (= res!65212 (or ((_ is Nil!1707) lt!69870) ((_ is Nil!1707) (t!6152 lt!69870))))))

(assert (=> d!42661 (= (isStrictlySorted!317 lt!69870) e!88562)))

(declare-fun b!136053 () Bool)

(declare-fun e!88563 () Bool)

(assert (=> b!136053 (= e!88562 e!88563)))

(declare-fun res!65213 () Bool)

(assert (=> b!136053 (=> (not res!65213) (not e!88563))))

(assert (=> b!136053 (= res!65213 (bvslt (_1!1303 (h!2311 lt!69870)) (_1!1303 (h!2311 (t!6152 lt!69870)))))))

(declare-fun b!136054 () Bool)

(assert (=> b!136054 (= e!88563 (isStrictlySorted!317 (t!6152 lt!69870)))))

(assert (= (and d!42661 (not res!65212)) b!136053))

(assert (= (and b!136053 res!65213) b!136054))

(declare-fun m!162251 () Bool)

(assert (=> b!136054 m!162251))

(assert (=> d!40765 d!42661))

(declare-fun d!42663 () Bool)

(declare-fun res!65214 () Bool)

(declare-fun e!88564 () Bool)

(assert (=> d!42663 (=> res!65214 e!88564)))

(assert (=> d!42663 (= res!65214 (or ((_ is Nil!1707) (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))) ((_ is Nil!1707) (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))))))))

(assert (=> d!42663 (= (isStrictlySorted!317 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626)))) e!88564)))

(declare-fun b!136055 () Bool)

(declare-fun e!88565 () Bool)

(assert (=> b!136055 (= e!88564 e!88565)))

(declare-fun res!65215 () Bool)

(assert (=> b!136055 (=> (not res!65215) (not e!88565))))

(assert (=> b!136055 (= res!65215 (bvslt (_1!1303 (h!2311 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))))) (_1!1303 (h!2311 (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))))))))))

(declare-fun b!136056 () Bool)

(assert (=> b!136056 (= e!88565 (isStrictlySorted!317 (t!6152 (toList!851 (ite c!24562 call!14624 (ite c!24560 call!14627 call!14626))))))))

(assert (= (and d!42663 (not res!65214)) b!136055))

(assert (= (and b!136055 res!65215) b!136056))

(assert (=> b!136056 m!161459))

(assert (=> d!40765 d!42663))

(assert (=> b!133715 d!42517))

(assert (=> b!133715 d!40787))

(declare-fun d!42665 () Bool)

(declare-fun e!88566 () Bool)

(assert (=> d!42665 e!88566))

(declare-fun res!65216 () Bool)

(assert (=> d!42665 (=> res!65216 e!88566)))

(declare-fun lt!70980 () Bool)

(assert (=> d!42665 (= res!65216 (not lt!70980))))

(declare-fun lt!70982 () Bool)

(assert (=> d!42665 (= lt!70980 lt!70982)))

(declare-fun lt!70979 () Unit!4132)

(declare-fun e!88567 () Unit!4132)

(assert (=> d!42665 (= lt!70979 e!88567)))

(declare-fun c!25539 () Bool)

(assert (=> d!42665 (= c!25539 lt!70982)))

(assert (=> d!42665 (= lt!70982 (containsKey!174 (toList!851 lt!69616) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42665 (= (contains!886 lt!69616 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70980)))

(declare-fun b!136057 () Bool)

(declare-fun lt!70981 () Unit!4132)

(assert (=> b!136057 (= e!88567 lt!70981)))

(assert (=> b!136057 (= lt!70981 (lemmaContainsKeyImpliesGetValueByKeyDefined!123 (toList!851 lt!69616) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!136057 (isDefined!124 (getValueByKey!170 (toList!851 lt!69616) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!136058 () Bool)

(declare-fun Unit!4285 () Unit!4132)

(assert (=> b!136058 (= e!88567 Unit!4285)))

(declare-fun b!136059 () Bool)

(assert (=> b!136059 (= e!88566 (isDefined!124 (getValueByKey!170 (toList!851 lt!69616) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42665 c!25539) b!136057))

(assert (= (and d!42665 (not c!25539)) b!136058))

(assert (= (and d!42665 (not res!65216)) b!136059))

(declare-fun m!162253 () Bool)

(assert (=> d!42665 m!162253))

(declare-fun m!162255 () Bool)

(assert (=> b!136057 m!162255))

(assert (=> b!136057 m!157039))

(assert (=> b!136057 m!157039))

(declare-fun m!162257 () Bool)

(assert (=> b!136057 m!162257))

(assert (=> b!136059 m!157039))

(assert (=> b!136059 m!157039))

(assert (=> b!136059 m!162257))

(assert (=> d!40543 d!42665))

(declare-fun c!25540 () Bool)

(declare-fun d!42667 () Bool)

(assert (=> d!42667 (= c!25540 (and ((_ is Cons!1706) lt!69614) (= (_1!1303 (h!2311 lt!69614)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!88568 () Option!176)

(assert (=> d!42667 (= (getValueByKey!170 lt!69614 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88568)))

(declare-fun e!88569 () Option!176)

(declare-fun b!136062 () Bool)

(assert (=> b!136062 (= e!88569 (getValueByKey!170 (t!6152 lt!69614) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!136061 () Bool)

(assert (=> b!136061 (= e!88568 e!88569)))

(declare-fun c!25541 () Bool)

(assert (=> b!136061 (= c!25541 (and ((_ is Cons!1706) lt!69614) (not (= (_1!1303 (h!2311 lt!69614)) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!136060 () Bool)

(assert (=> b!136060 (= e!88568 (Some!175 (_2!1303 (h!2311 lt!69614))))))

(declare-fun b!136063 () Bool)

(assert (=> b!136063 (= e!88569 None!174)))

(assert (= (and d!42667 c!25540) b!136060))

(assert (= (and d!42667 (not c!25540)) b!136061))

(assert (= (and b!136061 c!25541) b!136062))

(assert (= (and b!136061 (not c!25541)) b!136063))

(declare-fun m!162259 () Bool)

(assert (=> b!136062 m!162259))

(assert (=> d!40543 d!42667))

(declare-fun d!42669 () Bool)

(assert (=> d!42669 (= (getValueByKey!170 lt!69614 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!175 (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70983 () Unit!4132)

(assert (=> d!42669 (= lt!70983 (choose!834 lt!69614 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88570 () Bool)

(assert (=> d!42669 e!88570))

(declare-fun res!65217 () Bool)

(assert (=> d!42669 (=> (not res!65217) (not e!88570))))

(assert (=> d!42669 (= res!65217 (isStrictlySorted!317 lt!69614))))

(assert (=> d!42669 (= (lemmaContainsTupThenGetReturnValue!88 lt!69614 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70983)))

(declare-fun b!136064 () Bool)

(declare-fun res!65218 () Bool)

(assert (=> b!136064 (=> (not res!65218) (not e!88570))))

(assert (=> b!136064 (= res!65218 (containsKey!174 lt!69614 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!136065 () Bool)

(assert (=> b!136065 (= e!88570 (contains!889 lt!69614 (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42669 res!65217) b!136064))

(assert (= (and b!136064 res!65218) b!136065))

(assert (=> d!42669 m!157033))

(declare-fun m!162261 () Bool)

(assert (=> d!42669 m!162261))

(declare-fun m!162263 () Bool)

(assert (=> d!42669 m!162263))

(declare-fun m!162265 () Bool)

(assert (=> b!136064 m!162265))

(declare-fun m!162267 () Bool)

(assert (=> b!136065 m!162267))

(assert (=> d!40543 d!42669))

(declare-fun b!136066 () Bool)

(declare-fun e!88575 () List!1710)

(assert (=> b!136066 (= e!88575 (insertStrictlySorted!91 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!136067 () Bool)

(declare-fun e!88574 () List!1710)

(declare-fun call!14927 () List!1710)

(assert (=> b!136067 (= e!88574 call!14927)))

(declare-fun b!136068 () Bool)

(declare-fun res!65220 () Bool)

(declare-fun e!88572 () Bool)

(assert (=> b!136068 (=> (not res!65220) (not e!88572))))

(declare-fun lt!70984 () List!1710)

(assert (=> b!136068 (= res!65220 (containsKey!174 lt!70984 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14922 () Bool)

(declare-fun c!25543 () Bool)

(assert (=> bm!14922 (= call!14927 ($colon$colon!91 e!88575 (ite c!25543 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25544 () Bool)

(assert (=> bm!14922 (= c!25544 c!25543)))

(declare-fun c!25545 () Bool)

(declare-fun b!136069 () Bool)

(declare-fun c!25542 () Bool)

(assert (=> b!136069 (= e!88575 (ite c!25542 (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (ite c!25545 (Cons!1706 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (t!6152 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) Nil!1707)))))

(declare-fun d!42671 () Bool)

(assert (=> d!42671 e!88572))

(declare-fun res!65219 () Bool)

(assert (=> d!42671 (=> (not res!65219) (not e!88572))))

(assert (=> d!42671 (= res!65219 (isStrictlySorted!317 lt!70984))))

(assert (=> d!42671 (= lt!70984 e!88574)))

(assert (=> d!42671 (= c!25543 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvslt (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42671 (isStrictlySorted!317 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))

(assert (=> d!42671 (= (insertStrictlySorted!91 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70984)))

(declare-fun b!136070 () Bool)

(declare-fun e!88571 () List!1710)

(assert (=> b!136070 (= e!88574 e!88571)))

(assert (=> b!136070 (= c!25542 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!136071 () Bool)

(declare-fun e!88573 () List!1710)

(declare-fun call!14925 () List!1710)

(assert (=> b!136071 (= e!88573 call!14925)))

(declare-fun b!136072 () Bool)

(declare-fun call!14926 () List!1710)

(assert (=> b!136072 (= e!88571 call!14926)))

(declare-fun b!136073 () Bool)

(assert (=> b!136073 (= e!88572 (contains!889 lt!70984 (tuple2!2585 (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14923 () Bool)

(assert (=> bm!14923 (= call!14926 call!14927)))

(declare-fun bm!14924 () Bool)

(assert (=> bm!14924 (= call!14925 call!14926)))

(declare-fun b!136074 () Bool)

(assert (=> b!136074 (= c!25545 (and ((_ is Cons!1706) (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvsgt (_1!1303 (h!2311 (toList!851 (getCurrentListMap!519 (_keys!4612 newMap!16) (_values!2847 newMap!16) (mask!7163 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1303 (tuple2!2585 (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355) (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!136074 (= e!88571 e!88573)))

(declare-fun b!136075 () Bool)

(assert (=> b!136075 (= e!88573 call!14925)))

(assert (= (and d!42671 c!25543) b!136067))

(assert (= (and d!42671 (not c!25543)) b!136070))

(assert (= (and b!136070 c!25542) b!136072))

(assert (= (and b!136070 (not c!25542)) b!136074))

(assert (= (and b!136074 c!25545) b!136075))

(assert (= (and b!136074 (not c!25545)) b!136071))

(assert (= (or b!136075 b!136071) bm!14924))

(assert (= (or b!136072 bm!14924) bm!14923))

(assert (= (or b!136067 bm!14923) bm!14922))

(assert (= (and bm!14922 c!25544) b!136066))

(assert (= (and bm!14922 (not c!25544)) b!136069))

(assert (= (and d!42671 res!65219) b!136068))

(assert (= (and b!136068 res!65220) b!136073))

(declare-fun m!162269 () Bool)

(assert (=> b!136073 m!162269))

(declare-fun m!162271 () Bool)

(assert (=> b!136068 m!162271))

(declare-fun m!162273 () Bool)

(assert (=> b!136066 m!162273))

(declare-fun m!162275 () Bool)

(assert (=> d!42671 m!162275))

(assert (=> d!42671 m!160821))

(declare-fun m!162277 () Bool)

(assert (=> bm!14922 m!162277))

(assert (=> d!40543 d!42671))

(assert (=> b!133846 d!41505))

(assert (=> b!133572 d!42493))

(assert (=> b!133572 d!41885))

(declare-fun d!42673 () Bool)

(assert (=> d!42673 (= (get!1482 (getValueByKey!170 (toList!851 lt!69250) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))) (v!3198 (getValueByKey!170 (toList!851 lt!69250) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!40463 d!42673))

(assert (=> d!40463 d!41511))

(declare-fun d!42675 () Bool)

(assert (=> d!42675 (= (apply!116 lt!69756 (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000)) (get!1482 (getValueByKey!170 (toList!851 lt!69756) (select (arr!2248 (_keys!4612 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5707 () Bool)

(assert (= bs!5707 d!42675))

(assert (=> bs!5707 m!156125))

(assert (=> bs!5707 m!161961))

(assert (=> bs!5707 m!161961))

(declare-fun m!162279 () Bool)

(assert (=> bs!5707 m!162279))

(assert (=> b!133515 d!42675))

(declare-fun c!25546 () Bool)

(declare-fun d!42677 () Bool)

(assert (=> d!42677 (= c!25546 ((_ is ValueCellFull!1094) (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!88576 () V!3481)

(assert (=> d!42677 (= (get!1478 (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!88576)))

(declare-fun b!136076 () Bool)

(assert (=> b!136076 (= e!88576 (get!1480 (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!136077 () Bool)

(assert (=> b!136077 (= e!88576 (get!1481 (select (arr!2249 (array!4760 (store (arr!2249 (_values!2847 newMap!16)) (index!3273 lt!69116) (ValueCellFull!1094 (get!1478 (select (arr!2249 (_values!2847 (v!3192 (underlying!451 thiss!992)))) from!355) (dynLambda!418 (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2519 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!418 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42677 c!25546) b!136076))

(assert (= (and d!42677 (not c!25546)) b!136077))

(assert (=> b!136076 m!157411))

(assert (=> b!136076 m!156135))

(declare-fun m!162281 () Bool)

(assert (=> b!136076 m!162281))

(assert (=> b!136077 m!157411))

(assert (=> b!136077 m!156135))

(declare-fun m!162283 () Bool)

(assert (=> b!136077 m!162283))

(assert (=> b!133515 d!42677))

(declare-fun d!42679 () Bool)

(declare-fun lt!70985 () Bool)

(assert (=> d!42679 (= lt!70985 (select (content!133 (toList!851 lt!70008)) (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))))

(declare-fun e!88578 () Bool)

(assert (=> d!42679 (= lt!70985 e!88578)))

(declare-fun res!65221 () Bool)

(assert (=> d!42679 (=> (not res!65221) (not e!88578))))

(assert (=> d!42679 (= res!65221 ((_ is Cons!1706) (toList!851 lt!70008)))))

(assert (=> d!42679 (= (contains!889 (toList!851 lt!70008) (tuple2!2585 lt!69365 (minValue!2719 newMap!16))) lt!70985)))

(declare-fun b!136078 () Bool)

(declare-fun e!88577 () Bool)

(assert (=> b!136078 (= e!88578 e!88577)))

(declare-fun res!65222 () Bool)

(assert (=> b!136078 (=> res!65222 e!88577)))

(assert (=> b!136078 (= res!65222 (= (h!2311 (toList!851 lt!70008)) (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))))

(declare-fun b!136079 () Bool)

(assert (=> b!136079 (= e!88577 (contains!889 (t!6152 (toList!851 lt!70008)) (tuple2!2585 lt!69365 (minValue!2719 newMap!16))))))

(assert (= (and d!42679 res!65221) b!136078))

(assert (= (and b!136078 (not res!65222)) b!136079))

(declare-fun m!162285 () Bool)

(assert (=> d!42679 m!162285))

(declare-fun m!162287 () Bool)

(assert (=> d!42679 m!162287))

(declare-fun m!162289 () Bool)

(assert (=> b!136079 m!162289))

(assert (=> b!133914 d!42679))

(declare-fun d!42681 () Bool)

(declare-fun res!65223 () Bool)

(declare-fun e!88579 () Bool)

(assert (=> d!42681 (=> res!65223 e!88579)))

(assert (=> d!42681 (= res!65223 (and ((_ is Cons!1706) lt!69889) (= (_1!1303 (h!2311 lt!69889)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(assert (=> d!42681 (= (containsKey!174 lt!69889 (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))) e!88579)))

(declare-fun b!136080 () Bool)

(declare-fun e!88580 () Bool)

(assert (=> b!136080 (= e!88579 e!88580)))

(declare-fun res!65224 () Bool)

(assert (=> b!136080 (=> (not res!65224) (not e!88580))))

(assert (=> b!136080 (= res!65224 (and (or (not ((_ is Cons!1706) lt!69889)) (bvsle (_1!1303 (h!2311 lt!69889)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))) ((_ is Cons!1706) lt!69889) (bvslt (_1!1303 (h!2311 lt!69889)) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992))))))))))

(declare-fun b!136081 () Bool)

(assert (=> b!136081 (= e!88580 (containsKey!174 (t!6152 lt!69889) (_1!1303 (tuple2!2585 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3192 (underlying!451 thiss!992)))))))))

(assert (= (and d!42681 (not res!65223)) b!136080))

(assert (= (and b!136080 res!65224) b!136081))

(declare-fun m!162291 () Bool)

(assert (=> b!136081 m!162291))

(assert (=> b!133698 d!42681))

(declare-fun d!42683 () Bool)

(declare-fun res!65225 () Bool)

(declare-fun e!88581 () Bool)

(assert (=> d!42683 (=> res!65225 e!88581)))

(assert (=> d!42683 (= res!65225 (and ((_ is Cons!1706) (t!6152 (t!6152 (toList!851 lt!69005)))) (= (_1!1303 (h!2311 (t!6152 (t!6152 (toList!851 lt!69005))))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(assert (=> d!42683 (= (containsKey!174 (t!6152 (t!6152 (toList!851 lt!69005))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)) e!88581)))

(declare-fun b!136082 () Bool)

(declare-fun e!88582 () Bool)

(assert (=> b!136082 (= e!88581 e!88582)))

(declare-fun res!65226 () Bool)

(assert (=> b!136082 (=> (not res!65226) (not e!88582))))

(assert (=> b!136082 (= res!65226 (and (or (not ((_ is Cons!1706) (t!6152 (t!6152 (toList!851 lt!69005))))) (bvsle (_1!1303 (h!2311 (t!6152 (t!6152 (toList!851 lt!69005))))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))) ((_ is Cons!1706) (t!6152 (t!6152 (toList!851 lt!69005)))) (bvslt (_1!1303 (h!2311 (t!6152 (t!6152 (toList!851 lt!69005))))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355))))))

(declare-fun b!136083 () Bool)

(assert (=> b!136083 (= e!88582 (containsKey!174 (t!6152 (t!6152 (t!6152 (toList!851 lt!69005)))) (select (arr!2248 (_keys!4612 (v!3192 (underlying!451 thiss!992)))) from!355)))))

(assert (= (and d!42683 (not res!65225)) b!136082))

(assert (= (and b!136082 res!65226) b!136083))

(assert (=> b!136083 m!155841))

(declare-fun m!162293 () Bool)

(assert (=> b!136083 m!162293))

(assert (=> b!133163 d!42683))

(declare-fun condMapEmpty!4659 () Bool)

(declare-fun mapDefault!4659 () ValueCell!1094)

(assert (=> mapNonEmpty!4658 (= condMapEmpty!4659 (= mapRest!4658 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4659)))))

(declare-fun e!88584 () Bool)

(declare-fun mapRes!4659 () Bool)

(assert (=> mapNonEmpty!4658 (= tp!11228 (and e!88584 mapRes!4659))))

(declare-fun b!136084 () Bool)

(declare-fun e!88583 () Bool)

(assert (=> b!136084 (= e!88583 tp_is_empty!2875)))

(declare-fun b!136085 () Bool)

(assert (=> b!136085 (= e!88584 tp_is_empty!2875)))

(declare-fun mapIsEmpty!4659 () Bool)

(assert (=> mapIsEmpty!4659 mapRes!4659))

(declare-fun mapNonEmpty!4659 () Bool)

(declare-fun tp!11229 () Bool)

(assert (=> mapNonEmpty!4659 (= mapRes!4659 (and tp!11229 e!88583))))

(declare-fun mapKey!4659 () (_ BitVec 32))

(declare-fun mapRest!4659 () (Array (_ BitVec 32) ValueCell!1094))

(declare-fun mapValue!4659 () ValueCell!1094)

(assert (=> mapNonEmpty!4659 (= mapRest!4658 (store mapRest!4659 mapKey!4659 mapValue!4659))))

(assert (= (and mapNonEmpty!4658 condMapEmpty!4659) mapIsEmpty!4659))

(assert (= (and mapNonEmpty!4658 (not condMapEmpty!4659)) mapNonEmpty!4659))

(assert (= (and mapNonEmpty!4659 ((_ is ValueCellFull!1094) mapValue!4659)) b!136084))

(assert (= (and mapNonEmpty!4658 ((_ is ValueCellFull!1094) mapDefault!4659)) b!136085))

(declare-fun m!162295 () Bool)

(assert (=> mapNonEmpty!4659 m!162295))

(declare-fun condMapEmpty!4660 () Bool)

(declare-fun mapDefault!4660 () ValueCell!1094)

(assert (=> mapNonEmpty!4657 (= condMapEmpty!4660 (= mapRest!4657 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4660)))))

(declare-fun e!88586 () Bool)

(declare-fun mapRes!4660 () Bool)

(assert (=> mapNonEmpty!4657 (= tp!11227 (and e!88586 mapRes!4660))))

(declare-fun b!136086 () Bool)

(declare-fun e!88585 () Bool)

(assert (=> b!136086 (= e!88585 tp_is_empty!2875)))

(declare-fun b!136087 () Bool)

(assert (=> b!136087 (= e!88586 tp_is_empty!2875)))

(declare-fun mapIsEmpty!4660 () Bool)

(assert (=> mapIsEmpty!4660 mapRes!4660))

(declare-fun mapNonEmpty!4660 () Bool)

(declare-fun tp!11230 () Bool)

(assert (=> mapNonEmpty!4660 (= mapRes!4660 (and tp!11230 e!88585))))

(declare-fun mapValue!4660 () ValueCell!1094)

(declare-fun mapRest!4660 () (Array (_ BitVec 32) ValueCell!1094))

(declare-fun mapKey!4660 () (_ BitVec 32))

(assert (=> mapNonEmpty!4660 (= mapRest!4657 (store mapRest!4660 mapKey!4660 mapValue!4660))))

(assert (= (and mapNonEmpty!4657 condMapEmpty!4660) mapIsEmpty!4660))

(assert (= (and mapNonEmpty!4657 (not condMapEmpty!4660)) mapNonEmpty!4660))

(assert (= (and mapNonEmpty!4660 ((_ is ValueCellFull!1094) mapValue!4660)) b!136086))

(assert (= (and mapNonEmpty!4657 ((_ is ValueCellFull!1094) mapDefault!4660)) b!136087))

(declare-fun m!162297 () Bool)

(assert (=> mapNonEmpty!4660 m!162297))

(declare-fun b_lambda!6029 () Bool)

(assert (= b_lambda!5997 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6029)))

(declare-fun b_lambda!6031 () Bool)

(assert (= b_lambda!6005 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6031)))

(declare-fun b_lambda!6033 () Bool)

(assert (= b_lambda!6015 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6033)))

(declare-fun b_lambda!6035 () Bool)

(assert (= b_lambda!5983 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6035)))

(declare-fun b_lambda!6037 () Bool)

(assert (= b_lambda!6007 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6037)))

(declare-fun b_lambda!6039 () Bool)

(assert (= b_lambda!5949 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 (_2!1304 lt!69115)))) (and b!132384 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (_2!1304 lt!69115)))) b_lambda!6039)))

(declare-fun b_lambda!6041 () Bool)

(assert (= b_lambda!6013 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6041)))

(declare-fun b_lambda!6043 () Bool)

(assert (= b_lambda!6017 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6043)))

(declare-fun b_lambda!6045 () Bool)

(assert (= b_lambda!6023 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6045)))

(declare-fun b_lambda!6047 () Bool)

(assert (= b_lambda!6021 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6047)))

(declare-fun b_lambda!6049 () Bool)

(assert (= b_lambda!5999 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6049)))

(declare-fun b_lambda!6051 () Bool)

(assert (= b_lambda!6011 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6051)))

(declare-fun b_lambda!6053 () Bool)

(assert (= b_lambda!6009 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6053)))

(declare-fun b_lambda!6055 () Bool)

(assert (= b_lambda!5989 (or (and b!132380 b_free!2917) (and b!132384 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))))) b_lambda!6055)))

(declare-fun b_lambda!6057 () Bool)

(assert (= b_lambda!5995 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6057)))

(declare-fun b_lambda!6059 () Bool)

(assert (= b_lambda!6025 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6059)))

(declare-fun b_lambda!6061 () Bool)

(assert (= b_lambda!6001 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6061)))

(declare-fun b_lambda!6063 () Bool)

(assert (= b_lambda!6003 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6063)))

(declare-fun b_lambda!6065 () Bool)

(assert (= b_lambda!5987 (or (and b!132380 b_free!2917) (and b!132384 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))))) b_lambda!6065)))

(declare-fun b_lambda!6067 () Bool)

(assert (= b_lambda!6019 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6067)))

(declare-fun b_lambda!6069 () Bool)

(assert (= b_lambda!5985 (or (and b!132380 b_free!2917 (= (defaultEntry!2864 (v!3192 (underlying!451 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132384 b_free!2919) b_lambda!6069)))

(check-sat (not d!41761) (not b!135977) (not d!42507) (not b!134466) (not b!134887) (not d!42665) (not b!134074) (not b!134707) (not b!134831) (not d!41849) (not b!135482) (not d!41615) (not b!134156) (not b!134874) (not b!134835) (not d!41795) (not b!134527) (not b!135696) (not bm!14835) (not b!134816) (not b!134329) (not d!41495) (not b!134994) (not b!135322) (not d!42659) (not b!135392) (not b!134402) (not d!41539) (not b!135774) (not b_lambda!6055) (not d!42093) (not d!41143) (not d!42365) (not d!41777) (not b!134734) (not d!42631) (not b!135555) (not d!41237) (not b!135087) (not b!134969) (not d!42057) (not b!135076) (not d!41343) (not b!135260) (not d!41633) (not bm!14886) (not bm!14844) (not b!135045) (not d!41271) (not d!41477) (not b!136056) (not bm!14867) (not b!135520) (not d!42505) (not b!135298) (not d!42345) (not b!135304) (not b!134817) (not b!135393) (not b!135504) (not d!42605) (not b!134499) (not b!135365) (not d!41611) (not b!134616) (not b!134664) (not d!42417) (not b!135368) (not b!134064) (not b!135128) (not d!41997) (not d!42527) (not b!134132) (not b!134390) (not b!135015) (not b!134297) (not b!135876) (not b!134551) (not d!42475) (not d!41711) (not d!41497) (not b!134121) (not d!41281) (not d!41563) (not bm!14889) (not b!134581) (not d!41841) (not d!41123) (not b!134376) (not d!41099) (not d!42051) (not b!134695) (not b!135353) (not b!135796) (not b_lambda!5919) (not d!42443) (not d!41433) (not b!134875) (not d!41759) (not b!134428) (not b!135138) (not b!134944) (not d!40995) (not b!135405) (not b!135287) (not b!135691) (not d!42655) (not b!135964) (not d!41935) (not b!136003) (not d!41031) (not b!135989) (not d!42169) (not b!134092) (not b!135082) (not d!41391) (not b!135999) (not b!135110) (not d!41209) (not b!135206) (not d!42001) (not d!41101) (not b!135352) (not d!42283) (not b!134071) (not b!136081) (not b!134530) (not b!135547) (not b!134773) (not d!42461) (not b!135659) (not d!42021) (not d!42091) (not b!135183) (not b!134896) (not b!135915) (not b!134812) (not d!42491) (not b!135946) (not d!42597) (not d!41929) (not b!134392) (not b!134263) (not b!134975) (not b!135374) (not d!41937) (not d!42269) (not b!135673) (not b!134164) (not d!42575) (not b!134922) (not b!135135) (not b!135382) (not d!41945) (not b!135372) (not bm!14838) (not d!42117) (not d!42353) (not b!134504) (not d!41247) (not b!135346) (not d!41103) (not b!134377) (not b!135412) (not d!41527) (not d!41375) (not d!41347) (not b!135493) (not b!135040) (not b!136062) (not b!135408) (not b_next!2917) (not d!41879) (not b_lambda!5895) (not d!41469) (not b!135628) (not d!41509) (not d!42171) (not b!135276) (not d!41005) (not b!134710) (not d!42393) (not b!135557) (not b!135211) (not d!41089) (not b!134781) (not b!135044) (not b!134901) (not b!135284) (not b!135652) (not d!41397) (not b!135344) (not b!135171) (not b!135326) (not b!134400) (not d!42115) (not d!42241) (not b!135760) (not b!134131) (not b!134247) (not d!42465) (not d!42137) (not b!135414) (not b!134756) (not b!135025) (not b!134244) (not b_lambda!5993) (not b!134653) (not b!135645) (not b!135737) (not b!134935) (not b!135848) (not d!42609) (not b!135908) (not b!134072) (not b!134512) (not b!135717) (not b!134035) (not d!42387) (not b_lambda!5967) (not d!41465) (not b!135591) (not b!134442) (not b!134239) (not b!134472) (not b!135719) (not d!41871) (not d!42401) (not b!134739) (not b!136068) (not b!134509) (not d!41273) (not b!134253) (not b!135878) (not b!134688) (not b!134939) (not b!134747) (not d!42457) (not d!41481) (not b!134215) (not b!134790) (not b!135804) (not b_lambda!6045) (not b!135386) (not d!41819) (not b!134636) (not b!134984) (not d!41221) (not b!134705) (not b!134335) (not b_lambda!5963) (not d!42277) (not d!42003) (not b!134142) (not d!42529) (not b!134809) (not b!134148) (not d!42477) (not d!42127) (not b!134183) (not d!41747) (not b!135788) (not d!41991) (not b_lambda!6069) (not d!42149) (not b!134877) (not d!41753) (not b!135883) (not b!134690) (not d!41553) (not d!41425) (not b!135034) (not d!42139) (not b!135159) (not b!134250) (not d!42265) (not b!134679) (not b!134159) (not b!135143) (not d!42405) (not d!42399) (not d!42281) (not b!135245) (not b!134561) (not d!41113) (not b!134609) (not b!134590) (not b!134882) (not b!135080) (not b!135349) (not d!42391) (not b!135817) (not b!134042) (not d!42409) (not b!135793) (not b!135004) (not d!41835) (not b!135145) (not b!135380) (not d!42069) (not b!135704) (not d!41955) (not b!135496) (not b!134174) (not d!42513) (not b!135148) (not b!136073) (not bm!14814) (not bm!14848) (not d!41985) (not b!135967) (not b!135064) (not d!41171) (not b!135622) (not b!134535) (not b!135422) (not d!42541) (not d!42259) (not b!135556) (not b!134646) (not d!41847) (not b!135026) (not d!41581) (not b!135847) tp_is_empty!2875 (not b!134384) (not b!134111) (not d!41057) (not d!41561) (not b!134459) (not d!41853) (not b!134112) (not b!135246) (not b!134807) (not b!136066) (not bm!14892) (not bm!14795) (not b!135391) (not b!135130) (not b!135724) (not b!134038) (not d!42615) (not b!134041) (not b_lambda!6035) (not b!134827) (not d!42131) (not b!135872) (not b!134319) (not d!41269) (not d!41651) (not d!41917) (not d!42449) (not bm!14798) (not b!134380) (not b!135295) (not b!134941) (not b!135477) (not d!41455) (not b!134232) (not b!134902) (not d!42361) (not b!134144) (not b!135727) (not d!42031) (not b!134595) (not d!42305) (not d!41839) (not d!41775) (not bm!14830) (not b_lambda!5891) (not b!135312) (not b!134018) (not d!42415) (not d!41767) (not d!41033) (not b!134701) (not d!42669) (not d!42007) (not b!134061) (not d!42643) (not b!135828) (not b!135486) (not b!134691) (not d!42639) (not b!135443) (not b!135522) (not b!135545) (not b!134570) (not bm!14827) (not d!41125) (not b!135923) (not b!134256) (not d!41491) (not mapNonEmpty!4659) (not b!134354) (not bm!14858) (not b!134097) (not b!134964) (not b!134229) (not b!135479) (not d!42563) (not b!134025) (not b!134060) (not b!134326) (not d!41993) (not d!41913) (not bm!14799) (not b!135475) (not b!134539) (not b!134930) (not d!41907) (not b!135333) (not d!41293) (not d!42577) (not d!42253) (not b!136059) (not b!134190) (not d!41259) (not b!134418) (not b_lambda!5973) (not b!134520) (not b!135400) (not d!41109) (not d!41051) (not b!135745) (not d!41677) (not b!134666) (not b!134308) (not b!134009) (not d!41989) (not b!135236) (not b!134804) (not b!134811) (not bm!14890) (not d!41751) (not b!134572) (not b!135543) (not b!134970) (not b_lambda!5975) (not d!42079) (not d!41043) (not d!41625) (not b!135694) (not b!135863) (not b!134911) (not b!134775) (not b!135134) (not d!42363) (not d!42055) (not b!135285) (not d!41423) (not b!134758) (not b!134822) (not d!41623) (not d!41911) (not b!134415) (not d!42071) (not b!134201) (not d!41073) (not b!134732) (not b!135410) (not b!134573) (not d!41627) (not d!41585) (not b!135203) (not b!134962) (not bm!14868) (not d!41533) (not b!134731) (not b!134421) (not b!135985) (not b!134967) (not b!134950) (not bm!14839) (not bm!14880) (not b!134868) (not d!42583) (not d!41643) (not b!135325) (not b!136079) (not d!42151) (not b!134873) (not b!134552) (not b!135033) (not b!135301) (not b!134744) (not d!41275) (not b!135664) (not b!136015) (not b!135531) (not b!134632) (not b!134920) (not d!42043) (not d!42271) (not b!135854) (not d!42429) (not b!135687) (not d!41009) (not b!134562) (not b!135146) (not b!134917) (not b!135618) (not bm!14841) (not b!134942) (not b!134379) (not b!135600) (not d!42223) (not d!42227) (not d!41095) (not b!135750) (not b!135729) (not d!41255) (not b!135451) (not b!135991) (not b!134540) (not bm!14914) (not d!42219) (not d!41449) (not d!42517) (not d!41307) (not d!41631) (not d!42499) (not b!135420) (not b!135895) (not b!135735) (not d!41197) (not bm!14877) (not d!41713) (not b!135698) (not bm!14808) (not b!135865) (not b!136000) (not b_lambda!6029) (not b!134482) (not b!134722) (not b!136031) (not d!42535) (not b!134264) (not b_lambda!5957) (not b!135431) (not b!135423) (not d!41961) (not d!42311) (not d!41453) (not b!134088) (not b!134197) (not b!135267) (not d!42455) (not b!135375) (not b!135671) (not b!135000) (not b!135137) (not d!42439) (not b_lambda!6047) (not d!41261) (not b!134207) (not d!42435) (not b!134958) (not b!135092) (not b!135484) (not b_lambda!5971) (not b!135427) (not d!41663) (not b!136048) (not b!134987) (not b!135931) (not b!134007) (not d!42503) (not d!42347) (not d!41765) (not b!134178) (not d!41363) (not b!135467) (not b!136010) (not b!134851) (not d!42451) (not b!134904) (not b!134098) (not d!41235) (not d!41589) (not b!135336) (not d!42675) (not b!134305) (not d!42293) (not b!135027) (not d!41001) (not d!41577) (not b!134603) (not b_lambda!6067) (not b!134100) (not b!135378) (not d!41897) (not b!135922) (not b!134703) (not b!134668) (not b!134476) (not b!136043) (not b!135551) (not b!136076) (not d!41485) (not b!134996) (not b!135070) (not b!135101) (not b!134398) (not b!136009) (not d!41569) (not b!136083) (not b!135844) (not d!41303) (not b_lambda!6037) (not b!134860) (not b_lambda!5911) (not b!135259) (not b!134560) (not d!41737) (not b!135439) (not b!135656) (not b!134513) (not b!134753) (not d!41411) (not b!134760) (not b!135507) (not b!135678) (not b!134363) (not b!134079) (not b!135104) (not b!134604) (not b!134909) (not b!135041) (not d!41085) (not b!134933) (not d!42407) (not b!134779) (not b!134633) (not b!134693) (not b!135043) (not b!134117) (not b!134924) (not b!135703) (not b!135765) (not b_lambda!6063) (not b!135941) (not b!134726) (not b!135738) (not b!135068) (not b!135716) (not b!135323) (not d!42309) (not b!135559) (not d!42111) (not b!134799) (not b!134321) (not b!134866) (not b_lambda!6027) (not d!41619) (not d!42397) (not d!41321) (not b!135180) (not b!135177) (not b!134675) (not d!41523) (not d!42193) (not b!135532) (not b!134937) (not b!135338) (not b!135227) (not b!134267) (not b!135891) (not d!41973) (not d!42671) (not b!134837) (not b!135833) (not bm!14865) (not d!41329) (not b_lambda!6065) (not b!134856) (not d!40997) (not b!135841) (not b!135132) (not b!135341) (not d!41443) (not d!42059) (not d!41665) (not b!134892) (not d!41025) (not b_lambda!5981) (not b!135542) (not bm!14855) (not b!135616) (not b!134461) (not d!41135) (not b!134068) (not b!135886) (not b!134686) (not b!135299) (not b!134127) (not d!41117) (not b!134511) (not b!135550) (not d!41441) (not d!41729) (not b!134103) (not b!135270) (not b!134844) (not b!134568) (not b_lambda!6041) (not b!134286) (not d!41535) (not d!42571) (not d!41899) (not d!42413) (not b!134660) (not b!135096) (not bm!14783) (not d!41507) (not d!41127) (not b!135527) (not d!41757) (not d!41791) (not b!134592) (not b_lambda!5979) (not b!135926) (not b!135485) (not b!134842) (not b!135292) (not d!41513) (not d!41931) (not bm!14784) (not b!136052) (not d!42555) (not b_lambda!6053) (not d!42419) (not d!42163) (not d!41037) (not b!135524) (not b!135424) (not b!135306) (not b!134788) (not d!42273) (not b!135595) (not b!134606) (not bm!14862) (not d!41703) (not d!42053) (not b!135776) (not b!135216) (not b!134404) (not d!42085) (not b!134057) (not d!42157) (not b_lambda!5969) (not b!135029) (not b!134185) (not d!41225) (not b!134863) (not b!135297) (not b!135799) (not b!134226) (not bm!14871) (not d!42585) (not d!41365) (not d!41097) (not d!41999) (not b!135824) (not b!136054) (not d!42403) (not b!135571) (not d!41457) (not d!42421) (not b!134393) (not d!41741) (not b!134419) (not b!135464) (not b!135562) (not b!135107) (not b_lambda!6033) (not b!135265) (not b!135715) (not d!42213) (not d!41173) (not b!134304) (not b!135447) (not d!41573) (not b!134368) (not d!41219) (not d!41943) (not d!41429) (not b!135795) (not b!135620) (not d!41475) (not b!135220) (not bm!14874) (not bm!14788) (not b!134052) (not b!134586) (not b!135565) (not b!134327) (not b!135173) (not b!134947) (not d!41543) (not bm!14852) (not d!41821) (not b_lambda!5915) (not b!134122) (not b!135797) (not d!42211) (not d!42037) (not bm!14846) (not b!135633) (not d!41875) (not d!41675) (not b!135826) (not d!42547) (not bm!14905) (not b!135085) (not b!135539) (not d!42389) (not b!134054) (not b!134824) (not d!41825) (not b!134748) (not bm!14823) (not d!41155) (not b!134209) (not b_lambda!6061) (not d!41417) (not b!134588) (not b!135456) (not b!135230) (not mapNonEmpty!4660) (not b!134107) (not d!41359) (not bm!14920) (not d!41091) (not b!134762) (not b!134630) (not d!42155) (not b!134759) (not d!41471) (not b!134634) (not d!41345) (not d!41283) (not bm!14832) (not b!134940) (not b!134284) (not b!134846) (not b!135692) (not b!134212) (not b_lambda!5917) (not b!135753) (not b!135667) (not d!41833) (not b!135049) (not b!135708) (not b!134621) (not b!134277) (not b!134566) (not d!41621) (not b!134503) (not b!135174) (not b!135241) (not b!135611) (not b!135058) (not b!134823) (not d!41483) (not b!134953) (not b!135822) (not b!135506) (not b_lambda!5909) (not b!135453) (not b!135976) (not b!135383) (not b!135499) (not d!41367) (not b!135056) (not d!41165) (not d!42081) (not d!41287) (not b!135613) (not b_lambda!6059) (not b!134435) (not b!134220) (not bm!14911) (not b!135529) (not d!41921) (not b!135254) (not b!135006) (not d!42133) (not b!134302) (not b!134236) (not b!134049) (not d!41111) (not b!134780) (not b!134409) (not b!134357) (not b!134826) (not d!41787) (not b!136051) (not d!42341) (not b!134651) (not b!135974) (not d!42229) (not b!135435) (not b!135257) (not d!42239) (not b!134382) (not b!135083) (not d!42319) (not b!135669) (not d!41503) (not b!134439) (not b!134525) (not b!134426) (not b!134681) (not b!134871) (not b!136042) (not b!135900) (not b!134139) (not d!42011) (not d!42551) (not d!41903) (not b_lambda!5953) (not d!41069) (not b!134506) (not d!42329) (not d!41163) (not d!41017) (not b!134294) (not b!135593) (not d!41699) (not d!41641) (not b!135598) (not b!134108) (not b!134783) (not b!134480) (not d!42411) (not b!135065) (not d!41861) (not d!42039) (not b!134313) (not b!135444) (not b!135161) (not d!42467) (not b!136039) (not b!135661) (not bm!14805) (not d!41697) (not d!42279) (not d!42109) (not b!135699) (not d!41957) (not b!134115) (not b!134222) (not b!135415) (not d!42121) (not d!42335) (not d!41295) (not d!41807) (not b!135474) (not b!134564) (not b!135948) (not b!136035) (not bm!14777) (not b!134306) (not b!135773) (not b!135317) (not d!41467) (not b!134777) (not d!42159) (not d!42143) (not d!41817) (not b!135020) (not b!134905) (not b!134145) (not b!136065) (not bm!14922) (not d!41333) (not b!135426) (not d!41351) (not b!135519) (not d!41107) (not b!134361) (not b!134698) (not b!135693) (not b!134565) (not b_lambda!6039) (not d!42385) (not bm!14908) (not b!135010) (not b!135856) (not d!42497) (not b!134241) (not b!135222) (not d!41489) (not d!41655) (not b!135191) (not b!134532) (not b!134430) b_and!8385 (not d!42599) (not b!135395) (not b!134485) (not d!42285) (not b!135819) (not b!134044) (not b!135360) (not d!41723) (not d!42251) (not b!135838) (not b!135073) (not bm!14802) (not b!135757) (not b!134889) (not b!135647) (not b!135268) (not b!135548) (not d!41901) (not d!42559) (not b!135638) (not b!134490) (not d!41599) (not b!135962) (not b!134128) (not d!41609) (not b!135201) (not d!41493) (not b_lambda!6057) (not b!134671) (not b!134374) (not b!135063) (not d!41873) (not d!41661) (not d!41007) (not b!135710) (not d!41335) (not d!41153) (not b!135936) (not d!41693) (not b!135643) (not d!41463) (not d!41419) (not d!41395) (not d!42493) (not b!134558) (not b!134611) (not b!134770) (not b!135625) (not bm!14810) (not b!135219) (not d!41893) (not b!135623) (not b!135686) (not d!42199) (not b!135281) (not b!134729) (not b_lambda!5991) (not b!134963) (not b!135067) (not b!134925) (not b!135553) (not bm!14866) (not d!41831) (not b!135164) (not d!41909) (not d!41827) (not b!135641) (not b!134972) (not bm!14840) (not b!134625) (not b!134347) (not b!134272) (not bm!14820) (not b!135573) (not b!134274) (not b!134299) (not b_lambda!6031) (not b!136006) (not b!134126) (not b!135770) (not d!42423) (not d!41387) (not b!134081) (not d!42141) (not b!135971) (not d!42165) (not bm!14845) (not d!41965) (not b!134015) (not b_lambda!6049) (not b!135151) (not b!134644) (not b!135508) (not d!41799) (not b!134395) (not b!134204) (not b!135120) (not b!134683) (not d!42067) (not b!136013) (not d!41243) (not b!134463) (not b!134095) (not d!42593) (not b!134491) (not b!134479) (not d!42377) (not b!134445) (not b!134258) (not b!134059) (not b!135142) (not b!135577) (not b!134233) (not b!134714) (not b!135996) (not d!42075) (not b!134965) (not d!42371) (not b!135934) (not b!134641) (not bm!14826) (not b!134927) (not b!135156) (not b!134828) (not d!42105) (not bm!14813) (not d!42005) (not b!134454) (not d!41915) (not b!135099) (not bm!14861) (not b!134330) (not b!135814) (not b!135054) (not b!136077) (not d!41691) (not b!135582) (not b!135465) (not b!134865) (not d!42015) (not d!41865) (not b!135949) (not b!135980) (not d!41813) (not d!42287) (not b!135012) (not d!42471) (not b!135993) (not d!42627) (not b!135031) (not d!42023) (not d!42431) (not b!134885) (not d!42313) (not b!134137) (not b!134649) (not bm!14849) (not d!41717) (not b!135274) (not b!135510) (not b!135209) (not b!134978) (not b!135612) (not d!41195) (not b!135624) (not d!42019) (not b!135912) (not b!134292) (not d!41925) (not b!135734) (not d!42331) (not d!41447) (not d!41745) (not b!134448) (not b!134027) (not d!42383) (not d!41789) (not b!135501) (not b!135419) (not b!134168) (not b!134542) (not b!134422) (not b!134047) (not b!135574) (not b!134118) (not b!135060) (not b!134021) (not b!134360) (not b!135790) (not b!135807) (not b!135589) (not d!42191) (not d!42235) (not b!135488) (not b!135732) (not d!42267) (not b!135888) (not b!135271) (not b!136018) (not b!134652) (not b!134188) (not b!135409) (not d!42063) (not d!41071) (not b!135059) (not b!135007) (not b!135978) (not d!41299) (not b!135244) b_and!8387 (not d!42257) (not b!135416) (not b!135881) (not b!134333) (not b!134550) (not d!41559) (not b!134776) (not b_lambda!5961) (not b!135018) (not b!135263) (not b!136049) (not b!134350) (not b!134224) (not b!135825) (not b!134806) (not b!134607) (not b!134949) (not b!134341) (not b!134261) (not b!134834) (not d!42373) (not d!42343) (not d!41063) (not b!135994) (not d!41829) (not d!42379) (not b!135731) (not b!134567) (not b!134106) (not b!135052) (not b!134110) (not d!42033) (not b_lambda!5977) (not b!135369) (not d!41027) (not b!134545) (not d!42245) (not b!135536) (not b!135078) (not bm!14787) (not b!134285) (not d!42231) (not bm!14896) (not b!134457) (not d!41291) (not b!134260) (not b!135590) (not d!41809) (not b!135411) (not d!41659) (not b!134063) (not b!135389) (not d!42561) (not b!135914) (not d!42255) (not d!41881) (not d!41635) (not b!135154) (not b!134802) (not d!42177) (not b!135515) (not b_lambda!5959) (not d!41061) (not b!134997) (not b!135851) (not b!135234) (not d!41657) (not b!135997) (not b!134897) (not b!134401) (not b!135786) (not b!134600) (not d!42247) (not b!134032) (not d!42101) (not d!41373) (not b!134795) (not d!41521) (not bm!14921) (not b!134180) (not d!42657) (not b!135231) (not b!134620) (not b!134176) (not b!134242) (not b!135106) (not b!135587) (not b!134317) (not b!135320) (not b!134951) (not d!41905) (not b!134814) (not d!41487) (not b!135355) (not b!134135) (not b!135381) (not d!42275) (not d!42469) (not d!42107) (not b!135036) (not bm!14831) (not d!42017) (not b!135953) (not d!41515) (not b!135047) (not b!135459) (not b!134080) (not bm!14791) (not b!135670) (not b_lambda!6051) (not b!135441) (not b!135283) (not b!134718) (not b!135626) (not b!135124) (not d!41083) (not b!134123) (not d!41919) (not d!41087) (not b!134750) (not b!134186) (not d!41191) (not b_lambda!6043) (not b!134597) (not b!134423) (not b!134323) (not d!41707) (not b!134488) (not d!41687) (not d!42523) (not b!134494) (not d!42533) (not b!135314) (not b!135115) (not b_lambda!5955) (not b!135867) (not d!41769) (not b!135554) (not b!134843) (not d!41895) (not b!135575) (not b!135261) (not b!134574) (not d!41473) (not bm!14919) (not d!42557) (not b!135713) (not b!134281) (not d!41763) (not b!134325) (not d!42161) (not b!135702) (not b!134184) (not d!41771) (not bm!14918) (not b!135707) (not b!134914) (not b!135008) (not b!135339) (not b!135781) (not bm!14809) (not b_lambda!5965) (not b!135384) (not b!134899) (not b!134024) (not b!135023) (not d!42481) (not d!42103) (not b!136028) (not d!42315) (not d!42437) (not b!135586) (not b!135351) (not d!41169) (not d!41093) (not b!134840) (not bm!14817) (not b!134153) (not b!134417) (not bm!14780) (not b!135658) (not d!41437) (not b!134936) (not d!42173) (not b!135379) (not b!135859) (not d!41815) (not d!41959) (not d!42425) (not d!41435) (not b!135089) (not d!41727) (not d!41671) (not d!41531) (not d!42637) (not b!135880) (not b!135205) (not d!41041) (not b!134130) (not d!41105) (not b!135472) (not b!135470) (not b!135055) (not d!41541) (not d!42543) (not b!135278) (not b!134469) (not b!135328) (not d!41735) (not b!135248) (not d!42145) (not b!135462) (not b!135376) (not b!135140) (not b!134813) (not b!135920) (not b!135897) (not d!42297) (not b!135030) (not b!134549) (not b!135094) (not d!42299) (not b!134786) (not d!42509) (not b!134270) (not b!134181) (not b!134162) (not b!135683) (not d!41011) (not b!134217) (not d!41517) (not b_lambda!5913) (not bm!14899) (not b!135324) (not b!135701) (not d!41855) (not b!135309) (not b!135772) (not b!134655) (not bm!14883) (not d!41811) (not b!135296) (not d!41715) (not b!135534) (not b!135168) (not b!134515) (not b!134338) (not b!136021) (not d!41857) (not d!42317) (not b!135251) (not b!134548) (not d!41141) (not b!134172) (not bm!14902) (not b!135330) (not d!42295) (not b!134608) (not b!135498) (not d!41121) (not d!42339) (not b!135969) (not b!135150) (not b!134077) (not b!134378) (not d!42077) (not b!134627) (not b!135597) (not b!135003) (not b!135662) (not b!135654) (not b!134555) (not d!41059) (not d!42289) (not b!134193) (not b!135199) (not b!135689) (not d!42291) (not b!134451) (not b!134065) (not b!134023) (not b!136036) (not b!135924) (not b!134751) (not b!135139) (not b!135213) (not d!41349) (not b!134146) (not b!135955) (not b!135957) (not b!134928) (not b!135568) (not d!41613) (not b!135002) (not b!135013) (not b!135196) (not d!42041) (not b!134387) (not b!134537) (not b!135809) (not d!41139) (not d!41479) (not b!135255) (not d!41499) (not b!135098) (not d!42207) (not b!134547) (not d!42515) (not d!41229) (not b!134296) (not b!135343) (not d!41823) (not b!134352) (not d!41053) (not b!134119) (not b!134412) (not b!136057) (not d!42679) (not b!135917) (not bm!14895) (not b!135869) (not b!134322) (not b!135605) (not b!134083) (not b!134678) (not d!41575) (not b!135062) (not bm!14915) (not b!134165) (not b!134820) (not b!135238) (not b!134016) (not b!134767) (not d!41805) (not b!135960) (not bm!14792) (not b!134372) (not b!135944) (not b!134602) (not b!135210) (not b!135609) (not b!136064) (not d!42395) (not b!135767) (not b!134492) (not b!134289) (not b!134359) (not b!134483) (not d!41079) (not bm!14847) (not b!135566) (not b!135218) (not d!42073) (not b!135884) (not b_next!2919) (not b!135446) (not b!135108))
(check-sat b_and!8385 b_and!8387 (not b_next!2917) (not b_next!2919))
