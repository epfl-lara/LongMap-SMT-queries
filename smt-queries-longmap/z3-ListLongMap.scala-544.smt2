; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!14262 () Bool)

(assert start!14262)

(declare-fun b!132503 () Bool)

(declare-fun b_free!2917 () Bool)

(declare-fun b_next!2917 () Bool)

(assert (=> b!132503 (= b_free!2917 (not b_next!2917))))

(declare-fun tp!11195 () Bool)

(declare-fun b_and!8209 () Bool)

(assert (=> b!132503 (= tp!11195 b_and!8209)))

(declare-fun b!132502 () Bool)

(declare-fun b_free!2919 () Bool)

(declare-fun b_next!2919 () Bool)

(assert (=> b!132502 (= b_free!2919 (not b_next!2919))))

(declare-fun tp!11196 () Bool)

(declare-fun b_and!8211 () Bool)

(assert (=> b!132502 (= tp!11196 b_and!8211)))

(declare-fun mapIsEmpty!4637 () Bool)

(declare-fun mapRes!4638 () Bool)

(assert (=> mapIsEmpty!4637 mapRes!4638))

(declare-fun b!132490 () Bool)

(declare-fun res!63797 () Bool)

(declare-fun e!86381 () Bool)

(assert (=> b!132490 (=> (not res!63797) (not e!86381))))

(declare-datatypes ((V!3481 0))(
  ( (V!3482 (val!1482 Int)) )
))
(declare-datatypes ((array!4763 0))(
  ( (array!4764 (arr!2252 (Array (_ BitVec 32) (_ BitVec 64))) (size!2521 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1094 0))(
  ( (ValueCellFull!1094 (v!3197 V!3481)) (EmptyCell!1094) )
))
(declare-datatypes ((array!4765 0))(
  ( (array!4766 (arr!2253 (Array (_ BitVec 32) ValueCell!1094)) (size!2522 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!1096 0))(
  ( (LongMapFixedSize!1097 (defaultEntry!2864 Int) (mask!7164 (_ BitVec 32)) (extraKeys!2629 (_ BitVec 32)) (zeroValue!2719 V!3481) (minValue!2719 V!3481) (_size!597 (_ BitVec 32)) (_keys!4613 array!4763) (_values!2847 array!4765) (_vacant!597 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!886 0))(
  ( (Cell!887 (v!3198 LongMapFixedSize!1096)) )
))
(declare-datatypes ((LongMap!886 0))(
  ( (LongMap!887 (underlying!454 Cell!886)) )
))
(declare-fun thiss!992 () LongMap!886)

(assert (=> b!132490 (= res!63797 (and (= (size!2522 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!7164 (v!3198 (underlying!454 thiss!992))))) (= (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (size!2522 (_values!2847 (v!3198 (underlying!454 thiss!992))))) (bvsge (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000000) (bvsge (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun b!132491 () Bool)

(declare-fun e!86372 () Bool)

(declare-fun e!86371 () Bool)

(assert (=> b!132491 (= e!86372 (and e!86371 mapRes!4638))))

(declare-fun condMapEmpty!4638 () Bool)

(declare-fun mapDefault!4637 () ValueCell!1094)

(assert (=> b!132491 (= condMapEmpty!4638 (= (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4637)))))

(declare-fun mapIsEmpty!4638 () Bool)

(declare-fun mapRes!4637 () Bool)

(assert (=> mapIsEmpty!4638 mapRes!4637))

(declare-fun b!132492 () Bool)

(declare-fun e!86380 () Bool)

(declare-fun tp_is_empty!2875 () Bool)

(assert (=> b!132492 (= e!86380 tp_is_empty!2875)))

(declare-fun b!132493 () Bool)

(declare-fun res!63799 () Bool)

(assert (=> b!132493 (=> (not res!63799) (not e!86381))))

(declare-datatypes ((List!1693 0))(
  ( (Nil!1690) (Cons!1689 (h!2294 (_ BitVec 64)) (t!6136 List!1693)) )
))
(declare-fun arrayNoDuplicates!0 (array!4763 (_ BitVec 32) List!1693) Bool)

(assert (=> b!132493 (= res!63799 (arrayNoDuplicates!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000000 Nil!1690))))

(declare-fun b!132494 () Bool)

(declare-fun e!86368 () Bool)

(assert (=> b!132494 (= e!86368 tp_is_empty!2875)))

(declare-fun b!132495 () Bool)

(declare-fun e!86376 () Bool)

(assert (=> b!132495 (= e!86376 tp_is_empty!2875)))

(declare-fun b!132496 () Bool)

(declare-fun e!86382 () Bool)

(declare-fun e!86375 () Bool)

(assert (=> b!132496 (= e!86382 e!86375)))

(declare-fun b!132497 () Bool)

(declare-fun res!63804 () Bool)

(assert (=> b!132497 (=> (not res!63804) (not e!86381))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!132497 (= res!63804 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun mapNonEmpty!4637 () Bool)

(declare-fun tp!11193 () Bool)

(assert (=> mapNonEmpty!4637 (= mapRes!4638 (and tp!11193 e!86380))))

(declare-fun mapKey!4637 () (_ BitVec 32))

(declare-fun mapValue!4637 () ValueCell!1094)

(declare-fun mapRest!4637 () (Array (_ BitVec 32) ValueCell!1094))

(assert (=> mapNonEmpty!4637 (= (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (store mapRest!4637 mapKey!4637 mapValue!4637))))

(declare-fun b!132498 () Bool)

(declare-fun res!63802 () Bool)

(declare-fun e!86373 () Bool)

(assert (=> b!132498 (=> (not res!63802) (not e!86373))))

(declare-fun newMap!16 () LongMapFixedSize!1096)

(assert (=> b!132498 (= res!63802 (bvsge (bvadd #b00000000000000000000000000000001 (mask!7164 newMap!16)) (_size!597 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun res!63803 () Bool)

(assert (=> start!14262 (=> (not res!63803) (not e!86373))))

(declare-fun valid!541 (LongMap!886) Bool)

(assert (=> start!14262 (= res!63803 (valid!541 thiss!992))))

(assert (=> start!14262 e!86373))

(declare-fun e!86369 () Bool)

(assert (=> start!14262 e!86369))

(assert (=> start!14262 true))

(declare-fun e!86378 () Bool)

(assert (=> start!14262 e!86378))

(declare-fun b!132499 () Bool)

(declare-fun e!86379 () Bool)

(assert (=> b!132499 (= e!86373 e!86379)))

(declare-fun res!63796 () Bool)

(assert (=> b!132499 (=> (not res!63796) (not e!86379))))

(declare-datatypes ((tuple2!2564 0))(
  ( (tuple2!2565 (_1!1293 (_ BitVec 64)) (_2!1293 V!3481)) )
))
(declare-datatypes ((List!1694 0))(
  ( (Nil!1691) (Cons!1690 (h!2295 tuple2!2564) (t!6137 List!1694)) )
))
(declare-datatypes ((ListLongMap!1653 0))(
  ( (ListLongMap!1654 (toList!842 List!1694)) )
))
(declare-fun lt!69167 () ListLongMap!1653)

(declare-fun lt!69166 () ListLongMap!1653)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!132499 (= res!63796 (and (= lt!69166 lt!69167) (not (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1398 (LongMapFixedSize!1096) ListLongMap!1653)

(assert (=> b!132499 (= lt!69167 (map!1398 newMap!16))))

(declare-fun getCurrentListMap!518 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) Int) ListLongMap!1653)

(assert (=> b!132499 (= lt!69166 (getCurrentListMap!518 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!132500 () Bool)

(declare-fun res!63805 () Bool)

(assert (=> b!132500 (=> (not res!63805) (not e!86381))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4763 (_ BitVec 32)) Bool)

(assert (=> b!132500 (= res!63805 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!132501 () Bool)

(assert (=> b!132501 (= e!86381 (or (bvslt (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun e!86370 () Bool)

(declare-fun array_inv!1407 (array!4763) Bool)

(declare-fun array_inv!1408 (array!4765) Bool)

(assert (=> b!132502 (= e!86378 (and tp!11196 tp_is_empty!2875 (array_inv!1407 (_keys!4613 newMap!16)) (array_inv!1408 (_values!2847 newMap!16)) e!86370))))

(assert (=> b!132503 (= e!86375 (and tp!11195 tp_is_empty!2875 (array_inv!1407 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (array_inv!1408 (_values!2847 (v!3198 (underlying!454 thiss!992)))) e!86372))))

(declare-fun b!132504 () Bool)

(assert (=> b!132504 (= e!86370 (and e!86376 mapRes!4637))))

(declare-fun condMapEmpty!4637 () Bool)

(declare-fun mapDefault!4638 () ValueCell!1094)

(assert (=> b!132504 (= condMapEmpty!4637 (= (arr!2253 (_values!2847 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4638)))))

(declare-fun b!132505 () Bool)

(declare-fun res!63800 () Bool)

(assert (=> b!132505 (=> (not res!63800) (not e!86373))))

(assert (=> b!132505 (= res!63800 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun mapNonEmpty!4638 () Bool)

(declare-fun tp!11194 () Bool)

(assert (=> mapNonEmpty!4638 (= mapRes!4637 (and tp!11194 e!86368))))

(declare-fun mapRest!4638 () (Array (_ BitVec 32) ValueCell!1094))

(declare-fun mapValue!4638 () ValueCell!1094)

(declare-fun mapKey!4638 () (_ BitVec 32))

(assert (=> mapNonEmpty!4638 (= (arr!2253 (_values!2847 newMap!16)) (store mapRest!4638 mapKey!4638 mapValue!4638))))

(declare-fun b!132506 () Bool)

(assert (=> b!132506 (= e!86369 e!86382)))

(declare-fun b!132507 () Bool)

(assert (=> b!132507 (= e!86371 tp_is_empty!2875)))

(declare-fun b!132508 () Bool)

(declare-fun res!63798 () Bool)

(assert (=> b!132508 (=> (not res!63798) (not e!86373))))

(declare-fun valid!542 (LongMapFixedSize!1096) Bool)

(assert (=> b!132508 (= res!63798 (valid!542 newMap!16))))

(declare-fun b!132509 () Bool)

(assert (=> b!132509 (= e!86379 e!86381)))

(declare-fun res!63801 () Bool)

(assert (=> b!132509 (=> (not res!63801) (not e!86381))))

(declare-fun contains!884 (ListLongMap!1653 (_ BitVec 64)) Bool)

(assert (=> b!132509 (= res!63801 (contains!884 lt!69167 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-datatypes ((tuple2!2566 0))(
  ( (tuple2!2567 (_1!1294 Bool) (_2!1294 LongMapFixedSize!1096)) )
))
(declare-fun lt!69165 () tuple2!2566)

(declare-fun update!196 (LongMapFixedSize!1096 (_ BitVec 64) V!3481) tuple2!2566)

(declare-fun get!1489 (ValueCell!1094 V!3481) V!3481)

(declare-fun dynLambda!426 (Int (_ BitVec 64)) V!3481)

(assert (=> b!132509 (= lt!69165 (update!196 newMap!16 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and start!14262 res!63803) b!132505))

(assert (= (and b!132505 res!63800) b!132508))

(assert (= (and b!132508 res!63798) b!132498))

(assert (= (and b!132498 res!63802) b!132499))

(assert (= (and b!132499 res!63796) b!132509))

(assert (= (and b!132509 res!63801) b!132497))

(assert (= (and b!132497 res!63804) b!132490))

(assert (= (and b!132490 res!63797) b!132500))

(assert (= (and b!132500 res!63805) b!132493))

(assert (= (and b!132493 res!63799) b!132501))

(assert (= (and b!132491 condMapEmpty!4638) mapIsEmpty!4637))

(assert (= (and b!132491 (not condMapEmpty!4638)) mapNonEmpty!4637))

(get-info :version)

(assert (= (and mapNonEmpty!4637 ((_ is ValueCellFull!1094) mapValue!4637)) b!132492))

(assert (= (and b!132491 ((_ is ValueCellFull!1094) mapDefault!4637)) b!132507))

(assert (= b!132503 b!132491))

(assert (= b!132496 b!132503))

(assert (= b!132506 b!132496))

(assert (= start!14262 b!132506))

(assert (= (and b!132504 condMapEmpty!4637) mapIsEmpty!4638))

(assert (= (and b!132504 (not condMapEmpty!4637)) mapNonEmpty!4638))

(assert (= (and mapNonEmpty!4638 ((_ is ValueCellFull!1094) mapValue!4638)) b!132494))

(assert (= (and b!132504 ((_ is ValueCellFull!1094) mapDefault!4638)) b!132495))

(assert (= b!132502 b!132504))

(assert (= start!14262 b!132502))

(declare-fun b_lambda!5913 () Bool)

(assert (=> (not b_lambda!5913) (not b!132509)))

(declare-fun t!6133 () Bool)

(declare-fun tb!2405 () Bool)

(assert (=> (and b!132503 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992)))) t!6133) tb!2405))

(declare-fun result!3973 () Bool)

(assert (=> tb!2405 (= result!3973 tp_is_empty!2875)))

(assert (=> b!132509 t!6133))

(declare-fun b_and!8213 () Bool)

(assert (= b_and!8209 (and (=> t!6133 result!3973) b_and!8213)))

(declare-fun tb!2407 () Bool)

(declare-fun t!6135 () Bool)

(assert (=> (and b!132502 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992)))) t!6135) tb!2407))

(declare-fun result!3977 () Bool)

(assert (= result!3977 result!3973))

(assert (=> b!132509 t!6135))

(declare-fun b_and!8215 () Bool)

(assert (= b_and!8211 (and (=> t!6135 result!3977) b_and!8215)))

(declare-fun m!156381 () Bool)

(assert (=> start!14262 m!156381))

(declare-fun m!156383 () Bool)

(assert (=> b!132502 m!156383))

(declare-fun m!156385 () Bool)

(assert (=> b!132502 m!156385))

(declare-fun m!156387 () Bool)

(assert (=> mapNonEmpty!4637 m!156387))

(declare-fun m!156389 () Bool)

(assert (=> b!132509 m!156389))

(declare-fun m!156391 () Bool)

(assert (=> b!132509 m!156391))

(declare-fun m!156393 () Bool)

(assert (=> b!132509 m!156393))

(declare-fun m!156395 () Bool)

(assert (=> b!132509 m!156395))

(declare-fun m!156397 () Bool)

(assert (=> b!132509 m!156397))

(assert (=> b!132509 m!156395))

(assert (=> b!132509 m!156391))

(assert (=> b!132509 m!156395))

(assert (=> b!132509 m!156393))

(declare-fun m!156399 () Bool)

(assert (=> b!132509 m!156399))

(assert (=> b!132509 m!156389))

(declare-fun m!156401 () Bool)

(assert (=> b!132508 m!156401))

(declare-fun m!156403 () Bool)

(assert (=> b!132493 m!156403))

(declare-fun m!156405 () Bool)

(assert (=> b!132497 m!156405))

(declare-fun m!156407 () Bool)

(assert (=> b!132500 m!156407))

(declare-fun m!156409 () Bool)

(assert (=> b!132503 m!156409))

(declare-fun m!156411 () Bool)

(assert (=> b!132503 m!156411))

(assert (=> b!132499 m!156395))

(declare-fun m!156413 () Bool)

(assert (=> b!132499 m!156413))

(declare-fun m!156415 () Bool)

(assert (=> b!132499 m!156415))

(declare-fun m!156417 () Bool)

(assert (=> mapNonEmpty!4638 m!156417))

(check-sat (not start!14262) (not b!132499) tp_is_empty!2875 (not b!132503) (not b!132493) (not b!132497) (not b!132509) b_and!8215 (not b!132502) (not b!132508) (not mapNonEmpty!4637) (not b_lambda!5913) (not b_next!2917) b_and!8213 (not mapNonEmpty!4638) (not b!132500) (not b_next!2919))
(check-sat b_and!8213 b_and!8215 (not b_next!2917) (not b_next!2919))
(get-model)

(declare-fun b_lambda!5919 () Bool)

(assert (= b_lambda!5913 (or (and b!132503 b_free!2917) (and b!132502 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))))) b_lambda!5919)))

(check-sat (not start!14262) (not b!132499) tp_is_empty!2875 (not b!132503) (not b!132493) (not b!132497) (not b!132509) (not b_next!2917) b_and!8215 (not b!132502) (not b_lambda!5919) (not b!132508) (not mapNonEmpty!4637) b_and!8213 (not mapNonEmpty!4638) (not b!132500) (not b_next!2919))
(check-sat b_and!8213 b_and!8215 (not b_next!2917) (not b_next!2919))
(get-model)

(declare-fun b!132646 () Bool)

(declare-fun e!86483 () Bool)

(declare-fun contains!885 (List!1693 (_ BitVec 64)) Bool)

(assert (=> b!132646 (= e!86483 (contains!885 Nil!1690 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!132647 () Bool)

(declare-fun e!86481 () Bool)

(declare-fun call!14535 () Bool)

(assert (=> b!132647 (= e!86481 call!14535)))

(declare-fun b!132648 () Bool)

(declare-fun e!86484 () Bool)

(declare-fun e!86482 () Bool)

(assert (=> b!132648 (= e!86484 e!86482)))

(declare-fun res!63873 () Bool)

(assert (=> b!132648 (=> (not res!63873) (not e!86482))))

(assert (=> b!132648 (= res!63873 (not e!86483))))

(declare-fun res!63874 () Bool)

(assert (=> b!132648 (=> (not res!63874) (not e!86483))))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!132648 (= res!63874 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!14532 () Bool)

(declare-fun c!24517 () Bool)

(assert (=> bm!14532 (= call!14535 (arrayNoDuplicates!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)))))

(declare-fun d!40421 () Bool)

(declare-fun res!63872 () Bool)

(assert (=> d!40421 (=> res!63872 e!86484)))

(assert (=> d!40421 (= res!63872 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!40421 (= (arrayNoDuplicates!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000000 Nil!1690) e!86484)))

(declare-fun b!132649 () Bool)

(assert (=> b!132649 (= e!86482 e!86481)))

(assert (=> b!132649 (= c!24517 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!132650 () Bool)

(assert (=> b!132650 (= e!86481 call!14535)))

(assert (= (and d!40421 (not res!63872)) b!132648))

(assert (= (and b!132648 res!63874) b!132646))

(assert (= (and b!132648 res!63873) b!132649))

(assert (= (and b!132649 c!24517) b!132647))

(assert (= (and b!132649 (not c!24517)) b!132650))

(assert (= (or b!132647 b!132650) bm!14532))

(declare-fun m!156495 () Bool)

(assert (=> b!132646 m!156495))

(assert (=> b!132646 m!156495))

(declare-fun m!156497 () Bool)

(assert (=> b!132646 m!156497))

(assert (=> b!132648 m!156495))

(assert (=> b!132648 m!156495))

(declare-fun m!156499 () Bool)

(assert (=> b!132648 m!156499))

(assert (=> bm!14532 m!156495))

(declare-fun m!156501 () Bool)

(assert (=> bm!14532 m!156501))

(assert (=> b!132649 m!156495))

(assert (=> b!132649 m!156495))

(assert (=> b!132649 m!156499))

(assert (=> b!132493 d!40421))

(declare-fun d!40423 () Bool)

(assert (=> d!40423 (= (array_inv!1407 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvsge (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!132503 d!40423))

(declare-fun d!40425 () Bool)

(assert (=> d!40425 (= (array_inv!1408 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvsge (size!2522 (_values!2847 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!132503 d!40425))

(declare-fun d!40427 () Bool)

(assert (=> d!40427 (= (array_inv!1407 (_keys!4613 newMap!16)) (bvsge (size!2521 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!132502 d!40427))

(declare-fun d!40429 () Bool)

(assert (=> d!40429 (= (array_inv!1408 (_values!2847 newMap!16)) (bvsge (size!2522 (_values!2847 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!132502 d!40429))

(declare-fun d!40431 () Bool)

(assert (=> d!40431 (= (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992)))) (and (or (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000001111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000011111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000001111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000011111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000001111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000011111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000001111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000011111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000111111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000001111111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000011111111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000111111111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000001111111111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000011111111111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000111111111111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000001111111111111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000011111111111111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000111111111111111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000001111111111111111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000011111111111111111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000111111111111111111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00001111111111111111111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00011111111111111111111111111111) (= (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!132497 d!40431))

(declare-fun d!40433 () Bool)

(assert (=> d!40433 (= (valid!541 thiss!992) (valid!542 (v!3198 (underlying!454 thiss!992))))))

(declare-fun bs!5504 () Bool)

(assert (= bs!5504 d!40433))

(declare-fun m!156503 () Bool)

(assert (=> bs!5504 m!156503))

(assert (=> start!14262 d!40433))

(declare-fun b!132659 () Bool)

(declare-fun e!86493 () Bool)

(declare-fun call!14538 () Bool)

(assert (=> b!132659 (= e!86493 call!14538)))

(declare-fun b!132660 () Bool)

(declare-fun e!86491 () Bool)

(assert (=> b!132660 (= e!86493 e!86491)))

(declare-fun lt!69193 () (_ BitVec 64))

(assert (=> b!132660 (= lt!69193 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000))))

(declare-datatypes ((Unit!4141 0))(
  ( (Unit!4142) )
))
(declare-fun lt!69192 () Unit!4141)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4763 (_ BitVec 64) (_ BitVec 32)) Unit!4141)

(assert (=> b!132660 (= lt!69192 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69193 #b00000000000000000000000000000000))))

(declare-fun arrayContainsKey!0 (array!4763 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!132660 (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69193 #b00000000000000000000000000000000)))

(declare-fun lt!69194 () Unit!4141)

(assert (=> b!132660 (= lt!69194 lt!69192)))

(declare-fun res!63879 () Bool)

(declare-datatypes ((SeekEntryResult!269 0))(
  ( (MissingZero!269 (index!3236 (_ BitVec 32))) (Found!269 (index!3237 (_ BitVec 32))) (Intermediate!269 (undefined!1081 Bool) (index!3238 (_ BitVec 32)) (x!15586 (_ BitVec 32))) (Undefined!269) (MissingVacant!269 (index!3239 (_ BitVec 32))) )
))
(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4763 (_ BitVec 32)) SeekEntryResult!269)

(assert (=> b!132660 (= res!63879 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (Found!269 #b00000000000000000000000000000000)))))

(assert (=> b!132660 (=> (not res!63879) (not e!86491))))

(declare-fun b!132661 () Bool)

(declare-fun e!86492 () Bool)

(assert (=> b!132661 (= e!86492 e!86493)))

(declare-fun c!24520 () Bool)

(assert (=> b!132661 (= c!24520 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!132662 () Bool)

(assert (=> b!132662 (= e!86491 call!14538)))

(declare-fun d!40435 () Bool)

(declare-fun res!63880 () Bool)

(assert (=> d!40435 (=> res!63880 e!86492)))

(assert (=> d!40435 (= res!63880 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!40435 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) e!86492)))

(declare-fun bm!14535 () Bool)

(assert (=> bm!14535 (= call!14538 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(assert (= (and d!40435 (not res!63880)) b!132661))

(assert (= (and b!132661 c!24520) b!132660))

(assert (= (and b!132661 (not c!24520)) b!132659))

(assert (= (and b!132660 res!63879) b!132662))

(assert (= (or b!132662 b!132659) bm!14535))

(assert (=> b!132660 m!156495))

(declare-fun m!156505 () Bool)

(assert (=> b!132660 m!156505))

(declare-fun m!156507 () Bool)

(assert (=> b!132660 m!156507))

(assert (=> b!132660 m!156495))

(declare-fun m!156509 () Bool)

(assert (=> b!132660 m!156509))

(assert (=> b!132661 m!156495))

(assert (=> b!132661 m!156495))

(assert (=> b!132661 m!156499))

(declare-fun m!156511 () Bool)

(assert (=> bm!14535 m!156511))

(assert (=> b!132500 d!40435))

(declare-fun d!40437 () Bool)

(declare-fun e!86499 () Bool)

(assert (=> d!40437 e!86499))

(declare-fun res!63883 () Bool)

(assert (=> d!40437 (=> res!63883 e!86499)))

(declare-fun lt!69203 () Bool)

(assert (=> d!40437 (= res!63883 (not lt!69203))))

(declare-fun lt!69204 () Bool)

(assert (=> d!40437 (= lt!69203 lt!69204)))

(declare-fun lt!69205 () Unit!4141)

(declare-fun e!86498 () Unit!4141)

(assert (=> d!40437 (= lt!69205 e!86498)))

(declare-fun c!24523 () Bool)

(assert (=> d!40437 (= c!24523 lt!69204)))

(declare-fun containsKey!176 (List!1694 (_ BitVec 64)) Bool)

(assert (=> d!40437 (= lt!69204 (containsKey!176 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40437 (= (contains!884 lt!69167 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) lt!69203)))

(declare-fun b!132669 () Bool)

(declare-fun lt!69206 () Unit!4141)

(assert (=> b!132669 (= e!86498 lt!69206)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!124 (List!1694 (_ BitVec 64)) Unit!4141)

(assert (=> b!132669 (= lt!69206 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-datatypes ((Option!179 0))(
  ( (Some!178 (v!3203 V!3481)) (None!177) )
))
(declare-fun isDefined!125 (Option!179) Bool)

(declare-fun getValueByKey!173 (List!1694 (_ BitVec 64)) Option!179)

(assert (=> b!132669 (isDefined!125 (getValueByKey!173 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!132670 () Bool)

(declare-fun Unit!4143 () Unit!4141)

(assert (=> b!132670 (= e!86498 Unit!4143)))

(declare-fun b!132671 () Bool)

(assert (=> b!132671 (= e!86499 (isDefined!125 (getValueByKey!173 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (= (and d!40437 c!24523) b!132669))

(assert (= (and d!40437 (not c!24523)) b!132670))

(assert (= (and d!40437 (not res!63883)) b!132671))

(assert (=> d!40437 m!156395))

(declare-fun m!156513 () Bool)

(assert (=> d!40437 m!156513))

(assert (=> b!132669 m!156395))

(declare-fun m!156515 () Bool)

(assert (=> b!132669 m!156515))

(assert (=> b!132669 m!156395))

(declare-fun m!156517 () Bool)

(assert (=> b!132669 m!156517))

(assert (=> b!132669 m!156517))

(declare-fun m!156519 () Bool)

(assert (=> b!132669 m!156519))

(assert (=> b!132671 m!156395))

(assert (=> b!132671 m!156517))

(assert (=> b!132671 m!156517))

(assert (=> b!132671 m!156519))

(assert (=> b!132509 d!40437))

(declare-fun b!132756 () Bool)

(declare-fun e!86564 () tuple2!2566)

(declare-fun e!86552 () tuple2!2566)

(assert (=> b!132756 (= e!86564 e!86552)))

(declare-fun c!24565 () Bool)

(assert (=> b!132756 (= c!24565 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!14584 () Bool)

(declare-fun c!24556 () Bool)

(declare-fun c!24562 () Bool)

(assert (=> bm!14584 (= c!24556 c!24562)))

(declare-fun lt!69284 () SeekEntryResult!269)

(declare-fun call!14591 () Bool)

(declare-fun e!86556 () ListLongMap!1653)

(assert (=> bm!14584 (= call!14591 (contains!884 e!86556 (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(declare-fun b!132757 () Bool)

(declare-fun e!86551 () Unit!4141)

(declare-fun lt!69264 () Unit!4141)

(assert (=> b!132757 (= e!86551 lt!69264)))

(declare-fun call!14608 () Unit!4141)

(assert (=> b!132757 (= lt!69264 call!14608)))

(declare-fun lt!69263 () SeekEntryResult!269)

(declare-fun call!14609 () SeekEntryResult!269)

(assert (=> b!132757 (= lt!69263 call!14609)))

(declare-fun c!24554 () Bool)

(assert (=> b!132757 (= c!24554 ((_ is MissingZero!269) lt!69263))))

(declare-fun e!86554 () Bool)

(assert (=> b!132757 e!86554))

(declare-fun b!132758 () Bool)

(declare-fun e!86555 () Bool)

(assert (=> b!132758 (= e!86555 ((_ is Undefined!269) lt!69263))))

(declare-fun c!24553 () Bool)

(declare-fun call!14593 () ListLongMap!1653)

(declare-fun bm!14585 () Bool)

(declare-fun lt!69283 () (_ BitVec 32))

(declare-fun lt!69268 () array!4765)

(assert (=> bm!14585 (= call!14593 (getCurrentListMap!518 (_keys!4613 newMap!16) (ite c!24553 (_values!2847 newMap!16) lt!69268) (mask!7164 newMap!16) (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!132759 () Bool)

(declare-fun e!86547 () Bool)

(declare-fun call!14607 () Bool)

(assert (=> b!132759 (= e!86547 (not call!14607))))

(declare-fun b!132760 () Bool)

(declare-fun c!24563 () Bool)

(assert (=> b!132760 (= c!24563 ((_ is MissingVacant!269) lt!69263))))

(assert (=> b!132760 (= e!86554 e!86555)))

(declare-fun bm!14586 () Bool)

(declare-fun call!14599 () ListLongMap!1653)

(declare-fun call!14590 () ListLongMap!1653)

(assert (=> bm!14586 (= call!14599 call!14590)))

(declare-fun bm!14587 () Bool)

(declare-fun call!14589 () ListLongMap!1653)

(declare-fun lt!69280 () tuple2!2566)

(assert (=> bm!14587 (= call!14589 (map!1398 (_2!1294 lt!69280)))))

(declare-fun b!132761 () Bool)

(declare-fun res!63924 () Bool)

(declare-fun e!86562 () Bool)

(assert (=> b!132761 (=> (not res!63924) (not e!86562))))

(assert (=> b!132761 (= res!63924 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3236 lt!69263)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132762 () Bool)

(declare-fun e!86563 () Unit!4141)

(declare-fun Unit!4144 () Unit!4141)

(assert (=> b!132762 (= e!86563 Unit!4144)))

(declare-fun lt!69276 () Unit!4141)

(assert (=> b!132762 (= lt!69276 call!14608)))

(declare-fun lt!69278 () SeekEntryResult!269)

(declare-fun call!14605 () SeekEntryResult!269)

(assert (=> b!132762 (= lt!69278 call!14605)))

(declare-fun c!24559 () Bool)

(assert (=> b!132762 (= c!24559 ((_ is MissingZero!269) lt!69278))))

(declare-fun e!86550 () Bool)

(assert (=> b!132762 e!86550))

(declare-fun lt!69271 () Unit!4141)

(assert (=> b!132762 (= lt!69271 lt!69276)))

(assert (=> b!132762 false))

(declare-fun bm!14588 () Bool)

(declare-fun call!14588 () ListLongMap!1653)

(assert (=> bm!14588 (= call!14588 call!14590)))

(declare-fun bm!14589 () Bool)

(declare-fun call!14602 () Bool)

(assert (=> bm!14589 (= call!14602 (arrayContainsKey!0 (_keys!4613 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!132763 () Bool)

(declare-fun e!86560 () Bool)

(assert (=> b!132763 (= e!86560 ((_ is Undefined!269) lt!69278))))

(declare-fun b!132764 () Bool)

(declare-fun e!86565 () Bool)

(declare-fun e!86559 () Bool)

(assert (=> b!132764 (= e!86565 e!86559)))

(declare-fun c!24557 () Bool)

(assert (=> b!132764 (= c!24557 (_1!1294 lt!69280))))

(declare-fun b!132765 () Bool)

(declare-fun c!24552 () Bool)

(assert (=> b!132765 (= c!24552 ((_ is MissingVacant!269) lt!69278))))

(assert (=> b!132765 (= e!86550 e!86560)))

(declare-fun b!132766 () Bool)

(declare-fun lt!69272 () Unit!4141)

(declare-fun lt!69275 () Unit!4141)

(assert (=> b!132766 (= lt!69272 lt!69275)))

(assert (=> b!132766 call!14591))

(declare-fun lemmaValidKeyInArrayIsInListMap!121 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) Int) Unit!4141)

(assert (=> b!132766 (= lt!69275 (lemmaValidKeyInArrayIsInListMap!121 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3237 lt!69284) (defaultEntry!2864 newMap!16)))))

(assert (=> b!132766 (= lt!69268 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))))

(declare-fun lt!69270 () Unit!4141)

(declare-fun lt!69266 () Unit!4141)

(assert (=> b!132766 (= lt!69270 lt!69266)))

(declare-fun call!14606 () ListLongMap!1653)

(assert (=> b!132766 (= call!14606 call!14599)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!61 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) (_ BitVec 64) V!3481 Int) Unit!4141)

(assert (=> b!132766 (= lt!69266 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!61 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3237 lt!69284) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69265 () Unit!4141)

(assert (=> b!132766 (= lt!69265 e!86563)))

(declare-fun c!24560 () Bool)

(assert (=> b!132766 (= c!24560 (contains!884 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun e!86548 () tuple2!2566)

(assert (=> b!132766 (= e!86548 (tuple2!2567 true (LongMapFixedSize!1097 (defaultEntry!2864 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (_size!597 newMap!16) (_keys!4613 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (_vacant!597 newMap!16))))))

(declare-fun lt!69274 () SeekEntryResult!269)

(declare-fun b!132767 () Bool)

(declare-fun e!86553 () Bool)

(assert (=> b!132767 (= e!86553 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69274)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun bm!14590 () Bool)

(declare-fun lt!69279 () (_ BitVec 32))

(assert (=> bm!14590 (= call!14590 (getCurrentListMap!518 (_keys!4613 newMap!16) (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) (mask!7164 newMap!16) (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) (zeroValue!2719 newMap!16) (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!132768 () Bool)

(declare-fun call!14604 () ListLongMap!1653)

(assert (=> b!132768 (= e!86559 (= call!14589 call!14604))))

(declare-fun bm!14591 () Bool)

(declare-fun call!14597 () Bool)

(declare-fun call!14587 () Bool)

(assert (=> bm!14591 (= call!14597 call!14587)))

(declare-fun bm!14592 () Bool)

(declare-fun call!14610 () Unit!4141)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 64) Int) Unit!4141)

(assert (=> bm!14592 (= call!14610 (lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)))))

(declare-fun bm!14593 () Bool)

(declare-fun call!14596 () Bool)

(declare-fun call!14594 () Bool)

(assert (=> bm!14593 (= call!14596 call!14594)))

(declare-fun bm!14594 () Bool)

(declare-fun call!14598 () Bool)

(assert (=> bm!14594 (= call!14598 call!14602)))

(declare-fun bm!14595 () Bool)

(declare-fun call!14603 () SeekEntryResult!269)

(assert (=> bm!14595 (= call!14605 call!14603)))

(declare-fun b!132769 () Bool)

(declare-fun lt!69286 () Unit!4141)

(declare-fun lt!69267 () Unit!4141)

(assert (=> b!132769 (= lt!69286 lt!69267)))

(declare-fun call!14601 () ListLongMap!1653)

(declare-fun call!14595 () ListLongMap!1653)

(assert (=> b!132769 (= call!14601 call!14595)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!61 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 V!3481 Int) Unit!4141)

(assert (=> b!132769 (= lt!69267 (lemmaChangeZeroKeyThenAddPairToListMap!61 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) lt!69283 (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) (defaultEntry!2864 newMap!16)))))

(assert (=> b!132769 (= lt!69283 (bvor (extraKeys!2629 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!132769 (= e!86552 (tuple2!2567 true (LongMapFixedSize!1097 (defaultEntry!2864 newMap!16) (mask!7164 newMap!16) (bvor (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) (_size!597 newMap!16) (_keys!4613 newMap!16) (_values!2847 newMap!16) (_vacant!597 newMap!16))))))

(declare-fun bm!14596 () Bool)

(assert (=> bm!14596 (= call!14607 call!14602)))

(declare-fun bm!14597 () Bool)

(declare-fun call!14592 () tuple2!2566)

(declare-fun c!24561 () Bool)

(declare-fun updateHelperNewKey!61 (LongMapFixedSize!1096 (_ BitVec 64) V!3481 (_ BitVec 32)) tuple2!2566)

(assert (=> bm!14597 (= call!14592 (updateHelperNewKey!61 newMap!16 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))))))

(declare-fun bm!14598 () Bool)

(declare-fun call!14600 () Bool)

(assert (=> bm!14598 (= call!14594 call!14600)))

(declare-fun b!132770 () Bool)

(declare-fun res!63915 () Bool)

(assert (=> b!132770 (=> (not res!63915) (not e!86562))))

(assert (=> b!132770 (= res!63915 call!14597)))

(assert (=> b!132770 (= e!86554 e!86562)))

(declare-fun b!132771 () Bool)

(declare-fun res!63914 () Bool)

(assert (=> b!132771 (=> (not res!63914) (not e!86547))))

(assert (=> b!132771 (= res!63914 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3236 lt!69278)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!14599 () Bool)

(assert (=> bm!14599 (= call!14603 (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(declare-fun lt!69287 () SeekEntryResult!269)

(declare-fun bm!14600 () Bool)

(declare-fun c!24558 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!14600 (= call!14600 (inRange!0 (ite c!24562 (ite c!24558 (index!3237 lt!69287) (ite c!24554 (index!3236 lt!69263) (index!3239 lt!69263))) (ite c!24560 (index!3237 lt!69274) (ite c!24559 (index!3236 lt!69278) (index!3239 lt!69278)))) (mask!7164 newMap!16)))))

(declare-fun e!86561 () ListLongMap!1653)

(declare-fun bm!14601 () Bool)

(declare-fun +!169 (ListLongMap!1653 tuple2!2564) ListLongMap!1653)

(assert (=> bm!14601 (= call!14606 (+!169 e!86561 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!24555 () Bool)

(assert (=> bm!14601 (= c!24555 c!24553)))

(declare-fun b!132772 () Bool)

(declare-fun res!63922 () Bool)

(assert (=> b!132772 (= res!63922 call!14587)))

(declare-fun e!86557 () Bool)

(assert (=> b!132772 (=> (not res!63922) (not e!86557))))

(declare-fun b!132773 () Bool)

(declare-fun e!86558 () tuple2!2566)

(assert (=> b!132773 (= e!86558 e!86548)))

(declare-fun c!24564 () Bool)

(assert (=> b!132773 (= c!24564 ((_ is MissingZero!269) lt!69284))))

(declare-fun bm!14602 () Bool)

(assert (=> bm!14602 (= call!14609 call!14603)))

(declare-fun b!132774 () Bool)

(declare-fun res!63912 () Bool)

(assert (=> b!132774 (= res!63912 call!14594)))

(assert (=> b!132774 (=> (not res!63912) (not e!86553))))

(declare-fun b!132775 () Bool)

(declare-fun lt!69262 () Unit!4141)

(declare-fun lt!69269 () Unit!4141)

(assert (=> b!132775 (= lt!69262 lt!69269)))

(assert (=> b!132775 (= call!14601 call!14588)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!61 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 V!3481 Int) Unit!4141)

(assert (=> b!132775 (= lt!69269 (lemmaChangeLongMinValueKeyThenAddPairToListMap!61 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) lt!69279 (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)))))

(assert (=> b!132775 (= lt!69279 (bvor (extraKeys!2629 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!132775 (= e!86552 (tuple2!2567 true (LongMapFixedSize!1097 (defaultEntry!2864 newMap!16) (mask!7164 newMap!16) (bvor (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!597 newMap!16) (_keys!4613 newMap!16) (_values!2847 newMap!16) (_vacant!597 newMap!16))))))

(declare-fun bm!14603 () Bool)

(assert (=> bm!14603 (= call!14595 call!14593)))

(declare-fun b!132776 () Bool)

(declare-fun e!86544 () tuple2!2566)

(assert (=> b!132776 (= e!86564 e!86544)))

(assert (=> b!132776 (= lt!69284 (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(assert (=> b!132776 (= c!24562 ((_ is Undefined!269) lt!69284))))

(declare-fun b!132777 () Bool)

(declare-fun e!86549 () Bool)

(assert (=> b!132777 (= e!86549 (not call!14607))))

(declare-fun d!40439 () Bool)

(assert (=> d!40439 e!86565))

(declare-fun res!63925 () Bool)

(assert (=> d!40439 (=> (not res!63925) (not e!86565))))

(assert (=> d!40439 (= res!63925 (valid!542 (_2!1294 lt!69280)))))

(assert (=> d!40439 (= lt!69280 e!86564)))

(assert (=> d!40439 (= c!24553 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (bvneg (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40439 (valid!542 newMap!16)))

(assert (=> d!40439 (= (update!196 newMap!16 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!69280)))

(declare-fun b!132778 () Bool)

(declare-fun res!63913 () Bool)

(assert (=> b!132778 (=> (not res!63913) (not e!86547))))

(assert (=> b!132778 (= res!63913 call!14596)))

(assert (=> b!132778 (= e!86550 e!86547)))

(declare-fun b!132779 () Bool)

(assert (=> b!132779 (= e!86561 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!132780 () Bool)

(declare-fun lt!69277 () tuple2!2566)

(assert (=> b!132780 (= lt!69277 call!14592)))

(assert (=> b!132780 (= e!86548 (tuple2!2567 (_1!1294 lt!69277) (_2!1294 lt!69277)))))

(declare-fun e!86546 () Bool)

(declare-fun b!132781 () Bool)

(assert (=> b!132781 (= e!86546 (= call!14589 (+!169 call!14604 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!132782 () Bool)

(declare-fun e!86545 () Bool)

(assert (=> b!132782 (= e!86545 (not call!14598))))

(declare-fun b!132783 () Bool)

(assert (=> b!132783 (= e!86555 e!86545)))

(declare-fun res!63916 () Bool)

(assert (=> b!132783 (= res!63916 call!14597)))

(assert (=> b!132783 (=> (not res!63916) (not e!86545))))

(declare-fun bm!14604 () Bool)

(assert (=> bm!14604 (= call!14601 call!14606)))

(declare-fun b!132784 () Bool)

(assert (=> b!132784 (= e!86556 call!14593)))

(declare-fun b!132785 () Bool)

(assert (=> b!132785 (= e!86562 (not call!14598))))

(declare-fun bm!14605 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 64) Int) Unit!4141)

(assert (=> bm!14605 (= call!14608 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)))))

(declare-fun b!132786 () Bool)

(assert (=> b!132786 (= e!86557 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69287)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun bm!14606 () Bool)

(assert (=> bm!14606 (= call!14587 call!14600)))

(declare-fun b!132787 () Bool)

(declare-fun res!63920 () Bool)

(assert (=> b!132787 (= res!63920 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3239 lt!69278)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132787 (=> (not res!63920) (not e!86549))))

(declare-fun bm!14607 () Bool)

(assert (=> bm!14607 (= call!14604 (map!1398 newMap!16))))

(declare-fun b!132788 () Bool)

(assert (=> b!132788 (= e!86556 call!14599)))

(declare-fun b!132789 () Bool)

(declare-fun lt!69285 () tuple2!2566)

(assert (=> b!132789 (= e!86558 (tuple2!2567 (_1!1294 lt!69285) (_2!1294 lt!69285)))))

(assert (=> b!132789 (= lt!69285 call!14592)))

(declare-fun b!132790 () Bool)

(assert (=> b!132790 (= c!24561 ((_ is MissingVacant!269) lt!69284))))

(assert (=> b!132790 (= e!86544 e!86558)))

(declare-fun b!132791 () Bool)

(declare-fun res!63921 () Bool)

(assert (=> b!132791 (= res!63921 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3239 lt!69263)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132791 (=> (not res!63921) (not e!86545))))

(declare-fun b!132792 () Bool)

(declare-fun lt!69282 () Unit!4141)

(assert (=> b!132792 (= e!86563 lt!69282)))

(assert (=> b!132792 (= lt!69282 call!14610)))

(assert (=> b!132792 (= lt!69274 call!14605)))

(declare-fun res!63918 () Bool)

(assert (=> b!132792 (= res!63918 ((_ is Found!269) lt!69274))))

(assert (=> b!132792 (=> (not res!63918) (not e!86553))))

(assert (=> b!132792 e!86553))

(declare-fun b!132793 () Bool)

(declare-fun Unit!4145 () Unit!4141)

(assert (=> b!132793 (= e!86551 Unit!4145)))

(declare-fun lt!69273 () Unit!4141)

(assert (=> b!132793 (= lt!69273 call!14610)))

(assert (=> b!132793 (= lt!69287 call!14609)))

(declare-fun res!63923 () Bool)

(assert (=> b!132793 (= res!63923 ((_ is Found!269) lt!69287))))

(assert (=> b!132793 (=> (not res!63923) (not e!86557))))

(assert (=> b!132793 e!86557))

(declare-fun lt!69261 () Unit!4141)

(assert (=> b!132793 (= lt!69261 lt!69273)))

(assert (=> b!132793 false))

(declare-fun b!132794 () Bool)

(assert (=> b!132794 (= e!86559 e!86546)))

(declare-fun res!63919 () Bool)

(assert (=> b!132794 (= res!63919 (contains!884 call!14589 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!132794 (=> (not res!63919) (not e!86546))))

(declare-fun b!132795 () Bool)

(assert (=> b!132795 (= e!86560 e!86549)))

(declare-fun res!63917 () Bool)

(assert (=> b!132795 (= res!63917 call!14596)))

(assert (=> b!132795 (=> (not res!63917) (not e!86549))))

(declare-fun b!132796 () Bool)

(assert (=> b!132796 (= e!86561 (ite c!24565 call!14588 call!14595))))

(declare-fun b!132797 () Bool)

(declare-fun lt!69281 () Unit!4141)

(assert (=> b!132797 (= lt!69281 e!86551)))

(assert (=> b!132797 (= c!24558 call!14591)))

(assert (=> b!132797 (= e!86544 (tuple2!2567 false newMap!16))))

(assert (= (and d!40439 c!24553) b!132756))

(assert (= (and d!40439 (not c!24553)) b!132776))

(assert (= (and b!132756 c!24565) b!132769))

(assert (= (and b!132756 (not c!24565)) b!132775))

(assert (= (or b!132769 b!132775) bm!14588))

(assert (= (or b!132769 b!132775) bm!14603))

(assert (= (or b!132769 b!132775) bm!14604))

(assert (= (and b!132776 c!24562) b!132797))

(assert (= (and b!132776 (not c!24562)) b!132790))

(assert (= (and b!132797 c!24558) b!132793))

(assert (= (and b!132797 (not c!24558)) b!132757))

(assert (= (and b!132793 res!63923) b!132772))

(assert (= (and b!132772 res!63922) b!132786))

(assert (= (and b!132757 c!24554) b!132770))

(assert (= (and b!132757 (not c!24554)) b!132760))

(assert (= (and b!132770 res!63915) b!132761))

(assert (= (and b!132761 res!63924) b!132785))

(assert (= (and b!132760 c!24563) b!132783))

(assert (= (and b!132760 (not c!24563)) b!132758))

(assert (= (and b!132783 res!63916) b!132791))

(assert (= (and b!132791 res!63921) b!132782))

(assert (= (or b!132770 b!132783) bm!14591))

(assert (= (or b!132785 b!132782) bm!14594))

(assert (= (or b!132772 bm!14591) bm!14606))

(assert (= (or b!132793 b!132757) bm!14602))

(assert (= (and b!132790 c!24561) b!132789))

(assert (= (and b!132790 (not c!24561)) b!132773))

(assert (= (and b!132773 c!24564) b!132780))

(assert (= (and b!132773 (not c!24564)) b!132766))

(assert (= (and b!132766 c!24560) b!132792))

(assert (= (and b!132766 (not c!24560)) b!132762))

(assert (= (and b!132792 res!63918) b!132774))

(assert (= (and b!132774 res!63912) b!132767))

(assert (= (and b!132762 c!24559) b!132778))

(assert (= (and b!132762 (not c!24559)) b!132765))

(assert (= (and b!132778 res!63913) b!132771))

(assert (= (and b!132771 res!63914) b!132759))

(assert (= (and b!132765 c!24552) b!132795))

(assert (= (and b!132765 (not c!24552)) b!132763))

(assert (= (and b!132795 res!63917) b!132787))

(assert (= (and b!132787 res!63920) b!132777))

(assert (= (or b!132778 b!132795) bm!14593))

(assert (= (or b!132759 b!132777) bm!14596))

(assert (= (or b!132774 bm!14593) bm!14598))

(assert (= (or b!132792 b!132762) bm!14595))

(assert (= (or b!132789 b!132780) bm!14597))

(assert (= (or b!132757 b!132762) bm!14605))

(assert (= (or b!132793 b!132792) bm!14592))

(assert (= (or bm!14602 bm!14595) bm!14599))

(assert (= (or bm!14594 bm!14596) bm!14589))

(assert (= (or b!132797 b!132766) bm!14586))

(assert (= (or bm!14606 bm!14598) bm!14600))

(assert (= (or b!132797 b!132766) bm!14584))

(assert (= (and bm!14584 c!24556) b!132788))

(assert (= (and bm!14584 (not c!24556)) b!132784))

(assert (= (or bm!14588 bm!14586) bm!14590))

(assert (= (or bm!14603 b!132784) bm!14585))

(assert (= (or bm!14604 b!132766) bm!14601))

(assert (= (and bm!14601 c!24555) b!132796))

(assert (= (and bm!14601 (not c!24555)) b!132779))

(assert (= (and d!40439 res!63925) b!132764))

(assert (= (and b!132764 c!24557) b!132794))

(assert (= (and b!132764 (not c!24557)) b!132768))

(assert (= (and b!132794 res!63919) b!132781))

(assert (= (or b!132794 b!132781 b!132768) bm!14587))

(assert (= (or b!132781 b!132768) bm!14607))

(declare-fun m!156521 () Bool)

(assert (=> bm!14585 m!156521))

(declare-fun m!156523 () Bool)

(assert (=> b!132791 m!156523))

(assert (=> b!132775 m!156393))

(declare-fun m!156525 () Bool)

(assert (=> b!132775 m!156525))

(declare-fun m!156527 () Bool)

(assert (=> bm!14600 m!156527))

(declare-fun m!156529 () Bool)

(assert (=> bm!14590 m!156529))

(declare-fun m!156531 () Bool)

(assert (=> bm!14590 m!156531))

(assert (=> bm!14592 m!156395))

(declare-fun m!156533 () Bool)

(assert (=> bm!14592 m!156533))

(assert (=> bm!14589 m!156395))

(declare-fun m!156535 () Bool)

(assert (=> bm!14589 m!156535))

(assert (=> bm!14597 m!156395))

(assert (=> bm!14597 m!156393))

(declare-fun m!156537 () Bool)

(assert (=> bm!14597 m!156537))

(declare-fun m!156539 () Bool)

(assert (=> d!40439 m!156539))

(assert (=> d!40439 m!156401))

(declare-fun m!156541 () Bool)

(assert (=> b!132761 m!156541))

(declare-fun m!156543 () Bool)

(assert (=> bm!14601 m!156543))

(declare-fun m!156545 () Bool)

(assert (=> b!132779 m!156545))

(declare-fun m!156547 () Bool)

(assert (=> b!132787 m!156547))

(assert (=> b!132766 m!156545))

(assert (=> b!132766 m!156395))

(declare-fun m!156549 () Bool)

(assert (=> b!132766 m!156549))

(declare-fun m!156551 () Bool)

(assert (=> b!132766 m!156551))

(assert (=> b!132766 m!156395))

(assert (=> b!132766 m!156393))

(declare-fun m!156553 () Bool)

(assert (=> b!132766 m!156553))

(assert (=> b!132766 m!156545))

(assert (=> b!132766 m!156529))

(declare-fun m!156555 () Bool)

(assert (=> b!132771 m!156555))

(assert (=> bm!14607 m!156413))

(declare-fun m!156557 () Bool)

(assert (=> bm!14584 m!156557))

(declare-fun m!156559 () Bool)

(assert (=> bm!14584 m!156559))

(assert (=> b!132794 m!156395))

(declare-fun m!156561 () Bool)

(assert (=> b!132794 m!156561))

(assert (=> bm!14599 m!156395))

(declare-fun m!156563 () Bool)

(assert (=> bm!14599 m!156563))

(assert (=> bm!14605 m!156395))

(declare-fun m!156565 () Bool)

(assert (=> bm!14605 m!156565))

(assert (=> b!132769 m!156393))

(declare-fun m!156567 () Bool)

(assert (=> b!132769 m!156567))

(declare-fun m!156569 () Bool)

(assert (=> bm!14587 m!156569))

(declare-fun m!156571 () Bool)

(assert (=> b!132786 m!156571))

(declare-fun m!156573 () Bool)

(assert (=> b!132767 m!156573))

(declare-fun m!156575 () Bool)

(assert (=> b!132781 m!156575))

(assert (=> b!132776 m!156395))

(assert (=> b!132776 m!156563))

(assert (=> b!132509 d!40439))

(declare-fun d!40441 () Bool)

(declare-fun c!24568 () Bool)

(assert (=> d!40441 (= c!24568 ((_ is ValueCellFull!1094) (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun e!86568 () V!3481)

(assert (=> d!40441 (= (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!86568)))

(declare-fun b!132802 () Bool)

(declare-fun get!1490 (ValueCell!1094 V!3481) V!3481)

(assert (=> b!132802 (= e!86568 (get!1490 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!132803 () Bool)

(declare-fun get!1491 (ValueCell!1094 V!3481) V!3481)

(assert (=> b!132803 (= e!86568 (get!1491 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40441 c!24568) b!132802))

(assert (= (and d!40441 (not c!24568)) b!132803))

(assert (=> b!132802 m!156389))

(assert (=> b!132802 m!156391))

(declare-fun m!156577 () Bool)

(assert (=> b!132802 m!156577))

(assert (=> b!132803 m!156389))

(assert (=> b!132803 m!156391))

(declare-fun m!156579 () Bool)

(assert (=> b!132803 m!156579))

(assert (=> b!132509 d!40441))

(declare-fun d!40443 () Bool)

(assert (=> d!40443 (= (map!1398 newMap!16) (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun bs!5505 () Bool)

(assert (= bs!5505 d!40443))

(assert (=> bs!5505 m!156545))

(assert (=> b!132499 d!40443))

(declare-fun call!14628 () ListLongMap!1653)

(declare-fun bm!14622 () Bool)

(declare-fun call!14626 () ListLongMap!1653)

(declare-fun call!14629 () ListLongMap!1653)

(declare-fun c!24584 () Bool)

(declare-fun call!14627 () ListLongMap!1653)

(declare-fun c!24586 () Bool)

(assert (=> bm!14622 (= call!14628 (+!169 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)) (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!132846 () Bool)

(declare-fun e!86604 () Bool)

(declare-fun e!86598 () Bool)

(assert (=> b!132846 (= e!86604 e!86598)))

(declare-fun res!63949 () Bool)

(declare-fun call!14625 () Bool)

(assert (=> b!132846 (= res!63949 call!14625)))

(assert (=> b!132846 (=> (not res!63949) (not e!86598))))

(declare-fun b!132847 () Bool)

(declare-fun e!86602 () Unit!4141)

(declare-fun lt!69349 () Unit!4141)

(assert (=> b!132847 (= e!86602 lt!69349)))

(declare-fun lt!69335 () ListLongMap!1653)

(declare-fun getCurrentListMapNoExtraKeys!136 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) Int) ListLongMap!1653)

(assert (=> b!132847 (= lt!69335 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun lt!69350 () (_ BitVec 64))

(assert (=> b!132847 (= lt!69350 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69334 () (_ BitVec 64))

(assert (=> b!132847 (= lt!69334 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!69348 () Unit!4141)

(declare-fun addStillContains!92 (ListLongMap!1653 (_ BitVec 64) V!3481 (_ BitVec 64)) Unit!4141)

(assert (=> b!132847 (= lt!69348 (addStillContains!92 lt!69335 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69334))))

(assert (=> b!132847 (contains!884 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69334)))

(declare-fun lt!69346 () Unit!4141)

(assert (=> b!132847 (= lt!69346 lt!69348)))

(declare-fun lt!69341 () ListLongMap!1653)

(assert (=> b!132847 (= lt!69341 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun lt!69333 () (_ BitVec 64))

(assert (=> b!132847 (= lt!69333 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69343 () (_ BitVec 64))

(assert (=> b!132847 (= lt!69343 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!69347 () Unit!4141)

(declare-fun addApplyDifferent!92 (ListLongMap!1653 (_ BitVec 64) V!3481 (_ BitVec 64)) Unit!4141)

(assert (=> b!132847 (= lt!69347 (addApplyDifferent!92 lt!69341 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69343))))

(declare-fun apply!116 (ListLongMap!1653 (_ BitVec 64)) V!3481)

(assert (=> b!132847 (= (apply!116 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69343) (apply!116 lt!69341 lt!69343))))

(declare-fun lt!69340 () Unit!4141)

(assert (=> b!132847 (= lt!69340 lt!69347)))

(declare-fun lt!69353 () ListLongMap!1653)

(assert (=> b!132847 (= lt!69353 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun lt!69342 () (_ BitVec 64))

(assert (=> b!132847 (= lt!69342 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69338 () (_ BitVec 64))

(assert (=> b!132847 (= lt!69338 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!69351 () Unit!4141)

(assert (=> b!132847 (= lt!69351 (addApplyDifferent!92 lt!69353 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69338))))

(assert (=> b!132847 (= (apply!116 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69338) (apply!116 lt!69353 lt!69338))))

(declare-fun lt!69352 () Unit!4141)

(assert (=> b!132847 (= lt!69352 lt!69351)))

(declare-fun lt!69339 () ListLongMap!1653)

(assert (=> b!132847 (= lt!69339 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun lt!69337 () (_ BitVec 64))

(assert (=> b!132847 (= lt!69337 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69345 () (_ BitVec 64))

(assert (=> b!132847 (= lt!69345 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!132847 (= lt!69349 (addApplyDifferent!92 lt!69339 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69345))))

(assert (=> b!132847 (= (apply!116 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69345) (apply!116 lt!69339 lt!69345))))

(declare-fun b!132848 () Bool)

(declare-fun lt!69344 () ListLongMap!1653)

(assert (=> b!132848 (= e!86598 (= (apply!116 lt!69344 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!132849 () Bool)

(declare-fun e!86596 () Bool)

(assert (=> b!132849 (= e!86596 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!14623 () Bool)

(assert (=> bm!14623 (= call!14627 call!14626)))

(declare-fun bm!14624 () Bool)

(assert (=> bm!14624 (= call!14625 (contains!884 lt!69344 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132850 () Bool)

(declare-fun e!86597 () Bool)

(assert (=> b!132850 (= e!86597 e!86604)))

(declare-fun c!24585 () Bool)

(assert (=> b!132850 (= c!24585 (not (= (bvand (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132851 () Bool)

(declare-fun e!86606 () Bool)

(assert (=> b!132851 (= e!86606 (= (apply!116 lt!69344 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!132853 () Bool)

(declare-fun e!86595 () ListLongMap!1653)

(assert (=> b!132853 (= e!86595 call!14629)))

(declare-fun bm!14625 () Bool)

(declare-fun call!14631 () ListLongMap!1653)

(assert (=> bm!14625 (= call!14631 call!14628)))

(declare-fun bm!14626 () Bool)

(declare-fun call!14630 () Bool)

(assert (=> bm!14626 (= call!14630 (contains!884 lt!69344 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132854 () Bool)

(declare-fun c!24582 () Bool)

(assert (=> b!132854 (= c!24582 (and (not (= (bvand (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86601 () ListLongMap!1653)

(assert (=> b!132854 (= e!86601 e!86595)))

(declare-fun bm!14627 () Bool)

(assert (=> bm!14627 (= call!14629 call!14627)))

(declare-fun e!86607 () Bool)

(declare-fun b!132855 () Bool)

(assert (=> b!132855 (= e!86607 (= (apply!116 lt!69344 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132855 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2522 (_values!2847 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> b!132855 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!132856 () Bool)

(declare-fun e!86600 () ListLongMap!1653)

(assert (=> b!132856 (= e!86600 e!86601)))

(assert (=> b!132856 (= c!24586 (and (not (= (bvand (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!132857 () Bool)

(declare-fun e!86603 () Bool)

(assert (=> b!132857 (= e!86603 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!132858 () Bool)

(assert (=> b!132858 (= e!86600 (+!169 call!14628 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!132859 () Bool)

(declare-fun e!86599 () Bool)

(assert (=> b!132859 (= e!86599 e!86607)))

(declare-fun res!63950 () Bool)

(assert (=> b!132859 (=> (not res!63950) (not e!86607))))

(assert (=> b!132859 (= res!63950 (contains!884 lt!69344 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!132859 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun bm!14628 () Bool)

(assert (=> bm!14628 (= call!14626 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!132860 () Bool)

(assert (=> b!132860 (= e!86604 (not call!14625))))

(declare-fun b!132861 () Bool)

(assert (=> b!132861 (= e!86595 call!14631)))

(declare-fun b!132862 () Bool)

(declare-fun Unit!4146 () Unit!4141)

(assert (=> b!132862 (= e!86602 Unit!4146)))

(declare-fun b!132863 () Bool)

(declare-fun e!86605 () Bool)

(assert (=> b!132863 (= e!86605 e!86606)))

(declare-fun res!63952 () Bool)

(assert (=> b!132863 (= res!63952 call!14630)))

(assert (=> b!132863 (=> (not res!63952) (not e!86606))))

(declare-fun b!132864 () Bool)

(declare-fun res!63946 () Bool)

(assert (=> b!132864 (=> (not res!63946) (not e!86597))))

(assert (=> b!132864 (= res!63946 e!86599)))

(declare-fun res!63951 () Bool)

(assert (=> b!132864 (=> res!63951 e!86599)))

(assert (=> b!132864 (= res!63951 (not e!86603))))

(declare-fun res!63944 () Bool)

(assert (=> b!132864 (=> (not res!63944) (not e!86603))))

(assert (=> b!132864 (= res!63944 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!132865 () Bool)

(declare-fun res!63947 () Bool)

(assert (=> b!132865 (=> (not res!63947) (not e!86597))))

(assert (=> b!132865 (= res!63947 e!86605)))

(declare-fun c!24583 () Bool)

(assert (=> b!132865 (= c!24583 (not (= (bvand (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!132866 () Bool)

(assert (=> b!132866 (= e!86601 call!14631)))

(declare-fun b!132852 () Bool)

(assert (=> b!132852 (= e!86605 (not call!14630))))

(declare-fun d!40445 () Bool)

(assert (=> d!40445 e!86597))

(declare-fun res!63948 () Bool)

(assert (=> d!40445 (=> (not res!63948) (not e!86597))))

(assert (=> d!40445 (= res!63948 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun lt!69332 () ListLongMap!1653)

(assert (=> d!40445 (= lt!69344 lt!69332)))

(declare-fun lt!69336 () Unit!4141)

(assert (=> d!40445 (= lt!69336 e!86602)))

(declare-fun c!24581 () Bool)

(assert (=> d!40445 (= c!24581 e!86596)))

(declare-fun res!63945 () Bool)

(assert (=> d!40445 (=> (not res!63945) (not e!86596))))

(assert (=> d!40445 (= res!63945 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!40445 (= lt!69332 e!86600)))

(assert (=> d!40445 (= c!24584 (and (not (= (bvand (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40445 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!40445 (= (getCurrentListMap!518 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992)))) lt!69344)))

(assert (= (and d!40445 c!24584) b!132858))

(assert (= (and d!40445 (not c!24584)) b!132856))

(assert (= (and b!132856 c!24586) b!132866))

(assert (= (and b!132856 (not c!24586)) b!132854))

(assert (= (and b!132854 c!24582) b!132861))

(assert (= (and b!132854 (not c!24582)) b!132853))

(assert (= (or b!132861 b!132853) bm!14627))

(assert (= (or b!132866 bm!14627) bm!14623))

(assert (= (or b!132866 b!132861) bm!14625))

(assert (= (or b!132858 bm!14623) bm!14628))

(assert (= (or b!132858 bm!14625) bm!14622))

(assert (= (and d!40445 res!63945) b!132849))

(assert (= (and d!40445 c!24581) b!132847))

(assert (= (and d!40445 (not c!24581)) b!132862))

(assert (= (and d!40445 res!63948) b!132864))

(assert (= (and b!132864 res!63944) b!132857))

(assert (= (and b!132864 (not res!63951)) b!132859))

(assert (= (and b!132859 res!63950) b!132855))

(assert (= (and b!132864 res!63946) b!132865))

(assert (= (and b!132865 c!24583) b!132863))

(assert (= (and b!132865 (not c!24583)) b!132852))

(assert (= (and b!132863 res!63952) b!132851))

(assert (= (or b!132863 b!132852) bm!14626))

(assert (= (and b!132865 res!63947) b!132850))

(assert (= (and b!132850 c!24585) b!132846))

(assert (= (and b!132850 (not c!24585)) b!132860))

(assert (= (and b!132846 res!63949) b!132848))

(assert (= (or b!132846 b!132860) bm!14624))

(declare-fun b_lambda!5921 () Bool)

(assert (=> (not b_lambda!5921) (not b!132855)))

(assert (=> b!132855 t!6133))

(declare-fun b_and!8233 () Bool)

(assert (= b_and!8213 (and (=> t!6133 result!3973) b_and!8233)))

(assert (=> b!132855 t!6135))

(declare-fun b_and!8235 () Bool)

(assert (= b_and!8215 (and (=> t!6135 result!3977) b_and!8235)))

(assert (=> d!40445 m!156405))

(declare-fun m!156581 () Bool)

(assert (=> b!132857 m!156581))

(assert (=> b!132857 m!156581))

(declare-fun m!156583 () Bool)

(assert (=> b!132857 m!156583))

(declare-fun m!156585 () Bool)

(assert (=> b!132847 m!156585))

(declare-fun m!156587 () Bool)

(assert (=> b!132847 m!156587))

(declare-fun m!156589 () Bool)

(assert (=> b!132847 m!156589))

(declare-fun m!156591 () Bool)

(assert (=> b!132847 m!156591))

(declare-fun m!156593 () Bool)

(assert (=> b!132847 m!156593))

(assert (=> b!132847 m!156581))

(declare-fun m!156595 () Bool)

(assert (=> b!132847 m!156595))

(declare-fun m!156597 () Bool)

(assert (=> b!132847 m!156597))

(declare-fun m!156599 () Bool)

(assert (=> b!132847 m!156599))

(declare-fun m!156601 () Bool)

(assert (=> b!132847 m!156601))

(declare-fun m!156603 () Bool)

(assert (=> b!132847 m!156603))

(declare-fun m!156605 () Bool)

(assert (=> b!132847 m!156605))

(assert (=> b!132847 m!156599))

(assert (=> b!132847 m!156593))

(declare-fun m!156607 () Bool)

(assert (=> b!132847 m!156607))

(declare-fun m!156609 () Bool)

(assert (=> b!132847 m!156609))

(declare-fun m!156611 () Bool)

(assert (=> b!132847 m!156611))

(assert (=> b!132847 m!156611))

(declare-fun m!156613 () Bool)

(assert (=> b!132847 m!156613))

(assert (=> b!132847 m!156591))

(declare-fun m!156615 () Bool)

(assert (=> b!132847 m!156615))

(declare-fun m!156617 () Bool)

(assert (=> b!132855 m!156617))

(assert (=> b!132855 m!156391))

(declare-fun m!156619 () Bool)

(assert (=> b!132855 m!156619))

(assert (=> b!132855 m!156391))

(assert (=> b!132855 m!156617))

(assert (=> b!132855 m!156581))

(assert (=> b!132855 m!156581))

(declare-fun m!156621 () Bool)

(assert (=> b!132855 m!156621))

(declare-fun m!156623 () Bool)

(assert (=> bm!14624 m!156623))

(declare-fun m!156625 () Bool)

(assert (=> bm!14622 m!156625))

(assert (=> b!132849 m!156581))

(assert (=> b!132849 m!156581))

(assert (=> b!132849 m!156583))

(declare-fun m!156627 () Bool)

(assert (=> b!132851 m!156627))

(assert (=> b!132859 m!156581))

(assert (=> b!132859 m!156581))

(declare-fun m!156629 () Bool)

(assert (=> b!132859 m!156629))

(assert (=> bm!14628 m!156605))

(declare-fun m!156631 () Bool)

(assert (=> bm!14626 m!156631))

(declare-fun m!156633 () Bool)

(assert (=> b!132858 m!156633))

(declare-fun m!156635 () Bool)

(assert (=> b!132848 m!156635))

(assert (=> b!132499 d!40445))

(declare-fun d!40447 () Bool)

(declare-fun res!63959 () Bool)

(declare-fun e!86610 () Bool)

(assert (=> d!40447 (=> (not res!63959) (not e!86610))))

(declare-fun simpleValid!92 (LongMapFixedSize!1096) Bool)

(assert (=> d!40447 (= res!63959 (simpleValid!92 newMap!16))))

(assert (=> d!40447 (= (valid!542 newMap!16) e!86610)))

(declare-fun b!132873 () Bool)

(declare-fun res!63960 () Bool)

(assert (=> b!132873 (=> (not res!63960) (not e!86610))))

(declare-fun arrayCountValidKeys!0 (array!4763 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!132873 (= res!63960 (= (arrayCountValidKeys!0 (_keys!4613 newMap!16) #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) (_size!597 newMap!16)))))

(declare-fun b!132874 () Bool)

(declare-fun res!63961 () Bool)

(assert (=> b!132874 (=> (not res!63961) (not e!86610))))

(assert (=> b!132874 (= res!63961 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(declare-fun b!132875 () Bool)

(assert (=> b!132875 (= e!86610 (arrayNoDuplicates!0 (_keys!4613 newMap!16) #b00000000000000000000000000000000 Nil!1690))))

(assert (= (and d!40447 res!63959) b!132873))

(assert (= (and b!132873 res!63960) b!132874))

(assert (= (and b!132874 res!63961) b!132875))

(declare-fun m!156637 () Bool)

(assert (=> d!40447 m!156637))

(declare-fun m!156639 () Bool)

(assert (=> b!132873 m!156639))

(declare-fun m!156641 () Bool)

(assert (=> b!132874 m!156641))

(declare-fun m!156643 () Bool)

(assert (=> b!132875 m!156643))

(assert (=> b!132508 d!40447))

(declare-fun mapIsEmpty!4653 () Bool)

(declare-fun mapRes!4653 () Bool)

(assert (=> mapIsEmpty!4653 mapRes!4653))

(declare-fun condMapEmpty!4653 () Bool)

(declare-fun mapDefault!4653 () ValueCell!1094)

(assert (=> mapNonEmpty!4637 (= condMapEmpty!4653 (= mapRest!4637 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4653)))))

(declare-fun e!86615 () Bool)

(assert (=> mapNonEmpty!4637 (= tp!11193 (and e!86615 mapRes!4653))))

(declare-fun b!132882 () Bool)

(declare-fun e!86616 () Bool)

(assert (=> b!132882 (= e!86616 tp_is_empty!2875)))

(declare-fun mapNonEmpty!4653 () Bool)

(declare-fun tp!11223 () Bool)

(assert (=> mapNonEmpty!4653 (= mapRes!4653 (and tp!11223 e!86616))))

(declare-fun mapValue!4653 () ValueCell!1094)

(declare-fun mapRest!4653 () (Array (_ BitVec 32) ValueCell!1094))

(declare-fun mapKey!4653 () (_ BitVec 32))

(assert (=> mapNonEmpty!4653 (= mapRest!4637 (store mapRest!4653 mapKey!4653 mapValue!4653))))

(declare-fun b!132883 () Bool)

(assert (=> b!132883 (= e!86615 tp_is_empty!2875)))

(assert (= (and mapNonEmpty!4637 condMapEmpty!4653) mapIsEmpty!4653))

(assert (= (and mapNonEmpty!4637 (not condMapEmpty!4653)) mapNonEmpty!4653))

(assert (= (and mapNonEmpty!4653 ((_ is ValueCellFull!1094) mapValue!4653)) b!132882))

(assert (= (and mapNonEmpty!4637 ((_ is ValueCellFull!1094) mapDefault!4653)) b!132883))

(declare-fun m!156645 () Bool)

(assert (=> mapNonEmpty!4653 m!156645))

(declare-fun mapIsEmpty!4654 () Bool)

(declare-fun mapRes!4654 () Bool)

(assert (=> mapIsEmpty!4654 mapRes!4654))

(declare-fun condMapEmpty!4654 () Bool)

(declare-fun mapDefault!4654 () ValueCell!1094)

(assert (=> mapNonEmpty!4638 (= condMapEmpty!4654 (= mapRest!4638 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4654)))))

(declare-fun e!86617 () Bool)

(assert (=> mapNonEmpty!4638 (= tp!11194 (and e!86617 mapRes!4654))))

(declare-fun b!132884 () Bool)

(declare-fun e!86618 () Bool)

(assert (=> b!132884 (= e!86618 tp_is_empty!2875)))

(declare-fun mapNonEmpty!4654 () Bool)

(declare-fun tp!11224 () Bool)

(assert (=> mapNonEmpty!4654 (= mapRes!4654 (and tp!11224 e!86618))))

(declare-fun mapRest!4654 () (Array (_ BitVec 32) ValueCell!1094))

(declare-fun mapKey!4654 () (_ BitVec 32))

(declare-fun mapValue!4654 () ValueCell!1094)

(assert (=> mapNonEmpty!4654 (= mapRest!4638 (store mapRest!4654 mapKey!4654 mapValue!4654))))

(declare-fun b!132885 () Bool)

(assert (=> b!132885 (= e!86617 tp_is_empty!2875)))

(assert (= (and mapNonEmpty!4638 condMapEmpty!4654) mapIsEmpty!4654))

(assert (= (and mapNonEmpty!4638 (not condMapEmpty!4654)) mapNonEmpty!4654))

(assert (= (and mapNonEmpty!4654 ((_ is ValueCellFull!1094) mapValue!4654)) b!132884))

(assert (= (and mapNonEmpty!4638 ((_ is ValueCellFull!1094) mapDefault!4654)) b!132885))

(declare-fun m!156647 () Bool)

(assert (=> mapNonEmpty!4654 m!156647))

(declare-fun b_lambda!5923 () Bool)

(assert (= b_lambda!5921 (or (and b!132503 b_free!2917) (and b!132502 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))))) b_lambda!5923)))

(check-sat (not b!132671) (not bm!14592) (not b!132857) (not b_next!2917) (not bm!14624) (not b!132859) (not bm!14601) (not b!132775) (not d!40445) (not b!132849) (not b!132766) (not b!132776) (not d!40437) (not bm!14585) (not bm!14626) (not d!40433) (not bm!14605) (not b_lambda!5923) b_and!8233 tp_is_empty!2875 (not b!132669) (not bm!14589) (not b!132848) (not b!132779) (not b!132803) (not b!132794) (not bm!14590) (not b!132781) (not bm!14584) (not bm!14587) (not mapNonEmpty!4653) (not b!132858) (not d!40439) (not b!132874) (not b!132648) (not d!40443) (not bm!14597) (not b!132855) (not bm!14622) (not bm!14628) (not b!132646) (not b!132660) (not bm!14607) (not bm!14599) (not b!132649) (not bm!14600) (not b!132769) (not b!132873) (not bm!14532) b_and!8235 (not b_next!2919) (not b!132851) (not d!40447) (not b!132661) (not b_lambda!5919) (not b!132847) (not b!132875) (not mapNonEmpty!4654) (not b!132802) (not bm!14535))
(check-sat b_and!8233 b_and!8235 (not b_next!2917) (not b_next!2919))
(get-model)

(declare-fun d!40449 () Bool)

(assert (=> d!40449 (= (get!1490 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3197 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!132802 d!40449))

(declare-fun b!132896 () Bool)

(declare-fun res!63971 () Bool)

(declare-fun e!86621 () Bool)

(assert (=> b!132896 (=> (not res!63971) (not e!86621))))

(declare-fun size!2527 (LongMapFixedSize!1096) (_ BitVec 32))

(assert (=> b!132896 (= res!63971 (= (size!2527 newMap!16) (bvadd (_size!597 newMap!16) (bvsdiv (bvadd (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!132894 () Bool)

(declare-fun res!63972 () Bool)

(assert (=> b!132894 (=> (not res!63972) (not e!86621))))

(assert (=> b!132894 (= res!63972 (and (= (size!2522 (_values!2847 newMap!16)) (bvadd (mask!7164 newMap!16) #b00000000000000000000000000000001)) (= (size!2521 (_keys!4613 newMap!16)) (size!2522 (_values!2847 newMap!16))) (bvsge (_size!597 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!597 newMap!16) (bvadd (mask!7164 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun d!40451 () Bool)

(declare-fun res!63973 () Bool)

(assert (=> d!40451 (=> (not res!63973) (not e!86621))))

(assert (=> d!40451 (= res!63973 (validMask!0 (mask!7164 newMap!16)))))

(assert (=> d!40451 (= (simpleValid!92 newMap!16) e!86621)))

(declare-fun b!132897 () Bool)

(assert (=> b!132897 (= e!86621 (and (bvsge (extraKeys!2629 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2629 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!597 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!132895 () Bool)

(declare-fun res!63970 () Bool)

(assert (=> b!132895 (=> (not res!63970) (not e!86621))))

(assert (=> b!132895 (= res!63970 (bvsge (size!2527 newMap!16) (_size!597 newMap!16)))))

(assert (= (and d!40451 res!63973) b!132894))

(assert (= (and b!132894 res!63972) b!132895))

(assert (= (and b!132895 res!63970) b!132896))

(assert (= (and b!132896 res!63971) b!132897))

(declare-fun m!156649 () Bool)

(assert (=> b!132896 m!156649))

(declare-fun m!156651 () Bool)

(assert (=> d!40451 m!156651))

(assert (=> b!132895 m!156649))

(assert (=> d!40447 d!40451))

(declare-fun d!40453 () Bool)

(assert (=> d!40453 (= (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132648 d!40453))

(declare-fun b!132910 () Bool)

(declare-fun c!24593 () Bool)

(declare-fun lt!69361 () (_ BitVec 64))

(assert (=> b!132910 (= c!24593 (= lt!69361 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86629 () SeekEntryResult!269)

(declare-fun e!86630 () SeekEntryResult!269)

(assert (=> b!132910 (= e!86629 e!86630)))

(declare-fun lt!69360 () SeekEntryResult!269)

(declare-fun d!40455 () Bool)

(assert (=> d!40455 (and (or ((_ is Undefined!269) lt!69360) (not ((_ is Found!269) lt!69360)) (and (bvsge (index!3237 lt!69360) #b00000000000000000000000000000000) (bvslt (index!3237 lt!69360) (size!2521 (_keys!4613 newMap!16))))) (or ((_ is Undefined!269) lt!69360) ((_ is Found!269) lt!69360) (not ((_ is MissingZero!269) lt!69360)) (and (bvsge (index!3236 lt!69360) #b00000000000000000000000000000000) (bvslt (index!3236 lt!69360) (size!2521 (_keys!4613 newMap!16))))) (or ((_ is Undefined!269) lt!69360) ((_ is Found!269) lt!69360) ((_ is MissingZero!269) lt!69360) (not ((_ is MissingVacant!269) lt!69360)) (and (bvsge (index!3239 lt!69360) #b00000000000000000000000000000000) (bvslt (index!3239 lt!69360) (size!2521 (_keys!4613 newMap!16))))) (or ((_ is Undefined!269) lt!69360) (ite ((_ is Found!269) lt!69360) (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69360)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite ((_ is MissingZero!269) lt!69360) (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3236 lt!69360)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!269) lt!69360) (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3239 lt!69360)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!86628 () SeekEntryResult!269)

(assert (=> d!40455 (= lt!69360 e!86628)))

(declare-fun c!24595 () Bool)

(declare-fun lt!69362 () SeekEntryResult!269)

(assert (=> d!40455 (= c!24595 (and ((_ is Intermediate!269) lt!69362) (undefined!1081 lt!69362)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4763 (_ BitVec 32)) SeekEntryResult!269)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!40455 (= lt!69362 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (mask!7164 newMap!16)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(assert (=> d!40455 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40455 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)) lt!69360)))

(declare-fun b!132911 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4763 (_ BitVec 32)) SeekEntryResult!269)

(assert (=> b!132911 (= e!86630 (seekKeyOrZeroReturnVacant!0 (x!15586 lt!69362) (index!3238 lt!69362) (index!3238 lt!69362) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(declare-fun b!132912 () Bool)

(assert (=> b!132912 (= e!86630 (MissingZero!269 (index!3238 lt!69362)))))

(declare-fun b!132913 () Bool)

(assert (=> b!132913 (= e!86628 e!86629)))

(assert (=> b!132913 (= lt!69361 (select (arr!2252 (_keys!4613 newMap!16)) (index!3238 lt!69362)))))

(declare-fun c!24594 () Bool)

(assert (=> b!132913 (= c!24594 (= lt!69361 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!132914 () Bool)

(assert (=> b!132914 (= e!86629 (Found!269 (index!3238 lt!69362)))))

(declare-fun b!132915 () Bool)

(assert (=> b!132915 (= e!86628 Undefined!269)))

(assert (= (and d!40455 c!24595) b!132915))

(assert (= (and d!40455 (not c!24595)) b!132913))

(assert (= (and b!132913 c!24594) b!132914))

(assert (= (and b!132913 (not c!24594)) b!132910))

(assert (= (and b!132910 c!24593) b!132912))

(assert (= (and b!132910 (not c!24593)) b!132911))

(assert (=> d!40455 m!156395))

(declare-fun m!156653 () Bool)

(assert (=> d!40455 m!156653))

(assert (=> d!40455 m!156651))

(assert (=> d!40455 m!156653))

(assert (=> d!40455 m!156395))

(declare-fun m!156655 () Bool)

(assert (=> d!40455 m!156655))

(declare-fun m!156657 () Bool)

(assert (=> d!40455 m!156657))

(declare-fun m!156659 () Bool)

(assert (=> d!40455 m!156659))

(declare-fun m!156661 () Bool)

(assert (=> d!40455 m!156661))

(assert (=> b!132911 m!156395))

(declare-fun m!156663 () Bool)

(assert (=> b!132911 m!156663))

(declare-fun m!156665 () Bool)

(assert (=> b!132913 m!156665))

(assert (=> bm!14599 d!40455))

(assert (=> b!132649 d!40453))

(declare-fun d!40457 () Bool)

(declare-fun e!86633 () Bool)

(assert (=> d!40457 e!86633))

(declare-fun res!63979 () Bool)

(assert (=> d!40457 (=> (not res!63979) (not e!86633))))

(declare-fun lt!69373 () ListLongMap!1653)

(assert (=> d!40457 (= res!63979 (contains!884 lt!69373 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!69374 () List!1694)

(assert (=> d!40457 (= lt!69373 (ListLongMap!1654 lt!69374))))

(declare-fun lt!69371 () Unit!4141)

(declare-fun lt!69372 () Unit!4141)

(assert (=> d!40457 (= lt!69371 lt!69372)))

(assert (=> d!40457 (= (getValueByKey!173 lt!69374 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!178 (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!88 (List!1694 (_ BitVec 64) V!3481) Unit!4141)

(assert (=> d!40457 (= lt!69372 (lemmaContainsTupThenGetReturnValue!88 lt!69374 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun insertStrictlySorted!91 (List!1694 (_ BitVec 64) V!3481) List!1694)

(assert (=> d!40457 (= lt!69374 (insertStrictlySorted!91 (toList!842 e!86561) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40457 (= (+!169 e!86561 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69373)))

(declare-fun b!132920 () Bool)

(declare-fun res!63978 () Bool)

(assert (=> b!132920 (=> (not res!63978) (not e!86633))))

(assert (=> b!132920 (= res!63978 (= (getValueByKey!173 (toList!842 lt!69373) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!178 (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!132921 () Bool)

(declare-fun contains!886 (List!1694 tuple2!2564) Bool)

(assert (=> b!132921 (= e!86633 (contains!886 (toList!842 lt!69373) (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!40457 res!63979) b!132920))

(assert (= (and b!132920 res!63978) b!132921))

(declare-fun m!156667 () Bool)

(assert (=> d!40457 m!156667))

(declare-fun m!156669 () Bool)

(assert (=> d!40457 m!156669))

(declare-fun m!156671 () Bool)

(assert (=> d!40457 m!156671))

(declare-fun m!156673 () Bool)

(assert (=> d!40457 m!156673))

(declare-fun m!156675 () Bool)

(assert (=> b!132920 m!156675))

(declare-fun m!156677 () Bool)

(assert (=> b!132921 m!156677))

(assert (=> bm!14601 d!40457))

(declare-fun d!40459 () Bool)

(declare-fun res!63984 () Bool)

(declare-fun e!86638 () Bool)

(assert (=> d!40459 (=> res!63984 e!86638)))

(assert (=> d!40459 (= res!63984 (= (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40459 (= (arrayContainsKey!0 (_keys!4613 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000) e!86638)))

(declare-fun b!132926 () Bool)

(declare-fun e!86639 () Bool)

(assert (=> b!132926 (= e!86638 e!86639)))

(declare-fun res!63985 () Bool)

(assert (=> b!132926 (=> (not res!63985) (not e!86639))))

(assert (=> b!132926 (= res!63985 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!132927 () Bool)

(assert (=> b!132927 (= e!86639 (arrayContainsKey!0 (_keys!4613 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40459 (not res!63984)) b!132926))

(assert (= (and b!132926 res!63985) b!132927))

(declare-fun m!156679 () Bool)

(assert (=> d!40459 m!156679))

(assert (=> b!132927 m!156395))

(declare-fun m!156681 () Bool)

(assert (=> b!132927 m!156681))

(assert (=> bm!14589 d!40459))

(assert (=> b!132661 d!40453))

(declare-fun b!132928 () Bool)

(declare-fun e!86642 () Bool)

(declare-fun call!14632 () Bool)

(assert (=> b!132928 (= e!86642 call!14632)))

(declare-fun b!132929 () Bool)

(declare-fun e!86640 () Bool)

(assert (=> b!132929 (= e!86642 e!86640)))

(declare-fun lt!69376 () (_ BitVec 64))

(assert (=> b!132929 (= lt!69376 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69375 () Unit!4141)

(assert (=> b!132929 (= lt!69375 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 newMap!16) lt!69376 #b00000000000000000000000000000000))))

(assert (=> b!132929 (arrayContainsKey!0 (_keys!4613 newMap!16) lt!69376 #b00000000000000000000000000000000)))

(declare-fun lt!69377 () Unit!4141)

(assert (=> b!132929 (= lt!69377 lt!69375)))

(declare-fun res!63986 () Bool)

(assert (=> b!132929 (= res!63986 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (_keys!4613 newMap!16) (mask!7164 newMap!16)) (Found!269 #b00000000000000000000000000000000)))))

(assert (=> b!132929 (=> (not res!63986) (not e!86640))))

(declare-fun b!132930 () Bool)

(declare-fun e!86641 () Bool)

(assert (=> b!132930 (= e!86641 e!86642)))

(declare-fun c!24596 () Bool)

(assert (=> b!132930 (= c!24596 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!132931 () Bool)

(assert (=> b!132931 (= e!86640 call!14632)))

(declare-fun d!40461 () Bool)

(declare-fun res!63987 () Bool)

(assert (=> d!40461 (=> res!63987 e!86641)))

(assert (=> d!40461 (= res!63987 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40461 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4613 newMap!16) (mask!7164 newMap!16)) e!86641)))

(declare-fun bm!14629 () Bool)

(assert (=> bm!14629 (= call!14632 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(assert (= (and d!40461 (not res!63987)) b!132930))

(assert (= (and b!132930 c!24596) b!132929))

(assert (= (and b!132930 (not c!24596)) b!132928))

(assert (= (and b!132929 res!63986) b!132931))

(assert (= (or b!132931 b!132928) bm!14629))

(assert (=> b!132929 m!156679))

(declare-fun m!156683 () Bool)

(assert (=> b!132929 m!156683))

(declare-fun m!156685 () Bool)

(assert (=> b!132929 m!156685))

(assert (=> b!132929 m!156679))

(declare-fun m!156687 () Bool)

(assert (=> b!132929 m!156687))

(assert (=> b!132930 m!156679))

(assert (=> b!132930 m!156679))

(declare-fun m!156689 () Bool)

(assert (=> b!132930 m!156689))

(declare-fun m!156691 () Bool)

(assert (=> bm!14629 m!156691))

(assert (=> b!132874 d!40461))

(declare-fun bm!14638 () Bool)

(declare-fun call!14642 () Bool)

(assert (=> bm!14638 (= call!14642 (arrayContainsKey!0 (_keys!4613 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!132966 () Bool)

(declare-fun e!86660 () Bool)

(declare-fun lt!69457 () SeekEntryResult!269)

(assert (=> b!132966 (= e!86660 ((_ is Undefined!269) lt!69457))))

(declare-fun b!132967 () Bool)

(declare-fun res!64007 () Bool)

(assert (=> b!132967 (= res!64007 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3239 lt!69457)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86664 () Bool)

(assert (=> b!132967 (=> (not res!64007) (not e!86664))))

(declare-fun call!14643 () Bool)

(declare-fun c!24606 () Bool)

(declare-fun bm!14639 () Bool)

(declare-fun c!24607 () Bool)

(declare-fun lt!69463 () SeekEntryResult!269)

(assert (=> bm!14639 (= call!14643 (inRange!0 (ite c!24607 (index!3237 lt!69463) (ite c!24606 (index!3236 lt!69457) (index!3239 lt!69457))) (mask!7164 newMap!16)))))

(declare-fun call!14644 () SeekEntryResult!269)

(declare-fun bm!14640 () Bool)

(assert (=> bm!14640 (= call!14644 (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(declare-fun b!132968 () Bool)

(declare-fun e!86666 () Unit!4141)

(declare-fun lt!69444 () Unit!4141)

(assert (=> b!132968 (= e!86666 lt!69444)))

(assert (=> b!132968 (= lt!69444 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)))))

(assert (=> b!132968 (= lt!69457 call!14644)))

(assert (=> b!132968 (= c!24606 ((_ is MissingZero!269) lt!69457))))

(declare-fun e!86662 () Bool)

(assert (=> b!132968 e!86662))

(declare-fun e!86663 () Bool)

(declare-fun b!132969 () Bool)

(assert (=> b!132969 (= e!86663 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69463)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!132970 () Bool)

(declare-fun res!64009 () Bool)

(declare-fun e!86661 () Bool)

(assert (=> b!132970 (=> (not res!64009) (not e!86661))))

(declare-fun call!14641 () Bool)

(assert (=> b!132970 (= res!64009 call!14641)))

(assert (=> b!132970 (= e!86662 e!86661)))

(declare-fun b!132971 () Bool)

(declare-fun e!86659 () Unit!4141)

(declare-fun Unit!4147 () Unit!4141)

(assert (=> b!132971 (= e!86659 Unit!4147)))

(declare-fun d!40463 () Bool)

(declare-fun e!86665 () Bool)

(assert (=> d!40463 e!86665))

(declare-fun res!64013 () Bool)

(assert (=> d!40463 (=> (not res!64013) (not e!86665))))

(declare-fun lt!69445 () tuple2!2566)

(assert (=> d!40463 (= res!64013 (_1!1294 lt!69445))))

(assert (=> d!40463 (= lt!69445 (tuple2!2567 true (LongMapFixedSize!1097 (defaultEntry!2864 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd (_size!597 newMap!16) #b00000000000000000000000000000001) (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (_vacant!597 newMap!16))))))

(declare-fun lt!69447 () Unit!4141)

(declare-fun lt!69465 () Unit!4141)

(assert (=> d!40463 (= lt!69447 lt!69465)))

(declare-fun lt!69466 () array!4765)

(declare-fun lt!69441 () array!4763)

(assert (=> d!40463 (contains!884 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))))))

(assert (=> d!40463 (= lt!69465 (lemmaValidKeyInArrayIsInListMap!121 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40463 (= lt!69466 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))))

(assert (=> d!40463 (= lt!69441 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun lt!69443 () Unit!4141)

(declare-fun lt!69439 () Unit!4141)

(assert (=> d!40463 (= lt!69443 lt!69439)))

(declare-fun lt!69456 () array!4763)

(assert (=> d!40463 (= (arrayCountValidKeys!0 lt!69456 (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4763 (_ BitVec 32)) Unit!4141)

(assert (=> d!40463 (= lt!69439 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!69456 (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))))))

(assert (=> d!40463 (= lt!69456 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun lt!69451 () Unit!4141)

(declare-fun lt!69459 () Unit!4141)

(assert (=> d!40463 (= lt!69451 lt!69459)))

(declare-fun lt!69460 () array!4763)

(assert (=> d!40463 (arrayContainsKey!0 lt!69460 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!40463 (= lt!69459 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!69460 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))))))

(assert (=> d!40463 (= lt!69460 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun lt!69438 () Unit!4141)

(declare-fun lt!69448 () Unit!4141)

(assert (=> d!40463 (= lt!69438 lt!69448)))

(assert (=> d!40463 (= (+!169 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!518 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!42 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) (_ BitVec 64) V!3481 Int) Unit!4141)

(assert (=> d!40463 (= lt!69448 (lemmaAddValidKeyToArrayThenAddPairToListMap!42 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69454 () Unit!4141)

(declare-fun lt!69449 () Unit!4141)

(assert (=> d!40463 (= lt!69454 lt!69449)))

(assert (=> d!40463 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (mask!7164 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4763 (_ BitVec 32) (_ BitVec 32)) Unit!4141)

(assert (=> d!40463 (= lt!69449 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (mask!7164 newMap!16)))))

(declare-fun lt!69446 () Unit!4141)

(declare-fun lt!69440 () Unit!4141)

(assert (=> d!40463 (= lt!69446 lt!69440)))

(assert (=> d!40463 (= (arrayCountValidKeys!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4613 newMap!16) #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4763 (_ BitVec 32) (_ BitVec 64)) Unit!4141)

(assert (=> d!40463 (= lt!69440 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4613 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun lt!69462 () Unit!4141)

(declare-fun lt!69464 () Unit!4141)

(assert (=> d!40463 (= lt!69462 lt!69464)))

(declare-fun lt!69467 () (_ BitVec 32))

(declare-fun lt!69442 () List!1693)

(assert (=> d!40463 (arrayNoDuplicates!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) lt!69467 lt!69442)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4763 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1693) Unit!4141)

(assert (=> d!40463 (= lt!69464 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4613 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) lt!69467 lt!69442))))

(assert (=> d!40463 (= lt!69442 Nil!1690)))

(assert (=> d!40463 (= lt!69467 #b00000000000000000000000000000000)))

(declare-fun lt!69452 () Unit!4141)

(assert (=> d!40463 (= lt!69452 e!86659)))

(declare-fun c!24608 () Bool)

(assert (=> d!40463 (= c!24608 (arrayContainsKey!0 (_keys!4613 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!69458 () Unit!4141)

(assert (=> d!40463 (= lt!69458 e!86666)))

(assert (=> d!40463 (= c!24607 (contains!884 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40463 (valid!542 newMap!16)))

(assert (=> d!40463 (= (updateHelperNewKey!61 newMap!16 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))) lt!69445)))

(declare-fun b!132972 () Bool)

(declare-fun res!64010 () Bool)

(assert (=> b!132972 (= res!64010 call!14643)))

(assert (=> b!132972 (=> (not res!64010) (not e!86663))))

(declare-fun b!132973 () Bool)

(declare-fun res!64008 () Bool)

(assert (=> b!132973 (=> (not res!64008) (not e!86661))))

(assert (=> b!132973 (= res!64008 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3236 lt!69457)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!132974 () Bool)

(assert (=> b!132974 (= e!86661 (not call!14642))))

(declare-fun b!132975 () Bool)

(declare-fun res!64014 () Bool)

(assert (=> b!132975 (=> (not res!64014) (not e!86665))))

(assert (=> b!132975 (= res!64014 (valid!542 (_2!1294 lt!69445)))))

(declare-fun bm!14641 () Bool)

(assert (=> bm!14641 (= call!14641 call!14643)))

(declare-fun b!132976 () Bool)

(assert (=> b!132976 (= e!86664 (not call!14642))))

(declare-fun b!132977 () Bool)

(declare-fun res!64006 () Bool)

(assert (=> b!132977 (=> (not res!64006) (not e!86665))))

(assert (=> b!132977 (= res!64006 (contains!884 (map!1398 (_2!1294 lt!69445)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!132978 () Bool)

(declare-fun Unit!4148 () Unit!4141)

(assert (=> b!132978 (= e!86666 Unit!4148)))

(declare-fun lt!69453 () Unit!4141)

(assert (=> b!132978 (= lt!69453 (lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)))))

(assert (=> b!132978 (= lt!69463 call!14644)))

(declare-fun res!64012 () Bool)

(assert (=> b!132978 (= res!64012 ((_ is Found!269) lt!69463))))

(assert (=> b!132978 (=> (not res!64012) (not e!86663))))

(assert (=> b!132978 e!86663))

(declare-fun lt!69455 () Unit!4141)

(assert (=> b!132978 (= lt!69455 lt!69453)))

(assert (=> b!132978 false))

(declare-fun b!132979 () Bool)

(assert (=> b!132979 (= e!86660 e!86664)))

(declare-fun res!64011 () Bool)

(assert (=> b!132979 (= res!64011 call!14641)))

(assert (=> b!132979 (=> (not res!64011) (not e!86664))))

(declare-fun b!132980 () Bool)

(declare-fun c!24605 () Bool)

(assert (=> b!132980 (= c!24605 ((_ is MissingVacant!269) lt!69457))))

(assert (=> b!132980 (= e!86662 e!86660)))

(declare-fun b!132981 () Bool)

(assert (=> b!132981 (= e!86665 (= (map!1398 (_2!1294 lt!69445)) (+!169 (map!1398 newMap!16) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!132982 () Bool)

(declare-fun Unit!4149 () Unit!4141)

(assert (=> b!132982 (= e!86659 Unit!4149)))

(declare-fun lt!69461 () Unit!4141)

(declare-fun lemmaArrayContainsKeyThenInListMap!42 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 64) (_ BitVec 32) Int) Unit!4141)

(assert (=> b!132982 (= lt!69461 (lemmaArrayContainsKeyThenInListMap!42 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(assert (=> b!132982 (contains!884 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))

(declare-fun lt!69450 () Unit!4141)

(assert (=> b!132982 (= lt!69450 lt!69461)))

(assert (=> b!132982 false))

(assert (= (and d!40463 c!24607) b!132978))

(assert (= (and d!40463 (not c!24607)) b!132968))

(assert (= (and b!132978 res!64012) b!132972))

(assert (= (and b!132972 res!64010) b!132969))

(assert (= (and b!132968 c!24606) b!132970))

(assert (= (and b!132968 (not c!24606)) b!132980))

(assert (= (and b!132970 res!64009) b!132973))

(assert (= (and b!132973 res!64008) b!132974))

(assert (= (and b!132980 c!24605) b!132979))

(assert (= (and b!132980 (not c!24605)) b!132966))

(assert (= (and b!132979 res!64011) b!132967))

(assert (= (and b!132967 res!64007) b!132976))

(assert (= (or b!132970 b!132979) bm!14641))

(assert (= (or b!132974 b!132976) bm!14638))

(assert (= (or b!132972 bm!14641) bm!14639))

(assert (= (or b!132978 b!132968) bm!14640))

(assert (= (and d!40463 c!24608) b!132982))

(assert (= (and d!40463 (not c!24608)) b!132971))

(assert (= (and d!40463 res!64013) b!132975))

(assert (= (and b!132975 res!64014) b!132977))

(assert (= (and b!132977 res!64006) b!132981))

(declare-fun m!156693 () Bool)

(assert (=> b!132981 m!156693))

(assert (=> b!132981 m!156413))

(assert (=> b!132981 m!156413))

(declare-fun m!156695 () Bool)

(assert (=> b!132981 m!156695))

(assert (=> b!132977 m!156693))

(assert (=> b!132977 m!156693))

(assert (=> b!132977 m!156395))

(declare-fun m!156697 () Bool)

(assert (=> b!132977 m!156697))

(declare-fun m!156699 () Bool)

(assert (=> d!40463 m!156699))

(declare-fun m!156701 () Bool)

(assert (=> d!40463 m!156701))

(declare-fun m!156703 () Bool)

(assert (=> d!40463 m!156703))

(assert (=> d!40463 m!156395))

(assert (=> d!40463 m!156393))

(declare-fun m!156705 () Bool)

(assert (=> d!40463 m!156705))

(assert (=> d!40463 m!156545))

(assert (=> d!40463 m!156395))

(assert (=> d!40463 m!156549))

(assert (=> d!40463 m!156395))

(declare-fun m!156707 () Bool)

(assert (=> d!40463 m!156707))

(declare-fun m!156709 () Bool)

(assert (=> d!40463 m!156709))

(declare-fun m!156711 () Bool)

(assert (=> d!40463 m!156711))

(assert (=> d!40463 m!156545))

(declare-fun m!156713 () Bool)

(assert (=> d!40463 m!156713))

(assert (=> d!40463 m!156395))

(declare-fun m!156715 () Bool)

(assert (=> d!40463 m!156715))

(assert (=> d!40463 m!156395))

(declare-fun m!156717 () Bool)

(assert (=> d!40463 m!156717))

(declare-fun m!156719 () Bool)

(assert (=> d!40463 m!156719))

(assert (=> d!40463 m!156395))

(declare-fun m!156721 () Bool)

(assert (=> d!40463 m!156721))

(declare-fun m!156723 () Bool)

(assert (=> d!40463 m!156723))

(declare-fun m!156725 () Bool)

(assert (=> d!40463 m!156725))

(assert (=> d!40463 m!156395))

(declare-fun m!156727 () Bool)

(assert (=> d!40463 m!156727))

(assert (=> d!40463 m!156701))

(assert (=> d!40463 m!156725))

(declare-fun m!156729 () Bool)

(assert (=> d!40463 m!156729))

(assert (=> d!40463 m!156395))

(assert (=> d!40463 m!156535))

(assert (=> d!40463 m!156639))

(declare-fun m!156731 () Bool)

(assert (=> d!40463 m!156731))

(assert (=> d!40463 m!156401))

(declare-fun m!156733 () Bool)

(assert (=> d!40463 m!156733))

(assert (=> d!40463 m!156545))

(declare-fun m!156735 () Bool)

(assert (=> d!40463 m!156735))

(declare-fun m!156737 () Bool)

(assert (=> b!132969 m!156737))

(assert (=> b!132982 m!156395))

(declare-fun m!156739 () Bool)

(assert (=> b!132982 m!156739))

(assert (=> b!132982 m!156545))

(assert (=> b!132982 m!156545))

(assert (=> b!132982 m!156395))

(assert (=> b!132982 m!156549))

(declare-fun m!156741 () Bool)

(assert (=> b!132973 m!156741))

(assert (=> bm!14640 m!156395))

(assert (=> bm!14640 m!156563))

(declare-fun m!156743 () Bool)

(assert (=> b!132975 m!156743))

(assert (=> bm!14638 m!156395))

(assert (=> bm!14638 m!156535))

(declare-fun m!156745 () Bool)

(assert (=> b!132967 m!156745))

(assert (=> b!132968 m!156395))

(assert (=> b!132968 m!156565))

(assert (=> b!132978 m!156395))

(assert (=> b!132978 m!156533))

(declare-fun m!156747 () Bool)

(assert (=> bm!14639 m!156747))

(assert (=> bm!14597 d!40463))

(declare-fun b!133007 () Bool)

(assert (=> b!133007 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> b!133007 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2522 (_values!2847 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun e!86687 () Bool)

(declare-fun lt!69486 () ListLongMap!1653)

(assert (=> b!133007 (= e!86687 (= (apply!116 lt!69486 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133008 () Bool)

(declare-fun res!64025 () Bool)

(declare-fun e!86685 () Bool)

(assert (=> b!133008 (=> (not res!64025) (not e!86685))))

(assert (=> b!133008 (= res!64025 (not (contains!884 lt!69486 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133009 () Bool)

(declare-fun e!86682 () Bool)

(assert (=> b!133009 (= e!86682 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!133009 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!133010 () Bool)

(declare-fun e!86683 () Bool)

(declare-fun e!86684 () Bool)

(assert (=> b!133010 (= e!86683 e!86684)))

(declare-fun c!24620 () Bool)

(assert (=> b!133010 (= c!24620 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!133011 () Bool)

(assert (=> b!133011 (= e!86684 (= lt!69486 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun bm!14644 () Bool)

(declare-fun call!14647 () ListLongMap!1653)

(assert (=> bm!14644 (= call!14647 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!133012 () Bool)

(declare-fun e!86681 () ListLongMap!1653)

(assert (=> b!133012 (= e!86681 call!14647)))

(declare-fun b!133013 () Bool)

(declare-fun e!86686 () ListLongMap!1653)

(assert (=> b!133013 (= e!86686 e!86681)))

(declare-fun c!24617 () Bool)

(assert (=> b!133013 (= c!24617 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!40465 () Bool)

(assert (=> d!40465 e!86685))

(declare-fun res!64023 () Bool)

(assert (=> d!40465 (=> (not res!64023) (not e!86685))))

(assert (=> d!40465 (= res!64023 (not (contains!884 lt!69486 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40465 (= lt!69486 e!86686)))

(declare-fun c!24618 () Bool)

(assert (=> d!40465 (= c!24618 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!40465 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!40465 (= (getCurrentListMapNoExtraKeys!136 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992)))) lt!69486)))

(declare-fun b!133014 () Bool)

(assert (=> b!133014 (= e!86683 e!86687)))

(assert (=> b!133014 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun res!64024 () Bool)

(assert (=> b!133014 (= res!64024 (contains!884 lt!69486 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!133014 (=> (not res!64024) (not e!86687))))

(declare-fun b!133015 () Bool)

(assert (=> b!133015 (= e!86686 (ListLongMap!1654 Nil!1691))))

(declare-fun b!133016 () Bool)

(declare-fun isEmpty!415 (ListLongMap!1653) Bool)

(assert (=> b!133016 (= e!86684 (isEmpty!415 lt!69486))))

(declare-fun b!133017 () Bool)

(declare-fun lt!69483 () Unit!4141)

(declare-fun lt!69487 () Unit!4141)

(assert (=> b!133017 (= lt!69483 lt!69487)))

(declare-fun lt!69488 () (_ BitVec 64))

(declare-fun lt!69482 () ListLongMap!1653)

(declare-fun lt!69485 () V!3481)

(declare-fun lt!69484 () (_ BitVec 64))

(assert (=> b!133017 (not (contains!884 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485)) lt!69488))))

(declare-fun addStillNotContains!63 (ListLongMap!1653 (_ BitVec 64) V!3481 (_ BitVec 64)) Unit!4141)

(assert (=> b!133017 (= lt!69487 (addStillNotContains!63 lt!69482 lt!69484 lt!69485 lt!69488))))

(assert (=> b!133017 (= lt!69488 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133017 (= lt!69485 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133017 (= lt!69484 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!133017 (= lt!69482 call!14647)))

(assert (=> b!133017 (= e!86681 (+!169 call!14647 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133018 () Bool)

(assert (=> b!133018 (= e!86685 e!86683)))

(declare-fun c!24619 () Bool)

(assert (=> b!133018 (= c!24619 e!86682)))

(declare-fun res!64026 () Bool)

(assert (=> b!133018 (=> (not res!64026) (not e!86682))))

(assert (=> b!133018 (= res!64026 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!40465 c!24618) b!133015))

(assert (= (and d!40465 (not c!24618)) b!133013))

(assert (= (and b!133013 c!24617) b!133017))

(assert (= (and b!133013 (not c!24617)) b!133012))

(assert (= (or b!133017 b!133012) bm!14644))

(assert (= (and d!40465 res!64023) b!133008))

(assert (= (and b!133008 res!64025) b!133018))

(assert (= (and b!133018 res!64026) b!133009))

(assert (= (and b!133018 c!24619) b!133014))

(assert (= (and b!133018 (not c!24619)) b!133010))

(assert (= (and b!133014 res!64024) b!133007))

(assert (= (and b!133010 c!24620) b!133011))

(assert (= (and b!133010 (not c!24620)) b!133016))

(declare-fun b_lambda!5925 () Bool)

(assert (=> (not b_lambda!5925) (not b!133007)))

(assert (=> b!133007 t!6133))

(declare-fun b_and!8237 () Bool)

(assert (= b_and!8233 (and (=> t!6133 result!3973) b_and!8237)))

(assert (=> b!133007 t!6135))

(declare-fun b_and!8239 () Bool)

(assert (= b_and!8235 (and (=> t!6135 result!3977) b_and!8239)))

(declare-fun b_lambda!5927 () Bool)

(assert (=> (not b_lambda!5927) (not b!133017)))

(assert (=> b!133017 t!6133))

(declare-fun b_and!8241 () Bool)

(assert (= b_and!8237 (and (=> t!6133 result!3973) b_and!8241)))

(assert (=> b!133017 t!6135))

(declare-fun b_and!8243 () Bool)

(assert (= b_and!8239 (and (=> t!6135 result!3977) b_and!8243)))

(declare-fun m!156749 () Bool)

(assert (=> b!133016 m!156749))

(assert (=> b!133013 m!156581))

(assert (=> b!133013 m!156581))

(assert (=> b!133013 m!156583))

(assert (=> b!133009 m!156581))

(assert (=> b!133009 m!156581))

(assert (=> b!133009 m!156583))

(declare-fun m!156751 () Bool)

(assert (=> b!133011 m!156751))

(declare-fun m!156753 () Bool)

(assert (=> b!133008 m!156753))

(assert (=> b!133017 m!156617))

(assert (=> b!133017 m!156391))

(assert (=> b!133017 m!156619))

(declare-fun m!156755 () Bool)

(assert (=> b!133017 m!156755))

(declare-fun m!156757 () Bool)

(assert (=> b!133017 m!156757))

(assert (=> b!133017 m!156617))

(declare-fun m!156759 () Bool)

(assert (=> b!133017 m!156759))

(assert (=> b!133017 m!156755))

(declare-fun m!156761 () Bool)

(assert (=> b!133017 m!156761))

(assert (=> b!133017 m!156581))

(assert (=> b!133017 m!156391))

(assert (=> b!133014 m!156581))

(assert (=> b!133014 m!156581))

(declare-fun m!156763 () Bool)

(assert (=> b!133014 m!156763))

(declare-fun m!156765 () Bool)

(assert (=> d!40465 m!156765))

(assert (=> d!40465 m!156405))

(assert (=> bm!14644 m!156751))

(assert (=> b!133007 m!156617))

(assert (=> b!133007 m!156391))

(assert (=> b!133007 m!156619))

(assert (=> b!133007 m!156617))

(assert (=> b!133007 m!156581))

(declare-fun m!156767 () Bool)

(assert (=> b!133007 m!156767))

(assert (=> b!133007 m!156581))

(assert (=> b!133007 m!156391))

(assert (=> bm!14628 d!40465))

(declare-fun d!40467 () Bool)

(assert (=> d!40467 (= (+!169 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69283 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69491 () Unit!4141)

(declare-fun choose!824 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 V!3481 Int) Unit!4141)

(assert (=> d!40467 (= lt!69491 (choose!824 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) lt!69283 (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40467 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40467 (= (lemmaChangeZeroKeyThenAddPairToListMap!61 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) lt!69283 (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) (defaultEntry!2864 newMap!16)) lt!69491)))

(declare-fun bs!5506 () Bool)

(assert (= bs!5506 d!40467))

(assert (=> bs!5506 m!156393))

(declare-fun m!156769 () Bool)

(assert (=> bs!5506 m!156769))

(assert (=> bs!5506 m!156545))

(assert (=> bs!5506 m!156545))

(declare-fun m!156771 () Bool)

(assert (=> bs!5506 m!156771))

(assert (=> bs!5506 m!156651))

(assert (=> bs!5506 m!156393))

(declare-fun m!156773 () Bool)

(assert (=> bs!5506 m!156773))

(assert (=> b!132769 d!40467))

(declare-fun call!14651 () ListLongMap!1653)

(declare-fun call!14649 () ListLongMap!1653)

(declare-fun c!24626 () Bool)

(declare-fun call!14650 () ListLongMap!1653)

(declare-fun c!24624 () Bool)

(declare-fun bm!14645 () Bool)

(declare-fun call!14652 () ListLongMap!1653)

(assert (=> bm!14645 (= call!14651 (+!169 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652)) (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!133019 () Bool)

(declare-fun e!86697 () Bool)

(declare-fun e!86691 () Bool)

(assert (=> b!133019 (= e!86697 e!86691)))

(declare-fun res!64032 () Bool)

(declare-fun call!14648 () Bool)

(assert (=> b!133019 (= res!64032 call!14648)))

(assert (=> b!133019 (=> (not res!64032) (not e!86691))))

(declare-fun b!133020 () Bool)

(declare-fun e!86695 () Unit!4141)

(declare-fun lt!69509 () Unit!4141)

(assert (=> b!133020 (= e!86695 lt!69509)))

(declare-fun lt!69495 () ListLongMap!1653)

(assert (=> b!133020 (= lt!69495 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite c!24553 (_values!2847 newMap!16) lt!69268) (mask!7164 newMap!16) (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69510 () (_ BitVec 64))

(assert (=> b!133020 (= lt!69510 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69494 () (_ BitVec 64))

(assert (=> b!133020 (= lt!69494 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69508 () Unit!4141)

(assert (=> b!133020 (= lt!69508 (addStillContains!92 lt!69495 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69494))))

(assert (=> b!133020 (contains!884 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69494)))

(declare-fun lt!69506 () Unit!4141)

(assert (=> b!133020 (= lt!69506 lt!69508)))

(declare-fun lt!69501 () ListLongMap!1653)

(assert (=> b!133020 (= lt!69501 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite c!24553 (_values!2847 newMap!16) lt!69268) (mask!7164 newMap!16) (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69493 () (_ BitVec 64))

(assert (=> b!133020 (= lt!69493 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69503 () (_ BitVec 64))

(assert (=> b!133020 (= lt!69503 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69507 () Unit!4141)

(assert (=> b!133020 (= lt!69507 (addApplyDifferent!92 lt!69501 lt!69493 (minValue!2719 newMap!16) lt!69503))))

(assert (=> b!133020 (= (apply!116 (+!169 lt!69501 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))) lt!69503) (apply!116 lt!69501 lt!69503))))

(declare-fun lt!69500 () Unit!4141)

(assert (=> b!133020 (= lt!69500 lt!69507)))

(declare-fun lt!69513 () ListLongMap!1653)

(assert (=> b!133020 (= lt!69513 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite c!24553 (_values!2847 newMap!16) lt!69268) (mask!7164 newMap!16) (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69502 () (_ BitVec 64))

(assert (=> b!133020 (= lt!69502 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69498 () (_ BitVec 64))

(assert (=> b!133020 (= lt!69498 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69511 () Unit!4141)

(assert (=> b!133020 (= lt!69511 (addApplyDifferent!92 lt!69513 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69498))))

(assert (=> b!133020 (= (apply!116 (+!169 lt!69513 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69498) (apply!116 lt!69513 lt!69498))))

(declare-fun lt!69512 () Unit!4141)

(assert (=> b!133020 (= lt!69512 lt!69511)))

(declare-fun lt!69499 () ListLongMap!1653)

(assert (=> b!133020 (= lt!69499 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite c!24553 (_values!2847 newMap!16) lt!69268) (mask!7164 newMap!16) (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69497 () (_ BitVec 64))

(assert (=> b!133020 (= lt!69497 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69505 () (_ BitVec 64))

(assert (=> b!133020 (= lt!69505 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133020 (= lt!69509 (addApplyDifferent!92 lt!69499 lt!69497 (minValue!2719 newMap!16) lt!69505))))

(assert (=> b!133020 (= (apply!116 (+!169 lt!69499 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))) lt!69505) (apply!116 lt!69499 lt!69505))))

(declare-fun b!133021 () Bool)

(declare-fun lt!69504 () ListLongMap!1653)

(assert (=> b!133021 (= e!86691 (= (apply!116 lt!69504 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 newMap!16)))))

(declare-fun b!133022 () Bool)

(declare-fun e!86689 () Bool)

(assert (=> b!133022 (= e!86689 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14646 () Bool)

(assert (=> bm!14646 (= call!14650 call!14649)))

(declare-fun bm!14647 () Bool)

(assert (=> bm!14647 (= call!14648 (contains!884 lt!69504 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133023 () Bool)

(declare-fun e!86690 () Bool)

(assert (=> b!133023 (= e!86690 e!86697)))

(declare-fun c!24625 () Bool)

(assert (=> b!133023 (= c!24625 (not (= (bvand (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun e!86699 () Bool)

(declare-fun b!133024 () Bool)

(assert (=> b!133024 (= e!86699 (= (apply!116 lt!69504 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))

(declare-fun b!133026 () Bool)

(declare-fun e!86688 () ListLongMap!1653)

(assert (=> b!133026 (= e!86688 call!14652)))

(declare-fun bm!14648 () Bool)

(declare-fun call!14654 () ListLongMap!1653)

(assert (=> bm!14648 (= call!14654 call!14651)))

(declare-fun bm!14649 () Bool)

(declare-fun call!14653 () Bool)

(assert (=> bm!14649 (= call!14653 (contains!884 lt!69504 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133027 () Bool)

(declare-fun c!24622 () Bool)

(assert (=> b!133027 (= c!24622 (and (not (= (bvand (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86694 () ListLongMap!1653)

(assert (=> b!133027 (= e!86694 e!86688)))

(declare-fun bm!14650 () Bool)

(assert (=> bm!14650 (= call!14652 call!14650)))

(declare-fun e!86700 () Bool)

(declare-fun b!133028 () Bool)

(assert (=> b!133028 (= e!86700 (= (apply!116 lt!69504 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133028 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (ite c!24553 (_values!2847 newMap!16) lt!69268))))))

(assert (=> b!133028 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133029 () Bool)

(declare-fun e!86693 () ListLongMap!1653)

(assert (=> b!133029 (= e!86693 e!86694)))

(assert (=> b!133029 (= c!24626 (and (not (= (bvand (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133030 () Bool)

(declare-fun e!86696 () Bool)

(assert (=> b!133030 (= e!86696 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133031 () Bool)

(assert (=> b!133031 (= e!86693 (+!169 call!14651 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun b!133032 () Bool)

(declare-fun e!86692 () Bool)

(assert (=> b!133032 (= e!86692 e!86700)))

(declare-fun res!64033 () Bool)

(assert (=> b!133032 (=> (not res!64033) (not e!86700))))

(assert (=> b!133032 (= res!64033 (contains!884 lt!69504 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133032 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun bm!14651 () Bool)

(assert (=> bm!14651 (= call!14649 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite c!24553 (_values!2847 newMap!16) lt!69268) (mask!7164 newMap!16) (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!133033 () Bool)

(assert (=> b!133033 (= e!86697 (not call!14648))))

(declare-fun b!133034 () Bool)

(assert (=> b!133034 (= e!86688 call!14654)))

(declare-fun b!133035 () Bool)

(declare-fun Unit!4150 () Unit!4141)

(assert (=> b!133035 (= e!86695 Unit!4150)))

(declare-fun b!133036 () Bool)

(declare-fun e!86698 () Bool)

(assert (=> b!133036 (= e!86698 e!86699)))

(declare-fun res!64035 () Bool)

(assert (=> b!133036 (= res!64035 call!14653)))

(assert (=> b!133036 (=> (not res!64035) (not e!86699))))

(declare-fun b!133037 () Bool)

(declare-fun res!64029 () Bool)

(assert (=> b!133037 (=> (not res!64029) (not e!86690))))

(assert (=> b!133037 (= res!64029 e!86692)))

(declare-fun res!64034 () Bool)

(assert (=> b!133037 (=> res!64034 e!86692)))

(assert (=> b!133037 (= res!64034 (not e!86696))))

(declare-fun res!64027 () Bool)

(assert (=> b!133037 (=> (not res!64027) (not e!86696))))

(assert (=> b!133037 (= res!64027 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133038 () Bool)

(declare-fun res!64030 () Bool)

(assert (=> b!133038 (=> (not res!64030) (not e!86690))))

(assert (=> b!133038 (= res!64030 e!86698)))

(declare-fun c!24623 () Bool)

(assert (=> b!133038 (= c!24623 (not (= (bvand (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133039 () Bool)

(assert (=> b!133039 (= e!86694 call!14654)))

(declare-fun b!133025 () Bool)

(assert (=> b!133025 (= e!86698 (not call!14653))))

(declare-fun d!40469 () Bool)

(assert (=> d!40469 e!86690))

(declare-fun res!64031 () Bool)

(assert (=> d!40469 (=> (not res!64031) (not e!86690))))

(assert (=> d!40469 (= res!64031 (or (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))))

(declare-fun lt!69492 () ListLongMap!1653)

(assert (=> d!40469 (= lt!69504 lt!69492)))

(declare-fun lt!69496 () Unit!4141)

(assert (=> d!40469 (= lt!69496 e!86695)))

(declare-fun c!24621 () Bool)

(assert (=> d!40469 (= c!24621 e!86689)))

(declare-fun res!64028 () Bool)

(assert (=> d!40469 (=> (not res!64028) (not e!86689))))

(assert (=> d!40469 (= res!64028 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40469 (= lt!69492 e!86693)))

(assert (=> d!40469 (= c!24624 (and (not (= (bvand (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40469 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40469 (= (getCurrentListMap!518 (_keys!4613 newMap!16) (ite c!24553 (_values!2847 newMap!16) lt!69268) (mask!7164 newMap!16) (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69504)))

(assert (= (and d!40469 c!24624) b!133031))

(assert (= (and d!40469 (not c!24624)) b!133029))

(assert (= (and b!133029 c!24626) b!133039))

(assert (= (and b!133029 (not c!24626)) b!133027))

(assert (= (and b!133027 c!24622) b!133034))

(assert (= (and b!133027 (not c!24622)) b!133026))

(assert (= (or b!133034 b!133026) bm!14650))

(assert (= (or b!133039 bm!14650) bm!14646))

(assert (= (or b!133039 b!133034) bm!14648))

(assert (= (or b!133031 bm!14646) bm!14651))

(assert (= (or b!133031 bm!14648) bm!14645))

(assert (= (and d!40469 res!64028) b!133022))

(assert (= (and d!40469 c!24621) b!133020))

(assert (= (and d!40469 (not c!24621)) b!133035))

(assert (= (and d!40469 res!64031) b!133037))

(assert (= (and b!133037 res!64027) b!133030))

(assert (= (and b!133037 (not res!64034)) b!133032))

(assert (= (and b!133032 res!64033) b!133028))

(assert (= (and b!133037 res!64029) b!133038))

(assert (= (and b!133038 c!24623) b!133036))

(assert (= (and b!133038 (not c!24623)) b!133025))

(assert (= (and b!133036 res!64035) b!133024))

(assert (= (or b!133036 b!133025) bm!14649))

(assert (= (and b!133038 res!64030) b!133023))

(assert (= (and b!133023 c!24625) b!133019))

(assert (= (and b!133023 (not c!24625)) b!133033))

(assert (= (and b!133019 res!64032) b!133021))

(assert (= (or b!133019 b!133033) bm!14647))

(declare-fun b_lambda!5929 () Bool)

(assert (=> (not b_lambda!5929) (not b!133028)))

(declare-fun tb!2417 () Bool)

(declare-fun t!6147 () Bool)

(assert (=> (and b!132503 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16)) t!6147) tb!2417))

(declare-fun result!3993 () Bool)

(assert (=> tb!2417 (= result!3993 tp_is_empty!2875)))

(assert (=> b!133028 t!6147))

(declare-fun b_and!8245 () Bool)

(assert (= b_and!8241 (and (=> t!6147 result!3993) b_and!8245)))

(declare-fun t!6149 () Bool)

(declare-fun tb!2419 () Bool)

(assert (=> (and b!132502 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 newMap!16)) t!6149) tb!2419))

(declare-fun result!3995 () Bool)

(assert (= result!3995 result!3993))

(assert (=> b!133028 t!6149))

(declare-fun b_and!8247 () Bool)

(assert (= b_and!8243 (and (=> t!6149 result!3995) b_and!8247)))

(assert (=> d!40469 m!156651))

(assert (=> b!133030 m!156679))

(assert (=> b!133030 m!156679))

(assert (=> b!133030 m!156689))

(declare-fun m!156775 () Bool)

(assert (=> b!133020 m!156775))

(declare-fun m!156777 () Bool)

(assert (=> b!133020 m!156777))

(declare-fun m!156779 () Bool)

(assert (=> b!133020 m!156779))

(declare-fun m!156781 () Bool)

(assert (=> b!133020 m!156781))

(declare-fun m!156783 () Bool)

(assert (=> b!133020 m!156783))

(assert (=> b!133020 m!156679))

(declare-fun m!156785 () Bool)

(assert (=> b!133020 m!156785))

(declare-fun m!156787 () Bool)

(assert (=> b!133020 m!156787))

(declare-fun m!156789 () Bool)

(assert (=> b!133020 m!156789))

(declare-fun m!156791 () Bool)

(assert (=> b!133020 m!156791))

(declare-fun m!156793 () Bool)

(assert (=> b!133020 m!156793))

(declare-fun m!156795 () Bool)

(assert (=> b!133020 m!156795))

(assert (=> b!133020 m!156789))

(assert (=> b!133020 m!156783))

(declare-fun m!156797 () Bool)

(assert (=> b!133020 m!156797))

(declare-fun m!156799 () Bool)

(assert (=> b!133020 m!156799))

(declare-fun m!156801 () Bool)

(assert (=> b!133020 m!156801))

(assert (=> b!133020 m!156801))

(declare-fun m!156803 () Bool)

(assert (=> b!133020 m!156803))

(assert (=> b!133020 m!156781))

(declare-fun m!156805 () Bool)

(assert (=> b!133020 m!156805))

(declare-fun m!156807 () Bool)

(assert (=> b!133028 m!156807))

(declare-fun m!156809 () Bool)

(assert (=> b!133028 m!156809))

(declare-fun m!156811 () Bool)

(assert (=> b!133028 m!156811))

(assert (=> b!133028 m!156809))

(assert (=> b!133028 m!156807))

(assert (=> b!133028 m!156679))

(assert (=> b!133028 m!156679))

(declare-fun m!156813 () Bool)

(assert (=> b!133028 m!156813))

(declare-fun m!156815 () Bool)

(assert (=> bm!14647 m!156815))

(declare-fun m!156817 () Bool)

(assert (=> bm!14645 m!156817))

(assert (=> b!133022 m!156679))

(assert (=> b!133022 m!156679))

(assert (=> b!133022 m!156689))

(declare-fun m!156819 () Bool)

(assert (=> b!133024 m!156819))

(assert (=> b!133032 m!156679))

(assert (=> b!133032 m!156679))

(declare-fun m!156821 () Bool)

(assert (=> b!133032 m!156821))

(assert (=> bm!14651 m!156795))

(declare-fun m!156823 () Bool)

(assert (=> bm!14649 m!156823))

(declare-fun m!156825 () Bool)

(assert (=> b!133031 m!156825))

(declare-fun m!156827 () Bool)

(assert (=> b!133021 m!156827))

(assert (=> bm!14585 d!40469))

(declare-fun d!40471 () Bool)

(declare-fun lt!69516 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!133 (List!1693) (InoxSet (_ BitVec 64)))

(assert (=> d!40471 (= lt!69516 (select (content!133 Nil!1690) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!86706 () Bool)

(assert (=> d!40471 (= lt!69516 e!86706)))

(declare-fun res!64040 () Bool)

(assert (=> d!40471 (=> (not res!64040) (not e!86706))))

(assert (=> d!40471 (= res!64040 ((_ is Cons!1689) Nil!1690))))

(assert (=> d!40471 (= (contains!885 Nil!1690 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)) lt!69516)))

(declare-fun b!133044 () Bool)

(declare-fun e!86705 () Bool)

(assert (=> b!133044 (= e!86706 e!86705)))

(declare-fun res!64041 () Bool)

(assert (=> b!133044 (=> res!64041 e!86705)))

(assert (=> b!133044 (= res!64041 (= (h!2294 Nil!1690) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!133045 () Bool)

(assert (=> b!133045 (= e!86705 (contains!885 (t!6136 Nil!1690) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!40471 res!64040) b!133044))

(assert (= (and b!133044 (not res!64041)) b!133045))

(declare-fun m!156829 () Bool)

(assert (=> d!40471 m!156829))

(assert (=> d!40471 m!156495))

(declare-fun m!156831 () Bool)

(assert (=> d!40471 m!156831))

(assert (=> b!133045 m!156495))

(declare-fun m!156833 () Bool)

(assert (=> b!133045 m!156833))

(assert (=> b!132646 d!40471))

(declare-fun d!40473 () Bool)

(declare-fun get!1492 (Option!179) V!3481)

(assert (=> d!40473 (= (apply!116 lt!69344 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5507 () Bool)

(assert (= bs!5507 d!40473))

(declare-fun m!156835 () Bool)

(assert (=> bs!5507 m!156835))

(assert (=> bs!5507 m!156835))

(declare-fun m!156837 () Bool)

(assert (=> bs!5507 m!156837))

(assert (=> b!132848 d!40473))

(declare-fun d!40475 () Bool)

(assert (=> d!40475 (= (map!1398 (_2!1294 lt!69280)) (getCurrentListMap!518 (_keys!4613 (_2!1294 lt!69280)) (_values!2847 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280)) (extraKeys!2629 (_2!1294 lt!69280)) (zeroValue!2719 (_2!1294 lt!69280)) (minValue!2719 (_2!1294 lt!69280)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1294 lt!69280))))))

(declare-fun bs!5508 () Bool)

(assert (= bs!5508 d!40475))

(declare-fun m!156839 () Bool)

(assert (=> bs!5508 m!156839))

(assert (=> bm!14587 d!40475))

(declare-fun d!40477 () Bool)

(declare-fun res!64042 () Bool)

(declare-fun e!86707 () Bool)

(assert (=> d!40477 (=> (not res!64042) (not e!86707))))

(assert (=> d!40477 (= res!64042 (simpleValid!92 (_2!1294 lt!69280)))))

(assert (=> d!40477 (= (valid!542 (_2!1294 lt!69280)) e!86707)))

(declare-fun b!133046 () Bool)

(declare-fun res!64043 () Bool)

(assert (=> b!133046 (=> (not res!64043) (not e!86707))))

(assert (=> b!133046 (= res!64043 (= (arrayCountValidKeys!0 (_keys!4613 (_2!1294 lt!69280)) #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))) (_size!597 (_2!1294 lt!69280))))))

(declare-fun b!133047 () Bool)

(declare-fun res!64044 () Bool)

(assert (=> b!133047 (=> (not res!64044) (not e!86707))))

(assert (=> b!133047 (= res!64044 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4613 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280))))))

(declare-fun b!133048 () Bool)

(assert (=> b!133048 (= e!86707 (arrayNoDuplicates!0 (_keys!4613 (_2!1294 lt!69280)) #b00000000000000000000000000000000 Nil!1690))))

(assert (= (and d!40477 res!64042) b!133046))

(assert (= (and b!133046 res!64043) b!133047))

(assert (= (and b!133047 res!64044) b!133048))

(declare-fun m!156841 () Bool)

(assert (=> d!40477 m!156841))

(declare-fun m!156843 () Bool)

(assert (=> b!133046 m!156843))

(declare-fun m!156845 () Bool)

(assert (=> b!133047 m!156845))

(declare-fun m!156847 () Bool)

(assert (=> b!133048 m!156847))

(assert (=> d!40439 d!40477))

(assert (=> d!40439 d!40447))

(declare-fun c!24632 () Bool)

(declare-fun call!14659 () ListLongMap!1653)

(declare-fun bm!14652 () Bool)

(declare-fun call!14656 () ListLongMap!1653)

(declare-fun call!14657 () ListLongMap!1653)

(declare-fun call!14658 () ListLongMap!1653)

(declare-fun c!24630 () Bool)

(assert (=> bm!14652 (= call!14658 (+!169 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659)) (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!133049 () Bool)

(declare-fun e!86717 () Bool)

(declare-fun e!86711 () Bool)

(assert (=> b!133049 (= e!86717 e!86711)))

(declare-fun res!64050 () Bool)

(declare-fun call!14655 () Bool)

(assert (=> b!133049 (= res!64050 call!14655)))

(assert (=> b!133049 (=> (not res!64050) (not e!86711))))

(declare-fun b!133050 () Bool)

(declare-fun e!86715 () Unit!4141)

(declare-fun lt!69534 () Unit!4141)

(assert (=> b!133050 (= e!86715 lt!69534)))

(declare-fun lt!69520 () ListLongMap!1653)

(assert (=> b!133050 (= lt!69520 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69535 () (_ BitVec 64))

(assert (=> b!133050 (= lt!69535 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69519 () (_ BitVec 64))

(assert (=> b!133050 (= lt!69519 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69533 () Unit!4141)

(assert (=> b!133050 (= lt!69533 (addStillContains!92 lt!69520 lt!69535 (zeroValue!2719 newMap!16) lt!69519))))

(assert (=> b!133050 (contains!884 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))) lt!69519)))

(declare-fun lt!69531 () Unit!4141)

(assert (=> b!133050 (= lt!69531 lt!69533)))

(declare-fun lt!69526 () ListLongMap!1653)

(assert (=> b!133050 (= lt!69526 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69518 () (_ BitVec 64))

(assert (=> b!133050 (= lt!69518 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69528 () (_ BitVec 64))

(assert (=> b!133050 (= lt!69528 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69532 () Unit!4141)

(assert (=> b!133050 (= lt!69532 (addApplyDifferent!92 lt!69526 lt!69518 (minValue!2719 newMap!16) lt!69528))))

(assert (=> b!133050 (= (apply!116 (+!169 lt!69526 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))) lt!69528) (apply!116 lt!69526 lt!69528))))

(declare-fun lt!69525 () Unit!4141)

(assert (=> b!133050 (= lt!69525 lt!69532)))

(declare-fun lt!69538 () ListLongMap!1653)

(assert (=> b!133050 (= lt!69538 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69527 () (_ BitVec 64))

(assert (=> b!133050 (= lt!69527 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69523 () (_ BitVec 64))

(assert (=> b!133050 (= lt!69523 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69536 () Unit!4141)

(assert (=> b!133050 (= lt!69536 (addApplyDifferent!92 lt!69538 lt!69527 (zeroValue!2719 newMap!16) lt!69523))))

(assert (=> b!133050 (= (apply!116 (+!169 lt!69538 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))) lt!69523) (apply!116 lt!69538 lt!69523))))

(declare-fun lt!69537 () Unit!4141)

(assert (=> b!133050 (= lt!69537 lt!69536)))

(declare-fun lt!69524 () ListLongMap!1653)

(assert (=> b!133050 (= lt!69524 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69522 () (_ BitVec 64))

(assert (=> b!133050 (= lt!69522 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69530 () (_ BitVec 64))

(assert (=> b!133050 (= lt!69530 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133050 (= lt!69534 (addApplyDifferent!92 lt!69524 lt!69522 (minValue!2719 newMap!16) lt!69530))))

(assert (=> b!133050 (= (apply!116 (+!169 lt!69524 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))) lt!69530) (apply!116 lt!69524 lt!69530))))

(declare-fun b!133051 () Bool)

(declare-fun lt!69529 () ListLongMap!1653)

(assert (=> b!133051 (= e!86711 (= (apply!116 lt!69529 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 newMap!16)))))

(declare-fun b!133052 () Bool)

(declare-fun e!86709 () Bool)

(assert (=> b!133052 (= e!86709 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14653 () Bool)

(assert (=> bm!14653 (= call!14657 call!14656)))

(declare-fun bm!14654 () Bool)

(assert (=> bm!14654 (= call!14655 (contains!884 lt!69529 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133053 () Bool)

(declare-fun e!86710 () Bool)

(assert (=> b!133053 (= e!86710 e!86717)))

(declare-fun c!24631 () Bool)

(assert (=> b!133053 (= c!24631 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133054 () Bool)

(declare-fun e!86719 () Bool)

(assert (=> b!133054 (= e!86719 (= (apply!116 lt!69529 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 newMap!16)))))

(declare-fun b!133056 () Bool)

(declare-fun e!86708 () ListLongMap!1653)

(assert (=> b!133056 (= e!86708 call!14659)))

(declare-fun bm!14655 () Bool)

(declare-fun call!14661 () ListLongMap!1653)

(assert (=> bm!14655 (= call!14661 call!14658)))

(declare-fun bm!14656 () Bool)

(declare-fun call!14660 () Bool)

(assert (=> bm!14656 (= call!14660 (contains!884 lt!69529 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133057 () Bool)

(declare-fun c!24628 () Bool)

(assert (=> b!133057 (= c!24628 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86714 () ListLongMap!1653)

(assert (=> b!133057 (= e!86714 e!86708)))

(declare-fun bm!14657 () Bool)

(assert (=> bm!14657 (= call!14659 call!14657)))

(declare-fun b!133058 () Bool)

(declare-fun e!86720 () Bool)

(assert (=> b!133058 (= e!86720 (= (apply!116 lt!69529 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133058 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (_values!2847 newMap!16))))))

(assert (=> b!133058 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133059 () Bool)

(declare-fun e!86713 () ListLongMap!1653)

(assert (=> b!133059 (= e!86713 e!86714)))

(assert (=> b!133059 (= c!24632 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133060 () Bool)

(declare-fun e!86716 () Bool)

(assert (=> b!133060 (= e!86716 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133061 () Bool)

(assert (=> b!133061 (= e!86713 (+!169 call!14658 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun b!133062 () Bool)

(declare-fun e!86712 () Bool)

(assert (=> b!133062 (= e!86712 e!86720)))

(declare-fun res!64051 () Bool)

(assert (=> b!133062 (=> (not res!64051) (not e!86720))))

(assert (=> b!133062 (= res!64051 (contains!884 lt!69529 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133062 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun bm!14658 () Bool)

(assert (=> bm!14658 (= call!14656 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!133063 () Bool)

(assert (=> b!133063 (= e!86717 (not call!14655))))

(declare-fun b!133064 () Bool)

(assert (=> b!133064 (= e!86708 call!14661)))

(declare-fun b!133065 () Bool)

(declare-fun Unit!4151 () Unit!4141)

(assert (=> b!133065 (= e!86715 Unit!4151)))

(declare-fun b!133066 () Bool)

(declare-fun e!86718 () Bool)

(assert (=> b!133066 (= e!86718 e!86719)))

(declare-fun res!64053 () Bool)

(assert (=> b!133066 (= res!64053 call!14660)))

(assert (=> b!133066 (=> (not res!64053) (not e!86719))))

(declare-fun b!133067 () Bool)

(declare-fun res!64047 () Bool)

(assert (=> b!133067 (=> (not res!64047) (not e!86710))))

(assert (=> b!133067 (= res!64047 e!86712)))

(declare-fun res!64052 () Bool)

(assert (=> b!133067 (=> res!64052 e!86712)))

(assert (=> b!133067 (= res!64052 (not e!86716))))

(declare-fun res!64045 () Bool)

(assert (=> b!133067 (=> (not res!64045) (not e!86716))))

(assert (=> b!133067 (= res!64045 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133068 () Bool)

(declare-fun res!64048 () Bool)

(assert (=> b!133068 (=> (not res!64048) (not e!86710))))

(assert (=> b!133068 (= res!64048 e!86718)))

(declare-fun c!24629 () Bool)

(assert (=> b!133068 (= c!24629 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133069 () Bool)

(assert (=> b!133069 (= e!86714 call!14661)))

(declare-fun b!133055 () Bool)

(assert (=> b!133055 (= e!86718 (not call!14660))))

(declare-fun d!40479 () Bool)

(assert (=> d!40479 e!86710))

(declare-fun res!64049 () Bool)

(assert (=> d!40479 (=> (not res!64049) (not e!86710))))

(assert (=> d!40479 (= res!64049 (or (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))))

(declare-fun lt!69517 () ListLongMap!1653)

(assert (=> d!40479 (= lt!69529 lt!69517)))

(declare-fun lt!69521 () Unit!4141)

(assert (=> d!40479 (= lt!69521 e!86715)))

(declare-fun c!24627 () Bool)

(assert (=> d!40479 (= c!24627 e!86709)))

(declare-fun res!64046 () Bool)

(assert (=> d!40479 (=> (not res!64046) (not e!86709))))

(assert (=> d!40479 (= res!64046 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40479 (= lt!69517 e!86713)))

(assert (=> d!40479 (= c!24630 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40479 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40479 (= (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69529)))

(assert (= (and d!40479 c!24630) b!133061))

(assert (= (and d!40479 (not c!24630)) b!133059))

(assert (= (and b!133059 c!24632) b!133069))

(assert (= (and b!133059 (not c!24632)) b!133057))

(assert (= (and b!133057 c!24628) b!133064))

(assert (= (and b!133057 (not c!24628)) b!133056))

(assert (= (or b!133064 b!133056) bm!14657))

(assert (= (or b!133069 bm!14657) bm!14653))

(assert (= (or b!133069 b!133064) bm!14655))

(assert (= (or b!133061 bm!14653) bm!14658))

(assert (= (or b!133061 bm!14655) bm!14652))

(assert (= (and d!40479 res!64046) b!133052))

(assert (= (and d!40479 c!24627) b!133050))

(assert (= (and d!40479 (not c!24627)) b!133065))

(assert (= (and d!40479 res!64049) b!133067))

(assert (= (and b!133067 res!64045) b!133060))

(assert (= (and b!133067 (not res!64052)) b!133062))

(assert (= (and b!133062 res!64051) b!133058))

(assert (= (and b!133067 res!64047) b!133068))

(assert (= (and b!133068 c!24629) b!133066))

(assert (= (and b!133068 (not c!24629)) b!133055))

(assert (= (and b!133066 res!64053) b!133054))

(assert (= (or b!133066 b!133055) bm!14656))

(assert (= (and b!133068 res!64048) b!133053))

(assert (= (and b!133053 c!24631) b!133049))

(assert (= (and b!133053 (not c!24631)) b!133063))

(assert (= (and b!133049 res!64050) b!133051))

(assert (= (or b!133049 b!133063) bm!14654))

(declare-fun b_lambda!5931 () Bool)

(assert (=> (not b_lambda!5931) (not b!133058)))

(assert (=> b!133058 t!6147))

(declare-fun b_and!8249 () Bool)

(assert (= b_and!8245 (and (=> t!6147 result!3993) b_and!8249)))

(assert (=> b!133058 t!6149))

(declare-fun b_and!8251 () Bool)

(assert (= b_and!8247 (and (=> t!6149 result!3995) b_and!8251)))

(assert (=> d!40479 m!156651))

(assert (=> b!133060 m!156679))

(assert (=> b!133060 m!156679))

(assert (=> b!133060 m!156689))

(declare-fun m!156849 () Bool)

(assert (=> b!133050 m!156849))

(declare-fun m!156851 () Bool)

(assert (=> b!133050 m!156851))

(declare-fun m!156853 () Bool)

(assert (=> b!133050 m!156853))

(declare-fun m!156855 () Bool)

(assert (=> b!133050 m!156855))

(declare-fun m!156857 () Bool)

(assert (=> b!133050 m!156857))

(assert (=> b!133050 m!156679))

(declare-fun m!156859 () Bool)

(assert (=> b!133050 m!156859))

(declare-fun m!156861 () Bool)

(assert (=> b!133050 m!156861))

(declare-fun m!156863 () Bool)

(assert (=> b!133050 m!156863))

(declare-fun m!156865 () Bool)

(assert (=> b!133050 m!156865))

(declare-fun m!156867 () Bool)

(assert (=> b!133050 m!156867))

(declare-fun m!156869 () Bool)

(assert (=> b!133050 m!156869))

(assert (=> b!133050 m!156863))

(assert (=> b!133050 m!156857))

(declare-fun m!156871 () Bool)

(assert (=> b!133050 m!156871))

(declare-fun m!156873 () Bool)

(assert (=> b!133050 m!156873))

(declare-fun m!156875 () Bool)

(assert (=> b!133050 m!156875))

(assert (=> b!133050 m!156875))

(declare-fun m!156877 () Bool)

(assert (=> b!133050 m!156877))

(assert (=> b!133050 m!156855))

(declare-fun m!156879 () Bool)

(assert (=> b!133050 m!156879))

(declare-fun m!156881 () Bool)

(assert (=> b!133058 m!156881))

(assert (=> b!133058 m!156809))

(declare-fun m!156883 () Bool)

(assert (=> b!133058 m!156883))

(assert (=> b!133058 m!156809))

(assert (=> b!133058 m!156881))

(assert (=> b!133058 m!156679))

(assert (=> b!133058 m!156679))

(declare-fun m!156885 () Bool)

(assert (=> b!133058 m!156885))

(declare-fun m!156887 () Bool)

(assert (=> bm!14654 m!156887))

(declare-fun m!156889 () Bool)

(assert (=> bm!14652 m!156889))

(assert (=> b!133052 m!156679))

(assert (=> b!133052 m!156679))

(assert (=> b!133052 m!156689))

(declare-fun m!156891 () Bool)

(assert (=> b!133054 m!156891))

(assert (=> b!133062 m!156679))

(assert (=> b!133062 m!156679))

(declare-fun m!156893 () Bool)

(assert (=> b!133062 m!156893))

(assert (=> bm!14658 m!156869))

(declare-fun m!156895 () Bool)

(assert (=> bm!14656 m!156895))

(declare-fun m!156897 () Bool)

(assert (=> b!133061 m!156897))

(declare-fun m!156899 () Bool)

(assert (=> b!133051 m!156899))

(assert (=> b!132779 d!40479))

(declare-fun d!40481 () Bool)

(declare-fun e!86722 () Bool)

(assert (=> d!40481 e!86722))

(declare-fun res!64054 () Bool)

(assert (=> d!40481 (=> res!64054 e!86722)))

(declare-fun lt!69539 () Bool)

(assert (=> d!40481 (= res!64054 (not lt!69539))))

(declare-fun lt!69540 () Bool)

(assert (=> d!40481 (= lt!69539 lt!69540)))

(declare-fun lt!69541 () Unit!4141)

(declare-fun e!86721 () Unit!4141)

(assert (=> d!40481 (= lt!69541 e!86721)))

(declare-fun c!24633 () Bool)

(assert (=> d!40481 (= c!24633 lt!69540)))

(assert (=> d!40481 (= lt!69540 (containsKey!176 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40481 (= (contains!884 call!14589 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) lt!69539)))

(declare-fun b!133070 () Bool)

(declare-fun lt!69542 () Unit!4141)

(assert (=> b!133070 (= e!86721 lt!69542)))

(assert (=> b!133070 (= lt!69542 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!133070 (isDefined!125 (getValueByKey!173 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!133071 () Bool)

(declare-fun Unit!4152 () Unit!4141)

(assert (=> b!133071 (= e!86721 Unit!4152)))

(declare-fun b!133072 () Bool)

(assert (=> b!133072 (= e!86722 (isDefined!125 (getValueByKey!173 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (= (and d!40481 c!24633) b!133070))

(assert (= (and d!40481 (not c!24633)) b!133071))

(assert (= (and d!40481 (not res!64054)) b!133072))

(assert (=> d!40481 m!156395))

(declare-fun m!156901 () Bool)

(assert (=> d!40481 m!156901))

(assert (=> b!133070 m!156395))

(declare-fun m!156903 () Bool)

(assert (=> b!133070 m!156903))

(assert (=> b!133070 m!156395))

(declare-fun m!156905 () Bool)

(assert (=> b!133070 m!156905))

(assert (=> b!133070 m!156905))

(declare-fun m!156907 () Bool)

(assert (=> b!133070 m!156907))

(assert (=> b!133072 m!156395))

(assert (=> b!133072 m!156905))

(assert (=> b!133072 m!156905))

(assert (=> b!133072 m!156907))

(assert (=> b!132794 d!40481))

(declare-fun d!40483 () Bool)

(assert (=> d!40483 (= (apply!116 lt!69344 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1492 (getValueByKey!173 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5509 () Bool)

(assert (= bs!5509 d!40483))

(assert (=> bs!5509 m!156581))

(declare-fun m!156909 () Bool)

(assert (=> bs!5509 m!156909))

(assert (=> bs!5509 m!156909))

(declare-fun m!156911 () Bool)

(assert (=> bs!5509 m!156911))

(assert (=> b!132855 d!40483))

(declare-fun d!40485 () Bool)

(declare-fun c!24634 () Bool)

(assert (=> d!40485 (= c!24634 ((_ is ValueCellFull!1094) (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!86723 () V!3481)

(assert (=> d!40485 (= (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!86723)))

(declare-fun b!133073 () Bool)

(assert (=> b!133073 (= e!86723 (get!1490 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133074 () Bool)

(assert (=> b!133074 (= e!86723 (get!1491 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40485 c!24634) b!133073))

(assert (= (and d!40485 (not c!24634)) b!133074))

(assert (=> b!133073 m!156617))

(assert (=> b!133073 m!156391))

(declare-fun m!156913 () Bool)

(assert (=> b!133073 m!156913))

(assert (=> b!133074 m!156617))

(assert (=> b!133074 m!156391))

(declare-fun m!156915 () Bool)

(assert (=> b!133074 m!156915))

(assert (=> b!132855 d!40485))

(declare-fun d!40487 () Bool)

(declare-fun e!86724 () Bool)

(assert (=> d!40487 e!86724))

(declare-fun res!64056 () Bool)

(assert (=> d!40487 (=> (not res!64056) (not e!86724))))

(declare-fun lt!69545 () ListLongMap!1653)

(assert (=> d!40487 (= res!64056 (contains!884 lt!69545 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69546 () List!1694)

(assert (=> d!40487 (= lt!69545 (ListLongMap!1654 lt!69546))))

(declare-fun lt!69543 () Unit!4141)

(declare-fun lt!69544 () Unit!4141)

(assert (=> d!40487 (= lt!69543 lt!69544)))

(assert (=> d!40487 (= (getValueByKey!173 lt!69546 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40487 (= lt!69544 (lemmaContainsTupThenGetReturnValue!88 lt!69546 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40487 (= lt!69546 (insertStrictlySorted!91 (toList!842 call!14604) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40487 (= (+!169 call!14604 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69545)))

(declare-fun b!133075 () Bool)

(declare-fun res!64055 () Bool)

(assert (=> b!133075 (=> (not res!64055) (not e!86724))))

(assert (=> b!133075 (= res!64055 (= (getValueByKey!173 (toList!842 lt!69545) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133076 () Bool)

(assert (=> b!133076 (= e!86724 (contains!886 (toList!842 lt!69545) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40487 res!64056) b!133075))

(assert (= (and b!133075 res!64055) b!133076))

(declare-fun m!156917 () Bool)

(assert (=> d!40487 m!156917))

(declare-fun m!156919 () Bool)

(assert (=> d!40487 m!156919))

(declare-fun m!156921 () Bool)

(assert (=> d!40487 m!156921))

(declare-fun m!156923 () Bool)

(assert (=> d!40487 m!156923))

(declare-fun m!156925 () Bool)

(assert (=> b!133075 m!156925))

(declare-fun m!156927 () Bool)

(assert (=> b!133076 m!156927))

(assert (=> b!132781 d!40487))

(declare-fun d!40489 () Bool)

(declare-fun e!86726 () Bool)

(assert (=> d!40489 e!86726))

(declare-fun res!64057 () Bool)

(assert (=> d!40489 (=> res!64057 e!86726)))

(declare-fun lt!69547 () Bool)

(assert (=> d!40489 (= res!64057 (not lt!69547))))

(declare-fun lt!69548 () Bool)

(assert (=> d!40489 (= lt!69547 lt!69548)))

(declare-fun lt!69549 () Unit!4141)

(declare-fun e!86725 () Unit!4141)

(assert (=> d!40489 (= lt!69549 e!86725)))

(declare-fun c!24635 () Bool)

(assert (=> d!40489 (= c!24635 lt!69548)))

(assert (=> d!40489 (= lt!69548 (containsKey!176 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!40489 (= (contains!884 lt!69344 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!69547)))

(declare-fun b!133077 () Bool)

(declare-fun lt!69550 () Unit!4141)

(assert (=> b!133077 (= e!86725 lt!69550)))

(assert (=> b!133077 (= lt!69550 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!133077 (isDefined!125 (getValueByKey!173 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!133078 () Bool)

(declare-fun Unit!4153 () Unit!4141)

(assert (=> b!133078 (= e!86725 Unit!4153)))

(declare-fun b!133079 () Bool)

(assert (=> b!133079 (= e!86726 (isDefined!125 (getValueByKey!173 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!40489 c!24635) b!133077))

(assert (= (and d!40489 (not c!24635)) b!133078))

(assert (= (and d!40489 (not res!64057)) b!133079))

(assert (=> d!40489 m!156581))

(declare-fun m!156929 () Bool)

(assert (=> d!40489 m!156929))

(assert (=> b!133077 m!156581))

(declare-fun m!156931 () Bool)

(assert (=> b!133077 m!156931))

(assert (=> b!133077 m!156581))

(assert (=> b!133077 m!156909))

(assert (=> b!133077 m!156909))

(declare-fun m!156933 () Bool)

(assert (=> b!133077 m!156933))

(assert (=> b!133079 m!156581))

(assert (=> b!133079 m!156909))

(assert (=> b!133079 m!156909))

(assert (=> b!133079 m!156933))

(assert (=> b!132859 d!40489))

(declare-fun d!40491 () Bool)

(declare-fun res!64062 () Bool)

(declare-fun e!86731 () Bool)

(assert (=> d!40491 (=> res!64062 e!86731)))

(assert (=> d!40491 (= res!64062 (and ((_ is Cons!1690) (toList!842 lt!69167)) (= (_1!1293 (h!2295 (toList!842 lt!69167))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40491 (= (containsKey!176 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!86731)))

(declare-fun b!133084 () Bool)

(declare-fun e!86732 () Bool)

(assert (=> b!133084 (= e!86731 e!86732)))

(declare-fun res!64063 () Bool)

(assert (=> b!133084 (=> (not res!64063) (not e!86732))))

(assert (=> b!133084 (= res!64063 (and (or (not ((_ is Cons!1690) (toList!842 lt!69167))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69167))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1690) (toList!842 lt!69167)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69167))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!133085 () Bool)

(assert (=> b!133085 (= e!86732 (containsKey!176 (t!6137 (toList!842 lt!69167)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40491 (not res!64062)) b!133084))

(assert (= (and b!133084 res!64063) b!133085))

(assert (=> b!133085 m!156395))

(declare-fun m!156935 () Bool)

(assert (=> b!133085 m!156935))

(assert (=> d!40437 d!40491))

(declare-fun d!40493 () Bool)

(assert (=> d!40493 (= (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!132857 d!40493))

(declare-fun d!40495 () Bool)

(declare-fun e!86734 () Bool)

(assert (=> d!40495 e!86734))

(declare-fun res!64064 () Bool)

(assert (=> d!40495 (=> res!64064 e!86734)))

(declare-fun lt!69551 () Bool)

(assert (=> d!40495 (= res!64064 (not lt!69551))))

(declare-fun lt!69552 () Bool)

(assert (=> d!40495 (= lt!69551 lt!69552)))

(declare-fun lt!69553 () Unit!4141)

(declare-fun e!86733 () Unit!4141)

(assert (=> d!40495 (= lt!69553 e!86733)))

(declare-fun c!24636 () Bool)

(assert (=> d!40495 (= c!24636 lt!69552)))

(assert (=> d!40495 (= lt!69552 (containsKey!176 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(assert (=> d!40495 (= (contains!884 e!86556 (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))) lt!69551)))

(declare-fun b!133086 () Bool)

(declare-fun lt!69554 () Unit!4141)

(assert (=> b!133086 (= e!86733 lt!69554)))

(assert (=> b!133086 (= lt!69554 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(assert (=> b!133086 (isDefined!125 (getValueByKey!173 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(declare-fun b!133087 () Bool)

(declare-fun Unit!4154 () Unit!4141)

(assert (=> b!133087 (= e!86733 Unit!4154)))

(declare-fun b!133088 () Bool)

(assert (=> b!133088 (= e!86734 (isDefined!125 (getValueByKey!173 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))))

(assert (= (and d!40495 c!24636) b!133086))

(assert (= (and d!40495 (not c!24636)) b!133087))

(assert (= (and d!40495 (not res!64064)) b!133088))

(declare-fun m!156937 () Bool)

(assert (=> d!40495 m!156937))

(declare-fun m!156939 () Bool)

(assert (=> b!133086 m!156939))

(declare-fun m!156941 () Bool)

(assert (=> b!133086 m!156941))

(assert (=> b!133086 m!156941))

(declare-fun m!156943 () Bool)

(assert (=> b!133086 m!156943))

(assert (=> b!133088 m!156941))

(assert (=> b!133088 m!156941))

(assert (=> b!133088 m!156943))

(assert (=> bm!14584 d!40495))

(declare-fun d!40497 () Bool)

(declare-fun e!86737 () Bool)

(assert (=> d!40497 e!86737))

(declare-fun res!64067 () Bool)

(assert (=> d!40497 (=> (not res!64067) (not e!86737))))

(assert (=> d!40497 (= res!64067 (and (bvsge (index!3237 lt!69284) #b00000000000000000000000000000000) (bvslt (index!3237 lt!69284) (size!2521 (_keys!4613 newMap!16)))))))

(declare-fun lt!69557 () Unit!4141)

(declare-fun choose!825 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) Int) Unit!4141)

(assert (=> d!40497 (= lt!69557 (choose!825 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3237 lt!69284) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40497 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40497 (= (lemmaValidKeyInArrayIsInListMap!121 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3237 lt!69284) (defaultEntry!2864 newMap!16)) lt!69557)))

(declare-fun b!133091 () Bool)

(assert (=> b!133091 (= e!86737 (contains!884 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))

(assert (= (and d!40497 res!64067) b!133091))

(declare-fun m!156945 () Bool)

(assert (=> d!40497 m!156945))

(assert (=> d!40497 m!156651))

(declare-fun m!156947 () Bool)

(assert (=> b!133091 m!156947))

(assert (=> b!133091 m!156557))

(assert (=> b!133091 m!156947))

(assert (=> b!133091 m!156557))

(declare-fun m!156949 () Bool)

(assert (=> b!133091 m!156949))

(assert (=> b!132766 d!40497))

(declare-fun d!40499 () Bool)

(declare-fun e!86740 () Bool)

(assert (=> d!40499 e!86740))

(declare-fun res!64070 () Bool)

(assert (=> d!40499 (=> (not res!64070) (not e!86740))))

(assert (=> d!40499 (= res!64070 (and (bvsge (index!3237 lt!69284) #b00000000000000000000000000000000) (bvslt (index!3237 lt!69284) (size!2522 (_values!2847 newMap!16)))))))

(declare-fun lt!69560 () Unit!4141)

(declare-fun choose!826 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) (_ BitVec 64) V!3481 Int) Unit!4141)

(assert (=> d!40499 (= lt!69560 (choose!826 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3237 lt!69284) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40499 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40499 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!61 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3237 lt!69284) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)) lt!69560)))

(declare-fun b!133094 () Bool)

(assert (=> b!133094 (= e!86740 (= (+!169 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!518 (_keys!4613 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))

(assert (= (and d!40499 res!64070) b!133094))

(assert (=> d!40499 m!156395))

(assert (=> d!40499 m!156393))

(declare-fun m!156951 () Bool)

(assert (=> d!40499 m!156951))

(assert (=> d!40499 m!156651))

(assert (=> b!133094 m!156545))

(assert (=> b!133094 m!156545))

(assert (=> b!133094 m!156735))

(assert (=> b!133094 m!156529))

(declare-fun m!156953 () Bool)

(assert (=> b!133094 m!156953))

(assert (=> b!132766 d!40499))

(declare-fun d!40501 () Bool)

(declare-fun e!86742 () Bool)

(assert (=> d!40501 e!86742))

(declare-fun res!64071 () Bool)

(assert (=> d!40501 (=> res!64071 e!86742)))

(declare-fun lt!69561 () Bool)

(assert (=> d!40501 (= res!64071 (not lt!69561))))

(declare-fun lt!69562 () Bool)

(assert (=> d!40501 (= lt!69561 lt!69562)))

(declare-fun lt!69563 () Unit!4141)

(declare-fun e!86741 () Unit!4141)

(assert (=> d!40501 (= lt!69563 e!86741)))

(declare-fun c!24637 () Bool)

(assert (=> d!40501 (= c!24637 lt!69562)))

(assert (=> d!40501 (= lt!69562 (containsKey!176 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40501 (= (contains!884 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) lt!69561)))

(declare-fun b!133095 () Bool)

(declare-fun lt!69564 () Unit!4141)

(assert (=> b!133095 (= e!86741 lt!69564)))

(assert (=> b!133095 (= lt!69564 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!133095 (isDefined!125 (getValueByKey!173 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!133096 () Bool)

(declare-fun Unit!4155 () Unit!4141)

(assert (=> b!133096 (= e!86741 Unit!4155)))

(declare-fun b!133097 () Bool)

(assert (=> b!133097 (= e!86742 (isDefined!125 (getValueByKey!173 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (= (and d!40501 c!24637) b!133095))

(assert (= (and d!40501 (not c!24637)) b!133096))

(assert (= (and d!40501 (not res!64071)) b!133097))

(assert (=> d!40501 m!156395))

(declare-fun m!156955 () Bool)

(assert (=> d!40501 m!156955))

(assert (=> b!133095 m!156395))

(declare-fun m!156957 () Bool)

(assert (=> b!133095 m!156957))

(assert (=> b!133095 m!156395))

(declare-fun m!156959 () Bool)

(assert (=> b!133095 m!156959))

(assert (=> b!133095 m!156959))

(declare-fun m!156961 () Bool)

(assert (=> b!133095 m!156961))

(assert (=> b!133097 m!156395))

(assert (=> b!133097 m!156959))

(assert (=> b!133097 m!156959))

(assert (=> b!133097 m!156961))

(assert (=> b!132766 d!40501))

(assert (=> b!132766 d!40479))

(declare-fun c!24643 () Bool)

(declare-fun call!14664 () ListLongMap!1653)

(declare-fun bm!14659 () Bool)

(declare-fun call!14665 () ListLongMap!1653)

(declare-fun call!14663 () ListLongMap!1653)

(declare-fun call!14666 () ListLongMap!1653)

(declare-fun c!24641 () Bool)

(assert (=> bm!14659 (= call!14665 (+!169 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666)) (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!133098 () Bool)

(declare-fun e!86752 () Bool)

(declare-fun e!86746 () Bool)

(assert (=> b!133098 (= e!86752 e!86746)))

(declare-fun res!64077 () Bool)

(declare-fun call!14662 () Bool)

(assert (=> b!133098 (= res!64077 call!14662)))

(assert (=> b!133098 (=> (not res!64077) (not e!86746))))

(declare-fun b!133099 () Bool)

(declare-fun e!86750 () Unit!4141)

(declare-fun lt!69582 () Unit!4141)

(assert (=> b!133099 (= e!86750 lt!69582)))

(declare-fun lt!69568 () ListLongMap!1653)

(assert (=> b!133099 (= lt!69568 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) (mask!7164 newMap!16) (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) (zeroValue!2719 newMap!16) (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69583 () (_ BitVec 64))

(assert (=> b!133099 (= lt!69583 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69567 () (_ BitVec 64))

(assert (=> b!133099 (= lt!69567 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69581 () Unit!4141)

(assert (=> b!133099 (= lt!69581 (addStillContains!92 lt!69568 lt!69583 (zeroValue!2719 newMap!16) lt!69567))))

(assert (=> b!133099 (contains!884 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))) lt!69567)))

(declare-fun lt!69579 () Unit!4141)

(assert (=> b!133099 (= lt!69579 lt!69581)))

(declare-fun lt!69574 () ListLongMap!1653)

(assert (=> b!133099 (= lt!69574 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) (mask!7164 newMap!16) (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) (zeroValue!2719 newMap!16) (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69566 () (_ BitVec 64))

(assert (=> b!133099 (= lt!69566 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69576 () (_ BitVec 64))

(assert (=> b!133099 (= lt!69576 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69580 () Unit!4141)

(assert (=> b!133099 (= lt!69580 (addApplyDifferent!92 lt!69574 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69576))))

(assert (=> b!133099 (= (apply!116 (+!169 lt!69574 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69576) (apply!116 lt!69574 lt!69576))))

(declare-fun lt!69573 () Unit!4141)

(assert (=> b!133099 (= lt!69573 lt!69580)))

(declare-fun lt!69586 () ListLongMap!1653)

(assert (=> b!133099 (= lt!69586 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) (mask!7164 newMap!16) (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) (zeroValue!2719 newMap!16) (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69575 () (_ BitVec 64))

(assert (=> b!133099 (= lt!69575 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69571 () (_ BitVec 64))

(assert (=> b!133099 (= lt!69571 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69584 () Unit!4141)

(assert (=> b!133099 (= lt!69584 (addApplyDifferent!92 lt!69586 lt!69575 (zeroValue!2719 newMap!16) lt!69571))))

(assert (=> b!133099 (= (apply!116 (+!169 lt!69586 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))) lt!69571) (apply!116 lt!69586 lt!69571))))

(declare-fun lt!69585 () Unit!4141)

(assert (=> b!133099 (= lt!69585 lt!69584)))

(declare-fun lt!69572 () ListLongMap!1653)

(assert (=> b!133099 (= lt!69572 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) (mask!7164 newMap!16) (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) (zeroValue!2719 newMap!16) (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69570 () (_ BitVec 64))

(assert (=> b!133099 (= lt!69570 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69578 () (_ BitVec 64))

(assert (=> b!133099 (= lt!69578 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133099 (= lt!69582 (addApplyDifferent!92 lt!69572 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69578))))

(assert (=> b!133099 (= (apply!116 (+!169 lt!69572 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69578) (apply!116 lt!69572 lt!69578))))

(declare-fun b!133100 () Bool)

(declare-fun lt!69577 () ListLongMap!1653)

(assert (=> b!133100 (= e!86746 (= (apply!116 lt!69577 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))

(declare-fun b!133101 () Bool)

(declare-fun e!86744 () Bool)

(assert (=> b!133101 (= e!86744 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14660 () Bool)

(assert (=> bm!14660 (= call!14664 call!14663)))

(declare-fun bm!14661 () Bool)

(assert (=> bm!14661 (= call!14662 (contains!884 lt!69577 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133102 () Bool)

(declare-fun e!86745 () Bool)

(assert (=> b!133102 (= e!86745 e!86752)))

(declare-fun c!24642 () Bool)

(assert (=> b!133102 (= c!24642 (not (= (bvand (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133103 () Bool)

(declare-fun e!86754 () Bool)

(assert (=> b!133103 (= e!86754 (= (apply!116 lt!69577 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 newMap!16)))))

(declare-fun b!133105 () Bool)

(declare-fun e!86743 () ListLongMap!1653)

(assert (=> b!133105 (= e!86743 call!14666)))

(declare-fun bm!14662 () Bool)

(declare-fun call!14668 () ListLongMap!1653)

(assert (=> bm!14662 (= call!14668 call!14665)))

(declare-fun bm!14663 () Bool)

(declare-fun call!14667 () Bool)

(assert (=> bm!14663 (= call!14667 (contains!884 lt!69577 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133106 () Bool)

(declare-fun c!24639 () Bool)

(assert (=> b!133106 (= c!24639 (and (not (= (bvand (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86749 () ListLongMap!1653)

(assert (=> b!133106 (= e!86749 e!86743)))

(declare-fun bm!14664 () Bool)

(assert (=> bm!14664 (= call!14666 call!14664)))

(declare-fun b!133107 () Bool)

(declare-fun e!86755 () Bool)

(assert (=> b!133107 (= e!86755 (= (apply!116 lt!69577 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133107 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))))))))

(assert (=> b!133107 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133108 () Bool)

(declare-fun e!86748 () ListLongMap!1653)

(assert (=> b!133108 (= e!86748 e!86749)))

(assert (=> b!133108 (= c!24643 (and (not (= (bvand (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133109 () Bool)

(declare-fun e!86751 () Bool)

(assert (=> b!133109 (= e!86751 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133110 () Bool)

(assert (=> b!133110 (= e!86748 (+!169 call!14665 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(declare-fun b!133111 () Bool)

(declare-fun e!86747 () Bool)

(assert (=> b!133111 (= e!86747 e!86755)))

(declare-fun res!64078 () Bool)

(assert (=> b!133111 (=> (not res!64078) (not e!86755))))

(assert (=> b!133111 (= res!64078 (contains!884 lt!69577 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133111 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun bm!14665 () Bool)

(assert (=> bm!14665 (= call!14663 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) (mask!7164 newMap!16) (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) (zeroValue!2719 newMap!16) (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!133112 () Bool)

(assert (=> b!133112 (= e!86752 (not call!14662))))

(declare-fun b!133113 () Bool)

(assert (=> b!133113 (= e!86743 call!14668)))

(declare-fun b!133114 () Bool)

(declare-fun Unit!4156 () Unit!4141)

(assert (=> b!133114 (= e!86750 Unit!4156)))

(declare-fun b!133115 () Bool)

(declare-fun e!86753 () Bool)

(assert (=> b!133115 (= e!86753 e!86754)))

(declare-fun res!64080 () Bool)

(assert (=> b!133115 (= res!64080 call!14667)))

(assert (=> b!133115 (=> (not res!64080) (not e!86754))))

(declare-fun b!133116 () Bool)

(declare-fun res!64074 () Bool)

(assert (=> b!133116 (=> (not res!64074) (not e!86745))))

(assert (=> b!133116 (= res!64074 e!86747)))

(declare-fun res!64079 () Bool)

(assert (=> b!133116 (=> res!64079 e!86747)))

(assert (=> b!133116 (= res!64079 (not e!86751))))

(declare-fun res!64072 () Bool)

(assert (=> b!133116 (=> (not res!64072) (not e!86751))))

(assert (=> b!133116 (= res!64072 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133117 () Bool)

(declare-fun res!64075 () Bool)

(assert (=> b!133117 (=> (not res!64075) (not e!86745))))

(assert (=> b!133117 (= res!64075 e!86753)))

(declare-fun c!24640 () Bool)

(assert (=> b!133117 (= c!24640 (not (= (bvand (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133118 () Bool)

(assert (=> b!133118 (= e!86749 call!14668)))

(declare-fun b!133104 () Bool)

(assert (=> b!133104 (= e!86753 (not call!14667))))

(declare-fun d!40503 () Bool)

(assert (=> d!40503 e!86745))

(declare-fun res!64076 () Bool)

(assert (=> d!40503 (=> (not res!64076) (not e!86745))))

(assert (=> d!40503 (= res!64076 (or (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))))

(declare-fun lt!69565 () ListLongMap!1653)

(assert (=> d!40503 (= lt!69577 lt!69565)))

(declare-fun lt!69569 () Unit!4141)

(assert (=> d!40503 (= lt!69569 e!86750)))

(declare-fun c!24638 () Bool)

(assert (=> d!40503 (= c!24638 e!86744)))

(declare-fun res!64073 () Bool)

(assert (=> d!40503 (=> (not res!64073) (not e!86744))))

(assert (=> d!40503 (= res!64073 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40503 (= lt!69565 e!86748)))

(assert (=> d!40503 (= c!24641 (and (not (= (bvand (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40503 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40503 (= (getCurrentListMap!518 (_keys!4613 newMap!16) (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) (mask!7164 newMap!16) (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) (zeroValue!2719 newMap!16) (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69577)))

(assert (= (and d!40503 c!24641) b!133110))

(assert (= (and d!40503 (not c!24641)) b!133108))

(assert (= (and b!133108 c!24643) b!133118))

(assert (= (and b!133108 (not c!24643)) b!133106))

(assert (= (and b!133106 c!24639) b!133113))

(assert (= (and b!133106 (not c!24639)) b!133105))

(assert (= (or b!133113 b!133105) bm!14664))

(assert (= (or b!133118 bm!14664) bm!14660))

(assert (= (or b!133118 b!133113) bm!14662))

(assert (= (or b!133110 bm!14660) bm!14665))

(assert (= (or b!133110 bm!14662) bm!14659))

(assert (= (and d!40503 res!64073) b!133101))

(assert (= (and d!40503 c!24638) b!133099))

(assert (= (and d!40503 (not c!24638)) b!133114))

(assert (= (and d!40503 res!64076) b!133116))

(assert (= (and b!133116 res!64072) b!133109))

(assert (= (and b!133116 (not res!64079)) b!133111))

(assert (= (and b!133111 res!64078) b!133107))

(assert (= (and b!133116 res!64074) b!133117))

(assert (= (and b!133117 c!24640) b!133115))

(assert (= (and b!133117 (not c!24640)) b!133104))

(assert (= (and b!133115 res!64080) b!133103))

(assert (= (or b!133115 b!133104) bm!14663))

(assert (= (and b!133117 res!64075) b!133102))

(assert (= (and b!133102 c!24642) b!133098))

(assert (= (and b!133102 (not c!24642)) b!133112))

(assert (= (and b!133098 res!64077) b!133100))

(assert (= (or b!133098 b!133112) bm!14661))

(declare-fun b_lambda!5933 () Bool)

(assert (=> (not b_lambda!5933) (not b!133107)))

(assert (=> b!133107 t!6147))

(declare-fun b_and!8253 () Bool)

(assert (= b_and!8249 (and (=> t!6147 result!3993) b_and!8253)))

(assert (=> b!133107 t!6149))

(declare-fun b_and!8255 () Bool)

(assert (= b_and!8251 (and (=> t!6149 result!3995) b_and!8255)))

(assert (=> d!40503 m!156651))

(assert (=> b!133109 m!156679))

(assert (=> b!133109 m!156679))

(assert (=> b!133109 m!156689))

(declare-fun m!156963 () Bool)

(assert (=> b!133099 m!156963))

(declare-fun m!156965 () Bool)

(assert (=> b!133099 m!156965))

(declare-fun m!156967 () Bool)

(assert (=> b!133099 m!156967))

(declare-fun m!156969 () Bool)

(assert (=> b!133099 m!156969))

(declare-fun m!156971 () Bool)

(assert (=> b!133099 m!156971))

(assert (=> b!133099 m!156679))

(declare-fun m!156973 () Bool)

(assert (=> b!133099 m!156973))

(declare-fun m!156975 () Bool)

(assert (=> b!133099 m!156975))

(declare-fun m!156977 () Bool)

(assert (=> b!133099 m!156977))

(declare-fun m!156979 () Bool)

(assert (=> b!133099 m!156979))

(declare-fun m!156981 () Bool)

(assert (=> b!133099 m!156981))

(declare-fun m!156983 () Bool)

(assert (=> b!133099 m!156983))

(assert (=> b!133099 m!156977))

(assert (=> b!133099 m!156971))

(declare-fun m!156985 () Bool)

(assert (=> b!133099 m!156985))

(declare-fun m!156987 () Bool)

(assert (=> b!133099 m!156987))

(declare-fun m!156989 () Bool)

(assert (=> b!133099 m!156989))

(assert (=> b!133099 m!156989))

(declare-fun m!156991 () Bool)

(assert (=> b!133099 m!156991))

(assert (=> b!133099 m!156969))

(declare-fun m!156993 () Bool)

(assert (=> b!133099 m!156993))

(declare-fun m!156995 () Bool)

(assert (=> b!133107 m!156995))

(assert (=> b!133107 m!156809))

(declare-fun m!156997 () Bool)

(assert (=> b!133107 m!156997))

(assert (=> b!133107 m!156809))

(assert (=> b!133107 m!156995))

(assert (=> b!133107 m!156679))

(assert (=> b!133107 m!156679))

(declare-fun m!156999 () Bool)

(assert (=> b!133107 m!156999))

(declare-fun m!157001 () Bool)

(assert (=> bm!14661 m!157001))

(declare-fun m!157003 () Bool)

(assert (=> bm!14659 m!157003))

(assert (=> b!133101 m!156679))

(assert (=> b!133101 m!156679))

(assert (=> b!133101 m!156689))

(declare-fun m!157005 () Bool)

(assert (=> b!133103 m!157005))

(assert (=> b!133111 m!156679))

(assert (=> b!133111 m!156679))

(declare-fun m!157007 () Bool)

(assert (=> b!133111 m!157007))

(assert (=> bm!14665 m!156983))

(declare-fun m!157009 () Bool)

(assert (=> bm!14663 m!157009))

(declare-fun m!157011 () Bool)

(assert (=> b!133110 m!157011))

(declare-fun m!157013 () Bool)

(assert (=> b!133100 m!157013))

(assert (=> bm!14590 d!40503))

(declare-fun b!133119 () Bool)

(declare-fun e!86758 () Bool)

(assert (=> b!133119 (= e!86758 (contains!885 (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133120 () Bool)

(declare-fun e!86756 () Bool)

(declare-fun call!14669 () Bool)

(assert (=> b!133120 (= e!86756 call!14669)))

(declare-fun b!133121 () Bool)

(declare-fun e!86759 () Bool)

(declare-fun e!86757 () Bool)

(assert (=> b!133121 (= e!86759 e!86757)))

(declare-fun res!64082 () Bool)

(assert (=> b!133121 (=> (not res!64082) (not e!86757))))

(assert (=> b!133121 (= res!64082 (not e!86758))))

(declare-fun res!64083 () Bool)

(assert (=> b!133121 (=> (not res!64083) (not e!86758))))

(assert (=> b!133121 (= res!64083 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun c!24644 () Bool)

(declare-fun bm!14666 () Bool)

(assert (=> bm!14666 (= call!14669 (arrayNoDuplicates!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))))))

(declare-fun d!40505 () Bool)

(declare-fun res!64081 () Bool)

(assert (=> d!40505 (=> res!64081 e!86759)))

(assert (=> d!40505 (= res!64081 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!40505 (= (arrayNoDuplicates!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) e!86759)))

(declare-fun b!133122 () Bool)

(assert (=> b!133122 (= e!86757 e!86756)))

(assert (=> b!133122 (= c!24644 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133123 () Bool)

(assert (=> b!133123 (= e!86756 call!14669)))

(assert (= (and d!40505 (not res!64081)) b!133121))

(assert (= (and b!133121 res!64083) b!133119))

(assert (= (and b!133121 res!64082) b!133122))

(assert (= (and b!133122 c!24644) b!133120))

(assert (= (and b!133122 (not c!24644)) b!133123))

(assert (= (or b!133120 b!133123) bm!14666))

(declare-fun m!157015 () Bool)

(assert (=> b!133119 m!157015))

(assert (=> b!133119 m!157015))

(declare-fun m!157017 () Bool)

(assert (=> b!133119 m!157017))

(assert (=> b!133121 m!157015))

(assert (=> b!133121 m!157015))

(declare-fun m!157019 () Bool)

(assert (=> b!133121 m!157019))

(assert (=> bm!14666 m!157015))

(declare-fun m!157021 () Bool)

(assert (=> bm!14666 m!157021))

(assert (=> b!133122 m!157015))

(assert (=> b!133122 m!157015))

(assert (=> b!133122 m!157019))

(assert (=> bm!14532 d!40505))

(declare-fun d!40507 () Bool)

(assert (=> d!40507 (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69193 #b00000000000000000000000000000000)))

(declare-fun lt!69589 () Unit!4141)

(declare-fun choose!13 (array!4763 (_ BitVec 64) (_ BitVec 32)) Unit!4141)

(assert (=> d!40507 (= lt!69589 (choose!13 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69193 #b00000000000000000000000000000000))))

(assert (=> d!40507 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!40507 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69193 #b00000000000000000000000000000000) lt!69589)))

(declare-fun bs!5510 () Bool)

(assert (= bs!5510 d!40507))

(assert (=> bs!5510 m!156507))

(declare-fun m!157023 () Bool)

(assert (=> bs!5510 m!157023))

(assert (=> b!132660 d!40507))

(declare-fun d!40509 () Bool)

(declare-fun res!64084 () Bool)

(declare-fun e!86760 () Bool)

(assert (=> d!40509 (=> res!64084 e!86760)))

(assert (=> d!40509 (= res!64084 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) lt!69193))))

(assert (=> d!40509 (= (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69193 #b00000000000000000000000000000000) e!86760)))

(declare-fun b!133124 () Bool)

(declare-fun e!86761 () Bool)

(assert (=> b!133124 (= e!86760 e!86761)))

(declare-fun res!64085 () Bool)

(assert (=> b!133124 (=> (not res!64085) (not e!86761))))

(assert (=> b!133124 (= res!64085 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!133125 () Bool)

(assert (=> b!133125 (= e!86761 (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69193 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40509 (not res!64084)) b!133124))

(assert (= (and b!133124 res!64085) b!133125))

(assert (=> d!40509 m!156495))

(declare-fun m!157025 () Bool)

(assert (=> b!133125 m!157025))

(assert (=> b!132660 d!40509))

(declare-fun b!133126 () Bool)

(declare-fun c!24645 () Bool)

(declare-fun lt!69591 () (_ BitVec 64))

(assert (=> b!133126 (= c!24645 (= lt!69591 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86763 () SeekEntryResult!269)

(declare-fun e!86764 () SeekEntryResult!269)

(assert (=> b!133126 (= e!86763 e!86764)))

(declare-fun d!40511 () Bool)

(declare-fun lt!69590 () SeekEntryResult!269)

(assert (=> d!40511 (and (or ((_ is Undefined!269) lt!69590) (not ((_ is Found!269) lt!69590)) (and (bvsge (index!3237 lt!69590) #b00000000000000000000000000000000) (bvslt (index!3237 lt!69590) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))) (or ((_ is Undefined!269) lt!69590) ((_ is Found!269) lt!69590) (not ((_ is MissingZero!269) lt!69590)) (and (bvsge (index!3236 lt!69590) #b00000000000000000000000000000000) (bvslt (index!3236 lt!69590) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))) (or ((_ is Undefined!269) lt!69590) ((_ is Found!269) lt!69590) ((_ is MissingZero!269) lt!69590) (not ((_ is MissingVacant!269) lt!69590)) (and (bvsge (index!3239 lt!69590) #b00000000000000000000000000000000) (bvslt (index!3239 lt!69590) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))) (or ((_ is Undefined!269) lt!69590) (ite ((_ is Found!269) lt!69590) (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3237 lt!69590)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!269) lt!69590) (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3236 lt!69590)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!269) lt!69590) (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3239 lt!69590)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!86762 () SeekEntryResult!269)

(assert (=> d!40511 (= lt!69590 e!86762)))

(declare-fun c!24647 () Bool)

(declare-fun lt!69592 () SeekEntryResult!269)

(assert (=> d!40511 (= c!24647 (and ((_ is Intermediate!269) lt!69592) (undefined!1081 lt!69592)))))

(assert (=> d!40511 (= lt!69592 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(assert (=> d!40511 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!40511 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) lt!69590)))

(declare-fun b!133127 () Bool)

(assert (=> b!133127 (= e!86764 (seekKeyOrZeroReturnVacant!0 (x!15586 lt!69592) (index!3238 lt!69592) (index!3238 lt!69592) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!133128 () Bool)

(assert (=> b!133128 (= e!86764 (MissingZero!269 (index!3238 lt!69592)))))

(declare-fun b!133129 () Bool)

(assert (=> b!133129 (= e!86762 e!86763)))

(assert (=> b!133129 (= lt!69591 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!69592)))))

(declare-fun c!24646 () Bool)

(assert (=> b!133129 (= c!24646 (= lt!69591 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!133130 () Bool)

(assert (=> b!133130 (= e!86763 (Found!269 (index!3238 lt!69592)))))

(declare-fun b!133131 () Bool)

(assert (=> b!133131 (= e!86762 Undefined!269)))

(assert (= (and d!40511 c!24647) b!133131))

(assert (= (and d!40511 (not c!24647)) b!133129))

(assert (= (and b!133129 c!24646) b!133130))

(assert (= (and b!133129 (not c!24646)) b!133126))

(assert (= (and b!133126 c!24645) b!133128))

(assert (= (and b!133126 (not c!24645)) b!133127))

(assert (=> d!40511 m!156495))

(declare-fun m!157027 () Bool)

(assert (=> d!40511 m!157027))

(assert (=> d!40511 m!156405))

(assert (=> d!40511 m!157027))

(assert (=> d!40511 m!156495))

(declare-fun m!157029 () Bool)

(assert (=> d!40511 m!157029))

(declare-fun m!157031 () Bool)

(assert (=> d!40511 m!157031))

(declare-fun m!157033 () Bool)

(assert (=> d!40511 m!157033))

(declare-fun m!157035 () Bool)

(assert (=> d!40511 m!157035))

(assert (=> b!133127 m!156495))

(declare-fun m!157037 () Bool)

(assert (=> b!133127 m!157037))

(declare-fun m!157039 () Bool)

(assert (=> b!133129 m!157039))

(assert (=> b!132660 d!40511))

(declare-fun d!40513 () Bool)

(assert (=> d!40513 (= (inRange!0 (ite c!24562 (ite c!24558 (index!3237 lt!69287) (ite c!24554 (index!3236 lt!69263) (index!3239 lt!69263))) (ite c!24560 (index!3237 lt!69274) (ite c!24559 (index!3236 lt!69278) (index!3239 lt!69278)))) (mask!7164 newMap!16)) (and (bvsge (ite c!24562 (ite c!24558 (index!3237 lt!69287) (ite c!24554 (index!3236 lt!69263) (index!3239 lt!69263))) (ite c!24560 (index!3237 lt!69274) (ite c!24559 (index!3236 lt!69278) (index!3239 lt!69278)))) #b00000000000000000000000000000000) (bvslt (ite c!24562 (ite c!24558 (index!3237 lt!69287) (ite c!24554 (index!3236 lt!69263) (index!3239 lt!69263))) (ite c!24560 (index!3237 lt!69274) (ite c!24559 (index!3236 lt!69278) (index!3239 lt!69278)))) (bvadd (mask!7164 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14600 d!40513))

(declare-fun d!40515 () Bool)

(declare-fun e!86766 () Bool)

(assert (=> d!40515 e!86766))

(declare-fun res!64086 () Bool)

(assert (=> d!40515 (=> res!64086 e!86766)))

(declare-fun lt!69593 () Bool)

(assert (=> d!40515 (= res!64086 (not lt!69593))))

(declare-fun lt!69594 () Bool)

(assert (=> d!40515 (= lt!69593 lt!69594)))

(declare-fun lt!69595 () Unit!4141)

(declare-fun e!86765 () Unit!4141)

(assert (=> d!40515 (= lt!69595 e!86765)))

(declare-fun c!24648 () Bool)

(assert (=> d!40515 (= c!24648 lt!69594)))

(assert (=> d!40515 (= lt!69594 (containsKey!176 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40515 (= (contains!884 lt!69344 #b1000000000000000000000000000000000000000000000000000000000000000) lt!69593)))

(declare-fun b!133132 () Bool)

(declare-fun lt!69596 () Unit!4141)

(assert (=> b!133132 (= e!86765 lt!69596)))

(assert (=> b!133132 (= lt!69596 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133132 (isDefined!125 (getValueByKey!173 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133133 () Bool)

(declare-fun Unit!4157 () Unit!4141)

(assert (=> b!133133 (= e!86765 Unit!4157)))

(declare-fun b!133134 () Bool)

(assert (=> b!133134 (= e!86766 (isDefined!125 (getValueByKey!173 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40515 c!24648) b!133132))

(assert (= (and d!40515 (not c!24648)) b!133133))

(assert (= (and d!40515 (not res!64086)) b!133134))

(declare-fun m!157041 () Bool)

(assert (=> d!40515 m!157041))

(declare-fun m!157043 () Bool)

(assert (=> b!133132 m!157043))

(assert (=> b!133132 m!156835))

(assert (=> b!133132 m!156835))

(declare-fun m!157045 () Bool)

(assert (=> b!133132 m!157045))

(assert (=> b!133134 m!156835))

(assert (=> b!133134 m!156835))

(assert (=> b!133134 m!157045))

(assert (=> bm!14624 d!40515))

(declare-fun d!40517 () Bool)

(assert (=> d!40517 (= (get!1491 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!132803 d!40517))

(assert (=> b!132849 d!40493))

(declare-fun b!133135 () Bool)

(declare-fun e!86769 () Bool)

(declare-fun call!14670 () Bool)

(assert (=> b!133135 (= e!86769 call!14670)))

(declare-fun b!133136 () Bool)

(declare-fun e!86767 () Bool)

(assert (=> b!133136 (= e!86769 e!86767)))

(declare-fun lt!69598 () (_ BitVec 64))

(assert (=> b!133136 (= lt!69598 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!69597 () Unit!4141)

(assert (=> b!133136 (= lt!69597 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69598 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!133136 (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69598 #b00000000000000000000000000000000)))

(declare-fun lt!69599 () Unit!4141)

(assert (=> b!133136 (= lt!69599 lt!69597)))

(declare-fun res!64087 () Bool)

(assert (=> b!133136 (= res!64087 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (Found!269 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!133136 (=> (not res!64087) (not e!86767))))

(declare-fun b!133137 () Bool)

(declare-fun e!86768 () Bool)

(assert (=> b!133137 (= e!86768 e!86769)))

(declare-fun c!24649 () Bool)

(assert (=> b!133137 (= c!24649 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133138 () Bool)

(assert (=> b!133138 (= e!86767 call!14670)))

(declare-fun d!40519 () Bool)

(declare-fun res!64088 () Bool)

(assert (=> d!40519 (=> res!64088 e!86768)))

(assert (=> d!40519 (= res!64088 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!40519 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) e!86768)))

(declare-fun bm!14667 () Bool)

(assert (=> bm!14667 (= call!14670 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(assert (= (and d!40519 (not res!64088)) b!133137))

(assert (= (and b!133137 c!24649) b!133136))

(assert (= (and b!133137 (not c!24649)) b!133135))

(assert (= (and b!133136 res!64087) b!133138))

(assert (= (or b!133138 b!133135) bm!14667))

(assert (=> b!133136 m!157015))

(declare-fun m!157047 () Bool)

(assert (=> b!133136 m!157047))

(declare-fun m!157049 () Bool)

(assert (=> b!133136 m!157049))

(assert (=> b!133136 m!157015))

(declare-fun m!157051 () Bool)

(assert (=> b!133136 m!157051))

(assert (=> b!133137 m!157015))

(assert (=> b!133137 m!157015))

(assert (=> b!133137 m!157019))

(declare-fun m!157053 () Bool)

(assert (=> bm!14667 m!157053))

(assert (=> bm!14535 d!40519))

(declare-fun d!40521 () Bool)

(assert (=> d!40521 (= (apply!116 lt!69344 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5511 () Bool)

(assert (= bs!5511 d!40521))

(declare-fun m!157055 () Bool)

(assert (=> bs!5511 m!157055))

(assert (=> bs!5511 m!157055))

(declare-fun m!157057 () Bool)

(assert (=> bs!5511 m!157057))

(assert (=> b!132851 d!40521))

(declare-fun b!133139 () Bool)

(declare-fun e!86772 () Bool)

(assert (=> b!133139 (= e!86772 (contains!885 Nil!1690 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133140 () Bool)

(declare-fun e!86770 () Bool)

(declare-fun call!14671 () Bool)

(assert (=> b!133140 (= e!86770 call!14671)))

(declare-fun b!133141 () Bool)

(declare-fun e!86773 () Bool)

(declare-fun e!86771 () Bool)

(assert (=> b!133141 (= e!86773 e!86771)))

(declare-fun res!64090 () Bool)

(assert (=> b!133141 (=> (not res!64090) (not e!86771))))

(assert (=> b!133141 (= res!64090 (not e!86772))))

(declare-fun res!64091 () Bool)

(assert (=> b!133141 (=> (not res!64091) (not e!86772))))

(assert (=> b!133141 (= res!64091 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14668 () Bool)

(declare-fun c!24650 () Bool)

(assert (=> bm!14668 (= call!14671 (arrayNoDuplicates!0 (_keys!4613 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690)))))

(declare-fun d!40523 () Bool)

(declare-fun res!64089 () Bool)

(assert (=> d!40523 (=> res!64089 e!86773)))

(assert (=> d!40523 (= res!64089 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40523 (= (arrayNoDuplicates!0 (_keys!4613 newMap!16) #b00000000000000000000000000000000 Nil!1690) e!86773)))

(declare-fun b!133142 () Bool)

(assert (=> b!133142 (= e!86771 e!86770)))

(assert (=> b!133142 (= c!24650 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133143 () Bool)

(assert (=> b!133143 (= e!86770 call!14671)))

(assert (= (and d!40523 (not res!64089)) b!133141))

(assert (= (and b!133141 res!64091) b!133139))

(assert (= (and b!133141 res!64090) b!133142))

(assert (= (and b!133142 c!24650) b!133140))

(assert (= (and b!133142 (not c!24650)) b!133143))

(assert (= (or b!133140 b!133143) bm!14668))

(assert (=> b!133139 m!156679))

(assert (=> b!133139 m!156679))

(declare-fun m!157059 () Bool)

(assert (=> b!133139 m!157059))

(assert (=> b!133141 m!156679))

(assert (=> b!133141 m!156679))

(assert (=> b!133141 m!156689))

(assert (=> bm!14668 m!156679))

(declare-fun m!157061 () Bool)

(assert (=> bm!14668 m!157061))

(assert (=> b!133142 m!156679))

(assert (=> b!133142 m!156679))

(assert (=> b!133142 m!156689))

(assert (=> b!132875 d!40523))

(declare-fun d!40525 () Bool)

(declare-fun lt!69602 () (_ BitVec 32))

(assert (=> d!40525 (and (bvsge lt!69602 #b00000000000000000000000000000000) (bvsle lt!69602 (bvsub (size!2521 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!86778 () (_ BitVec 32))

(assert (=> d!40525 (= lt!69602 e!86778)))

(declare-fun c!24655 () Bool)

(assert (=> d!40525 (= c!24655 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40525 (and (bvsle #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2521 (_keys!4613 newMap!16)) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40525 (= (arrayCountValidKeys!0 (_keys!4613 newMap!16) #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) lt!69602)))

(declare-fun b!133152 () Bool)

(declare-fun e!86779 () (_ BitVec 32))

(declare-fun call!14674 () (_ BitVec 32))

(assert (=> b!133152 (= e!86779 (bvadd #b00000000000000000000000000000001 call!14674))))

(declare-fun b!133153 () Bool)

(assert (=> b!133153 (= e!86779 call!14674)))

(declare-fun b!133154 () Bool)

(assert (=> b!133154 (= e!86778 e!86779)))

(declare-fun c!24656 () Bool)

(assert (=> b!133154 (= c!24656 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14671 () Bool)

(assert (=> bm!14671 (= call!14674 (arrayCountValidKeys!0 (_keys!4613 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133155 () Bool)

(assert (=> b!133155 (= e!86778 #b00000000000000000000000000000000)))

(assert (= (and d!40525 c!24655) b!133155))

(assert (= (and d!40525 (not c!24655)) b!133154))

(assert (= (and b!133154 c!24656) b!133152))

(assert (= (and b!133154 (not c!24656)) b!133153))

(assert (= (or b!133152 b!133153) bm!14671))

(assert (=> b!133154 m!156679))

(assert (=> b!133154 m!156679))

(assert (=> b!133154 m!156689))

(declare-fun m!157063 () Bool)

(assert (=> bm!14671 m!157063))

(assert (=> b!132873 d!40525))

(assert (=> bm!14607 d!40443))

(declare-fun d!40527 () Bool)

(declare-fun e!86780 () Bool)

(assert (=> d!40527 e!86780))

(declare-fun res!64093 () Bool)

(assert (=> d!40527 (=> (not res!64093) (not e!86780))))

(declare-fun lt!69605 () ListLongMap!1653)

(assert (=> d!40527 (= res!64093 (contains!884 lt!69605 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun lt!69606 () List!1694)

(assert (=> d!40527 (= lt!69605 (ListLongMap!1654 lt!69606))))

(declare-fun lt!69603 () Unit!4141)

(declare-fun lt!69604 () Unit!4141)

(assert (=> d!40527 (= lt!69603 lt!69604)))

(assert (=> d!40527 (= (getValueByKey!173 lt!69606 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) (Some!178 (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!40527 (= lt!69604 (lemmaContainsTupThenGetReturnValue!88 lt!69606 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!40527 (= lt!69606 (insertStrictlySorted!91 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!40527 (= (+!169 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)) (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69605)))

(declare-fun b!133156 () Bool)

(declare-fun res!64092 () Bool)

(assert (=> b!133156 (=> (not res!64092) (not e!86780))))

(assert (=> b!133156 (= res!64092 (= (getValueByKey!173 (toList!842 lt!69605) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) (Some!178 (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!133157 () Bool)

(assert (=> b!133157 (= e!86780 (contains!886 (toList!842 lt!69605) (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!40527 res!64093) b!133156))

(assert (= (and b!133156 res!64092) b!133157))

(declare-fun m!157065 () Bool)

(assert (=> d!40527 m!157065))

(declare-fun m!157067 () Bool)

(assert (=> d!40527 m!157067))

(declare-fun m!157069 () Bool)

(assert (=> d!40527 m!157069))

(declare-fun m!157071 () Bool)

(assert (=> d!40527 m!157071))

(declare-fun m!157073 () Bool)

(assert (=> b!133156 m!157073))

(declare-fun m!157075 () Bool)

(assert (=> b!133157 m!157075))

(assert (=> bm!14622 d!40527))

(declare-fun b!133174 () Bool)

(declare-fun e!86792 () Bool)

(declare-fun call!14680 () Bool)

(assert (=> b!133174 (= e!86792 (not call!14680))))

(declare-fun b!133175 () Bool)

(declare-fun e!86790 () Bool)

(assert (=> b!133175 (= e!86790 (not call!14680))))

(declare-fun bm!14676 () Bool)

(assert (=> bm!14676 (= call!14680 (arrayContainsKey!0 (_keys!4613 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!133176 () Bool)

(declare-fun lt!69611 () SeekEntryResult!269)

(assert (=> b!133176 (and (bvsge (index!3236 lt!69611) #b00000000000000000000000000000000) (bvslt (index!3236 lt!69611) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!64102 () Bool)

(assert (=> b!133176 (= res!64102 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3236 lt!69611)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133176 (=> (not res!64102) (not e!86792))))

(declare-fun call!14679 () Bool)

(declare-fun c!24661 () Bool)

(declare-fun bm!14677 () Bool)

(assert (=> bm!14677 (= call!14679 (inRange!0 (ite c!24661 (index!3236 lt!69611) (index!3239 lt!69611)) (mask!7164 newMap!16)))))

(declare-fun b!133177 () Bool)

(declare-fun e!86789 () Bool)

(assert (=> b!133177 (= e!86789 e!86792)))

(declare-fun res!64105 () Bool)

(assert (=> b!133177 (= res!64105 call!14679)))

(assert (=> b!133177 (=> (not res!64105) (not e!86792))))

(declare-fun b!133178 () Bool)

(declare-fun res!64103 () Bool)

(assert (=> b!133178 (=> (not res!64103) (not e!86790))))

(assert (=> b!133178 (= res!64103 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3239 lt!69611)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133178 (and (bvsge (index!3239 lt!69611) #b00000000000000000000000000000000) (bvslt (index!3239 lt!69611) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun d!40529 () Bool)

(assert (=> d!40529 e!86789))

(assert (=> d!40529 (= c!24661 ((_ is MissingZero!269) lt!69611))))

(assert (=> d!40529 (= lt!69611 (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(declare-fun lt!69612 () Unit!4141)

(declare-fun choose!827 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 64) Int) Unit!4141)

(assert (=> d!40529 (= lt!69612 (choose!827 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40529 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40529 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!61 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)) lt!69612)))

(declare-fun b!133179 () Bool)

(declare-fun e!86791 () Bool)

(assert (=> b!133179 (= e!86789 e!86791)))

(declare-fun c!24662 () Bool)

(assert (=> b!133179 (= c!24662 ((_ is MissingVacant!269) lt!69611))))

(declare-fun b!133180 () Bool)

(declare-fun res!64104 () Bool)

(assert (=> b!133180 (=> (not res!64104) (not e!86790))))

(assert (=> b!133180 (= res!64104 call!14679)))

(assert (=> b!133180 (= e!86791 e!86790)))

(declare-fun b!133181 () Bool)

(assert (=> b!133181 (= e!86791 ((_ is Undefined!269) lt!69611))))

(assert (= (and d!40529 c!24661) b!133177))

(assert (= (and d!40529 (not c!24661)) b!133179))

(assert (= (and b!133177 res!64105) b!133176))

(assert (= (and b!133176 res!64102) b!133174))

(assert (= (and b!133179 c!24662) b!133180))

(assert (= (and b!133179 (not c!24662)) b!133181))

(assert (= (and b!133180 res!64104) b!133178))

(assert (= (and b!133178 res!64103) b!133175))

(assert (= (or b!133177 b!133180) bm!14677))

(assert (= (or b!133174 b!133175) bm!14676))

(declare-fun m!157077 () Bool)

(assert (=> bm!14677 m!157077))

(assert (=> bm!14676 m!156395))

(assert (=> bm!14676 m!156535))

(declare-fun m!157079 () Bool)

(assert (=> b!133178 m!157079))

(assert (=> d!40529 m!156395))

(assert (=> d!40529 m!156563))

(assert (=> d!40529 m!156395))

(declare-fun m!157081 () Bool)

(assert (=> d!40529 m!157081))

(assert (=> d!40529 m!156651))

(declare-fun m!157083 () Bool)

(assert (=> b!133176 m!157083))

(assert (=> bm!14605 d!40529))

(declare-fun d!40531 () Bool)

(assert (=> d!40531 (= (apply!116 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69345) (apply!116 lt!69339 lt!69345))))

(declare-fun lt!69615 () Unit!4141)

(declare-fun choose!828 (ListLongMap!1653 (_ BitVec 64) V!3481 (_ BitVec 64)) Unit!4141)

(assert (=> d!40531 (= lt!69615 (choose!828 lt!69339 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69345))))

(declare-fun e!86795 () Bool)

(assert (=> d!40531 e!86795))

(declare-fun res!64108 () Bool)

(assert (=> d!40531 (=> (not res!64108) (not e!86795))))

(assert (=> d!40531 (= res!64108 (contains!884 lt!69339 lt!69345))))

(assert (=> d!40531 (= (addApplyDifferent!92 lt!69339 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69345) lt!69615)))

(declare-fun b!133185 () Bool)

(assert (=> b!133185 (= e!86795 (not (= lt!69345 lt!69337)))))

(assert (= (and d!40531 res!64108) b!133185))

(assert (=> d!40531 m!156599))

(assert (=> d!40531 m!156601))

(assert (=> d!40531 m!156585))

(declare-fun m!157085 () Bool)

(assert (=> d!40531 m!157085))

(declare-fun m!157087 () Bool)

(assert (=> d!40531 m!157087))

(assert (=> d!40531 m!156599))

(assert (=> b!132847 d!40531))

(declare-fun d!40533 () Bool)

(assert (=> d!40533 (contains!884 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69334)))

(declare-fun lt!69618 () Unit!4141)

(declare-fun choose!829 (ListLongMap!1653 (_ BitVec 64) V!3481 (_ BitVec 64)) Unit!4141)

(assert (=> d!40533 (= lt!69618 (choose!829 lt!69335 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69334))))

(assert (=> d!40533 (contains!884 lt!69335 lt!69334)))

(assert (=> d!40533 (= (addStillContains!92 lt!69335 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69334) lt!69618)))

(declare-fun bs!5512 () Bool)

(assert (= bs!5512 d!40533))

(assert (=> bs!5512 m!156611))

(assert (=> bs!5512 m!156611))

(assert (=> bs!5512 m!156613))

(declare-fun m!157089 () Bool)

(assert (=> bs!5512 m!157089))

(declare-fun m!157091 () Bool)

(assert (=> bs!5512 m!157091))

(assert (=> b!132847 d!40533))

(declare-fun d!40535 () Bool)

(declare-fun e!86797 () Bool)

(assert (=> d!40535 e!86797))

(declare-fun res!64109 () Bool)

(assert (=> d!40535 (=> res!64109 e!86797)))

(declare-fun lt!69619 () Bool)

(assert (=> d!40535 (= res!64109 (not lt!69619))))

(declare-fun lt!69620 () Bool)

(assert (=> d!40535 (= lt!69619 lt!69620)))

(declare-fun lt!69621 () Unit!4141)

(declare-fun e!86796 () Unit!4141)

(assert (=> d!40535 (= lt!69621 e!86796)))

(declare-fun c!24663 () Bool)

(assert (=> d!40535 (= c!24663 lt!69620)))

(assert (=> d!40535 (= lt!69620 (containsKey!176 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334))))

(assert (=> d!40535 (= (contains!884 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69334) lt!69619)))

(declare-fun b!133187 () Bool)

(declare-fun lt!69622 () Unit!4141)

(assert (=> b!133187 (= e!86796 lt!69622)))

(assert (=> b!133187 (= lt!69622 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334))))

(assert (=> b!133187 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334))))

(declare-fun b!133188 () Bool)

(declare-fun Unit!4158 () Unit!4141)

(assert (=> b!133188 (= e!86796 Unit!4158)))

(declare-fun b!133189 () Bool)

(assert (=> b!133189 (= e!86797 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334)))))

(assert (= (and d!40535 c!24663) b!133187))

(assert (= (and d!40535 (not c!24663)) b!133188))

(assert (= (and d!40535 (not res!64109)) b!133189))

(declare-fun m!157093 () Bool)

(assert (=> d!40535 m!157093))

(declare-fun m!157095 () Bool)

(assert (=> b!133187 m!157095))

(declare-fun m!157097 () Bool)

(assert (=> b!133187 m!157097))

(assert (=> b!133187 m!157097))

(declare-fun m!157099 () Bool)

(assert (=> b!133187 m!157099))

(assert (=> b!133189 m!157097))

(assert (=> b!133189 m!157097))

(assert (=> b!133189 m!157099))

(assert (=> b!132847 d!40535))

(assert (=> b!132847 d!40465))

(declare-fun d!40537 () Bool)

(declare-fun e!86798 () Bool)

(assert (=> d!40537 e!86798))

(declare-fun res!64111 () Bool)

(assert (=> d!40537 (=> (not res!64111) (not e!86798))))

(declare-fun lt!69625 () ListLongMap!1653)

(assert (=> d!40537 (= res!64111 (contains!884 lt!69625 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun lt!69626 () List!1694)

(assert (=> d!40537 (= lt!69625 (ListLongMap!1654 lt!69626))))

(declare-fun lt!69623 () Unit!4141)

(declare-fun lt!69624 () Unit!4141)

(assert (=> d!40537 (= lt!69623 lt!69624)))

(assert (=> d!40537 (= (getValueByKey!173 lt!69626 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40537 (= lt!69624 (lemmaContainsTupThenGetReturnValue!88 lt!69626 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40537 (= lt!69626 (insertStrictlySorted!91 (toList!842 lt!69341) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40537 (= (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69625)))

(declare-fun b!133190 () Bool)

(declare-fun res!64110 () Bool)

(assert (=> b!133190 (=> (not res!64110) (not e!86798))))

(assert (=> b!133190 (= res!64110 (= (getValueByKey!173 (toList!842 lt!69625) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!133191 () Bool)

(assert (=> b!133191 (= e!86798 (contains!886 (toList!842 lt!69625) (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!40537 res!64111) b!133190))

(assert (= (and b!133190 res!64110) b!133191))

(declare-fun m!157101 () Bool)

(assert (=> d!40537 m!157101))

(declare-fun m!157103 () Bool)

(assert (=> d!40537 m!157103))

(declare-fun m!157105 () Bool)

(assert (=> d!40537 m!157105))

(declare-fun m!157107 () Bool)

(assert (=> d!40537 m!157107))

(declare-fun m!157109 () Bool)

(assert (=> b!133190 m!157109))

(declare-fun m!157111 () Bool)

(assert (=> b!133191 m!157111))

(assert (=> b!132847 d!40537))

(declare-fun d!40539 () Bool)

(assert (=> d!40539 (= (apply!116 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69343) (apply!116 lt!69341 lt!69343))))

(declare-fun lt!69627 () Unit!4141)

(assert (=> d!40539 (= lt!69627 (choose!828 lt!69341 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69343))))

(declare-fun e!86799 () Bool)

(assert (=> d!40539 e!86799))

(declare-fun res!64112 () Bool)

(assert (=> d!40539 (=> (not res!64112) (not e!86799))))

(assert (=> d!40539 (= res!64112 (contains!884 lt!69341 lt!69343))))

(assert (=> d!40539 (= (addApplyDifferent!92 lt!69341 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69343) lt!69627)))

(declare-fun b!133192 () Bool)

(assert (=> b!133192 (= e!86799 (not (= lt!69343 lt!69333)))))

(assert (= (and d!40539 res!64112) b!133192))

(assert (=> d!40539 m!156593))

(assert (=> d!40539 m!156607))

(assert (=> d!40539 m!156589))

(declare-fun m!157113 () Bool)

(assert (=> d!40539 m!157113))

(declare-fun m!157115 () Bool)

(assert (=> d!40539 m!157115))

(assert (=> d!40539 m!156593))

(assert (=> b!132847 d!40539))

(declare-fun d!40541 () Bool)

(assert (=> d!40541 (= (apply!116 lt!69339 lt!69345) (get!1492 (getValueByKey!173 (toList!842 lt!69339) lt!69345)))))

(declare-fun bs!5513 () Bool)

(assert (= bs!5513 d!40541))

(declare-fun m!157117 () Bool)

(assert (=> bs!5513 m!157117))

(assert (=> bs!5513 m!157117))

(declare-fun m!157119 () Bool)

(assert (=> bs!5513 m!157119))

(assert (=> b!132847 d!40541))

(declare-fun d!40543 () Bool)

(declare-fun e!86800 () Bool)

(assert (=> d!40543 e!86800))

(declare-fun res!64114 () Bool)

(assert (=> d!40543 (=> (not res!64114) (not e!86800))))

(declare-fun lt!69630 () ListLongMap!1653)

(assert (=> d!40543 (= res!64114 (contains!884 lt!69630 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun lt!69631 () List!1694)

(assert (=> d!40543 (= lt!69630 (ListLongMap!1654 lt!69631))))

(declare-fun lt!69628 () Unit!4141)

(declare-fun lt!69629 () Unit!4141)

(assert (=> d!40543 (= lt!69628 lt!69629)))

(assert (=> d!40543 (= (getValueByKey!173 lt!69631 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40543 (= lt!69629 (lemmaContainsTupThenGetReturnValue!88 lt!69631 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40543 (= lt!69631 (insertStrictlySorted!91 (toList!842 lt!69339) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40543 (= (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69630)))

(declare-fun b!133193 () Bool)

(declare-fun res!64113 () Bool)

(assert (=> b!133193 (=> (not res!64113) (not e!86800))))

(assert (=> b!133193 (= res!64113 (= (getValueByKey!173 (toList!842 lt!69630) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!133194 () Bool)

(assert (=> b!133194 (= e!86800 (contains!886 (toList!842 lt!69630) (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!40543 res!64114) b!133193))

(assert (= (and b!133193 res!64113) b!133194))

(declare-fun m!157121 () Bool)

(assert (=> d!40543 m!157121))

(declare-fun m!157123 () Bool)

(assert (=> d!40543 m!157123))

(declare-fun m!157125 () Bool)

(assert (=> d!40543 m!157125))

(declare-fun m!157127 () Bool)

(assert (=> d!40543 m!157127))

(declare-fun m!157129 () Bool)

(assert (=> b!133193 m!157129))

(declare-fun m!157131 () Bool)

(assert (=> b!133194 m!157131))

(assert (=> b!132847 d!40543))

(declare-fun d!40545 () Bool)

(assert (=> d!40545 (= (apply!116 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69343) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69343)))))

(declare-fun bs!5514 () Bool)

(assert (= bs!5514 d!40545))

(declare-fun m!157133 () Bool)

(assert (=> bs!5514 m!157133))

(assert (=> bs!5514 m!157133))

(declare-fun m!157135 () Bool)

(assert (=> bs!5514 m!157135))

(assert (=> b!132847 d!40545))

(declare-fun d!40547 () Bool)

(assert (=> d!40547 (= (apply!116 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69345) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69345)))))

(declare-fun bs!5515 () Bool)

(assert (= bs!5515 d!40547))

(declare-fun m!157137 () Bool)

(assert (=> bs!5515 m!157137))

(assert (=> bs!5515 m!157137))

(declare-fun m!157139 () Bool)

(assert (=> bs!5515 m!157139))

(assert (=> b!132847 d!40547))

(declare-fun d!40549 () Bool)

(declare-fun e!86801 () Bool)

(assert (=> d!40549 e!86801))

(declare-fun res!64116 () Bool)

(assert (=> d!40549 (=> (not res!64116) (not e!86801))))

(declare-fun lt!69634 () ListLongMap!1653)

(assert (=> d!40549 (= res!64116 (contains!884 lt!69634 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun lt!69635 () List!1694)

(assert (=> d!40549 (= lt!69634 (ListLongMap!1654 lt!69635))))

(declare-fun lt!69632 () Unit!4141)

(declare-fun lt!69633 () Unit!4141)

(assert (=> d!40549 (= lt!69632 lt!69633)))

(assert (=> d!40549 (= (getValueByKey!173 lt!69635 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40549 (= lt!69633 (lemmaContainsTupThenGetReturnValue!88 lt!69635 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40549 (= lt!69635 (insertStrictlySorted!91 (toList!842 lt!69353) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40549 (= (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69634)))

(declare-fun b!133195 () Bool)

(declare-fun res!64115 () Bool)

(assert (=> b!133195 (=> (not res!64115) (not e!86801))))

(assert (=> b!133195 (= res!64115 (= (getValueByKey!173 (toList!842 lt!69634) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!133196 () Bool)

(assert (=> b!133196 (= e!86801 (contains!886 (toList!842 lt!69634) (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!40549 res!64116) b!133195))

(assert (= (and b!133195 res!64115) b!133196))

(declare-fun m!157141 () Bool)

(assert (=> d!40549 m!157141))

(declare-fun m!157143 () Bool)

(assert (=> d!40549 m!157143))

(declare-fun m!157145 () Bool)

(assert (=> d!40549 m!157145))

(declare-fun m!157147 () Bool)

(assert (=> d!40549 m!157147))

(declare-fun m!157149 () Bool)

(assert (=> b!133195 m!157149))

(declare-fun m!157151 () Bool)

(assert (=> b!133196 m!157151))

(assert (=> b!132847 d!40549))

(declare-fun d!40551 () Bool)

(assert (=> d!40551 (= (apply!116 lt!69341 lt!69343) (get!1492 (getValueByKey!173 (toList!842 lt!69341) lt!69343)))))

(declare-fun bs!5516 () Bool)

(assert (= bs!5516 d!40551))

(declare-fun m!157153 () Bool)

(assert (=> bs!5516 m!157153))

(assert (=> bs!5516 m!157153))

(declare-fun m!157155 () Bool)

(assert (=> bs!5516 m!157155))

(assert (=> b!132847 d!40551))

(declare-fun d!40553 () Bool)

(assert (=> d!40553 (= (apply!116 lt!69353 lt!69338) (get!1492 (getValueByKey!173 (toList!842 lt!69353) lt!69338)))))

(declare-fun bs!5517 () Bool)

(assert (= bs!5517 d!40553))

(declare-fun m!157157 () Bool)

(assert (=> bs!5517 m!157157))

(assert (=> bs!5517 m!157157))

(declare-fun m!157159 () Bool)

(assert (=> bs!5517 m!157159))

(assert (=> b!132847 d!40553))

(declare-fun d!40555 () Bool)

(assert (=> d!40555 (= (apply!116 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69338) (apply!116 lt!69353 lt!69338))))

(declare-fun lt!69636 () Unit!4141)

(assert (=> d!40555 (= lt!69636 (choose!828 lt!69353 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69338))))

(declare-fun e!86802 () Bool)

(assert (=> d!40555 e!86802))

(declare-fun res!64117 () Bool)

(assert (=> d!40555 (=> (not res!64117) (not e!86802))))

(assert (=> d!40555 (= res!64117 (contains!884 lt!69353 lt!69338))))

(assert (=> d!40555 (= (addApplyDifferent!92 lt!69353 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69338) lt!69636)))

(declare-fun b!133197 () Bool)

(assert (=> b!133197 (= e!86802 (not (= lt!69338 lt!69342)))))

(assert (= (and d!40555 res!64117) b!133197))

(assert (=> d!40555 m!156591))

(assert (=> d!40555 m!156615))

(assert (=> d!40555 m!156595))

(declare-fun m!157161 () Bool)

(assert (=> d!40555 m!157161))

(declare-fun m!157163 () Bool)

(assert (=> d!40555 m!157163))

(assert (=> d!40555 m!156591))

(assert (=> b!132847 d!40555))

(declare-fun d!40557 () Bool)

(declare-fun e!86803 () Bool)

(assert (=> d!40557 e!86803))

(declare-fun res!64119 () Bool)

(assert (=> d!40557 (=> (not res!64119) (not e!86803))))

(declare-fun lt!69639 () ListLongMap!1653)

(assert (=> d!40557 (= res!64119 (contains!884 lt!69639 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun lt!69640 () List!1694)

(assert (=> d!40557 (= lt!69639 (ListLongMap!1654 lt!69640))))

(declare-fun lt!69637 () Unit!4141)

(declare-fun lt!69638 () Unit!4141)

(assert (=> d!40557 (= lt!69637 lt!69638)))

(assert (=> d!40557 (= (getValueByKey!173 lt!69640 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40557 (= lt!69638 (lemmaContainsTupThenGetReturnValue!88 lt!69640 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40557 (= lt!69640 (insertStrictlySorted!91 (toList!842 lt!69335) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40557 (= (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69639)))

(declare-fun b!133198 () Bool)

(declare-fun res!64118 () Bool)

(assert (=> b!133198 (=> (not res!64118) (not e!86803))))

(assert (=> b!133198 (= res!64118 (= (getValueByKey!173 (toList!842 lt!69639) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!133199 () Bool)

(assert (=> b!133199 (= e!86803 (contains!886 (toList!842 lt!69639) (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!40557 res!64119) b!133198))

(assert (= (and b!133198 res!64118) b!133199))

(declare-fun m!157165 () Bool)

(assert (=> d!40557 m!157165))

(declare-fun m!157167 () Bool)

(assert (=> d!40557 m!157167))

(declare-fun m!157169 () Bool)

(assert (=> d!40557 m!157169))

(declare-fun m!157171 () Bool)

(assert (=> d!40557 m!157171))

(declare-fun m!157173 () Bool)

(assert (=> b!133198 m!157173))

(declare-fun m!157175 () Bool)

(assert (=> b!133199 m!157175))

(assert (=> b!132847 d!40557))

(declare-fun d!40559 () Bool)

(assert (=> d!40559 (= (apply!116 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69338) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69338)))))

(declare-fun bs!5518 () Bool)

(assert (= bs!5518 d!40559))

(declare-fun m!157177 () Bool)

(assert (=> bs!5518 m!157177))

(assert (=> bs!5518 m!157177))

(declare-fun m!157179 () Bool)

(assert (=> bs!5518 m!157179))

(assert (=> b!132847 d!40559))

(declare-fun d!40561 () Bool)

(declare-fun e!86806 () Bool)

(assert (=> d!40561 e!86806))

(declare-fun res!64124 () Bool)

(assert (=> d!40561 (=> (not res!64124) (not e!86806))))

(declare-fun lt!69645 () SeekEntryResult!269)

(assert (=> d!40561 (= res!64124 ((_ is Found!269) lt!69645))))

(assert (=> d!40561 (= lt!69645 (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(declare-fun lt!69646 () Unit!4141)

(declare-fun choose!830 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 64) Int) Unit!4141)

(assert (=> d!40561 (= lt!69646 (choose!830 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40561 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40561 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!61 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)) lt!69646)))

(declare-fun b!133204 () Bool)

(declare-fun res!64125 () Bool)

(assert (=> b!133204 (=> (not res!64125) (not e!86806))))

(assert (=> b!133204 (= res!64125 (inRange!0 (index!3237 lt!69645) (mask!7164 newMap!16)))))

(declare-fun b!133205 () Bool)

(assert (=> b!133205 (= e!86806 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69645)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!133205 (and (bvsge (index!3237 lt!69645) #b00000000000000000000000000000000) (bvslt (index!3237 lt!69645) (size!2521 (_keys!4613 newMap!16))))))

(assert (= (and d!40561 res!64124) b!133204))

(assert (= (and b!133204 res!64125) b!133205))

(assert (=> d!40561 m!156395))

(assert (=> d!40561 m!156563))

(assert (=> d!40561 m!156395))

(declare-fun m!157181 () Bool)

(assert (=> d!40561 m!157181))

(assert (=> d!40561 m!156651))

(declare-fun m!157183 () Bool)

(assert (=> b!133204 m!157183))

(declare-fun m!157185 () Bool)

(assert (=> b!133205 m!157185))

(assert (=> bm!14592 d!40561))

(declare-fun d!40563 () Bool)

(declare-fun res!64126 () Bool)

(declare-fun e!86807 () Bool)

(assert (=> d!40563 (=> (not res!64126) (not e!86807))))

(assert (=> d!40563 (= res!64126 (simpleValid!92 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!40563 (= (valid!542 (v!3198 (underlying!454 thiss!992))) e!86807)))

(declare-fun b!133206 () Bool)

(declare-fun res!64127 () Bool)

(assert (=> b!133206 (=> (not res!64127) (not e!86807))))

(assert (=> b!133206 (= res!64127 (= (arrayCountValidKeys!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000000 (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))) (_size!597 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!133207 () Bool)

(declare-fun res!64128 () Bool)

(assert (=> b!133207 (=> (not res!64128) (not e!86807))))

(assert (=> b!133207 (= res!64128 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!133208 () Bool)

(assert (=> b!133208 (= e!86807 (arrayNoDuplicates!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000000 Nil!1690))))

(assert (= (and d!40563 res!64126) b!133206))

(assert (= (and b!133206 res!64127) b!133207))

(assert (= (and b!133207 res!64128) b!133208))

(declare-fun m!157187 () Bool)

(assert (=> d!40563 m!157187))

(declare-fun m!157189 () Bool)

(assert (=> b!133206 m!157189))

(assert (=> b!133207 m!156407))

(assert (=> b!133208 m!156403))

(assert (=> d!40433 d!40563))

(declare-fun d!40565 () Bool)

(declare-fun e!86808 () Bool)

(assert (=> d!40565 e!86808))

(declare-fun res!64130 () Bool)

(assert (=> d!40565 (=> (not res!64130) (not e!86808))))

(declare-fun lt!69649 () ListLongMap!1653)

(assert (=> d!40565 (= res!64130 (contains!884 lt!69649 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun lt!69650 () List!1694)

(assert (=> d!40565 (= lt!69649 (ListLongMap!1654 lt!69650))))

(declare-fun lt!69647 () Unit!4141)

(declare-fun lt!69648 () Unit!4141)

(assert (=> d!40565 (= lt!69647 lt!69648)))

(assert (=> d!40565 (= (getValueByKey!173 lt!69650 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40565 (= lt!69648 (lemmaContainsTupThenGetReturnValue!88 lt!69650 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40565 (= lt!69650 (insertStrictlySorted!91 (toList!842 call!14628) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40565 (= (+!169 call!14628 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69649)))

(declare-fun b!133209 () Bool)

(declare-fun res!64129 () Bool)

(assert (=> b!133209 (=> (not res!64129) (not e!86808))))

(assert (=> b!133209 (= res!64129 (= (getValueByKey!173 (toList!842 lt!69649) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!133210 () Bool)

(assert (=> b!133210 (= e!86808 (contains!886 (toList!842 lt!69649) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!40565 res!64130) b!133209))

(assert (= (and b!133209 res!64129) b!133210))

(declare-fun m!157191 () Bool)

(assert (=> d!40565 m!157191))

(declare-fun m!157193 () Bool)

(assert (=> d!40565 m!157193))

(declare-fun m!157195 () Bool)

(assert (=> d!40565 m!157195))

(declare-fun m!157197 () Bool)

(assert (=> d!40565 m!157197))

(declare-fun m!157199 () Bool)

(assert (=> b!133209 m!157199))

(declare-fun m!157201 () Bool)

(assert (=> b!133210 m!157201))

(assert (=> b!132858 d!40565))

(assert (=> d!40445 d!40431))

(declare-fun d!40567 () Bool)

(assert (=> d!40567 (isDefined!125 (getValueByKey!173 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun lt!69653 () Unit!4141)

(declare-fun choose!831 (List!1694 (_ BitVec 64)) Unit!4141)

(assert (=> d!40567 (= lt!69653 (choose!831 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun e!86811 () Bool)

(assert (=> d!40567 e!86811))

(declare-fun res!64133 () Bool)

(assert (=> d!40567 (=> (not res!64133) (not e!86811))))

(declare-fun isStrictlySorted!309 (List!1694) Bool)

(assert (=> d!40567 (= res!64133 (isStrictlySorted!309 (toList!842 lt!69167)))))

(assert (=> d!40567 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) lt!69653)))

(declare-fun b!133213 () Bool)

(assert (=> b!133213 (= e!86811 (containsKey!176 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40567 res!64133) b!133213))

(assert (=> d!40567 m!156395))

(assert (=> d!40567 m!156517))

(assert (=> d!40567 m!156517))

(assert (=> d!40567 m!156519))

(assert (=> d!40567 m!156395))

(declare-fun m!157203 () Bool)

(assert (=> d!40567 m!157203))

(declare-fun m!157205 () Bool)

(assert (=> d!40567 m!157205))

(assert (=> b!133213 m!156395))

(assert (=> b!133213 m!156513))

(assert (=> b!132669 d!40567))

(declare-fun d!40569 () Bool)

(declare-fun isEmpty!416 (Option!179) Bool)

(assert (=> d!40569 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun bs!5519 () Bool)

(assert (= bs!5519 d!40569))

(assert (=> bs!5519 m!156517))

(declare-fun m!157207 () Bool)

(assert (=> bs!5519 m!157207))

(assert (=> b!132669 d!40569))

(declare-fun b!133223 () Bool)

(declare-fun e!86816 () Option!179)

(declare-fun e!86817 () Option!179)

(assert (=> b!133223 (= e!86816 e!86817)))

(declare-fun c!24669 () Bool)

(assert (=> b!133223 (= c!24669 (and ((_ is Cons!1690) (toList!842 lt!69167)) (not (= (_1!1293 (h!2295 (toList!842 lt!69167))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun b!133222 () Bool)

(assert (=> b!133222 (= e!86816 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69167)))))))

(declare-fun d!40571 () Bool)

(declare-fun c!24668 () Bool)

(assert (=> d!40571 (= c!24668 (and ((_ is Cons!1690) (toList!842 lt!69167)) (= (_1!1293 (h!2295 (toList!842 lt!69167))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40571 (= (getValueByKey!173 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!86816)))

(declare-fun b!133225 () Bool)

(assert (=> b!133225 (= e!86817 None!177)))

(declare-fun b!133224 () Bool)

(assert (=> b!133224 (= e!86817 (getValueByKey!173 (t!6137 (toList!842 lt!69167)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40571 c!24668) b!133222))

(assert (= (and d!40571 (not c!24668)) b!133223))

(assert (= (and b!133223 c!24669) b!133224))

(assert (= (and b!133223 (not c!24669)) b!133225))

(assert (=> b!133224 m!156395))

(declare-fun m!157209 () Bool)

(assert (=> b!133224 m!157209))

(assert (=> b!132669 d!40571))

(assert (=> b!132671 d!40569))

(assert (=> b!132671 d!40571))

(assert (=> b!132776 d!40455))

(declare-fun d!40573 () Bool)

(assert (=> d!40573 (= (+!169 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69279 (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69656 () Unit!4141)

(declare-fun choose!832 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 V!3481 Int) Unit!4141)

(assert (=> d!40573 (= lt!69656 (choose!832 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) lt!69279 (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40573 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40573 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!61 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) lt!69279 (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)) lt!69656)))

(declare-fun bs!5520 () Bool)

(assert (= bs!5520 d!40573))

(assert (=> bs!5520 m!156393))

(declare-fun m!157211 () Bool)

(assert (=> bs!5520 m!157211))

(assert (=> bs!5520 m!156393))

(declare-fun m!157213 () Bool)

(assert (=> bs!5520 m!157213))

(assert (=> bs!5520 m!156651))

(assert (=> bs!5520 m!156545))

(declare-fun m!157215 () Bool)

(assert (=> bs!5520 m!157215))

(assert (=> bs!5520 m!156545))

(assert (=> b!132775 d!40573))

(declare-fun d!40575 () Bool)

(declare-fun e!86819 () Bool)

(assert (=> d!40575 e!86819))

(declare-fun res!64134 () Bool)

(assert (=> d!40575 (=> res!64134 e!86819)))

(declare-fun lt!69657 () Bool)

(assert (=> d!40575 (= res!64134 (not lt!69657))))

(declare-fun lt!69658 () Bool)

(assert (=> d!40575 (= lt!69657 lt!69658)))

(declare-fun lt!69659 () Unit!4141)

(declare-fun e!86818 () Unit!4141)

(assert (=> d!40575 (= lt!69659 e!86818)))

(declare-fun c!24670 () Bool)

(assert (=> d!40575 (= c!24670 lt!69658)))

(assert (=> d!40575 (= lt!69658 (containsKey!176 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40575 (= (contains!884 lt!69344 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69657)))

(declare-fun b!133226 () Bool)

(declare-fun lt!69660 () Unit!4141)

(assert (=> b!133226 (= e!86818 lt!69660)))

(assert (=> b!133226 (= lt!69660 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133226 (isDefined!125 (getValueByKey!173 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133227 () Bool)

(declare-fun Unit!4159 () Unit!4141)

(assert (=> b!133227 (= e!86818 Unit!4159)))

(declare-fun b!133228 () Bool)

(assert (=> b!133228 (= e!86819 (isDefined!125 (getValueByKey!173 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40575 c!24670) b!133226))

(assert (= (and d!40575 (not c!24670)) b!133227))

(assert (= (and d!40575 (not res!64134)) b!133228))

(declare-fun m!157217 () Bool)

(assert (=> d!40575 m!157217))

(declare-fun m!157219 () Bool)

(assert (=> b!133226 m!157219))

(assert (=> b!133226 m!157055))

(assert (=> b!133226 m!157055))

(declare-fun m!157221 () Bool)

(assert (=> b!133226 m!157221))

(assert (=> b!133228 m!157055))

(assert (=> b!133228 m!157055))

(assert (=> b!133228 m!157221))

(assert (=> bm!14626 d!40575))

(assert (=> d!40443 d!40479))

(declare-fun mapIsEmpty!4655 () Bool)

(declare-fun mapRes!4655 () Bool)

(assert (=> mapIsEmpty!4655 mapRes!4655))

(declare-fun condMapEmpty!4655 () Bool)

(declare-fun mapDefault!4655 () ValueCell!1094)

(assert (=> mapNonEmpty!4654 (= condMapEmpty!4655 (= mapRest!4654 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4655)))))

(declare-fun e!86820 () Bool)

(assert (=> mapNonEmpty!4654 (= tp!11224 (and e!86820 mapRes!4655))))

(declare-fun b!133229 () Bool)

(declare-fun e!86821 () Bool)

(assert (=> b!133229 (= e!86821 tp_is_empty!2875)))

(declare-fun mapNonEmpty!4655 () Bool)

(declare-fun tp!11225 () Bool)

(assert (=> mapNonEmpty!4655 (= mapRes!4655 (and tp!11225 e!86821))))

(declare-fun mapKey!4655 () (_ BitVec 32))

(declare-fun mapValue!4655 () ValueCell!1094)

(declare-fun mapRest!4655 () (Array (_ BitVec 32) ValueCell!1094))

(assert (=> mapNonEmpty!4655 (= mapRest!4654 (store mapRest!4655 mapKey!4655 mapValue!4655))))

(declare-fun b!133230 () Bool)

(assert (=> b!133230 (= e!86820 tp_is_empty!2875)))

(assert (= (and mapNonEmpty!4654 condMapEmpty!4655) mapIsEmpty!4655))

(assert (= (and mapNonEmpty!4654 (not condMapEmpty!4655)) mapNonEmpty!4655))

(assert (= (and mapNonEmpty!4655 ((_ is ValueCellFull!1094) mapValue!4655)) b!133229))

(assert (= (and mapNonEmpty!4654 ((_ is ValueCellFull!1094) mapDefault!4655)) b!133230))

(declare-fun m!157223 () Bool)

(assert (=> mapNonEmpty!4655 m!157223))

(declare-fun mapIsEmpty!4656 () Bool)

(declare-fun mapRes!4656 () Bool)

(assert (=> mapIsEmpty!4656 mapRes!4656))

(declare-fun condMapEmpty!4656 () Bool)

(declare-fun mapDefault!4656 () ValueCell!1094)

(assert (=> mapNonEmpty!4653 (= condMapEmpty!4656 (= mapRest!4653 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4656)))))

(declare-fun e!86822 () Bool)

(assert (=> mapNonEmpty!4653 (= tp!11223 (and e!86822 mapRes!4656))))

(declare-fun b!133231 () Bool)

(declare-fun e!86823 () Bool)

(assert (=> b!133231 (= e!86823 tp_is_empty!2875)))

(declare-fun mapNonEmpty!4656 () Bool)

(declare-fun tp!11226 () Bool)

(assert (=> mapNonEmpty!4656 (= mapRes!4656 (and tp!11226 e!86823))))

(declare-fun mapKey!4656 () (_ BitVec 32))

(declare-fun mapRest!4656 () (Array (_ BitVec 32) ValueCell!1094))

(declare-fun mapValue!4656 () ValueCell!1094)

(assert (=> mapNonEmpty!4656 (= mapRest!4653 (store mapRest!4656 mapKey!4656 mapValue!4656))))

(declare-fun b!133232 () Bool)

(assert (=> b!133232 (= e!86822 tp_is_empty!2875)))

(assert (= (and mapNonEmpty!4653 condMapEmpty!4656) mapIsEmpty!4656))

(assert (= (and mapNonEmpty!4653 (not condMapEmpty!4656)) mapNonEmpty!4656))

(assert (= (and mapNonEmpty!4656 ((_ is ValueCellFull!1094) mapValue!4656)) b!133231))

(assert (= (and mapNonEmpty!4653 ((_ is ValueCellFull!1094) mapDefault!4656)) b!133232))

(declare-fun m!157225 () Bool)

(assert (=> mapNonEmpty!4656 m!157225))

(declare-fun b_lambda!5935 () Bool)

(assert (= b_lambda!5931 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!5935)))

(declare-fun b_lambda!5937 () Bool)

(assert (= b_lambda!5927 (or (and b!132503 b_free!2917) (and b!132502 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))))) b_lambda!5937)))

(declare-fun b_lambda!5939 () Bool)

(assert (= b_lambda!5925 (or (and b!132503 b_free!2917) (and b!132502 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))))) b_lambda!5939)))

(declare-fun b_lambda!5941 () Bool)

(assert (= b_lambda!5933 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!5941)))

(declare-fun b_lambda!5943 () Bool)

(assert (= b_lambda!5929 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!5943)))

(check-sat (not d!40497) (not mapNonEmpty!4656) (not d!40565) (not d!40451) (not d!40535) (not d!40507) (not b!132975) (not b!133054) (not b!133198) (not b!133011) (not bm!14676) (not b!132930) (not b!133099) (not bm!14659) (not mapNonEmpty!4655) (not bm!14654) (not bm!14639) (not d!40467) (not b!133193) (not b!133088) (not d!40559) (not b!133079) (not d!40541) (not b!132920) (not b!132921) (not b!132977) (not b!133136) (not bm!14644) (not d!40479) (not b_lambda!5923) (not b!133125) (not b!133020) (not d!40569) (not b_lambda!5939) (not b!133189) (not b!133051) (not b!133013) tp_is_empty!2875 (not d!40481) (not d!40515) (not d!40499) (not bm!14656) (not b!132968) (not b!133213) (not b!132929) (not b!133031) (not b!133137) b_and!8255 (not bm!14671) (not d!40531) (not bm!14665) (not b!133111) (not d!40527) (not b!133196) (not b!133156) (not d!40573) (not d!40457) (not b!133157) (not b!133194) (not b!133141) (not b!133024) (not b!133207) (not b!132982) (not b!133107) (not bm!14649) (not b!133060) (not d!40495) (not b!133050) (not bm!14661) (not b!133206) (not d!40575) b_and!8253 (not b!133187) (not bm!14658) (not b!133154) (not b!133076) (not b!133094) (not d!40557) (not b!133100) (not bm!14663) (not d!40475) (not b_lambda!5941) (not bm!14668) (not b!133030) (not b!133077) (not b!133210) (not b!133032) (not d!40487) (not d!40545) (not d!40543) (not b!133103) (not b!133021) (not b!133191) (not d!40473) (not b!133091) (not b!133121) (not b!133204) (not b!133110) (not b!132895) (not d!40501) (not b!133047) (not d!40511) (not b!133028) (not b!133109) (not bm!14640) (not bm!14652) (not b!133127) (not b!133101) (not b!133086) (not d!40539) (not d!40469) (not d!40561) (not d!40567) (not b_next!2917) (not b!133139) (not d!40503) (not bm!14667) (not b!132978) (not b!133017) (not d!40547) (not b!133122) (not b!133022) (not bm!14647) (not b!133095) (not b!133052) (not b!133075) (not d!40537) (not b!133058) (not bm!14629) (not b!133085) (not b!133134) (not d!40463) (not b!133074) (not b!133097) (not d!40529) (not b!133142) (not b!133073) (not b!133070) (not d!40471) (not bm!14666) (not b!133048) (not d!40455) (not bm!14677) (not d!40549) (not bm!14645) (not d!40555) (not d!40533) (not b!133045) (not b!133199) (not d!40521) (not b!133132) (not b!133009) (not b!133046) (not b!133195) (not bm!14651) (not b!133072) (not b!133209) (not b!133061) (not d!40477) (not b_next!2919) (not b!132911) (not b!133224) (not b!132981) (not b!133226) (not b_lambda!5943) (not b!133014) (not d!40465) (not b_lambda!5919) (not bm!14638) (not b!133008) (not b!133208) (not d!40563) (not b!133190) (not d!40483) (not b!133119) (not b!132927) (not b!133062) (not b!132896) (not b!133007) (not d!40551) (not b!133016) (not d!40553) (not b_lambda!5937) (not b!133228) (not b_lambda!5935) (not d!40489))
(check-sat b_and!8253 b_and!8255 (not b_next!2917) (not b_next!2919))
(get-model)

(declare-fun d!40577 () Bool)

(assert (=> d!40577 (= (apply!116 lt!69504 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69504) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5521 () Bool)

(assert (= bs!5521 d!40577))

(declare-fun m!157227 () Bool)

(assert (=> bs!5521 m!157227))

(assert (=> bs!5521 m!157227))

(declare-fun m!157229 () Bool)

(assert (=> bs!5521 m!157229))

(assert (=> b!133021 d!40577))

(declare-fun b!133233 () Bool)

(declare-fun e!86826 () Bool)

(declare-fun call!14681 () Bool)

(assert (=> b!133233 (= e!86826 call!14681)))

(declare-fun b!133234 () Bool)

(declare-fun e!86824 () Bool)

(assert (=> b!133234 (= e!86826 e!86824)))

(declare-fun lt!69662 () (_ BitVec 64))

(assert (=> b!133234 (= lt!69662 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!69661 () Unit!4141)

(assert (=> b!133234 (= lt!69661 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69662 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!133234 (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69662 #b00000000000000000000000000000000)))

(declare-fun lt!69663 () Unit!4141)

(assert (=> b!133234 (= lt!69663 lt!69661)))

(declare-fun res!64135 () Bool)

(assert (=> b!133234 (= res!64135 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (Found!269 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!133234 (=> (not res!64135) (not e!86824))))

(declare-fun b!133235 () Bool)

(declare-fun e!86825 () Bool)

(assert (=> b!133235 (= e!86825 e!86826)))

(declare-fun c!24671 () Bool)

(assert (=> b!133235 (= c!24671 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!133236 () Bool)

(assert (=> b!133236 (= e!86824 call!14681)))

(declare-fun d!40579 () Bool)

(declare-fun res!64136 () Bool)

(assert (=> d!40579 (=> res!64136 e!86825)))

(assert (=> d!40579 (= res!64136 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!40579 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) e!86825)))

(declare-fun bm!14678 () Bool)

(assert (=> bm!14678 (= call!14681 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(assert (= (and d!40579 (not res!64136)) b!133235))

(assert (= (and b!133235 c!24671) b!133234))

(assert (= (and b!133235 (not c!24671)) b!133233))

(assert (= (and b!133234 res!64135) b!133236))

(assert (= (or b!133236 b!133233) bm!14678))

(declare-fun m!157231 () Bool)

(assert (=> b!133234 m!157231))

(declare-fun m!157233 () Bool)

(assert (=> b!133234 m!157233))

(declare-fun m!157235 () Bool)

(assert (=> b!133234 m!157235))

(assert (=> b!133234 m!157231))

(declare-fun m!157237 () Bool)

(assert (=> b!133234 m!157237))

(assert (=> b!133235 m!157231))

(assert (=> b!133235 m!157231))

(declare-fun m!157239 () Bool)

(assert (=> b!133235 m!157239))

(declare-fun m!157241 () Bool)

(assert (=> bm!14678 m!157241))

(assert (=> bm!14667 d!40579))

(declare-fun d!40581 () Bool)

(assert (=> d!40581 (= (isDefined!125 (getValueByKey!173 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))) (not (isEmpty!416 (getValueByKey!173 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))))

(declare-fun bs!5522 () Bool)

(assert (= bs!5522 d!40581))

(assert (=> bs!5522 m!156941))

(declare-fun m!157243 () Bool)

(assert (=> bs!5522 m!157243))

(assert (=> b!133088 d!40581))

(declare-fun b!133238 () Bool)

(declare-fun e!86827 () Option!179)

(declare-fun e!86828 () Option!179)

(assert (=> b!133238 (= e!86827 e!86828)))

(declare-fun c!24673 () Bool)

(assert (=> b!133238 (= c!24673 (and ((_ is Cons!1690) (toList!842 e!86556)) (not (= (_1!1293 (h!2295 (toList!842 e!86556))) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))))

(declare-fun b!133237 () Bool)

(assert (=> b!133237 (= e!86827 (Some!178 (_2!1293 (h!2295 (toList!842 e!86556)))))))

(declare-fun d!40583 () Bool)

(declare-fun c!24672 () Bool)

(assert (=> d!40583 (= c!24672 (and ((_ is Cons!1690) (toList!842 e!86556)) (= (_1!1293 (h!2295 (toList!842 e!86556))) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))))

(assert (=> d!40583 (= (getValueByKey!173 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))) e!86827)))

(declare-fun b!133240 () Bool)

(assert (=> b!133240 (= e!86828 None!177)))

(declare-fun b!133239 () Bool)

(assert (=> b!133239 (= e!86828 (getValueByKey!173 (t!6137 (toList!842 e!86556)) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(assert (= (and d!40583 c!24672) b!133237))

(assert (= (and d!40583 (not c!24672)) b!133238))

(assert (= (and b!133238 c!24673) b!133239))

(assert (= (and b!133238 (not c!24673)) b!133240))

(declare-fun m!157245 () Bool)

(assert (=> b!133239 m!157245))

(assert (=> b!133088 d!40583))

(declare-fun d!40585 () Bool)

(declare-fun e!86829 () Bool)

(assert (=> d!40585 e!86829))

(declare-fun res!64138 () Bool)

(assert (=> d!40585 (=> (not res!64138) (not e!86829))))

(declare-fun lt!69666 () ListLongMap!1653)

(assert (=> d!40585 (= res!64138 (contains!884 lt!69666 (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69667 () List!1694)

(assert (=> d!40585 (= lt!69666 (ListLongMap!1654 lt!69667))))

(declare-fun lt!69664 () Unit!4141)

(declare-fun lt!69665 () Unit!4141)

(assert (=> d!40585 (= lt!69664 lt!69665)))

(assert (=> d!40585 (= (getValueByKey!173 lt!69667 (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40585 (= lt!69665 (lemmaContainsTupThenGetReturnValue!88 lt!69667 (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40585 (= lt!69667 (insertStrictlySorted!91 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40585 (= (+!169 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69666)))

(declare-fun b!133241 () Bool)

(declare-fun res!64137 () Bool)

(assert (=> b!133241 (=> (not res!64137) (not e!86829))))

(assert (=> b!133241 (= res!64137 (= (getValueByKey!173 (toList!842 lt!69666) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133242 () Bool)

(assert (=> b!133242 (= e!86829 (contains!886 (toList!842 lt!69666) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40585 res!64138) b!133241))

(assert (= (and b!133241 res!64137) b!133242))

(declare-fun m!157247 () Bool)

(assert (=> d!40585 m!157247))

(declare-fun m!157249 () Bool)

(assert (=> d!40585 m!157249))

(declare-fun m!157251 () Bool)

(assert (=> d!40585 m!157251))

(declare-fun m!157253 () Bool)

(assert (=> d!40585 m!157253))

(declare-fun m!157255 () Bool)

(assert (=> b!133241 m!157255))

(declare-fun m!157257 () Bool)

(assert (=> b!133242 m!157257))

(assert (=> d!40467 d!40585))

(declare-fun d!40587 () Bool)

(assert (=> d!40587 (= (+!169 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69283 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(assert (=> d!40587 true))

(declare-fun _$7!116 () Unit!4141)

(assert (=> d!40587 (= (choose!824 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) lt!69283 (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) (defaultEntry!2864 newMap!16)) _$7!116)))

(declare-fun bs!5523 () Bool)

(assert (= bs!5523 d!40587))

(assert (=> bs!5523 m!156545))

(assert (=> bs!5523 m!156545))

(assert (=> bs!5523 m!156771))

(assert (=> bs!5523 m!156393))

(assert (=> bs!5523 m!156773))

(assert (=> d!40467 d!40587))

(assert (=> d!40467 d!40479))

(declare-fun c!24679 () Bool)

(declare-fun call!14684 () ListLongMap!1653)

(declare-fun c!24677 () Bool)

(declare-fun call!14685 () ListLongMap!1653)

(declare-fun bm!14679 () Bool)

(declare-fun call!14683 () ListLongMap!1653)

(declare-fun call!14686 () ListLongMap!1653)

(assert (=> bm!14679 (= call!14685 (+!169 (ite c!24677 call!14683 (ite c!24679 call!14684 call!14686)) (ite (or c!24677 c!24679) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!133243 () Bool)

(declare-fun e!86839 () Bool)

(declare-fun e!86833 () Bool)

(assert (=> b!133243 (= e!86839 e!86833)))

(declare-fun res!64144 () Bool)

(declare-fun call!14682 () Bool)

(assert (=> b!133243 (= res!64144 call!14682)))

(assert (=> b!133243 (=> (not res!64144) (not e!86833))))

(declare-fun b!133244 () Bool)

(declare-fun e!86837 () Unit!4141)

(declare-fun lt!69685 () Unit!4141)

(assert (=> b!133244 (= e!86837 lt!69685)))

(declare-fun lt!69671 () ListLongMap!1653)

(assert (=> b!133244 (= lt!69671 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69283 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69686 () (_ BitVec 64))

(assert (=> b!133244 (= lt!69686 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69670 () (_ BitVec 64))

(assert (=> b!133244 (= lt!69670 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69684 () Unit!4141)

(assert (=> b!133244 (= lt!69684 (addStillContains!92 lt!69671 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69670))))

(assert (=> b!133244 (contains!884 (+!169 lt!69671 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69670)))

(declare-fun lt!69682 () Unit!4141)

(assert (=> b!133244 (= lt!69682 lt!69684)))

(declare-fun lt!69677 () ListLongMap!1653)

(assert (=> b!133244 (= lt!69677 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69283 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69669 () (_ BitVec 64))

(assert (=> b!133244 (= lt!69669 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69679 () (_ BitVec 64))

(assert (=> b!133244 (= lt!69679 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69683 () Unit!4141)

(assert (=> b!133244 (= lt!69683 (addApplyDifferent!92 lt!69677 lt!69669 (minValue!2719 newMap!16) lt!69679))))

(assert (=> b!133244 (= (apply!116 (+!169 lt!69677 (tuple2!2565 lt!69669 (minValue!2719 newMap!16))) lt!69679) (apply!116 lt!69677 lt!69679))))

(declare-fun lt!69676 () Unit!4141)

(assert (=> b!133244 (= lt!69676 lt!69683)))

(declare-fun lt!69689 () ListLongMap!1653)

(assert (=> b!133244 (= lt!69689 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69283 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69678 () (_ BitVec 64))

(assert (=> b!133244 (= lt!69678 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69674 () (_ BitVec 64))

(assert (=> b!133244 (= lt!69674 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69687 () Unit!4141)

(assert (=> b!133244 (= lt!69687 (addApplyDifferent!92 lt!69689 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69674))))

(assert (=> b!133244 (= (apply!116 (+!169 lt!69689 (tuple2!2565 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69674) (apply!116 lt!69689 lt!69674))))

(declare-fun lt!69688 () Unit!4141)

(assert (=> b!133244 (= lt!69688 lt!69687)))

(declare-fun lt!69675 () ListLongMap!1653)

(assert (=> b!133244 (= lt!69675 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69283 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69673 () (_ BitVec 64))

(assert (=> b!133244 (= lt!69673 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69681 () (_ BitVec 64))

(assert (=> b!133244 (= lt!69681 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133244 (= lt!69685 (addApplyDifferent!92 lt!69675 lt!69673 (minValue!2719 newMap!16) lt!69681))))

(assert (=> b!133244 (= (apply!116 (+!169 lt!69675 (tuple2!2565 lt!69673 (minValue!2719 newMap!16))) lt!69681) (apply!116 lt!69675 lt!69681))))

(declare-fun b!133245 () Bool)

(declare-fun lt!69680 () ListLongMap!1653)

(assert (=> b!133245 (= e!86833 (= (apply!116 lt!69680 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 newMap!16)))))

(declare-fun b!133246 () Bool)

(declare-fun e!86831 () Bool)

(assert (=> b!133246 (= e!86831 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14680 () Bool)

(assert (=> bm!14680 (= call!14684 call!14683)))

(declare-fun bm!14681 () Bool)

(assert (=> bm!14681 (= call!14682 (contains!884 lt!69680 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133247 () Bool)

(declare-fun e!86832 () Bool)

(assert (=> b!133247 (= e!86832 e!86839)))

(declare-fun c!24678 () Bool)

(assert (=> b!133247 (= c!24678 (not (= (bvand lt!69283 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133248 () Bool)

(declare-fun e!86841 () Bool)

(assert (=> b!133248 (= e!86841 (= (apply!116 lt!69680 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133250 () Bool)

(declare-fun e!86830 () ListLongMap!1653)

(assert (=> b!133250 (= e!86830 call!14686)))

(declare-fun bm!14682 () Bool)

(declare-fun call!14688 () ListLongMap!1653)

(assert (=> bm!14682 (= call!14688 call!14685)))

(declare-fun bm!14683 () Bool)

(declare-fun call!14687 () Bool)

(assert (=> bm!14683 (= call!14687 (contains!884 lt!69680 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133251 () Bool)

(declare-fun c!24675 () Bool)

(assert (=> b!133251 (= c!24675 (and (not (= (bvand lt!69283 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!69283 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86836 () ListLongMap!1653)

(assert (=> b!133251 (= e!86836 e!86830)))

(declare-fun bm!14684 () Bool)

(assert (=> bm!14684 (= call!14686 call!14684)))

(declare-fun b!133252 () Bool)

(declare-fun e!86842 () Bool)

(assert (=> b!133252 (= e!86842 (= (apply!116 lt!69680 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133252 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (_values!2847 newMap!16))))))

(assert (=> b!133252 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133253 () Bool)

(declare-fun e!86835 () ListLongMap!1653)

(assert (=> b!133253 (= e!86835 e!86836)))

(assert (=> b!133253 (= c!24679 (and (not (= (bvand lt!69283 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!69283 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133254 () Bool)

(declare-fun e!86838 () Bool)

(assert (=> b!133254 (= e!86838 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133255 () Bool)

(assert (=> b!133255 (= e!86835 (+!169 call!14685 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun b!133256 () Bool)

(declare-fun e!86834 () Bool)

(assert (=> b!133256 (= e!86834 e!86842)))

(declare-fun res!64145 () Bool)

(assert (=> b!133256 (=> (not res!64145) (not e!86842))))

(assert (=> b!133256 (= res!64145 (contains!884 lt!69680 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133256 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun bm!14685 () Bool)

(assert (=> bm!14685 (= call!14683 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69283 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!133257 () Bool)

(assert (=> b!133257 (= e!86839 (not call!14682))))

(declare-fun b!133258 () Bool)

(assert (=> b!133258 (= e!86830 call!14688)))

(declare-fun b!133259 () Bool)

(declare-fun Unit!4160 () Unit!4141)

(assert (=> b!133259 (= e!86837 Unit!4160)))

(declare-fun b!133260 () Bool)

(declare-fun e!86840 () Bool)

(assert (=> b!133260 (= e!86840 e!86841)))

(declare-fun res!64147 () Bool)

(assert (=> b!133260 (= res!64147 call!14687)))

(assert (=> b!133260 (=> (not res!64147) (not e!86841))))

(declare-fun b!133261 () Bool)

(declare-fun res!64141 () Bool)

(assert (=> b!133261 (=> (not res!64141) (not e!86832))))

(assert (=> b!133261 (= res!64141 e!86834)))

(declare-fun res!64146 () Bool)

(assert (=> b!133261 (=> res!64146 e!86834)))

(assert (=> b!133261 (= res!64146 (not e!86838))))

(declare-fun res!64139 () Bool)

(assert (=> b!133261 (=> (not res!64139) (not e!86838))))

(assert (=> b!133261 (= res!64139 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133262 () Bool)

(declare-fun res!64142 () Bool)

(assert (=> b!133262 (=> (not res!64142) (not e!86832))))

(assert (=> b!133262 (= res!64142 e!86840)))

(declare-fun c!24676 () Bool)

(assert (=> b!133262 (= c!24676 (not (= (bvand lt!69283 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133263 () Bool)

(assert (=> b!133263 (= e!86836 call!14688)))

(declare-fun b!133249 () Bool)

(assert (=> b!133249 (= e!86840 (not call!14687))))

(declare-fun d!40589 () Bool)

(assert (=> d!40589 e!86832))

(declare-fun res!64143 () Bool)

(assert (=> d!40589 (=> (not res!64143) (not e!86832))))

(assert (=> d!40589 (= res!64143 (or (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))))

(declare-fun lt!69668 () ListLongMap!1653)

(assert (=> d!40589 (= lt!69680 lt!69668)))

(declare-fun lt!69672 () Unit!4141)

(assert (=> d!40589 (= lt!69672 e!86837)))

(declare-fun c!24674 () Bool)

(assert (=> d!40589 (= c!24674 e!86831)))

(declare-fun res!64140 () Bool)

(assert (=> d!40589 (=> (not res!64140) (not e!86831))))

(assert (=> d!40589 (= res!64140 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40589 (= lt!69668 e!86835)))

(assert (=> d!40589 (= c!24677 (and (not (= (bvand lt!69283 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!69283 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40589 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40589 (= (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69283 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69680)))

(assert (= (and d!40589 c!24677) b!133255))

(assert (= (and d!40589 (not c!24677)) b!133253))

(assert (= (and b!133253 c!24679) b!133263))

(assert (= (and b!133253 (not c!24679)) b!133251))

(assert (= (and b!133251 c!24675) b!133258))

(assert (= (and b!133251 (not c!24675)) b!133250))

(assert (= (or b!133258 b!133250) bm!14684))

(assert (= (or b!133263 bm!14684) bm!14680))

(assert (= (or b!133263 b!133258) bm!14682))

(assert (= (or b!133255 bm!14680) bm!14685))

(assert (= (or b!133255 bm!14682) bm!14679))

(assert (= (and d!40589 res!64140) b!133246))

(assert (= (and d!40589 c!24674) b!133244))

(assert (= (and d!40589 (not c!24674)) b!133259))

(assert (= (and d!40589 res!64143) b!133261))

(assert (= (and b!133261 res!64139) b!133254))

(assert (= (and b!133261 (not res!64146)) b!133256))

(assert (= (and b!133256 res!64145) b!133252))

(assert (= (and b!133261 res!64141) b!133262))

(assert (= (and b!133262 c!24676) b!133260))

(assert (= (and b!133262 (not c!24676)) b!133249))

(assert (= (and b!133260 res!64147) b!133248))

(assert (= (or b!133260 b!133249) bm!14683))

(assert (= (and b!133262 res!64142) b!133247))

(assert (= (and b!133247 c!24678) b!133243))

(assert (= (and b!133247 (not c!24678)) b!133257))

(assert (= (and b!133243 res!64144) b!133245))

(assert (= (or b!133243 b!133257) bm!14681))

(declare-fun b_lambda!5945 () Bool)

(assert (=> (not b_lambda!5945) (not b!133252)))

(assert (=> b!133252 t!6147))

(declare-fun b_and!8257 () Bool)

(assert (= b_and!8253 (and (=> t!6147 result!3993) b_and!8257)))

(assert (=> b!133252 t!6149))

(declare-fun b_and!8259 () Bool)

(assert (= b_and!8255 (and (=> t!6149 result!3995) b_and!8259)))

(assert (=> d!40589 m!156651))

(assert (=> b!133254 m!156679))

(assert (=> b!133254 m!156679))

(assert (=> b!133254 m!156689))

(declare-fun m!157259 () Bool)

(assert (=> b!133244 m!157259))

(assert (=> b!133244 m!156393))

(declare-fun m!157261 () Bool)

(assert (=> b!133244 m!157261))

(declare-fun m!157263 () Bool)

(assert (=> b!133244 m!157263))

(declare-fun m!157265 () Bool)

(assert (=> b!133244 m!157265))

(declare-fun m!157267 () Bool)

(assert (=> b!133244 m!157267))

(assert (=> b!133244 m!156679))

(declare-fun m!157269 () Bool)

(assert (=> b!133244 m!157269))

(assert (=> b!133244 m!156393))

(declare-fun m!157271 () Bool)

(assert (=> b!133244 m!157271))

(declare-fun m!157273 () Bool)

(assert (=> b!133244 m!157273))

(declare-fun m!157275 () Bool)

(assert (=> b!133244 m!157275))

(declare-fun m!157277 () Bool)

(assert (=> b!133244 m!157277))

(assert (=> b!133244 m!156393))

(declare-fun m!157279 () Bool)

(assert (=> b!133244 m!157279))

(assert (=> b!133244 m!157273))

(assert (=> b!133244 m!157267))

(declare-fun m!157281 () Bool)

(assert (=> b!133244 m!157281))

(declare-fun m!157283 () Bool)

(assert (=> b!133244 m!157283))

(declare-fun m!157285 () Bool)

(assert (=> b!133244 m!157285))

(assert (=> b!133244 m!157285))

(declare-fun m!157287 () Bool)

(assert (=> b!133244 m!157287))

(assert (=> b!133244 m!157265))

(declare-fun m!157289 () Bool)

(assert (=> b!133244 m!157289))

(assert (=> b!133252 m!156881))

(assert (=> b!133252 m!156809))

(assert (=> b!133252 m!156883))

(assert (=> b!133252 m!156809))

(assert (=> b!133252 m!156881))

(assert (=> b!133252 m!156679))

(assert (=> b!133252 m!156679))

(declare-fun m!157291 () Bool)

(assert (=> b!133252 m!157291))

(declare-fun m!157293 () Bool)

(assert (=> bm!14681 m!157293))

(declare-fun m!157295 () Bool)

(assert (=> bm!14679 m!157295))

(assert (=> b!133246 m!156679))

(assert (=> b!133246 m!156679))

(assert (=> b!133246 m!156689))

(declare-fun m!157297 () Bool)

(assert (=> b!133248 m!157297))

(assert (=> b!133256 m!156679))

(assert (=> b!133256 m!156679))

(declare-fun m!157299 () Bool)

(assert (=> b!133256 m!157299))

(assert (=> bm!14685 m!156393))

(assert (=> bm!14685 m!157279))

(declare-fun m!157301 () Bool)

(assert (=> bm!14683 m!157301))

(declare-fun m!157303 () Bool)

(assert (=> b!133255 m!157303))

(declare-fun m!157305 () Bool)

(assert (=> b!133245 m!157305))

(assert (=> d!40467 d!40589))

(declare-fun d!40591 () Bool)

(assert (=> d!40591 (= (validMask!0 (mask!7164 newMap!16)) (and (or (= (mask!7164 newMap!16) #b00000000000000000000000000000111) (= (mask!7164 newMap!16) #b00000000000000000000000000001111) (= (mask!7164 newMap!16) #b00000000000000000000000000011111) (= (mask!7164 newMap!16) #b00000000000000000000000000111111) (= (mask!7164 newMap!16) #b00000000000000000000000001111111) (= (mask!7164 newMap!16) #b00000000000000000000000011111111) (= (mask!7164 newMap!16) #b00000000000000000000000111111111) (= (mask!7164 newMap!16) #b00000000000000000000001111111111) (= (mask!7164 newMap!16) #b00000000000000000000011111111111) (= (mask!7164 newMap!16) #b00000000000000000000111111111111) (= (mask!7164 newMap!16) #b00000000000000000001111111111111) (= (mask!7164 newMap!16) #b00000000000000000011111111111111) (= (mask!7164 newMap!16) #b00000000000000000111111111111111) (= (mask!7164 newMap!16) #b00000000000000001111111111111111) (= (mask!7164 newMap!16) #b00000000000000011111111111111111) (= (mask!7164 newMap!16) #b00000000000000111111111111111111) (= (mask!7164 newMap!16) #b00000000000001111111111111111111) (= (mask!7164 newMap!16) #b00000000000011111111111111111111) (= (mask!7164 newMap!16) #b00000000000111111111111111111111) (= (mask!7164 newMap!16) #b00000000001111111111111111111111) (= (mask!7164 newMap!16) #b00000000011111111111111111111111) (= (mask!7164 newMap!16) #b00000000111111111111111111111111) (= (mask!7164 newMap!16) #b00000001111111111111111111111111) (= (mask!7164 newMap!16) #b00000011111111111111111111111111) (= (mask!7164 newMap!16) #b00000111111111111111111111111111) (= (mask!7164 newMap!16) #b00001111111111111111111111111111) (= (mask!7164 newMap!16) #b00011111111111111111111111111111) (= (mask!7164 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!7164 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!40467 d!40591))

(declare-fun b!133264 () Bool)

(assert (=> b!133264 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> b!133264 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2522 (_values!2847 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun lt!69694 () ListLongMap!1653)

(declare-fun e!86849 () Bool)

(assert (=> b!133264 (= e!86849 (= (apply!116 lt!69694 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133265 () Bool)

(declare-fun res!64150 () Bool)

(declare-fun e!86847 () Bool)

(assert (=> b!133265 (=> (not res!64150) (not e!86847))))

(assert (=> b!133265 (= res!64150 (not (contains!884 lt!69694 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133266 () Bool)

(declare-fun e!86844 () Bool)

(assert (=> b!133266 (= e!86844 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!133266 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!133267 () Bool)

(declare-fun e!86845 () Bool)

(declare-fun e!86846 () Bool)

(assert (=> b!133267 (= e!86845 e!86846)))

(declare-fun c!24683 () Bool)

(assert (=> b!133267 (= c!24683 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!133268 () Bool)

(assert (=> b!133268 (= e!86846 (= lt!69694 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun bm!14686 () Bool)

(declare-fun call!14689 () ListLongMap!1653)

(assert (=> bm!14686 (= call!14689 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!133269 () Bool)

(declare-fun e!86843 () ListLongMap!1653)

(assert (=> b!133269 (= e!86843 call!14689)))

(declare-fun b!133270 () Bool)

(declare-fun e!86848 () ListLongMap!1653)

(assert (=> b!133270 (= e!86848 e!86843)))

(declare-fun c!24680 () Bool)

(assert (=> b!133270 (= c!24680 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun d!40593 () Bool)

(assert (=> d!40593 e!86847))

(declare-fun res!64148 () Bool)

(assert (=> d!40593 (=> (not res!64148) (not e!86847))))

(assert (=> d!40593 (= res!64148 (not (contains!884 lt!69694 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40593 (= lt!69694 e!86848)))

(declare-fun c!24681 () Bool)

(assert (=> d!40593 (= c!24681 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!40593 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!40593 (= (getCurrentListMapNoExtraKeys!136 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992)))) lt!69694)))

(declare-fun b!133271 () Bool)

(assert (=> b!133271 (= e!86845 e!86849)))

(assert (=> b!133271 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun res!64149 () Bool)

(assert (=> b!133271 (= res!64149 (contains!884 lt!69694 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!133271 (=> (not res!64149) (not e!86849))))

(declare-fun b!133272 () Bool)

(assert (=> b!133272 (= e!86848 (ListLongMap!1654 Nil!1691))))

(declare-fun b!133273 () Bool)

(assert (=> b!133273 (= e!86846 (isEmpty!415 lt!69694))))

(declare-fun b!133274 () Bool)

(declare-fun lt!69691 () Unit!4141)

(declare-fun lt!69695 () Unit!4141)

(assert (=> b!133274 (= lt!69691 lt!69695)))

(declare-fun lt!69693 () V!3481)

(declare-fun lt!69692 () (_ BitVec 64))

(declare-fun lt!69696 () (_ BitVec 64))

(declare-fun lt!69690 () ListLongMap!1653)

(assert (=> b!133274 (not (contains!884 (+!169 lt!69690 (tuple2!2565 lt!69692 lt!69693)) lt!69696))))

(assert (=> b!133274 (= lt!69695 (addStillNotContains!63 lt!69690 lt!69692 lt!69693 lt!69696))))

(assert (=> b!133274 (= lt!69696 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133274 (= lt!69693 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133274 (= lt!69692 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!133274 (= lt!69690 call!14689)))

(assert (=> b!133274 (= e!86843 (+!169 call!14689 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133275 () Bool)

(assert (=> b!133275 (= e!86847 e!86845)))

(declare-fun c!24682 () Bool)

(assert (=> b!133275 (= c!24682 e!86844)))

(declare-fun res!64151 () Bool)

(assert (=> b!133275 (=> (not res!64151) (not e!86844))))

(assert (=> b!133275 (= res!64151 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!40593 c!24681) b!133272))

(assert (= (and d!40593 (not c!24681)) b!133270))

(assert (= (and b!133270 c!24680) b!133274))

(assert (= (and b!133270 (not c!24680)) b!133269))

(assert (= (or b!133274 b!133269) bm!14686))

(assert (= (and d!40593 res!64148) b!133265))

(assert (= (and b!133265 res!64150) b!133275))

(assert (= (and b!133275 res!64151) b!133266))

(assert (= (and b!133275 c!24682) b!133271))

(assert (= (and b!133275 (not c!24682)) b!133267))

(assert (= (and b!133271 res!64149) b!133264))

(assert (= (and b!133267 c!24683) b!133268))

(assert (= (and b!133267 (not c!24683)) b!133273))

(declare-fun b_lambda!5947 () Bool)

(assert (=> (not b_lambda!5947) (not b!133264)))

(assert (=> b!133264 t!6133))

(declare-fun b_and!8261 () Bool)

(assert (= b_and!8257 (and (=> t!6133 result!3973) b_and!8261)))

(assert (=> b!133264 t!6135))

(declare-fun b_and!8263 () Bool)

(assert (= b_and!8259 (and (=> t!6135 result!3977) b_and!8263)))

(declare-fun b_lambda!5949 () Bool)

(assert (=> (not b_lambda!5949) (not b!133274)))

(assert (=> b!133274 t!6133))

(declare-fun b_and!8265 () Bool)

(assert (= b_and!8261 (and (=> t!6133 result!3973) b_and!8265)))

(assert (=> b!133274 t!6135))

(declare-fun b_and!8267 () Bool)

(assert (= b_and!8263 (and (=> t!6135 result!3977) b_and!8267)))

(declare-fun m!157307 () Bool)

(assert (=> b!133273 m!157307))

(declare-fun m!157309 () Bool)

(assert (=> b!133270 m!157309))

(assert (=> b!133270 m!157309))

(declare-fun m!157311 () Bool)

(assert (=> b!133270 m!157311))

(assert (=> b!133266 m!157309))

(assert (=> b!133266 m!157309))

(assert (=> b!133266 m!157311))

(declare-fun m!157313 () Bool)

(assert (=> b!133268 m!157313))

(declare-fun m!157315 () Bool)

(assert (=> b!133265 m!157315))

(declare-fun m!157317 () Bool)

(assert (=> b!133274 m!157317))

(assert (=> b!133274 m!156391))

(declare-fun m!157319 () Bool)

(assert (=> b!133274 m!157319))

(declare-fun m!157321 () Bool)

(assert (=> b!133274 m!157321))

(declare-fun m!157323 () Bool)

(assert (=> b!133274 m!157323))

(assert (=> b!133274 m!157317))

(declare-fun m!157325 () Bool)

(assert (=> b!133274 m!157325))

(assert (=> b!133274 m!157321))

(declare-fun m!157327 () Bool)

(assert (=> b!133274 m!157327))

(assert (=> b!133274 m!157309))

(assert (=> b!133274 m!156391))

(assert (=> b!133271 m!157309))

(assert (=> b!133271 m!157309))

(declare-fun m!157329 () Bool)

(assert (=> b!133271 m!157329))

(declare-fun m!157331 () Bool)

(assert (=> d!40593 m!157331))

(assert (=> d!40593 m!156405))

(assert (=> bm!14686 m!157313))

(assert (=> b!133264 m!157317))

(assert (=> b!133264 m!156391))

(assert (=> b!133264 m!157319))

(assert (=> b!133264 m!157317))

(assert (=> b!133264 m!157309))

(declare-fun m!157333 () Bool)

(assert (=> b!133264 m!157333))

(assert (=> b!133264 m!157309))

(assert (=> b!133264 m!156391))

(assert (=> b!133011 d!40593))

(declare-fun d!40595 () Bool)

(declare-fun res!64152 () Bool)

(declare-fun e!86850 () Bool)

(assert (=> d!40595 (=> res!64152 e!86850)))

(assert (=> d!40595 (= res!64152 (and ((_ is Cons!1690) (toList!842 lt!69344)) (= (_1!1293 (h!2295 (toList!842 lt!69344))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40595 (= (containsKey!176 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000) e!86850)))

(declare-fun b!133276 () Bool)

(declare-fun e!86851 () Bool)

(assert (=> b!133276 (= e!86850 e!86851)))

(declare-fun res!64153 () Bool)

(assert (=> b!133276 (=> (not res!64153) (not e!86851))))

(assert (=> b!133276 (= res!64153 (and (or (not ((_ is Cons!1690) (toList!842 lt!69344))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69344))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1690) (toList!842 lt!69344)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69344))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133277 () Bool)

(assert (=> b!133277 (= e!86851 (containsKey!176 (t!6137 (toList!842 lt!69344)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40595 (not res!64152)) b!133276))

(assert (= (and b!133276 res!64153) b!133277))

(declare-fun m!157335 () Bool)

(assert (=> b!133277 m!157335))

(assert (=> d!40575 d!40595))

(declare-fun d!40597 () Bool)

(assert (=> d!40597 (= (get!1492 (getValueByKey!173 (toList!842 lt!69341) lt!69343)) (v!3203 (getValueByKey!173 (toList!842 lt!69341) lt!69343)))))

(assert (=> d!40551 d!40597))

(declare-fun b!133279 () Bool)

(declare-fun e!86852 () Option!179)

(declare-fun e!86853 () Option!179)

(assert (=> b!133279 (= e!86852 e!86853)))

(declare-fun c!24685 () Bool)

(assert (=> b!133279 (= c!24685 (and ((_ is Cons!1690) (toList!842 lt!69341)) (not (= (_1!1293 (h!2295 (toList!842 lt!69341))) lt!69343))))))

(declare-fun b!133278 () Bool)

(assert (=> b!133278 (= e!86852 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69341)))))))

(declare-fun d!40599 () Bool)

(declare-fun c!24684 () Bool)

(assert (=> d!40599 (= c!24684 (and ((_ is Cons!1690) (toList!842 lt!69341)) (= (_1!1293 (h!2295 (toList!842 lt!69341))) lt!69343)))))

(assert (=> d!40599 (= (getValueByKey!173 (toList!842 lt!69341) lt!69343) e!86852)))

(declare-fun b!133281 () Bool)

(assert (=> b!133281 (= e!86853 None!177)))

(declare-fun b!133280 () Bool)

(assert (=> b!133280 (= e!86853 (getValueByKey!173 (t!6137 (toList!842 lt!69341)) lt!69343))))

(assert (= (and d!40599 c!24684) b!133278))

(assert (= (and d!40599 (not c!24684)) b!133279))

(assert (= (and b!133279 c!24685) b!133280))

(assert (= (and b!133279 (not c!24685)) b!133281))

(declare-fun m!157337 () Bool)

(assert (=> b!133280 m!157337))

(assert (=> d!40551 d!40599))

(declare-fun d!40601 () Bool)

(assert (=> d!40601 (isDefined!125 (getValueByKey!173 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun lt!69697 () Unit!4141)

(assert (=> d!40601 (= lt!69697 (choose!831 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun e!86854 () Bool)

(assert (=> d!40601 e!86854))

(declare-fun res!64154 () Bool)

(assert (=> d!40601 (=> (not res!64154) (not e!86854))))

(assert (=> d!40601 (= res!64154 (isStrictlySorted!309 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))))

(assert (=> d!40601 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) lt!69697)))

(declare-fun b!133282 () Bool)

(assert (=> b!133282 (= e!86854 (containsKey!176 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40601 res!64154) b!133282))

(assert (=> d!40601 m!156395))

(assert (=> d!40601 m!156959))

(assert (=> d!40601 m!156959))

(assert (=> d!40601 m!156961))

(assert (=> d!40601 m!156395))

(declare-fun m!157339 () Bool)

(assert (=> d!40601 m!157339))

(declare-fun m!157341 () Bool)

(assert (=> d!40601 m!157341))

(assert (=> b!133282 m!156395))

(assert (=> b!133282 m!156955))

(assert (=> b!133095 d!40601))

(declare-fun d!40603 () Bool)

(assert (=> d!40603 (= (isDefined!125 (getValueByKey!173 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))) (not (isEmpty!416 (getValueByKey!173 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun bs!5524 () Bool)

(assert (= bs!5524 d!40603))

(assert (=> bs!5524 m!156959))

(declare-fun m!157343 () Bool)

(assert (=> bs!5524 m!157343))

(assert (=> b!133095 d!40603))

(declare-fun b!133284 () Bool)

(declare-fun e!86855 () Option!179)

(declare-fun e!86856 () Option!179)

(assert (=> b!133284 (= e!86855 e!86856)))

(declare-fun c!24687 () Bool)

(assert (=> b!133284 (= c!24687 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (not (= (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun b!133283 () Bool)

(assert (=> b!133283 (= e!86855 (Some!178 (_2!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))))))

(declare-fun c!24686 () Bool)

(declare-fun d!40605 () Bool)

(assert (=> d!40605 (= c!24686 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40605 (= (getValueByKey!173 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!86855)))

(declare-fun b!133286 () Bool)

(assert (=> b!133286 (= e!86856 None!177)))

(declare-fun b!133285 () Bool)

(assert (=> b!133285 (= e!86856 (getValueByKey!173 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40605 c!24686) b!133283))

(assert (= (and d!40605 (not c!24686)) b!133284))

(assert (= (and b!133284 c!24687) b!133285))

(assert (= (and b!133284 (not c!24687)) b!133286))

(assert (=> b!133285 m!156395))

(declare-fun m!157345 () Bool)

(assert (=> b!133285 m!157345))

(assert (=> b!133095 d!40605))

(declare-fun d!40607 () Bool)

(assert (=> d!40607 (= (isEmpty!416 (getValueByKey!173 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))) (not ((_ is Some!178) (getValueByKey!173 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))))

(assert (=> d!40569 d!40607))

(declare-fun b!133287 () Bool)

(assert (=> b!133287 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> b!133287 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (ite c!24553 (_values!2847 newMap!16) lt!69268))))))

(declare-fun e!86863 () Bool)

(declare-fun lt!69702 () ListLongMap!1653)

(assert (=> b!133287 (= e!86863 (= (apply!116 lt!69702 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133288 () Bool)

(declare-fun res!64157 () Bool)

(declare-fun e!86861 () Bool)

(assert (=> b!133288 (=> (not res!64157) (not e!86861))))

(assert (=> b!133288 (= res!64157 (not (contains!884 lt!69702 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133289 () Bool)

(declare-fun e!86858 () Bool)

(assert (=> b!133289 (= e!86858 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133289 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!133290 () Bool)

(declare-fun e!86859 () Bool)

(declare-fun e!86860 () Bool)

(assert (=> b!133290 (= e!86859 e!86860)))

(declare-fun c!24691 () Bool)

(assert (=> b!133290 (= c!24691 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133291 () Bool)

(assert (=> b!133291 (= e!86860 (= lt!69702 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite c!24553 (_values!2847 newMap!16) lt!69268) (mask!7164 newMap!16) (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun call!14690 () ListLongMap!1653)

(declare-fun bm!14687 () Bool)

(assert (=> bm!14687 (= call!14690 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite c!24553 (_values!2847 newMap!16) lt!69268) (mask!7164 newMap!16) (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!133292 () Bool)

(declare-fun e!86857 () ListLongMap!1653)

(assert (=> b!133292 (= e!86857 call!14690)))

(declare-fun b!133293 () Bool)

(declare-fun e!86862 () ListLongMap!1653)

(assert (=> b!133293 (= e!86862 e!86857)))

(declare-fun c!24688 () Bool)

(assert (=> b!133293 (= c!24688 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!40609 () Bool)

(assert (=> d!40609 e!86861))

(declare-fun res!64155 () Bool)

(assert (=> d!40609 (=> (not res!64155) (not e!86861))))

(assert (=> d!40609 (= res!64155 (not (contains!884 lt!69702 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40609 (= lt!69702 e!86862)))

(declare-fun c!24689 () Bool)

(assert (=> d!40609 (= c!24689 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40609 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40609 (= (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite c!24553 (_values!2847 newMap!16) lt!69268) (mask!7164 newMap!16) (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69702)))

(declare-fun b!133294 () Bool)

(assert (=> b!133294 (= e!86859 e!86863)))

(assert (=> b!133294 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!64156 () Bool)

(assert (=> b!133294 (= res!64156 (contains!884 lt!69702 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133294 (=> (not res!64156) (not e!86863))))

(declare-fun b!133295 () Bool)

(assert (=> b!133295 (= e!86862 (ListLongMap!1654 Nil!1691))))

(declare-fun b!133296 () Bool)

(assert (=> b!133296 (= e!86860 (isEmpty!415 lt!69702))))

(declare-fun b!133297 () Bool)

(declare-fun lt!69699 () Unit!4141)

(declare-fun lt!69703 () Unit!4141)

(assert (=> b!133297 (= lt!69699 lt!69703)))

(declare-fun lt!69701 () V!3481)

(declare-fun lt!69700 () (_ BitVec 64))

(declare-fun lt!69704 () (_ BitVec 64))

(declare-fun lt!69698 () ListLongMap!1653)

(assert (=> b!133297 (not (contains!884 (+!169 lt!69698 (tuple2!2565 lt!69700 lt!69701)) lt!69704))))

(assert (=> b!133297 (= lt!69703 (addStillNotContains!63 lt!69698 lt!69700 lt!69701 lt!69704))))

(assert (=> b!133297 (= lt!69704 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133297 (= lt!69701 (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133297 (= lt!69700 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133297 (= lt!69698 call!14690)))

(assert (=> b!133297 (= e!86857 (+!169 call!14690 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133298 () Bool)

(assert (=> b!133298 (= e!86861 e!86859)))

(declare-fun c!24690 () Bool)

(assert (=> b!133298 (= c!24690 e!86858)))

(declare-fun res!64158 () Bool)

(assert (=> b!133298 (=> (not res!64158) (not e!86858))))

(assert (=> b!133298 (= res!64158 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (= (and d!40609 c!24689) b!133295))

(assert (= (and d!40609 (not c!24689)) b!133293))

(assert (= (and b!133293 c!24688) b!133297))

(assert (= (and b!133293 (not c!24688)) b!133292))

(assert (= (or b!133297 b!133292) bm!14687))

(assert (= (and d!40609 res!64155) b!133288))

(assert (= (and b!133288 res!64157) b!133298))

(assert (= (and b!133298 res!64158) b!133289))

(assert (= (and b!133298 c!24690) b!133294))

(assert (= (and b!133298 (not c!24690)) b!133290))

(assert (= (and b!133294 res!64156) b!133287))

(assert (= (and b!133290 c!24691) b!133291))

(assert (= (and b!133290 (not c!24691)) b!133296))

(declare-fun b_lambda!5951 () Bool)

(assert (=> (not b_lambda!5951) (not b!133287)))

(assert (=> b!133287 t!6147))

(declare-fun b_and!8269 () Bool)

(assert (= b_and!8265 (and (=> t!6147 result!3993) b_and!8269)))

(assert (=> b!133287 t!6149))

(declare-fun b_and!8271 () Bool)

(assert (= b_and!8267 (and (=> t!6149 result!3995) b_and!8271)))

(declare-fun b_lambda!5953 () Bool)

(assert (=> (not b_lambda!5953) (not b!133297)))

(assert (=> b!133297 t!6147))

(declare-fun b_and!8273 () Bool)

(assert (= b_and!8269 (and (=> t!6147 result!3993) b_and!8273)))

(assert (=> b!133297 t!6149))

(declare-fun b_and!8275 () Bool)

(assert (= b_and!8271 (and (=> t!6149 result!3995) b_and!8275)))

(declare-fun m!157347 () Bool)

(assert (=> b!133296 m!157347))

(assert (=> b!133293 m!156679))

(assert (=> b!133293 m!156679))

(assert (=> b!133293 m!156689))

(assert (=> b!133289 m!156679))

(assert (=> b!133289 m!156679))

(assert (=> b!133289 m!156689))

(declare-fun m!157349 () Bool)

(assert (=> b!133291 m!157349))

(declare-fun m!157351 () Bool)

(assert (=> b!133288 m!157351))

(assert (=> b!133297 m!156807))

(assert (=> b!133297 m!156809))

(assert (=> b!133297 m!156811))

(declare-fun m!157353 () Bool)

(assert (=> b!133297 m!157353))

(declare-fun m!157355 () Bool)

(assert (=> b!133297 m!157355))

(assert (=> b!133297 m!156807))

(declare-fun m!157357 () Bool)

(assert (=> b!133297 m!157357))

(assert (=> b!133297 m!157353))

(declare-fun m!157359 () Bool)

(assert (=> b!133297 m!157359))

(assert (=> b!133297 m!156679))

(assert (=> b!133297 m!156809))

(assert (=> b!133294 m!156679))

(assert (=> b!133294 m!156679))

(declare-fun m!157361 () Bool)

(assert (=> b!133294 m!157361))

(declare-fun m!157363 () Bool)

(assert (=> d!40609 m!157363))

(assert (=> d!40609 m!156651))

(assert (=> bm!14687 m!157349))

(assert (=> b!133287 m!156807))

(assert (=> b!133287 m!156809))

(assert (=> b!133287 m!156811))

(assert (=> b!133287 m!156807))

(assert (=> b!133287 m!156679))

(declare-fun m!157365 () Bool)

(assert (=> b!133287 m!157365))

(assert (=> b!133287 m!156679))

(assert (=> b!133287 m!156809))

(assert (=> bm!14651 d!40609))

(declare-fun d!40611 () Bool)

(assert (=> d!40611 (= (get!1490 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3197 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!133073 d!40611))

(declare-fun d!40613 () Bool)

(declare-fun e!86864 () Bool)

(assert (=> d!40613 e!86864))

(declare-fun res!64160 () Bool)

(assert (=> d!40613 (=> (not res!64160) (not e!86864))))

(declare-fun lt!69707 () ListLongMap!1653)

(assert (=> d!40613 (= res!64160 (contains!884 lt!69707 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun lt!69708 () List!1694)

(assert (=> d!40613 (= lt!69707 (ListLongMap!1654 lt!69708))))

(declare-fun lt!69705 () Unit!4141)

(declare-fun lt!69706 () Unit!4141)

(assert (=> d!40613 (= lt!69705 lt!69706)))

(assert (=> d!40613 (= (getValueByKey!173 lt!69708 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!40613 (= lt!69706 (lemmaContainsTupThenGetReturnValue!88 lt!69708 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!40613 (= lt!69708 (insertStrictlySorted!91 (toList!842 call!14665) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!40613 (= (+!169 call!14665 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69707)))

(declare-fun b!133299 () Bool)

(declare-fun res!64159 () Bool)

(assert (=> b!133299 (=> (not res!64159) (not e!86864))))

(assert (=> b!133299 (= res!64159 (= (getValueByKey!173 (toList!842 lt!69707) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!133300 () Bool)

(assert (=> b!133300 (= e!86864 (contains!886 (toList!842 lt!69707) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(assert (= (and d!40613 res!64160) b!133299))

(assert (= (and b!133299 res!64159) b!133300))

(declare-fun m!157367 () Bool)

(assert (=> d!40613 m!157367))

(declare-fun m!157369 () Bool)

(assert (=> d!40613 m!157369))

(declare-fun m!157371 () Bool)

(assert (=> d!40613 m!157371))

(declare-fun m!157373 () Bool)

(assert (=> d!40613 m!157373))

(declare-fun m!157375 () Bool)

(assert (=> b!133299 m!157375))

(declare-fun m!157377 () Bool)

(assert (=> b!133300 m!157377))

(assert (=> b!133110 d!40613))

(declare-fun d!40615 () Bool)

(assert (=> d!40615 (= (apply!116 lt!69486 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1492 (getValueByKey!173 (toList!842 lt!69486) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5525 () Bool)

(assert (= bs!5525 d!40615))

(assert (=> bs!5525 m!156581))

(declare-fun m!157379 () Bool)

(assert (=> bs!5525 m!157379))

(assert (=> bs!5525 m!157379))

(declare-fun m!157381 () Bool)

(assert (=> bs!5525 m!157381))

(assert (=> b!133007 d!40615))

(assert (=> b!133007 d!40485))

(declare-fun b!133302 () Bool)

(declare-fun e!86865 () Option!179)

(declare-fun e!86866 () Option!179)

(assert (=> b!133302 (= e!86865 e!86866)))

(declare-fun c!24693 () Bool)

(assert (=> b!133302 (= c!24693 (and ((_ is Cons!1690) (toList!842 lt!69373)) (not (= (_1!1293 (h!2295 (toList!842 lt!69373))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!133301 () Bool)

(assert (=> b!133301 (= e!86865 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69373)))))))

(declare-fun d!40617 () Bool)

(declare-fun c!24692 () Bool)

(assert (=> d!40617 (= c!24692 (and ((_ is Cons!1690) (toList!842 lt!69373)) (= (_1!1293 (h!2295 (toList!842 lt!69373))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!40617 (= (getValueByKey!173 (toList!842 lt!69373) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!86865)))

(declare-fun b!133304 () Bool)

(assert (=> b!133304 (= e!86866 None!177)))

(declare-fun b!133303 () Bool)

(assert (=> b!133303 (= e!86866 (getValueByKey!173 (t!6137 (toList!842 lt!69373)) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!40617 c!24692) b!133301))

(assert (= (and d!40617 (not c!24692)) b!133302))

(assert (= (and b!133302 c!24693) b!133303))

(assert (= (and b!133302 (not c!24693)) b!133304))

(declare-fun m!157383 () Bool)

(assert (=> b!133303 m!157383))

(assert (=> b!132920 d!40617))

(declare-fun b!133307 () Bool)

(declare-fun res!64162 () Bool)

(declare-fun e!86867 () Bool)

(assert (=> b!133307 (=> (not res!64162) (not e!86867))))

(assert (=> b!133307 (= res!64162 (= (size!2527 (_2!1294 lt!69280)) (bvadd (_size!597 (_2!1294 lt!69280)) (bvsdiv (bvadd (extraKeys!2629 (_2!1294 lt!69280)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!133305 () Bool)

(declare-fun res!64163 () Bool)

(assert (=> b!133305 (=> (not res!64163) (not e!86867))))

(assert (=> b!133305 (= res!64163 (and (= (size!2522 (_values!2847 (_2!1294 lt!69280))) (bvadd (mask!7164 (_2!1294 lt!69280)) #b00000000000000000000000000000001)) (= (size!2521 (_keys!4613 (_2!1294 lt!69280))) (size!2522 (_values!2847 (_2!1294 lt!69280)))) (bvsge (_size!597 (_2!1294 lt!69280)) #b00000000000000000000000000000000) (bvsle (_size!597 (_2!1294 lt!69280)) (bvadd (mask!7164 (_2!1294 lt!69280)) #b00000000000000000000000000000001))))))

(declare-fun d!40619 () Bool)

(declare-fun res!64164 () Bool)

(assert (=> d!40619 (=> (not res!64164) (not e!86867))))

(assert (=> d!40619 (= res!64164 (validMask!0 (mask!7164 (_2!1294 lt!69280))))))

(assert (=> d!40619 (= (simpleValid!92 (_2!1294 lt!69280)) e!86867)))

(declare-fun b!133308 () Bool)

(assert (=> b!133308 (= e!86867 (and (bvsge (extraKeys!2629 (_2!1294 lt!69280)) #b00000000000000000000000000000000) (bvsle (extraKeys!2629 (_2!1294 lt!69280)) #b00000000000000000000000000000011) (bvsge (_vacant!597 (_2!1294 lt!69280)) #b00000000000000000000000000000000)))))

(declare-fun b!133306 () Bool)

(declare-fun res!64161 () Bool)

(assert (=> b!133306 (=> (not res!64161) (not e!86867))))

(assert (=> b!133306 (= res!64161 (bvsge (size!2527 (_2!1294 lt!69280)) (_size!597 (_2!1294 lt!69280))))))

(assert (= (and d!40619 res!64164) b!133305))

(assert (= (and b!133305 res!64163) b!133306))

(assert (= (and b!133306 res!64161) b!133307))

(assert (= (and b!133307 res!64162) b!133308))

(declare-fun m!157385 () Bool)

(assert (=> b!133307 m!157385))

(declare-fun m!157387 () Bool)

(assert (=> d!40619 m!157387))

(assert (=> b!133306 m!157385))

(assert (=> d!40477 d!40619))

(declare-fun d!40621 () Bool)

(assert (=> d!40621 (= (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133154 d!40621))

(declare-fun d!40623 () Bool)

(assert (=> d!40623 (= (apply!116 lt!69504 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1492 (getValueByKey!173 (toList!842 lt!69504) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5526 () Bool)

(assert (= bs!5526 d!40623))

(assert (=> bs!5526 m!156679))

(declare-fun m!157389 () Bool)

(assert (=> bs!5526 m!157389))

(assert (=> bs!5526 m!157389))

(declare-fun m!157391 () Bool)

(assert (=> bs!5526 m!157391))

(assert (=> b!133028 d!40623))

(declare-fun c!24694 () Bool)

(declare-fun d!40625 () Bool)

(assert (=> d!40625 (= c!24694 ((_ is ValueCellFull!1094) (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000)))))

(declare-fun e!86868 () V!3481)

(assert (=> d!40625 (= (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!86868)))

(declare-fun b!133309 () Bool)

(assert (=> b!133309 (= e!86868 (get!1490 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133310 () Bool)

(assert (=> b!133310 (= e!86868 (get!1491 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40625 c!24694) b!133309))

(assert (= (and d!40625 (not c!24694)) b!133310))

(assert (=> b!133309 m!156807))

(assert (=> b!133309 m!156809))

(declare-fun m!157393 () Bool)

(assert (=> b!133309 m!157393))

(assert (=> b!133310 m!156807))

(assert (=> b!133310 m!156809))

(declare-fun m!157395 () Bool)

(assert (=> b!133310 m!157395))

(assert (=> b!133028 d!40625))

(declare-fun d!40627 () Bool)

(declare-fun e!86870 () Bool)

(assert (=> d!40627 e!86870))

(declare-fun res!64165 () Bool)

(assert (=> d!40627 (=> res!64165 e!86870)))

(declare-fun lt!69709 () Bool)

(assert (=> d!40627 (= res!64165 (not lt!69709))))

(declare-fun lt!69710 () Bool)

(assert (=> d!40627 (= lt!69709 lt!69710)))

(declare-fun lt!69711 () Unit!4141)

(declare-fun e!86869 () Unit!4141)

(assert (=> d!40627 (= lt!69711 e!86869)))

(declare-fun c!24695 () Bool)

(assert (=> d!40627 (= c!24695 lt!69710)))

(assert (=> d!40627 (= lt!69710 (containsKey!176 (toList!842 lt!69373) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40627 (= (contains!884 lt!69373 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!69709)))

(declare-fun b!133311 () Bool)

(declare-fun lt!69712 () Unit!4141)

(assert (=> b!133311 (= e!86869 lt!69712)))

(assert (=> b!133311 (= lt!69712 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69373) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!133311 (isDefined!125 (getValueByKey!173 (toList!842 lt!69373) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133312 () Bool)

(declare-fun Unit!4161 () Unit!4141)

(assert (=> b!133312 (= e!86869 Unit!4161)))

(declare-fun b!133313 () Bool)

(assert (=> b!133313 (= e!86870 (isDefined!125 (getValueByKey!173 (toList!842 lt!69373) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!40627 c!24695) b!133311))

(assert (= (and d!40627 (not c!24695)) b!133312))

(assert (= (and d!40627 (not res!64165)) b!133313))

(declare-fun m!157397 () Bool)

(assert (=> d!40627 m!157397))

(declare-fun m!157399 () Bool)

(assert (=> b!133311 m!157399))

(assert (=> b!133311 m!156675))

(assert (=> b!133311 m!156675))

(declare-fun m!157401 () Bool)

(assert (=> b!133311 m!157401))

(assert (=> b!133313 m!156675))

(assert (=> b!133313 m!156675))

(assert (=> b!133313 m!157401))

(assert (=> d!40457 d!40627))

(declare-fun b!133315 () Bool)

(declare-fun e!86871 () Option!179)

(declare-fun e!86872 () Option!179)

(assert (=> b!133315 (= e!86871 e!86872)))

(declare-fun c!24697 () Bool)

(assert (=> b!133315 (= c!24697 (and ((_ is Cons!1690) lt!69374) (not (= (_1!1293 (h!2295 lt!69374)) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!133314 () Bool)

(assert (=> b!133314 (= e!86871 (Some!178 (_2!1293 (h!2295 lt!69374))))))

(declare-fun c!24696 () Bool)

(declare-fun d!40629 () Bool)

(assert (=> d!40629 (= c!24696 (and ((_ is Cons!1690) lt!69374) (= (_1!1293 (h!2295 lt!69374)) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!40629 (= (getValueByKey!173 lt!69374 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!86871)))

(declare-fun b!133317 () Bool)

(assert (=> b!133317 (= e!86872 None!177)))

(declare-fun b!133316 () Bool)

(assert (=> b!133316 (= e!86872 (getValueByKey!173 (t!6137 lt!69374) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!40629 c!24696) b!133314))

(assert (= (and d!40629 (not c!24696)) b!133315))

(assert (= (and b!133315 c!24697) b!133316))

(assert (= (and b!133315 (not c!24697)) b!133317))

(declare-fun m!157403 () Bool)

(assert (=> b!133316 m!157403))

(assert (=> d!40457 d!40629))

(declare-fun d!40631 () Bool)

(assert (=> d!40631 (= (getValueByKey!173 lt!69374 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!178 (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!69715 () Unit!4141)

(declare-fun choose!833 (List!1694 (_ BitVec 64) V!3481) Unit!4141)

(assert (=> d!40631 (= lt!69715 (choose!833 lt!69374 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!86875 () Bool)

(assert (=> d!40631 e!86875))

(declare-fun res!64170 () Bool)

(assert (=> d!40631 (=> (not res!64170) (not e!86875))))

(assert (=> d!40631 (= res!64170 (isStrictlySorted!309 lt!69374))))

(assert (=> d!40631 (= (lemmaContainsTupThenGetReturnValue!88 lt!69374 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!69715)))

(declare-fun b!133322 () Bool)

(declare-fun res!64171 () Bool)

(assert (=> b!133322 (=> (not res!64171) (not e!86875))))

(assert (=> b!133322 (= res!64171 (containsKey!176 lt!69374 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133323 () Bool)

(assert (=> b!133323 (= e!86875 (contains!886 lt!69374 (tuple2!2565 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!40631 res!64170) b!133322))

(assert (= (and b!133322 res!64171) b!133323))

(assert (=> d!40631 m!156669))

(declare-fun m!157405 () Bool)

(assert (=> d!40631 m!157405))

(declare-fun m!157407 () Bool)

(assert (=> d!40631 m!157407))

(declare-fun m!157409 () Bool)

(assert (=> b!133322 m!157409))

(declare-fun m!157411 () Bool)

(assert (=> b!133323 m!157411))

(assert (=> d!40457 d!40631))

(declare-fun b!133344 () Bool)

(declare-fun res!64176 () Bool)

(declare-fun e!86890 () Bool)

(assert (=> b!133344 (=> (not res!64176) (not e!86890))))

(declare-fun lt!69718 () List!1694)

(assert (=> b!133344 (= res!64176 (containsKey!176 lt!69718 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133345 () Bool)

(declare-fun e!86888 () List!1694)

(declare-fun e!86889 () List!1694)

(assert (=> b!133345 (= e!86888 e!86889)))

(declare-fun c!24709 () Bool)

(assert (=> b!133345 (= c!24709 (and ((_ is Cons!1690) (toList!842 e!86561)) (= (_1!1293 (h!2295 (toList!842 e!86561))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bm!14694 () Bool)

(declare-fun call!14698 () List!1694)

(declare-fun call!14697 () List!1694)

(assert (=> bm!14694 (= call!14698 call!14697)))

(declare-fun b!133346 () Bool)

(declare-fun e!86886 () List!1694)

(assert (=> b!133346 (= e!86886 call!14698)))

(declare-fun b!133347 () Bool)

(declare-fun c!24708 () Bool)

(assert (=> b!133347 (= c!24708 (and ((_ is Cons!1690) (toList!842 e!86561)) (bvsgt (_1!1293 (h!2295 (toList!842 e!86561))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!133347 (= e!86889 e!86886)))

(declare-fun b!133348 () Bool)

(assert (=> b!133348 (= e!86890 (contains!886 lt!69718 (tuple2!2565 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!133349 () Bool)

(assert (=> b!133349 (= e!86889 call!14697)))

(declare-fun d!40633 () Bool)

(assert (=> d!40633 e!86890))

(declare-fun res!64177 () Bool)

(assert (=> d!40633 (=> (not res!64177) (not e!86890))))

(assert (=> d!40633 (= res!64177 (isStrictlySorted!309 lt!69718))))

(assert (=> d!40633 (= lt!69718 e!86888)))

(declare-fun c!24707 () Bool)

(assert (=> d!40633 (= c!24707 (and ((_ is Cons!1690) (toList!842 e!86561)) (bvslt (_1!1293 (h!2295 (toList!842 e!86561))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!40633 (isStrictlySorted!309 (toList!842 e!86561))))

(assert (=> d!40633 (= (insertStrictlySorted!91 (toList!842 e!86561) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!69718)))

(declare-fun e!86887 () List!1694)

(declare-fun b!133350 () Bool)

(assert (=> b!133350 (= e!86887 (ite c!24709 (t!6137 (toList!842 e!86561)) (ite c!24708 (Cons!1690 (h!2295 (toList!842 e!86561)) (t!6137 (toList!842 e!86561))) Nil!1691)))))

(declare-fun b!133351 () Bool)

(declare-fun call!14699 () List!1694)

(assert (=> b!133351 (= e!86888 call!14699)))

(declare-fun b!133352 () Bool)

(assert (=> b!133352 (= e!86886 call!14698)))

(declare-fun b!133353 () Bool)

(assert (=> b!133353 (= e!86887 (insertStrictlySorted!91 (t!6137 (toList!842 e!86561)) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14695 () Bool)

(assert (=> bm!14695 (= call!14697 call!14699)))

(declare-fun bm!14696 () Bool)

(declare-fun $colon$colon!91 (List!1694 tuple2!2564) List!1694)

(assert (=> bm!14696 (= call!14699 ($colon$colon!91 e!86887 (ite c!24707 (h!2295 (toList!842 e!86561)) (tuple2!2565 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!24706 () Bool)

(assert (=> bm!14696 (= c!24706 c!24707)))

(assert (= (and d!40633 c!24707) b!133351))

(assert (= (and d!40633 (not c!24707)) b!133345))

(assert (= (and b!133345 c!24709) b!133349))

(assert (= (and b!133345 (not c!24709)) b!133347))

(assert (= (and b!133347 c!24708) b!133352))

(assert (= (and b!133347 (not c!24708)) b!133346))

(assert (= (or b!133352 b!133346) bm!14694))

(assert (= (or b!133349 bm!14694) bm!14695))

(assert (= (or b!133351 bm!14695) bm!14696))

(assert (= (and bm!14696 c!24706) b!133353))

(assert (= (and bm!14696 (not c!24706)) b!133350))

(assert (= (and d!40633 res!64177) b!133344))

(assert (= (and b!133344 res!64176) b!133348))

(declare-fun m!157413 () Bool)

(assert (=> b!133348 m!157413))

(declare-fun m!157415 () Bool)

(assert (=> b!133353 m!157415))

(declare-fun m!157417 () Bool)

(assert (=> bm!14696 m!157417))

(declare-fun m!157419 () Bool)

(assert (=> b!133344 m!157419))

(declare-fun m!157421 () Bool)

(assert (=> d!40633 m!157421))

(declare-fun m!157423 () Bool)

(assert (=> d!40633 m!157423))

(assert (=> d!40457 d!40633))

(declare-fun d!40635 () Bool)

(assert (=> d!40635 (= (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334)) (not (isEmpty!416 (getValueByKey!173 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334))))))

(declare-fun bs!5527 () Bool)

(assert (= bs!5527 d!40635))

(assert (=> bs!5527 m!157097))

(declare-fun m!157425 () Bool)

(assert (=> bs!5527 m!157425))

(assert (=> b!133189 d!40635))

(declare-fun b!133355 () Bool)

(declare-fun e!86891 () Option!179)

(declare-fun e!86892 () Option!179)

(assert (=> b!133355 (= e!86891 e!86892)))

(declare-fun c!24711 () Bool)

(assert (=> b!133355 (= c!24711 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69334))))))

(declare-fun b!133354 () Bool)

(assert (=> b!133354 (= e!86891 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))))

(declare-fun d!40637 () Bool)

(declare-fun c!24710 () Bool)

(assert (=> d!40637 (= c!24710 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69334)))))

(assert (=> d!40637 (= (getValueByKey!173 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334) e!86891)))

(declare-fun b!133357 () Bool)

(assert (=> b!133357 (= e!86892 None!177)))

(declare-fun b!133356 () Bool)

(assert (=> b!133356 (= e!86892 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!69334))))

(assert (= (and d!40637 c!24710) b!133354))

(assert (= (and d!40637 (not c!24710)) b!133355))

(assert (= (and b!133355 c!24711) b!133356))

(assert (= (and b!133355 (not c!24711)) b!133357))

(declare-fun m!157427 () Bool)

(assert (=> b!133356 m!157427))

(assert (=> b!133189 d!40637))

(assert (=> b!133052 d!40621))

(declare-fun d!40639 () Bool)

(assert (=> d!40639 (isDefined!125 (getValueByKey!173 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!69719 () Unit!4141)

(assert (=> d!40639 (= lt!69719 (choose!831 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!86893 () Bool)

(assert (=> d!40639 e!86893))

(declare-fun res!64178 () Bool)

(assert (=> d!40639 (=> (not res!64178) (not e!86893))))

(assert (=> d!40639 (= res!64178 (isStrictlySorted!309 (toList!842 lt!69344)))))

(assert (=> d!40639 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000) lt!69719)))

(declare-fun b!133358 () Bool)

(assert (=> b!133358 (= e!86893 (containsKey!176 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40639 res!64178) b!133358))

(assert (=> d!40639 m!156835))

(assert (=> d!40639 m!156835))

(assert (=> d!40639 m!157045))

(declare-fun m!157429 () Bool)

(assert (=> d!40639 m!157429))

(declare-fun m!157431 () Bool)

(assert (=> d!40639 m!157431))

(assert (=> b!133358 m!157041))

(assert (=> b!133132 d!40639))

(declare-fun d!40641 () Bool)

(assert (=> d!40641 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5528 () Bool)

(assert (= bs!5528 d!40641))

(assert (=> bs!5528 m!156835))

(declare-fun m!157433 () Bool)

(assert (=> bs!5528 m!157433))

(assert (=> b!133132 d!40641))

(declare-fun b!133360 () Bool)

(declare-fun e!86894 () Option!179)

(declare-fun e!86895 () Option!179)

(assert (=> b!133360 (= e!86894 e!86895)))

(declare-fun c!24713 () Bool)

(assert (=> b!133360 (= c!24713 (and ((_ is Cons!1690) (toList!842 lt!69344)) (not (= (_1!1293 (h!2295 (toList!842 lt!69344))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133359 () Bool)

(assert (=> b!133359 (= e!86894 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69344)))))))

(declare-fun d!40643 () Bool)

(declare-fun c!24712 () Bool)

(assert (=> d!40643 (= c!24712 (and ((_ is Cons!1690) (toList!842 lt!69344)) (= (_1!1293 (h!2295 (toList!842 lt!69344))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40643 (= (getValueByKey!173 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000) e!86894)))

(declare-fun b!133362 () Bool)

(assert (=> b!133362 (= e!86895 None!177)))

(declare-fun b!133361 () Bool)

(assert (=> b!133361 (= e!86895 (getValueByKey!173 (t!6137 (toList!842 lt!69344)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40643 c!24712) b!133359))

(assert (= (and d!40643 (not c!24712)) b!133360))

(assert (= (and b!133360 c!24713) b!133361))

(assert (= (and b!133360 (not c!24713)) b!133362))

(declare-fun m!157435 () Bool)

(assert (=> b!133361 m!157435))

(assert (=> b!133132 d!40643))

(declare-fun d!40645 () Bool)

(declare-fun lt!69722 () Bool)

(declare-fun content!134 (List!1694) (InoxSet tuple2!2564))

(assert (=> d!40645 (= lt!69722 (select (content!134 (toList!842 lt!69545)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!86901 () Bool)

(assert (=> d!40645 (= lt!69722 e!86901)))

(declare-fun res!64184 () Bool)

(assert (=> d!40645 (=> (not res!64184) (not e!86901))))

(assert (=> d!40645 (= res!64184 ((_ is Cons!1690) (toList!842 lt!69545)))))

(assert (=> d!40645 (= (contains!886 (toList!842 lt!69545) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69722)))

(declare-fun b!133367 () Bool)

(declare-fun e!86900 () Bool)

(assert (=> b!133367 (= e!86901 e!86900)))

(declare-fun res!64183 () Bool)

(assert (=> b!133367 (=> res!64183 e!86900)))

(assert (=> b!133367 (= res!64183 (= (h!2295 (toList!842 lt!69545)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133368 () Bool)

(assert (=> b!133368 (= e!86900 (contains!886 (t!6137 (toList!842 lt!69545)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40645 res!64184) b!133367))

(assert (= (and b!133367 (not res!64183)) b!133368))

(declare-fun m!157437 () Bool)

(assert (=> d!40645 m!157437))

(declare-fun m!157439 () Bool)

(assert (=> d!40645 m!157439))

(declare-fun m!157441 () Bool)

(assert (=> b!133368 m!157441))

(assert (=> b!133076 d!40645))

(declare-fun b!133369 () Bool)

(declare-fun e!86904 () Bool)

(declare-fun call!14700 () Bool)

(assert (=> b!133369 (= e!86904 call!14700)))

(declare-fun b!133370 () Bool)

(declare-fun e!86902 () Bool)

(assert (=> b!133370 (= e!86904 e!86902)))

(declare-fun lt!69724 () (_ BitVec 64))

(assert (=> b!133370 (= lt!69724 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!69723 () Unit!4141)

(assert (=> b!133370 (= lt!69723 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 newMap!16) lt!69724 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!133370 (arrayContainsKey!0 (_keys!4613 newMap!16) lt!69724 #b00000000000000000000000000000000)))

(declare-fun lt!69725 () Unit!4141)

(assert (=> b!133370 (= lt!69725 lt!69723)))

(declare-fun res!64185 () Bool)

(assert (=> b!133370 (= res!64185 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4613 newMap!16) (mask!7164 newMap!16)) (Found!269 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!133370 (=> (not res!64185) (not e!86902))))

(declare-fun b!133371 () Bool)

(declare-fun e!86903 () Bool)

(assert (=> b!133371 (= e!86903 e!86904)))

(declare-fun c!24714 () Bool)

(assert (=> b!133371 (= c!24714 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133372 () Bool)

(assert (=> b!133372 (= e!86902 call!14700)))

(declare-fun d!40647 () Bool)

(declare-fun res!64186 () Bool)

(assert (=> d!40647 (=> res!64186 e!86903)))

(assert (=> d!40647 (= res!64186 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40647 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4613 newMap!16) (mask!7164 newMap!16)) e!86903)))

(declare-fun bm!14697 () Bool)

(assert (=> bm!14697 (= call!14700 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(assert (= (and d!40647 (not res!64186)) b!133371))

(assert (= (and b!133371 c!24714) b!133370))

(assert (= (and b!133371 (not c!24714)) b!133369))

(assert (= (and b!133370 res!64185) b!133372))

(assert (= (or b!133372 b!133369) bm!14697))

(declare-fun m!157443 () Bool)

(assert (=> b!133370 m!157443))

(declare-fun m!157445 () Bool)

(assert (=> b!133370 m!157445))

(declare-fun m!157447 () Bool)

(assert (=> b!133370 m!157447))

(assert (=> b!133370 m!157443))

(declare-fun m!157449 () Bool)

(assert (=> b!133370 m!157449))

(assert (=> b!133371 m!157443))

(assert (=> b!133371 m!157443))

(declare-fun m!157451 () Bool)

(assert (=> b!133371 m!157451))

(declare-fun m!157453 () Bool)

(assert (=> bm!14697 m!157453))

(assert (=> bm!14629 d!40647))

(declare-fun call!14702 () ListLongMap!1653)

(declare-fun call!14705 () ListLongMap!1653)

(declare-fun call!14704 () ListLongMap!1653)

(declare-fun call!14703 () ListLongMap!1653)

(declare-fun c!24720 () Bool)

(declare-fun c!24718 () Bool)

(declare-fun bm!14698 () Bool)

(assert (=> bm!14698 (= call!14704 (+!169 (ite c!24718 call!14702 (ite c!24720 call!14703 call!14705)) (ite (or c!24718 c!24720) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1294 lt!69280))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280))))))))

(declare-fun b!133373 () Bool)

(declare-fun e!86914 () Bool)

(declare-fun e!86908 () Bool)

(assert (=> b!133373 (= e!86914 e!86908)))

(declare-fun res!64192 () Bool)

(declare-fun call!14701 () Bool)

(assert (=> b!133373 (= res!64192 call!14701)))

(assert (=> b!133373 (=> (not res!64192) (not e!86908))))

(declare-fun b!133374 () Bool)

(declare-fun e!86912 () Unit!4141)

(declare-fun lt!69743 () Unit!4141)

(assert (=> b!133374 (= e!86912 lt!69743)))

(declare-fun lt!69729 () ListLongMap!1653)

(assert (=> b!133374 (= lt!69729 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (_2!1294 lt!69280)) (_values!2847 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280)) (extraKeys!2629 (_2!1294 lt!69280)) (zeroValue!2719 (_2!1294 lt!69280)) (minValue!2719 (_2!1294 lt!69280)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1294 lt!69280))))))

(declare-fun lt!69744 () (_ BitVec 64))

(assert (=> b!133374 (= lt!69744 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69728 () (_ BitVec 64))

(assert (=> b!133374 (= lt!69728 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000))))

(declare-fun lt!69742 () Unit!4141)

(assert (=> b!133374 (= lt!69742 (addStillContains!92 lt!69729 lt!69744 (zeroValue!2719 (_2!1294 lt!69280)) lt!69728))))

(assert (=> b!133374 (contains!884 (+!169 lt!69729 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280)))) lt!69728)))

(declare-fun lt!69740 () Unit!4141)

(assert (=> b!133374 (= lt!69740 lt!69742)))

(declare-fun lt!69735 () ListLongMap!1653)

(assert (=> b!133374 (= lt!69735 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (_2!1294 lt!69280)) (_values!2847 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280)) (extraKeys!2629 (_2!1294 lt!69280)) (zeroValue!2719 (_2!1294 lt!69280)) (minValue!2719 (_2!1294 lt!69280)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1294 lt!69280))))))

(declare-fun lt!69727 () (_ BitVec 64))

(assert (=> b!133374 (= lt!69727 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69737 () (_ BitVec 64))

(assert (=> b!133374 (= lt!69737 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000))))

(declare-fun lt!69741 () Unit!4141)

(assert (=> b!133374 (= lt!69741 (addApplyDifferent!92 lt!69735 lt!69727 (minValue!2719 (_2!1294 lt!69280)) lt!69737))))

(assert (=> b!133374 (= (apply!116 (+!169 lt!69735 (tuple2!2565 lt!69727 (minValue!2719 (_2!1294 lt!69280)))) lt!69737) (apply!116 lt!69735 lt!69737))))

(declare-fun lt!69734 () Unit!4141)

(assert (=> b!133374 (= lt!69734 lt!69741)))

(declare-fun lt!69747 () ListLongMap!1653)

(assert (=> b!133374 (= lt!69747 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (_2!1294 lt!69280)) (_values!2847 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280)) (extraKeys!2629 (_2!1294 lt!69280)) (zeroValue!2719 (_2!1294 lt!69280)) (minValue!2719 (_2!1294 lt!69280)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1294 lt!69280))))))

(declare-fun lt!69736 () (_ BitVec 64))

(assert (=> b!133374 (= lt!69736 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69732 () (_ BitVec 64))

(assert (=> b!133374 (= lt!69732 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000))))

(declare-fun lt!69745 () Unit!4141)

(assert (=> b!133374 (= lt!69745 (addApplyDifferent!92 lt!69747 lt!69736 (zeroValue!2719 (_2!1294 lt!69280)) lt!69732))))

(assert (=> b!133374 (= (apply!116 (+!169 lt!69747 (tuple2!2565 lt!69736 (zeroValue!2719 (_2!1294 lt!69280)))) lt!69732) (apply!116 lt!69747 lt!69732))))

(declare-fun lt!69746 () Unit!4141)

(assert (=> b!133374 (= lt!69746 lt!69745)))

(declare-fun lt!69733 () ListLongMap!1653)

(assert (=> b!133374 (= lt!69733 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (_2!1294 lt!69280)) (_values!2847 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280)) (extraKeys!2629 (_2!1294 lt!69280)) (zeroValue!2719 (_2!1294 lt!69280)) (minValue!2719 (_2!1294 lt!69280)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1294 lt!69280))))))

(declare-fun lt!69731 () (_ BitVec 64))

(assert (=> b!133374 (= lt!69731 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69739 () (_ BitVec 64))

(assert (=> b!133374 (= lt!69739 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000))))

(assert (=> b!133374 (= lt!69743 (addApplyDifferent!92 lt!69733 lt!69731 (minValue!2719 (_2!1294 lt!69280)) lt!69739))))

(assert (=> b!133374 (= (apply!116 (+!169 lt!69733 (tuple2!2565 lt!69731 (minValue!2719 (_2!1294 lt!69280)))) lt!69739) (apply!116 lt!69733 lt!69739))))

(declare-fun b!133375 () Bool)

(declare-fun lt!69738 () ListLongMap!1653)

(assert (=> b!133375 (= e!86908 (= (apply!116 lt!69738 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 (_2!1294 lt!69280))))))

(declare-fun b!133376 () Bool)

(declare-fun e!86906 () Bool)

(assert (=> b!133376 (= e!86906 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(declare-fun bm!14699 () Bool)

(assert (=> bm!14699 (= call!14703 call!14702)))

(declare-fun bm!14700 () Bool)

(assert (=> bm!14700 (= call!14701 (contains!884 lt!69738 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133377 () Bool)

(declare-fun e!86907 () Bool)

(assert (=> b!133377 (= e!86907 e!86914)))

(declare-fun c!24719 () Bool)

(assert (=> b!133377 (= c!24719 (not (= (bvand (extraKeys!2629 (_2!1294 lt!69280)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133378 () Bool)

(declare-fun e!86916 () Bool)

(assert (=> b!133378 (= e!86916 (= (apply!116 lt!69738 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 (_2!1294 lt!69280))))))

(declare-fun b!133380 () Bool)

(declare-fun e!86905 () ListLongMap!1653)

(assert (=> b!133380 (= e!86905 call!14705)))

(declare-fun bm!14701 () Bool)

(declare-fun call!14707 () ListLongMap!1653)

(assert (=> bm!14701 (= call!14707 call!14704)))

(declare-fun bm!14702 () Bool)

(declare-fun call!14706 () Bool)

(assert (=> bm!14702 (= call!14706 (contains!884 lt!69738 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133381 () Bool)

(declare-fun c!24716 () Bool)

(assert (=> b!133381 (= c!24716 (and (not (= (bvand (extraKeys!2629 (_2!1294 lt!69280)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 (_2!1294 lt!69280)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86911 () ListLongMap!1653)

(assert (=> b!133381 (= e!86911 e!86905)))

(declare-fun bm!14703 () Bool)

(assert (=> bm!14703 (= call!14705 call!14703)))

(declare-fun b!133382 () Bool)

(declare-fun e!86917 () Bool)

(assert (=> b!133382 (= e!86917 (= (apply!116 lt!69738 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (_values!2847 (_2!1294 lt!69280))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 (_2!1294 lt!69280)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133382 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (_values!2847 (_2!1294 lt!69280)))))))

(assert (=> b!133382 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(declare-fun b!133383 () Bool)

(declare-fun e!86910 () ListLongMap!1653)

(assert (=> b!133383 (= e!86910 e!86911)))

(assert (=> b!133383 (= c!24720 (and (not (= (bvand (extraKeys!2629 (_2!1294 lt!69280)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 (_2!1294 lt!69280)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133384 () Bool)

(declare-fun e!86913 () Bool)

(assert (=> b!133384 (= e!86913 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(declare-fun b!133385 () Bool)

(assert (=> b!133385 (= e!86910 (+!169 call!14704 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280)))))))

(declare-fun b!133386 () Bool)

(declare-fun e!86909 () Bool)

(assert (=> b!133386 (= e!86909 e!86917)))

(declare-fun res!64193 () Bool)

(assert (=> b!133386 (=> (not res!64193) (not e!86917))))

(assert (=> b!133386 (= res!64193 (contains!884 lt!69738 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(assert (=> b!133386 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(declare-fun bm!14704 () Bool)

(assert (=> bm!14704 (= call!14702 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (_2!1294 lt!69280)) (_values!2847 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280)) (extraKeys!2629 (_2!1294 lt!69280)) (zeroValue!2719 (_2!1294 lt!69280)) (minValue!2719 (_2!1294 lt!69280)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1294 lt!69280))))))

(declare-fun b!133387 () Bool)

(assert (=> b!133387 (= e!86914 (not call!14701))))

(declare-fun b!133388 () Bool)

(assert (=> b!133388 (= e!86905 call!14707)))

(declare-fun b!133389 () Bool)

(declare-fun Unit!4162 () Unit!4141)

(assert (=> b!133389 (= e!86912 Unit!4162)))

(declare-fun b!133390 () Bool)

(declare-fun e!86915 () Bool)

(assert (=> b!133390 (= e!86915 e!86916)))

(declare-fun res!64195 () Bool)

(assert (=> b!133390 (= res!64195 call!14706)))

(assert (=> b!133390 (=> (not res!64195) (not e!86916))))

(declare-fun b!133391 () Bool)

(declare-fun res!64189 () Bool)

(assert (=> b!133391 (=> (not res!64189) (not e!86907))))

(assert (=> b!133391 (= res!64189 e!86909)))

(declare-fun res!64194 () Bool)

(assert (=> b!133391 (=> res!64194 e!86909)))

(assert (=> b!133391 (= res!64194 (not e!86913))))

(declare-fun res!64187 () Bool)

(assert (=> b!133391 (=> (not res!64187) (not e!86913))))

(assert (=> b!133391 (= res!64187 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(declare-fun b!133392 () Bool)

(declare-fun res!64190 () Bool)

(assert (=> b!133392 (=> (not res!64190) (not e!86907))))

(assert (=> b!133392 (= res!64190 e!86915)))

(declare-fun c!24717 () Bool)

(assert (=> b!133392 (= c!24717 (not (= (bvand (extraKeys!2629 (_2!1294 lt!69280)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133393 () Bool)

(assert (=> b!133393 (= e!86911 call!14707)))

(declare-fun b!133379 () Bool)

(assert (=> b!133379 (= e!86915 (not call!14706))))

(declare-fun d!40649 () Bool)

(assert (=> d!40649 e!86907))

(declare-fun res!64191 () Bool)

(assert (=> d!40649 (=> (not res!64191) (not e!86907))))

(assert (=> d!40649 (= res!64191 (or (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))))

(declare-fun lt!69726 () ListLongMap!1653)

(assert (=> d!40649 (= lt!69738 lt!69726)))

(declare-fun lt!69730 () Unit!4141)

(assert (=> d!40649 (= lt!69730 e!86912)))

(declare-fun c!24715 () Bool)

(assert (=> d!40649 (= c!24715 e!86906)))

(declare-fun res!64188 () Bool)

(assert (=> d!40649 (=> (not res!64188) (not e!86906))))

(assert (=> d!40649 (= res!64188 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(assert (=> d!40649 (= lt!69726 e!86910)))

(assert (=> d!40649 (= c!24718 (and (not (= (bvand (extraKeys!2629 (_2!1294 lt!69280)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 (_2!1294 lt!69280)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40649 (validMask!0 (mask!7164 (_2!1294 lt!69280)))))

(assert (=> d!40649 (= (getCurrentListMap!518 (_keys!4613 (_2!1294 lt!69280)) (_values!2847 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280)) (extraKeys!2629 (_2!1294 lt!69280)) (zeroValue!2719 (_2!1294 lt!69280)) (minValue!2719 (_2!1294 lt!69280)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1294 lt!69280))) lt!69738)))

(assert (= (and d!40649 c!24718) b!133385))

(assert (= (and d!40649 (not c!24718)) b!133383))

(assert (= (and b!133383 c!24720) b!133393))

(assert (= (and b!133383 (not c!24720)) b!133381))

(assert (= (and b!133381 c!24716) b!133388))

(assert (= (and b!133381 (not c!24716)) b!133380))

(assert (= (or b!133388 b!133380) bm!14703))

(assert (= (or b!133393 bm!14703) bm!14699))

(assert (= (or b!133393 b!133388) bm!14701))

(assert (= (or b!133385 bm!14699) bm!14704))

(assert (= (or b!133385 bm!14701) bm!14698))

(assert (= (and d!40649 res!64188) b!133376))

(assert (= (and d!40649 c!24715) b!133374))

(assert (= (and d!40649 (not c!24715)) b!133389))

(assert (= (and d!40649 res!64191) b!133391))

(assert (= (and b!133391 res!64187) b!133384))

(assert (= (and b!133391 (not res!64194)) b!133386))

(assert (= (and b!133386 res!64193) b!133382))

(assert (= (and b!133391 res!64189) b!133392))

(assert (= (and b!133392 c!24717) b!133390))

(assert (= (and b!133392 (not c!24717)) b!133379))

(assert (= (and b!133390 res!64195) b!133378))

(assert (= (or b!133390 b!133379) bm!14702))

(assert (= (and b!133392 res!64190) b!133377))

(assert (= (and b!133377 c!24719) b!133373))

(assert (= (and b!133377 (not c!24719)) b!133387))

(assert (= (and b!133373 res!64192) b!133375))

(assert (= (or b!133373 b!133387) bm!14700))

(declare-fun b_lambda!5955 () Bool)

(assert (=> (not b_lambda!5955) (not b!133382)))

(declare-fun tb!2421 () Bool)

(declare-fun t!6151 () Bool)

(assert (=> (and b!132503 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 (_2!1294 lt!69280))) t!6151) tb!2421))

(declare-fun result!3997 () Bool)

(assert (=> tb!2421 (= result!3997 tp_is_empty!2875)))

(assert (=> b!133382 t!6151))

(declare-fun b_and!8277 () Bool)

(assert (= b_and!8273 (and (=> t!6151 result!3997) b_and!8277)))

(declare-fun tb!2423 () Bool)

(declare-fun t!6153 () Bool)

(assert (=> (and b!132502 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (_2!1294 lt!69280))) t!6153) tb!2423))

(declare-fun result!3999 () Bool)

(assert (= result!3999 result!3997))

(assert (=> b!133382 t!6153))

(declare-fun b_and!8279 () Bool)

(assert (= b_and!8275 (and (=> t!6153 result!3999) b_and!8279)))

(assert (=> d!40649 m!157387))

(declare-fun m!157455 () Bool)

(assert (=> b!133384 m!157455))

(assert (=> b!133384 m!157455))

(declare-fun m!157457 () Bool)

(assert (=> b!133384 m!157457))

(declare-fun m!157459 () Bool)

(assert (=> b!133374 m!157459))

(declare-fun m!157461 () Bool)

(assert (=> b!133374 m!157461))

(declare-fun m!157463 () Bool)

(assert (=> b!133374 m!157463))

(declare-fun m!157465 () Bool)

(assert (=> b!133374 m!157465))

(declare-fun m!157467 () Bool)

(assert (=> b!133374 m!157467))

(assert (=> b!133374 m!157455))

(declare-fun m!157469 () Bool)

(assert (=> b!133374 m!157469))

(declare-fun m!157471 () Bool)

(assert (=> b!133374 m!157471))

(declare-fun m!157473 () Bool)

(assert (=> b!133374 m!157473))

(declare-fun m!157475 () Bool)

(assert (=> b!133374 m!157475))

(declare-fun m!157477 () Bool)

(assert (=> b!133374 m!157477))

(declare-fun m!157479 () Bool)

(assert (=> b!133374 m!157479))

(assert (=> b!133374 m!157473))

(assert (=> b!133374 m!157467))

(declare-fun m!157481 () Bool)

(assert (=> b!133374 m!157481))

(declare-fun m!157483 () Bool)

(assert (=> b!133374 m!157483))

(declare-fun m!157485 () Bool)

(assert (=> b!133374 m!157485))

(assert (=> b!133374 m!157485))

(declare-fun m!157487 () Bool)

(assert (=> b!133374 m!157487))

(assert (=> b!133374 m!157465))

(declare-fun m!157489 () Bool)

(assert (=> b!133374 m!157489))

(declare-fun m!157491 () Bool)

(assert (=> b!133382 m!157491))

(declare-fun m!157493 () Bool)

(assert (=> b!133382 m!157493))

(declare-fun m!157495 () Bool)

(assert (=> b!133382 m!157495))

(assert (=> b!133382 m!157493))

(assert (=> b!133382 m!157491))

(assert (=> b!133382 m!157455))

(assert (=> b!133382 m!157455))

(declare-fun m!157497 () Bool)

(assert (=> b!133382 m!157497))

(declare-fun m!157499 () Bool)

(assert (=> bm!14700 m!157499))

(declare-fun m!157501 () Bool)

(assert (=> bm!14698 m!157501))

(assert (=> b!133376 m!157455))

(assert (=> b!133376 m!157455))

(assert (=> b!133376 m!157457))

(declare-fun m!157503 () Bool)

(assert (=> b!133378 m!157503))

(assert (=> b!133386 m!157455))

(assert (=> b!133386 m!157455))

(declare-fun m!157505 () Bool)

(assert (=> b!133386 m!157505))

(assert (=> bm!14704 m!157479))

(declare-fun m!157507 () Bool)

(assert (=> bm!14702 m!157507))

(declare-fun m!157509 () Bool)

(assert (=> b!133385 m!157509))

(declare-fun m!157511 () Bool)

(assert (=> b!133375 m!157511))

(assert (=> d!40475 d!40649))

(declare-fun d!40651 () Bool)

(declare-fun lt!69748 () Bool)

(assert (=> d!40651 (= lt!69748 (select (content!133 (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!86919 () Bool)

(assert (=> d!40651 (= lt!69748 e!86919)))

(declare-fun res!64196 () Bool)

(assert (=> d!40651 (=> (not res!64196) (not e!86919))))

(assert (=> d!40651 (= res!64196 ((_ is Cons!1689) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)))))

(assert (=> d!40651 (= (contains!885 (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!69748)))

(declare-fun b!133394 () Bool)

(declare-fun e!86918 () Bool)

(assert (=> b!133394 (= e!86919 e!86918)))

(declare-fun res!64197 () Bool)

(assert (=> b!133394 (=> res!64197 e!86918)))

(assert (=> b!133394 (= res!64197 (= (h!2294 (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133395 () Bool)

(assert (=> b!133395 (= e!86918 (contains!885 (t!6136 (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!40651 res!64196) b!133394))

(assert (= (and b!133394 (not res!64197)) b!133395))

(declare-fun m!157513 () Bool)

(assert (=> d!40651 m!157513))

(assert (=> d!40651 m!157015))

(declare-fun m!157515 () Bool)

(assert (=> d!40651 m!157515))

(assert (=> b!133395 m!157015))

(declare-fun m!157517 () Bool)

(assert (=> b!133395 m!157517))

(assert (=> b!133119 d!40651))

(declare-fun d!40653 () Bool)

(declare-fun res!64198 () Bool)

(declare-fun e!86920 () Bool)

(assert (=> d!40653 (=> res!64198 e!86920)))

(assert (=> d!40653 (= res!64198 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!69193))))

(assert (=> d!40653 (= (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69193 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!86920)))

(declare-fun b!133396 () Bool)

(declare-fun e!86921 () Bool)

(assert (=> b!133396 (= e!86920 e!86921)))

(declare-fun res!64199 () Bool)

(assert (=> b!133396 (=> (not res!64199) (not e!86921))))

(assert (=> b!133396 (= res!64199 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!133397 () Bool)

(assert (=> b!133397 (= e!86921 (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69193 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!40653 (not res!64198)) b!133396))

(assert (= (and b!133396 res!64199) b!133397))

(assert (=> d!40653 m!157015))

(declare-fun m!157519 () Bool)

(assert (=> b!133397 m!157519))

(assert (=> b!133125 d!40653))

(assert (=> bm!14638 d!40459))

(assert (=> d!40561 d!40455))

(declare-fun d!40655 () Bool)

(declare-fun e!86924 () Bool)

(assert (=> d!40655 e!86924))

(declare-fun res!64205 () Bool)

(assert (=> d!40655 (=> (not res!64205) (not e!86924))))

(declare-fun lt!69751 () SeekEntryResult!269)

(assert (=> d!40655 (= res!64205 ((_ is Found!269) lt!69751))))

(assert (=> d!40655 (= lt!69751 (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(assert (=> d!40655 true))

(declare-fun _$33!114 () Unit!4141)

(assert (=> d!40655 (= (choose!830 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)) _$33!114)))

(declare-fun b!133402 () Bool)

(declare-fun res!64204 () Bool)

(assert (=> b!133402 (=> (not res!64204) (not e!86924))))

(assert (=> b!133402 (= res!64204 (inRange!0 (index!3237 lt!69751) (mask!7164 newMap!16)))))

(declare-fun b!133403 () Bool)

(assert (=> b!133403 (= e!86924 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69751)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40655 res!64205) b!133402))

(assert (= (and b!133402 res!64204) b!133403))

(assert (=> d!40655 m!156395))

(assert (=> d!40655 m!156563))

(declare-fun m!157521 () Bool)

(assert (=> b!133402 m!157521))

(declare-fun m!157523 () Bool)

(assert (=> b!133403 m!157523))

(assert (=> d!40561 d!40655))

(assert (=> d!40561 d!40591))

(assert (=> b!133060 d!40621))

(declare-fun d!40657 () Bool)

(declare-fun e!86925 () Bool)

(assert (=> d!40657 e!86925))

(declare-fun res!64207 () Bool)

(assert (=> d!40657 (=> (not res!64207) (not e!86925))))

(declare-fun lt!69754 () ListLongMap!1653)

(assert (=> d!40657 (= res!64207 (contains!884 lt!69754 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69755 () List!1694)

(assert (=> d!40657 (= lt!69754 (ListLongMap!1654 lt!69755))))

(declare-fun lt!69752 () Unit!4141)

(declare-fun lt!69753 () Unit!4141)

(assert (=> d!40657 (= lt!69752 lt!69753)))

(assert (=> d!40657 (= (getValueByKey!173 lt!69755 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40657 (= lt!69753 (lemmaContainsTupThenGetReturnValue!88 lt!69755 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40657 (= lt!69755 (insertStrictlySorted!91 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40657 (= (+!169 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69754)))

(declare-fun b!133404 () Bool)

(declare-fun res!64206 () Bool)

(assert (=> b!133404 (=> (not res!64206) (not e!86925))))

(assert (=> b!133404 (= res!64206 (= (getValueByKey!173 (toList!842 lt!69754) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133405 () Bool)

(assert (=> b!133405 (= e!86925 (contains!886 (toList!842 lt!69754) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40657 res!64207) b!133404))

(assert (= (and b!133404 res!64206) b!133405))

(declare-fun m!157525 () Bool)

(assert (=> d!40657 m!157525))

(declare-fun m!157527 () Bool)

(assert (=> d!40657 m!157527))

(declare-fun m!157529 () Bool)

(assert (=> d!40657 m!157529))

(declare-fun m!157531 () Bool)

(assert (=> d!40657 m!157531))

(declare-fun m!157533 () Bool)

(assert (=> b!133404 m!157533))

(declare-fun m!157535 () Bool)

(assert (=> b!133405 m!157535))

(assert (=> d!40463 d!40657))

(declare-fun d!40659 () Bool)

(declare-fun e!86928 () Bool)

(assert (=> d!40659 e!86928))

(declare-fun res!64210 () Bool)

(assert (=> d!40659 (=> (not res!64210) (not e!86928))))

(assert (=> d!40659 (= res!64210 (and (bvsge (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000000) (bvslt (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (size!2521 (_keys!4613 newMap!16))) (bvslt (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (size!2522 (_values!2847 newMap!16)))))))

(declare-fun lt!69758 () Unit!4141)

(declare-fun choose!834 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 32) (_ BitVec 64) V!3481 Int) Unit!4141)

(assert (=> d!40659 (= lt!69758 (choose!834 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40659 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40659 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!42 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)) lt!69758)))

(declare-fun b!133408 () Bool)

(assert (=> b!133408 (= e!86928 (= (+!169 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!518 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))

(assert (= (and d!40659 res!64210) b!133408))

(assert (=> d!40659 m!156395))

(assert (=> d!40659 m!156393))

(declare-fun m!157537 () Bool)

(assert (=> d!40659 m!157537))

(assert (=> d!40659 m!156651))

(assert (=> b!133408 m!156545))

(assert (=> b!133408 m!156719))

(assert (=> b!133408 m!156699))

(assert (=> b!133408 m!156545))

(assert (=> b!133408 m!156735))

(assert (=> b!133408 m!156709))

(assert (=> d!40463 d!40659))

(declare-fun b!133409 () Bool)

(declare-fun e!86931 () Bool)

(declare-fun call!14708 () Bool)

(assert (=> b!133409 (= e!86931 call!14708)))

(declare-fun b!133410 () Bool)

(declare-fun e!86929 () Bool)

(assert (=> b!133410 (= e!86931 e!86929)))

(declare-fun lt!69760 () (_ BitVec 64))

(assert (=> b!133410 (= lt!69760 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!69759 () Unit!4141)

(assert (=> b!133410 (= lt!69759 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) lt!69760 #b00000000000000000000000000000000))))

(assert (=> b!133410 (arrayContainsKey!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) lt!69760 #b00000000000000000000000000000000)))

(declare-fun lt!69761 () Unit!4141)

(assert (=> b!133410 (= lt!69761 lt!69759)))

(declare-fun res!64211 () Bool)

(assert (=> b!133410 (= res!64211 (= (seekEntryOrOpen!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000) (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (mask!7164 newMap!16)) (Found!269 #b00000000000000000000000000000000)))))

(assert (=> b!133410 (=> (not res!64211) (not e!86929))))

(declare-fun b!133411 () Bool)

(declare-fun e!86930 () Bool)

(assert (=> b!133411 (= e!86930 e!86931)))

(declare-fun c!24721 () Bool)

(assert (=> b!133411 (= c!24721 (validKeyInArray!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!133412 () Bool)

(assert (=> b!133412 (= e!86929 call!14708)))

(declare-fun d!40661 () Bool)

(declare-fun res!64212 () Bool)

(assert (=> d!40661 (=> res!64212 e!86930)))

(assert (=> d!40661 (= res!64212 (bvsge #b00000000000000000000000000000000 (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(assert (=> d!40661 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (mask!7164 newMap!16)) e!86930)))

(declare-fun bm!14705 () Bool)

(assert (=> bm!14705 (= call!14708 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (mask!7164 newMap!16)))))

(assert (= (and d!40661 (not res!64212)) b!133411))

(assert (= (and b!133411 c!24721) b!133410))

(assert (= (and b!133411 (not c!24721)) b!133409))

(assert (= (and b!133410 res!64211) b!133412))

(assert (= (or b!133412 b!133409) bm!14705))

(declare-fun m!157539 () Bool)

(assert (=> b!133410 m!157539))

(declare-fun m!157541 () Bool)

(assert (=> b!133410 m!157541))

(declare-fun m!157543 () Bool)

(assert (=> b!133410 m!157543))

(assert (=> b!133410 m!157539))

(declare-fun m!157545 () Bool)

(assert (=> b!133410 m!157545))

(assert (=> b!133411 m!157539))

(assert (=> b!133411 m!157539))

(declare-fun m!157547 () Bool)

(assert (=> b!133411 m!157547))

(declare-fun m!157549 () Bool)

(assert (=> bm!14705 m!157549))

(assert (=> d!40463 d!40661))

(declare-fun d!40663 () Bool)

(declare-fun e!86932 () Bool)

(assert (=> d!40663 e!86932))

(declare-fun res!64213 () Bool)

(assert (=> d!40663 (=> (not res!64213) (not e!86932))))

(assert (=> d!40663 (= res!64213 (and (bvsge (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000000) (bvslt (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (size!2521 lt!69441))))))

(declare-fun lt!69762 () Unit!4141)

(assert (=> d!40663 (= lt!69762 (choose!825 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (defaultEntry!2864 newMap!16)))))

(assert (=> d!40663 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40663 (= (lemmaValidKeyInArrayIsInListMap!121 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (defaultEntry!2864 newMap!16)) lt!69762)))

(declare-fun b!133413 () Bool)

(assert (=> b!133413 (= e!86932 (contains!884 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2252 lt!69441) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))

(assert (= (and d!40663 res!64213) b!133413))

(declare-fun m!157551 () Bool)

(assert (=> d!40663 m!157551))

(assert (=> d!40663 m!156651))

(assert (=> b!133413 m!156701))

(declare-fun m!157553 () Bool)

(assert (=> b!133413 m!157553))

(assert (=> b!133413 m!156701))

(assert (=> b!133413 m!157553))

(declare-fun m!157555 () Bool)

(assert (=> b!133413 m!157555))

(assert (=> d!40463 d!40663))

(assert (=> d!40463 d!40479))

(assert (=> d!40463 d!40525))

(declare-fun d!40665 () Bool)

(declare-fun e!86934 () Bool)

(assert (=> d!40665 e!86934))

(declare-fun res!64214 () Bool)

(assert (=> d!40665 (=> res!64214 e!86934)))

(declare-fun lt!69763 () Bool)

(assert (=> d!40665 (= res!64214 (not lt!69763))))

(declare-fun lt!69764 () Bool)

(assert (=> d!40665 (= lt!69763 lt!69764)))

(declare-fun lt!69765 () Unit!4141)

(declare-fun e!86933 () Unit!4141)

(assert (=> d!40665 (= lt!69765 e!86933)))

(declare-fun c!24722 () Bool)

(assert (=> d!40665 (= c!24722 lt!69764)))

(assert (=> d!40665 (= lt!69764 (containsKey!176 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))

(assert (=> d!40665 (= (contains!884 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))) lt!69763)))

(declare-fun b!133414 () Bool)

(declare-fun lt!69766 () Unit!4141)

(assert (=> b!133414 (= e!86933 lt!69766)))

(assert (=> b!133414 (= lt!69766 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))

(assert (=> b!133414 (isDefined!125 (getValueByKey!173 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))

(declare-fun b!133415 () Bool)

(declare-fun Unit!4163 () Unit!4141)

(assert (=> b!133415 (= e!86933 Unit!4163)))

(declare-fun b!133416 () Bool)

(assert (=> b!133416 (= e!86934 (isDefined!125 (getValueByKey!173 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))))))))

(assert (= (and d!40665 c!24722) b!133414))

(assert (= (and d!40665 (not c!24722)) b!133415))

(assert (= (and d!40665 (not res!64214)) b!133416))

(assert (=> d!40665 m!156725))

(declare-fun m!157557 () Bool)

(assert (=> d!40665 m!157557))

(assert (=> b!133414 m!156725))

(declare-fun m!157559 () Bool)

(assert (=> b!133414 m!157559))

(assert (=> b!133414 m!156725))

(declare-fun m!157561 () Bool)

(assert (=> b!133414 m!157561))

(assert (=> b!133414 m!157561))

(declare-fun m!157563 () Bool)

(assert (=> b!133414 m!157563))

(assert (=> b!133416 m!156725))

(assert (=> b!133416 m!157561))

(assert (=> b!133416 m!157561))

(assert (=> b!133416 m!157563))

(assert (=> d!40463 d!40665))

(declare-fun call!14710 () ListLongMap!1653)

(declare-fun c!24726 () Bool)

(declare-fun bm!14706 () Bool)

(declare-fun call!14711 () ListLongMap!1653)

(declare-fun c!24728 () Bool)

(declare-fun call!14713 () ListLongMap!1653)

(declare-fun call!14712 () ListLongMap!1653)

(assert (=> bm!14706 (= call!14712 (+!169 (ite c!24726 call!14710 (ite c!24728 call!14711 call!14713)) (ite (or c!24726 c!24728) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!133417 () Bool)

(declare-fun e!86944 () Bool)

(declare-fun e!86938 () Bool)

(assert (=> b!133417 (= e!86944 e!86938)))

(declare-fun res!64220 () Bool)

(declare-fun call!14709 () Bool)

(assert (=> b!133417 (= res!64220 call!14709)))

(assert (=> b!133417 (=> (not res!64220) (not e!86938))))

(declare-fun b!133418 () Bool)

(declare-fun e!86942 () Unit!4141)

(declare-fun lt!69784 () Unit!4141)

(assert (=> b!133418 (= e!86942 lt!69784)))

(declare-fun lt!69770 () ListLongMap!1653)

(assert (=> b!133418 (= lt!69770 (getCurrentListMapNoExtraKeys!136 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69785 () (_ BitVec 64))

(assert (=> b!133418 (= lt!69785 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69769 () (_ BitVec 64))

(assert (=> b!133418 (= lt!69769 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!69783 () Unit!4141)

(assert (=> b!133418 (= lt!69783 (addStillContains!92 lt!69770 lt!69785 (zeroValue!2719 newMap!16) lt!69769))))

(assert (=> b!133418 (contains!884 (+!169 lt!69770 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16))) lt!69769)))

(declare-fun lt!69781 () Unit!4141)

(assert (=> b!133418 (= lt!69781 lt!69783)))

(declare-fun lt!69776 () ListLongMap!1653)

(assert (=> b!133418 (= lt!69776 (getCurrentListMapNoExtraKeys!136 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69768 () (_ BitVec 64))

(assert (=> b!133418 (= lt!69768 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69778 () (_ BitVec 64))

(assert (=> b!133418 (= lt!69778 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!69782 () Unit!4141)

(assert (=> b!133418 (= lt!69782 (addApplyDifferent!92 lt!69776 lt!69768 (minValue!2719 newMap!16) lt!69778))))

(assert (=> b!133418 (= (apply!116 (+!169 lt!69776 (tuple2!2565 lt!69768 (minValue!2719 newMap!16))) lt!69778) (apply!116 lt!69776 lt!69778))))

(declare-fun lt!69775 () Unit!4141)

(assert (=> b!133418 (= lt!69775 lt!69782)))

(declare-fun lt!69788 () ListLongMap!1653)

(assert (=> b!133418 (= lt!69788 (getCurrentListMapNoExtraKeys!136 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69777 () (_ BitVec 64))

(assert (=> b!133418 (= lt!69777 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69773 () (_ BitVec 64))

(assert (=> b!133418 (= lt!69773 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!69786 () Unit!4141)

(assert (=> b!133418 (= lt!69786 (addApplyDifferent!92 lt!69788 lt!69777 (zeroValue!2719 newMap!16) lt!69773))))

(assert (=> b!133418 (= (apply!116 (+!169 lt!69788 (tuple2!2565 lt!69777 (zeroValue!2719 newMap!16))) lt!69773) (apply!116 lt!69788 lt!69773))))

(declare-fun lt!69787 () Unit!4141)

(assert (=> b!133418 (= lt!69787 lt!69786)))

(declare-fun lt!69774 () ListLongMap!1653)

(assert (=> b!133418 (= lt!69774 (getCurrentListMapNoExtraKeys!136 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69772 () (_ BitVec 64))

(assert (=> b!133418 (= lt!69772 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69780 () (_ BitVec 64))

(assert (=> b!133418 (= lt!69780 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!133418 (= lt!69784 (addApplyDifferent!92 lt!69774 lt!69772 (minValue!2719 newMap!16) lt!69780))))

(assert (=> b!133418 (= (apply!116 (+!169 lt!69774 (tuple2!2565 lt!69772 (minValue!2719 newMap!16))) lt!69780) (apply!116 lt!69774 lt!69780))))

(declare-fun b!133419 () Bool)

(declare-fun lt!69779 () ListLongMap!1653)

(assert (=> b!133419 (= e!86938 (= (apply!116 lt!69779 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 newMap!16)))))

(declare-fun e!86936 () Bool)

(declare-fun b!133420 () Bool)

(assert (=> b!133420 (= e!86936 (validKeyInArray!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!14707 () Bool)

(assert (=> bm!14707 (= call!14711 call!14710)))

(declare-fun bm!14708 () Bool)

(assert (=> bm!14708 (= call!14709 (contains!884 lt!69779 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133421 () Bool)

(declare-fun e!86937 () Bool)

(assert (=> b!133421 (= e!86937 e!86944)))

(declare-fun c!24727 () Bool)

(assert (=> b!133421 (= c!24727 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133422 () Bool)

(declare-fun e!86946 () Bool)

(assert (=> b!133422 (= e!86946 (= (apply!116 lt!69779 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 newMap!16)))))

(declare-fun b!133424 () Bool)

(declare-fun e!86935 () ListLongMap!1653)

(assert (=> b!133424 (= e!86935 call!14713)))

(declare-fun bm!14709 () Bool)

(declare-fun call!14715 () ListLongMap!1653)

(assert (=> bm!14709 (= call!14715 call!14712)))

(declare-fun bm!14710 () Bool)

(declare-fun call!14714 () Bool)

(assert (=> bm!14710 (= call!14714 (contains!884 lt!69779 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133425 () Bool)

(declare-fun c!24724 () Bool)

(assert (=> b!133425 (= c!24724 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86941 () ListLongMap!1653)

(assert (=> b!133425 (= e!86941 e!86935)))

(declare-fun bm!14711 () Bool)

(assert (=> bm!14711 (= call!14713 call!14711)))

(declare-fun e!86947 () Bool)

(declare-fun b!133426 () Bool)

(assert (=> b!133426 (= e!86947 (= (apply!116 lt!69779 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133426 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))))))

(assert (=> b!133426 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(declare-fun b!133427 () Bool)

(declare-fun e!86940 () ListLongMap!1653)

(assert (=> b!133427 (= e!86940 e!86941)))

(assert (=> b!133427 (= c!24728 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun e!86943 () Bool)

(declare-fun b!133428 () Bool)

(assert (=> b!133428 (= e!86943 (validKeyInArray!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!133429 () Bool)

(assert (=> b!133429 (= e!86940 (+!169 call!14712 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun b!133430 () Bool)

(declare-fun e!86939 () Bool)

(assert (=> b!133430 (= e!86939 e!86947)))

(declare-fun res!64221 () Bool)

(assert (=> b!133430 (=> (not res!64221) (not e!86947))))

(assert (=> b!133430 (= res!64221 (contains!884 lt!69779 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!133430 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(declare-fun bm!14712 () Bool)

(assert (=> bm!14712 (= call!14710 (getCurrentListMapNoExtraKeys!136 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!133431 () Bool)

(assert (=> b!133431 (= e!86944 (not call!14709))))

(declare-fun b!133432 () Bool)

(assert (=> b!133432 (= e!86935 call!14715)))

(declare-fun b!133433 () Bool)

(declare-fun Unit!4164 () Unit!4141)

(assert (=> b!133433 (= e!86942 Unit!4164)))

(declare-fun b!133434 () Bool)

(declare-fun e!86945 () Bool)

(assert (=> b!133434 (= e!86945 e!86946)))

(declare-fun res!64223 () Bool)

(assert (=> b!133434 (= res!64223 call!14714)))

(assert (=> b!133434 (=> (not res!64223) (not e!86946))))

(declare-fun b!133435 () Bool)

(declare-fun res!64217 () Bool)

(assert (=> b!133435 (=> (not res!64217) (not e!86937))))

(assert (=> b!133435 (= res!64217 e!86939)))

(declare-fun res!64222 () Bool)

(assert (=> b!133435 (=> res!64222 e!86939)))

(assert (=> b!133435 (= res!64222 (not e!86943))))

(declare-fun res!64215 () Bool)

(assert (=> b!133435 (=> (not res!64215) (not e!86943))))

(assert (=> b!133435 (= res!64215 (bvslt #b00000000000000000000000000000000 (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(declare-fun b!133436 () Bool)

(declare-fun res!64218 () Bool)

(assert (=> b!133436 (=> (not res!64218) (not e!86937))))

(assert (=> b!133436 (= res!64218 e!86945)))

(declare-fun c!24725 () Bool)

(assert (=> b!133436 (= c!24725 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133437 () Bool)

(assert (=> b!133437 (= e!86941 call!14715)))

(declare-fun b!133423 () Bool)

(assert (=> b!133423 (= e!86945 (not call!14714))))

(declare-fun d!40667 () Bool)

(assert (=> d!40667 e!86937))

(declare-fun res!64219 () Bool)

(assert (=> d!40667 (=> (not res!64219) (not e!86937))))

(assert (=> d!40667 (= res!64219 (or (bvsge #b00000000000000000000000000000000 (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))))

(declare-fun lt!69767 () ListLongMap!1653)

(assert (=> d!40667 (= lt!69779 lt!69767)))

(declare-fun lt!69771 () Unit!4141)

(assert (=> d!40667 (= lt!69771 e!86942)))

(declare-fun c!24723 () Bool)

(assert (=> d!40667 (= c!24723 e!86936)))

(declare-fun res!64216 () Bool)

(assert (=> d!40667 (=> (not res!64216) (not e!86936))))

(assert (=> d!40667 (= res!64216 (bvslt #b00000000000000000000000000000000 (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(assert (=> d!40667 (= lt!69767 e!86940)))

(assert (=> d!40667 (= c!24726 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40667 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40667 (= (getCurrentListMap!518 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69779)))

(assert (= (and d!40667 c!24726) b!133429))

(assert (= (and d!40667 (not c!24726)) b!133427))

(assert (= (and b!133427 c!24728) b!133437))

(assert (= (and b!133427 (not c!24728)) b!133425))

(assert (= (and b!133425 c!24724) b!133432))

(assert (= (and b!133425 (not c!24724)) b!133424))

(assert (= (or b!133432 b!133424) bm!14711))

(assert (= (or b!133437 bm!14711) bm!14707))

(assert (= (or b!133437 b!133432) bm!14709))

(assert (= (or b!133429 bm!14707) bm!14712))

(assert (= (or b!133429 bm!14709) bm!14706))

(assert (= (and d!40667 res!64216) b!133420))

(assert (= (and d!40667 c!24723) b!133418))

(assert (= (and d!40667 (not c!24723)) b!133433))

(assert (= (and d!40667 res!64219) b!133435))

(assert (= (and b!133435 res!64215) b!133428))

(assert (= (and b!133435 (not res!64222)) b!133430))

(assert (= (and b!133430 res!64221) b!133426))

(assert (= (and b!133435 res!64217) b!133436))

(assert (= (and b!133436 c!24725) b!133434))

(assert (= (and b!133436 (not c!24725)) b!133423))

(assert (= (and b!133434 res!64223) b!133422))

(assert (= (or b!133434 b!133423) bm!14710))

(assert (= (and b!133436 res!64218) b!133421))

(assert (= (and b!133421 c!24727) b!133417))

(assert (= (and b!133421 (not c!24727)) b!133431))

(assert (= (and b!133417 res!64220) b!133419))

(assert (= (or b!133417 b!133431) bm!14708))

(declare-fun b_lambda!5957 () Bool)

(assert (=> (not b_lambda!5957) (not b!133426)))

(assert (=> b!133426 t!6147))

(declare-fun b_and!8281 () Bool)

(assert (= b_and!8277 (and (=> t!6147 result!3993) b_and!8281)))

(assert (=> b!133426 t!6149))

(declare-fun b_and!8283 () Bool)

(assert (= b_and!8279 (and (=> t!6149 result!3995) b_and!8283)))

(assert (=> d!40667 m!156651))

(assert (=> b!133428 m!157539))

(assert (=> b!133428 m!157539))

(assert (=> b!133428 m!157547))

(declare-fun m!157565 () Bool)

(assert (=> b!133418 m!157565))

(declare-fun m!157567 () Bool)

(assert (=> b!133418 m!157567))

(declare-fun m!157569 () Bool)

(assert (=> b!133418 m!157569))

(declare-fun m!157571 () Bool)

(assert (=> b!133418 m!157571))

(declare-fun m!157573 () Bool)

(assert (=> b!133418 m!157573))

(assert (=> b!133418 m!157539))

(declare-fun m!157575 () Bool)

(assert (=> b!133418 m!157575))

(declare-fun m!157577 () Bool)

(assert (=> b!133418 m!157577))

(declare-fun m!157579 () Bool)

(assert (=> b!133418 m!157579))

(declare-fun m!157581 () Bool)

(assert (=> b!133418 m!157581))

(declare-fun m!157583 () Bool)

(assert (=> b!133418 m!157583))

(declare-fun m!157585 () Bool)

(assert (=> b!133418 m!157585))

(assert (=> b!133418 m!157579))

(assert (=> b!133418 m!157573))

(declare-fun m!157587 () Bool)

(assert (=> b!133418 m!157587))

(declare-fun m!157589 () Bool)

(assert (=> b!133418 m!157589))

(declare-fun m!157591 () Bool)

(assert (=> b!133418 m!157591))

(assert (=> b!133418 m!157591))

(declare-fun m!157593 () Bool)

(assert (=> b!133418 m!157593))

(assert (=> b!133418 m!157571))

(declare-fun m!157595 () Bool)

(assert (=> b!133418 m!157595))

(declare-fun m!157597 () Bool)

(assert (=> b!133426 m!157597))

(assert (=> b!133426 m!156809))

(declare-fun m!157599 () Bool)

(assert (=> b!133426 m!157599))

(assert (=> b!133426 m!156809))

(assert (=> b!133426 m!157597))

(assert (=> b!133426 m!157539))

(assert (=> b!133426 m!157539))

(declare-fun m!157601 () Bool)

(assert (=> b!133426 m!157601))

(declare-fun m!157603 () Bool)

(assert (=> bm!14708 m!157603))

(declare-fun m!157605 () Bool)

(assert (=> bm!14706 m!157605))

(assert (=> b!133420 m!157539))

(assert (=> b!133420 m!157539))

(assert (=> b!133420 m!157547))

(declare-fun m!157607 () Bool)

(assert (=> b!133422 m!157607))

(assert (=> b!133430 m!157539))

(assert (=> b!133430 m!157539))

(declare-fun m!157609 () Bool)

(assert (=> b!133430 m!157609))

(assert (=> bm!14712 m!157585))

(declare-fun m!157611 () Bool)

(assert (=> bm!14710 m!157611))

(declare-fun m!157613 () Bool)

(assert (=> b!133429 m!157613))

(declare-fun m!157615 () Bool)

(assert (=> b!133419 m!157615))

(assert (=> d!40463 d!40667))

(declare-fun b!133447 () Bool)

(declare-fun res!64235 () Bool)

(declare-fun e!86952 () Bool)

(assert (=> b!133447 (=> (not res!64235) (not e!86952))))

(assert (=> b!133447 (= res!64235 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun d!40669 () Bool)

(declare-fun e!86953 () Bool)

(assert (=> d!40669 e!86953))

(declare-fun res!64232 () Bool)

(assert (=> d!40669 (=> (not res!64232) (not e!86953))))

(assert (=> d!40669 (= res!64232 (and (bvsge (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000000) (bvslt (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (size!2521 (_keys!4613 newMap!16)))))))

(declare-fun lt!69791 () Unit!4141)

(declare-fun choose!1 (array!4763 (_ BitVec 32) (_ BitVec 64)) Unit!4141)

(assert (=> d!40669 (= lt!69791 (choose!1 (_keys!4613 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40669 e!86952))

(declare-fun res!64233 () Bool)

(assert (=> d!40669 (=> (not res!64233) (not e!86952))))

(assert (=> d!40669 (= res!64233 (and (bvsge (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000000) (bvslt (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (size!2521 (_keys!4613 newMap!16)))))))

(assert (=> d!40669 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4613 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) lt!69791)))

(declare-fun b!133448 () Bool)

(assert (=> b!133448 (= e!86952 (bvslt (size!2521 (_keys!4613 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!133449 () Bool)

(assert (=> b!133449 (= e!86953 (= (arrayCountValidKeys!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4613 newMap!16) #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!133446 () Bool)

(declare-fun res!64234 () Bool)

(assert (=> b!133446 (=> (not res!64234) (not e!86952))))

(assert (=> b!133446 (= res!64234 (not (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))))))))

(assert (= (and d!40669 res!64233) b!133446))

(assert (= (and b!133446 res!64234) b!133447))

(assert (= (and b!133447 res!64235) b!133448))

(assert (= (and d!40669 res!64232) b!133449))

(assert (=> b!133447 m!156395))

(declare-fun m!157617 () Bool)

(assert (=> b!133447 m!157617))

(assert (=> d!40669 m!156395))

(declare-fun m!157619 () Bool)

(assert (=> d!40669 m!157619))

(assert (=> b!133449 m!156719))

(assert (=> b!133449 m!156733))

(assert (=> b!133449 m!156639))

(declare-fun m!157621 () Bool)

(assert (=> b!133446 m!157621))

(assert (=> b!133446 m!157621))

(declare-fun m!157623 () Bool)

(assert (=> b!133446 m!157623))

(assert (=> d!40463 d!40669))

(declare-fun call!14718 () ListLongMap!1653)

(declare-fun c!24734 () Bool)

(declare-fun call!14717 () ListLongMap!1653)

(declare-fun call!14719 () ListLongMap!1653)

(declare-fun c!24732 () Bool)

(declare-fun bm!14713 () Bool)

(declare-fun call!14720 () ListLongMap!1653)

(assert (=> bm!14713 (= call!14719 (+!169 (ite c!24732 call!14717 (ite c!24734 call!14718 call!14720)) (ite (or c!24732 c!24734) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!133450 () Bool)

(declare-fun e!86963 () Bool)

(declare-fun e!86957 () Bool)

(assert (=> b!133450 (= e!86963 e!86957)))

(declare-fun res!64241 () Bool)

(declare-fun call!14716 () Bool)

(assert (=> b!133450 (= res!64241 call!14716)))

(assert (=> b!133450 (=> (not res!64241) (not e!86957))))

(declare-fun b!133451 () Bool)

(declare-fun e!86961 () Unit!4141)

(declare-fun lt!69809 () Unit!4141)

(assert (=> b!133451 (= e!86961 lt!69809)))

(declare-fun lt!69795 () ListLongMap!1653)

(assert (=> b!133451 (= lt!69795 (getCurrentListMapNoExtraKeys!136 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69810 () (_ BitVec 64))

(assert (=> b!133451 (= lt!69810 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69794 () (_ BitVec 64))

(assert (=> b!133451 (= lt!69794 (select (arr!2252 lt!69441) #b00000000000000000000000000000000))))

(declare-fun lt!69808 () Unit!4141)

(assert (=> b!133451 (= lt!69808 (addStillContains!92 lt!69795 lt!69810 (zeroValue!2719 newMap!16) lt!69794))))

(assert (=> b!133451 (contains!884 (+!169 lt!69795 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16))) lt!69794)))

(declare-fun lt!69806 () Unit!4141)

(assert (=> b!133451 (= lt!69806 lt!69808)))

(declare-fun lt!69801 () ListLongMap!1653)

(assert (=> b!133451 (= lt!69801 (getCurrentListMapNoExtraKeys!136 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69793 () (_ BitVec 64))

(assert (=> b!133451 (= lt!69793 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69803 () (_ BitVec 64))

(assert (=> b!133451 (= lt!69803 (select (arr!2252 lt!69441) #b00000000000000000000000000000000))))

(declare-fun lt!69807 () Unit!4141)

(assert (=> b!133451 (= lt!69807 (addApplyDifferent!92 lt!69801 lt!69793 (minValue!2719 newMap!16) lt!69803))))

(assert (=> b!133451 (= (apply!116 (+!169 lt!69801 (tuple2!2565 lt!69793 (minValue!2719 newMap!16))) lt!69803) (apply!116 lt!69801 lt!69803))))

(declare-fun lt!69800 () Unit!4141)

(assert (=> b!133451 (= lt!69800 lt!69807)))

(declare-fun lt!69813 () ListLongMap!1653)

(assert (=> b!133451 (= lt!69813 (getCurrentListMapNoExtraKeys!136 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69802 () (_ BitVec 64))

(assert (=> b!133451 (= lt!69802 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69798 () (_ BitVec 64))

(assert (=> b!133451 (= lt!69798 (select (arr!2252 lt!69441) #b00000000000000000000000000000000))))

(declare-fun lt!69811 () Unit!4141)

(assert (=> b!133451 (= lt!69811 (addApplyDifferent!92 lt!69813 lt!69802 (zeroValue!2719 newMap!16) lt!69798))))

(assert (=> b!133451 (= (apply!116 (+!169 lt!69813 (tuple2!2565 lt!69802 (zeroValue!2719 newMap!16))) lt!69798) (apply!116 lt!69813 lt!69798))))

(declare-fun lt!69812 () Unit!4141)

(assert (=> b!133451 (= lt!69812 lt!69811)))

(declare-fun lt!69799 () ListLongMap!1653)

(assert (=> b!133451 (= lt!69799 (getCurrentListMapNoExtraKeys!136 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69797 () (_ BitVec 64))

(assert (=> b!133451 (= lt!69797 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69805 () (_ BitVec 64))

(assert (=> b!133451 (= lt!69805 (select (arr!2252 lt!69441) #b00000000000000000000000000000000))))

(assert (=> b!133451 (= lt!69809 (addApplyDifferent!92 lt!69799 lt!69797 (minValue!2719 newMap!16) lt!69805))))

(assert (=> b!133451 (= (apply!116 (+!169 lt!69799 (tuple2!2565 lt!69797 (minValue!2719 newMap!16))) lt!69805) (apply!116 lt!69799 lt!69805))))

(declare-fun b!133452 () Bool)

(declare-fun lt!69804 () ListLongMap!1653)

(assert (=> b!133452 (= e!86957 (= (apply!116 lt!69804 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 newMap!16)))))

(declare-fun b!133453 () Bool)

(declare-fun e!86955 () Bool)

(assert (=> b!133453 (= e!86955 (validKeyInArray!0 (select (arr!2252 lt!69441) #b00000000000000000000000000000000)))))

(declare-fun bm!14714 () Bool)

(assert (=> bm!14714 (= call!14718 call!14717)))

(declare-fun bm!14715 () Bool)

(assert (=> bm!14715 (= call!14716 (contains!884 lt!69804 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133454 () Bool)

(declare-fun e!86956 () Bool)

(assert (=> b!133454 (= e!86956 e!86963)))

(declare-fun c!24733 () Bool)

(assert (=> b!133454 (= c!24733 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133455 () Bool)

(declare-fun e!86965 () Bool)

(assert (=> b!133455 (= e!86965 (= (apply!116 lt!69804 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 newMap!16)))))

(declare-fun b!133457 () Bool)

(declare-fun e!86954 () ListLongMap!1653)

(assert (=> b!133457 (= e!86954 call!14720)))

(declare-fun bm!14716 () Bool)

(declare-fun call!14722 () ListLongMap!1653)

(assert (=> bm!14716 (= call!14722 call!14719)))

(declare-fun bm!14717 () Bool)

(declare-fun call!14721 () Bool)

(assert (=> bm!14717 (= call!14721 (contains!884 lt!69804 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133458 () Bool)

(declare-fun c!24730 () Bool)

(assert (=> b!133458 (= c!24730 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!86960 () ListLongMap!1653)

(assert (=> b!133458 (= e!86960 e!86954)))

(declare-fun bm!14718 () Bool)

(assert (=> bm!14718 (= call!14720 call!14718)))

(declare-fun e!86966 () Bool)

(declare-fun b!133459 () Bool)

(assert (=> b!133459 (= e!86966 (= (apply!116 lt!69804 (select (arr!2252 lt!69441) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 lt!69466) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133459 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 lt!69466)))))

(assert (=> b!133459 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 lt!69441)))))

(declare-fun b!133460 () Bool)

(declare-fun e!86959 () ListLongMap!1653)

(assert (=> b!133460 (= e!86959 e!86960)))

(assert (=> b!133460 (= c!24734 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133461 () Bool)

(declare-fun e!86962 () Bool)

(assert (=> b!133461 (= e!86962 (validKeyInArray!0 (select (arr!2252 lt!69441) #b00000000000000000000000000000000)))))

(declare-fun b!133462 () Bool)

(assert (=> b!133462 (= e!86959 (+!169 call!14719 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun b!133463 () Bool)

(declare-fun e!86958 () Bool)

(assert (=> b!133463 (= e!86958 e!86966)))

(declare-fun res!64242 () Bool)

(assert (=> b!133463 (=> (not res!64242) (not e!86966))))

(assert (=> b!133463 (= res!64242 (contains!884 lt!69804 (select (arr!2252 lt!69441) #b00000000000000000000000000000000)))))

(assert (=> b!133463 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 lt!69441)))))

(declare-fun bm!14719 () Bool)

(assert (=> bm!14719 (= call!14717 (getCurrentListMapNoExtraKeys!136 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!133464 () Bool)

(assert (=> b!133464 (= e!86963 (not call!14716))))

(declare-fun b!133465 () Bool)

(assert (=> b!133465 (= e!86954 call!14722)))

(declare-fun b!133466 () Bool)

(declare-fun Unit!4165 () Unit!4141)

(assert (=> b!133466 (= e!86961 Unit!4165)))

(declare-fun b!133467 () Bool)

(declare-fun e!86964 () Bool)

(assert (=> b!133467 (= e!86964 e!86965)))

(declare-fun res!64244 () Bool)

(assert (=> b!133467 (= res!64244 call!14721)))

(assert (=> b!133467 (=> (not res!64244) (not e!86965))))

(declare-fun b!133468 () Bool)

(declare-fun res!64238 () Bool)

(assert (=> b!133468 (=> (not res!64238) (not e!86956))))

(assert (=> b!133468 (= res!64238 e!86958)))

(declare-fun res!64243 () Bool)

(assert (=> b!133468 (=> res!64243 e!86958)))

(assert (=> b!133468 (= res!64243 (not e!86962))))

(declare-fun res!64236 () Bool)

(assert (=> b!133468 (=> (not res!64236) (not e!86962))))

(assert (=> b!133468 (= res!64236 (bvslt #b00000000000000000000000000000000 (size!2521 lt!69441)))))

(declare-fun b!133469 () Bool)

(declare-fun res!64239 () Bool)

(assert (=> b!133469 (=> (not res!64239) (not e!86956))))

(assert (=> b!133469 (= res!64239 e!86964)))

(declare-fun c!24731 () Bool)

(assert (=> b!133469 (= c!24731 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133470 () Bool)

(assert (=> b!133470 (= e!86960 call!14722)))

(declare-fun b!133456 () Bool)

(assert (=> b!133456 (= e!86964 (not call!14721))))

(declare-fun d!40671 () Bool)

(assert (=> d!40671 e!86956))

(declare-fun res!64240 () Bool)

(assert (=> d!40671 (=> (not res!64240) (not e!86956))))

(assert (=> d!40671 (= res!64240 (or (bvsge #b00000000000000000000000000000000 (size!2521 lt!69441)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 lt!69441)))))))

(declare-fun lt!69792 () ListLongMap!1653)

(assert (=> d!40671 (= lt!69804 lt!69792)))

(declare-fun lt!69796 () Unit!4141)

(assert (=> d!40671 (= lt!69796 e!86961)))

(declare-fun c!24729 () Bool)

(assert (=> d!40671 (= c!24729 e!86955)))

(declare-fun res!64237 () Bool)

(assert (=> d!40671 (=> (not res!64237) (not e!86955))))

(assert (=> d!40671 (= res!64237 (bvslt #b00000000000000000000000000000000 (size!2521 lt!69441)))))

(assert (=> d!40671 (= lt!69792 e!86959)))

(assert (=> d!40671 (= c!24732 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40671 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40671 (= (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69804)))

(assert (= (and d!40671 c!24732) b!133462))

(assert (= (and d!40671 (not c!24732)) b!133460))

(assert (= (and b!133460 c!24734) b!133470))

(assert (= (and b!133460 (not c!24734)) b!133458))

(assert (= (and b!133458 c!24730) b!133465))

(assert (= (and b!133458 (not c!24730)) b!133457))

(assert (= (or b!133465 b!133457) bm!14718))

(assert (= (or b!133470 bm!14718) bm!14714))

(assert (= (or b!133470 b!133465) bm!14716))

(assert (= (or b!133462 bm!14714) bm!14719))

(assert (= (or b!133462 bm!14716) bm!14713))

(assert (= (and d!40671 res!64237) b!133453))

(assert (= (and d!40671 c!24729) b!133451))

(assert (= (and d!40671 (not c!24729)) b!133466))

(assert (= (and d!40671 res!64240) b!133468))

(assert (= (and b!133468 res!64236) b!133461))

(assert (= (and b!133468 (not res!64243)) b!133463))

(assert (= (and b!133463 res!64242) b!133459))

(assert (= (and b!133468 res!64238) b!133469))

(assert (= (and b!133469 c!24731) b!133467))

(assert (= (and b!133469 (not c!24731)) b!133456))

(assert (= (and b!133467 res!64244) b!133455))

(assert (= (or b!133467 b!133456) bm!14717))

(assert (= (and b!133469 res!64239) b!133454))

(assert (= (and b!133454 c!24733) b!133450))

(assert (= (and b!133454 (not c!24733)) b!133464))

(assert (= (and b!133450 res!64241) b!133452))

(assert (= (or b!133450 b!133464) bm!14715))

(declare-fun b_lambda!5959 () Bool)

(assert (=> (not b_lambda!5959) (not b!133459)))

(assert (=> b!133459 t!6147))

(declare-fun b_and!8285 () Bool)

(assert (= b_and!8281 (and (=> t!6147 result!3993) b_and!8285)))

(assert (=> b!133459 t!6149))

(declare-fun b_and!8287 () Bool)

(assert (= b_and!8283 (and (=> t!6149 result!3995) b_and!8287)))

(assert (=> d!40671 m!156651))

(declare-fun m!157625 () Bool)

(assert (=> b!133461 m!157625))

(assert (=> b!133461 m!157625))

(declare-fun m!157627 () Bool)

(assert (=> b!133461 m!157627))

(declare-fun m!157629 () Bool)

(assert (=> b!133451 m!157629))

(declare-fun m!157631 () Bool)

(assert (=> b!133451 m!157631))

(declare-fun m!157633 () Bool)

(assert (=> b!133451 m!157633))

(declare-fun m!157635 () Bool)

(assert (=> b!133451 m!157635))

(declare-fun m!157637 () Bool)

(assert (=> b!133451 m!157637))

(assert (=> b!133451 m!157625))

(declare-fun m!157639 () Bool)

(assert (=> b!133451 m!157639))

(declare-fun m!157641 () Bool)

(assert (=> b!133451 m!157641))

(declare-fun m!157643 () Bool)

(assert (=> b!133451 m!157643))

(declare-fun m!157645 () Bool)

(assert (=> b!133451 m!157645))

(declare-fun m!157647 () Bool)

(assert (=> b!133451 m!157647))

(declare-fun m!157649 () Bool)

(assert (=> b!133451 m!157649))

(assert (=> b!133451 m!157643))

(assert (=> b!133451 m!157637))

(declare-fun m!157651 () Bool)

(assert (=> b!133451 m!157651))

(declare-fun m!157653 () Bool)

(assert (=> b!133451 m!157653))

(declare-fun m!157655 () Bool)

(assert (=> b!133451 m!157655))

(assert (=> b!133451 m!157655))

(declare-fun m!157657 () Bool)

(assert (=> b!133451 m!157657))

(assert (=> b!133451 m!157635))

(declare-fun m!157659 () Bool)

(assert (=> b!133451 m!157659))

(declare-fun m!157661 () Bool)

(assert (=> b!133459 m!157661))

(assert (=> b!133459 m!156809))

(declare-fun m!157663 () Bool)

(assert (=> b!133459 m!157663))

(assert (=> b!133459 m!156809))

(assert (=> b!133459 m!157661))

(assert (=> b!133459 m!157625))

(assert (=> b!133459 m!157625))

(declare-fun m!157665 () Bool)

(assert (=> b!133459 m!157665))

(declare-fun m!157667 () Bool)

(assert (=> bm!14715 m!157667))

(declare-fun m!157669 () Bool)

(assert (=> bm!14713 m!157669))

(assert (=> b!133453 m!157625))

(assert (=> b!133453 m!157625))

(assert (=> b!133453 m!157627))

(declare-fun m!157671 () Bool)

(assert (=> b!133455 m!157671))

(assert (=> b!133463 m!157625))

(assert (=> b!133463 m!157625))

(declare-fun m!157673 () Bool)

(assert (=> b!133463 m!157673))

(assert (=> bm!14719 m!157649))

(declare-fun m!157675 () Bool)

(assert (=> bm!14717 m!157675))

(declare-fun m!157677 () Bool)

(assert (=> b!133462 m!157677))

(declare-fun m!157679 () Bool)

(assert (=> b!133452 m!157679))

(assert (=> d!40463 d!40671))

(assert (=> d!40463 d!40501))

(declare-fun b!133471 () Bool)

(declare-fun e!86969 () Bool)

(assert (=> b!133471 (= e!86969 (contains!885 lt!69442 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) lt!69467)))))

(declare-fun b!133472 () Bool)

(declare-fun e!86967 () Bool)

(declare-fun call!14723 () Bool)

(assert (=> b!133472 (= e!86967 call!14723)))

(declare-fun b!133473 () Bool)

(declare-fun e!86970 () Bool)

(declare-fun e!86968 () Bool)

(assert (=> b!133473 (= e!86970 e!86968)))

(declare-fun res!64246 () Bool)

(assert (=> b!133473 (=> (not res!64246) (not e!86968))))

(assert (=> b!133473 (= res!64246 (not e!86969))))

(declare-fun res!64247 () Bool)

(assert (=> b!133473 (=> (not res!64247) (not e!86969))))

(assert (=> b!133473 (= res!64247 (validKeyInArray!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) lt!69467)))))

(declare-fun c!24735 () Bool)

(declare-fun bm!14720 () Bool)

(assert (=> bm!14720 (= call!14723 (arrayNoDuplicates!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (bvadd lt!69467 #b00000000000000000000000000000001) (ite c!24735 (Cons!1689 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) lt!69467) lt!69442) lt!69442)))))

(declare-fun d!40673 () Bool)

(declare-fun res!64245 () Bool)

(assert (=> d!40673 (=> res!64245 e!86970)))

(assert (=> d!40673 (= res!64245 (bvsge lt!69467 (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(assert (=> d!40673 (= (arrayNoDuplicates!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) lt!69467 lt!69442) e!86970)))

(declare-fun b!133474 () Bool)

(assert (=> b!133474 (= e!86968 e!86967)))

(assert (=> b!133474 (= c!24735 (validKeyInArray!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) lt!69467)))))

(declare-fun b!133475 () Bool)

(assert (=> b!133475 (= e!86967 call!14723)))

(assert (= (and d!40673 (not res!64245)) b!133473))

(assert (= (and b!133473 res!64247) b!133471))

(assert (= (and b!133473 res!64246) b!133474))

(assert (= (and b!133474 c!24735) b!133472))

(assert (= (and b!133474 (not c!24735)) b!133475))

(assert (= (or b!133472 b!133475) bm!14720))

(declare-fun m!157681 () Bool)

(assert (=> b!133471 m!157681))

(assert (=> b!133471 m!157681))

(declare-fun m!157683 () Bool)

(assert (=> b!133471 m!157683))

(assert (=> b!133473 m!157681))

(assert (=> b!133473 m!157681))

(declare-fun m!157685 () Bool)

(assert (=> b!133473 m!157685))

(assert (=> bm!14720 m!157681))

(declare-fun m!157687 () Bool)

(assert (=> bm!14720 m!157687))

(assert (=> b!133474 m!157681))

(assert (=> b!133474 m!157681))

(assert (=> b!133474 m!157685))

(assert (=> d!40463 d!40673))

(declare-fun d!40675 () Bool)

(declare-fun e!86973 () Bool)

(assert (=> d!40675 e!86973))

(declare-fun res!64250 () Bool)

(assert (=> d!40675 (=> (not res!64250) (not e!86973))))

(assert (=> d!40675 (= res!64250 (and (bvsge (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000000) (bvslt (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (size!2521 (_keys!4613 newMap!16)))))))

(declare-fun lt!69816 () Unit!4141)

(declare-fun choose!41 (array!4763 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1693) Unit!4141)

(assert (=> d!40675 (= lt!69816 (choose!41 (_keys!4613 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) lt!69467 lt!69442))))

(assert (=> d!40675 (bvslt (size!2521 (_keys!4613 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!40675 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4613 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) lt!69467 lt!69442) lt!69816)))

(declare-fun b!133478 () Bool)

(assert (=> b!133478 (= e!86973 (arrayNoDuplicates!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) lt!69467 lt!69442))))

(assert (= (and d!40675 res!64250) b!133478))

(assert (=> d!40675 m!156395))

(declare-fun m!157689 () Bool)

(assert (=> d!40675 m!157689))

(assert (=> b!133478 m!156719))

(assert (=> b!133478 m!156723))

(assert (=> d!40463 d!40675))

(assert (=> d!40463 d!40447))

(declare-fun lt!69817 () (_ BitVec 32))

(declare-fun d!40677 () Bool)

(assert (=> d!40677 (and (bvsge lt!69817 #b00000000000000000000000000000000) (bvsle lt!69817 (bvsub (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!86974 () (_ BitVec 32))

(assert (=> d!40677 (= lt!69817 e!86974)))

(declare-fun c!24736 () Bool)

(assert (=> d!40677 (= c!24736 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40677 (and (bvsle #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2521 (_keys!4613 newMap!16)) (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(assert (=> d!40677 (= (arrayCountValidKeys!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) lt!69817)))

(declare-fun b!133479 () Bool)

(declare-fun e!86975 () (_ BitVec 32))

(declare-fun call!14724 () (_ BitVec 32))

(assert (=> b!133479 (= e!86975 (bvadd #b00000000000000000000000000000001 call!14724))))

(declare-fun b!133480 () Bool)

(assert (=> b!133480 (= e!86975 call!14724)))

(declare-fun b!133481 () Bool)

(assert (=> b!133481 (= e!86974 e!86975)))

(declare-fun c!24737 () Bool)

(assert (=> b!133481 (= c!24737 (validKeyInArray!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!14721 () Bool)

(assert (=> bm!14721 (= call!14724 (arrayCountValidKeys!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133482 () Bool)

(assert (=> b!133482 (= e!86974 #b00000000000000000000000000000000)))

(assert (= (and d!40677 c!24736) b!133482))

(assert (= (and d!40677 (not c!24736)) b!133481))

(assert (= (and b!133481 c!24737) b!133479))

(assert (= (and b!133481 (not c!24737)) b!133480))

(assert (= (or b!133479 b!133480) bm!14721))

(assert (=> b!133481 m!157539))

(assert (=> b!133481 m!157539))

(assert (=> b!133481 m!157547))

(declare-fun m!157691 () Bool)

(assert (=> bm!14721 m!157691))

(assert (=> d!40463 d!40677))

(declare-fun d!40679 () Bool)

(assert (=> d!40679 (arrayContainsKey!0 lt!69460 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!69818 () Unit!4141)

(assert (=> d!40679 (= lt!69818 (choose!13 lt!69460 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))))))

(assert (=> d!40679 (bvsge (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000000)))

(assert (=> d!40679 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!69460 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))) lt!69818)))

(declare-fun bs!5529 () Bool)

(assert (= bs!5529 d!40679))

(assert (=> bs!5529 m!156395))

(assert (=> bs!5529 m!156727))

(assert (=> bs!5529 m!156395))

(declare-fun m!157693 () Bool)

(assert (=> bs!5529 m!157693))

(assert (=> d!40463 d!40679))

(assert (=> d!40463 d!40459))

(declare-fun d!40681 () Bool)

(declare-fun lt!69819 () (_ BitVec 32))

(assert (=> d!40681 (and (bvsge lt!69819 #b00000000000000000000000000000000) (bvsle lt!69819 (bvsub (size!2521 lt!69456) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))

(declare-fun e!86976 () (_ BitVec 32))

(assert (=> d!40681 (= lt!69819 e!86976)))

(declare-fun c!24738 () Bool)

(assert (=> d!40681 (= c!24738 (bvsge (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001)))))

(assert (=> d!40681 (and (bvsle (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001)) (bvsge (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001) (size!2521 lt!69456)))))

(assert (=> d!40681 (= (arrayCountValidKeys!0 lt!69456 (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001)) lt!69819)))

(declare-fun b!133483 () Bool)

(declare-fun e!86977 () (_ BitVec 32))

(declare-fun call!14725 () (_ BitVec 32))

(assert (=> b!133483 (= e!86977 (bvadd #b00000000000000000000000000000001 call!14725))))

(declare-fun b!133484 () Bool)

(assert (=> b!133484 (= e!86977 call!14725)))

(declare-fun b!133485 () Bool)

(assert (=> b!133485 (= e!86976 e!86977)))

(declare-fun c!24739 () Bool)

(assert (=> b!133485 (= c!24739 (validKeyInArray!0 (select (arr!2252 lt!69456) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))

(declare-fun bm!14722 () Bool)

(assert (=> bm!14722 (= call!14725 (arrayCountValidKeys!0 lt!69456 (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001) (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001)))))

(declare-fun b!133486 () Bool)

(assert (=> b!133486 (= e!86976 #b00000000000000000000000000000000)))

(assert (= (and d!40681 c!24738) b!133486))

(assert (= (and d!40681 (not c!24738)) b!133485))

(assert (= (and b!133485 c!24739) b!133483))

(assert (= (and b!133485 (not c!24739)) b!133484))

(assert (= (or b!133483 b!133484) bm!14722))

(declare-fun m!157695 () Bool)

(assert (=> b!133485 m!157695))

(assert (=> b!133485 m!157695))

(declare-fun m!157697 () Bool)

(assert (=> b!133485 m!157697))

(declare-fun m!157699 () Bool)

(assert (=> bm!14722 m!157699))

(assert (=> d!40463 d!40681))

(declare-fun d!40683 () Bool)

(declare-fun e!86980 () Bool)

(assert (=> d!40683 e!86980))

(declare-fun res!64253 () Bool)

(assert (=> d!40683 (=> (not res!64253) (not e!86980))))

(assert (=> d!40683 (= res!64253 (and (bvsge (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000000) (bvslt (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (size!2521 (_keys!4613 newMap!16)))))))

(declare-fun lt!69822 () Unit!4141)

(declare-fun choose!102 ((_ BitVec 64) array!4763 (_ BitVec 32) (_ BitVec 32)) Unit!4141)

(assert (=> d!40683 (= lt!69822 (choose!102 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (mask!7164 newMap!16)))))

(assert (=> d!40683 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40683 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (mask!7164 newMap!16)) lt!69822)))

(declare-fun b!133489 () Bool)

(assert (=> b!133489 (= e!86980 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (mask!7164 newMap!16)))))

(assert (= (and d!40683 res!64253) b!133489))

(assert (=> d!40683 m!156395))

(declare-fun m!157701 () Bool)

(assert (=> d!40683 m!157701))

(assert (=> d!40683 m!156651))

(assert (=> b!133489 m!156719))

(assert (=> b!133489 m!156703))

(assert (=> d!40463 d!40683))

(declare-fun d!40685 () Bool)

(assert (=> d!40685 (= (arrayCountValidKeys!0 lt!69456 (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!69825 () Unit!4141)

(declare-fun choose!2 (array!4763 (_ BitVec 32)) Unit!4141)

(assert (=> d!40685 (= lt!69825 (choose!2 lt!69456 (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))))))

(declare-fun e!86983 () Bool)

(assert (=> d!40685 e!86983))

(declare-fun res!64258 () Bool)

(assert (=> d!40685 (=> (not res!64258) (not e!86983))))

(assert (=> d!40685 (= res!64258 (and (bvsge (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000000) (bvslt (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (size!2521 lt!69456))))))

(assert (=> d!40685 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!69456 (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))) lt!69825)))

(declare-fun b!133494 () Bool)

(declare-fun res!64259 () Bool)

(assert (=> b!133494 (=> (not res!64259) (not e!86983))))

(assert (=> b!133494 (= res!64259 (validKeyInArray!0 (select (arr!2252 lt!69456) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))

(declare-fun b!133495 () Bool)

(assert (=> b!133495 (= e!86983 (bvslt (size!2521 lt!69456) #b01111111111111111111111111111111))))

(assert (= (and d!40685 res!64258) b!133494))

(assert (= (and b!133494 res!64259) b!133495))

(assert (=> d!40685 m!156711))

(declare-fun m!157703 () Bool)

(assert (=> d!40685 m!157703))

(assert (=> b!133494 m!157695))

(assert (=> b!133494 m!157695))

(assert (=> b!133494 m!157697))

(assert (=> d!40463 d!40685))

(declare-fun d!40687 () Bool)

(declare-fun res!64260 () Bool)

(declare-fun e!86984 () Bool)

(assert (=> d!40687 (=> res!64260 e!86984)))

(assert (=> d!40687 (= res!64260 (= (select (arr!2252 lt!69460) #b00000000000000000000000000000000) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40687 (= (arrayContainsKey!0 lt!69460 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000) e!86984)))

(declare-fun b!133496 () Bool)

(declare-fun e!86985 () Bool)

(assert (=> b!133496 (= e!86984 e!86985)))

(declare-fun res!64261 () Bool)

(assert (=> b!133496 (=> (not res!64261) (not e!86985))))

(assert (=> b!133496 (= res!64261 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 lt!69460)))))

(declare-fun b!133497 () Bool)

(assert (=> b!133497 (= e!86985 (arrayContainsKey!0 lt!69460 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40687 (not res!64260)) b!133496))

(assert (= (and b!133496 res!64261) b!133497))

(declare-fun m!157705 () Bool)

(assert (=> d!40687 m!157705))

(assert (=> b!133497 m!156395))

(declare-fun m!157707 () Bool)

(assert (=> b!133497 m!157707))

(assert (=> d!40463 d!40687))

(declare-fun d!40689 () Bool)

(assert (=> d!40689 (= (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69345)) (v!3203 (getValueByKey!173 (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69345)))))

(assert (=> d!40547 d!40689))

(declare-fun b!133499 () Bool)

(declare-fun e!86986 () Option!179)

(declare-fun e!86987 () Option!179)

(assert (=> b!133499 (= e!86986 e!86987)))

(declare-fun c!24741 () Bool)

(assert (=> b!133499 (= c!24741 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69345))))))

(declare-fun b!133498 () Bool)

(assert (=> b!133498 (= e!86986 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))))

(declare-fun c!24740 () Bool)

(declare-fun d!40691 () Bool)

(assert (=> d!40691 (= c!24740 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69345)))))

(assert (=> d!40691 (= (getValueByKey!173 (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69345) e!86986)))

(declare-fun b!133501 () Bool)

(assert (=> b!133501 (= e!86987 None!177)))

(declare-fun b!133500 () Bool)

(assert (=> b!133500 (= e!86987 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!69345))))

(assert (= (and d!40691 c!24740) b!133498))

(assert (= (and d!40691 (not c!24740)) b!133499))

(assert (= (and b!133499 c!24741) b!133500))

(assert (= (and b!133499 (not c!24741)) b!133501))

(declare-fun m!157709 () Bool)

(assert (=> b!133500 m!157709))

(assert (=> d!40547 d!40691))

(declare-fun d!40693 () Bool)

(declare-fun e!86989 () Bool)

(assert (=> d!40693 e!86989))

(declare-fun res!64262 () Bool)

(assert (=> d!40693 (=> res!64262 e!86989)))

(declare-fun lt!69826 () Bool)

(assert (=> d!40693 (= res!64262 (not lt!69826))))

(declare-fun lt!69827 () Bool)

(assert (=> d!40693 (= lt!69826 lt!69827)))

(declare-fun lt!69828 () Unit!4141)

(declare-fun e!86988 () Unit!4141)

(assert (=> d!40693 (= lt!69828 e!86988)))

(declare-fun c!24742 () Bool)

(assert (=> d!40693 (= c!24742 lt!69827)))

(assert (=> d!40693 (= lt!69827 (containsKey!176 (toList!842 lt!69486) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!40693 (= (contains!884 lt!69486 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!69826)))

(declare-fun b!133502 () Bool)

(declare-fun lt!69829 () Unit!4141)

(assert (=> b!133502 (= e!86988 lt!69829)))

(assert (=> b!133502 (= lt!69829 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69486) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!133502 (isDefined!125 (getValueByKey!173 (toList!842 lt!69486) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!133503 () Bool)

(declare-fun Unit!4166 () Unit!4141)

(assert (=> b!133503 (= e!86988 Unit!4166)))

(declare-fun b!133504 () Bool)

(assert (=> b!133504 (= e!86989 (isDefined!125 (getValueByKey!173 (toList!842 lt!69486) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!40693 c!24742) b!133502))

(assert (= (and d!40693 (not c!24742)) b!133503))

(assert (= (and d!40693 (not res!64262)) b!133504))

(assert (=> d!40693 m!156581))

(declare-fun m!157711 () Bool)

(assert (=> d!40693 m!157711))

(assert (=> b!133502 m!156581))

(declare-fun m!157713 () Bool)

(assert (=> b!133502 m!157713))

(assert (=> b!133502 m!156581))

(assert (=> b!133502 m!157379))

(assert (=> b!133502 m!157379))

(declare-fun m!157715 () Bool)

(assert (=> b!133502 m!157715))

(assert (=> b!133504 m!156581))

(assert (=> b!133504 m!157379))

(assert (=> b!133504 m!157379))

(assert (=> b!133504 m!157715))

(assert (=> b!133014 d!40693))

(declare-fun d!40695 () Bool)

(declare-fun lt!69830 () Bool)

(assert (=> d!40695 (= lt!69830 (select (content!134 (toList!842 lt!69639)) (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun e!86991 () Bool)

(assert (=> d!40695 (= lt!69830 e!86991)))

(declare-fun res!64264 () Bool)

(assert (=> d!40695 (=> (not res!64264) (not e!86991))))

(assert (=> d!40695 (= res!64264 ((_ is Cons!1690) (toList!842 lt!69639)))))

(assert (=> d!40695 (= (contains!886 (toList!842 lt!69639) (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69830)))

(declare-fun b!133505 () Bool)

(declare-fun e!86990 () Bool)

(assert (=> b!133505 (= e!86991 e!86990)))

(declare-fun res!64263 () Bool)

(assert (=> b!133505 (=> res!64263 e!86990)))

(assert (=> b!133505 (= res!64263 (= (h!2295 (toList!842 lt!69639)) (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!133506 () Bool)

(assert (=> b!133506 (= e!86990 (contains!886 (t!6137 (toList!842 lt!69639)) (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!40695 res!64264) b!133505))

(assert (= (and b!133505 (not res!64263)) b!133506))

(declare-fun m!157717 () Bool)

(assert (=> d!40695 m!157717))

(declare-fun m!157719 () Bool)

(assert (=> d!40695 m!157719))

(declare-fun m!157721 () Bool)

(assert (=> b!133506 m!157721))

(assert (=> b!133199 d!40695))

(declare-fun d!40697 () Bool)

(declare-fun res!64265 () Bool)

(declare-fun e!86992 () Bool)

(assert (=> d!40697 (=> res!64265 e!86992)))

(assert (=> d!40697 (= res!64265 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69167))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69167)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40697 (= (containsKey!176 (t!6137 (toList!842 lt!69167)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!86992)))

(declare-fun b!133507 () Bool)

(declare-fun e!86993 () Bool)

(assert (=> b!133507 (= e!86992 e!86993)))

(declare-fun res!64266 () Bool)

(assert (=> b!133507 (=> (not res!64266) (not e!86993))))

(assert (=> b!133507 (= res!64266 (and (or (not ((_ is Cons!1690) (t!6137 (toList!842 lt!69167)))) (bvsle (_1!1293 (h!2295 (t!6137 (toList!842 lt!69167)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1690) (t!6137 (toList!842 lt!69167))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 lt!69167)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!133508 () Bool)

(assert (=> b!133508 (= e!86993 (containsKey!176 (t!6137 (t!6137 (toList!842 lt!69167))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40697 (not res!64265)) b!133507))

(assert (= (and b!133507 res!64266) b!133508))

(assert (=> b!133508 m!156395))

(declare-fun m!157723 () Bool)

(assert (=> b!133508 m!157723))

(assert (=> b!133085 d!40697))

(assert (=> d!40503 d!40591))

(declare-fun lt!69831 () Bool)

(declare-fun d!40699 () Bool)

(assert (=> d!40699 (= lt!69831 (select (content!134 (toList!842 lt!69630)) (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun e!86995 () Bool)

(assert (=> d!40699 (= lt!69831 e!86995)))

(declare-fun res!64268 () Bool)

(assert (=> d!40699 (=> (not res!64268) (not e!86995))))

(assert (=> d!40699 (= res!64268 ((_ is Cons!1690) (toList!842 lt!69630)))))

(assert (=> d!40699 (= (contains!886 (toList!842 lt!69630) (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69831)))

(declare-fun b!133509 () Bool)

(declare-fun e!86994 () Bool)

(assert (=> b!133509 (= e!86995 e!86994)))

(declare-fun res!64267 () Bool)

(assert (=> b!133509 (=> res!64267 e!86994)))

(assert (=> b!133509 (= res!64267 (= (h!2295 (toList!842 lt!69630)) (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!133510 () Bool)

(assert (=> b!133510 (= e!86994 (contains!886 (t!6137 (toList!842 lt!69630)) (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!40699 res!64268) b!133509))

(assert (= (and b!133509 (not res!64267)) b!133510))

(declare-fun m!157725 () Bool)

(assert (=> d!40699 m!157725))

(declare-fun m!157727 () Bool)

(assert (=> d!40699 m!157727))

(declare-fun m!157729 () Bool)

(assert (=> b!133510 m!157729))

(assert (=> b!133194 d!40699))

(declare-fun b!133529 () Bool)

(declare-fun lt!69836 () SeekEntryResult!269)

(assert (=> b!133529 (and (bvsge (index!3238 lt!69836) #b00000000000000000000000000000000) (bvslt (index!3238 lt!69836) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun e!87006 () Bool)

(assert (=> b!133529 (= e!87006 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!69836)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133530 () Bool)

(declare-fun e!87007 () SeekEntryResult!269)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!133530 (= e!87007 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!133531 () Bool)

(declare-fun e!87008 () SeekEntryResult!269)

(assert (=> b!133531 (= e!87008 (Intermediate!269 true (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7164 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!133532 () Bool)

(assert (=> b!133532 (= e!87007 (Intermediate!269 false (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7164 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!133533 () Bool)

(assert (=> b!133533 (= e!87008 e!87007)))

(declare-fun c!24751 () Bool)

(declare-fun lt!69837 () (_ BitVec 64))

(assert (=> b!133533 (= c!24751 (or (= lt!69837 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)) (= (bvadd lt!69837 lt!69837) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133535 () Bool)

(assert (=> b!133535 (and (bvsge (index!3238 lt!69836) #b00000000000000000000000000000000) (bvslt (index!3238 lt!69836) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun res!64275 () Bool)

(assert (=> b!133535 (= res!64275 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!69836)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> b!133535 (=> res!64275 e!87006)))

(declare-fun e!87009 () Bool)

(assert (=> b!133535 (= e!87009 e!87006)))

(declare-fun b!133536 () Bool)

(declare-fun e!87010 () Bool)

(assert (=> b!133536 (= e!87010 e!87009)))

(declare-fun res!64277 () Bool)

(assert (=> b!133536 (= res!64277 (and ((_ is Intermediate!269) lt!69836) (not (undefined!1081 lt!69836)) (bvslt (x!15586 lt!69836) #b01111111111111111111111111111110) (bvsge (x!15586 lt!69836) #b00000000000000000000000000000000) (bvsge (x!15586 lt!69836) #b00000000000000000000000000000000)))))

(assert (=> b!133536 (=> (not res!64277) (not e!87009))))

(declare-fun b!133537 () Bool)

(assert (=> b!133537 (and (bvsge (index!3238 lt!69836) #b00000000000000000000000000000000) (bvslt (index!3238 lt!69836) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun res!64276 () Bool)

(assert (=> b!133537 (= res!64276 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!69836)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133537 (=> res!64276 e!87006)))

(declare-fun d!40701 () Bool)

(assert (=> d!40701 e!87010))

(declare-fun c!24749 () Bool)

(assert (=> d!40701 (= c!24749 (and ((_ is Intermediate!269) lt!69836) (undefined!1081 lt!69836)))))

(assert (=> d!40701 (= lt!69836 e!87008)))

(declare-fun c!24750 () Bool)

(assert (=> d!40701 (= c!24750 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!40701 (= lt!69837 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7164 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!40701 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!40701 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) lt!69836)))

(declare-fun b!133534 () Bool)

(assert (=> b!133534 (= e!87010 (bvsge (x!15586 lt!69836) #b01111111111111111111111111111110))))

(assert (= (and d!40701 c!24750) b!133531))

(assert (= (and d!40701 (not c!24750)) b!133533))

(assert (= (and b!133533 c!24751) b!133532))

(assert (= (and b!133533 (not c!24751)) b!133530))

(assert (= (and d!40701 c!24749) b!133534))

(assert (= (and d!40701 (not c!24749)) b!133536))

(assert (= (and b!133536 res!64277) b!133535))

(assert (= (and b!133535 (not res!64275)) b!133537))

(assert (= (and b!133537 (not res!64276)) b!133529))

(declare-fun m!157731 () Bool)

(assert (=> b!133529 m!157731))

(assert (=> d!40701 m!157027))

(declare-fun m!157733 () Bool)

(assert (=> d!40701 m!157733))

(assert (=> d!40701 m!156405))

(assert (=> b!133537 m!157731))

(assert (=> b!133530 m!157027))

(declare-fun m!157735 () Bool)

(assert (=> b!133530 m!157735))

(assert (=> b!133530 m!157735))

(assert (=> b!133530 m!156495))

(declare-fun m!157737 () Bool)

(assert (=> b!133530 m!157737))

(assert (=> b!133535 m!157731))

(assert (=> d!40511 d!40701))

(declare-fun d!40703 () Bool)

(declare-fun lt!69843 () (_ BitVec 32))

(declare-fun lt!69842 () (_ BitVec 32))

(assert (=> d!40703 (= lt!69843 (bvmul (bvxor lt!69842 (bvlshr lt!69842 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!40703 (= lt!69842 ((_ extract 31 0) (bvand (bvxor (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (bvlshr (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!40703 (and (bvsge (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000000) (let ((res!64278 (let ((h!2296 ((_ extract 31 0) (bvand (bvxor (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (bvlshr (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15689 (bvmul (bvxor h!2296 (bvlshr h!2296 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15689 (bvlshr x!15689 #b00000000000000000000000000001101)) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))) (and (bvslt res!64278 (bvadd (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000001)) (bvsge res!64278 #b00000000000000000000000000000000))))))

(assert (=> d!40703 (= (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (bvand (bvxor lt!69843 (bvlshr lt!69843 #b00000000000000000000000000001101)) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(assert (=> d!40511 d!40703))

(assert (=> d!40511 d!40431))

(assert (=> bm!14640 d!40455))

(declare-fun d!40705 () Bool)

(declare-fun e!87011 () Bool)

(assert (=> d!40705 e!87011))

(declare-fun res!64280 () Bool)

(assert (=> d!40705 (=> (not res!64280) (not e!87011))))

(declare-fun lt!69846 () ListLongMap!1653)

(assert (=> d!40705 (= res!64280 (contains!884 lt!69846 (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!69847 () List!1694)

(assert (=> d!40705 (= lt!69846 (ListLongMap!1654 lt!69847))))

(declare-fun lt!69844 () Unit!4141)

(declare-fun lt!69845 () Unit!4141)

(assert (=> d!40705 (= lt!69844 lt!69845)))

(assert (=> d!40705 (= (getValueByKey!173 lt!69847 (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!40705 (= lt!69845 (lemmaContainsTupThenGetReturnValue!88 lt!69847 (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!40705 (= lt!69847 (insertStrictlySorted!91 (toList!842 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659))) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!40705 (= (+!169 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659)) (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!69846)))

(declare-fun b!133538 () Bool)

(declare-fun res!64279 () Bool)

(assert (=> b!133538 (=> (not res!64279) (not e!87011))))

(assert (=> b!133538 (= res!64279 (= (getValueByKey!173 (toList!842 lt!69846) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!133539 () Bool)

(assert (=> b!133539 (= e!87011 (contains!886 (toList!842 lt!69846) (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!40705 res!64280) b!133538))

(assert (= (and b!133538 res!64279) b!133539))

(declare-fun m!157739 () Bool)

(assert (=> d!40705 m!157739))

(declare-fun m!157741 () Bool)

(assert (=> d!40705 m!157741))

(declare-fun m!157743 () Bool)

(assert (=> d!40705 m!157743))

(declare-fun m!157745 () Bool)

(assert (=> d!40705 m!157745))

(declare-fun m!157747 () Bool)

(assert (=> b!133538 m!157747))

(declare-fun m!157749 () Bool)

(assert (=> b!133539 m!157749))

(assert (=> bm!14652 d!40705))

(declare-fun d!40707 () Bool)

(declare-fun res!64281 () Bool)

(declare-fun e!87012 () Bool)

(assert (=> d!40707 (=> res!64281 e!87012)))

(assert (=> d!40707 (= res!64281 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40707 (= (containsKey!176 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!87012)))

(declare-fun b!133540 () Bool)

(declare-fun e!87013 () Bool)

(assert (=> b!133540 (= e!87012 e!87013)))

(declare-fun res!64282 () Bool)

(assert (=> b!133540 (=> (not res!64282) (not e!87013))))

(assert (=> b!133540 (= res!64282 (and (or (not ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (bvsle (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvslt (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!133541 () Bool)

(assert (=> b!133541 (= e!87013 (containsKey!176 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40707 (not res!64281)) b!133540))

(assert (= (and b!133540 res!64282) b!133541))

(assert (=> b!133541 m!156395))

(declare-fun m!157751 () Bool)

(assert (=> b!133541 m!157751))

(assert (=> d!40501 d!40707))

(assert (=> b!133208 d!40421))

(assert (=> b!132978 d!40561))

(declare-fun d!40709 () Bool)

(declare-fun e!87015 () Bool)

(assert (=> d!40709 e!87015))

(declare-fun res!64283 () Bool)

(assert (=> d!40709 (=> res!64283 e!87015)))

(declare-fun lt!69848 () Bool)

(assert (=> d!40709 (= res!64283 (not lt!69848))))

(declare-fun lt!69849 () Bool)

(assert (=> d!40709 (= lt!69848 lt!69849)))

(declare-fun lt!69850 () Unit!4141)

(declare-fun e!87014 () Unit!4141)

(assert (=> d!40709 (= lt!69850 e!87014)))

(declare-fun c!24752 () Bool)

(assert (=> d!40709 (= c!24752 lt!69849)))

(assert (=> d!40709 (= lt!69849 (containsKey!176 (toList!842 lt!69529) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40709 (= (contains!884 lt!69529 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69848)))

(declare-fun b!133542 () Bool)

(declare-fun lt!69851 () Unit!4141)

(assert (=> b!133542 (= e!87014 lt!69851)))

(assert (=> b!133542 (= lt!69851 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69529) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133542 (isDefined!125 (getValueByKey!173 (toList!842 lt!69529) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133543 () Bool)

(declare-fun Unit!4167 () Unit!4141)

(assert (=> b!133543 (= e!87014 Unit!4167)))

(declare-fun b!133544 () Bool)

(assert (=> b!133544 (= e!87015 (isDefined!125 (getValueByKey!173 (toList!842 lt!69529) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40709 c!24752) b!133542))

(assert (= (and d!40709 (not c!24752)) b!133543))

(assert (= (and d!40709 (not res!64283)) b!133544))

(declare-fun m!157753 () Bool)

(assert (=> d!40709 m!157753))

(declare-fun m!157755 () Bool)

(assert (=> b!133542 m!157755))

(declare-fun m!157757 () Bool)

(assert (=> b!133542 m!157757))

(assert (=> b!133542 m!157757))

(declare-fun m!157759 () Bool)

(assert (=> b!133542 m!157759))

(assert (=> b!133544 m!157757))

(assert (=> b!133544 m!157757))

(assert (=> b!133544 m!157759))

(assert (=> bm!14656 d!40709))

(declare-fun d!40711 () Bool)

(declare-fun e!87016 () Bool)

(assert (=> d!40711 e!87016))

(declare-fun res!64285 () Bool)

(assert (=> d!40711 (=> (not res!64285) (not e!87016))))

(declare-fun lt!69854 () ListLongMap!1653)

(assert (=> d!40711 (= res!64285 (contains!884 lt!69854 (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))

(declare-fun lt!69855 () List!1694)

(assert (=> d!40711 (= lt!69854 (ListLongMap!1654 lt!69855))))

(declare-fun lt!69852 () Unit!4141)

(declare-fun lt!69853 () Unit!4141)

(assert (=> d!40711 (= lt!69852 lt!69853)))

(assert (=> d!40711 (= (getValueByKey!173 lt!69855 (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))

(assert (=> d!40711 (= lt!69853 (lemmaContainsTupThenGetReturnValue!88 lt!69855 (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))

(assert (=> d!40711 (= lt!69855 (insertStrictlySorted!91 (toList!842 lt!69501) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))

(assert (=> d!40711 (= (+!169 lt!69501 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))) lt!69854)))

(declare-fun b!133545 () Bool)

(declare-fun res!64284 () Bool)

(assert (=> b!133545 (=> (not res!64284) (not e!87016))))

(assert (=> b!133545 (= res!64284 (= (getValueByKey!173 (toList!842 lt!69854) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))))))

(declare-fun b!133546 () Bool)

(assert (=> b!133546 (= e!87016 (contains!886 (toList!842 lt!69854) (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))))

(assert (= (and d!40711 res!64285) b!133545))

(assert (= (and b!133545 res!64284) b!133546))

(declare-fun m!157761 () Bool)

(assert (=> d!40711 m!157761))

(declare-fun m!157763 () Bool)

(assert (=> d!40711 m!157763))

(declare-fun m!157765 () Bool)

(assert (=> d!40711 m!157765))

(declare-fun m!157767 () Bool)

(assert (=> d!40711 m!157767))

(declare-fun m!157769 () Bool)

(assert (=> b!133545 m!157769))

(declare-fun m!157771 () Bool)

(assert (=> b!133546 m!157771))

(assert (=> b!133020 d!40711))

(declare-fun d!40713 () Bool)

(assert (=> d!40713 (= (apply!116 lt!69499 lt!69505) (get!1492 (getValueByKey!173 (toList!842 lt!69499) lt!69505)))))

(declare-fun bs!5530 () Bool)

(assert (= bs!5530 d!40713))

(declare-fun m!157773 () Bool)

(assert (=> bs!5530 m!157773))

(assert (=> bs!5530 m!157773))

(declare-fun m!157775 () Bool)

(assert (=> bs!5530 m!157775))

(assert (=> b!133020 d!40713))

(declare-fun d!40715 () Bool)

(declare-fun e!87017 () Bool)

(assert (=> d!40715 e!87017))

(declare-fun res!64287 () Bool)

(assert (=> d!40715 (=> (not res!64287) (not e!87017))))

(declare-fun lt!69858 () ListLongMap!1653)

(assert (=> d!40715 (= res!64287 (contains!884 lt!69858 (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun lt!69859 () List!1694)

(assert (=> d!40715 (= lt!69858 (ListLongMap!1654 lt!69859))))

(declare-fun lt!69856 () Unit!4141)

(declare-fun lt!69857 () Unit!4141)

(assert (=> d!40715 (= lt!69856 lt!69857)))

(assert (=> d!40715 (= (getValueByKey!173 lt!69859 (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) (Some!178 (_2!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!40715 (= lt!69857 (lemmaContainsTupThenGetReturnValue!88 lt!69859 (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!40715 (= lt!69859 (insertStrictlySorted!91 (toList!842 lt!69495) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!40715 (= (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69858)))

(declare-fun b!133547 () Bool)

(declare-fun res!64286 () Bool)

(assert (=> b!133547 (=> (not res!64286) (not e!87017))))

(assert (=> b!133547 (= res!64286 (= (getValueByKey!173 (toList!842 lt!69858) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) (Some!178 (_2!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun b!133548 () Bool)

(assert (=> b!133548 (= e!87017 (contains!886 (toList!842 lt!69858) (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(assert (= (and d!40715 res!64287) b!133547))

(assert (= (and b!133547 res!64286) b!133548))

(declare-fun m!157777 () Bool)

(assert (=> d!40715 m!157777))

(declare-fun m!157779 () Bool)

(assert (=> d!40715 m!157779))

(declare-fun m!157781 () Bool)

(assert (=> d!40715 m!157781))

(declare-fun m!157783 () Bool)

(assert (=> d!40715 m!157783))

(declare-fun m!157785 () Bool)

(assert (=> b!133547 m!157785))

(declare-fun m!157787 () Bool)

(assert (=> b!133548 m!157787))

(assert (=> b!133020 d!40715))

(declare-fun d!40717 () Bool)

(declare-fun e!87019 () Bool)

(assert (=> d!40717 e!87019))

(declare-fun res!64288 () Bool)

(assert (=> d!40717 (=> res!64288 e!87019)))

(declare-fun lt!69860 () Bool)

(assert (=> d!40717 (= res!64288 (not lt!69860))))

(declare-fun lt!69861 () Bool)

(assert (=> d!40717 (= lt!69860 lt!69861)))

(declare-fun lt!69862 () Unit!4141)

(declare-fun e!87018 () Unit!4141)

(assert (=> d!40717 (= lt!69862 e!87018)))

(declare-fun c!24753 () Bool)

(assert (=> d!40717 (= c!24753 lt!69861)))

(assert (=> d!40717 (= lt!69861 (containsKey!176 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69494))))

(assert (=> d!40717 (= (contains!884 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69494) lt!69860)))

(declare-fun b!133549 () Bool)

(declare-fun lt!69863 () Unit!4141)

(assert (=> b!133549 (= e!87018 lt!69863)))

(assert (=> b!133549 (= lt!69863 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69494))))

(assert (=> b!133549 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69494))))

(declare-fun b!133550 () Bool)

(declare-fun Unit!4168 () Unit!4141)

(assert (=> b!133550 (= e!87018 Unit!4168)))

(declare-fun b!133551 () Bool)

(assert (=> b!133551 (= e!87019 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69494)))))

(assert (= (and d!40717 c!24753) b!133549))

(assert (= (and d!40717 (not c!24753)) b!133550))

(assert (= (and d!40717 (not res!64288)) b!133551))

(declare-fun m!157789 () Bool)

(assert (=> d!40717 m!157789))

(declare-fun m!157791 () Bool)

(assert (=> b!133549 m!157791))

(declare-fun m!157793 () Bool)

(assert (=> b!133549 m!157793))

(assert (=> b!133549 m!157793))

(declare-fun m!157795 () Bool)

(assert (=> b!133549 m!157795))

(assert (=> b!133551 m!157793))

(assert (=> b!133551 m!157793))

(assert (=> b!133551 m!157795))

(assert (=> b!133020 d!40717))

(declare-fun d!40719 () Bool)

(assert (=> d!40719 (= (apply!116 lt!69513 lt!69498) (get!1492 (getValueByKey!173 (toList!842 lt!69513) lt!69498)))))

(declare-fun bs!5531 () Bool)

(assert (= bs!5531 d!40719))

(declare-fun m!157797 () Bool)

(assert (=> bs!5531 m!157797))

(assert (=> bs!5531 m!157797))

(declare-fun m!157799 () Bool)

(assert (=> bs!5531 m!157799))

(assert (=> b!133020 d!40719))

(declare-fun d!40721 () Bool)

(assert (=> d!40721 (contains!884 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69494)))

(declare-fun lt!69864 () Unit!4141)

(assert (=> d!40721 (= lt!69864 (choose!829 lt!69495 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69494))))

(assert (=> d!40721 (contains!884 lt!69495 lt!69494)))

(assert (=> d!40721 (= (addStillContains!92 lt!69495 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69494) lt!69864)))

(declare-fun bs!5532 () Bool)

(assert (= bs!5532 d!40721))

(assert (=> bs!5532 m!156801))

(assert (=> bs!5532 m!156801))

(assert (=> bs!5532 m!156803))

(declare-fun m!157801 () Bool)

(assert (=> bs!5532 m!157801))

(declare-fun m!157803 () Bool)

(assert (=> bs!5532 m!157803))

(assert (=> b!133020 d!40721))

(declare-fun d!40723 () Bool)

(assert (=> d!40723 (= (apply!116 (+!169 lt!69499 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))) lt!69505) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69499 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))) lt!69505)))))

(declare-fun bs!5533 () Bool)

(assert (= bs!5533 d!40723))

(declare-fun m!157805 () Bool)

(assert (=> bs!5533 m!157805))

(assert (=> bs!5533 m!157805))

(declare-fun m!157807 () Bool)

(assert (=> bs!5533 m!157807))

(assert (=> b!133020 d!40723))

(declare-fun d!40725 () Bool)

(assert (=> d!40725 (= (apply!116 (+!169 lt!69501 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))) lt!69503) (apply!116 lt!69501 lt!69503))))

(declare-fun lt!69865 () Unit!4141)

(assert (=> d!40725 (= lt!69865 (choose!828 lt!69501 lt!69493 (minValue!2719 newMap!16) lt!69503))))

(declare-fun e!87020 () Bool)

(assert (=> d!40725 e!87020))

(declare-fun res!64289 () Bool)

(assert (=> d!40725 (=> (not res!64289) (not e!87020))))

(assert (=> d!40725 (= res!64289 (contains!884 lt!69501 lt!69503))))

(assert (=> d!40725 (= (addApplyDifferent!92 lt!69501 lt!69493 (minValue!2719 newMap!16) lt!69503) lt!69865)))

(declare-fun b!133552 () Bool)

(assert (=> b!133552 (= e!87020 (not (= lt!69503 lt!69493)))))

(assert (= (and d!40725 res!64289) b!133552))

(assert (=> d!40725 m!156783))

(assert (=> d!40725 m!156797))

(assert (=> d!40725 m!156779))

(declare-fun m!157809 () Bool)

(assert (=> d!40725 m!157809))

(declare-fun m!157811 () Bool)

(assert (=> d!40725 m!157811))

(assert (=> d!40725 m!156783))

(assert (=> b!133020 d!40725))

(declare-fun d!40727 () Bool)

(assert (=> d!40727 (= (apply!116 (+!169 lt!69501 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))) lt!69503) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69501 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))) lt!69503)))))

(declare-fun bs!5534 () Bool)

(assert (= bs!5534 d!40727))

(declare-fun m!157813 () Bool)

(assert (=> bs!5534 m!157813))

(assert (=> bs!5534 m!157813))

(declare-fun m!157815 () Bool)

(assert (=> bs!5534 m!157815))

(assert (=> b!133020 d!40727))

(declare-fun d!40729 () Bool)

(declare-fun e!87021 () Bool)

(assert (=> d!40729 e!87021))

(declare-fun res!64291 () Bool)

(assert (=> d!40729 (=> (not res!64291) (not e!87021))))

(declare-fun lt!69868 () ListLongMap!1653)

(assert (=> d!40729 (= res!64291 (contains!884 lt!69868 (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))

(declare-fun lt!69869 () List!1694)

(assert (=> d!40729 (= lt!69868 (ListLongMap!1654 lt!69869))))

(declare-fun lt!69866 () Unit!4141)

(declare-fun lt!69867 () Unit!4141)

(assert (=> d!40729 (= lt!69866 lt!69867)))

(assert (=> d!40729 (= (getValueByKey!173 lt!69869 (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))

(assert (=> d!40729 (= lt!69867 (lemmaContainsTupThenGetReturnValue!88 lt!69869 (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))

(assert (=> d!40729 (= lt!69869 (insertStrictlySorted!91 (toList!842 lt!69499) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))

(assert (=> d!40729 (= (+!169 lt!69499 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))) lt!69868)))

(declare-fun b!133553 () Bool)

(declare-fun res!64290 () Bool)

(assert (=> b!133553 (=> (not res!64290) (not e!87021))))

(assert (=> b!133553 (= res!64290 (= (getValueByKey!173 (toList!842 lt!69868) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))))))

(declare-fun b!133554 () Bool)

(assert (=> b!133554 (= e!87021 (contains!886 (toList!842 lt!69868) (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))))

(assert (= (and d!40729 res!64291) b!133553))

(assert (= (and b!133553 res!64290) b!133554))

(declare-fun m!157817 () Bool)

(assert (=> d!40729 m!157817))

(declare-fun m!157819 () Bool)

(assert (=> d!40729 m!157819))

(declare-fun m!157821 () Bool)

(assert (=> d!40729 m!157821))

(declare-fun m!157823 () Bool)

(assert (=> d!40729 m!157823))

(declare-fun m!157825 () Bool)

(assert (=> b!133553 m!157825))

(declare-fun m!157827 () Bool)

(assert (=> b!133554 m!157827))

(assert (=> b!133020 d!40729))

(declare-fun d!40731 () Bool)

(assert (=> d!40731 (= (apply!116 lt!69501 lt!69503) (get!1492 (getValueByKey!173 (toList!842 lt!69501) lt!69503)))))

(declare-fun bs!5535 () Bool)

(assert (= bs!5535 d!40731))

(declare-fun m!157829 () Bool)

(assert (=> bs!5535 m!157829))

(assert (=> bs!5535 m!157829))

(declare-fun m!157831 () Bool)

(assert (=> bs!5535 m!157831))

(assert (=> b!133020 d!40731))

(declare-fun d!40733 () Bool)

(declare-fun e!87022 () Bool)

(assert (=> d!40733 e!87022))

(declare-fun res!64293 () Bool)

(assert (=> d!40733 (=> (not res!64293) (not e!87022))))

(declare-fun lt!69872 () ListLongMap!1653)

(assert (=> d!40733 (= res!64293 (contains!884 lt!69872 (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun lt!69873 () List!1694)

(assert (=> d!40733 (= lt!69872 (ListLongMap!1654 lt!69873))))

(declare-fun lt!69870 () Unit!4141)

(declare-fun lt!69871 () Unit!4141)

(assert (=> d!40733 (= lt!69870 lt!69871)))

(assert (=> d!40733 (= (getValueByKey!173 lt!69873 (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) (Some!178 (_2!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!40733 (= lt!69871 (lemmaContainsTupThenGetReturnValue!88 lt!69873 (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!40733 (= lt!69873 (insertStrictlySorted!91 (toList!842 lt!69513) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!40733 (= (+!169 lt!69513 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69872)))

(declare-fun b!133555 () Bool)

(declare-fun res!64292 () Bool)

(assert (=> b!133555 (=> (not res!64292) (not e!87022))))

(assert (=> b!133555 (= res!64292 (= (getValueByKey!173 (toList!842 lt!69872) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) (Some!178 (_2!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun b!133556 () Bool)

(assert (=> b!133556 (= e!87022 (contains!886 (toList!842 lt!69872) (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(assert (= (and d!40733 res!64293) b!133555))

(assert (= (and b!133555 res!64292) b!133556))

(declare-fun m!157833 () Bool)

(assert (=> d!40733 m!157833))

(declare-fun m!157835 () Bool)

(assert (=> d!40733 m!157835))

(declare-fun m!157837 () Bool)

(assert (=> d!40733 m!157837))

(declare-fun m!157839 () Bool)

(assert (=> d!40733 m!157839))

(declare-fun m!157841 () Bool)

(assert (=> b!133555 m!157841))

(declare-fun m!157843 () Bool)

(assert (=> b!133556 m!157843))

(assert (=> b!133020 d!40733))

(declare-fun d!40735 () Bool)

(assert (=> d!40735 (= (apply!116 (+!169 lt!69513 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69498) (apply!116 lt!69513 lt!69498))))

(declare-fun lt!69874 () Unit!4141)

(assert (=> d!40735 (= lt!69874 (choose!828 lt!69513 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69498))))

(declare-fun e!87023 () Bool)

(assert (=> d!40735 e!87023))

(declare-fun res!64294 () Bool)

(assert (=> d!40735 (=> (not res!64294) (not e!87023))))

(assert (=> d!40735 (= res!64294 (contains!884 lt!69513 lt!69498))))

(assert (=> d!40735 (= (addApplyDifferent!92 lt!69513 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69498) lt!69874)))

(declare-fun b!133557 () Bool)

(assert (=> b!133557 (= e!87023 (not (= lt!69498 lt!69502)))))

(assert (= (and d!40735 res!64294) b!133557))

(assert (=> d!40735 m!156781))

(assert (=> d!40735 m!156805))

(assert (=> d!40735 m!156785))

(declare-fun m!157845 () Bool)

(assert (=> d!40735 m!157845))

(declare-fun m!157847 () Bool)

(assert (=> d!40735 m!157847))

(assert (=> d!40735 m!156781))

(assert (=> b!133020 d!40735))

(declare-fun d!40737 () Bool)

(assert (=> d!40737 (= (apply!116 (+!169 lt!69499 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))) lt!69505) (apply!116 lt!69499 lt!69505))))

(declare-fun lt!69875 () Unit!4141)

(assert (=> d!40737 (= lt!69875 (choose!828 lt!69499 lt!69497 (minValue!2719 newMap!16) lt!69505))))

(declare-fun e!87024 () Bool)

(assert (=> d!40737 e!87024))

(declare-fun res!64295 () Bool)

(assert (=> d!40737 (=> (not res!64295) (not e!87024))))

(assert (=> d!40737 (= res!64295 (contains!884 lt!69499 lt!69505))))

(assert (=> d!40737 (= (addApplyDifferent!92 lt!69499 lt!69497 (minValue!2719 newMap!16) lt!69505) lt!69875)))

(declare-fun b!133558 () Bool)

(assert (=> b!133558 (= e!87024 (not (= lt!69505 lt!69497)))))

(assert (= (and d!40737 res!64295) b!133558))

(assert (=> d!40737 m!156789))

(assert (=> d!40737 m!156791))

(assert (=> d!40737 m!156775))

(declare-fun m!157849 () Bool)

(assert (=> d!40737 m!157849))

(declare-fun m!157851 () Bool)

(assert (=> d!40737 m!157851))

(assert (=> d!40737 m!156789))

(assert (=> b!133020 d!40737))

(assert (=> b!133020 d!40609))

(declare-fun d!40739 () Bool)

(assert (=> d!40739 (= (apply!116 (+!169 lt!69513 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69498) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69513 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69498)))))

(declare-fun bs!5536 () Bool)

(assert (= bs!5536 d!40739))

(declare-fun m!157853 () Bool)

(assert (=> bs!5536 m!157853))

(assert (=> bs!5536 m!157853))

(declare-fun m!157855 () Bool)

(assert (=> bs!5536 m!157855))

(assert (=> b!133020 d!40739))

(declare-fun d!40741 () Bool)

(assert (=> d!40741 (= (get!1492 (getValueByKey!173 (toList!842 lt!69353) lt!69338)) (v!3203 (getValueByKey!173 (toList!842 lt!69353) lt!69338)))))

(assert (=> d!40553 d!40741))

(declare-fun b!133560 () Bool)

(declare-fun e!87025 () Option!179)

(declare-fun e!87026 () Option!179)

(assert (=> b!133560 (= e!87025 e!87026)))

(declare-fun c!24755 () Bool)

(assert (=> b!133560 (= c!24755 (and ((_ is Cons!1690) (toList!842 lt!69353)) (not (= (_1!1293 (h!2295 (toList!842 lt!69353))) lt!69338))))))

(declare-fun b!133559 () Bool)

(assert (=> b!133559 (= e!87025 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69353)))))))

(declare-fun d!40743 () Bool)

(declare-fun c!24754 () Bool)

(assert (=> d!40743 (= c!24754 (and ((_ is Cons!1690) (toList!842 lt!69353)) (= (_1!1293 (h!2295 (toList!842 lt!69353))) lt!69338)))))

(assert (=> d!40743 (= (getValueByKey!173 (toList!842 lt!69353) lt!69338) e!87025)))

(declare-fun b!133562 () Bool)

(assert (=> b!133562 (= e!87026 None!177)))

(declare-fun b!133561 () Bool)

(assert (=> b!133561 (= e!87026 (getValueByKey!173 (t!6137 (toList!842 lt!69353)) lt!69338))))

(assert (= (and d!40743 c!24754) b!133559))

(assert (= (and d!40743 (not c!24754)) b!133560))

(assert (= (and b!133560 c!24755) b!133561))

(assert (= (and b!133560 (not c!24755)) b!133562))

(declare-fun m!157857 () Bool)

(assert (=> b!133561 m!157857))

(assert (=> d!40553 d!40743))

(declare-fun lt!69876 () Bool)

(declare-fun d!40745 () Bool)

(assert (=> d!40745 (= lt!69876 (select (content!134 (toList!842 lt!69634)) (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun e!87028 () Bool)

(assert (=> d!40745 (= lt!69876 e!87028)))

(declare-fun res!64297 () Bool)

(assert (=> d!40745 (=> (not res!64297) (not e!87028))))

(assert (=> d!40745 (= res!64297 ((_ is Cons!1690) (toList!842 lt!69634)))))

(assert (=> d!40745 (= (contains!886 (toList!842 lt!69634) (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69876)))

(declare-fun b!133563 () Bool)

(declare-fun e!87027 () Bool)

(assert (=> b!133563 (= e!87028 e!87027)))

(declare-fun res!64296 () Bool)

(assert (=> b!133563 (=> res!64296 e!87027)))

(assert (=> b!133563 (= res!64296 (= (h!2295 (toList!842 lt!69634)) (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!133564 () Bool)

(assert (=> b!133564 (= e!87027 (contains!886 (t!6137 (toList!842 lt!69634)) (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!40745 res!64297) b!133563))

(assert (= (and b!133563 (not res!64296)) b!133564))

(declare-fun m!157859 () Bool)

(assert (=> d!40745 m!157859))

(declare-fun m!157861 () Bool)

(assert (=> d!40745 m!157861))

(declare-fun m!157863 () Bool)

(assert (=> b!133564 m!157863))

(assert (=> b!133196 d!40745))

(declare-fun d!40747 () Bool)

(declare-fun e!87030 () Bool)

(assert (=> d!40747 e!87030))

(declare-fun res!64298 () Bool)

(assert (=> d!40747 (=> res!64298 e!87030)))

(declare-fun lt!69877 () Bool)

(assert (=> d!40747 (= res!64298 (not lt!69877))))

(declare-fun lt!69878 () Bool)

(assert (=> d!40747 (= lt!69877 lt!69878)))

(declare-fun lt!69879 () Unit!4141)

(declare-fun e!87029 () Unit!4141)

(assert (=> d!40747 (= lt!69879 e!87029)))

(declare-fun c!24756 () Bool)

(assert (=> d!40747 (= c!24756 lt!69878)))

(assert (=> d!40747 (= lt!69878 (containsKey!176 (toList!842 lt!69341) lt!69343))))

(assert (=> d!40747 (= (contains!884 lt!69341 lt!69343) lt!69877)))

(declare-fun b!133565 () Bool)

(declare-fun lt!69880 () Unit!4141)

(assert (=> b!133565 (= e!87029 lt!69880)))

(assert (=> b!133565 (= lt!69880 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69341) lt!69343))))

(assert (=> b!133565 (isDefined!125 (getValueByKey!173 (toList!842 lt!69341) lt!69343))))

(declare-fun b!133566 () Bool)

(declare-fun Unit!4169 () Unit!4141)

(assert (=> b!133566 (= e!87029 Unit!4169)))

(declare-fun b!133567 () Bool)

(assert (=> b!133567 (= e!87030 (isDefined!125 (getValueByKey!173 (toList!842 lt!69341) lt!69343)))))

(assert (= (and d!40747 c!24756) b!133565))

(assert (= (and d!40747 (not c!24756)) b!133566))

(assert (= (and d!40747 (not res!64298)) b!133567))

(declare-fun m!157865 () Bool)

(assert (=> d!40747 m!157865))

(declare-fun m!157867 () Bool)

(assert (=> b!133565 m!157867))

(assert (=> b!133565 m!157153))

(assert (=> b!133565 m!157153))

(declare-fun m!157869 () Bool)

(assert (=> b!133565 m!157869))

(assert (=> b!133567 m!157153))

(assert (=> b!133567 m!157153))

(assert (=> b!133567 m!157869))

(assert (=> d!40539 d!40747))

(declare-fun d!40749 () Bool)

(assert (=> d!40749 (= (apply!116 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69343) (apply!116 lt!69341 lt!69343))))

(assert (=> d!40749 true))

(declare-fun _$34!974 () Unit!4141)

(assert (=> d!40749 (= (choose!828 lt!69341 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69343) _$34!974)))

(declare-fun bs!5537 () Bool)

(assert (= bs!5537 d!40749))

(assert (=> bs!5537 m!156593))

(assert (=> bs!5537 m!156593))

(assert (=> bs!5537 m!156607))

(assert (=> bs!5537 m!156589))

(assert (=> d!40539 d!40749))

(assert (=> d!40539 d!40551))

(assert (=> d!40539 d!40537))

(assert (=> d!40539 d!40545))

(declare-fun d!40751 () Bool)

(declare-fun e!87031 () Bool)

(assert (=> d!40751 e!87031))

(declare-fun res!64300 () Bool)

(assert (=> d!40751 (=> (not res!64300) (not e!87031))))

(declare-fun lt!69883 () ListLongMap!1653)

(assert (=> d!40751 (= res!64300 (contains!884 lt!69883 (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun lt!69884 () List!1694)

(assert (=> d!40751 (= lt!69883 (ListLongMap!1654 lt!69884))))

(declare-fun lt!69881 () Unit!4141)

(declare-fun lt!69882 () Unit!4141)

(assert (=> d!40751 (= lt!69881 lt!69882)))

(assert (=> d!40751 (= (getValueByKey!173 lt!69884 (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) (Some!178 (_2!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!40751 (= lt!69882 (lemmaContainsTupThenGetReturnValue!88 lt!69884 (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!40751 (= lt!69884 (insertStrictlySorted!91 (toList!842 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666))) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!40751 (= (+!169 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666)) (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69883)))

(declare-fun b!133569 () Bool)

(declare-fun res!64299 () Bool)

(assert (=> b!133569 (=> (not res!64299) (not e!87031))))

(assert (=> b!133569 (= res!64299 (= (getValueByKey!173 (toList!842 lt!69883) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) (Some!178 (_2!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!133570 () Bool)

(assert (=> b!133570 (= e!87031 (contains!886 (toList!842 lt!69883) (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (= (and d!40751 res!64300) b!133569))

(assert (= (and b!133569 res!64299) b!133570))

(declare-fun m!157871 () Bool)

(assert (=> d!40751 m!157871))

(declare-fun m!157873 () Bool)

(assert (=> d!40751 m!157873))

(declare-fun m!157875 () Bool)

(assert (=> d!40751 m!157875))

(declare-fun m!157877 () Bool)

(assert (=> d!40751 m!157877))

(declare-fun m!157879 () Bool)

(assert (=> b!133569 m!157879))

(declare-fun m!157881 () Bool)

(assert (=> b!133570 m!157881))

(assert (=> bm!14659 d!40751))

(declare-fun d!40753 () Bool)

(assert (=> d!40753 (= (apply!116 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69345) (apply!116 lt!69339 lt!69345))))

(assert (=> d!40753 true))

(declare-fun _$34!975 () Unit!4141)

(assert (=> d!40753 (= (choose!828 lt!69339 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69345) _$34!975)))

(declare-fun bs!5538 () Bool)

(assert (= bs!5538 d!40753))

(assert (=> bs!5538 m!156599))

(assert (=> bs!5538 m!156599))

(assert (=> bs!5538 m!156601))

(assert (=> bs!5538 m!156585))

(assert (=> d!40531 d!40753))

(assert (=> d!40531 d!40541))

(assert (=> d!40531 d!40543))

(assert (=> d!40531 d!40547))

(declare-fun d!40755 () Bool)

(declare-fun e!87033 () Bool)

(assert (=> d!40755 e!87033))

(declare-fun res!64301 () Bool)

(assert (=> d!40755 (=> res!64301 e!87033)))

(declare-fun lt!69885 () Bool)

(assert (=> d!40755 (= res!64301 (not lt!69885))))

(declare-fun lt!69886 () Bool)

(assert (=> d!40755 (= lt!69885 lt!69886)))

(declare-fun lt!69887 () Unit!4141)

(declare-fun e!87032 () Unit!4141)

(assert (=> d!40755 (= lt!69887 e!87032)))

(declare-fun c!24757 () Bool)

(assert (=> d!40755 (= c!24757 lt!69886)))

(assert (=> d!40755 (= lt!69886 (containsKey!176 (toList!842 lt!69339) lt!69345))))

(assert (=> d!40755 (= (contains!884 lt!69339 lt!69345) lt!69885)))

(declare-fun b!133571 () Bool)

(declare-fun lt!69888 () Unit!4141)

(assert (=> b!133571 (= e!87032 lt!69888)))

(assert (=> b!133571 (= lt!69888 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69339) lt!69345))))

(assert (=> b!133571 (isDefined!125 (getValueByKey!173 (toList!842 lt!69339) lt!69345))))

(declare-fun b!133572 () Bool)

(declare-fun Unit!4170 () Unit!4141)

(assert (=> b!133572 (= e!87032 Unit!4170)))

(declare-fun b!133573 () Bool)

(assert (=> b!133573 (= e!87033 (isDefined!125 (getValueByKey!173 (toList!842 lt!69339) lt!69345)))))

(assert (= (and d!40755 c!24757) b!133571))

(assert (= (and d!40755 (not c!24757)) b!133572))

(assert (= (and d!40755 (not res!64301)) b!133573))

(declare-fun m!157883 () Bool)

(assert (=> d!40755 m!157883))

(declare-fun m!157885 () Bool)

(assert (=> b!133571 m!157885))

(assert (=> b!133571 m!157117))

(assert (=> b!133571 m!157117))

(declare-fun m!157887 () Bool)

(assert (=> b!133571 m!157887))

(assert (=> b!133573 m!157117))

(assert (=> b!133573 m!157117))

(assert (=> b!133573 m!157887))

(assert (=> d!40531 d!40755))

(declare-fun d!40757 () Bool)

(assert (=> d!40757 (contains!884 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))

(declare-fun lt!69891 () Unit!4141)

(declare-fun choose!835 (array!4763 array!4765 (_ BitVec 32) (_ BitVec 32) V!3481 V!3481 (_ BitVec 64) (_ BitVec 32) Int) Unit!4141)

(assert (=> d!40757 (= lt!69891 (choose!835 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(assert (=> d!40757 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40757 (= (lemmaArrayContainsKeyThenInListMap!42 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69891)))

(declare-fun bs!5539 () Bool)

(assert (= bs!5539 d!40757))

(assert (=> bs!5539 m!156545))

(assert (=> bs!5539 m!156545))

(assert (=> bs!5539 m!156395))

(assert (=> bs!5539 m!156549))

(assert (=> bs!5539 m!156395))

(declare-fun m!157889 () Bool)

(assert (=> bs!5539 m!157889))

(assert (=> bs!5539 m!156651))

(assert (=> b!132982 d!40757))

(assert (=> b!132982 d!40501))

(assert (=> b!132982 d!40479))

(declare-fun d!40759 () Bool)

(declare-fun e!87035 () Bool)

(assert (=> d!40759 e!87035))

(declare-fun res!64302 () Bool)

(assert (=> d!40759 (=> res!64302 e!87035)))

(declare-fun lt!69892 () Bool)

(assert (=> d!40759 (= res!64302 (not lt!69892))))

(declare-fun lt!69893 () Bool)

(assert (=> d!40759 (= lt!69892 lt!69893)))

(declare-fun lt!69894 () Unit!4141)

(declare-fun e!87034 () Unit!4141)

(assert (=> d!40759 (= lt!69894 e!87034)))

(declare-fun c!24758 () Bool)

(assert (=> d!40759 (= c!24758 lt!69893)))

(assert (=> d!40759 (= lt!69893 (containsKey!176 (toList!842 lt!69504) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40759 (= (contains!884 lt!69504 #b1000000000000000000000000000000000000000000000000000000000000000) lt!69892)))

(declare-fun b!133574 () Bool)

(declare-fun lt!69895 () Unit!4141)

(assert (=> b!133574 (= e!87034 lt!69895)))

(assert (=> b!133574 (= lt!69895 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69504) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133574 (isDefined!125 (getValueByKey!173 (toList!842 lt!69504) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133575 () Bool)

(declare-fun Unit!4171 () Unit!4141)

(assert (=> b!133575 (= e!87034 Unit!4171)))

(declare-fun b!133576 () Bool)

(assert (=> b!133576 (= e!87035 (isDefined!125 (getValueByKey!173 (toList!842 lt!69504) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40759 c!24758) b!133574))

(assert (= (and d!40759 (not c!24758)) b!133575))

(assert (= (and d!40759 (not res!64302)) b!133576))

(declare-fun m!157891 () Bool)

(assert (=> d!40759 m!157891))

(declare-fun m!157893 () Bool)

(assert (=> b!133574 m!157893))

(assert (=> b!133574 m!157227))

(assert (=> b!133574 m!157227))

(declare-fun m!157895 () Bool)

(assert (=> b!133574 m!157895))

(assert (=> b!133576 m!157227))

(assert (=> b!133576 m!157227))

(assert (=> b!133576 m!157895))

(assert (=> bm!14647 d!40759))

(declare-fun d!40761 () Bool)

(declare-fun res!64303 () Bool)

(declare-fun e!87036 () Bool)

(assert (=> d!40761 (=> res!64303 e!87036)))

(assert (=> d!40761 (= res!64303 (and ((_ is Cons!1690) (toList!842 lt!69344)) (= (_1!1293 (h!2295 (toList!842 lt!69344))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40761 (= (containsKey!176 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000) e!87036)))

(declare-fun b!133577 () Bool)

(declare-fun e!87037 () Bool)

(assert (=> b!133577 (= e!87036 e!87037)))

(declare-fun res!64304 () Bool)

(assert (=> b!133577 (=> (not res!64304) (not e!87037))))

(assert (=> b!133577 (= res!64304 (and (or (not ((_ is Cons!1690) (toList!842 lt!69344))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69344))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1690) (toList!842 lt!69344)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69344))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133578 () Bool)

(assert (=> b!133578 (= e!87037 (containsKey!176 (t!6137 (toList!842 lt!69344)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40761 (not res!64303)) b!133577))

(assert (= (and b!133577 res!64304) b!133578))

(declare-fun m!157897 () Bool)

(assert (=> b!133578 m!157897))

(assert (=> d!40515 d!40761))

(declare-fun d!40763 () Bool)

(declare-fun e!87039 () Bool)

(assert (=> d!40763 e!87039))

(declare-fun res!64305 () Bool)

(assert (=> d!40763 (=> res!64305 e!87039)))

(declare-fun lt!69896 () Bool)

(assert (=> d!40763 (= res!64305 (not lt!69896))))

(declare-fun lt!69897 () Bool)

(assert (=> d!40763 (= lt!69896 lt!69897)))

(declare-fun lt!69898 () Unit!4141)

(declare-fun e!87038 () Unit!4141)

(assert (=> d!40763 (= lt!69898 e!87038)))

(declare-fun c!24759 () Bool)

(assert (=> d!40763 (= c!24759 lt!69897)))

(assert (=> d!40763 (= lt!69897 (containsKey!176 (toList!842 lt!69504) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40763 (= (contains!884 lt!69504 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) lt!69896)))

(declare-fun b!133579 () Bool)

(declare-fun lt!69899 () Unit!4141)

(assert (=> b!133579 (= e!87038 lt!69899)))

(assert (=> b!133579 (= lt!69899 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69504) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133579 (isDefined!125 (getValueByKey!173 (toList!842 lt!69504) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133580 () Bool)

(declare-fun Unit!4172 () Unit!4141)

(assert (=> b!133580 (= e!87038 Unit!4172)))

(declare-fun b!133581 () Bool)

(assert (=> b!133581 (= e!87039 (isDefined!125 (getValueByKey!173 (toList!842 lt!69504) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!40763 c!24759) b!133579))

(assert (= (and d!40763 (not c!24759)) b!133580))

(assert (= (and d!40763 (not res!64305)) b!133581))

(assert (=> d!40763 m!156679))

(declare-fun m!157899 () Bool)

(assert (=> d!40763 m!157899))

(assert (=> b!133579 m!156679))

(declare-fun m!157901 () Bool)

(assert (=> b!133579 m!157901))

(assert (=> b!133579 m!156679))

(assert (=> b!133579 m!157389))

(assert (=> b!133579 m!157389))

(declare-fun m!157903 () Bool)

(assert (=> b!133579 m!157903))

(assert (=> b!133581 m!156679))

(assert (=> b!133581 m!157389))

(assert (=> b!133581 m!157389))

(assert (=> b!133581 m!157903))

(assert (=> b!133032 d!40763))

(declare-fun d!40765 () Bool)

(declare-fun res!64306 () Bool)

(declare-fun e!87040 () Bool)

(assert (=> d!40765 (=> (not res!64306) (not e!87040))))

(assert (=> d!40765 (= res!64306 (simpleValid!92 (_2!1294 lt!69445)))))

(assert (=> d!40765 (= (valid!542 (_2!1294 lt!69445)) e!87040)))

(declare-fun b!133582 () Bool)

(declare-fun res!64307 () Bool)

(assert (=> b!133582 (=> (not res!64307) (not e!87040))))

(assert (=> b!133582 (= res!64307 (= (arrayCountValidKeys!0 (_keys!4613 (_2!1294 lt!69445)) #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69445)))) (_size!597 (_2!1294 lt!69445))))))

(declare-fun b!133583 () Bool)

(declare-fun res!64308 () Bool)

(assert (=> b!133583 (=> (not res!64308) (not e!87040))))

(assert (=> b!133583 (= res!64308 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4613 (_2!1294 lt!69445)) (mask!7164 (_2!1294 lt!69445))))))

(declare-fun b!133584 () Bool)

(assert (=> b!133584 (= e!87040 (arrayNoDuplicates!0 (_keys!4613 (_2!1294 lt!69445)) #b00000000000000000000000000000000 Nil!1690))))

(assert (= (and d!40765 res!64306) b!133582))

(assert (= (and b!133582 res!64307) b!133583))

(assert (= (and b!133583 res!64308) b!133584))

(declare-fun m!157905 () Bool)

(assert (=> d!40765 m!157905))

(declare-fun m!157907 () Bool)

(assert (=> b!133582 m!157907))

(declare-fun m!157909 () Bool)

(assert (=> b!133583 m!157909))

(declare-fun m!157911 () Bool)

(assert (=> b!133584 m!157911))

(assert (=> b!132975 d!40765))

(declare-fun d!40767 () Bool)

(assert (=> d!40767 (= (apply!116 lt!69529 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69529) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5540 () Bool)

(assert (= bs!5540 d!40767))

(assert (=> bs!5540 m!157757))

(assert (=> bs!5540 m!157757))

(declare-fun m!157913 () Bool)

(assert (=> bs!5540 m!157913))

(assert (=> b!133054 d!40767))

(assert (=> d!40567 d!40569))

(assert (=> d!40567 d!40571))

(declare-fun d!40769 () Bool)

(assert (=> d!40769 (isDefined!125 (getValueByKey!173 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40769 true))

(declare-fun _$12!399 () Unit!4141)

(assert (=> d!40769 (= (choose!831 (toList!842 lt!69167) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) _$12!399)))

(declare-fun bs!5541 () Bool)

(assert (= bs!5541 d!40769))

(assert (=> bs!5541 m!156395))

(assert (=> bs!5541 m!156517))

(assert (=> bs!5541 m!156517))

(assert (=> bs!5541 m!156519))

(assert (=> d!40567 d!40769))

(declare-fun d!40771 () Bool)

(declare-fun res!64313 () Bool)

(declare-fun e!87045 () Bool)

(assert (=> d!40771 (=> res!64313 e!87045)))

(assert (=> d!40771 (= res!64313 (or ((_ is Nil!1691) (toList!842 lt!69167)) ((_ is Nil!1691) (t!6137 (toList!842 lt!69167)))))))

(assert (=> d!40771 (= (isStrictlySorted!309 (toList!842 lt!69167)) e!87045)))

(declare-fun b!133589 () Bool)

(declare-fun e!87046 () Bool)

(assert (=> b!133589 (= e!87045 e!87046)))

(declare-fun res!64314 () Bool)

(assert (=> b!133589 (=> (not res!64314) (not e!87046))))

(assert (=> b!133589 (= res!64314 (bvslt (_1!1293 (h!2295 (toList!842 lt!69167))) (_1!1293 (h!2295 (t!6137 (toList!842 lt!69167))))))))

(declare-fun b!133590 () Bool)

(assert (=> b!133590 (= e!87046 (isStrictlySorted!309 (t!6137 (toList!842 lt!69167))))))

(assert (= (and d!40771 (not res!64313)) b!133589))

(assert (= (and b!133589 res!64314) b!133590))

(declare-fun m!157915 () Bool)

(assert (=> b!133590 m!157915))

(assert (=> d!40567 d!40771))

(assert (=> d!40529 d!40455))

(declare-fun b!133607 () Bool)

(declare-fun e!87057 () Bool)

(declare-fun lt!69902 () SeekEntryResult!269)

(assert (=> b!133607 (= e!87057 ((_ is Undefined!269) lt!69902))))

(declare-fun b!133608 () Bool)

(declare-fun e!87055 () Bool)

(declare-fun call!14731 () Bool)

(assert (=> b!133608 (= e!87055 (not call!14731))))

(declare-fun b!133609 () Bool)

(declare-fun e!87056 () Bool)

(declare-fun e!87058 () Bool)

(assert (=> b!133609 (= e!87056 e!87058)))

(declare-fun res!64324 () Bool)

(declare-fun call!14730 () Bool)

(assert (=> b!133609 (= res!64324 call!14730)))

(assert (=> b!133609 (=> (not res!64324) (not e!87058))))

(declare-fun b!133610 () Bool)

(declare-fun res!64325 () Bool)

(assert (=> b!133610 (=> (not res!64325) (not e!87055))))

(assert (=> b!133610 (= res!64325 call!14730)))

(assert (=> b!133610 (= e!87057 e!87055)))

(declare-fun b!133612 () Bool)

(declare-fun res!64326 () Bool)

(assert (=> b!133612 (= res!64326 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3236 lt!69902)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133612 (=> (not res!64326) (not e!87058))))

(declare-fun b!133613 () Bool)

(assert (=> b!133613 (= e!87058 (not call!14731))))

(declare-fun b!133614 () Bool)

(assert (=> b!133614 (= e!87056 e!87057)))

(declare-fun c!24764 () Bool)

(assert (=> b!133614 (= c!24764 ((_ is MissingVacant!269) lt!69902))))

(declare-fun b!133611 () Bool)

(declare-fun res!64323 () Bool)

(assert (=> b!133611 (=> (not res!64323) (not e!87055))))

(assert (=> b!133611 (= res!64323 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3239 lt!69902)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!40773 () Bool)

(assert (=> d!40773 e!87056))

(declare-fun c!24765 () Bool)

(assert (=> d!40773 (= c!24765 ((_ is MissingZero!269) lt!69902))))

(assert (=> d!40773 (= lt!69902 (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(assert (=> d!40773 true))

(declare-fun _$34!978 () Unit!4141)

(assert (=> d!40773 (= (choose!827 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (defaultEntry!2864 newMap!16)) _$34!978)))

(declare-fun bm!14727 () Bool)

(assert (=> bm!14727 (= call!14730 (inRange!0 (ite c!24765 (index!3236 lt!69902) (index!3239 lt!69902)) (mask!7164 newMap!16)))))

(declare-fun bm!14728 () Bool)

(assert (=> bm!14728 (= call!14731 (arrayContainsKey!0 (_keys!4613 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!40773 c!24765) b!133609))

(assert (= (and d!40773 (not c!24765)) b!133614))

(assert (= (and b!133609 res!64324) b!133612))

(assert (= (and b!133612 res!64326) b!133613))

(assert (= (and b!133614 c!24764) b!133610))

(assert (= (and b!133614 (not c!24764)) b!133607))

(assert (= (and b!133610 res!64325) b!133611))

(assert (= (and b!133611 res!64323) b!133608))

(assert (= (or b!133609 b!133610) bm!14727))

(assert (= (or b!133613 b!133608) bm!14728))

(declare-fun m!157917 () Bool)

(assert (=> bm!14727 m!157917))

(assert (=> bm!14728 m!156395))

(assert (=> bm!14728 m!156535))

(assert (=> d!40773 m!156395))

(assert (=> d!40773 m!156563))

(declare-fun m!157919 () Bool)

(assert (=> b!133611 m!157919))

(declare-fun m!157921 () Bool)

(assert (=> b!133612 m!157921))

(assert (=> d!40529 d!40773))

(assert (=> d!40529 d!40591))

(declare-fun d!40775 () Bool)

(assert (=> d!40775 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5542 () Bool)

(assert (= bs!5542 d!40775))

(assert (=> bs!5542 m!156909))

(declare-fun m!157923 () Bool)

(assert (=> bs!5542 m!157923))

(assert (=> b!133079 d!40775))

(declare-fun b!133616 () Bool)

(declare-fun e!87059 () Option!179)

(declare-fun e!87060 () Option!179)

(assert (=> b!133616 (= e!87059 e!87060)))

(declare-fun c!24767 () Bool)

(assert (=> b!133616 (= c!24767 (and ((_ is Cons!1690) (toList!842 lt!69344)) (not (= (_1!1293 (h!2295 (toList!842 lt!69344))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!133615 () Bool)

(assert (=> b!133615 (= e!87059 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69344)))))))

(declare-fun d!40777 () Bool)

(declare-fun c!24766 () Bool)

(assert (=> d!40777 (= c!24766 (and ((_ is Cons!1690) (toList!842 lt!69344)) (= (_1!1293 (h!2295 (toList!842 lt!69344))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!40777 (= (getValueByKey!173 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!87059)))

(declare-fun b!133618 () Bool)

(assert (=> b!133618 (= e!87060 None!177)))

(declare-fun b!133617 () Bool)

(assert (=> b!133617 (= e!87060 (getValueByKey!173 (t!6137 (toList!842 lt!69344)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!40777 c!24766) b!133615))

(assert (= (and d!40777 (not c!24766)) b!133616))

(assert (= (and b!133616 c!24767) b!133617))

(assert (= (and b!133616 (not c!24767)) b!133618))

(assert (=> b!133617 m!156581))

(declare-fun m!157925 () Bool)

(assert (=> b!133617 m!157925))

(assert (=> b!133079 d!40777))

(declare-fun d!40779 () Bool)

(assert (=> d!40779 (= (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and (not (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133122 d!40779))

(declare-fun d!40781 () Bool)

(declare-fun e!87062 () Bool)

(assert (=> d!40781 e!87062))

(declare-fun res!64327 () Bool)

(assert (=> d!40781 (=> res!64327 e!87062)))

(declare-fun lt!69903 () Bool)

(assert (=> d!40781 (= res!64327 (not lt!69903))))

(declare-fun lt!69904 () Bool)

(assert (=> d!40781 (= lt!69903 lt!69904)))

(declare-fun lt!69905 () Unit!4141)

(declare-fun e!87061 () Unit!4141)

(assert (=> d!40781 (= lt!69905 e!87061)))

(declare-fun c!24768 () Bool)

(assert (=> d!40781 (= c!24768 lt!69904)))

(assert (=> d!40781 (= lt!69904 (containsKey!176 (toList!842 lt!69639) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40781 (= (contains!884 lt!69639 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69903)))

(declare-fun b!133619 () Bool)

(declare-fun lt!69906 () Unit!4141)

(assert (=> b!133619 (= e!87061 lt!69906)))

(assert (=> b!133619 (= lt!69906 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69639) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> b!133619 (isDefined!125 (getValueByKey!173 (toList!842 lt!69639) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133620 () Bool)

(declare-fun Unit!4173 () Unit!4141)

(assert (=> b!133620 (= e!87061 Unit!4173)))

(declare-fun b!133621 () Bool)

(assert (=> b!133621 (= e!87062 (isDefined!125 (getValueByKey!173 (toList!842 lt!69639) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!40781 c!24768) b!133619))

(assert (= (and d!40781 (not c!24768)) b!133620))

(assert (= (and d!40781 (not res!64327)) b!133621))

(declare-fun m!157927 () Bool)

(assert (=> d!40781 m!157927))

(declare-fun m!157929 () Bool)

(assert (=> b!133619 m!157929))

(assert (=> b!133619 m!157173))

(assert (=> b!133619 m!157173))

(declare-fun m!157931 () Bool)

(assert (=> b!133619 m!157931))

(assert (=> b!133621 m!157173))

(assert (=> b!133621 m!157173))

(assert (=> b!133621 m!157931))

(assert (=> d!40557 d!40781))

(declare-fun b!133623 () Bool)

(declare-fun e!87063 () Option!179)

(declare-fun e!87064 () Option!179)

(assert (=> b!133623 (= e!87063 e!87064)))

(declare-fun c!24770 () Bool)

(assert (=> b!133623 (= c!24770 (and ((_ is Cons!1690) lt!69640) (not (= (_1!1293 (h!2295 lt!69640)) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!133622 () Bool)

(assert (=> b!133622 (= e!87063 (Some!178 (_2!1293 (h!2295 lt!69640))))))

(declare-fun c!24769 () Bool)

(declare-fun d!40783 () Bool)

(assert (=> d!40783 (= c!24769 (and ((_ is Cons!1690) lt!69640) (= (_1!1293 (h!2295 lt!69640)) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!40783 (= (getValueByKey!173 lt!69640 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87063)))

(declare-fun b!133625 () Bool)

(assert (=> b!133625 (= e!87064 None!177)))

(declare-fun b!133624 () Bool)

(assert (=> b!133624 (= e!87064 (getValueByKey!173 (t!6137 lt!69640) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!40783 c!24769) b!133622))

(assert (= (and d!40783 (not c!24769)) b!133623))

(assert (= (and b!133623 c!24770) b!133624))

(assert (= (and b!133623 (not c!24770)) b!133625))

(declare-fun m!157933 () Bool)

(assert (=> b!133624 m!157933))

(assert (=> d!40557 d!40783))

(declare-fun d!40785 () Bool)

(assert (=> d!40785 (= (getValueByKey!173 lt!69640 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun lt!69907 () Unit!4141)

(assert (=> d!40785 (= lt!69907 (choose!833 lt!69640 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun e!87065 () Bool)

(assert (=> d!40785 e!87065))

(declare-fun res!64328 () Bool)

(assert (=> d!40785 (=> (not res!64328) (not e!87065))))

(assert (=> d!40785 (= res!64328 (isStrictlySorted!309 lt!69640))))

(assert (=> d!40785 (= (lemmaContainsTupThenGetReturnValue!88 lt!69640 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69907)))

(declare-fun b!133626 () Bool)

(declare-fun res!64329 () Bool)

(assert (=> b!133626 (=> (not res!64329) (not e!87065))))

(assert (=> b!133626 (= res!64329 (containsKey!176 lt!69640 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133627 () Bool)

(assert (=> b!133627 (= e!87065 (contains!886 lt!69640 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!40785 res!64328) b!133626))

(assert (= (and b!133626 res!64329) b!133627))

(assert (=> d!40785 m!157167))

(declare-fun m!157935 () Bool)

(assert (=> d!40785 m!157935))

(declare-fun m!157937 () Bool)

(assert (=> d!40785 m!157937))

(declare-fun m!157939 () Bool)

(assert (=> b!133626 m!157939))

(declare-fun m!157941 () Bool)

(assert (=> b!133627 m!157941))

(assert (=> d!40557 d!40785))

(declare-fun b!133628 () Bool)

(declare-fun res!64330 () Bool)

(declare-fun e!87070 () Bool)

(assert (=> b!133628 (=> (not res!64330) (not e!87070))))

(declare-fun lt!69908 () List!1694)

(assert (=> b!133628 (= res!64330 (containsKey!176 lt!69908 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133629 () Bool)

(declare-fun e!87068 () List!1694)

(declare-fun e!87069 () List!1694)

(assert (=> b!133629 (= e!87068 e!87069)))

(declare-fun c!24774 () Bool)

(assert (=> b!133629 (= c!24774 (and ((_ is Cons!1690) (toList!842 lt!69335)) (= (_1!1293 (h!2295 (toList!842 lt!69335))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun bm!14729 () Bool)

(declare-fun call!14733 () List!1694)

(declare-fun call!14732 () List!1694)

(assert (=> bm!14729 (= call!14733 call!14732)))

(declare-fun b!133630 () Bool)

(declare-fun e!87066 () List!1694)

(assert (=> b!133630 (= e!87066 call!14733)))

(declare-fun b!133631 () Bool)

(declare-fun c!24773 () Bool)

(assert (=> b!133631 (= c!24773 (and ((_ is Cons!1690) (toList!842 lt!69335)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69335))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> b!133631 (= e!87069 e!87066)))

(declare-fun b!133632 () Bool)

(assert (=> b!133632 (= e!87070 (contains!886 lt!69908 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!133633 () Bool)

(assert (=> b!133633 (= e!87069 call!14732)))

(declare-fun d!40787 () Bool)

(assert (=> d!40787 e!87070))

(declare-fun res!64331 () Bool)

(assert (=> d!40787 (=> (not res!64331) (not e!87070))))

(assert (=> d!40787 (= res!64331 (isStrictlySorted!309 lt!69908))))

(assert (=> d!40787 (= lt!69908 e!87068)))

(declare-fun c!24772 () Bool)

(assert (=> d!40787 (= c!24772 (and ((_ is Cons!1690) (toList!842 lt!69335)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69335))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!40787 (isStrictlySorted!309 (toList!842 lt!69335))))

(assert (=> d!40787 (= (insertStrictlySorted!91 (toList!842 lt!69335) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69908)))

(declare-fun e!87067 () List!1694)

(declare-fun b!133634 () Bool)

(assert (=> b!133634 (= e!87067 (ite c!24774 (t!6137 (toList!842 lt!69335)) (ite c!24773 (Cons!1690 (h!2295 (toList!842 lt!69335)) (t!6137 (toList!842 lt!69335))) Nil!1691)))))

(declare-fun b!133635 () Bool)

(declare-fun call!14734 () List!1694)

(assert (=> b!133635 (= e!87068 call!14734)))

(declare-fun b!133636 () Bool)

(assert (=> b!133636 (= e!87066 call!14733)))

(declare-fun b!133637 () Bool)

(assert (=> b!133637 (= e!87067 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69335)) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun bm!14730 () Bool)

(assert (=> bm!14730 (= call!14732 call!14734)))

(declare-fun bm!14731 () Bool)

(assert (=> bm!14731 (= call!14734 ($colon$colon!91 e!87067 (ite c!24772 (h!2295 (toList!842 lt!69335)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun c!24771 () Bool)

(assert (=> bm!14731 (= c!24771 c!24772)))

(assert (= (and d!40787 c!24772) b!133635))

(assert (= (and d!40787 (not c!24772)) b!133629))

(assert (= (and b!133629 c!24774) b!133633))

(assert (= (and b!133629 (not c!24774)) b!133631))

(assert (= (and b!133631 c!24773) b!133636))

(assert (= (and b!133631 (not c!24773)) b!133630))

(assert (= (or b!133636 b!133630) bm!14729))

(assert (= (or b!133633 bm!14729) bm!14730))

(assert (= (or b!133635 bm!14730) bm!14731))

(assert (= (and bm!14731 c!24771) b!133637))

(assert (= (and bm!14731 (not c!24771)) b!133634))

(assert (= (and d!40787 res!64331) b!133628))

(assert (= (and b!133628 res!64330) b!133632))

(declare-fun m!157943 () Bool)

(assert (=> b!133632 m!157943))

(declare-fun m!157945 () Bool)

(assert (=> b!133637 m!157945))

(declare-fun m!157947 () Bool)

(assert (=> bm!14731 m!157947))

(declare-fun m!157949 () Bool)

(assert (=> b!133628 m!157949))

(declare-fun m!157951 () Bool)

(assert (=> d!40787 m!157951))

(declare-fun m!157953 () Bool)

(assert (=> d!40787 m!157953))

(assert (=> d!40557 d!40787))

(assert (=> b!133137 d!40779))

(declare-fun d!40789 () Bool)

(assert (=> d!40789 (isDefined!125 (getValueByKey!173 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun lt!69909 () Unit!4141)

(assert (=> d!40789 (= lt!69909 (choose!831 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun e!87071 () Bool)

(assert (=> d!40789 e!87071))

(declare-fun res!64332 () Bool)

(assert (=> d!40789 (=> (not res!64332) (not e!87071))))

(assert (=> d!40789 (= res!64332 (isStrictlySorted!309 (toList!842 call!14589)))))

(assert (=> d!40789 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) lt!69909)))

(declare-fun b!133638 () Bool)

(assert (=> b!133638 (= e!87071 (containsKey!176 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40789 res!64332) b!133638))

(assert (=> d!40789 m!156395))

(assert (=> d!40789 m!156905))

(assert (=> d!40789 m!156905))

(assert (=> d!40789 m!156907))

(assert (=> d!40789 m!156395))

(declare-fun m!157955 () Bool)

(assert (=> d!40789 m!157955))

(declare-fun m!157957 () Bool)

(assert (=> d!40789 m!157957))

(assert (=> b!133638 m!156395))

(assert (=> b!133638 m!156901))

(assert (=> b!133070 d!40789))

(declare-fun d!40791 () Bool)

(assert (=> d!40791 (= (isDefined!125 (getValueByKey!173 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))) (not (isEmpty!416 (getValueByKey!173 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun bs!5543 () Bool)

(assert (= bs!5543 d!40791))

(assert (=> bs!5543 m!156905))

(declare-fun m!157959 () Bool)

(assert (=> bs!5543 m!157959))

(assert (=> b!133070 d!40791))

(declare-fun b!133640 () Bool)

(declare-fun e!87072 () Option!179)

(declare-fun e!87073 () Option!179)

(assert (=> b!133640 (= e!87072 e!87073)))

(declare-fun c!24776 () Bool)

(assert (=> b!133640 (= c!24776 (and ((_ is Cons!1690) (toList!842 call!14589)) (not (= (_1!1293 (h!2295 (toList!842 call!14589))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun b!133639 () Bool)

(assert (=> b!133639 (= e!87072 (Some!178 (_2!1293 (h!2295 (toList!842 call!14589)))))))

(declare-fun c!24775 () Bool)

(declare-fun d!40793 () Bool)

(assert (=> d!40793 (= c!24775 (and ((_ is Cons!1690) (toList!842 call!14589)) (= (_1!1293 (h!2295 (toList!842 call!14589))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40793 (= (getValueByKey!173 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!87072)))

(declare-fun b!133642 () Bool)

(assert (=> b!133642 (= e!87073 None!177)))

(declare-fun b!133641 () Bool)

(assert (=> b!133641 (= e!87073 (getValueByKey!173 (t!6137 (toList!842 call!14589)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40793 c!24775) b!133639))

(assert (= (and d!40793 (not c!24775)) b!133640))

(assert (= (and b!133640 c!24776) b!133641))

(assert (= (and b!133640 (not c!24776)) b!133642))

(assert (=> b!133641 m!156395))

(declare-fun m!157961 () Bool)

(assert (=> b!133641 m!157961))

(assert (=> b!133070 d!40793))

(assert (=> b!133109 d!40621))

(declare-fun d!40795 () Bool)

(declare-fun e!87075 () Bool)

(assert (=> d!40795 e!87075))

(declare-fun res!64333 () Bool)

(assert (=> d!40795 (=> res!64333 e!87075)))

(declare-fun lt!69910 () Bool)

(assert (=> d!40795 (= res!64333 (not lt!69910))))

(declare-fun lt!69911 () Bool)

(assert (=> d!40795 (= lt!69910 lt!69911)))

(declare-fun lt!69912 () Unit!4141)

(declare-fun e!87074 () Unit!4141)

(assert (=> d!40795 (= lt!69912 e!87074)))

(declare-fun c!24777 () Bool)

(assert (=> d!40795 (= c!24777 lt!69911)))

(assert (=> d!40795 (= lt!69911 (containsKey!176 (toList!842 lt!69630) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40795 (= (contains!884 lt!69630 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69910)))

(declare-fun b!133643 () Bool)

(declare-fun lt!69913 () Unit!4141)

(assert (=> b!133643 (= e!87074 lt!69913)))

(assert (=> b!133643 (= lt!69913 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69630) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> b!133643 (isDefined!125 (getValueByKey!173 (toList!842 lt!69630) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133644 () Bool)

(declare-fun Unit!4174 () Unit!4141)

(assert (=> b!133644 (= e!87074 Unit!4174)))

(declare-fun b!133645 () Bool)

(assert (=> b!133645 (= e!87075 (isDefined!125 (getValueByKey!173 (toList!842 lt!69630) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!40795 c!24777) b!133643))

(assert (= (and d!40795 (not c!24777)) b!133644))

(assert (= (and d!40795 (not res!64333)) b!133645))

(declare-fun m!157963 () Bool)

(assert (=> d!40795 m!157963))

(declare-fun m!157965 () Bool)

(assert (=> b!133643 m!157965))

(assert (=> b!133643 m!157129))

(assert (=> b!133643 m!157129))

(declare-fun m!157967 () Bool)

(assert (=> b!133643 m!157967))

(assert (=> b!133645 m!157129))

(assert (=> b!133645 m!157129))

(assert (=> b!133645 m!157967))

(assert (=> d!40543 d!40795))

(declare-fun b!133647 () Bool)

(declare-fun e!87076 () Option!179)

(declare-fun e!87077 () Option!179)

(assert (=> b!133647 (= e!87076 e!87077)))

(declare-fun c!24779 () Bool)

(assert (=> b!133647 (= c!24779 (and ((_ is Cons!1690) lt!69631) (not (= (_1!1293 (h!2295 lt!69631)) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!133646 () Bool)

(assert (=> b!133646 (= e!87076 (Some!178 (_2!1293 (h!2295 lt!69631))))))

(declare-fun c!24778 () Bool)

(declare-fun d!40797 () Bool)

(assert (=> d!40797 (= c!24778 (and ((_ is Cons!1690) lt!69631) (= (_1!1293 (h!2295 lt!69631)) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!40797 (= (getValueByKey!173 lt!69631 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87076)))

(declare-fun b!133649 () Bool)

(assert (=> b!133649 (= e!87077 None!177)))

(declare-fun b!133648 () Bool)

(assert (=> b!133648 (= e!87077 (getValueByKey!173 (t!6137 lt!69631) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!40797 c!24778) b!133646))

(assert (= (and d!40797 (not c!24778)) b!133647))

(assert (= (and b!133647 c!24779) b!133648))

(assert (= (and b!133647 (not c!24779)) b!133649))

(declare-fun m!157969 () Bool)

(assert (=> b!133648 m!157969))

(assert (=> d!40543 d!40797))

(declare-fun d!40799 () Bool)

(assert (=> d!40799 (= (getValueByKey!173 lt!69631 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun lt!69914 () Unit!4141)

(assert (=> d!40799 (= lt!69914 (choose!833 lt!69631 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun e!87078 () Bool)

(assert (=> d!40799 e!87078))

(declare-fun res!64334 () Bool)

(assert (=> d!40799 (=> (not res!64334) (not e!87078))))

(assert (=> d!40799 (= res!64334 (isStrictlySorted!309 lt!69631))))

(assert (=> d!40799 (= (lemmaContainsTupThenGetReturnValue!88 lt!69631 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69914)))

(declare-fun b!133650 () Bool)

(declare-fun res!64335 () Bool)

(assert (=> b!133650 (=> (not res!64335) (not e!87078))))

(assert (=> b!133650 (= res!64335 (containsKey!176 lt!69631 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133651 () Bool)

(assert (=> b!133651 (= e!87078 (contains!886 lt!69631 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!40799 res!64334) b!133650))

(assert (= (and b!133650 res!64335) b!133651))

(assert (=> d!40799 m!157123))

(declare-fun m!157971 () Bool)

(assert (=> d!40799 m!157971))

(declare-fun m!157973 () Bool)

(assert (=> d!40799 m!157973))

(declare-fun m!157975 () Bool)

(assert (=> b!133650 m!157975))

(declare-fun m!157977 () Bool)

(assert (=> b!133651 m!157977))

(assert (=> d!40543 d!40799))

(declare-fun b!133652 () Bool)

(declare-fun res!64336 () Bool)

(declare-fun e!87083 () Bool)

(assert (=> b!133652 (=> (not res!64336) (not e!87083))))

(declare-fun lt!69915 () List!1694)

(assert (=> b!133652 (= res!64336 (containsKey!176 lt!69915 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133653 () Bool)

(declare-fun e!87081 () List!1694)

(declare-fun e!87082 () List!1694)

(assert (=> b!133653 (= e!87081 e!87082)))

(declare-fun c!24783 () Bool)

(assert (=> b!133653 (= c!24783 (and ((_ is Cons!1690) (toList!842 lt!69339)) (= (_1!1293 (h!2295 (toList!842 lt!69339))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun bm!14732 () Bool)

(declare-fun call!14736 () List!1694)

(declare-fun call!14735 () List!1694)

(assert (=> bm!14732 (= call!14736 call!14735)))

(declare-fun b!133654 () Bool)

(declare-fun e!87079 () List!1694)

(assert (=> b!133654 (= e!87079 call!14736)))

(declare-fun b!133655 () Bool)

(declare-fun c!24782 () Bool)

(assert (=> b!133655 (= c!24782 (and ((_ is Cons!1690) (toList!842 lt!69339)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69339))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> b!133655 (= e!87082 e!87079)))

(declare-fun b!133656 () Bool)

(assert (=> b!133656 (= e!87083 (contains!886 lt!69915 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!133657 () Bool)

(assert (=> b!133657 (= e!87082 call!14735)))

(declare-fun d!40801 () Bool)

(assert (=> d!40801 e!87083))

(declare-fun res!64337 () Bool)

(assert (=> d!40801 (=> (not res!64337) (not e!87083))))

(assert (=> d!40801 (= res!64337 (isStrictlySorted!309 lt!69915))))

(assert (=> d!40801 (= lt!69915 e!87081)))

(declare-fun c!24781 () Bool)

(assert (=> d!40801 (= c!24781 (and ((_ is Cons!1690) (toList!842 lt!69339)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69339))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!40801 (isStrictlySorted!309 (toList!842 lt!69339))))

(assert (=> d!40801 (= (insertStrictlySorted!91 (toList!842 lt!69339) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69915)))

(declare-fun b!133658 () Bool)

(declare-fun e!87080 () List!1694)

(assert (=> b!133658 (= e!87080 (ite c!24783 (t!6137 (toList!842 lt!69339)) (ite c!24782 (Cons!1690 (h!2295 (toList!842 lt!69339)) (t!6137 (toList!842 lt!69339))) Nil!1691)))))

(declare-fun b!133659 () Bool)

(declare-fun call!14737 () List!1694)

(assert (=> b!133659 (= e!87081 call!14737)))

(declare-fun b!133660 () Bool)

(assert (=> b!133660 (= e!87079 call!14736)))

(declare-fun b!133661 () Bool)

(assert (=> b!133661 (= e!87080 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69339)) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun bm!14733 () Bool)

(assert (=> bm!14733 (= call!14735 call!14737)))

(declare-fun bm!14734 () Bool)

(assert (=> bm!14734 (= call!14737 ($colon$colon!91 e!87080 (ite c!24781 (h!2295 (toList!842 lt!69339)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun c!24780 () Bool)

(assert (=> bm!14734 (= c!24780 c!24781)))

(assert (= (and d!40801 c!24781) b!133659))

(assert (= (and d!40801 (not c!24781)) b!133653))

(assert (= (and b!133653 c!24783) b!133657))

(assert (= (and b!133653 (not c!24783)) b!133655))

(assert (= (and b!133655 c!24782) b!133660))

(assert (= (and b!133655 (not c!24782)) b!133654))

(assert (= (or b!133660 b!133654) bm!14732))

(assert (= (or b!133657 bm!14732) bm!14733))

(assert (= (or b!133659 bm!14733) bm!14734))

(assert (= (and bm!14734 c!24780) b!133661))

(assert (= (and bm!14734 (not c!24780)) b!133658))

(assert (= (and d!40801 res!64337) b!133652))

(assert (= (and b!133652 res!64336) b!133656))

(declare-fun m!157979 () Bool)

(assert (=> b!133656 m!157979))

(declare-fun m!157981 () Bool)

(assert (=> b!133661 m!157981))

(declare-fun m!157983 () Bool)

(assert (=> bm!14734 m!157983))

(declare-fun m!157985 () Bool)

(assert (=> b!133652 m!157985))

(declare-fun m!157987 () Bool)

(assert (=> d!40801 m!157987))

(declare-fun m!157989 () Bool)

(assert (=> d!40801 m!157989))

(assert (=> d!40543 d!40801))

(assert (=> b!133142 d!40621))

(declare-fun d!40803 () Bool)

(declare-fun res!64338 () Bool)

(declare-fun e!87084 () Bool)

(assert (=> d!40803 (=> res!64338 e!87084)))

(assert (=> d!40803 (= res!64338 (and ((_ is Cons!1690) (toList!842 call!14589)) (= (_1!1293 (h!2295 (toList!842 call!14589))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40803 (= (containsKey!176 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!87084)))

(declare-fun b!133662 () Bool)

(declare-fun e!87085 () Bool)

(assert (=> b!133662 (= e!87084 e!87085)))

(declare-fun res!64339 () Bool)

(assert (=> b!133662 (=> (not res!64339) (not e!87085))))

(assert (=> b!133662 (= res!64339 (and (or (not ((_ is Cons!1690) (toList!842 call!14589))) (bvsle (_1!1293 (h!2295 (toList!842 call!14589))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1690) (toList!842 call!14589)) (bvslt (_1!1293 (h!2295 (toList!842 call!14589))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!133663 () Bool)

(assert (=> b!133663 (= e!87085 (containsKey!176 (t!6137 (toList!842 call!14589)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40803 (not res!64338)) b!133662))

(assert (= (and b!133662 res!64339) b!133663))

(assert (=> b!133663 m!156395))

(declare-fun m!157991 () Bool)

(assert (=> b!133663 m!157991))

(assert (=> d!40481 d!40803))

(declare-fun d!40805 () Bool)

(assert (=> d!40805 (= (get!1492 (getValueByKey!173 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!173 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40521 d!40805))

(declare-fun b!133665 () Bool)

(declare-fun e!87086 () Option!179)

(declare-fun e!87087 () Option!179)

(assert (=> b!133665 (= e!87086 e!87087)))

(declare-fun c!24785 () Bool)

(assert (=> b!133665 (= c!24785 (and ((_ is Cons!1690) (toList!842 lt!69344)) (not (= (_1!1293 (h!2295 (toList!842 lt!69344))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133664 () Bool)

(assert (=> b!133664 (= e!87086 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69344)))))))

(declare-fun d!40807 () Bool)

(declare-fun c!24784 () Bool)

(assert (=> d!40807 (= c!24784 (and ((_ is Cons!1690) (toList!842 lt!69344)) (= (_1!1293 (h!2295 (toList!842 lt!69344))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40807 (= (getValueByKey!173 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000) e!87086)))

(declare-fun b!133667 () Bool)

(assert (=> b!133667 (= e!87087 None!177)))

(declare-fun b!133666 () Bool)

(assert (=> b!133666 (= e!87087 (getValueByKey!173 (t!6137 (toList!842 lt!69344)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!40807 c!24784) b!133664))

(assert (= (and d!40807 (not c!24784)) b!133665))

(assert (= (and b!133665 c!24785) b!133666))

(assert (= (and b!133665 (not c!24785)) b!133667))

(declare-fun m!157993 () Bool)

(assert (=> b!133666 m!157993))

(assert (=> d!40521 d!40807))

(assert (=> b!132930 d!40621))

(declare-fun d!40809 () Bool)

(assert (=> d!40809 (= (get!1492 (getValueByKey!173 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3203 (getValueByKey!173 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!40483 d!40809))

(assert (=> d!40483 d!40777))

(declare-fun d!40811 () Bool)

(assert (=> d!40811 (= (apply!116 lt!69577 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69577) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5544 () Bool)

(assert (= bs!5544 d!40811))

(declare-fun m!157995 () Bool)

(assert (=> bs!5544 m!157995))

(assert (=> bs!5544 m!157995))

(declare-fun m!157997 () Bool)

(assert (=> bs!5544 m!157997))

(assert (=> b!133103 d!40811))

(declare-fun d!40813 () Bool)

(declare-fun e!87089 () Bool)

(assert (=> d!40813 e!87089))

(declare-fun res!64340 () Bool)

(assert (=> d!40813 (=> res!64340 e!87089)))

(declare-fun lt!69916 () Bool)

(assert (=> d!40813 (= res!64340 (not lt!69916))))

(declare-fun lt!69917 () Bool)

(assert (=> d!40813 (= lt!69916 lt!69917)))

(declare-fun lt!69918 () Unit!4141)

(declare-fun e!87088 () Unit!4141)

(assert (=> d!40813 (= lt!69918 e!87088)))

(declare-fun c!24786 () Bool)

(assert (=> d!40813 (= c!24786 lt!69917)))

(assert (=> d!40813 (= lt!69917 (containsKey!176 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))

(assert (=> d!40813 (= (contains!884 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))) lt!69916)))

(declare-fun b!133668 () Bool)

(declare-fun lt!69919 () Unit!4141)

(assert (=> b!133668 (= e!87088 lt!69919)))

(assert (=> b!133668 (= lt!69919 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))

(assert (=> b!133668 (isDefined!125 (getValueByKey!173 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))

(declare-fun b!133669 () Bool)

(declare-fun Unit!4175 () Unit!4141)

(assert (=> b!133669 (= e!87088 Unit!4175)))

(declare-fun b!133670 () Bool)

(assert (=> b!133670 (= e!87089 (isDefined!125 (getValueByKey!173 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(assert (= (and d!40813 c!24786) b!133668))

(assert (= (and d!40813 (not c!24786)) b!133669))

(assert (= (and d!40813 (not res!64340)) b!133670))

(assert (=> d!40813 m!156557))

(declare-fun m!157999 () Bool)

(assert (=> d!40813 m!157999))

(assert (=> b!133668 m!156557))

(declare-fun m!158001 () Bool)

(assert (=> b!133668 m!158001))

(assert (=> b!133668 m!156557))

(declare-fun m!158003 () Bool)

(assert (=> b!133668 m!158003))

(assert (=> b!133668 m!158003))

(declare-fun m!158005 () Bool)

(assert (=> b!133668 m!158005))

(assert (=> b!133670 m!156557))

(assert (=> b!133670 m!158003))

(assert (=> b!133670 m!158003))

(assert (=> b!133670 m!158005))

(assert (=> b!133091 d!40813))

(declare-fun c!24790 () Bool)

(declare-fun bm!14735 () Bool)

(declare-fun call!14742 () ListLongMap!1653)

(declare-fun c!24792 () Bool)

(declare-fun call!14739 () ListLongMap!1653)

(declare-fun call!14741 () ListLongMap!1653)

(declare-fun call!14740 () ListLongMap!1653)

(assert (=> bm!14735 (= call!14741 (+!169 (ite c!24790 call!14739 (ite c!24792 call!14740 call!14742)) (ite (or c!24790 c!24792) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!133671 () Bool)

(declare-fun e!87099 () Bool)

(declare-fun e!87093 () Bool)

(assert (=> b!133671 (= e!87099 e!87093)))

(declare-fun res!64346 () Bool)

(declare-fun call!14738 () Bool)

(assert (=> b!133671 (= res!64346 call!14738)))

(assert (=> b!133671 (=> (not res!64346) (not e!87093))))

(declare-fun b!133672 () Bool)

(declare-fun e!87097 () Unit!4141)

(declare-fun lt!69937 () Unit!4141)

(assert (=> b!133672 (= e!87097 lt!69937)))

(declare-fun lt!69923 () ListLongMap!1653)

(assert (=> b!133672 (= lt!69923 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69938 () (_ BitVec 64))

(assert (=> b!133672 (= lt!69938 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69922 () (_ BitVec 64))

(assert (=> b!133672 (= lt!69922 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69936 () Unit!4141)

(assert (=> b!133672 (= lt!69936 (addStillContains!92 lt!69923 lt!69938 (zeroValue!2719 newMap!16) lt!69922))))

(assert (=> b!133672 (contains!884 (+!169 lt!69923 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16))) lt!69922)))

(declare-fun lt!69934 () Unit!4141)

(assert (=> b!133672 (= lt!69934 lt!69936)))

(declare-fun lt!69929 () ListLongMap!1653)

(assert (=> b!133672 (= lt!69929 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69921 () (_ BitVec 64))

(assert (=> b!133672 (= lt!69921 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69931 () (_ BitVec 64))

(assert (=> b!133672 (= lt!69931 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69935 () Unit!4141)

(assert (=> b!133672 (= lt!69935 (addApplyDifferent!92 lt!69929 lt!69921 (minValue!2719 newMap!16) lt!69931))))

(assert (=> b!133672 (= (apply!116 (+!169 lt!69929 (tuple2!2565 lt!69921 (minValue!2719 newMap!16))) lt!69931) (apply!116 lt!69929 lt!69931))))

(declare-fun lt!69928 () Unit!4141)

(assert (=> b!133672 (= lt!69928 lt!69935)))

(declare-fun lt!69941 () ListLongMap!1653)

(assert (=> b!133672 (= lt!69941 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69930 () (_ BitVec 64))

(assert (=> b!133672 (= lt!69930 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69926 () (_ BitVec 64))

(assert (=> b!133672 (= lt!69926 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69939 () Unit!4141)

(assert (=> b!133672 (= lt!69939 (addApplyDifferent!92 lt!69941 lt!69930 (zeroValue!2719 newMap!16) lt!69926))))

(assert (=> b!133672 (= (apply!116 (+!169 lt!69941 (tuple2!2565 lt!69930 (zeroValue!2719 newMap!16))) lt!69926) (apply!116 lt!69941 lt!69926))))

(declare-fun lt!69940 () Unit!4141)

(assert (=> b!133672 (= lt!69940 lt!69939)))

(declare-fun lt!69927 () ListLongMap!1653)

(assert (=> b!133672 (= lt!69927 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69925 () (_ BitVec 64))

(assert (=> b!133672 (= lt!69925 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69933 () (_ BitVec 64))

(assert (=> b!133672 (= lt!69933 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133672 (= lt!69937 (addApplyDifferent!92 lt!69927 lt!69925 (minValue!2719 newMap!16) lt!69933))))

(assert (=> b!133672 (= (apply!116 (+!169 lt!69927 (tuple2!2565 lt!69925 (minValue!2719 newMap!16))) lt!69933) (apply!116 lt!69927 lt!69933))))

(declare-fun b!133673 () Bool)

(declare-fun lt!69932 () ListLongMap!1653)

(assert (=> b!133673 (= e!87093 (= (apply!116 lt!69932 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 newMap!16)))))

(declare-fun b!133674 () Bool)

(declare-fun e!87091 () Bool)

(assert (=> b!133674 (= e!87091 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14736 () Bool)

(assert (=> bm!14736 (= call!14740 call!14739)))

(declare-fun bm!14737 () Bool)

(assert (=> bm!14737 (= call!14738 (contains!884 lt!69932 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133675 () Bool)

(declare-fun e!87092 () Bool)

(assert (=> b!133675 (= e!87092 e!87099)))

(declare-fun c!24791 () Bool)

(assert (=> b!133675 (= c!24791 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133676 () Bool)

(declare-fun e!87101 () Bool)

(assert (=> b!133676 (= e!87101 (= (apply!116 lt!69932 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 newMap!16)))))

(declare-fun b!133678 () Bool)

(declare-fun e!87090 () ListLongMap!1653)

(assert (=> b!133678 (= e!87090 call!14742)))

(declare-fun bm!14738 () Bool)

(declare-fun call!14744 () ListLongMap!1653)

(assert (=> bm!14738 (= call!14744 call!14741)))

(declare-fun bm!14739 () Bool)

(declare-fun call!14743 () Bool)

(assert (=> bm!14739 (= call!14743 (contains!884 lt!69932 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133679 () Bool)

(declare-fun c!24788 () Bool)

(assert (=> b!133679 (= c!24788 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!87096 () ListLongMap!1653)

(assert (=> b!133679 (= e!87096 e!87090)))

(declare-fun bm!14740 () Bool)

(assert (=> bm!14740 (= call!14742 call!14740)))

(declare-fun b!133680 () Bool)

(declare-fun e!87102 () Bool)

(assert (=> b!133680 (= e!87102 (= (apply!116 lt!69932 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 lt!69268) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133680 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 lt!69268)))))

(assert (=> b!133680 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133681 () Bool)

(declare-fun e!87095 () ListLongMap!1653)

(assert (=> b!133681 (= e!87095 e!87096)))

(assert (=> b!133681 (= c!24792 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133682 () Bool)

(declare-fun e!87098 () Bool)

(assert (=> b!133682 (= e!87098 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133683 () Bool)

(assert (=> b!133683 (= e!87095 (+!169 call!14741 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun b!133684 () Bool)

(declare-fun e!87094 () Bool)

(assert (=> b!133684 (= e!87094 e!87102)))

(declare-fun res!64347 () Bool)

(assert (=> b!133684 (=> (not res!64347) (not e!87102))))

(assert (=> b!133684 (= res!64347 (contains!884 lt!69932 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133684 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun bm!14741 () Bool)

(assert (=> bm!14741 (= call!14739 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!133685 () Bool)

(assert (=> b!133685 (= e!87099 (not call!14738))))

(declare-fun b!133686 () Bool)

(assert (=> b!133686 (= e!87090 call!14744)))

(declare-fun b!133687 () Bool)

(declare-fun Unit!4176 () Unit!4141)

(assert (=> b!133687 (= e!87097 Unit!4176)))

(declare-fun b!133688 () Bool)

(declare-fun e!87100 () Bool)

(assert (=> b!133688 (= e!87100 e!87101)))

(declare-fun res!64349 () Bool)

(assert (=> b!133688 (= res!64349 call!14743)))

(assert (=> b!133688 (=> (not res!64349) (not e!87101))))

(declare-fun b!133689 () Bool)

(declare-fun res!64343 () Bool)

(assert (=> b!133689 (=> (not res!64343) (not e!87092))))

(assert (=> b!133689 (= res!64343 e!87094)))

(declare-fun res!64348 () Bool)

(assert (=> b!133689 (=> res!64348 e!87094)))

(assert (=> b!133689 (= res!64348 (not e!87098))))

(declare-fun res!64341 () Bool)

(assert (=> b!133689 (=> (not res!64341) (not e!87098))))

(assert (=> b!133689 (= res!64341 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133690 () Bool)

(declare-fun res!64344 () Bool)

(assert (=> b!133690 (=> (not res!64344) (not e!87092))))

(assert (=> b!133690 (= res!64344 e!87100)))

(declare-fun c!24789 () Bool)

(assert (=> b!133690 (= c!24789 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133691 () Bool)

(assert (=> b!133691 (= e!87096 call!14744)))

(declare-fun b!133677 () Bool)

(assert (=> b!133677 (= e!87100 (not call!14743))))

(declare-fun d!40815 () Bool)

(assert (=> d!40815 e!87092))

(declare-fun res!64345 () Bool)

(assert (=> d!40815 (=> (not res!64345) (not e!87092))))

(assert (=> d!40815 (= res!64345 (or (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))))

(declare-fun lt!69920 () ListLongMap!1653)

(assert (=> d!40815 (= lt!69932 lt!69920)))

(declare-fun lt!69924 () Unit!4141)

(assert (=> d!40815 (= lt!69924 e!87097)))

(declare-fun c!24787 () Bool)

(assert (=> d!40815 (= c!24787 e!87091)))

(declare-fun res!64342 () Bool)

(assert (=> d!40815 (=> (not res!64342) (not e!87091))))

(assert (=> d!40815 (= res!64342 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40815 (= lt!69920 e!87095)))

(assert (=> d!40815 (= c!24790 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40815 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40815 (= (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69932)))

(assert (= (and d!40815 c!24790) b!133683))

(assert (= (and d!40815 (not c!24790)) b!133681))

(assert (= (and b!133681 c!24792) b!133691))

(assert (= (and b!133681 (not c!24792)) b!133679))

(assert (= (and b!133679 c!24788) b!133686))

(assert (= (and b!133679 (not c!24788)) b!133678))

(assert (= (or b!133686 b!133678) bm!14740))

(assert (= (or b!133691 bm!14740) bm!14736))

(assert (= (or b!133691 b!133686) bm!14738))

(assert (= (or b!133683 bm!14736) bm!14741))

(assert (= (or b!133683 bm!14738) bm!14735))

(assert (= (and d!40815 res!64342) b!133674))

(assert (= (and d!40815 c!24787) b!133672))

(assert (= (and d!40815 (not c!24787)) b!133687))

(assert (= (and d!40815 res!64345) b!133689))

(assert (= (and b!133689 res!64341) b!133682))

(assert (= (and b!133689 (not res!64348)) b!133684))

(assert (= (and b!133684 res!64347) b!133680))

(assert (= (and b!133689 res!64343) b!133690))

(assert (= (and b!133690 c!24789) b!133688))

(assert (= (and b!133690 (not c!24789)) b!133677))

(assert (= (and b!133688 res!64349) b!133676))

(assert (= (or b!133688 b!133677) bm!14739))

(assert (= (and b!133690 res!64344) b!133675))

(assert (= (and b!133675 c!24791) b!133671))

(assert (= (and b!133675 (not c!24791)) b!133685))

(assert (= (and b!133671 res!64346) b!133673))

(assert (= (or b!133671 b!133685) bm!14737))

(declare-fun b_lambda!5961 () Bool)

(assert (=> (not b_lambda!5961) (not b!133680)))

(assert (=> b!133680 t!6147))

(declare-fun b_and!8289 () Bool)

(assert (= b_and!8285 (and (=> t!6147 result!3993) b_and!8289)))

(assert (=> b!133680 t!6149))

(declare-fun b_and!8291 () Bool)

(assert (= b_and!8287 (and (=> t!6149 result!3995) b_and!8291)))

(assert (=> d!40815 m!156651))

(assert (=> b!133682 m!156679))

(assert (=> b!133682 m!156679))

(assert (=> b!133682 m!156689))

(declare-fun m!158007 () Bool)

(assert (=> b!133672 m!158007))

(declare-fun m!158009 () Bool)

(assert (=> b!133672 m!158009))

(declare-fun m!158011 () Bool)

(assert (=> b!133672 m!158011))

(declare-fun m!158013 () Bool)

(assert (=> b!133672 m!158013))

(declare-fun m!158015 () Bool)

(assert (=> b!133672 m!158015))

(assert (=> b!133672 m!156679))

(declare-fun m!158017 () Bool)

(assert (=> b!133672 m!158017))

(declare-fun m!158019 () Bool)

(assert (=> b!133672 m!158019))

(declare-fun m!158021 () Bool)

(assert (=> b!133672 m!158021))

(declare-fun m!158023 () Bool)

(assert (=> b!133672 m!158023))

(declare-fun m!158025 () Bool)

(assert (=> b!133672 m!158025))

(declare-fun m!158027 () Bool)

(assert (=> b!133672 m!158027))

(assert (=> b!133672 m!158021))

(assert (=> b!133672 m!158015))

(declare-fun m!158029 () Bool)

(assert (=> b!133672 m!158029))

(declare-fun m!158031 () Bool)

(assert (=> b!133672 m!158031))

(declare-fun m!158033 () Bool)

(assert (=> b!133672 m!158033))

(assert (=> b!133672 m!158033))

(declare-fun m!158035 () Bool)

(assert (=> b!133672 m!158035))

(assert (=> b!133672 m!158013))

(declare-fun m!158037 () Bool)

(assert (=> b!133672 m!158037))

(declare-fun m!158039 () Bool)

(assert (=> b!133680 m!158039))

(assert (=> b!133680 m!156809))

(declare-fun m!158041 () Bool)

(assert (=> b!133680 m!158041))

(assert (=> b!133680 m!156809))

(assert (=> b!133680 m!158039))

(assert (=> b!133680 m!156679))

(assert (=> b!133680 m!156679))

(declare-fun m!158043 () Bool)

(assert (=> b!133680 m!158043))

(declare-fun m!158045 () Bool)

(assert (=> bm!14737 m!158045))

(declare-fun m!158047 () Bool)

(assert (=> bm!14735 m!158047))

(assert (=> b!133674 m!156679))

(assert (=> b!133674 m!156679))

(assert (=> b!133674 m!156689))

(declare-fun m!158049 () Bool)

(assert (=> b!133676 m!158049))

(assert (=> b!133684 m!156679))

(assert (=> b!133684 m!156679))

(declare-fun m!158051 () Bool)

(assert (=> b!133684 m!158051))

(assert (=> bm!14741 m!158027))

(declare-fun m!158053 () Bool)

(assert (=> bm!14739 m!158053))

(declare-fun m!158055 () Bool)

(assert (=> b!133683 m!158055))

(declare-fun m!158057 () Bool)

(assert (=> b!133673 m!158057))

(assert (=> b!133091 d!40815))

(declare-fun d!40817 () Bool)

(assert (=> d!40817 (= (apply!116 lt!69529 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69529) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5545 () Bool)

(assert (= bs!5545 d!40817))

(declare-fun m!158059 () Bool)

(assert (=> bs!5545 m!158059))

(assert (=> bs!5545 m!158059))

(declare-fun m!158061 () Bool)

(assert (=> bs!5545 m!158061))

(assert (=> b!133051 d!40817))

(assert (=> b!133213 d!40491))

(declare-fun d!40819 () Bool)

(assert (=> d!40819 (= (size!2527 newMap!16) (bvadd (_size!597 newMap!16) (bvsdiv (bvadd (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!132896 d!40819))

(declare-fun d!40821 () Bool)

(assert (=> d!40821 (= (+!169 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69279 (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(assert (=> d!40821 true))

(declare-fun _$8!118 () Unit!4141)

(assert (=> d!40821 (= (choose!832 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) lt!69279 (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)) _$8!118)))

(declare-fun bs!5546 () Bool)

(assert (= bs!5546 d!40821))

(assert (=> bs!5546 m!156545))

(assert (=> bs!5546 m!156545))

(assert (=> bs!5546 m!157215))

(assert (=> bs!5546 m!156393))

(assert (=> bs!5546 m!157211))

(assert (=> d!40573 d!40821))

(declare-fun d!40823 () Bool)

(declare-fun e!87103 () Bool)

(assert (=> d!40823 e!87103))

(declare-fun res!64351 () Bool)

(assert (=> d!40823 (=> (not res!64351) (not e!87103))))

(declare-fun lt!69944 () ListLongMap!1653)

(assert (=> d!40823 (= res!64351 (contains!884 lt!69944 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69945 () List!1694)

(assert (=> d!40823 (= lt!69944 (ListLongMap!1654 lt!69945))))

(declare-fun lt!69942 () Unit!4141)

(declare-fun lt!69943 () Unit!4141)

(assert (=> d!40823 (= lt!69942 lt!69943)))

(assert (=> d!40823 (= (getValueByKey!173 lt!69945 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40823 (= lt!69943 (lemmaContainsTupThenGetReturnValue!88 lt!69945 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40823 (= lt!69945 (insertStrictlySorted!91 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40823 (= (+!169 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69944)))

(declare-fun b!133692 () Bool)

(declare-fun res!64350 () Bool)

(assert (=> b!133692 (=> (not res!64350) (not e!87103))))

(assert (=> b!133692 (= res!64350 (= (getValueByKey!173 (toList!842 lt!69944) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133693 () Bool)

(assert (=> b!133693 (= e!87103 (contains!886 (toList!842 lt!69944) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40823 res!64351) b!133692))

(assert (= (and b!133692 res!64350) b!133693))

(declare-fun m!158063 () Bool)

(assert (=> d!40823 m!158063))

(declare-fun m!158065 () Bool)

(assert (=> d!40823 m!158065))

(declare-fun m!158067 () Bool)

(assert (=> d!40823 m!158067))

(declare-fun m!158069 () Bool)

(assert (=> d!40823 m!158069))

(declare-fun m!158071 () Bool)

(assert (=> b!133692 m!158071))

(declare-fun m!158073 () Bool)

(assert (=> b!133693 m!158073))

(assert (=> d!40573 d!40823))

(assert (=> d!40573 d!40479))

(declare-fun c!24798 () Bool)

(declare-fun call!14749 () ListLongMap!1653)

(declare-fun c!24796 () Bool)

(declare-fun bm!14742 () Bool)

(declare-fun call!14746 () ListLongMap!1653)

(declare-fun call!14748 () ListLongMap!1653)

(declare-fun call!14747 () ListLongMap!1653)

(assert (=> bm!14742 (= call!14748 (+!169 (ite c!24796 call!14746 (ite c!24798 call!14747 call!14749)) (ite (or c!24796 c!24798) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133694 () Bool)

(declare-fun e!87113 () Bool)

(declare-fun e!87107 () Bool)

(assert (=> b!133694 (= e!87113 e!87107)))

(declare-fun res!64357 () Bool)

(declare-fun call!14745 () Bool)

(assert (=> b!133694 (= res!64357 call!14745)))

(assert (=> b!133694 (=> (not res!64357) (not e!87107))))

(declare-fun b!133695 () Bool)

(declare-fun e!87111 () Unit!4141)

(declare-fun lt!69963 () Unit!4141)

(assert (=> b!133695 (= e!87111 lt!69963)))

(declare-fun lt!69949 () ListLongMap!1653)

(assert (=> b!133695 (= lt!69949 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69279 (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69964 () (_ BitVec 64))

(assert (=> b!133695 (= lt!69964 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69948 () (_ BitVec 64))

(assert (=> b!133695 (= lt!69948 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69962 () Unit!4141)

(assert (=> b!133695 (= lt!69962 (addStillContains!92 lt!69949 lt!69964 (zeroValue!2719 newMap!16) lt!69948))))

(assert (=> b!133695 (contains!884 (+!169 lt!69949 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16))) lt!69948)))

(declare-fun lt!69960 () Unit!4141)

(assert (=> b!133695 (= lt!69960 lt!69962)))

(declare-fun lt!69955 () ListLongMap!1653)

(assert (=> b!133695 (= lt!69955 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69279 (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69947 () (_ BitVec 64))

(assert (=> b!133695 (= lt!69947 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69957 () (_ BitVec 64))

(assert (=> b!133695 (= lt!69957 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69961 () Unit!4141)

(assert (=> b!133695 (= lt!69961 (addApplyDifferent!92 lt!69955 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69957))))

(assert (=> b!133695 (= (apply!116 (+!169 lt!69955 (tuple2!2565 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69957) (apply!116 lt!69955 lt!69957))))

(declare-fun lt!69954 () Unit!4141)

(assert (=> b!133695 (= lt!69954 lt!69961)))

(declare-fun lt!69967 () ListLongMap!1653)

(assert (=> b!133695 (= lt!69967 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69279 (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69956 () (_ BitVec 64))

(assert (=> b!133695 (= lt!69956 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69952 () (_ BitVec 64))

(assert (=> b!133695 (= lt!69952 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!69965 () Unit!4141)

(assert (=> b!133695 (= lt!69965 (addApplyDifferent!92 lt!69967 lt!69956 (zeroValue!2719 newMap!16) lt!69952))))

(assert (=> b!133695 (= (apply!116 (+!169 lt!69967 (tuple2!2565 lt!69956 (zeroValue!2719 newMap!16))) lt!69952) (apply!116 lt!69967 lt!69952))))

(declare-fun lt!69966 () Unit!4141)

(assert (=> b!133695 (= lt!69966 lt!69965)))

(declare-fun lt!69953 () ListLongMap!1653)

(assert (=> b!133695 (= lt!69953 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69279 (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!69951 () (_ BitVec 64))

(assert (=> b!133695 (= lt!69951 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!69959 () (_ BitVec 64))

(assert (=> b!133695 (= lt!69959 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133695 (= lt!69963 (addApplyDifferent!92 lt!69953 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69959))))

(assert (=> b!133695 (= (apply!116 (+!169 lt!69953 (tuple2!2565 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69959) (apply!116 lt!69953 lt!69959))))

(declare-fun b!133696 () Bool)

(declare-fun lt!69958 () ListLongMap!1653)

(assert (=> b!133696 (= e!87107 (= (apply!116 lt!69958 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133697 () Bool)

(declare-fun e!87105 () Bool)

(assert (=> b!133697 (= e!87105 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14743 () Bool)

(assert (=> bm!14743 (= call!14747 call!14746)))

(declare-fun bm!14744 () Bool)

(assert (=> bm!14744 (= call!14745 (contains!884 lt!69958 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133698 () Bool)

(declare-fun e!87106 () Bool)

(assert (=> b!133698 (= e!87106 e!87113)))

(declare-fun c!24797 () Bool)

(assert (=> b!133698 (= c!24797 (not (= (bvand lt!69279 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133699 () Bool)

(declare-fun e!87115 () Bool)

(assert (=> b!133699 (= e!87115 (= (apply!116 lt!69958 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 newMap!16)))))

(declare-fun b!133701 () Bool)

(declare-fun e!87104 () ListLongMap!1653)

(assert (=> b!133701 (= e!87104 call!14749)))

(declare-fun bm!14745 () Bool)

(declare-fun call!14751 () ListLongMap!1653)

(assert (=> bm!14745 (= call!14751 call!14748)))

(declare-fun bm!14746 () Bool)

(declare-fun call!14750 () Bool)

(assert (=> bm!14746 (= call!14750 (contains!884 lt!69958 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133702 () Bool)

(declare-fun c!24794 () Bool)

(assert (=> b!133702 (= c!24794 (and (not (= (bvand lt!69279 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!69279 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!87110 () ListLongMap!1653)

(assert (=> b!133702 (= e!87110 e!87104)))

(declare-fun bm!14747 () Bool)

(assert (=> bm!14747 (= call!14749 call!14747)))

(declare-fun b!133703 () Bool)

(declare-fun e!87116 () Bool)

(assert (=> b!133703 (= e!87116 (= (apply!116 lt!69958 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133703 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (_values!2847 newMap!16))))))

(assert (=> b!133703 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133704 () Bool)

(declare-fun e!87109 () ListLongMap!1653)

(assert (=> b!133704 (= e!87109 e!87110)))

(assert (=> b!133704 (= c!24798 (and (not (= (bvand lt!69279 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!69279 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133705 () Bool)

(declare-fun e!87112 () Bool)

(assert (=> b!133705 (= e!87112 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133706 () Bool)

(assert (=> b!133706 (= e!87109 (+!169 call!14748 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133707 () Bool)

(declare-fun e!87108 () Bool)

(assert (=> b!133707 (= e!87108 e!87116)))

(declare-fun res!64358 () Bool)

(assert (=> b!133707 (=> (not res!64358) (not e!87116))))

(assert (=> b!133707 (= res!64358 (contains!884 lt!69958 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133707 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun bm!14748 () Bool)

(assert (=> bm!14748 (= call!14746 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69279 (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!133708 () Bool)

(assert (=> b!133708 (= e!87113 (not call!14745))))

(declare-fun b!133709 () Bool)

(assert (=> b!133709 (= e!87104 call!14751)))

(declare-fun b!133710 () Bool)

(declare-fun Unit!4177 () Unit!4141)

(assert (=> b!133710 (= e!87111 Unit!4177)))

(declare-fun b!133711 () Bool)

(declare-fun e!87114 () Bool)

(assert (=> b!133711 (= e!87114 e!87115)))

(declare-fun res!64360 () Bool)

(assert (=> b!133711 (= res!64360 call!14750)))

(assert (=> b!133711 (=> (not res!64360) (not e!87115))))

(declare-fun b!133712 () Bool)

(declare-fun res!64354 () Bool)

(assert (=> b!133712 (=> (not res!64354) (not e!87106))))

(assert (=> b!133712 (= res!64354 e!87108)))

(declare-fun res!64359 () Bool)

(assert (=> b!133712 (=> res!64359 e!87108)))

(assert (=> b!133712 (= res!64359 (not e!87112))))

(declare-fun res!64352 () Bool)

(assert (=> b!133712 (=> (not res!64352) (not e!87112))))

(assert (=> b!133712 (= res!64352 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133713 () Bool)

(declare-fun res!64355 () Bool)

(assert (=> b!133713 (=> (not res!64355) (not e!87106))))

(assert (=> b!133713 (= res!64355 e!87114)))

(declare-fun c!24795 () Bool)

(assert (=> b!133713 (= c!24795 (not (= (bvand lt!69279 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133714 () Bool)

(assert (=> b!133714 (= e!87110 call!14751)))

(declare-fun b!133700 () Bool)

(assert (=> b!133700 (= e!87114 (not call!14750))))

(declare-fun d!40825 () Bool)

(assert (=> d!40825 e!87106))

(declare-fun res!64356 () Bool)

(assert (=> d!40825 (=> (not res!64356) (not e!87106))))

(assert (=> d!40825 (= res!64356 (or (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))))

(declare-fun lt!69946 () ListLongMap!1653)

(assert (=> d!40825 (= lt!69958 lt!69946)))

(declare-fun lt!69950 () Unit!4141)

(assert (=> d!40825 (= lt!69950 e!87111)))

(declare-fun c!24793 () Bool)

(assert (=> d!40825 (= c!24793 e!87105)))

(declare-fun res!64353 () Bool)

(assert (=> d!40825 (=> (not res!64353) (not e!87105))))

(assert (=> d!40825 (= res!64353 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40825 (= lt!69946 e!87109)))

(assert (=> d!40825 (= c!24796 (and (not (= (bvand lt!69279 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!69279 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40825 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40825 (= (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69279 (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69958)))

(assert (= (and d!40825 c!24796) b!133706))

(assert (= (and d!40825 (not c!24796)) b!133704))

(assert (= (and b!133704 c!24798) b!133714))

(assert (= (and b!133704 (not c!24798)) b!133702))

(assert (= (and b!133702 c!24794) b!133709))

(assert (= (and b!133702 (not c!24794)) b!133701))

(assert (= (or b!133709 b!133701) bm!14747))

(assert (= (or b!133714 bm!14747) bm!14743))

(assert (= (or b!133714 b!133709) bm!14745))

(assert (= (or b!133706 bm!14743) bm!14748))

(assert (= (or b!133706 bm!14745) bm!14742))

(assert (= (and d!40825 res!64353) b!133697))

(assert (= (and d!40825 c!24793) b!133695))

(assert (= (and d!40825 (not c!24793)) b!133710))

(assert (= (and d!40825 res!64356) b!133712))

(assert (= (and b!133712 res!64352) b!133705))

(assert (= (and b!133712 (not res!64359)) b!133707))

(assert (= (and b!133707 res!64358) b!133703))

(assert (= (and b!133712 res!64354) b!133713))

(assert (= (and b!133713 c!24795) b!133711))

(assert (= (and b!133713 (not c!24795)) b!133700))

(assert (= (and b!133711 res!64360) b!133699))

(assert (= (or b!133711 b!133700) bm!14746))

(assert (= (and b!133713 res!64355) b!133698))

(assert (= (and b!133698 c!24797) b!133694))

(assert (= (and b!133698 (not c!24797)) b!133708))

(assert (= (and b!133694 res!64357) b!133696))

(assert (= (or b!133694 b!133708) bm!14744))

(declare-fun b_lambda!5963 () Bool)

(assert (=> (not b_lambda!5963) (not b!133703)))

(assert (=> b!133703 t!6147))

(declare-fun b_and!8293 () Bool)

(assert (= b_and!8289 (and (=> t!6147 result!3993) b_and!8293)))

(assert (=> b!133703 t!6149))

(declare-fun b_and!8295 () Bool)

(assert (= b_and!8291 (and (=> t!6149 result!3995) b_and!8295)))

(assert (=> d!40825 m!156651))

(assert (=> b!133705 m!156679))

(assert (=> b!133705 m!156679))

(assert (=> b!133705 m!156689))

(declare-fun m!158075 () Bool)

(assert (=> b!133695 m!158075))

(declare-fun m!158077 () Bool)

(assert (=> b!133695 m!158077))

(declare-fun m!158079 () Bool)

(assert (=> b!133695 m!158079))

(declare-fun m!158081 () Bool)

(assert (=> b!133695 m!158081))

(declare-fun m!158083 () Bool)

(assert (=> b!133695 m!158083))

(assert (=> b!133695 m!156679))

(declare-fun m!158085 () Bool)

(assert (=> b!133695 m!158085))

(declare-fun m!158087 () Bool)

(assert (=> b!133695 m!158087))

(declare-fun m!158089 () Bool)

(assert (=> b!133695 m!158089))

(declare-fun m!158091 () Bool)

(assert (=> b!133695 m!158091))

(assert (=> b!133695 m!156393))

(declare-fun m!158093 () Bool)

(assert (=> b!133695 m!158093))

(assert (=> b!133695 m!156393))

(declare-fun m!158095 () Bool)

(assert (=> b!133695 m!158095))

(assert (=> b!133695 m!158089))

(assert (=> b!133695 m!158083))

(declare-fun m!158097 () Bool)

(assert (=> b!133695 m!158097))

(assert (=> b!133695 m!156393))

(declare-fun m!158099 () Bool)

(assert (=> b!133695 m!158099))

(declare-fun m!158101 () Bool)

(assert (=> b!133695 m!158101))

(assert (=> b!133695 m!158101))

(declare-fun m!158103 () Bool)

(assert (=> b!133695 m!158103))

(assert (=> b!133695 m!158081))

(declare-fun m!158105 () Bool)

(assert (=> b!133695 m!158105))

(assert (=> b!133703 m!156881))

(assert (=> b!133703 m!156809))

(assert (=> b!133703 m!156883))

(assert (=> b!133703 m!156809))

(assert (=> b!133703 m!156881))

(assert (=> b!133703 m!156679))

(assert (=> b!133703 m!156679))

(declare-fun m!158107 () Bool)

(assert (=> b!133703 m!158107))

(declare-fun m!158109 () Bool)

(assert (=> bm!14744 m!158109))

(declare-fun m!158111 () Bool)

(assert (=> bm!14742 m!158111))

(assert (=> b!133697 m!156679))

(assert (=> b!133697 m!156679))

(assert (=> b!133697 m!156689))

(declare-fun m!158113 () Bool)

(assert (=> b!133699 m!158113))

(assert (=> b!133707 m!156679))

(assert (=> b!133707 m!156679))

(declare-fun m!158115 () Bool)

(assert (=> b!133707 m!158115))

(assert (=> bm!14748 m!156393))

(assert (=> bm!14748 m!158095))

(declare-fun m!158117 () Bool)

(assert (=> bm!14746 m!158117))

(declare-fun m!158119 () Bool)

(assert (=> b!133706 m!158119))

(declare-fun m!158121 () Bool)

(assert (=> b!133696 m!158121))

(assert (=> d!40573 d!40825))

(assert (=> d!40573 d!40591))

(declare-fun d!40827 () Bool)

(declare-fun e!87118 () Bool)

(assert (=> d!40827 e!87118))

(declare-fun res!64361 () Bool)

(assert (=> d!40827 (=> res!64361 e!87118)))

(declare-fun lt!69968 () Bool)

(assert (=> d!40827 (= res!64361 (not lt!69968))))

(declare-fun lt!69969 () Bool)

(assert (=> d!40827 (= lt!69968 lt!69969)))

(declare-fun lt!69970 () Unit!4141)

(declare-fun e!87117 () Unit!4141)

(assert (=> d!40827 (= lt!69970 e!87117)))

(declare-fun c!24799 () Bool)

(assert (=> d!40827 (= c!24799 lt!69969)))

(assert (=> d!40827 (= lt!69969 (containsKey!176 (toList!842 lt!69634) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40827 (= (contains!884 lt!69634 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69968)))

(declare-fun b!133715 () Bool)

(declare-fun lt!69971 () Unit!4141)

(assert (=> b!133715 (= e!87117 lt!69971)))

(assert (=> b!133715 (= lt!69971 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69634) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> b!133715 (isDefined!125 (getValueByKey!173 (toList!842 lt!69634) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133716 () Bool)

(declare-fun Unit!4178 () Unit!4141)

(assert (=> b!133716 (= e!87117 Unit!4178)))

(declare-fun b!133717 () Bool)

(assert (=> b!133717 (= e!87118 (isDefined!125 (getValueByKey!173 (toList!842 lt!69634) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!40827 c!24799) b!133715))

(assert (= (and d!40827 (not c!24799)) b!133716))

(assert (= (and d!40827 (not res!64361)) b!133717))

(declare-fun m!158123 () Bool)

(assert (=> d!40827 m!158123))

(declare-fun m!158125 () Bool)

(assert (=> b!133715 m!158125))

(assert (=> b!133715 m!157149))

(assert (=> b!133715 m!157149))

(declare-fun m!158127 () Bool)

(assert (=> b!133715 m!158127))

(assert (=> b!133717 m!157149))

(assert (=> b!133717 m!157149))

(assert (=> b!133717 m!158127))

(assert (=> d!40549 d!40827))

(declare-fun b!133719 () Bool)

(declare-fun e!87119 () Option!179)

(declare-fun e!87120 () Option!179)

(assert (=> b!133719 (= e!87119 e!87120)))

(declare-fun c!24801 () Bool)

(assert (=> b!133719 (= c!24801 (and ((_ is Cons!1690) lt!69635) (not (= (_1!1293 (h!2295 lt!69635)) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!133718 () Bool)

(assert (=> b!133718 (= e!87119 (Some!178 (_2!1293 (h!2295 lt!69635))))))

(declare-fun c!24800 () Bool)

(declare-fun d!40829 () Bool)

(assert (=> d!40829 (= c!24800 (and ((_ is Cons!1690) lt!69635) (= (_1!1293 (h!2295 lt!69635)) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!40829 (= (getValueByKey!173 lt!69635 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87119)))

(declare-fun b!133721 () Bool)

(assert (=> b!133721 (= e!87120 None!177)))

(declare-fun b!133720 () Bool)

(assert (=> b!133720 (= e!87120 (getValueByKey!173 (t!6137 lt!69635) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!40829 c!24800) b!133718))

(assert (= (and d!40829 (not c!24800)) b!133719))

(assert (= (and b!133719 c!24801) b!133720))

(assert (= (and b!133719 (not c!24801)) b!133721))

(declare-fun m!158129 () Bool)

(assert (=> b!133720 m!158129))

(assert (=> d!40549 d!40829))

(declare-fun d!40831 () Bool)

(assert (=> d!40831 (= (getValueByKey!173 lt!69635 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun lt!69972 () Unit!4141)

(assert (=> d!40831 (= lt!69972 (choose!833 lt!69635 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun e!87121 () Bool)

(assert (=> d!40831 e!87121))

(declare-fun res!64362 () Bool)

(assert (=> d!40831 (=> (not res!64362) (not e!87121))))

(assert (=> d!40831 (= res!64362 (isStrictlySorted!309 lt!69635))))

(assert (=> d!40831 (= (lemmaContainsTupThenGetReturnValue!88 lt!69635 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69972)))

(declare-fun b!133722 () Bool)

(declare-fun res!64363 () Bool)

(assert (=> b!133722 (=> (not res!64363) (not e!87121))))

(assert (=> b!133722 (= res!64363 (containsKey!176 lt!69635 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133723 () Bool)

(assert (=> b!133723 (= e!87121 (contains!886 lt!69635 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!40831 res!64362) b!133722))

(assert (= (and b!133722 res!64363) b!133723))

(assert (=> d!40831 m!157143))

(declare-fun m!158131 () Bool)

(assert (=> d!40831 m!158131))

(declare-fun m!158133 () Bool)

(assert (=> d!40831 m!158133))

(declare-fun m!158135 () Bool)

(assert (=> b!133722 m!158135))

(declare-fun m!158137 () Bool)

(assert (=> b!133723 m!158137))

(assert (=> d!40549 d!40831))

(declare-fun b!133724 () Bool)

(declare-fun res!64364 () Bool)

(declare-fun e!87126 () Bool)

(assert (=> b!133724 (=> (not res!64364) (not e!87126))))

(declare-fun lt!69973 () List!1694)

(assert (=> b!133724 (= res!64364 (containsKey!176 lt!69973 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133725 () Bool)

(declare-fun e!87124 () List!1694)

(declare-fun e!87125 () List!1694)

(assert (=> b!133725 (= e!87124 e!87125)))

(declare-fun c!24805 () Bool)

(assert (=> b!133725 (= c!24805 (and ((_ is Cons!1690) (toList!842 lt!69353)) (= (_1!1293 (h!2295 (toList!842 lt!69353))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun bm!14749 () Bool)

(declare-fun call!14753 () List!1694)

(declare-fun call!14752 () List!1694)

(assert (=> bm!14749 (= call!14753 call!14752)))

(declare-fun b!133726 () Bool)

(declare-fun e!87122 () List!1694)

(assert (=> b!133726 (= e!87122 call!14753)))

(declare-fun b!133727 () Bool)

(declare-fun c!24804 () Bool)

(assert (=> b!133727 (= c!24804 (and ((_ is Cons!1690) (toList!842 lt!69353)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69353))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> b!133727 (= e!87125 e!87122)))

(declare-fun b!133728 () Bool)

(assert (=> b!133728 (= e!87126 (contains!886 lt!69973 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!133729 () Bool)

(assert (=> b!133729 (= e!87125 call!14752)))

(declare-fun d!40833 () Bool)

(assert (=> d!40833 e!87126))

(declare-fun res!64365 () Bool)

(assert (=> d!40833 (=> (not res!64365) (not e!87126))))

(assert (=> d!40833 (= res!64365 (isStrictlySorted!309 lt!69973))))

(assert (=> d!40833 (= lt!69973 e!87124)))

(declare-fun c!24803 () Bool)

(assert (=> d!40833 (= c!24803 (and ((_ is Cons!1690) (toList!842 lt!69353)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69353))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!40833 (isStrictlySorted!309 (toList!842 lt!69353))))

(assert (=> d!40833 (= (insertStrictlySorted!91 (toList!842 lt!69353) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69973)))

(declare-fun e!87123 () List!1694)

(declare-fun b!133730 () Bool)

(assert (=> b!133730 (= e!87123 (ite c!24805 (t!6137 (toList!842 lt!69353)) (ite c!24804 (Cons!1690 (h!2295 (toList!842 lt!69353)) (t!6137 (toList!842 lt!69353))) Nil!1691)))))

(declare-fun b!133731 () Bool)

(declare-fun call!14754 () List!1694)

(assert (=> b!133731 (= e!87124 call!14754)))

(declare-fun b!133732 () Bool)

(assert (=> b!133732 (= e!87122 call!14753)))

(declare-fun b!133733 () Bool)

(assert (=> b!133733 (= e!87123 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69353)) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun bm!14750 () Bool)

(assert (=> bm!14750 (= call!14752 call!14754)))

(declare-fun bm!14751 () Bool)

(assert (=> bm!14751 (= call!14754 ($colon$colon!91 e!87123 (ite c!24803 (h!2295 (toList!842 lt!69353)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun c!24802 () Bool)

(assert (=> bm!14751 (= c!24802 c!24803)))

(assert (= (and d!40833 c!24803) b!133731))

(assert (= (and d!40833 (not c!24803)) b!133725))

(assert (= (and b!133725 c!24805) b!133729))

(assert (= (and b!133725 (not c!24805)) b!133727))

(assert (= (and b!133727 c!24804) b!133732))

(assert (= (and b!133727 (not c!24804)) b!133726))

(assert (= (or b!133732 b!133726) bm!14749))

(assert (= (or b!133729 bm!14749) bm!14750))

(assert (= (or b!133731 bm!14750) bm!14751))

(assert (= (and bm!14751 c!24802) b!133733))

(assert (= (and bm!14751 (not c!24802)) b!133730))

(assert (= (and d!40833 res!64365) b!133724))

(assert (= (and b!133724 res!64364) b!133728))

(declare-fun m!158139 () Bool)

(assert (=> b!133728 m!158139))

(declare-fun m!158141 () Bool)

(assert (=> b!133733 m!158141))

(declare-fun m!158143 () Bool)

(assert (=> bm!14751 m!158143))

(declare-fun m!158145 () Bool)

(assert (=> b!133724 m!158145))

(declare-fun m!158147 () Bool)

(assert (=> d!40833 m!158147))

(declare-fun m!158149 () Bool)

(assert (=> d!40833 m!158149))

(assert (=> d!40549 d!40833))

(declare-fun b!133735 () Bool)

(declare-fun e!87127 () Option!179)

(declare-fun e!87128 () Option!179)

(assert (=> b!133735 (= e!87127 e!87128)))

(declare-fun c!24807 () Bool)

(assert (=> b!133735 (= c!24807 (and ((_ is Cons!1690) (toList!842 lt!69545)) (not (= (_1!1293 (h!2295 (toList!842 lt!69545))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!133734 () Bool)

(assert (=> b!133734 (= e!87127 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69545)))))))

(declare-fun c!24806 () Bool)

(declare-fun d!40835 () Bool)

(assert (=> d!40835 (= c!24806 (and ((_ is Cons!1690) (toList!842 lt!69545)) (= (_1!1293 (h!2295 (toList!842 lt!69545))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40835 (= (getValueByKey!173 (toList!842 lt!69545) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87127)))

(declare-fun b!133737 () Bool)

(assert (=> b!133737 (= e!87128 None!177)))

(declare-fun b!133736 () Bool)

(assert (=> b!133736 (= e!87128 (getValueByKey!173 (t!6137 (toList!842 lt!69545)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!40835 c!24806) b!133734))

(assert (= (and d!40835 (not c!24806)) b!133735))

(assert (= (and b!133735 c!24807) b!133736))

(assert (= (and b!133735 (not c!24807)) b!133737))

(declare-fun m!158151 () Bool)

(assert (=> b!133736 m!158151))

(assert (=> b!133075 d!40835))

(declare-fun d!40837 () Bool)

(declare-fun e!87130 () Bool)

(assert (=> d!40837 e!87130))

(declare-fun res!64366 () Bool)

(assert (=> d!40837 (=> res!64366 e!87130)))

(declare-fun lt!69974 () Bool)

(assert (=> d!40837 (= res!64366 (not lt!69974))))

(declare-fun lt!69975 () Bool)

(assert (=> d!40837 (= lt!69974 lt!69975)))

(declare-fun lt!69976 () Unit!4141)

(declare-fun e!87129 () Unit!4141)

(assert (=> d!40837 (= lt!69976 e!87129)))

(declare-fun c!24808 () Bool)

(assert (=> d!40837 (= c!24808 lt!69975)))

(assert (=> d!40837 (= lt!69975 (containsKey!176 (toList!842 lt!69577) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40837 (= (contains!884 lt!69577 #b0000000000000000000000000000000000000000000000000000000000000000) lt!69974)))

(declare-fun b!133738 () Bool)

(declare-fun lt!69977 () Unit!4141)

(assert (=> b!133738 (= e!87129 lt!69977)))

(assert (=> b!133738 (= lt!69977 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69577) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133738 (isDefined!125 (getValueByKey!173 (toList!842 lt!69577) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133739 () Bool)

(declare-fun Unit!4179 () Unit!4141)

(assert (=> b!133739 (= e!87129 Unit!4179)))

(declare-fun b!133740 () Bool)

(assert (=> b!133740 (= e!87130 (isDefined!125 (getValueByKey!173 (toList!842 lt!69577) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40837 c!24808) b!133738))

(assert (= (and d!40837 (not c!24808)) b!133739))

(assert (= (and d!40837 (not res!64366)) b!133740))

(declare-fun m!158153 () Bool)

(assert (=> d!40837 m!158153))

(declare-fun m!158155 () Bool)

(assert (=> b!133738 m!158155))

(assert (=> b!133738 m!157995))

(assert (=> b!133738 m!157995))

(declare-fun m!158157 () Bool)

(assert (=> b!133738 m!158157))

(assert (=> b!133740 m!157995))

(assert (=> b!133740 m!157995))

(assert (=> b!133740 m!158157))

(assert (=> bm!14663 d!40837))

(assert (=> b!133013 d!40493))

(declare-fun b!133741 () Bool)

(declare-fun e!87133 () Bool)

(assert (=> b!133741 (= e!87133 (contains!885 Nil!1690 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(declare-fun b!133742 () Bool)

(declare-fun e!87131 () Bool)

(declare-fun call!14755 () Bool)

(assert (=> b!133742 (= e!87131 call!14755)))

(declare-fun b!133743 () Bool)

(declare-fun e!87134 () Bool)

(declare-fun e!87132 () Bool)

(assert (=> b!133743 (= e!87134 e!87132)))

(declare-fun res!64368 () Bool)

(assert (=> b!133743 (=> (not res!64368) (not e!87132))))

(assert (=> b!133743 (= res!64368 (not e!87133))))

(declare-fun res!64369 () Bool)

(assert (=> b!133743 (=> (not res!64369) (not e!87133))))

(assert (=> b!133743 (= res!64369 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(declare-fun bm!14752 () Bool)

(declare-fun c!24809 () Bool)

(assert (=> bm!14752 (= call!14755 (arrayNoDuplicates!0 (_keys!4613 (_2!1294 lt!69280)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24809 (Cons!1689 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)))))

(declare-fun d!40839 () Bool)

(declare-fun res!64367 () Bool)

(assert (=> d!40839 (=> res!64367 e!87134)))

(assert (=> d!40839 (= res!64367 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(assert (=> d!40839 (= (arrayNoDuplicates!0 (_keys!4613 (_2!1294 lt!69280)) #b00000000000000000000000000000000 Nil!1690) e!87134)))

(declare-fun b!133744 () Bool)

(assert (=> b!133744 (= e!87132 e!87131)))

(assert (=> b!133744 (= c!24809 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(declare-fun b!133745 () Bool)

(assert (=> b!133745 (= e!87131 call!14755)))

(assert (= (and d!40839 (not res!64367)) b!133743))

(assert (= (and b!133743 res!64369) b!133741))

(assert (= (and b!133743 res!64368) b!133744))

(assert (= (and b!133744 c!24809) b!133742))

(assert (= (and b!133744 (not c!24809)) b!133745))

(assert (= (or b!133742 b!133745) bm!14752))

(assert (=> b!133741 m!157455))

(assert (=> b!133741 m!157455))

(declare-fun m!158159 () Bool)

(assert (=> b!133741 m!158159))

(assert (=> b!133743 m!157455))

(assert (=> b!133743 m!157455))

(assert (=> b!133743 m!157457))

(assert (=> bm!14752 m!157455))

(declare-fun m!158161 () Bool)

(assert (=> bm!14752 m!158161))

(assert (=> b!133744 m!157455))

(assert (=> b!133744 m!157455))

(assert (=> b!133744 m!157457))

(assert (=> b!133048 d!40839))

(assert (=> d!40451 d!40591))

(declare-fun b!133747 () Bool)

(declare-fun e!87135 () Option!179)

(declare-fun e!87136 () Option!179)

(assert (=> b!133747 (= e!87135 e!87136)))

(declare-fun c!24811 () Bool)

(assert (=> b!133747 (= c!24811 (and ((_ is Cons!1690) (toList!842 lt!69639)) (not (= (_1!1293 (h!2295 (toList!842 lt!69639))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!133746 () Bool)

(assert (=> b!133746 (= e!87135 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69639)))))))

(declare-fun c!24810 () Bool)

(declare-fun d!40841 () Bool)

(assert (=> d!40841 (= c!24810 (and ((_ is Cons!1690) (toList!842 lt!69639)) (= (_1!1293 (h!2295 (toList!842 lt!69639))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!40841 (= (getValueByKey!173 (toList!842 lt!69639) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87135)))

(declare-fun b!133749 () Bool)

(assert (=> b!133749 (= e!87136 None!177)))

(declare-fun b!133748 () Bool)

(assert (=> b!133748 (= e!87136 (getValueByKey!173 (t!6137 (toList!842 lt!69639)) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!40841 c!24810) b!133746))

(assert (= (and d!40841 (not c!24810)) b!133747))

(assert (= (and b!133747 c!24811) b!133748))

(assert (= (and b!133747 (not c!24811)) b!133749))

(declare-fun m!158163 () Bool)

(assert (=> b!133748 m!158163))

(assert (=> b!133198 d!40841))

(declare-fun d!40843 () Bool)

(declare-fun lt!69978 () Bool)

(assert (=> d!40843 (= lt!69978 (select (content!133 Nil!1690) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!87138 () Bool)

(assert (=> d!40843 (= lt!69978 e!87138)))

(declare-fun res!64370 () Bool)

(assert (=> d!40843 (=> (not res!64370) (not e!87138))))

(assert (=> d!40843 (= res!64370 ((_ is Cons!1689) Nil!1690))))

(assert (=> d!40843 (= (contains!885 Nil!1690 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) lt!69978)))

(declare-fun b!133750 () Bool)

(declare-fun e!87137 () Bool)

(assert (=> b!133750 (= e!87138 e!87137)))

(declare-fun res!64371 () Bool)

(assert (=> b!133750 (=> res!64371 e!87137)))

(assert (=> b!133750 (= res!64371 (= (h!2294 Nil!1690) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133751 () Bool)

(assert (=> b!133751 (= e!87137 (contains!885 (t!6136 Nil!1690) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!40843 res!64370) b!133750))

(assert (= (and b!133750 (not res!64371)) b!133751))

(assert (=> d!40843 m!156829))

(assert (=> d!40843 m!156679))

(declare-fun m!158165 () Bool)

(assert (=> d!40843 m!158165))

(assert (=> b!133751 m!156679))

(declare-fun m!158167 () Bool)

(assert (=> b!133751 m!158167))

(assert (=> b!133139 d!40843))

(declare-fun d!40845 () Bool)

(assert (=> d!40845 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5547 () Bool)

(assert (= bs!5547 d!40845))

(assert (=> bs!5547 m!157055))

(declare-fun m!158169 () Bool)

(assert (=> bs!5547 m!158169))

(assert (=> b!133228 d!40845))

(assert (=> b!133228 d!40807))

(declare-fun d!40847 () Bool)

(declare-fun e!87140 () Bool)

(assert (=> d!40847 e!87140))

(declare-fun res!64372 () Bool)

(assert (=> d!40847 (=> res!64372 e!87140)))

(declare-fun lt!69979 () Bool)

(assert (=> d!40847 (= res!64372 (not lt!69979))))

(declare-fun lt!69980 () Bool)

(assert (=> d!40847 (= lt!69979 lt!69980)))

(declare-fun lt!69981 () Unit!4141)

(declare-fun e!87139 () Unit!4141)

(assert (=> d!40847 (= lt!69981 e!87139)))

(declare-fun c!24812 () Bool)

(assert (=> d!40847 (= c!24812 lt!69980)))

(assert (=> d!40847 (= lt!69980 (containsKey!176 (toList!842 lt!69545) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40847 (= (contains!884 lt!69545 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69979)))

(declare-fun b!133752 () Bool)

(declare-fun lt!69982 () Unit!4141)

(assert (=> b!133752 (= e!87139 lt!69982)))

(assert (=> b!133752 (= lt!69982 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69545) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!133752 (isDefined!125 (getValueByKey!173 (toList!842 lt!69545) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133753 () Bool)

(declare-fun Unit!4180 () Unit!4141)

(assert (=> b!133753 (= e!87139 Unit!4180)))

(declare-fun b!133754 () Bool)

(assert (=> b!133754 (= e!87140 (isDefined!125 (getValueByKey!173 (toList!842 lt!69545) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!40847 c!24812) b!133752))

(assert (= (and d!40847 (not c!24812)) b!133753))

(assert (= (and d!40847 (not res!64372)) b!133754))

(declare-fun m!158171 () Bool)

(assert (=> d!40847 m!158171))

(declare-fun m!158173 () Bool)

(assert (=> b!133752 m!158173))

(assert (=> b!133752 m!156925))

(assert (=> b!133752 m!156925))

(declare-fun m!158175 () Bool)

(assert (=> b!133752 m!158175))

(assert (=> b!133754 m!156925))

(assert (=> b!133754 m!156925))

(assert (=> b!133754 m!158175))

(assert (=> d!40487 d!40847))

(declare-fun b!133756 () Bool)

(declare-fun e!87141 () Option!179)

(declare-fun e!87142 () Option!179)

(assert (=> b!133756 (= e!87141 e!87142)))

(declare-fun c!24814 () Bool)

(assert (=> b!133756 (= c!24814 (and ((_ is Cons!1690) lt!69546) (not (= (_1!1293 (h!2295 lt!69546)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!133755 () Bool)

(assert (=> b!133755 (= e!87141 (Some!178 (_2!1293 (h!2295 lt!69546))))))

(declare-fun d!40849 () Bool)

(declare-fun c!24813 () Bool)

(assert (=> d!40849 (= c!24813 (and ((_ is Cons!1690) lt!69546) (= (_1!1293 (h!2295 lt!69546)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40849 (= (getValueByKey!173 lt!69546 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87141)))

(declare-fun b!133758 () Bool)

(assert (=> b!133758 (= e!87142 None!177)))

(declare-fun b!133757 () Bool)

(assert (=> b!133757 (= e!87142 (getValueByKey!173 (t!6137 lt!69546) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!40849 c!24813) b!133755))

(assert (= (and d!40849 (not c!24813)) b!133756))

(assert (= (and b!133756 c!24814) b!133757))

(assert (= (and b!133756 (not c!24814)) b!133758))

(declare-fun m!158177 () Bool)

(assert (=> b!133757 m!158177))

(assert (=> d!40487 d!40849))

(declare-fun d!40851 () Bool)

(assert (=> d!40851 (= (getValueByKey!173 lt!69546 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!69983 () Unit!4141)

(assert (=> d!40851 (= lt!69983 (choose!833 lt!69546 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87143 () Bool)

(assert (=> d!40851 e!87143))

(declare-fun res!64373 () Bool)

(assert (=> d!40851 (=> (not res!64373) (not e!87143))))

(assert (=> d!40851 (= res!64373 (isStrictlySorted!309 lt!69546))))

(assert (=> d!40851 (= (lemmaContainsTupThenGetReturnValue!88 lt!69546 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69983)))

(declare-fun b!133759 () Bool)

(declare-fun res!64374 () Bool)

(assert (=> b!133759 (=> (not res!64374) (not e!87143))))

(assert (=> b!133759 (= res!64374 (containsKey!176 lt!69546 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133760 () Bool)

(assert (=> b!133760 (= e!87143 (contains!886 lt!69546 (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!40851 res!64373) b!133759))

(assert (= (and b!133759 res!64374) b!133760))

(assert (=> d!40851 m!156919))

(declare-fun m!158179 () Bool)

(assert (=> d!40851 m!158179))

(declare-fun m!158181 () Bool)

(assert (=> d!40851 m!158181))

(declare-fun m!158183 () Bool)

(assert (=> b!133759 m!158183))

(declare-fun m!158185 () Bool)

(assert (=> b!133760 m!158185))

(assert (=> d!40487 d!40851))

(declare-fun b!133761 () Bool)

(declare-fun res!64375 () Bool)

(declare-fun e!87148 () Bool)

(assert (=> b!133761 (=> (not res!64375) (not e!87148))))

(declare-fun lt!69984 () List!1694)

(assert (=> b!133761 (= res!64375 (containsKey!176 lt!69984 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!133762 () Bool)

(declare-fun e!87146 () List!1694)

(declare-fun e!87147 () List!1694)

(assert (=> b!133762 (= e!87146 e!87147)))

(declare-fun c!24818 () Bool)

(assert (=> b!133762 (= c!24818 (and ((_ is Cons!1690) (toList!842 call!14604)) (= (_1!1293 (h!2295 (toList!842 call!14604))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14753 () Bool)

(declare-fun call!14757 () List!1694)

(declare-fun call!14756 () List!1694)

(assert (=> bm!14753 (= call!14757 call!14756)))

(declare-fun b!133763 () Bool)

(declare-fun e!87144 () List!1694)

(assert (=> b!133763 (= e!87144 call!14757)))

(declare-fun c!24817 () Bool)

(declare-fun b!133764 () Bool)

(assert (=> b!133764 (= c!24817 (and ((_ is Cons!1690) (toList!842 call!14604)) (bvsgt (_1!1293 (h!2295 (toList!842 call!14604))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!133764 (= e!87147 e!87144)))

(declare-fun b!133765 () Bool)

(assert (=> b!133765 (= e!87148 (contains!886 lt!69984 (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133766 () Bool)

(assert (=> b!133766 (= e!87147 call!14756)))

(declare-fun d!40853 () Bool)

(assert (=> d!40853 e!87148))

(declare-fun res!64376 () Bool)

(assert (=> d!40853 (=> (not res!64376) (not e!87148))))

(assert (=> d!40853 (= res!64376 (isStrictlySorted!309 lt!69984))))

(assert (=> d!40853 (= lt!69984 e!87146)))

(declare-fun c!24816 () Bool)

(assert (=> d!40853 (= c!24816 (and ((_ is Cons!1690) (toList!842 call!14604)) (bvslt (_1!1293 (h!2295 (toList!842 call!14604))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!40853 (isStrictlySorted!309 (toList!842 call!14604))))

(assert (=> d!40853 (= (insertStrictlySorted!91 (toList!842 call!14604) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69984)))

(declare-fun b!133767 () Bool)

(declare-fun e!87145 () List!1694)

(assert (=> b!133767 (= e!87145 (ite c!24818 (t!6137 (toList!842 call!14604)) (ite c!24817 (Cons!1690 (h!2295 (toList!842 call!14604)) (t!6137 (toList!842 call!14604))) Nil!1691)))))

(declare-fun b!133768 () Bool)

(declare-fun call!14758 () List!1694)

(assert (=> b!133768 (= e!87146 call!14758)))

(declare-fun b!133769 () Bool)

(assert (=> b!133769 (= e!87144 call!14757)))

(declare-fun b!133770 () Bool)

(assert (=> b!133770 (= e!87145 (insertStrictlySorted!91 (t!6137 (toList!842 call!14604)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14754 () Bool)

(assert (=> bm!14754 (= call!14756 call!14758)))

(declare-fun bm!14755 () Bool)

(assert (=> bm!14755 (= call!14758 ($colon$colon!91 e!87145 (ite c!24816 (h!2295 (toList!842 call!14604)) (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!24815 () Bool)

(assert (=> bm!14755 (= c!24815 c!24816)))

(assert (= (and d!40853 c!24816) b!133768))

(assert (= (and d!40853 (not c!24816)) b!133762))

(assert (= (and b!133762 c!24818) b!133766))

(assert (= (and b!133762 (not c!24818)) b!133764))

(assert (= (and b!133764 c!24817) b!133769))

(assert (= (and b!133764 (not c!24817)) b!133763))

(assert (= (or b!133769 b!133763) bm!14753))

(assert (= (or b!133766 bm!14753) bm!14754))

(assert (= (or b!133768 bm!14754) bm!14755))

(assert (= (and bm!14755 c!24815) b!133770))

(assert (= (and bm!14755 (not c!24815)) b!133767))

(assert (= (and d!40853 res!64376) b!133761))

(assert (= (and b!133761 res!64375) b!133765))

(declare-fun m!158187 () Bool)

(assert (=> b!133765 m!158187))

(declare-fun m!158189 () Bool)

(assert (=> b!133770 m!158189))

(declare-fun m!158191 () Bool)

(assert (=> bm!14755 m!158191))

(declare-fun m!158193 () Bool)

(assert (=> b!133761 m!158193))

(declare-fun m!158195 () Bool)

(assert (=> d!40853 m!158195))

(declare-fun m!158197 () Bool)

(assert (=> d!40853 m!158197))

(assert (=> d!40487 d!40853))

(declare-fun b!133772 () Bool)

(declare-fun e!87149 () Option!179)

(declare-fun e!87150 () Option!179)

(assert (=> b!133772 (= e!87149 e!87150)))

(declare-fun c!24820 () Bool)

(assert (=> b!133772 (= c!24820 (and ((_ is Cons!1690) (toList!842 lt!69630)) (not (= (_1!1293 (h!2295 (toList!842 lt!69630))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!133771 () Bool)

(assert (=> b!133771 (= e!87149 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69630)))))))

(declare-fun c!24819 () Bool)

(declare-fun d!40855 () Bool)

(assert (=> d!40855 (= c!24819 (and ((_ is Cons!1690) (toList!842 lt!69630)) (= (_1!1293 (h!2295 (toList!842 lt!69630))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!40855 (= (getValueByKey!173 (toList!842 lt!69630) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87149)))

(declare-fun b!133774 () Bool)

(assert (=> b!133774 (= e!87150 None!177)))

(declare-fun b!133773 () Bool)

(assert (=> b!133773 (= e!87150 (getValueByKey!173 (t!6137 (toList!842 lt!69630)) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!40855 c!24819) b!133771))

(assert (= (and d!40855 (not c!24819)) b!133772))

(assert (= (and b!133772 c!24820) b!133773))

(assert (= (and b!133772 (not c!24820)) b!133774))

(declare-fun m!158199 () Bool)

(assert (=> b!133773 m!158199))

(assert (=> b!133193 d!40855))

(assert (=> b!133101 d!40621))

(declare-fun d!40857 () Bool)

(assert (=> d!40857 (= (inRange!0 (ite c!24607 (index!3237 lt!69463) (ite c!24606 (index!3236 lt!69457) (index!3239 lt!69457))) (mask!7164 newMap!16)) (and (bvsge (ite c!24607 (index!3237 lt!69463) (ite c!24606 (index!3236 lt!69457) (index!3239 lt!69457))) #b00000000000000000000000000000000) (bvslt (ite c!24607 (index!3237 lt!69463) (ite c!24606 (index!3236 lt!69457) (index!3239 lt!69457))) (bvadd (mask!7164 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14639 d!40857))

(assert (=> b!133207 d!40435))

(assert (=> bm!14676 d!40459))

(declare-fun b!133775 () Bool)

(assert (=> b!133775 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> b!133775 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (_values!2847 newMap!16))))))

(declare-fun e!87157 () Bool)

(declare-fun lt!69989 () ListLongMap!1653)

(assert (=> b!133775 (= e!87157 (= (apply!116 lt!69989 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133776 () Bool)

(declare-fun res!64379 () Bool)

(declare-fun e!87155 () Bool)

(assert (=> b!133776 (=> (not res!64379) (not e!87155))))

(assert (=> b!133776 (= res!64379 (not (contains!884 lt!69989 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133777 () Bool)

(declare-fun e!87152 () Bool)

(assert (=> b!133777 (= e!87152 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133777 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!133778 () Bool)

(declare-fun e!87153 () Bool)

(declare-fun e!87154 () Bool)

(assert (=> b!133778 (= e!87153 e!87154)))

(declare-fun c!24824 () Bool)

(assert (=> b!133778 (= c!24824 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133779 () Bool)

(assert (=> b!133779 (= e!87154 (= lt!69989 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun bm!14756 () Bool)

(declare-fun call!14759 () ListLongMap!1653)

(assert (=> bm!14756 (= call!14759 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!133780 () Bool)

(declare-fun e!87151 () ListLongMap!1653)

(assert (=> b!133780 (= e!87151 call!14759)))

(declare-fun b!133781 () Bool)

(declare-fun e!87156 () ListLongMap!1653)

(assert (=> b!133781 (= e!87156 e!87151)))

(declare-fun c!24821 () Bool)

(assert (=> b!133781 (= c!24821 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!40859 () Bool)

(assert (=> d!40859 e!87155))

(declare-fun res!64377 () Bool)

(assert (=> d!40859 (=> (not res!64377) (not e!87155))))

(assert (=> d!40859 (= res!64377 (not (contains!884 lt!69989 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40859 (= lt!69989 e!87156)))

(declare-fun c!24822 () Bool)

(assert (=> d!40859 (= c!24822 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40859 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40859 (= (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!69989)))

(declare-fun b!133782 () Bool)

(assert (=> b!133782 (= e!87153 e!87157)))

(assert (=> b!133782 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!64378 () Bool)

(assert (=> b!133782 (= res!64378 (contains!884 lt!69989 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133782 (=> (not res!64378) (not e!87157))))

(declare-fun b!133783 () Bool)

(assert (=> b!133783 (= e!87156 (ListLongMap!1654 Nil!1691))))

(declare-fun b!133784 () Bool)

(assert (=> b!133784 (= e!87154 (isEmpty!415 lt!69989))))

(declare-fun b!133785 () Bool)

(declare-fun lt!69986 () Unit!4141)

(declare-fun lt!69990 () Unit!4141)

(assert (=> b!133785 (= lt!69986 lt!69990)))

(declare-fun lt!69985 () ListLongMap!1653)

(declare-fun lt!69991 () (_ BitVec 64))

(declare-fun lt!69988 () V!3481)

(declare-fun lt!69987 () (_ BitVec 64))

(assert (=> b!133785 (not (contains!884 (+!169 lt!69985 (tuple2!2565 lt!69987 lt!69988)) lt!69991))))

(assert (=> b!133785 (= lt!69990 (addStillNotContains!63 lt!69985 lt!69987 lt!69988 lt!69991))))

(assert (=> b!133785 (= lt!69991 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133785 (= lt!69988 (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133785 (= lt!69987 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133785 (= lt!69985 call!14759)))

(assert (=> b!133785 (= e!87151 (+!169 call!14759 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133786 () Bool)

(assert (=> b!133786 (= e!87155 e!87153)))

(declare-fun c!24823 () Bool)

(assert (=> b!133786 (= c!24823 e!87152)))

(declare-fun res!64380 () Bool)

(assert (=> b!133786 (=> (not res!64380) (not e!87152))))

(assert (=> b!133786 (= res!64380 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (= (and d!40859 c!24822) b!133783))

(assert (= (and d!40859 (not c!24822)) b!133781))

(assert (= (and b!133781 c!24821) b!133785))

(assert (= (and b!133781 (not c!24821)) b!133780))

(assert (= (or b!133785 b!133780) bm!14756))

(assert (= (and d!40859 res!64377) b!133776))

(assert (= (and b!133776 res!64379) b!133786))

(assert (= (and b!133786 res!64380) b!133777))

(assert (= (and b!133786 c!24823) b!133782))

(assert (= (and b!133786 (not c!24823)) b!133778))

(assert (= (and b!133782 res!64378) b!133775))

(assert (= (and b!133778 c!24824) b!133779))

(assert (= (and b!133778 (not c!24824)) b!133784))

(declare-fun b_lambda!5965 () Bool)

(assert (=> (not b_lambda!5965) (not b!133775)))

(assert (=> b!133775 t!6147))

(declare-fun b_and!8297 () Bool)

(assert (= b_and!8293 (and (=> t!6147 result!3993) b_and!8297)))

(assert (=> b!133775 t!6149))

(declare-fun b_and!8299 () Bool)

(assert (= b_and!8295 (and (=> t!6149 result!3995) b_and!8299)))

(declare-fun b_lambda!5967 () Bool)

(assert (=> (not b_lambda!5967) (not b!133785)))

(assert (=> b!133785 t!6147))

(declare-fun b_and!8301 () Bool)

(assert (= b_and!8297 (and (=> t!6147 result!3993) b_and!8301)))

(assert (=> b!133785 t!6149))

(declare-fun b_and!8303 () Bool)

(assert (= b_and!8299 (and (=> t!6149 result!3995) b_and!8303)))

(declare-fun m!158201 () Bool)

(assert (=> b!133784 m!158201))

(assert (=> b!133781 m!156679))

(assert (=> b!133781 m!156679))

(assert (=> b!133781 m!156689))

(assert (=> b!133777 m!156679))

(assert (=> b!133777 m!156679))

(assert (=> b!133777 m!156689))

(declare-fun m!158203 () Bool)

(assert (=> b!133779 m!158203))

(declare-fun m!158205 () Bool)

(assert (=> b!133776 m!158205))

(assert (=> b!133785 m!156881))

(assert (=> b!133785 m!156809))

(assert (=> b!133785 m!156883))

(declare-fun m!158207 () Bool)

(assert (=> b!133785 m!158207))

(declare-fun m!158209 () Bool)

(assert (=> b!133785 m!158209))

(assert (=> b!133785 m!156881))

(declare-fun m!158211 () Bool)

(assert (=> b!133785 m!158211))

(assert (=> b!133785 m!158207))

(declare-fun m!158213 () Bool)

(assert (=> b!133785 m!158213))

(assert (=> b!133785 m!156679))

(assert (=> b!133785 m!156809))

(assert (=> b!133782 m!156679))

(assert (=> b!133782 m!156679))

(declare-fun m!158215 () Bool)

(assert (=> b!133782 m!158215))

(declare-fun m!158217 () Bool)

(assert (=> d!40859 m!158217))

(assert (=> d!40859 m!156651))

(assert (=> bm!14756 m!158203))

(assert (=> b!133775 m!156881))

(assert (=> b!133775 m!156809))

(assert (=> b!133775 m!156883))

(assert (=> b!133775 m!156881))

(assert (=> b!133775 m!156679))

(declare-fun m!158219 () Bool)

(assert (=> b!133775 m!158219))

(assert (=> b!133775 m!156679))

(assert (=> b!133775 m!156809))

(assert (=> bm!14658 d!40859))

(assert (=> b!133017 d!40485))

(declare-fun d!40861 () Bool)

(assert (=> d!40861 (not (contains!884 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485)) lt!69488))))

(declare-fun lt!69994 () Unit!4141)

(declare-fun choose!836 (ListLongMap!1653 (_ BitVec 64) V!3481 (_ BitVec 64)) Unit!4141)

(assert (=> d!40861 (= lt!69994 (choose!836 lt!69482 lt!69484 lt!69485 lt!69488))))

(declare-fun e!87160 () Bool)

(assert (=> d!40861 e!87160))

(declare-fun res!64383 () Bool)

(assert (=> d!40861 (=> (not res!64383) (not e!87160))))

(assert (=> d!40861 (= res!64383 (not (contains!884 lt!69482 lt!69488)))))

(assert (=> d!40861 (= (addStillNotContains!63 lt!69482 lt!69484 lt!69485 lt!69488) lt!69994)))

(declare-fun b!133790 () Bool)

(assert (=> b!133790 (= e!87160 (not (= lt!69484 lt!69488)))))

(assert (= (and d!40861 res!64383) b!133790))

(assert (=> d!40861 m!156755))

(assert (=> d!40861 m!156755))

(assert (=> d!40861 m!156761))

(declare-fun m!158221 () Bool)

(assert (=> d!40861 m!158221))

(declare-fun m!158223 () Bool)

(assert (=> d!40861 m!158223))

(assert (=> b!133017 d!40861))

(declare-fun d!40863 () Bool)

(declare-fun e!87162 () Bool)

(assert (=> d!40863 e!87162))

(declare-fun res!64384 () Bool)

(assert (=> d!40863 (=> res!64384 e!87162)))

(declare-fun lt!69995 () Bool)

(assert (=> d!40863 (= res!64384 (not lt!69995))))

(declare-fun lt!69996 () Bool)

(assert (=> d!40863 (= lt!69995 lt!69996)))

(declare-fun lt!69997 () Unit!4141)

(declare-fun e!87161 () Unit!4141)

(assert (=> d!40863 (= lt!69997 e!87161)))

(declare-fun c!24825 () Bool)

(assert (=> d!40863 (= c!24825 lt!69996)))

(assert (=> d!40863 (= lt!69996 (containsKey!176 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))) lt!69488))))

(assert (=> d!40863 (= (contains!884 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485)) lt!69488) lt!69995)))

(declare-fun b!133791 () Bool)

(declare-fun lt!69998 () Unit!4141)

(assert (=> b!133791 (= e!87161 lt!69998)))

(assert (=> b!133791 (= lt!69998 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))) lt!69488))))

(assert (=> b!133791 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))) lt!69488))))

(declare-fun b!133792 () Bool)

(declare-fun Unit!4181 () Unit!4141)

(assert (=> b!133792 (= e!87161 Unit!4181)))

(declare-fun b!133793 () Bool)

(assert (=> b!133793 (= e!87162 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))) lt!69488)))))

(assert (= (and d!40863 c!24825) b!133791))

(assert (= (and d!40863 (not c!24825)) b!133792))

(assert (= (and d!40863 (not res!64384)) b!133793))

(declare-fun m!158225 () Bool)

(assert (=> d!40863 m!158225))

(declare-fun m!158227 () Bool)

(assert (=> b!133791 m!158227))

(declare-fun m!158229 () Bool)

(assert (=> b!133791 m!158229))

(assert (=> b!133791 m!158229))

(declare-fun m!158231 () Bool)

(assert (=> b!133791 m!158231))

(assert (=> b!133793 m!158229))

(assert (=> b!133793 m!158229))

(assert (=> b!133793 m!158231))

(assert (=> b!133017 d!40863))

(declare-fun d!40865 () Bool)

(declare-fun e!87163 () Bool)

(assert (=> d!40865 e!87163))

(declare-fun res!64386 () Bool)

(assert (=> d!40865 (=> (not res!64386) (not e!87163))))

(declare-fun lt!70001 () ListLongMap!1653)

(assert (=> d!40865 (= res!64386 (contains!884 lt!70001 (_1!1293 (tuple2!2565 lt!69484 lt!69485))))))

(declare-fun lt!70002 () List!1694)

(assert (=> d!40865 (= lt!70001 (ListLongMap!1654 lt!70002))))

(declare-fun lt!69999 () Unit!4141)

(declare-fun lt!70000 () Unit!4141)

(assert (=> d!40865 (= lt!69999 lt!70000)))

(assert (=> d!40865 (= (getValueByKey!173 lt!70002 (_1!1293 (tuple2!2565 lt!69484 lt!69485))) (Some!178 (_2!1293 (tuple2!2565 lt!69484 lt!69485))))))

(assert (=> d!40865 (= lt!70000 (lemmaContainsTupThenGetReturnValue!88 lt!70002 (_1!1293 (tuple2!2565 lt!69484 lt!69485)) (_2!1293 (tuple2!2565 lt!69484 lt!69485))))))

(assert (=> d!40865 (= lt!70002 (insertStrictlySorted!91 (toList!842 lt!69482) (_1!1293 (tuple2!2565 lt!69484 lt!69485)) (_2!1293 (tuple2!2565 lt!69484 lt!69485))))))

(assert (=> d!40865 (= (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485)) lt!70001)))

(declare-fun b!133794 () Bool)

(declare-fun res!64385 () Bool)

(assert (=> b!133794 (=> (not res!64385) (not e!87163))))

(assert (=> b!133794 (= res!64385 (= (getValueByKey!173 (toList!842 lt!70001) (_1!1293 (tuple2!2565 lt!69484 lt!69485))) (Some!178 (_2!1293 (tuple2!2565 lt!69484 lt!69485)))))))

(declare-fun b!133795 () Bool)

(assert (=> b!133795 (= e!87163 (contains!886 (toList!842 lt!70001) (tuple2!2565 lt!69484 lt!69485)))))

(assert (= (and d!40865 res!64386) b!133794))

(assert (= (and b!133794 res!64385) b!133795))

(declare-fun m!158233 () Bool)

(assert (=> d!40865 m!158233))

(declare-fun m!158235 () Bool)

(assert (=> d!40865 m!158235))

(declare-fun m!158237 () Bool)

(assert (=> d!40865 m!158237))

(declare-fun m!158239 () Bool)

(assert (=> d!40865 m!158239))

(declare-fun m!158241 () Bool)

(assert (=> b!133794 m!158241))

(declare-fun m!158243 () Bool)

(assert (=> b!133795 m!158243))

(assert (=> b!133017 d!40865))

(declare-fun d!40867 () Bool)

(declare-fun e!87164 () Bool)

(assert (=> d!40867 e!87164))

(declare-fun res!64388 () Bool)

(assert (=> d!40867 (=> (not res!64388) (not e!87164))))

(declare-fun lt!70005 () ListLongMap!1653)

(assert (=> d!40867 (= res!64388 (contains!884 lt!70005 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70006 () List!1694)

(assert (=> d!40867 (= lt!70005 (ListLongMap!1654 lt!70006))))

(declare-fun lt!70003 () Unit!4141)

(declare-fun lt!70004 () Unit!4141)

(assert (=> d!40867 (= lt!70003 lt!70004)))

(assert (=> d!40867 (= (getValueByKey!173 lt!70006 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40867 (= lt!70004 (lemmaContainsTupThenGetReturnValue!88 lt!70006 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40867 (= lt!70006 (insertStrictlySorted!91 (toList!842 call!14647) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40867 (= (+!169 call!14647 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70005)))

(declare-fun b!133796 () Bool)

(declare-fun res!64387 () Bool)

(assert (=> b!133796 (=> (not res!64387) (not e!87164))))

(assert (=> b!133796 (= res!64387 (= (getValueByKey!173 (toList!842 lt!70005) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133797 () Bool)

(assert (=> b!133797 (= e!87164 (contains!886 (toList!842 lt!70005) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40867 res!64388) b!133796))

(assert (= (and b!133796 res!64387) b!133797))

(declare-fun m!158245 () Bool)

(assert (=> d!40867 m!158245))

(declare-fun m!158247 () Bool)

(assert (=> d!40867 m!158247))

(declare-fun m!158249 () Bool)

(assert (=> d!40867 m!158249))

(declare-fun m!158251 () Bool)

(assert (=> d!40867 m!158251))

(declare-fun m!158253 () Bool)

(assert (=> b!133796 m!158253))

(declare-fun m!158255 () Bool)

(assert (=> b!133797 m!158255))

(assert (=> b!133017 d!40867))

(assert (=> b!133009 d!40493))

(declare-fun d!40869 () Bool)

(assert (=> d!40869 (isDefined!125 (getValueByKey!173 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(declare-fun lt!70007 () Unit!4141)

(assert (=> d!40869 (= lt!70007 (choose!831 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(declare-fun e!87165 () Bool)

(assert (=> d!40869 e!87165))

(declare-fun res!64389 () Bool)

(assert (=> d!40869 (=> (not res!64389) (not e!87165))))

(assert (=> d!40869 (= res!64389 (isStrictlySorted!309 (toList!842 e!86556)))))

(assert (=> d!40869 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))) lt!70007)))

(declare-fun b!133798 () Bool)

(assert (=> b!133798 (= e!87165 (containsKey!176 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(assert (= (and d!40869 res!64389) b!133798))

(assert (=> d!40869 m!156941))

(assert (=> d!40869 m!156941))

(assert (=> d!40869 m!156943))

(declare-fun m!158257 () Bool)

(assert (=> d!40869 m!158257))

(declare-fun m!158259 () Bool)

(assert (=> d!40869 m!158259))

(assert (=> b!133798 m!156937))

(assert (=> b!133086 d!40869))

(assert (=> b!133086 d!40581))

(assert (=> b!133086 d!40583))

(declare-fun b!133800 () Bool)

(declare-fun e!87166 () Option!179)

(declare-fun e!87167 () Option!179)

(assert (=> b!133800 (= e!87166 e!87167)))

(declare-fun c!24827 () Bool)

(assert (=> b!133800 (= c!24827 (and ((_ is Cons!1690) (toList!842 lt!69634)) (not (= (_1!1293 (h!2295 (toList!842 lt!69634))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!133799 () Bool)

(assert (=> b!133799 (= e!87166 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69634)))))))

(declare-fun c!24826 () Bool)

(declare-fun d!40871 () Bool)

(assert (=> d!40871 (= c!24826 (and ((_ is Cons!1690) (toList!842 lt!69634)) (= (_1!1293 (h!2295 (toList!842 lt!69634))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!40871 (= (getValueByKey!173 (toList!842 lt!69634) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87166)))

(declare-fun b!133802 () Bool)

(assert (=> b!133802 (= e!87167 None!177)))

(declare-fun b!133801 () Bool)

(assert (=> b!133801 (= e!87167 (getValueByKey!173 (t!6137 (toList!842 lt!69634)) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!40871 c!24826) b!133799))

(assert (= (and d!40871 (not c!24826)) b!133800))

(assert (= (and b!133800 c!24827) b!133801))

(assert (= (and b!133800 (not c!24827)) b!133802))

(declare-fun m!158261 () Bool)

(assert (=> b!133801 m!158261))

(assert (=> b!133195 d!40871))

(declare-fun b!133803 () Bool)

(assert (=> b!133803 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> b!133803 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))))))))

(declare-fun e!87174 () Bool)

(declare-fun lt!70012 () ListLongMap!1653)

(assert (=> b!133803 (= e!87174 (= (apply!116 lt!70012 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!133804 () Bool)

(declare-fun res!64392 () Bool)

(declare-fun e!87172 () Bool)

(assert (=> b!133804 (=> (not res!64392) (not e!87172))))

(assert (=> b!133804 (= res!64392 (not (contains!884 lt!70012 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133805 () Bool)

(declare-fun e!87169 () Bool)

(assert (=> b!133805 (= e!87169 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133805 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!133806 () Bool)

(declare-fun e!87170 () Bool)

(declare-fun e!87171 () Bool)

(assert (=> b!133806 (= e!87170 e!87171)))

(declare-fun c!24831 () Bool)

(assert (=> b!133806 (= c!24831 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133807 () Bool)

(assert (=> b!133807 (= e!87171 (= lt!70012 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) (mask!7164 newMap!16) (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) (zeroValue!2719 newMap!16) (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun call!14760 () ListLongMap!1653)

(declare-fun bm!14757 () Bool)

(assert (=> bm!14757 (= call!14760 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) (mask!7164 newMap!16) (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) (zeroValue!2719 newMap!16) (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!133808 () Bool)

(declare-fun e!87168 () ListLongMap!1653)

(assert (=> b!133808 (= e!87168 call!14760)))

(declare-fun b!133809 () Bool)

(declare-fun e!87173 () ListLongMap!1653)

(assert (=> b!133809 (= e!87173 e!87168)))

(declare-fun c!24828 () Bool)

(assert (=> b!133809 (= c!24828 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!40873 () Bool)

(assert (=> d!40873 e!87172))

(declare-fun res!64390 () Bool)

(assert (=> d!40873 (=> (not res!64390) (not e!87172))))

(assert (=> d!40873 (= res!64390 (not (contains!884 lt!70012 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40873 (= lt!70012 e!87173)))

(declare-fun c!24829 () Bool)

(assert (=> d!40873 (= c!24829 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40873 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40873 (= (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) (mask!7164 newMap!16) (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) (zeroValue!2719 newMap!16) (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!70012)))

(declare-fun b!133810 () Bool)

(assert (=> b!133810 (= e!87170 e!87174)))

(assert (=> b!133810 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!64391 () Bool)

(assert (=> b!133810 (= res!64391 (contains!884 lt!70012 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133810 (=> (not res!64391) (not e!87174))))

(declare-fun b!133811 () Bool)

(assert (=> b!133811 (= e!87173 (ListLongMap!1654 Nil!1691))))

(declare-fun b!133812 () Bool)

(assert (=> b!133812 (= e!87171 (isEmpty!415 lt!70012))))

(declare-fun b!133813 () Bool)

(declare-fun lt!70009 () Unit!4141)

(declare-fun lt!70013 () Unit!4141)

(assert (=> b!133813 (= lt!70009 lt!70013)))

(declare-fun lt!70014 () (_ BitVec 64))

(declare-fun lt!70011 () V!3481)

(declare-fun lt!70010 () (_ BitVec 64))

(declare-fun lt!70008 () ListLongMap!1653)

(assert (=> b!133813 (not (contains!884 (+!169 lt!70008 (tuple2!2565 lt!70010 lt!70011)) lt!70014))))

(assert (=> b!133813 (= lt!70013 (addStillNotContains!63 lt!70008 lt!70010 lt!70011 lt!70014))))

(assert (=> b!133813 (= lt!70014 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!133813 (= lt!70011 (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!133813 (= lt!70010 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133813 (= lt!70008 call!14760)))

(assert (=> b!133813 (= e!87168 (+!169 call!14760 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!133814 () Bool)

(assert (=> b!133814 (= e!87172 e!87170)))

(declare-fun c!24830 () Bool)

(assert (=> b!133814 (= c!24830 e!87169)))

(declare-fun res!64393 () Bool)

(assert (=> b!133814 (=> (not res!64393) (not e!87169))))

(assert (=> b!133814 (= res!64393 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (= (and d!40873 c!24829) b!133811))

(assert (= (and d!40873 (not c!24829)) b!133809))

(assert (= (and b!133809 c!24828) b!133813))

(assert (= (and b!133809 (not c!24828)) b!133808))

(assert (= (or b!133813 b!133808) bm!14757))

(assert (= (and d!40873 res!64390) b!133804))

(assert (= (and b!133804 res!64392) b!133814))

(assert (= (and b!133814 res!64393) b!133805))

(assert (= (and b!133814 c!24830) b!133810))

(assert (= (and b!133814 (not c!24830)) b!133806))

(assert (= (and b!133810 res!64391) b!133803))

(assert (= (and b!133806 c!24831) b!133807))

(assert (= (and b!133806 (not c!24831)) b!133812))

(declare-fun b_lambda!5969 () Bool)

(assert (=> (not b_lambda!5969) (not b!133803)))

(assert (=> b!133803 t!6147))

(declare-fun b_and!8305 () Bool)

(assert (= b_and!8301 (and (=> t!6147 result!3993) b_and!8305)))

(assert (=> b!133803 t!6149))

(declare-fun b_and!8307 () Bool)

(assert (= b_and!8303 (and (=> t!6149 result!3995) b_and!8307)))

(declare-fun b_lambda!5971 () Bool)

(assert (=> (not b_lambda!5971) (not b!133813)))

(assert (=> b!133813 t!6147))

(declare-fun b_and!8309 () Bool)

(assert (= b_and!8305 (and (=> t!6147 result!3993) b_and!8309)))

(assert (=> b!133813 t!6149))

(declare-fun b_and!8311 () Bool)

(assert (= b_and!8307 (and (=> t!6149 result!3995) b_and!8311)))

(declare-fun m!158263 () Bool)

(assert (=> b!133812 m!158263))

(assert (=> b!133809 m!156679))

(assert (=> b!133809 m!156679))

(assert (=> b!133809 m!156689))

(assert (=> b!133805 m!156679))

(assert (=> b!133805 m!156679))

(assert (=> b!133805 m!156689))

(declare-fun m!158265 () Bool)

(assert (=> b!133807 m!158265))

(declare-fun m!158267 () Bool)

(assert (=> b!133804 m!158267))

(assert (=> b!133813 m!156995))

(assert (=> b!133813 m!156809))

(assert (=> b!133813 m!156997))

(declare-fun m!158269 () Bool)

(assert (=> b!133813 m!158269))

(declare-fun m!158271 () Bool)

(assert (=> b!133813 m!158271))

(assert (=> b!133813 m!156995))

(declare-fun m!158273 () Bool)

(assert (=> b!133813 m!158273))

(assert (=> b!133813 m!158269))

(declare-fun m!158275 () Bool)

(assert (=> b!133813 m!158275))

(assert (=> b!133813 m!156679))

(assert (=> b!133813 m!156809))

(assert (=> b!133810 m!156679))

(assert (=> b!133810 m!156679))

(declare-fun m!158277 () Bool)

(assert (=> b!133810 m!158277))

(declare-fun m!158279 () Bool)

(assert (=> d!40873 m!158279))

(assert (=> d!40873 m!156651))

(assert (=> bm!14757 m!158265))

(assert (=> b!133803 m!156995))

(assert (=> b!133803 m!156809))

(assert (=> b!133803 m!156997))

(assert (=> b!133803 m!156995))

(assert (=> b!133803 m!156679))

(declare-fun m!158281 () Bool)

(assert (=> b!133803 m!158281))

(assert (=> b!133803 m!156679))

(assert (=> b!133803 m!156809))

(assert (=> bm!14665 d!40873))

(declare-fun d!40875 () Bool)

(assert (=> d!40875 (= (map!1398 (_2!1294 lt!69445)) (getCurrentListMap!518 (_keys!4613 (_2!1294 lt!69445)) (_values!2847 (_2!1294 lt!69445)) (mask!7164 (_2!1294 lt!69445)) (extraKeys!2629 (_2!1294 lt!69445)) (zeroValue!2719 (_2!1294 lt!69445)) (minValue!2719 (_2!1294 lt!69445)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1294 lt!69445))))))

(declare-fun bs!5548 () Bool)

(assert (= bs!5548 d!40875))

(declare-fun m!158283 () Bool)

(assert (=> bs!5548 m!158283))

(assert (=> b!132981 d!40875))

(declare-fun d!40877 () Bool)

(declare-fun e!87175 () Bool)

(assert (=> d!40877 e!87175))

(declare-fun res!64395 () Bool)

(assert (=> d!40877 (=> (not res!64395) (not e!87175))))

(declare-fun lt!70017 () ListLongMap!1653)

(assert (=> d!40877 (= res!64395 (contains!884 lt!70017 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70018 () List!1694)

(assert (=> d!40877 (= lt!70017 (ListLongMap!1654 lt!70018))))

(declare-fun lt!70015 () Unit!4141)

(declare-fun lt!70016 () Unit!4141)

(assert (=> d!40877 (= lt!70015 lt!70016)))

(assert (=> d!40877 (= (getValueByKey!173 lt!70018 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40877 (= lt!70016 (lemmaContainsTupThenGetReturnValue!88 lt!70018 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40877 (= lt!70018 (insertStrictlySorted!91 (toList!842 (map!1398 newMap!16)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!40877 (= (+!169 (map!1398 newMap!16) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70017)))

(declare-fun b!133815 () Bool)

(declare-fun res!64394 () Bool)

(assert (=> b!133815 (=> (not res!64394) (not e!87175))))

(assert (=> b!133815 (= res!64394 (= (getValueByKey!173 (toList!842 lt!70017) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!133816 () Bool)

(assert (=> b!133816 (= e!87175 (contains!886 (toList!842 lt!70017) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!40877 res!64395) b!133815))

(assert (= (and b!133815 res!64394) b!133816))

(declare-fun m!158285 () Bool)

(assert (=> d!40877 m!158285))

(declare-fun m!158287 () Bool)

(assert (=> d!40877 m!158287))

(declare-fun m!158289 () Bool)

(assert (=> d!40877 m!158289))

(declare-fun m!158291 () Bool)

(assert (=> d!40877 m!158291))

(declare-fun m!158293 () Bool)

(assert (=> b!133815 m!158293))

(declare-fun m!158295 () Bool)

(assert (=> b!133816 m!158295))

(assert (=> b!132981 d!40877))

(assert (=> b!132981 d!40443))

(declare-fun d!40879 () Bool)

(declare-fun lt!70019 () Bool)

(assert (=> d!40879 (= lt!70019 (select (content!134 (toList!842 lt!69649)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun e!87177 () Bool)

(assert (=> d!40879 (= lt!70019 e!87177)))

(declare-fun res!64397 () Bool)

(assert (=> d!40879 (=> (not res!64397) (not e!87177))))

(assert (=> d!40879 (= res!64397 ((_ is Cons!1690) (toList!842 lt!69649)))))

(assert (=> d!40879 (= (contains!886 (toList!842 lt!69649) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!70019)))

(declare-fun b!133817 () Bool)

(declare-fun e!87176 () Bool)

(assert (=> b!133817 (= e!87177 e!87176)))

(declare-fun res!64396 () Bool)

(assert (=> b!133817 (=> res!64396 e!87176)))

(assert (=> b!133817 (= res!64396 (= (h!2295 (toList!842 lt!69649)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!133818 () Bool)

(assert (=> b!133818 (= e!87176 (contains!886 (t!6137 (toList!842 lt!69649)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!40879 res!64397) b!133817))

(assert (= (and b!133817 (not res!64396)) b!133818))

(declare-fun m!158297 () Bool)

(assert (=> d!40879 m!158297))

(declare-fun m!158299 () Bool)

(assert (=> d!40879 m!158299))

(declare-fun m!158301 () Bool)

(assert (=> b!133818 m!158301))

(assert (=> b!133210 d!40879))

(assert (=> b!133094 d!40657))

(assert (=> b!133094 d!40479))

(declare-fun call!14762 () ListLongMap!1653)

(declare-fun c!24835 () Bool)

(declare-fun c!24837 () Bool)

(declare-fun call!14765 () ListLongMap!1653)

(declare-fun bm!14758 () Bool)

(declare-fun call!14763 () ListLongMap!1653)

(declare-fun call!14764 () ListLongMap!1653)

(assert (=> bm!14758 (= call!14764 (+!169 (ite c!24835 call!14762 (ite c!24837 call!14763 call!14765)) (ite (or c!24835 c!24837) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!133819 () Bool)

(declare-fun e!87187 () Bool)

(declare-fun e!87181 () Bool)

(assert (=> b!133819 (= e!87187 e!87181)))

(declare-fun res!64403 () Bool)

(declare-fun call!14761 () Bool)

(assert (=> b!133819 (= res!64403 call!14761)))

(assert (=> b!133819 (=> (not res!64403) (not e!87181))))

(declare-fun b!133820 () Bool)

(declare-fun e!87185 () Unit!4141)

(declare-fun lt!70037 () Unit!4141)

(assert (=> b!133820 (= e!87185 lt!70037)))

(declare-fun lt!70023 () ListLongMap!1653)

(assert (=> b!133820 (= lt!70023 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!70038 () (_ BitVec 64))

(assert (=> b!133820 (= lt!70038 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70022 () (_ BitVec 64))

(assert (=> b!133820 (= lt!70022 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!70036 () Unit!4141)

(assert (=> b!133820 (= lt!70036 (addStillContains!92 lt!70023 lt!70038 (zeroValue!2719 newMap!16) lt!70022))))

(assert (=> b!133820 (contains!884 (+!169 lt!70023 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16))) lt!70022)))

(declare-fun lt!70034 () Unit!4141)

(assert (=> b!133820 (= lt!70034 lt!70036)))

(declare-fun lt!70029 () ListLongMap!1653)

(assert (=> b!133820 (= lt!70029 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!70021 () (_ BitVec 64))

(assert (=> b!133820 (= lt!70021 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70031 () (_ BitVec 64))

(assert (=> b!133820 (= lt!70031 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!70035 () Unit!4141)

(assert (=> b!133820 (= lt!70035 (addApplyDifferent!92 lt!70029 lt!70021 (minValue!2719 newMap!16) lt!70031))))

(assert (=> b!133820 (= (apply!116 (+!169 lt!70029 (tuple2!2565 lt!70021 (minValue!2719 newMap!16))) lt!70031) (apply!116 lt!70029 lt!70031))))

(declare-fun lt!70028 () Unit!4141)

(assert (=> b!133820 (= lt!70028 lt!70035)))

(declare-fun lt!70041 () ListLongMap!1653)

(assert (=> b!133820 (= lt!70041 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!70030 () (_ BitVec 64))

(assert (=> b!133820 (= lt!70030 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70026 () (_ BitVec 64))

(assert (=> b!133820 (= lt!70026 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!70039 () Unit!4141)

(assert (=> b!133820 (= lt!70039 (addApplyDifferent!92 lt!70041 lt!70030 (zeroValue!2719 newMap!16) lt!70026))))

(assert (=> b!133820 (= (apply!116 (+!169 lt!70041 (tuple2!2565 lt!70030 (zeroValue!2719 newMap!16))) lt!70026) (apply!116 lt!70041 lt!70026))))

(declare-fun lt!70040 () Unit!4141)

(assert (=> b!133820 (= lt!70040 lt!70039)))

(declare-fun lt!70027 () ListLongMap!1653)

(assert (=> b!133820 (= lt!70027 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun lt!70025 () (_ BitVec 64))

(assert (=> b!133820 (= lt!70025 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70033 () (_ BitVec 64))

(assert (=> b!133820 (= lt!70033 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!133820 (= lt!70037 (addApplyDifferent!92 lt!70027 lt!70025 (minValue!2719 newMap!16) lt!70033))))

(assert (=> b!133820 (= (apply!116 (+!169 lt!70027 (tuple2!2565 lt!70025 (minValue!2719 newMap!16))) lt!70033) (apply!116 lt!70027 lt!70033))))

(declare-fun b!133821 () Bool)

(declare-fun lt!70032 () ListLongMap!1653)

(assert (=> b!133821 (= e!87181 (= (apply!116 lt!70032 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 newMap!16)))))

(declare-fun b!133822 () Bool)

(declare-fun e!87179 () Bool)

(assert (=> b!133822 (= e!87179 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!14759 () Bool)

(assert (=> bm!14759 (= call!14763 call!14762)))

(declare-fun bm!14760 () Bool)

(assert (=> bm!14760 (= call!14761 (contains!884 lt!70032 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133823 () Bool)

(declare-fun e!87180 () Bool)

(assert (=> b!133823 (= e!87180 e!87187)))

(declare-fun c!24836 () Bool)

(assert (=> b!133823 (= c!24836 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133824 () Bool)

(declare-fun e!87189 () Bool)

(assert (=> b!133824 (= e!87189 (= (apply!116 lt!70032 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 newMap!16)))))

(declare-fun b!133826 () Bool)

(declare-fun e!87178 () ListLongMap!1653)

(assert (=> b!133826 (= e!87178 call!14765)))

(declare-fun bm!14761 () Bool)

(declare-fun call!14767 () ListLongMap!1653)

(assert (=> bm!14761 (= call!14767 call!14764)))

(declare-fun bm!14762 () Bool)

(declare-fun call!14766 () Bool)

(assert (=> bm!14762 (= call!14766 (contains!884 lt!70032 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133827 () Bool)

(declare-fun c!24833 () Bool)

(assert (=> b!133827 (= c!24833 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!87184 () ListLongMap!1653)

(assert (=> b!133827 (= e!87184 e!87178)))

(declare-fun bm!14763 () Bool)

(assert (=> bm!14763 (= call!14765 call!14763)))

(declare-fun e!87190 () Bool)

(declare-fun b!133828 () Bool)

(assert (=> b!133828 (= e!87190 (= (apply!116 lt!70032 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133828 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))))))

(assert (=> b!133828 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133829 () Bool)

(declare-fun e!87183 () ListLongMap!1653)

(assert (=> b!133829 (= e!87183 e!87184)))

(assert (=> b!133829 (= c!24837 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!133830 () Bool)

(declare-fun e!87186 () Bool)

(assert (=> b!133830 (= e!87186 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133831 () Bool)

(assert (=> b!133831 (= e!87183 (+!169 call!14764 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun b!133832 () Bool)

(declare-fun e!87182 () Bool)

(assert (=> b!133832 (= e!87182 e!87190)))

(declare-fun res!64404 () Bool)

(assert (=> b!133832 (=> (not res!64404) (not e!87190))))

(assert (=> b!133832 (= res!64404 (contains!884 lt!70032 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133832 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun bm!14764 () Bool)

(assert (=> bm!14764 (= call!14762 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(declare-fun b!133833 () Bool)

(assert (=> b!133833 (= e!87187 (not call!14761))))

(declare-fun b!133834 () Bool)

(assert (=> b!133834 (= e!87178 call!14767)))

(declare-fun b!133835 () Bool)

(declare-fun Unit!4182 () Unit!4141)

(assert (=> b!133835 (= e!87185 Unit!4182)))

(declare-fun b!133836 () Bool)

(declare-fun e!87188 () Bool)

(assert (=> b!133836 (= e!87188 e!87189)))

(declare-fun res!64406 () Bool)

(assert (=> b!133836 (= res!64406 call!14766)))

(assert (=> b!133836 (=> (not res!64406) (not e!87189))))

(declare-fun b!133837 () Bool)

(declare-fun res!64400 () Bool)

(assert (=> b!133837 (=> (not res!64400) (not e!87180))))

(assert (=> b!133837 (= res!64400 e!87182)))

(declare-fun res!64405 () Bool)

(assert (=> b!133837 (=> res!64405 e!87182)))

(assert (=> b!133837 (= res!64405 (not e!87186))))

(declare-fun res!64398 () Bool)

(assert (=> b!133837 (=> (not res!64398) (not e!87186))))

(assert (=> b!133837 (= res!64398 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133838 () Bool)

(declare-fun res!64401 () Bool)

(assert (=> b!133838 (=> (not res!64401) (not e!87180))))

(assert (=> b!133838 (= res!64401 e!87188)))

(declare-fun c!24834 () Bool)

(assert (=> b!133838 (= c!24834 (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!133839 () Bool)

(assert (=> b!133839 (= e!87184 call!14767)))

(declare-fun b!133825 () Bool)

(assert (=> b!133825 (= e!87188 (not call!14766))))

(declare-fun d!40881 () Bool)

(assert (=> d!40881 e!87180))

(declare-fun res!64402 () Bool)

(assert (=> d!40881 (=> (not res!64402) (not e!87180))))

(assert (=> d!40881 (= res!64402 (or (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))))

(declare-fun lt!70020 () ListLongMap!1653)

(assert (=> d!40881 (= lt!70032 lt!70020)))

(declare-fun lt!70024 () Unit!4141)

(assert (=> d!40881 (= lt!70024 e!87185)))

(declare-fun c!24832 () Bool)

(assert (=> d!40881 (= c!24832 e!87179)))

(declare-fun res!64399 () Bool)

(assert (=> d!40881 (=> (not res!64399) (not e!87179))))

(assert (=> d!40881 (= res!64399 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40881 (= lt!70020 e!87183)))

(assert (=> d!40881 (= c!24835 (and (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!40881 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40881 (= (getCurrentListMap!518 (_keys!4613 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!70032)))

(assert (= (and d!40881 c!24835) b!133831))

(assert (= (and d!40881 (not c!24835)) b!133829))

(assert (= (and b!133829 c!24837) b!133839))

(assert (= (and b!133829 (not c!24837)) b!133827))

(assert (= (and b!133827 c!24833) b!133834))

(assert (= (and b!133827 (not c!24833)) b!133826))

(assert (= (or b!133834 b!133826) bm!14763))

(assert (= (or b!133839 bm!14763) bm!14759))

(assert (= (or b!133839 b!133834) bm!14761))

(assert (= (or b!133831 bm!14759) bm!14764))

(assert (= (or b!133831 bm!14761) bm!14758))

(assert (= (and d!40881 res!64399) b!133822))

(assert (= (and d!40881 c!24832) b!133820))

(assert (= (and d!40881 (not c!24832)) b!133835))

(assert (= (and d!40881 res!64402) b!133837))

(assert (= (and b!133837 res!64398) b!133830))

(assert (= (and b!133837 (not res!64405)) b!133832))

(assert (= (and b!133832 res!64404) b!133828))

(assert (= (and b!133837 res!64400) b!133838))

(assert (= (and b!133838 c!24834) b!133836))

(assert (= (and b!133838 (not c!24834)) b!133825))

(assert (= (and b!133836 res!64406) b!133824))

(assert (= (or b!133836 b!133825) bm!14762))

(assert (= (and b!133838 res!64401) b!133823))

(assert (= (and b!133823 c!24836) b!133819))

(assert (= (and b!133823 (not c!24836)) b!133833))

(assert (= (and b!133819 res!64403) b!133821))

(assert (= (or b!133819 b!133833) bm!14760))

(declare-fun b_lambda!5973 () Bool)

(assert (=> (not b_lambda!5973) (not b!133828)))

(assert (=> b!133828 t!6147))

(declare-fun b_and!8313 () Bool)

(assert (= b_and!8309 (and (=> t!6147 result!3993) b_and!8313)))

(assert (=> b!133828 t!6149))

(declare-fun b_and!8315 () Bool)

(assert (= b_and!8311 (and (=> t!6149 result!3995) b_and!8315)))

(assert (=> d!40881 m!156651))

(assert (=> b!133830 m!156679))

(assert (=> b!133830 m!156679))

(assert (=> b!133830 m!156689))

(declare-fun m!158303 () Bool)

(assert (=> b!133820 m!158303))

(declare-fun m!158305 () Bool)

(assert (=> b!133820 m!158305))

(declare-fun m!158307 () Bool)

(assert (=> b!133820 m!158307))

(declare-fun m!158309 () Bool)

(assert (=> b!133820 m!158309))

(declare-fun m!158311 () Bool)

(assert (=> b!133820 m!158311))

(assert (=> b!133820 m!156679))

(declare-fun m!158313 () Bool)

(assert (=> b!133820 m!158313))

(declare-fun m!158315 () Bool)

(assert (=> b!133820 m!158315))

(declare-fun m!158317 () Bool)

(assert (=> b!133820 m!158317))

(declare-fun m!158319 () Bool)

(assert (=> b!133820 m!158319))

(declare-fun m!158321 () Bool)

(assert (=> b!133820 m!158321))

(declare-fun m!158323 () Bool)

(assert (=> b!133820 m!158323))

(assert (=> b!133820 m!158317))

(assert (=> b!133820 m!158311))

(declare-fun m!158325 () Bool)

(assert (=> b!133820 m!158325))

(declare-fun m!158327 () Bool)

(assert (=> b!133820 m!158327))

(declare-fun m!158329 () Bool)

(assert (=> b!133820 m!158329))

(assert (=> b!133820 m!158329))

(declare-fun m!158331 () Bool)

(assert (=> b!133820 m!158331))

(assert (=> b!133820 m!158309))

(declare-fun m!158333 () Bool)

(assert (=> b!133820 m!158333))

(declare-fun m!158335 () Bool)

(assert (=> b!133828 m!158335))

(assert (=> b!133828 m!156809))

(declare-fun m!158337 () Bool)

(assert (=> b!133828 m!158337))

(assert (=> b!133828 m!156809))

(assert (=> b!133828 m!158335))

(assert (=> b!133828 m!156679))

(assert (=> b!133828 m!156679))

(declare-fun m!158339 () Bool)

(assert (=> b!133828 m!158339))

(declare-fun m!158341 () Bool)

(assert (=> bm!14760 m!158341))

(declare-fun m!158343 () Bool)

(assert (=> bm!14758 m!158343))

(assert (=> b!133822 m!156679))

(assert (=> b!133822 m!156679))

(assert (=> b!133822 m!156689))

(declare-fun m!158345 () Bool)

(assert (=> b!133824 m!158345))

(assert (=> b!133832 m!156679))

(assert (=> b!133832 m!156679))

(declare-fun m!158347 () Bool)

(assert (=> b!133832 m!158347))

(assert (=> bm!14764 m!158323))

(declare-fun m!158349 () Bool)

(assert (=> bm!14762 m!158349))

(declare-fun m!158351 () Bool)

(assert (=> b!133831 m!158351))

(declare-fun m!158353 () Bool)

(assert (=> b!133821 m!158353))

(assert (=> b!133094 d!40881))

(declare-fun d!40883 () Bool)

(assert (=> d!40883 (= (apply!116 lt!69529 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1492 (getValueByKey!173 (toList!842 lt!69529) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5549 () Bool)

(assert (= bs!5549 d!40883))

(assert (=> bs!5549 m!156679))

(declare-fun m!158355 () Bool)

(assert (=> bs!5549 m!158355))

(assert (=> bs!5549 m!158355))

(declare-fun m!158357 () Bool)

(assert (=> bs!5549 m!158357))

(assert (=> b!133058 d!40883))

(declare-fun d!40885 () Bool)

(declare-fun c!24838 () Bool)

(assert (=> d!40885 (= c!24838 ((_ is ValueCellFull!1094) (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!87191 () V!3481)

(assert (=> d!40885 (= (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87191)))

(declare-fun b!133840 () Bool)

(assert (=> b!133840 (= e!87191 (get!1490 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133841 () Bool)

(assert (=> b!133841 (= e!87191 (get!1491 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40885 c!24838) b!133840))

(assert (= (and d!40885 (not c!24838)) b!133841))

(assert (=> b!133840 m!156881))

(assert (=> b!133840 m!156809))

(declare-fun m!158359 () Bool)

(assert (=> b!133840 m!158359))

(assert (=> b!133841 m!156881))

(assert (=> b!133841 m!156809))

(declare-fun m!158361 () Bool)

(assert (=> b!133841 m!158361))

(assert (=> b!133058 d!40885))

(declare-fun b!133842 () Bool)

(declare-fun e!87194 () Bool)

(declare-fun call!14768 () Bool)

(assert (=> b!133842 (= e!87194 call!14768)))

(declare-fun b!133843 () Bool)

(declare-fun e!87192 () Bool)

(assert (=> b!133843 (= e!87194 e!87192)))

(declare-fun lt!70043 () (_ BitVec 64))

(assert (=> b!133843 (= lt!70043 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000))))

(declare-fun lt!70042 () Unit!4141)

(assert (=> b!133843 (= lt!70042 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 (_2!1294 lt!69280)) lt!70043 #b00000000000000000000000000000000))))

(assert (=> b!133843 (arrayContainsKey!0 (_keys!4613 (_2!1294 lt!69280)) lt!70043 #b00000000000000000000000000000000)))

(declare-fun lt!70044 () Unit!4141)

(assert (=> b!133843 (= lt!70044 lt!70042)))

(declare-fun res!64407 () Bool)

(assert (=> b!133843 (= res!64407 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000) (_keys!4613 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280))) (Found!269 #b00000000000000000000000000000000)))))

(assert (=> b!133843 (=> (not res!64407) (not e!87192))))

(declare-fun b!133844 () Bool)

(declare-fun e!87193 () Bool)

(assert (=> b!133844 (= e!87193 e!87194)))

(declare-fun c!24839 () Bool)

(assert (=> b!133844 (= c!24839 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(declare-fun b!133845 () Bool)

(assert (=> b!133845 (= e!87192 call!14768)))

(declare-fun d!40887 () Bool)

(declare-fun res!64408 () Bool)

(assert (=> d!40887 (=> res!64408 e!87193)))

(assert (=> d!40887 (= res!64408 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(assert (=> d!40887 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4613 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280))) e!87193)))

(declare-fun bm!14765 () Bool)

(assert (=> bm!14765 (= call!14768 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4613 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280))))))

(assert (= (and d!40887 (not res!64408)) b!133844))

(assert (= (and b!133844 c!24839) b!133843))

(assert (= (and b!133844 (not c!24839)) b!133842))

(assert (= (and b!133843 res!64407) b!133845))

(assert (= (or b!133845 b!133842) bm!14765))

(assert (=> b!133843 m!157455))

(declare-fun m!158363 () Bool)

(assert (=> b!133843 m!158363))

(declare-fun m!158365 () Bool)

(assert (=> b!133843 m!158365))

(assert (=> b!133843 m!157455))

(declare-fun m!158367 () Bool)

(assert (=> b!133843 m!158367))

(assert (=> b!133844 m!157455))

(assert (=> b!133844 m!157455))

(assert (=> b!133844 m!157457))

(declare-fun m!158369 () Bool)

(assert (=> bm!14765 m!158369))

(assert (=> b!133047 d!40887))

(assert (=> d!40469 d!40591))

(declare-fun d!40889 () Bool)

(declare-fun e!87195 () Bool)

(assert (=> d!40889 e!87195))

(declare-fun res!64410 () Bool)

(assert (=> d!40889 (=> (not res!64410) (not e!87195))))

(declare-fun lt!70047 () ListLongMap!1653)

(assert (=> d!40889 (= res!64410 (contains!884 lt!70047 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70048 () List!1694)

(assert (=> d!40889 (= lt!70047 (ListLongMap!1654 lt!70048))))

(declare-fun lt!70045 () Unit!4141)

(declare-fun lt!70046 () Unit!4141)

(assert (=> d!40889 (= lt!70045 lt!70046)))

(assert (=> d!40889 (= (getValueByKey!173 lt!70048 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!40889 (= lt!70046 (lemmaContainsTupThenGetReturnValue!88 lt!70048 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!40889 (= lt!70048 (insertStrictlySorted!91 (toList!842 call!14651) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!40889 (= (+!169 call!14651 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70047)))

(declare-fun b!133846 () Bool)

(declare-fun res!64409 () Bool)

(assert (=> b!133846 (=> (not res!64409) (not e!87195))))

(assert (=> b!133846 (= res!64409 (= (getValueByKey!173 (toList!842 lt!70047) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!133847 () Bool)

(assert (=> b!133847 (= e!87195 (contains!886 (toList!842 lt!70047) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!40889 res!64410) b!133846))

(assert (= (and b!133846 res!64409) b!133847))

(declare-fun m!158371 () Bool)

(assert (=> d!40889 m!158371))

(declare-fun m!158373 () Bool)

(assert (=> d!40889 m!158373))

(declare-fun m!158375 () Bool)

(assert (=> d!40889 m!158375))

(declare-fun m!158377 () Bool)

(assert (=> d!40889 m!158377))

(declare-fun m!158379 () Bool)

(assert (=> b!133846 m!158379))

(declare-fun m!158381 () Bool)

(assert (=> b!133847 m!158381))

(assert (=> b!133031 d!40889))

(declare-fun e!87198 () Bool)

(declare-fun b!133848 () Bool)

(assert (=> b!133848 (= e!87198 (contains!885 (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!133849 () Bool)

(declare-fun e!87196 () Bool)

(declare-fun call!14769 () Bool)

(assert (=> b!133849 (= e!87196 call!14769)))

(declare-fun b!133850 () Bool)

(declare-fun e!87199 () Bool)

(declare-fun e!87197 () Bool)

(assert (=> b!133850 (= e!87199 e!87197)))

(declare-fun res!64412 () Bool)

(assert (=> b!133850 (=> (not res!64412) (not e!87197))))

(assert (=> b!133850 (= res!64412 (not e!87198))))

(declare-fun res!64413 () Bool)

(assert (=> b!133850 (=> (not res!64413) (not e!87198))))

(assert (=> b!133850 (= res!64413 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun c!24840 () Bool)

(declare-fun bm!14766 () Bool)

(assert (=> bm!14766 (= call!14769 (arrayNoDuplicates!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24840 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))) (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)))))))

(declare-fun d!40891 () Bool)

(declare-fun res!64411 () Bool)

(assert (=> d!40891 (=> res!64411 e!87199)))

(assert (=> d!40891 (= res!64411 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!40891 (= (arrayNoDuplicates!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))) e!87199)))

(declare-fun b!133851 () Bool)

(assert (=> b!133851 (= e!87197 e!87196)))

(assert (=> b!133851 (= c!24840 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!133852 () Bool)

(assert (=> b!133852 (= e!87196 call!14769)))

(assert (= (and d!40891 (not res!64411)) b!133850))

(assert (= (and b!133850 res!64413) b!133848))

(assert (= (and b!133850 res!64412) b!133851))

(assert (= (and b!133851 c!24840) b!133849))

(assert (= (and b!133851 (not c!24840)) b!133852))

(assert (= (or b!133849 b!133852) bm!14766))

(assert (=> b!133848 m!157231))

(assert (=> b!133848 m!157231))

(declare-fun m!158383 () Bool)

(assert (=> b!133848 m!158383))

(assert (=> b!133850 m!157231))

(assert (=> b!133850 m!157231))

(assert (=> b!133850 m!157239))

(assert (=> bm!14766 m!157231))

(declare-fun m!158385 () Bool)

(assert (=> bm!14766 m!158385))

(assert (=> b!133851 m!157231))

(assert (=> b!133851 m!157231))

(assert (=> b!133851 m!157239))

(assert (=> bm!14666 d!40891))

(declare-fun d!40893 () Bool)

(assert (=> d!40893 (= (+!169 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!518 (_keys!4613 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(assert (=> d!40893 true))

(declare-fun _$5!134 () Unit!4141)

(assert (=> d!40893 (= (choose!826 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3237 lt!69284) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)) _$5!134)))

(declare-fun bs!5550 () Bool)

(assert (= bs!5550 d!40893))

(assert (=> bs!5550 m!156545))

(assert (=> bs!5550 m!156545))

(assert (=> bs!5550 m!156735))

(assert (=> bs!5550 m!156529))

(assert (=> bs!5550 m!156953))

(assert (=> d!40499 d!40893))

(assert (=> d!40499 d!40591))

(declare-fun d!40895 () Bool)

(declare-fun e!87201 () Bool)

(assert (=> d!40895 e!87201))

(declare-fun res!64414 () Bool)

(assert (=> d!40895 (=> res!64414 e!87201)))

(declare-fun lt!70049 () Bool)

(assert (=> d!40895 (= res!64414 (not lt!70049))))

(declare-fun lt!70050 () Bool)

(assert (=> d!40895 (= lt!70049 lt!70050)))

(declare-fun lt!70051 () Unit!4141)

(declare-fun e!87200 () Unit!4141)

(assert (=> d!40895 (= lt!70051 e!87200)))

(declare-fun c!24841 () Bool)

(assert (=> d!40895 (= c!24841 lt!70050)))

(assert (=> d!40895 (= lt!70050 (containsKey!176 (toList!842 (map!1398 (_2!1294 lt!69445))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!40895 (= (contains!884 (map!1398 (_2!1294 lt!69445)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) lt!70049)))

(declare-fun b!133853 () Bool)

(declare-fun lt!70052 () Unit!4141)

(assert (=> b!133853 (= e!87200 lt!70052)))

(assert (=> b!133853 (= lt!70052 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (map!1398 (_2!1294 lt!69445))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!133853 (isDefined!125 (getValueByKey!173 (toList!842 (map!1398 (_2!1294 lt!69445))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!133854 () Bool)

(declare-fun Unit!4183 () Unit!4141)

(assert (=> b!133854 (= e!87200 Unit!4183)))

(declare-fun b!133855 () Bool)

(assert (=> b!133855 (= e!87201 (isDefined!125 (getValueByKey!173 (toList!842 (map!1398 (_2!1294 lt!69445))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (= (and d!40895 c!24841) b!133853))

(assert (= (and d!40895 (not c!24841)) b!133854))

(assert (= (and d!40895 (not res!64414)) b!133855))

(assert (=> d!40895 m!156395))

(declare-fun m!158387 () Bool)

(assert (=> d!40895 m!158387))

(assert (=> b!133853 m!156395))

(declare-fun m!158389 () Bool)

(assert (=> b!133853 m!158389))

(assert (=> b!133853 m!156395))

(declare-fun m!158391 () Bool)

(assert (=> b!133853 m!158391))

(assert (=> b!133853 m!158391))

(declare-fun m!158393 () Bool)

(assert (=> b!133853 m!158393))

(assert (=> b!133855 m!156395))

(assert (=> b!133855 m!158391))

(assert (=> b!133855 m!158391))

(assert (=> b!133855 m!158393))

(assert (=> b!132977 d!40895))

(assert (=> b!132977 d!40875))

(declare-fun b!133868 () Bool)

(declare-fun e!87209 () SeekEntryResult!269)

(assert (=> b!133868 (= e!87209 (Found!269 (index!3238 lt!69592)))))

(declare-fun b!133869 () Bool)

(declare-fun e!87208 () SeekEntryResult!269)

(assert (=> b!133869 (= e!87208 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15586 lt!69592) #b00000000000000000000000000000001) (nextIndex!0 (index!3238 lt!69592) (bvadd (x!15586 lt!69592) #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!69592) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!133870 () Bool)

(declare-fun e!87210 () SeekEntryResult!269)

(assert (=> b!133870 (= e!87210 e!87209)))

(declare-fun c!24848 () Bool)

(declare-fun lt!70057 () (_ BitVec 64))

(assert (=> b!133870 (= c!24848 (= lt!70057 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!133871 () Bool)

(assert (=> b!133871 (= e!87208 (MissingVacant!269 (index!3238 lt!69592)))))

(declare-fun b!133872 () Bool)

(assert (=> b!133872 (= e!87210 Undefined!269)))

(declare-fun d!40897 () Bool)

(declare-fun lt!70058 () SeekEntryResult!269)

(assert (=> d!40897 (and (or ((_ is Undefined!269) lt!70058) (not ((_ is Found!269) lt!70058)) (and (bvsge (index!3237 lt!70058) #b00000000000000000000000000000000) (bvslt (index!3237 lt!70058) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))) (or ((_ is Undefined!269) lt!70058) ((_ is Found!269) lt!70058) (not ((_ is MissingVacant!269) lt!70058)) (not (= (index!3239 lt!70058) (index!3238 lt!69592))) (and (bvsge (index!3239 lt!70058) #b00000000000000000000000000000000) (bvslt (index!3239 lt!70058) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))) (or ((_ is Undefined!269) lt!70058) (ite ((_ is Found!269) lt!70058) (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3237 lt!70058)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!269) lt!70058) (= (index!3239 lt!70058) (index!3238 lt!69592)) (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3239 lt!70058)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!40897 (= lt!70058 e!87210)))

(declare-fun c!24849 () Bool)

(assert (=> d!40897 (= c!24849 (bvsge (x!15586 lt!69592) #b01111111111111111111111111111110))))

(assert (=> d!40897 (= lt!70057 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!69592)))))

(assert (=> d!40897 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!40897 (= (seekKeyOrZeroReturnVacant!0 (x!15586 lt!69592) (index!3238 lt!69592) (index!3238 lt!69592) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) lt!70058)))

(declare-fun b!133873 () Bool)

(declare-fun c!24850 () Bool)

(assert (=> b!133873 (= c!24850 (= lt!70057 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133873 (= e!87209 e!87208)))

(assert (= (and d!40897 c!24849) b!133872))

(assert (= (and d!40897 (not c!24849)) b!133870))

(assert (= (and b!133870 c!24848) b!133868))

(assert (= (and b!133870 (not c!24848)) b!133873))

(assert (= (and b!133873 c!24850) b!133871))

(assert (= (and b!133873 (not c!24850)) b!133869))

(declare-fun m!158395 () Bool)

(assert (=> b!133869 m!158395))

(assert (=> b!133869 m!158395))

(assert (=> b!133869 m!156495))

(declare-fun m!158397 () Bool)

(assert (=> b!133869 m!158397))

(declare-fun m!158399 () Bool)

(assert (=> d!40897 m!158399))

(declare-fun m!158401 () Bool)

(assert (=> d!40897 m!158401))

(assert (=> d!40897 m!157039))

(assert (=> d!40897 m!156405))

(assert (=> b!133127 d!40897))

(assert (=> b!133097 d!40603))

(assert (=> b!133097 d!40605))

(declare-fun d!40899 () Bool)

(assert (=> d!40899 (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69598 #b00000000000000000000000000000000)))

(declare-fun lt!70059 () Unit!4141)

(assert (=> d!40899 (= lt!70059 (choose!13 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69598 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> d!40899 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!40899 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69598 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!70059)))

(declare-fun bs!5551 () Bool)

(assert (= bs!5551 d!40899))

(assert (=> bs!5551 m!157049))

(declare-fun m!158403 () Bool)

(assert (=> bs!5551 m!158403))

(assert (=> b!133136 d!40899))

(declare-fun d!40901 () Bool)

(declare-fun res!64415 () Bool)

(declare-fun e!87211 () Bool)

(assert (=> d!40901 (=> res!64415 e!87211)))

(assert (=> d!40901 (= res!64415 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) lt!69598))))

(assert (=> d!40901 (= (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69598 #b00000000000000000000000000000000) e!87211)))

(declare-fun b!133874 () Bool)

(declare-fun e!87212 () Bool)

(assert (=> b!133874 (= e!87211 e!87212)))

(declare-fun res!64416 () Bool)

(assert (=> b!133874 (=> (not res!64416) (not e!87212))))

(assert (=> b!133874 (= res!64416 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!133875 () Bool)

(assert (=> b!133875 (= e!87212 (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69598 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40901 (not res!64415)) b!133874))

(assert (= (and b!133874 res!64416) b!133875))

(assert (=> d!40901 m!156495))

(declare-fun m!158405 () Bool)

(assert (=> b!133875 m!158405))

(assert (=> b!133136 d!40901))

(declare-fun b!133876 () Bool)

(declare-fun c!24851 () Bool)

(declare-fun lt!70061 () (_ BitVec 64))

(assert (=> b!133876 (= c!24851 (= lt!70061 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87214 () SeekEntryResult!269)

(declare-fun e!87215 () SeekEntryResult!269)

(assert (=> b!133876 (= e!87214 e!87215)))

(declare-fun d!40903 () Bool)

(declare-fun lt!70060 () SeekEntryResult!269)

(assert (=> d!40903 (and (or ((_ is Undefined!269) lt!70060) (not ((_ is Found!269) lt!70060)) (and (bvsge (index!3237 lt!70060) #b00000000000000000000000000000000) (bvslt (index!3237 lt!70060) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))) (or ((_ is Undefined!269) lt!70060) ((_ is Found!269) lt!70060) (not ((_ is MissingZero!269) lt!70060)) (and (bvsge (index!3236 lt!70060) #b00000000000000000000000000000000) (bvslt (index!3236 lt!70060) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))) (or ((_ is Undefined!269) lt!70060) ((_ is Found!269) lt!70060) ((_ is MissingZero!269) lt!70060) (not ((_ is MissingVacant!269) lt!70060)) (and (bvsge (index!3239 lt!70060) #b00000000000000000000000000000000) (bvslt (index!3239 lt!70060) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))) (or ((_ is Undefined!269) lt!70060) (ite ((_ is Found!269) lt!70060) (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3237 lt!70060)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!269) lt!70060) (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3236 lt!70060)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!269) lt!70060) (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3239 lt!70060)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87213 () SeekEntryResult!269)

(assert (=> d!40903 (= lt!70060 e!87213)))

(declare-fun c!24853 () Bool)

(declare-fun lt!70062 () SeekEntryResult!269)

(assert (=> d!40903 (= c!24853 (and ((_ is Intermediate!269) lt!70062) (undefined!1081 lt!70062)))))

(assert (=> d!40903 (= lt!70062 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(assert (=> d!40903 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!40903 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) lt!70060)))

(declare-fun b!133877 () Bool)

(assert (=> b!133877 (= e!87215 (seekKeyOrZeroReturnVacant!0 (x!15586 lt!70062) (index!3238 lt!70062) (index!3238 lt!70062) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!133878 () Bool)

(assert (=> b!133878 (= e!87215 (MissingZero!269 (index!3238 lt!70062)))))

(declare-fun b!133879 () Bool)

(assert (=> b!133879 (= e!87213 e!87214)))

(assert (=> b!133879 (= lt!70061 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!70062)))))

(declare-fun c!24852 () Bool)

(assert (=> b!133879 (= c!24852 (= lt!70061 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133880 () Bool)

(assert (=> b!133880 (= e!87214 (Found!269 (index!3238 lt!70062)))))

(declare-fun b!133881 () Bool)

(assert (=> b!133881 (= e!87213 Undefined!269)))

(assert (= (and d!40903 c!24853) b!133881))

(assert (= (and d!40903 (not c!24853)) b!133879))

(assert (= (and b!133879 c!24852) b!133880))

(assert (= (and b!133879 (not c!24852)) b!133876))

(assert (= (and b!133876 c!24851) b!133878))

(assert (= (and b!133876 (not c!24851)) b!133877))

(assert (=> d!40903 m!157015))

(declare-fun m!158407 () Bool)

(assert (=> d!40903 m!158407))

(assert (=> d!40903 m!156405))

(assert (=> d!40903 m!158407))

(assert (=> d!40903 m!157015))

(declare-fun m!158409 () Bool)

(assert (=> d!40903 m!158409))

(declare-fun m!158411 () Bool)

(assert (=> d!40903 m!158411))

(declare-fun m!158413 () Bool)

(assert (=> d!40903 m!158413))

(declare-fun m!158415 () Bool)

(assert (=> d!40903 m!158415))

(assert (=> b!133877 m!157015))

(declare-fun m!158417 () Bool)

(assert (=> b!133877 m!158417))

(declare-fun m!158419 () Bool)

(assert (=> b!133879 m!158419))

(assert (=> b!133136 d!40903))

(declare-fun d!40905 () Bool)

(declare-fun e!87217 () Bool)

(assert (=> d!40905 e!87217))

(declare-fun res!64417 () Bool)

(assert (=> d!40905 (=> res!64417 e!87217)))

(declare-fun lt!70063 () Bool)

(assert (=> d!40905 (= res!64417 (not lt!70063))))

(declare-fun lt!70064 () Bool)

(assert (=> d!40905 (= lt!70063 lt!70064)))

(declare-fun lt!70065 () Unit!4141)

(declare-fun e!87216 () Unit!4141)

(assert (=> d!40905 (= lt!70065 e!87216)))

(declare-fun c!24854 () Bool)

(assert (=> d!40905 (= c!24854 lt!70064)))

(assert (=> d!40905 (= lt!70064 (containsKey!176 (toList!842 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40905 (= (contains!884 lt!69486 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70063)))

(declare-fun b!133882 () Bool)

(declare-fun lt!70066 () Unit!4141)

(assert (=> b!133882 (= e!87216 lt!70066)))

(assert (=> b!133882 (= lt!70066 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133882 (isDefined!125 (getValueByKey!173 (toList!842 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133883 () Bool)

(declare-fun Unit!4184 () Unit!4141)

(assert (=> b!133883 (= e!87216 Unit!4184)))

(declare-fun b!133884 () Bool)

(assert (=> b!133884 (= e!87217 (isDefined!125 (getValueByKey!173 (toList!842 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40905 c!24854) b!133882))

(assert (= (and d!40905 (not c!24854)) b!133883))

(assert (= (and d!40905 (not res!64417)) b!133884))

(declare-fun m!158421 () Bool)

(assert (=> d!40905 m!158421))

(declare-fun m!158423 () Bool)

(assert (=> b!133882 m!158423))

(declare-fun m!158425 () Bool)

(assert (=> b!133882 m!158425))

(assert (=> b!133882 m!158425))

(declare-fun m!158427 () Bool)

(assert (=> b!133882 m!158427))

(assert (=> b!133884 m!158425))

(assert (=> b!133884 m!158425))

(assert (=> b!133884 m!158427))

(assert (=> d!40465 d!40905))

(assert (=> d!40465 d!40431))

(declare-fun d!40907 () Bool)

(assert (=> d!40907 (= (apply!116 (+!169 lt!69524 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))) lt!69530) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69524 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))) lt!69530)))))

(declare-fun bs!5552 () Bool)

(assert (= bs!5552 d!40907))

(declare-fun m!158429 () Bool)

(assert (=> bs!5552 m!158429))

(assert (=> bs!5552 m!158429))

(declare-fun m!158431 () Bool)

(assert (=> bs!5552 m!158431))

(assert (=> b!133050 d!40907))

(declare-fun d!40909 () Bool)

(assert (=> d!40909 (= (apply!116 (+!169 lt!69538 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))) lt!69523) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69538 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))) lt!69523)))))

(declare-fun bs!5553 () Bool)

(assert (= bs!5553 d!40909))

(declare-fun m!158433 () Bool)

(assert (=> bs!5553 m!158433))

(assert (=> bs!5553 m!158433))

(declare-fun m!158435 () Bool)

(assert (=> bs!5553 m!158435))

(assert (=> b!133050 d!40909))

(declare-fun d!40911 () Bool)

(assert (=> d!40911 (= (apply!116 (+!169 lt!69538 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))) lt!69523) (apply!116 lt!69538 lt!69523))))

(declare-fun lt!70067 () Unit!4141)

(assert (=> d!40911 (= lt!70067 (choose!828 lt!69538 lt!69527 (zeroValue!2719 newMap!16) lt!69523))))

(declare-fun e!87218 () Bool)

(assert (=> d!40911 e!87218))

(declare-fun res!64418 () Bool)

(assert (=> d!40911 (=> (not res!64418) (not e!87218))))

(assert (=> d!40911 (= res!64418 (contains!884 lt!69538 lt!69523))))

(assert (=> d!40911 (= (addApplyDifferent!92 lt!69538 lt!69527 (zeroValue!2719 newMap!16) lt!69523) lt!70067)))

(declare-fun b!133885 () Bool)

(assert (=> b!133885 (= e!87218 (not (= lt!69523 lt!69527)))))

(assert (= (and d!40911 res!64418) b!133885))

(assert (=> d!40911 m!156855))

(assert (=> d!40911 m!156879))

(assert (=> d!40911 m!156859))

(declare-fun m!158437 () Bool)

(assert (=> d!40911 m!158437))

(declare-fun m!158439 () Bool)

(assert (=> d!40911 m!158439))

(assert (=> d!40911 m!156855))

(assert (=> b!133050 d!40911))

(declare-fun d!40913 () Bool)

(assert (=> d!40913 (= (apply!116 (+!169 lt!69526 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))) lt!69528) (apply!116 lt!69526 lt!69528))))

(declare-fun lt!70068 () Unit!4141)

(assert (=> d!40913 (= lt!70068 (choose!828 lt!69526 lt!69518 (minValue!2719 newMap!16) lt!69528))))

(declare-fun e!87219 () Bool)

(assert (=> d!40913 e!87219))

(declare-fun res!64419 () Bool)

(assert (=> d!40913 (=> (not res!64419) (not e!87219))))

(assert (=> d!40913 (= res!64419 (contains!884 lt!69526 lt!69528))))

(assert (=> d!40913 (= (addApplyDifferent!92 lt!69526 lt!69518 (minValue!2719 newMap!16) lt!69528) lt!70068)))

(declare-fun b!133886 () Bool)

(assert (=> b!133886 (= e!87219 (not (= lt!69528 lt!69518)))))

(assert (= (and d!40913 res!64419) b!133886))

(assert (=> d!40913 m!156857))

(assert (=> d!40913 m!156871))

(assert (=> d!40913 m!156853))

(declare-fun m!158441 () Bool)

(assert (=> d!40913 m!158441))

(declare-fun m!158443 () Bool)

(assert (=> d!40913 m!158443))

(assert (=> d!40913 m!156857))

(assert (=> b!133050 d!40913))

(declare-fun d!40915 () Bool)

(declare-fun e!87220 () Bool)

(assert (=> d!40915 e!87220))

(declare-fun res!64421 () Bool)

(assert (=> d!40915 (=> (not res!64421) (not e!87220))))

(declare-fun lt!70071 () ListLongMap!1653)

(assert (=> d!40915 (= res!64421 (contains!884 lt!70071 (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70072 () List!1694)

(assert (=> d!40915 (= lt!70071 (ListLongMap!1654 lt!70072))))

(declare-fun lt!70069 () Unit!4141)

(declare-fun lt!70070 () Unit!4141)

(assert (=> d!40915 (= lt!70069 lt!70070)))

(assert (=> d!40915 (= (getValueByKey!173 lt!70072 (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40915 (= lt!70070 (lemmaContainsTupThenGetReturnValue!88 lt!70072 (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40915 (= lt!70072 (insertStrictlySorted!91 (toList!842 lt!69538) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40915 (= (+!169 lt!69538 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))) lt!70071)))

(declare-fun b!133887 () Bool)

(declare-fun res!64420 () Bool)

(assert (=> b!133887 (=> (not res!64420) (not e!87220))))

(assert (=> b!133887 (= res!64420 (= (getValueByKey!173 (toList!842 lt!70071) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))))))

(declare-fun b!133888 () Bool)

(assert (=> b!133888 (= e!87220 (contains!886 (toList!842 lt!70071) (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))))

(assert (= (and d!40915 res!64421) b!133887))

(assert (= (and b!133887 res!64420) b!133888))

(declare-fun m!158445 () Bool)

(assert (=> d!40915 m!158445))

(declare-fun m!158447 () Bool)

(assert (=> d!40915 m!158447))

(declare-fun m!158449 () Bool)

(assert (=> d!40915 m!158449))

(declare-fun m!158451 () Bool)

(assert (=> d!40915 m!158451))

(declare-fun m!158453 () Bool)

(assert (=> b!133887 m!158453))

(declare-fun m!158455 () Bool)

(assert (=> b!133888 m!158455))

(assert (=> b!133050 d!40915))

(declare-fun d!40917 () Bool)

(assert (=> d!40917 (contains!884 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))) lt!69519)))

(declare-fun lt!70073 () Unit!4141)

(assert (=> d!40917 (= lt!70073 (choose!829 lt!69520 lt!69535 (zeroValue!2719 newMap!16) lt!69519))))

(assert (=> d!40917 (contains!884 lt!69520 lt!69519)))

(assert (=> d!40917 (= (addStillContains!92 lt!69520 lt!69535 (zeroValue!2719 newMap!16) lt!69519) lt!70073)))

(declare-fun bs!5554 () Bool)

(assert (= bs!5554 d!40917))

(assert (=> bs!5554 m!156875))

(assert (=> bs!5554 m!156875))

(assert (=> bs!5554 m!156877))

(declare-fun m!158457 () Bool)

(assert (=> bs!5554 m!158457))

(declare-fun m!158459 () Bool)

(assert (=> bs!5554 m!158459))

(assert (=> b!133050 d!40917))

(declare-fun d!40919 () Bool)

(declare-fun e!87221 () Bool)

(assert (=> d!40919 e!87221))

(declare-fun res!64423 () Bool)

(assert (=> d!40919 (=> (not res!64423) (not e!87221))))

(declare-fun lt!70076 () ListLongMap!1653)

(assert (=> d!40919 (= res!64423 (contains!884 lt!70076 (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))

(declare-fun lt!70077 () List!1694)

(assert (=> d!40919 (= lt!70076 (ListLongMap!1654 lt!70077))))

(declare-fun lt!70074 () Unit!4141)

(declare-fun lt!70075 () Unit!4141)

(assert (=> d!40919 (= lt!70074 lt!70075)))

(assert (=> d!40919 (= (getValueByKey!173 lt!70077 (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))

(assert (=> d!40919 (= lt!70075 (lemmaContainsTupThenGetReturnValue!88 lt!70077 (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))

(assert (=> d!40919 (= lt!70077 (insertStrictlySorted!91 (toList!842 lt!69526) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))

(assert (=> d!40919 (= (+!169 lt!69526 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))) lt!70076)))

(declare-fun b!133889 () Bool)

(declare-fun res!64422 () Bool)

(assert (=> b!133889 (=> (not res!64422) (not e!87221))))

(assert (=> b!133889 (= res!64422 (= (getValueByKey!173 (toList!842 lt!70076) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))))))

(declare-fun b!133890 () Bool)

(assert (=> b!133890 (= e!87221 (contains!886 (toList!842 lt!70076) (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))))

(assert (= (and d!40919 res!64423) b!133889))

(assert (= (and b!133889 res!64422) b!133890))

(declare-fun m!158461 () Bool)

(assert (=> d!40919 m!158461))

(declare-fun m!158463 () Bool)

(assert (=> d!40919 m!158463))

(declare-fun m!158465 () Bool)

(assert (=> d!40919 m!158465))

(declare-fun m!158467 () Bool)

(assert (=> d!40919 m!158467))

(declare-fun m!158469 () Bool)

(assert (=> b!133889 m!158469))

(declare-fun m!158471 () Bool)

(assert (=> b!133890 m!158471))

(assert (=> b!133050 d!40919))

(declare-fun d!40921 () Bool)

(assert (=> d!40921 (= (apply!116 lt!69526 lt!69528) (get!1492 (getValueByKey!173 (toList!842 lt!69526) lt!69528)))))

(declare-fun bs!5555 () Bool)

(assert (= bs!5555 d!40921))

(declare-fun m!158473 () Bool)

(assert (=> bs!5555 m!158473))

(assert (=> bs!5555 m!158473))

(declare-fun m!158475 () Bool)

(assert (=> bs!5555 m!158475))

(assert (=> b!133050 d!40921))

(declare-fun d!40923 () Bool)

(declare-fun e!87222 () Bool)

(assert (=> d!40923 e!87222))

(declare-fun res!64425 () Bool)

(assert (=> d!40923 (=> (not res!64425) (not e!87222))))

(declare-fun lt!70080 () ListLongMap!1653)

(assert (=> d!40923 (= res!64425 (contains!884 lt!70080 (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70081 () List!1694)

(assert (=> d!40923 (= lt!70080 (ListLongMap!1654 lt!70081))))

(declare-fun lt!70078 () Unit!4141)

(declare-fun lt!70079 () Unit!4141)

(assert (=> d!40923 (= lt!70078 lt!70079)))

(assert (=> d!40923 (= (getValueByKey!173 lt!70081 (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40923 (= lt!70079 (lemmaContainsTupThenGetReturnValue!88 lt!70081 (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40923 (= lt!70081 (insertStrictlySorted!91 (toList!842 lt!69520) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))

(assert (=> d!40923 (= (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))) lt!70080)))

(declare-fun b!133891 () Bool)

(declare-fun res!64424 () Bool)

(assert (=> b!133891 (=> (not res!64424) (not e!87222))))

(assert (=> b!133891 (= res!64424 (= (getValueByKey!173 (toList!842 lt!70080) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))))))

(declare-fun b!133892 () Bool)

(assert (=> b!133892 (= e!87222 (contains!886 (toList!842 lt!70080) (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))))

(assert (= (and d!40923 res!64425) b!133891))

(assert (= (and b!133891 res!64424) b!133892))

(declare-fun m!158477 () Bool)

(assert (=> d!40923 m!158477))

(declare-fun m!158479 () Bool)

(assert (=> d!40923 m!158479))

(declare-fun m!158481 () Bool)

(assert (=> d!40923 m!158481))

(declare-fun m!158483 () Bool)

(assert (=> d!40923 m!158483))

(declare-fun m!158485 () Bool)

(assert (=> b!133891 m!158485))

(declare-fun m!158487 () Bool)

(assert (=> b!133892 m!158487))

(assert (=> b!133050 d!40923))

(declare-fun d!40925 () Bool)

(assert (=> d!40925 (= (apply!116 lt!69538 lt!69523) (get!1492 (getValueByKey!173 (toList!842 lt!69538) lt!69523)))))

(declare-fun bs!5556 () Bool)

(assert (= bs!5556 d!40925))

(declare-fun m!158489 () Bool)

(assert (=> bs!5556 m!158489))

(assert (=> bs!5556 m!158489))

(declare-fun m!158491 () Bool)

(assert (=> bs!5556 m!158491))

(assert (=> b!133050 d!40925))

(declare-fun d!40927 () Bool)

(assert (=> d!40927 (= (apply!116 lt!69524 lt!69530) (get!1492 (getValueByKey!173 (toList!842 lt!69524) lt!69530)))))

(declare-fun bs!5557 () Bool)

(assert (= bs!5557 d!40927))

(declare-fun m!158493 () Bool)

(assert (=> bs!5557 m!158493))

(assert (=> bs!5557 m!158493))

(declare-fun m!158495 () Bool)

(assert (=> bs!5557 m!158495))

(assert (=> b!133050 d!40927))

(declare-fun d!40929 () Bool)

(declare-fun e!87223 () Bool)

(assert (=> d!40929 e!87223))

(declare-fun res!64427 () Bool)

(assert (=> d!40929 (=> (not res!64427) (not e!87223))))

(declare-fun lt!70084 () ListLongMap!1653)

(assert (=> d!40929 (= res!64427 (contains!884 lt!70084 (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))

(declare-fun lt!70085 () List!1694)

(assert (=> d!40929 (= lt!70084 (ListLongMap!1654 lt!70085))))

(declare-fun lt!70082 () Unit!4141)

(declare-fun lt!70083 () Unit!4141)

(assert (=> d!40929 (= lt!70082 lt!70083)))

(assert (=> d!40929 (= (getValueByKey!173 lt!70085 (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))

(assert (=> d!40929 (= lt!70083 (lemmaContainsTupThenGetReturnValue!88 lt!70085 (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))

(assert (=> d!40929 (= lt!70085 (insertStrictlySorted!91 (toList!842 lt!69524) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))

(assert (=> d!40929 (= (+!169 lt!69524 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))) lt!70084)))

(declare-fun b!133893 () Bool)

(declare-fun res!64426 () Bool)

(assert (=> b!133893 (=> (not res!64426) (not e!87223))))

(assert (=> b!133893 (= res!64426 (= (getValueByKey!173 (toList!842 lt!70084) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))))))

(declare-fun b!133894 () Bool)

(assert (=> b!133894 (= e!87223 (contains!886 (toList!842 lt!70084) (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))))

(assert (= (and d!40929 res!64427) b!133893))

(assert (= (and b!133893 res!64426) b!133894))

(declare-fun m!158497 () Bool)

(assert (=> d!40929 m!158497))

(declare-fun m!158499 () Bool)

(assert (=> d!40929 m!158499))

(declare-fun m!158501 () Bool)

(assert (=> d!40929 m!158501))

(declare-fun m!158503 () Bool)

(assert (=> d!40929 m!158503))

(declare-fun m!158505 () Bool)

(assert (=> b!133893 m!158505))

(declare-fun m!158507 () Bool)

(assert (=> b!133894 m!158507))

(assert (=> b!133050 d!40929))

(declare-fun d!40931 () Bool)

(assert (=> d!40931 (= (apply!116 (+!169 lt!69526 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))) lt!69528) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69526 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))) lt!69528)))))

(declare-fun bs!5558 () Bool)

(assert (= bs!5558 d!40931))

(declare-fun m!158509 () Bool)

(assert (=> bs!5558 m!158509))

(assert (=> bs!5558 m!158509))

(declare-fun m!158511 () Bool)

(assert (=> bs!5558 m!158511))

(assert (=> b!133050 d!40931))

(declare-fun d!40933 () Bool)

(declare-fun e!87225 () Bool)

(assert (=> d!40933 e!87225))

(declare-fun res!64428 () Bool)

(assert (=> d!40933 (=> res!64428 e!87225)))

(declare-fun lt!70086 () Bool)

(assert (=> d!40933 (= res!64428 (not lt!70086))))

(declare-fun lt!70087 () Bool)

(assert (=> d!40933 (= lt!70086 lt!70087)))

(declare-fun lt!70088 () Unit!4141)

(declare-fun e!87224 () Unit!4141)

(assert (=> d!40933 (= lt!70088 e!87224)))

(declare-fun c!24855 () Bool)

(assert (=> d!40933 (= c!24855 lt!70087)))

(assert (=> d!40933 (= lt!70087 (containsKey!176 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) lt!69519))))

(assert (=> d!40933 (= (contains!884 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))) lt!69519) lt!70086)))

(declare-fun b!133895 () Bool)

(declare-fun lt!70089 () Unit!4141)

(assert (=> b!133895 (= e!87224 lt!70089)))

(assert (=> b!133895 (= lt!70089 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) lt!69519))))

(assert (=> b!133895 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) lt!69519))))

(declare-fun b!133896 () Bool)

(declare-fun Unit!4185 () Unit!4141)

(assert (=> b!133896 (= e!87224 Unit!4185)))

(declare-fun b!133897 () Bool)

(assert (=> b!133897 (= e!87225 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) lt!69519)))))

(assert (= (and d!40933 c!24855) b!133895))

(assert (= (and d!40933 (not c!24855)) b!133896))

(assert (= (and d!40933 (not res!64428)) b!133897))

(declare-fun m!158513 () Bool)

(assert (=> d!40933 m!158513))

(declare-fun m!158515 () Bool)

(assert (=> b!133895 m!158515))

(declare-fun m!158517 () Bool)

(assert (=> b!133895 m!158517))

(assert (=> b!133895 m!158517))

(declare-fun m!158519 () Bool)

(assert (=> b!133895 m!158519))

(assert (=> b!133897 m!158517))

(assert (=> b!133897 m!158517))

(assert (=> b!133897 m!158519))

(assert (=> b!133050 d!40933))

(declare-fun d!40935 () Bool)

(assert (=> d!40935 (= (apply!116 (+!169 lt!69524 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))) lt!69530) (apply!116 lt!69524 lt!69530))))

(declare-fun lt!70090 () Unit!4141)

(assert (=> d!40935 (= lt!70090 (choose!828 lt!69524 lt!69522 (minValue!2719 newMap!16) lt!69530))))

(declare-fun e!87226 () Bool)

(assert (=> d!40935 e!87226))

(declare-fun res!64429 () Bool)

(assert (=> d!40935 (=> (not res!64429) (not e!87226))))

(assert (=> d!40935 (= res!64429 (contains!884 lt!69524 lt!69530))))

(assert (=> d!40935 (= (addApplyDifferent!92 lt!69524 lt!69522 (minValue!2719 newMap!16) lt!69530) lt!70090)))

(declare-fun b!133898 () Bool)

(assert (=> b!133898 (= e!87226 (not (= lt!69530 lt!69522)))))

(assert (= (and d!40935 res!64429) b!133898))

(assert (=> d!40935 m!156863))

(assert (=> d!40935 m!156865))

(assert (=> d!40935 m!156849))

(declare-fun m!158521 () Bool)

(assert (=> d!40935 m!158521))

(declare-fun m!158523 () Bool)

(assert (=> d!40935 m!158523))

(assert (=> d!40935 m!156863))

(assert (=> b!133050 d!40935))

(assert (=> b!133050 d!40859))

(declare-fun d!40937 () Bool)

(declare-fun lt!70091 () Bool)

(assert (=> d!40937 (= lt!70091 (select (content!134 (toList!842 lt!69625)) (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun e!87228 () Bool)

(assert (=> d!40937 (= lt!70091 e!87228)))

(declare-fun res!64431 () Bool)

(assert (=> d!40937 (=> (not res!64431) (not e!87228))))

(assert (=> d!40937 (= res!64431 ((_ is Cons!1690) (toList!842 lt!69625)))))

(assert (=> d!40937 (= (contains!886 (toList!842 lt!69625) (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!70091)))

(declare-fun b!133899 () Bool)

(declare-fun e!87227 () Bool)

(assert (=> b!133899 (= e!87228 e!87227)))

(declare-fun res!64430 () Bool)

(assert (=> b!133899 (=> res!64430 e!87227)))

(assert (=> b!133899 (= res!64430 (= (h!2295 (toList!842 lt!69625)) (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!133900 () Bool)

(assert (=> b!133900 (= e!87227 (contains!886 (t!6137 (toList!842 lt!69625)) (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!40937 res!64431) b!133899))

(assert (= (and b!133899 (not res!64430)) b!133900))

(declare-fun m!158525 () Bool)

(assert (=> d!40937 m!158525))

(declare-fun m!158527 () Bool)

(assert (=> d!40937 m!158527))

(declare-fun m!158529 () Bool)

(assert (=> b!133900 m!158529))

(assert (=> b!133191 d!40937))

(declare-fun d!40939 () Bool)

(assert (=> d!40939 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334))))

(declare-fun lt!70092 () Unit!4141)

(assert (=> d!40939 (= lt!70092 (choose!831 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334))))

(declare-fun e!87229 () Bool)

(assert (=> d!40939 e!87229))

(declare-fun res!64432 () Bool)

(assert (=> d!40939 (=> (not res!64432) (not e!87229))))

(assert (=> d!40939 (= res!64432 (isStrictlySorted!309 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!40939 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334) lt!70092)))

(declare-fun b!133901 () Bool)

(assert (=> b!133901 (= e!87229 (containsKey!176 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334))))

(assert (= (and d!40939 res!64432) b!133901))

(assert (=> d!40939 m!157097))

(assert (=> d!40939 m!157097))

(assert (=> d!40939 m!157099))

(declare-fun m!158531 () Bool)

(assert (=> d!40939 m!158531))

(declare-fun m!158533 () Bool)

(assert (=> d!40939 m!158533))

(assert (=> b!133901 m!157093))

(assert (=> b!133187 d!40939))

(assert (=> b!133187 d!40635))

(assert (=> b!133187 d!40637))

(declare-fun d!40941 () Bool)

(declare-fun res!64433 () Bool)

(declare-fun e!87230 () Bool)

(assert (=> d!40941 (=> res!64433 e!87230)))

(assert (=> d!40941 (= res!64433 (and ((_ is Cons!1690) (toList!842 e!86556)) (= (_1!1293 (h!2295 (toList!842 e!86556))) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))))

(assert (=> d!40941 (= (containsKey!176 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))) e!87230)))

(declare-fun b!133902 () Bool)

(declare-fun e!87231 () Bool)

(assert (=> b!133902 (= e!87230 e!87231)))

(declare-fun res!64434 () Bool)

(assert (=> b!133902 (=> (not res!64434) (not e!87231))))

(assert (=> b!133902 (= res!64434 (and (or (not ((_ is Cons!1690) (toList!842 e!86556))) (bvsle (_1!1293 (h!2295 (toList!842 e!86556))) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))) ((_ is Cons!1690) (toList!842 e!86556)) (bvslt (_1!1293 (h!2295 (toList!842 e!86556))) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))))

(declare-fun b!133903 () Bool)

(assert (=> b!133903 (= e!87231 (containsKey!176 (t!6137 (toList!842 e!86556)) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(assert (= (and d!40941 (not res!64433)) b!133902))

(assert (= (and b!133902 res!64434) b!133903))

(declare-fun m!158535 () Bool)

(assert (=> b!133903 m!158535))

(assert (=> d!40495 d!40941))

(declare-fun d!40943 () Bool)

(assert (=> d!40943 (contains!884 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))

(assert (=> d!40943 true))

(declare-fun _$16!151 () Unit!4141)

(assert (=> d!40943 (= (choose!825 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (index!3237 lt!69284) (defaultEntry!2864 newMap!16)) _$16!151)))

(declare-fun bs!5559 () Bool)

(assert (= bs!5559 d!40943))

(assert (=> bs!5559 m!156947))

(assert (=> bs!5559 m!156557))

(assert (=> bs!5559 m!156947))

(assert (=> bs!5559 m!156557))

(assert (=> bs!5559 m!156949))

(assert (=> d!40497 d!40943))

(assert (=> d!40497 d!40591))

(declare-fun d!40945 () Bool)

(assert (=> d!40945 (arrayContainsKey!0 (_keys!4613 newMap!16) lt!69376 #b00000000000000000000000000000000)))

(declare-fun lt!70093 () Unit!4141)

(assert (=> d!40945 (= lt!70093 (choose!13 (_keys!4613 newMap!16) lt!69376 #b00000000000000000000000000000000))))

(assert (=> d!40945 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!40945 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 newMap!16) lt!69376 #b00000000000000000000000000000000) lt!70093)))

(declare-fun bs!5560 () Bool)

(assert (= bs!5560 d!40945))

(assert (=> bs!5560 m!156685))

(declare-fun m!158537 () Bool)

(assert (=> bs!5560 m!158537))

(assert (=> b!132929 d!40945))

(declare-fun d!40947 () Bool)

(declare-fun res!64435 () Bool)

(declare-fun e!87232 () Bool)

(assert (=> d!40947 (=> res!64435 e!87232)))

(assert (=> d!40947 (= res!64435 (= (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) lt!69376))))

(assert (=> d!40947 (= (arrayContainsKey!0 (_keys!4613 newMap!16) lt!69376 #b00000000000000000000000000000000) e!87232)))

(declare-fun b!133904 () Bool)

(declare-fun e!87233 () Bool)

(assert (=> b!133904 (= e!87232 e!87233)))

(declare-fun res!64436 () Bool)

(assert (=> b!133904 (=> (not res!64436) (not e!87233))))

(assert (=> b!133904 (= res!64436 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!133905 () Bool)

(assert (=> b!133905 (= e!87233 (arrayContainsKey!0 (_keys!4613 newMap!16) lt!69376 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!40947 (not res!64435)) b!133904))

(assert (= (and b!133904 res!64436) b!133905))

(assert (=> d!40947 m!156679))

(declare-fun m!158539 () Bool)

(assert (=> b!133905 m!158539))

(assert (=> b!132929 d!40947))

(declare-fun b!133906 () Bool)

(declare-fun c!24856 () Bool)

(declare-fun lt!70095 () (_ BitVec 64))

(assert (=> b!133906 (= c!24856 (= lt!70095 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87235 () SeekEntryResult!269)

(declare-fun e!87236 () SeekEntryResult!269)

(assert (=> b!133906 (= e!87235 e!87236)))

(declare-fun d!40949 () Bool)

(declare-fun lt!70094 () SeekEntryResult!269)

(assert (=> d!40949 (and (or ((_ is Undefined!269) lt!70094) (not ((_ is Found!269) lt!70094)) (and (bvsge (index!3237 lt!70094) #b00000000000000000000000000000000) (bvslt (index!3237 lt!70094) (size!2521 (_keys!4613 newMap!16))))) (or ((_ is Undefined!269) lt!70094) ((_ is Found!269) lt!70094) (not ((_ is MissingZero!269) lt!70094)) (and (bvsge (index!3236 lt!70094) #b00000000000000000000000000000000) (bvslt (index!3236 lt!70094) (size!2521 (_keys!4613 newMap!16))))) (or ((_ is Undefined!269) lt!70094) ((_ is Found!269) lt!70094) ((_ is MissingZero!269) lt!70094) (not ((_ is MissingVacant!269) lt!70094)) (and (bvsge (index!3239 lt!70094) #b00000000000000000000000000000000) (bvslt (index!3239 lt!70094) (size!2521 (_keys!4613 newMap!16))))) (or ((_ is Undefined!269) lt!70094) (ite ((_ is Found!269) lt!70094) (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!70094)) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!269) lt!70094) (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3236 lt!70094)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!269) lt!70094) (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3239 lt!70094)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87234 () SeekEntryResult!269)

(assert (=> d!40949 (= lt!70094 e!87234)))

(declare-fun c!24858 () Bool)

(declare-fun lt!70096 () SeekEntryResult!269)

(assert (=> d!40949 (= c!24858 (and ((_ is Intermediate!269) lt!70096) (undefined!1081 lt!70096)))))

(assert (=> d!40949 (= lt!70096 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (mask!7164 newMap!16)) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(assert (=> d!40949 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40949 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (_keys!4613 newMap!16) (mask!7164 newMap!16)) lt!70094)))

(declare-fun b!133907 () Bool)

(assert (=> b!133907 (= e!87236 (seekKeyOrZeroReturnVacant!0 (x!15586 lt!70096) (index!3238 lt!70096) (index!3238 lt!70096) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(declare-fun b!133908 () Bool)

(assert (=> b!133908 (= e!87236 (MissingZero!269 (index!3238 lt!70096)))))

(declare-fun b!133909 () Bool)

(assert (=> b!133909 (= e!87234 e!87235)))

(assert (=> b!133909 (= lt!70095 (select (arr!2252 (_keys!4613 newMap!16)) (index!3238 lt!70096)))))

(declare-fun c!24857 () Bool)

(assert (=> b!133909 (= c!24857 (= lt!70095 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133910 () Bool)

(assert (=> b!133910 (= e!87235 (Found!269 (index!3238 lt!70096)))))

(declare-fun b!133911 () Bool)

(assert (=> b!133911 (= e!87234 Undefined!269)))

(assert (= (and d!40949 c!24858) b!133911))

(assert (= (and d!40949 (not c!24858)) b!133909))

(assert (= (and b!133909 c!24857) b!133910))

(assert (= (and b!133909 (not c!24857)) b!133906))

(assert (= (and b!133906 c!24856) b!133908))

(assert (= (and b!133906 (not c!24856)) b!133907))

(assert (=> d!40949 m!156679))

(declare-fun m!158541 () Bool)

(assert (=> d!40949 m!158541))

(assert (=> d!40949 m!156651))

(assert (=> d!40949 m!158541))

(assert (=> d!40949 m!156679))

(declare-fun m!158543 () Bool)

(assert (=> d!40949 m!158543))

(declare-fun m!158545 () Bool)

(assert (=> d!40949 m!158545))

(declare-fun m!158547 () Bool)

(assert (=> d!40949 m!158547))

(declare-fun m!158549 () Bool)

(assert (=> d!40949 m!158549))

(assert (=> b!133907 m!156679))

(declare-fun m!158551 () Bool)

(assert (=> b!133907 m!158551))

(declare-fun m!158553 () Bool)

(assert (=> b!133909 m!158553))

(assert (=> b!132929 d!40949))

(declare-fun d!40951 () Bool)

(assert (=> d!40951 (= (content!133 Nil!1690) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!40471 d!40951))

(declare-fun d!40953 () Bool)

(declare-fun e!87238 () Bool)

(assert (=> d!40953 e!87238))

(declare-fun res!64437 () Bool)

(assert (=> d!40953 (=> res!64437 e!87238)))

(declare-fun lt!70097 () Bool)

(assert (=> d!40953 (= res!64437 (not lt!70097))))

(declare-fun lt!70098 () Bool)

(assert (=> d!40953 (= lt!70097 lt!70098)))

(declare-fun lt!70099 () Unit!4141)

(declare-fun e!87237 () Unit!4141)

(assert (=> d!40953 (= lt!70099 e!87237)))

(declare-fun c!24859 () Bool)

(assert (=> d!40953 (= c!24859 lt!70098)))

(assert (=> d!40953 (= lt!70098 (containsKey!176 (toList!842 lt!69529) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40953 (= (contains!884 lt!69529 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70097)))

(declare-fun b!133912 () Bool)

(declare-fun lt!70100 () Unit!4141)

(assert (=> b!133912 (= e!87237 lt!70100)))

(assert (=> b!133912 (= lt!70100 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69529) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133912 (isDefined!125 (getValueByKey!173 (toList!842 lt!69529) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133913 () Bool)

(declare-fun Unit!4186 () Unit!4141)

(assert (=> b!133913 (= e!87237 Unit!4186)))

(declare-fun b!133914 () Bool)

(assert (=> b!133914 (= e!87238 (isDefined!125 (getValueByKey!173 (toList!842 lt!69529) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40953 c!24859) b!133912))

(assert (= (and d!40953 (not c!24859)) b!133913))

(assert (= (and d!40953 (not res!64437)) b!133914))

(declare-fun m!158555 () Bool)

(assert (=> d!40953 m!158555))

(declare-fun m!158557 () Bool)

(assert (=> b!133912 m!158557))

(assert (=> b!133912 m!158059))

(assert (=> b!133912 m!158059))

(declare-fun m!158559 () Bool)

(assert (=> b!133912 m!158559))

(assert (=> b!133914 m!158059))

(assert (=> b!133914 m!158059))

(assert (=> b!133914 m!158559))

(assert (=> bm!14654 d!40953))

(assert (=> b!133134 d!40641))

(assert (=> b!133134 d!40643))

(declare-fun d!40955 () Bool)

(declare-fun e!87240 () Bool)

(assert (=> d!40955 e!87240))

(declare-fun res!64438 () Bool)

(assert (=> d!40955 (=> res!64438 e!87240)))

(declare-fun lt!70101 () Bool)

(assert (=> d!40955 (= res!64438 (not lt!70101))))

(declare-fun lt!70102 () Bool)

(assert (=> d!40955 (= lt!70101 lt!70102)))

(declare-fun lt!70103 () Unit!4141)

(declare-fun e!87239 () Unit!4141)

(assert (=> d!40955 (= lt!70103 e!87239)))

(declare-fun c!24860 () Bool)

(assert (=> d!40955 (= c!24860 lt!70102)))

(assert (=> d!40955 (= lt!70102 (containsKey!176 (toList!842 lt!69649) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!40955 (= (contains!884 lt!69649 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70101)))

(declare-fun b!133915 () Bool)

(declare-fun lt!70104 () Unit!4141)

(assert (=> b!133915 (= e!87239 lt!70104)))

(assert (=> b!133915 (= lt!70104 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69649) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> b!133915 (isDefined!125 (getValueByKey!173 (toList!842 lt!69649) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133916 () Bool)

(declare-fun Unit!4187 () Unit!4141)

(assert (=> b!133916 (= e!87239 Unit!4187)))

(declare-fun b!133917 () Bool)

(assert (=> b!133917 (= e!87240 (isDefined!125 (getValueByKey!173 (toList!842 lt!69649) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!40955 c!24860) b!133915))

(assert (= (and d!40955 (not c!24860)) b!133916))

(assert (= (and d!40955 (not res!64438)) b!133917))

(declare-fun m!158561 () Bool)

(assert (=> d!40955 m!158561))

(declare-fun m!158563 () Bool)

(assert (=> b!133915 m!158563))

(assert (=> b!133915 m!157199))

(assert (=> b!133915 m!157199))

(declare-fun m!158565 () Bool)

(assert (=> b!133915 m!158565))

(assert (=> b!133917 m!157199))

(assert (=> b!133917 m!157199))

(assert (=> b!133917 m!158565))

(assert (=> d!40565 d!40955))

(declare-fun b!133919 () Bool)

(declare-fun e!87241 () Option!179)

(declare-fun e!87242 () Option!179)

(assert (=> b!133919 (= e!87241 e!87242)))

(declare-fun c!24862 () Bool)

(assert (=> b!133919 (= c!24862 (and ((_ is Cons!1690) lt!69650) (not (= (_1!1293 (h!2295 lt!69650)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!133918 () Bool)

(assert (=> b!133918 (= e!87241 (Some!178 (_2!1293 (h!2295 lt!69650))))))

(declare-fun d!40957 () Bool)

(declare-fun c!24861 () Bool)

(assert (=> d!40957 (= c!24861 (and ((_ is Cons!1690) lt!69650) (= (_1!1293 (h!2295 lt!69650)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!40957 (= (getValueByKey!173 lt!69650 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87241)))

(declare-fun b!133921 () Bool)

(assert (=> b!133921 (= e!87242 None!177)))

(declare-fun b!133920 () Bool)

(assert (=> b!133920 (= e!87242 (getValueByKey!173 (t!6137 lt!69650) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!40957 c!24861) b!133918))

(assert (= (and d!40957 (not c!24861)) b!133919))

(assert (= (and b!133919 c!24862) b!133920))

(assert (= (and b!133919 (not c!24862)) b!133921))

(declare-fun m!158567 () Bool)

(assert (=> b!133920 m!158567))

(assert (=> d!40565 d!40957))

(declare-fun d!40959 () Bool)

(assert (=> d!40959 (= (getValueByKey!173 lt!69650 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun lt!70105 () Unit!4141)

(assert (=> d!40959 (= lt!70105 (choose!833 lt!69650 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun e!87243 () Bool)

(assert (=> d!40959 e!87243))

(declare-fun res!64439 () Bool)

(assert (=> d!40959 (=> (not res!64439) (not e!87243))))

(assert (=> d!40959 (= res!64439 (isStrictlySorted!309 lt!69650))))

(assert (=> d!40959 (= (lemmaContainsTupThenGetReturnValue!88 lt!69650 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70105)))

(declare-fun b!133922 () Bool)

(declare-fun res!64440 () Bool)

(assert (=> b!133922 (=> (not res!64440) (not e!87243))))

(assert (=> b!133922 (= res!64440 (containsKey!176 lt!69650 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133923 () Bool)

(assert (=> b!133923 (= e!87243 (contains!886 lt!69650 (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!40959 res!64439) b!133922))

(assert (= (and b!133922 res!64440) b!133923))

(assert (=> d!40959 m!157193))

(declare-fun m!158569 () Bool)

(assert (=> d!40959 m!158569))

(declare-fun m!158571 () Bool)

(assert (=> d!40959 m!158571))

(declare-fun m!158573 () Bool)

(assert (=> b!133922 m!158573))

(declare-fun m!158575 () Bool)

(assert (=> b!133923 m!158575))

(assert (=> d!40565 d!40959))

(declare-fun b!133924 () Bool)

(declare-fun res!64441 () Bool)

(declare-fun e!87248 () Bool)

(assert (=> b!133924 (=> (not res!64441) (not e!87248))))

(declare-fun lt!70106 () List!1694)

(assert (=> b!133924 (= res!64441 (containsKey!176 lt!70106 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133925 () Bool)

(declare-fun e!87246 () List!1694)

(declare-fun e!87247 () List!1694)

(assert (=> b!133925 (= e!87246 e!87247)))

(declare-fun c!24866 () Bool)

(assert (=> b!133925 (= c!24866 (and ((_ is Cons!1690) (toList!842 call!14628)) (= (_1!1293 (h!2295 (toList!842 call!14628))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun bm!14767 () Bool)

(declare-fun call!14771 () List!1694)

(declare-fun call!14770 () List!1694)

(assert (=> bm!14767 (= call!14771 call!14770)))

(declare-fun b!133926 () Bool)

(declare-fun e!87244 () List!1694)

(assert (=> b!133926 (= e!87244 call!14771)))

(declare-fun b!133927 () Bool)

(declare-fun c!24865 () Bool)

(assert (=> b!133927 (= c!24865 (and ((_ is Cons!1690) (toList!842 call!14628)) (bvsgt (_1!1293 (h!2295 (toList!842 call!14628))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> b!133927 (= e!87247 e!87244)))

(declare-fun b!133928 () Bool)

(assert (=> b!133928 (= e!87248 (contains!886 lt!70106 (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!133929 () Bool)

(assert (=> b!133929 (= e!87247 call!14770)))

(declare-fun d!40961 () Bool)

(assert (=> d!40961 e!87248))

(declare-fun res!64442 () Bool)

(assert (=> d!40961 (=> (not res!64442) (not e!87248))))

(assert (=> d!40961 (= res!64442 (isStrictlySorted!309 lt!70106))))

(assert (=> d!40961 (= lt!70106 e!87246)))

(declare-fun c!24864 () Bool)

(assert (=> d!40961 (= c!24864 (and ((_ is Cons!1690) (toList!842 call!14628)) (bvslt (_1!1293 (h!2295 (toList!842 call!14628))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!40961 (isStrictlySorted!309 (toList!842 call!14628))))

(assert (=> d!40961 (= (insertStrictlySorted!91 (toList!842 call!14628) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70106)))

(declare-fun b!133930 () Bool)

(declare-fun e!87245 () List!1694)

(assert (=> b!133930 (= e!87245 (ite c!24866 (t!6137 (toList!842 call!14628)) (ite c!24865 (Cons!1690 (h!2295 (toList!842 call!14628)) (t!6137 (toList!842 call!14628))) Nil!1691)))))

(declare-fun b!133931 () Bool)

(declare-fun call!14772 () List!1694)

(assert (=> b!133931 (= e!87246 call!14772)))

(declare-fun b!133932 () Bool)

(assert (=> b!133932 (= e!87244 call!14771)))

(declare-fun b!133933 () Bool)

(assert (=> b!133933 (= e!87245 (insertStrictlySorted!91 (t!6137 (toList!842 call!14628)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun bm!14768 () Bool)

(assert (=> bm!14768 (= call!14770 call!14772)))

(declare-fun bm!14769 () Bool)

(assert (=> bm!14769 (= call!14772 ($colon$colon!91 e!87245 (ite c!24864 (h!2295 (toList!842 call!14628)) (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun c!24863 () Bool)

(assert (=> bm!14769 (= c!24863 c!24864)))

(assert (= (and d!40961 c!24864) b!133931))

(assert (= (and d!40961 (not c!24864)) b!133925))

(assert (= (and b!133925 c!24866) b!133929))

(assert (= (and b!133925 (not c!24866)) b!133927))

(assert (= (and b!133927 c!24865) b!133932))

(assert (= (and b!133927 (not c!24865)) b!133926))

(assert (= (or b!133932 b!133926) bm!14767))

(assert (= (or b!133929 bm!14767) bm!14768))

(assert (= (or b!133931 bm!14768) bm!14769))

(assert (= (and bm!14769 c!24863) b!133933))

(assert (= (and bm!14769 (not c!24863)) b!133930))

(assert (= (and d!40961 res!64442) b!133924))

(assert (= (and b!133924 res!64441) b!133928))

(declare-fun m!158577 () Bool)

(assert (=> b!133928 m!158577))

(declare-fun m!158579 () Bool)

(assert (=> b!133933 m!158579))

(declare-fun m!158581 () Bool)

(assert (=> bm!14769 m!158581))

(declare-fun m!158583 () Bool)

(assert (=> b!133924 m!158583))

(declare-fun m!158585 () Bool)

(assert (=> d!40961 m!158585))

(declare-fun m!158587 () Bool)

(assert (=> d!40961 m!158587))

(assert (=> d!40565 d!40961))

(assert (=> b!133030 d!40621))

(assert (=> b!132895 d!40819))

(declare-fun d!40963 () Bool)

(assert (=> d!40963 (= (apply!116 lt!69577 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69577) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5561 () Bool)

(assert (= bs!5561 d!40963))

(declare-fun m!158589 () Bool)

(assert (=> bs!5561 m!158589))

(assert (=> bs!5561 m!158589))

(declare-fun m!158591 () Bool)

(assert (=> bs!5561 m!158591))

(assert (=> b!133100 d!40963))

(declare-fun lt!70107 () Bool)

(declare-fun d!40965 () Bool)

(assert (=> d!40965 (= lt!70107 (select (content!134 (toList!842 lt!69605)) (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun e!87250 () Bool)

(assert (=> d!40965 (= lt!70107 e!87250)))

(declare-fun res!64444 () Bool)

(assert (=> d!40965 (=> (not res!64444) (not e!87250))))

(assert (=> d!40965 (= res!64444 ((_ is Cons!1690) (toList!842 lt!69605)))))

(assert (=> d!40965 (= (contains!886 (toList!842 lt!69605) (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70107)))

(declare-fun b!133934 () Bool)

(declare-fun e!87249 () Bool)

(assert (=> b!133934 (= e!87250 e!87249)))

(declare-fun res!64443 () Bool)

(assert (=> b!133934 (=> res!64443 e!87249)))

(assert (=> b!133934 (= res!64443 (= (h!2295 (toList!842 lt!69605)) (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133935 () Bool)

(assert (=> b!133935 (= e!87249 (contains!886 (t!6137 (toList!842 lt!69605)) (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!40965 res!64444) b!133934))

(assert (= (and b!133934 (not res!64443)) b!133935))

(declare-fun m!158593 () Bool)

(assert (=> d!40965 m!158593))

(declare-fun m!158595 () Bool)

(assert (=> d!40965 m!158595))

(declare-fun m!158597 () Bool)

(assert (=> b!133935 m!158597))

(assert (=> b!133157 d!40965))

(assert (=> d!40533 d!40535))

(assert (=> d!40533 d!40557))

(declare-fun d!40967 () Bool)

(assert (=> d!40967 (contains!884 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69334)))

(assert (=> d!40967 true))

(declare-fun _$35!381 () Unit!4141)

(assert (=> d!40967 (= (choose!829 lt!69335 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69334) _$35!381)))

(declare-fun bs!5562 () Bool)

(assert (= bs!5562 d!40967))

(assert (=> bs!5562 m!156611))

(assert (=> bs!5562 m!156611))

(assert (=> bs!5562 m!156613))

(assert (=> d!40533 d!40967))

(declare-fun d!40969 () Bool)

(declare-fun e!87252 () Bool)

(assert (=> d!40969 e!87252))

(declare-fun res!64445 () Bool)

(assert (=> d!40969 (=> res!64445 e!87252)))

(declare-fun lt!70108 () Bool)

(assert (=> d!40969 (= res!64445 (not lt!70108))))

(declare-fun lt!70109 () Bool)

(assert (=> d!40969 (= lt!70108 lt!70109)))

(declare-fun lt!70110 () Unit!4141)

(declare-fun e!87251 () Unit!4141)

(assert (=> d!40969 (= lt!70110 e!87251)))

(declare-fun c!24867 () Bool)

(assert (=> d!40969 (= c!24867 lt!70109)))

(assert (=> d!40969 (= lt!70109 (containsKey!176 (toList!842 lt!69335) lt!69334))))

(assert (=> d!40969 (= (contains!884 lt!69335 lt!69334) lt!70108)))

(declare-fun b!133937 () Bool)

(declare-fun lt!70111 () Unit!4141)

(assert (=> b!133937 (= e!87251 lt!70111)))

(assert (=> b!133937 (= lt!70111 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69335) lt!69334))))

(assert (=> b!133937 (isDefined!125 (getValueByKey!173 (toList!842 lt!69335) lt!69334))))

(declare-fun b!133938 () Bool)

(declare-fun Unit!4188 () Unit!4141)

(assert (=> b!133938 (= e!87251 Unit!4188)))

(declare-fun b!133939 () Bool)

(assert (=> b!133939 (= e!87252 (isDefined!125 (getValueByKey!173 (toList!842 lt!69335) lt!69334)))))

(assert (= (and d!40969 c!24867) b!133937))

(assert (= (and d!40969 (not c!24867)) b!133938))

(assert (= (and d!40969 (not res!64445)) b!133939))

(declare-fun m!158599 () Bool)

(assert (=> d!40969 m!158599))

(declare-fun m!158601 () Bool)

(assert (=> b!133937 m!158601))

(declare-fun m!158603 () Bool)

(assert (=> b!133937 m!158603))

(assert (=> b!133937 m!158603))

(declare-fun m!158605 () Bool)

(assert (=> b!133937 m!158605))

(assert (=> b!133939 m!158603))

(assert (=> b!133939 m!158603))

(assert (=> b!133939 m!158605))

(assert (=> d!40533 d!40969))

(declare-fun d!40971 () Bool)

(declare-fun e!87254 () Bool)

(assert (=> d!40971 e!87254))

(declare-fun res!64446 () Bool)

(assert (=> d!40971 (=> res!64446 e!87254)))

(declare-fun lt!70112 () Bool)

(assert (=> d!40971 (= res!64446 (not lt!70112))))

(declare-fun lt!70113 () Bool)

(assert (=> d!40971 (= lt!70112 lt!70113)))

(declare-fun lt!70114 () Unit!4141)

(declare-fun e!87253 () Unit!4141)

(assert (=> d!40971 (= lt!70114 e!87253)))

(declare-fun c!24868 () Bool)

(assert (=> d!40971 (= c!24868 lt!70113)))

(assert (=> d!40971 (= lt!70113 (containsKey!176 (toList!842 lt!69529) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40971 (= (contains!884 lt!69529 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) lt!70112)))

(declare-fun b!133940 () Bool)

(declare-fun lt!70115 () Unit!4141)

(assert (=> b!133940 (= e!87253 lt!70115)))

(assert (=> b!133940 (= lt!70115 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69529) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133940 (isDefined!125 (getValueByKey!173 (toList!842 lt!69529) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133941 () Bool)

(declare-fun Unit!4189 () Unit!4141)

(assert (=> b!133941 (= e!87253 Unit!4189)))

(declare-fun b!133942 () Bool)

(assert (=> b!133942 (= e!87254 (isDefined!125 (getValueByKey!173 (toList!842 lt!69529) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!40971 c!24868) b!133940))

(assert (= (and d!40971 (not c!24868)) b!133941))

(assert (= (and d!40971 (not res!64446)) b!133942))

(assert (=> d!40971 m!156679))

(declare-fun m!158607 () Bool)

(assert (=> d!40971 m!158607))

(assert (=> b!133940 m!156679))

(declare-fun m!158609 () Bool)

(assert (=> b!133940 m!158609))

(assert (=> b!133940 m!156679))

(assert (=> b!133940 m!158355))

(assert (=> b!133940 m!158355))

(declare-fun m!158611 () Bool)

(assert (=> b!133940 m!158611))

(assert (=> b!133942 m!156679))

(assert (=> b!133942 m!158355))

(assert (=> b!133942 m!158355))

(assert (=> b!133942 m!158611))

(assert (=> b!133062 d!40971))

(declare-fun d!40973 () Bool)

(declare-fun lt!70116 () (_ BitVec 32))

(assert (=> d!40973 (and (bvsge lt!70116 #b00000000000000000000000000000000) (bvsle lt!70116 (bvsub (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!87255 () (_ BitVec 32))

(assert (=> d!40973 (= lt!70116 e!87255)))

(declare-fun c!24869 () Bool)

(assert (=> d!40973 (= c!24869 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!40973 (and (bvsle #b00000000000000000000000000000000 (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!40973 (= (arrayCountValidKeys!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000000 (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))) lt!70116)))

(declare-fun b!133943 () Bool)

(declare-fun e!87256 () (_ BitVec 32))

(declare-fun call!14773 () (_ BitVec 32))

(assert (=> b!133943 (= e!87256 (bvadd #b00000000000000000000000000000001 call!14773))))

(declare-fun b!133944 () Bool)

(assert (=> b!133944 (= e!87256 call!14773)))

(declare-fun b!133945 () Bool)

(assert (=> b!133945 (= e!87255 e!87256)))

(declare-fun c!24870 () Bool)

(assert (=> b!133945 (= c!24870 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!14770 () Bool)

(assert (=> bm!14770 (= call!14773 (arrayCountValidKeys!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!133946 () Bool)

(assert (=> b!133946 (= e!87255 #b00000000000000000000000000000000)))

(assert (= (and d!40973 c!24869) b!133946))

(assert (= (and d!40973 (not c!24869)) b!133945))

(assert (= (and b!133945 c!24870) b!133943))

(assert (= (and b!133945 (not c!24870)) b!133944))

(assert (= (or b!133943 b!133944) bm!14770))

(assert (=> b!133945 m!156495))

(assert (=> b!133945 m!156495))

(assert (=> b!133945 m!156499))

(declare-fun m!158613 () Bool)

(assert (=> bm!14770 m!158613))

(assert (=> b!133206 d!40973))

(declare-fun b!133947 () Bool)

(declare-fun lt!70117 () SeekEntryResult!269)

(assert (=> b!133947 (and (bvsge (index!3238 lt!70117) #b00000000000000000000000000000000) (bvslt (index!3238 lt!70117) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun e!87257 () Bool)

(assert (=> b!133947 (= e!87257 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3238 lt!70117)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87258 () SeekEntryResult!269)

(declare-fun b!133948 () Bool)

(assert (=> b!133948 (= e!87258 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (mask!7164 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 newMap!16)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(declare-fun e!87259 () SeekEntryResult!269)

(declare-fun b!133949 () Bool)

(assert (=> b!133949 (= e!87259 (Intermediate!269 true (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (mask!7164 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!133950 () Bool)

(assert (=> b!133950 (= e!87258 (Intermediate!269 false (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (mask!7164 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!133951 () Bool)

(assert (=> b!133951 (= e!87259 e!87258)))

(declare-fun lt!70118 () (_ BitVec 64))

(declare-fun c!24873 () Bool)

(assert (=> b!133951 (= c!24873 (or (= lt!70118 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (= (bvadd lt!70118 lt!70118) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!133953 () Bool)

(assert (=> b!133953 (and (bvsge (index!3238 lt!70117) #b00000000000000000000000000000000) (bvslt (index!3238 lt!70117) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!64447 () Bool)

(assert (=> b!133953 (= res!64447 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3238 lt!70117)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!133953 (=> res!64447 e!87257)))

(declare-fun e!87260 () Bool)

(assert (=> b!133953 (= e!87260 e!87257)))

(declare-fun b!133954 () Bool)

(declare-fun e!87261 () Bool)

(assert (=> b!133954 (= e!87261 e!87260)))

(declare-fun res!64449 () Bool)

(assert (=> b!133954 (= res!64449 (and ((_ is Intermediate!269) lt!70117) (not (undefined!1081 lt!70117)) (bvslt (x!15586 lt!70117) #b01111111111111111111111111111110) (bvsge (x!15586 lt!70117) #b00000000000000000000000000000000) (bvsge (x!15586 lt!70117) #b00000000000000000000000000000000)))))

(assert (=> b!133954 (=> (not res!64449) (not e!87260))))

(declare-fun b!133955 () Bool)

(assert (=> b!133955 (and (bvsge (index!3238 lt!70117) #b00000000000000000000000000000000) (bvslt (index!3238 lt!70117) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!64448 () Bool)

(assert (=> b!133955 (= res!64448 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3238 lt!70117)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133955 (=> res!64448 e!87257)))

(declare-fun d!40975 () Bool)

(assert (=> d!40975 e!87261))

(declare-fun c!24871 () Bool)

(assert (=> d!40975 (= c!24871 (and ((_ is Intermediate!269) lt!70117) (undefined!1081 lt!70117)))))

(assert (=> d!40975 (= lt!70117 e!87259)))

(declare-fun c!24872 () Bool)

(assert (=> d!40975 (= c!24872 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!40975 (= lt!70118 (select (arr!2252 (_keys!4613 newMap!16)) (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (mask!7164 newMap!16))))))

(assert (=> d!40975 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!40975 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (mask!7164 newMap!16)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)) lt!70117)))

(declare-fun b!133952 () Bool)

(assert (=> b!133952 (= e!87261 (bvsge (x!15586 lt!70117) #b01111111111111111111111111111110))))

(assert (= (and d!40975 c!24872) b!133949))

(assert (= (and d!40975 (not c!24872)) b!133951))

(assert (= (and b!133951 c!24873) b!133950))

(assert (= (and b!133951 (not c!24873)) b!133948))

(assert (= (and d!40975 c!24871) b!133952))

(assert (= (and d!40975 (not c!24871)) b!133954))

(assert (= (and b!133954 res!64449) b!133953))

(assert (= (and b!133953 (not res!64447)) b!133955))

(assert (= (and b!133955 (not res!64448)) b!133947))

(declare-fun m!158615 () Bool)

(assert (=> b!133947 m!158615))

(assert (=> d!40975 m!156653))

(declare-fun m!158617 () Bool)

(assert (=> d!40975 m!158617))

(assert (=> d!40975 m!156651))

(assert (=> b!133955 m!158615))

(assert (=> b!133948 m!156653))

(declare-fun m!158619 () Bool)

(assert (=> b!133948 m!158619))

(assert (=> b!133948 m!158619))

(assert (=> b!133948 m!156395))

(declare-fun m!158621 () Bool)

(assert (=> b!133948 m!158621))

(assert (=> b!133953 m!158615))

(assert (=> d!40455 d!40975))

(declare-fun d!40977 () Bool)

(declare-fun lt!70120 () (_ BitVec 32))

(declare-fun lt!70119 () (_ BitVec 32))

(assert (=> d!40977 (= lt!70120 (bvmul (bvxor lt!70119 (bvlshr lt!70119 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!40977 (= lt!70119 ((_ extract 31 0) (bvand (bvxor (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (bvlshr (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!40977 (and (bvsge (mask!7164 newMap!16) #b00000000000000000000000000000000) (let ((res!64278 (let ((h!2296 ((_ extract 31 0) (bvand (bvxor (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (bvlshr (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15689 (bvmul (bvxor h!2296 (bvlshr h!2296 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15689 (bvlshr x!15689 #b00000000000000000000000000001101)) (mask!7164 newMap!16)))))) (and (bvslt res!64278 (bvadd (mask!7164 newMap!16) #b00000000000000000000000000000001)) (bvsge res!64278 #b00000000000000000000000000000000))))))

(assert (=> d!40977 (= (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (mask!7164 newMap!16)) (bvand (bvxor lt!70120 (bvlshr lt!70120 #b00000000000000000000000000001101)) (mask!7164 newMap!16)))))

(assert (=> d!40455 d!40977))

(assert (=> d!40455 d!40591))

(declare-fun d!40979 () Bool)

(declare-fun isEmpty!417 (List!1694) Bool)

(assert (=> d!40979 (= (isEmpty!415 lt!69486) (isEmpty!417 (toList!842 lt!69486)))))

(declare-fun bs!5563 () Bool)

(assert (= bs!5563 d!40979))

(declare-fun m!158623 () Bool)

(assert (=> bs!5563 m!158623))

(assert (=> b!133016 d!40979))

(declare-fun d!40981 () Bool)

(declare-fun e!87263 () Bool)

(assert (=> d!40981 e!87263))

(declare-fun res!64450 () Bool)

(assert (=> d!40981 (=> res!64450 e!87263)))

(declare-fun lt!70121 () Bool)

(assert (=> d!40981 (= res!64450 (not lt!70121))))

(declare-fun lt!70122 () Bool)

(assert (=> d!40981 (= lt!70121 lt!70122)))

(declare-fun lt!70123 () Unit!4141)

(declare-fun e!87262 () Unit!4141)

(assert (=> d!40981 (= lt!70123 e!87262)))

(declare-fun c!24874 () Bool)

(assert (=> d!40981 (= c!24874 lt!70122)))

(assert (=> d!40981 (= lt!70122 (containsKey!176 (toList!842 lt!69353) lt!69338))))

(assert (=> d!40981 (= (contains!884 lt!69353 lt!69338) lt!70121)))

(declare-fun b!133956 () Bool)

(declare-fun lt!70124 () Unit!4141)

(assert (=> b!133956 (= e!87262 lt!70124)))

(assert (=> b!133956 (= lt!70124 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69353) lt!69338))))

(assert (=> b!133956 (isDefined!125 (getValueByKey!173 (toList!842 lt!69353) lt!69338))))

(declare-fun b!133957 () Bool)

(declare-fun Unit!4190 () Unit!4141)

(assert (=> b!133957 (= e!87262 Unit!4190)))

(declare-fun b!133958 () Bool)

(assert (=> b!133958 (= e!87263 (isDefined!125 (getValueByKey!173 (toList!842 lt!69353) lt!69338)))))

(assert (= (and d!40981 c!24874) b!133956))

(assert (= (and d!40981 (not c!24874)) b!133957))

(assert (= (and d!40981 (not res!64450)) b!133958))

(declare-fun m!158625 () Bool)

(assert (=> d!40981 m!158625))

(declare-fun m!158627 () Bool)

(assert (=> b!133956 m!158627))

(assert (=> b!133956 m!157157))

(assert (=> b!133956 m!157157))

(declare-fun m!158629 () Bool)

(assert (=> b!133956 m!158629))

(assert (=> b!133958 m!157157))

(assert (=> b!133958 m!157157))

(assert (=> b!133958 m!158629))

(assert (=> d!40555 d!40981))

(assert (=> d!40555 d!40549))

(assert (=> d!40555 d!40553))

(declare-fun d!40983 () Bool)

(assert (=> d!40983 (= (apply!116 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!69338) (apply!116 lt!69353 lt!69338))))

(assert (=> d!40983 true))

(declare-fun _$34!979 () Unit!4141)

(assert (=> d!40983 (= (choose!828 lt!69353 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) lt!69338) _$34!979)))

(declare-fun bs!5564 () Bool)

(assert (= bs!5564 d!40983))

(assert (=> bs!5564 m!156591))

(assert (=> bs!5564 m!156591))

(assert (=> bs!5564 m!156615))

(assert (=> bs!5564 m!156595))

(assert (=> d!40555 d!40983))

(assert (=> d!40555 d!40559))

(assert (=> d!40507 d!40509))

(declare-fun d!40985 () Bool)

(assert (=> d!40985 (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69193 #b00000000000000000000000000000000)))

(assert (=> d!40985 true))

(declare-fun _$60!363 () Unit!4141)

(assert (=> d!40985 (= (choose!13 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69193 #b00000000000000000000000000000000) _$60!363)))

(declare-fun bs!5565 () Bool)

(assert (= bs!5565 d!40985))

(assert (=> bs!5565 m!156507))

(assert (=> d!40507 d!40985))

(declare-fun b!133960 () Bool)

(declare-fun e!87264 () Option!179)

(declare-fun e!87265 () Option!179)

(assert (=> b!133960 (= e!87264 e!87265)))

(declare-fun c!24876 () Bool)

(assert (=> b!133960 (= c!24876 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69167))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69167)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun b!133959 () Bool)

(assert (=> b!133959 (= e!87264 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 lt!69167))))))))

(declare-fun d!40987 () Bool)

(declare-fun c!24875 () Bool)

(assert (=> d!40987 (= c!24875 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69167))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69167)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!40987 (= (getValueByKey!173 (t!6137 (toList!842 lt!69167)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!87264)))

(declare-fun b!133962 () Bool)

(assert (=> b!133962 (= e!87265 None!177)))

(declare-fun b!133961 () Bool)

(assert (=> b!133961 (= e!87265 (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69167))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!40987 c!24875) b!133959))

(assert (= (and d!40987 (not c!24875)) b!133960))

(assert (= (and b!133960 c!24876) b!133961))

(assert (= (and b!133960 (not c!24876)) b!133962))

(assert (=> b!133961 m!156395))

(declare-fun m!158631 () Bool)

(assert (=> b!133961 m!158631))

(assert (=> b!133224 d!40987))

(declare-fun b!133963 () Bool)

(declare-fun e!87268 () Bool)

(assert (=> b!133963 (= e!87268 (contains!885 (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690) (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133964 () Bool)

(declare-fun e!87266 () Bool)

(declare-fun call!14774 () Bool)

(assert (=> b!133964 (= e!87266 call!14774)))

(declare-fun b!133965 () Bool)

(declare-fun e!87269 () Bool)

(declare-fun e!87267 () Bool)

(assert (=> b!133965 (= e!87269 e!87267)))

(declare-fun res!64452 () Bool)

(assert (=> b!133965 (=> (not res!64452) (not e!87267))))

(assert (=> b!133965 (= res!64452 (not e!87268))))

(declare-fun res!64453 () Bool)

(assert (=> b!133965 (=> (not res!64453) (not e!87268))))

(assert (=> b!133965 (= res!64453 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun c!24877 () Bool)

(declare-fun bm!14771 () Bool)

(assert (=> bm!14771 (= call!14774 (arrayNoDuplicates!0 (_keys!4613 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24877 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690))))))

(declare-fun d!40989 () Bool)

(declare-fun res!64451 () Bool)

(assert (=> d!40989 (=> res!64451 e!87269)))

(assert (=> d!40989 (= res!64451 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!40989 (= (arrayNoDuplicates!0 (_keys!4613 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) e!87269)))

(declare-fun b!133966 () Bool)

(assert (=> b!133966 (= e!87267 e!87266)))

(assert (=> b!133966 (= c!24877 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!133967 () Bool)

(assert (=> b!133967 (= e!87266 call!14774)))

(assert (= (and d!40989 (not res!64451)) b!133965))

(assert (= (and b!133965 res!64453) b!133963))

(assert (= (and b!133965 res!64452) b!133966))

(assert (= (and b!133966 c!24877) b!133964))

(assert (= (and b!133966 (not c!24877)) b!133967))

(assert (= (or b!133964 b!133967) bm!14771))

(assert (=> b!133963 m!157443))

(assert (=> b!133963 m!157443))

(declare-fun m!158633 () Bool)

(assert (=> b!133963 m!158633))

(assert (=> b!133965 m!157443))

(assert (=> b!133965 m!157443))

(assert (=> b!133965 m!157451))

(assert (=> bm!14771 m!157443))

(declare-fun m!158635 () Bool)

(assert (=> bm!14771 m!158635))

(assert (=> b!133966 m!157443))

(assert (=> b!133966 m!157443))

(assert (=> b!133966 m!157451))

(assert (=> bm!14668 d!40989))

(assert (=> b!133072 d!40791))

(assert (=> b!133072 d!40793))

(declare-fun d!40991 () Bool)

(assert (=> d!40991 (= (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69343)) (v!3203 (getValueByKey!173 (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69343)))))

(assert (=> d!40545 d!40991))

(declare-fun b!133969 () Bool)

(declare-fun e!87270 () Option!179)

(declare-fun e!87271 () Option!179)

(assert (=> b!133969 (= e!87270 e!87271)))

(declare-fun c!24879 () Bool)

(assert (=> b!133969 (= c!24879 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69343))))))

(declare-fun b!133968 () Bool)

(assert (=> b!133968 (= e!87270 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))))

(declare-fun d!40993 () Bool)

(declare-fun c!24878 () Bool)

(assert (=> d!40993 (= c!24878 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69343)))))

(assert (=> d!40993 (= (getValueByKey!173 (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69343) e!87270)))

(declare-fun b!133971 () Bool)

(assert (=> b!133971 (= e!87271 None!177)))

(declare-fun b!133970 () Bool)

(assert (=> b!133970 (= e!87271 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!69343))))

(assert (= (and d!40993 c!24878) b!133968))

(assert (= (and d!40993 (not c!24878)) b!133969))

(assert (= (and b!133969 c!24879) b!133970))

(assert (= (and b!133969 (not c!24879)) b!133971))

(declare-fun m!158637 () Bool)

(assert (=> b!133970 m!158637))

(assert (=> d!40545 d!40993))

(declare-fun d!40995 () Bool)

(declare-fun e!87273 () Bool)

(assert (=> d!40995 e!87273))

(declare-fun res!64454 () Bool)

(assert (=> d!40995 (=> res!64454 e!87273)))

(declare-fun lt!70125 () Bool)

(assert (=> d!40995 (= res!64454 (not lt!70125))))

(declare-fun lt!70126 () Bool)

(assert (=> d!40995 (= lt!70125 lt!70126)))

(declare-fun lt!70127 () Unit!4141)

(declare-fun e!87272 () Unit!4141)

(assert (=> d!40995 (= lt!70127 e!87272)))

(declare-fun c!24880 () Bool)

(assert (=> d!40995 (= c!24880 lt!70126)))

(assert (=> d!40995 (= lt!70126 (containsKey!176 (toList!842 lt!69577) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!40995 (= (contains!884 lt!69577 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) lt!70125)))

(declare-fun b!133972 () Bool)

(declare-fun lt!70128 () Unit!4141)

(assert (=> b!133972 (= e!87272 lt!70128)))

(assert (=> b!133972 (= lt!70128 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69577) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133972 (isDefined!125 (getValueByKey!173 (toList!842 lt!69577) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!133973 () Bool)

(declare-fun Unit!4191 () Unit!4141)

(assert (=> b!133973 (= e!87272 Unit!4191)))

(declare-fun b!133974 () Bool)

(assert (=> b!133974 (= e!87273 (isDefined!125 (getValueByKey!173 (toList!842 lt!69577) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!40995 c!24880) b!133972))

(assert (= (and d!40995 (not c!24880)) b!133973))

(assert (= (and d!40995 (not res!64454)) b!133974))

(assert (=> d!40995 m!156679))

(declare-fun m!158639 () Bool)

(assert (=> d!40995 m!158639))

(assert (=> b!133972 m!156679))

(declare-fun m!158641 () Bool)

(assert (=> b!133972 m!158641))

(assert (=> b!133972 m!156679))

(declare-fun m!158643 () Bool)

(assert (=> b!133972 m!158643))

(assert (=> b!133972 m!158643))

(declare-fun m!158645 () Bool)

(assert (=> b!133972 m!158645))

(assert (=> b!133974 m!156679))

(assert (=> b!133974 m!158643))

(assert (=> b!133974 m!158643))

(assert (=> b!133974 m!158645))

(assert (=> b!133111 d!40995))

(declare-fun d!40997 () Bool)

(assert (=> d!40997 (= (get!1491 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133074 d!40997))

(declare-fun d!40999 () Bool)

(declare-fun e!87275 () Bool)

(assert (=> d!40999 e!87275))

(declare-fun res!64455 () Bool)

(assert (=> d!40999 (=> res!64455 e!87275)))

(declare-fun lt!70129 () Bool)

(assert (=> d!40999 (= res!64455 (not lt!70129))))

(declare-fun lt!70130 () Bool)

(assert (=> d!40999 (= lt!70129 lt!70130)))

(declare-fun lt!70131 () Unit!4141)

(declare-fun e!87274 () Unit!4141)

(assert (=> d!40999 (= lt!70131 e!87274)))

(declare-fun c!24881 () Bool)

(assert (=> d!40999 (= c!24881 lt!70130)))

(assert (=> d!40999 (= lt!70130 (containsKey!176 (toList!842 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!40999 (= (contains!884 lt!69486 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70129)))

(declare-fun b!133975 () Bool)

(declare-fun lt!70132 () Unit!4141)

(assert (=> b!133975 (= e!87274 lt!70132)))

(assert (=> b!133975 (= lt!70132 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133975 (isDefined!125 (getValueByKey!173 (toList!842 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!133976 () Bool)

(declare-fun Unit!4192 () Unit!4141)

(assert (=> b!133976 (= e!87274 Unit!4192)))

(declare-fun b!133977 () Bool)

(assert (=> b!133977 (= e!87275 (isDefined!125 (getValueByKey!173 (toList!842 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!40999 c!24881) b!133975))

(assert (= (and d!40999 (not c!24881)) b!133976))

(assert (= (and d!40999 (not res!64455)) b!133977))

(declare-fun m!158647 () Bool)

(assert (=> d!40999 m!158647))

(declare-fun m!158649 () Bool)

(assert (=> b!133975 m!158649))

(declare-fun m!158651 () Bool)

(assert (=> b!133975 m!158651))

(assert (=> b!133975 m!158651))

(declare-fun m!158653 () Bool)

(assert (=> b!133975 m!158653))

(assert (=> b!133977 m!158651))

(assert (=> b!133977 m!158651))

(assert (=> b!133977 m!158653))

(assert (=> b!133008 d!40999))

(declare-fun d!41001 () Bool)

(declare-fun res!64456 () Bool)

(declare-fun e!87276 () Bool)

(assert (=> d!41001 (=> res!64456 e!87276)))

(assert (=> d!41001 (= res!64456 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69334)))))

(assert (=> d!41001 (= (containsKey!176 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334) e!87276)))

(declare-fun b!133978 () Bool)

(declare-fun e!87277 () Bool)

(assert (=> b!133978 (= e!87276 e!87277)))

(declare-fun res!64457 () Bool)

(assert (=> b!133978 (=> (not res!64457) (not e!87277))))

(assert (=> b!133978 (= res!64457 (and (or (not ((_ is Cons!1690) (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (bvsle (_1!1293 (h!2295 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69334)) ((_ is Cons!1690) (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) (bvslt (_1!1293 (h!2295 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69334)))))

(declare-fun b!133979 () Bool)

(assert (=> b!133979 (= e!87277 (containsKey!176 (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!69334))))

(assert (= (and d!41001 (not res!64456)) b!133978))

(assert (= (and b!133978 res!64457) b!133979))

(declare-fun m!158655 () Bool)

(assert (=> b!133979 m!158655))

(assert (=> d!40535 d!41001))

(assert (=> b!133022 d!40621))

(declare-fun b!133981 () Bool)

(declare-fun e!87278 () Option!179)

(declare-fun e!87279 () Option!179)

(assert (=> b!133981 (= e!87278 e!87279)))

(declare-fun c!24883 () Bool)

(assert (=> b!133981 (= c!24883 (and ((_ is Cons!1690) (toList!842 lt!69649)) (not (= (_1!1293 (h!2295 (toList!842 lt!69649))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!133980 () Bool)

(assert (=> b!133980 (= e!87278 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69649)))))))

(declare-fun d!41003 () Bool)

(declare-fun c!24882 () Bool)

(assert (=> d!41003 (= c!24882 (and ((_ is Cons!1690) (toList!842 lt!69649)) (= (_1!1293 (h!2295 (toList!842 lt!69649))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41003 (= (getValueByKey!173 (toList!842 lt!69649) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87278)))

(declare-fun b!133983 () Bool)

(assert (=> b!133983 (= e!87279 None!177)))

(declare-fun b!133982 () Bool)

(assert (=> b!133982 (= e!87279 (getValueByKey!173 (t!6137 (toList!842 lt!69649)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41003 c!24882) b!133980))

(assert (= (and d!41003 (not c!24882)) b!133981))

(assert (= (and b!133981 c!24883) b!133982))

(assert (= (and b!133981 (not c!24883)) b!133983))

(declare-fun m!158657 () Bool)

(assert (=> b!133982 m!158657))

(assert (=> b!133209 d!41003))

(declare-fun d!41005 () Bool)

(declare-fun e!87281 () Bool)

(assert (=> d!41005 e!87281))

(declare-fun res!64458 () Bool)

(assert (=> d!41005 (=> res!64458 e!87281)))

(declare-fun lt!70133 () Bool)

(assert (=> d!41005 (= res!64458 (not lt!70133))))

(declare-fun lt!70134 () Bool)

(assert (=> d!41005 (= lt!70133 lt!70134)))

(declare-fun lt!70135 () Unit!4141)

(declare-fun e!87280 () Unit!4141)

(assert (=> d!41005 (= lt!70135 e!87280)))

(declare-fun c!24884 () Bool)

(assert (=> d!41005 (= c!24884 lt!70134)))

(assert (=> d!41005 (= lt!70134 (containsKey!176 (toList!842 lt!69625) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!41005 (= (contains!884 lt!69625 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70133)))

(declare-fun b!133984 () Bool)

(declare-fun lt!70136 () Unit!4141)

(assert (=> b!133984 (= e!87280 lt!70136)))

(assert (=> b!133984 (= lt!70136 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69625) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> b!133984 (isDefined!125 (getValueByKey!173 (toList!842 lt!69625) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133985 () Bool)

(declare-fun Unit!4193 () Unit!4141)

(assert (=> b!133985 (= e!87280 Unit!4193)))

(declare-fun b!133986 () Bool)

(assert (=> b!133986 (= e!87281 (isDefined!125 (getValueByKey!173 (toList!842 lt!69625) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!41005 c!24884) b!133984))

(assert (= (and d!41005 (not c!24884)) b!133985))

(assert (= (and d!41005 (not res!64458)) b!133986))

(declare-fun m!158659 () Bool)

(assert (=> d!41005 m!158659))

(declare-fun m!158661 () Bool)

(assert (=> b!133984 m!158661))

(assert (=> b!133984 m!157109))

(assert (=> b!133984 m!157109))

(declare-fun m!158663 () Bool)

(assert (=> b!133984 m!158663))

(assert (=> b!133986 m!157109))

(assert (=> b!133986 m!157109))

(assert (=> b!133986 m!158663))

(assert (=> d!40537 d!41005))

(declare-fun b!133988 () Bool)

(declare-fun e!87282 () Option!179)

(declare-fun e!87283 () Option!179)

(assert (=> b!133988 (= e!87282 e!87283)))

(declare-fun c!24886 () Bool)

(assert (=> b!133988 (= c!24886 (and ((_ is Cons!1690) lt!69626) (not (= (_1!1293 (h!2295 lt!69626)) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!133987 () Bool)

(assert (=> b!133987 (= e!87282 (Some!178 (_2!1293 (h!2295 lt!69626))))))

(declare-fun d!41007 () Bool)

(declare-fun c!24885 () Bool)

(assert (=> d!41007 (= c!24885 (and ((_ is Cons!1690) lt!69626) (= (_1!1293 (h!2295 lt!69626)) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41007 (= (getValueByKey!173 lt!69626 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87282)))

(declare-fun b!133990 () Bool)

(assert (=> b!133990 (= e!87283 None!177)))

(declare-fun b!133989 () Bool)

(assert (=> b!133989 (= e!87283 (getValueByKey!173 (t!6137 lt!69626) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41007 c!24885) b!133987))

(assert (= (and d!41007 (not c!24885)) b!133988))

(assert (= (and b!133988 c!24886) b!133989))

(assert (= (and b!133988 (not c!24886)) b!133990))

(declare-fun m!158665 () Bool)

(assert (=> b!133989 m!158665))

(assert (=> d!40537 d!41007))

(declare-fun d!41009 () Bool)

(assert (=> d!41009 (= (getValueByKey!173 lt!69626 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun lt!70137 () Unit!4141)

(assert (=> d!41009 (= lt!70137 (choose!833 lt!69626 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun e!87284 () Bool)

(assert (=> d!41009 e!87284))

(declare-fun res!64459 () Bool)

(assert (=> d!41009 (=> (not res!64459) (not e!87284))))

(assert (=> d!41009 (= res!64459 (isStrictlySorted!309 lt!69626))))

(assert (=> d!41009 (= (lemmaContainsTupThenGetReturnValue!88 lt!69626 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70137)))

(declare-fun b!133991 () Bool)

(declare-fun res!64460 () Bool)

(assert (=> b!133991 (=> (not res!64460) (not e!87284))))

(assert (=> b!133991 (= res!64460 (containsKey!176 lt!69626 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133992 () Bool)

(assert (=> b!133992 (= e!87284 (contains!886 lt!69626 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!41009 res!64459) b!133991))

(assert (= (and b!133991 res!64460) b!133992))

(assert (=> d!41009 m!157103))

(declare-fun m!158667 () Bool)

(assert (=> d!41009 m!158667))

(declare-fun m!158669 () Bool)

(assert (=> d!41009 m!158669))

(declare-fun m!158671 () Bool)

(assert (=> b!133991 m!158671))

(declare-fun m!158673 () Bool)

(assert (=> b!133992 m!158673))

(assert (=> d!40537 d!41009))

(declare-fun b!133993 () Bool)

(declare-fun res!64461 () Bool)

(declare-fun e!87289 () Bool)

(assert (=> b!133993 (=> (not res!64461) (not e!87289))))

(declare-fun lt!70138 () List!1694)

(assert (=> b!133993 (= res!64461 (containsKey!176 lt!70138 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!133994 () Bool)

(declare-fun e!87287 () List!1694)

(declare-fun e!87288 () List!1694)

(assert (=> b!133994 (= e!87287 e!87288)))

(declare-fun c!24890 () Bool)

(assert (=> b!133994 (= c!24890 (and ((_ is Cons!1690) (toList!842 lt!69341)) (= (_1!1293 (h!2295 (toList!842 lt!69341))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun bm!14772 () Bool)

(declare-fun call!14776 () List!1694)

(declare-fun call!14775 () List!1694)

(assert (=> bm!14772 (= call!14776 call!14775)))

(declare-fun b!133995 () Bool)

(declare-fun e!87285 () List!1694)

(assert (=> b!133995 (= e!87285 call!14776)))

(declare-fun c!24889 () Bool)

(declare-fun b!133996 () Bool)

(assert (=> b!133996 (= c!24889 (and ((_ is Cons!1690) (toList!842 lt!69341)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69341))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> b!133996 (= e!87288 e!87285)))

(declare-fun b!133997 () Bool)

(assert (=> b!133997 (= e!87289 (contains!886 lt!70138 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!133998 () Bool)

(assert (=> b!133998 (= e!87288 call!14775)))

(declare-fun d!41011 () Bool)

(assert (=> d!41011 e!87289))

(declare-fun res!64462 () Bool)

(assert (=> d!41011 (=> (not res!64462) (not e!87289))))

(assert (=> d!41011 (= res!64462 (isStrictlySorted!309 lt!70138))))

(assert (=> d!41011 (= lt!70138 e!87287)))

(declare-fun c!24888 () Bool)

(assert (=> d!41011 (= c!24888 (and ((_ is Cons!1690) (toList!842 lt!69341)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69341))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41011 (isStrictlySorted!309 (toList!842 lt!69341))))

(assert (=> d!41011 (= (insertStrictlySorted!91 (toList!842 lt!69341) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70138)))

(declare-fun b!133999 () Bool)

(declare-fun e!87286 () List!1694)

(assert (=> b!133999 (= e!87286 (ite c!24890 (t!6137 (toList!842 lt!69341)) (ite c!24889 (Cons!1690 (h!2295 (toList!842 lt!69341)) (t!6137 (toList!842 lt!69341))) Nil!1691)))))

(declare-fun b!134000 () Bool)

(declare-fun call!14777 () List!1694)

(assert (=> b!134000 (= e!87287 call!14777)))

(declare-fun b!134001 () Bool)

(assert (=> b!134001 (= e!87285 call!14776)))

(declare-fun b!134002 () Bool)

(assert (=> b!134002 (= e!87286 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69341)) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun bm!14773 () Bool)

(assert (=> bm!14773 (= call!14775 call!14777)))

(declare-fun bm!14774 () Bool)

(assert (=> bm!14774 (= call!14777 ($colon$colon!91 e!87286 (ite c!24888 (h!2295 (toList!842 lt!69341)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun c!24887 () Bool)

(assert (=> bm!14774 (= c!24887 c!24888)))

(assert (= (and d!41011 c!24888) b!134000))

(assert (= (and d!41011 (not c!24888)) b!133994))

(assert (= (and b!133994 c!24890) b!133998))

(assert (= (and b!133994 (not c!24890)) b!133996))

(assert (= (and b!133996 c!24889) b!134001))

(assert (= (and b!133996 (not c!24889)) b!133995))

(assert (= (or b!134001 b!133995) bm!14772))

(assert (= (or b!133998 bm!14772) bm!14773))

(assert (= (or b!134000 bm!14773) bm!14774))

(assert (= (and bm!14774 c!24887) b!134002))

(assert (= (and bm!14774 (not c!24887)) b!133999))

(assert (= (and d!41011 res!64462) b!133993))

(assert (= (and b!133993 res!64461) b!133997))

(declare-fun m!158675 () Bool)

(assert (=> b!133997 m!158675))

(declare-fun m!158677 () Bool)

(assert (=> b!134002 m!158677))

(declare-fun m!158679 () Bool)

(assert (=> bm!14774 m!158679))

(declare-fun m!158681 () Bool)

(assert (=> b!133993 m!158681))

(declare-fun m!158683 () Bool)

(assert (=> d!41011 m!158683))

(declare-fun m!158685 () Bool)

(assert (=> d!41011 m!158685))

(assert (=> d!40537 d!41011))

(declare-fun d!41013 () Bool)

(declare-fun lt!70139 () (_ BitVec 32))

(assert (=> d!41013 (and (bvsge lt!70139 #b00000000000000000000000000000000) (bvsle lt!70139 (bvsub (size!2521 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(declare-fun e!87290 () (_ BitVec 32))

(assert (=> d!41013 (= lt!70139 e!87290)))

(declare-fun c!24891 () Bool)

(assert (=> d!41013 (= c!24891 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(assert (=> d!41013 (and (bvsle #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2521 (_keys!4613 (_2!1294 lt!69280))) (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(assert (=> d!41013 (= (arrayCountValidKeys!0 (_keys!4613 (_2!1294 lt!69280)) #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))) lt!70139)))

(declare-fun b!134003 () Bool)

(declare-fun e!87291 () (_ BitVec 32))

(declare-fun call!14778 () (_ BitVec 32))

(assert (=> b!134003 (= e!87291 (bvadd #b00000000000000000000000000000001 call!14778))))

(declare-fun b!134004 () Bool)

(assert (=> b!134004 (= e!87291 call!14778)))

(declare-fun b!134005 () Bool)

(assert (=> b!134005 (= e!87290 e!87291)))

(declare-fun c!24892 () Bool)

(assert (=> b!134005 (= c!24892 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(declare-fun bm!14775 () Bool)

(assert (=> bm!14775 (= call!14778 (arrayCountValidKeys!0 (_keys!4613 (_2!1294 lt!69280)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(declare-fun b!134006 () Bool)

(assert (=> b!134006 (= e!87290 #b00000000000000000000000000000000)))

(assert (= (and d!41013 c!24891) b!134006))

(assert (= (and d!41013 (not c!24891)) b!134005))

(assert (= (and b!134005 c!24892) b!134003))

(assert (= (and b!134005 (not c!24892)) b!134004))

(assert (= (or b!134003 b!134004) bm!14775))

(assert (=> b!134005 m!157455))

(assert (=> b!134005 m!157455))

(assert (=> b!134005 m!157457))

(declare-fun m!158687 () Bool)

(assert (=> bm!14775 m!158687))

(assert (=> b!133046 d!41013))

(declare-fun b!134009 () Bool)

(declare-fun res!64464 () Bool)

(declare-fun e!87292 () Bool)

(assert (=> b!134009 (=> (not res!64464) (not e!87292))))

(assert (=> b!134009 (= res!64464 (= (size!2527 (v!3198 (underlying!454 thiss!992))) (bvadd (_size!597 (v!3198 (underlying!454 thiss!992))) (bvsdiv (bvadd (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!134007 () Bool)

(declare-fun res!64465 () Bool)

(assert (=> b!134007 (=> (not res!64465) (not e!87292))))

(assert (=> b!134007 (= res!64465 (and (= (size!2522 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000001)) (= (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (size!2522 (_values!2847 (v!3198 (underlying!454 thiss!992))))) (bvsge (_size!597 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!597 (v!3198 (underlying!454 thiss!992))) (bvadd (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun d!41015 () Bool)

(declare-fun res!64466 () Bool)

(assert (=> d!41015 (=> (not res!64466) (not e!87292))))

(assert (=> d!41015 (= res!64466 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(assert (=> d!41015 (= (simpleValid!92 (v!3198 (underlying!454 thiss!992))) e!87292)))

(declare-fun b!134010 () Bool)

(assert (=> b!134010 (= e!87292 (and (bvsge (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!597 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!134008 () Bool)

(declare-fun res!64463 () Bool)

(assert (=> b!134008 (=> (not res!64463) (not e!87292))))

(assert (=> b!134008 (= res!64463 (bvsge (size!2527 (v!3198 (underlying!454 thiss!992))) (_size!597 (v!3198 (underlying!454 thiss!992)))))))

(assert (= (and d!41015 res!64466) b!134007))

(assert (= (and b!134007 res!64465) b!134008))

(assert (= (and b!134008 res!64463) b!134009))

(assert (= (and b!134009 res!64464) b!134010))

(declare-fun m!158689 () Bool)

(assert (=> b!134009 m!158689))

(assert (=> d!41015 m!156405))

(assert (=> b!134008 m!158689))

(assert (=> d!40563 d!41015))

(declare-fun d!41017 () Bool)

(assert (=> d!41017 (isDefined!125 (getValueByKey!173 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70140 () Unit!4141)

(assert (=> d!41017 (= lt!70140 (choose!831 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87293 () Bool)

(assert (=> d!41017 e!87293))

(declare-fun res!64467 () Bool)

(assert (=> d!41017 (=> (not res!64467) (not e!87293))))

(assert (=> d!41017 (= res!64467 (isStrictlySorted!309 (toList!842 lt!69344)))))

(assert (=> d!41017 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70140)))

(declare-fun b!134011 () Bool)

(assert (=> b!134011 (= e!87293 (containsKey!176 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41017 res!64467) b!134011))

(assert (=> d!41017 m!157055))

(assert (=> d!41017 m!157055))

(assert (=> d!41017 m!157221))

(declare-fun m!158691 () Bool)

(assert (=> d!41017 m!158691))

(assert (=> d!41017 m!157431))

(assert (=> b!134011 m!157217))

(assert (=> b!133226 d!41017))

(assert (=> b!133226 d!40845))

(assert (=> b!133226 d!40807))

(declare-fun d!41019 () Bool)

(declare-fun e!87294 () Bool)

(assert (=> d!41019 e!87294))

(declare-fun res!64469 () Bool)

(assert (=> d!41019 (=> (not res!64469) (not e!87294))))

(declare-fun lt!70143 () ListLongMap!1653)

(assert (=> d!41019 (= res!64469 (contains!884 lt!70143 (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun lt!70144 () List!1694)

(assert (=> d!41019 (= lt!70143 (ListLongMap!1654 lt!70144))))

(declare-fun lt!70141 () Unit!4141)

(declare-fun lt!70142 () Unit!4141)

(assert (=> d!41019 (= lt!70141 lt!70142)))

(assert (=> d!41019 (= (getValueByKey!173 lt!70144 (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!41019 (= lt!70142 (lemmaContainsTupThenGetReturnValue!88 lt!70144 (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!41019 (= lt!70144 (insertStrictlySorted!91 (toList!842 lt!69574) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!41019 (= (+!169 lt!69574 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!70143)))

(declare-fun b!134012 () Bool)

(declare-fun res!64468 () Bool)

(assert (=> b!134012 (=> (not res!64468) (not e!87294))))

(assert (=> b!134012 (= res!64468 (= (getValueByKey!173 (toList!842 lt!70143) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!134013 () Bool)

(assert (=> b!134013 (= e!87294 (contains!886 (toList!842 lt!70143) (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(assert (= (and d!41019 res!64469) b!134012))

(assert (= (and b!134012 res!64468) b!134013))

(declare-fun m!158693 () Bool)

(assert (=> d!41019 m!158693))

(declare-fun m!158695 () Bool)

(assert (=> d!41019 m!158695))

(declare-fun m!158697 () Bool)

(assert (=> d!41019 m!158697))

(declare-fun m!158699 () Bool)

(assert (=> d!41019 m!158699))

(declare-fun m!158701 () Bool)

(assert (=> b!134012 m!158701))

(declare-fun m!158703 () Bool)

(assert (=> b!134013 m!158703))

(assert (=> b!133099 d!41019))

(declare-fun d!41021 () Bool)

(assert (=> d!41021 (= (apply!116 (+!169 lt!69586 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))) lt!69571) (apply!116 lt!69586 lt!69571))))

(declare-fun lt!70145 () Unit!4141)

(assert (=> d!41021 (= lt!70145 (choose!828 lt!69586 lt!69575 (zeroValue!2719 newMap!16) lt!69571))))

(declare-fun e!87295 () Bool)

(assert (=> d!41021 e!87295))

(declare-fun res!64470 () Bool)

(assert (=> d!41021 (=> (not res!64470) (not e!87295))))

(assert (=> d!41021 (= res!64470 (contains!884 lt!69586 lt!69571))))

(assert (=> d!41021 (= (addApplyDifferent!92 lt!69586 lt!69575 (zeroValue!2719 newMap!16) lt!69571) lt!70145)))

(declare-fun b!134014 () Bool)

(assert (=> b!134014 (= e!87295 (not (= lt!69571 lt!69575)))))

(assert (= (and d!41021 res!64470) b!134014))

(assert (=> d!41021 m!156969))

(assert (=> d!41021 m!156993))

(assert (=> d!41021 m!156973))

(declare-fun m!158705 () Bool)

(assert (=> d!41021 m!158705))

(declare-fun m!158707 () Bool)

(assert (=> d!41021 m!158707))

(assert (=> d!41021 m!156969))

(assert (=> b!133099 d!41021))

(declare-fun d!41023 () Bool)

(assert (=> d!41023 (= (apply!116 (+!169 lt!69586 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))) lt!69571) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69586 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))) lt!69571)))))

(declare-fun bs!5566 () Bool)

(assert (= bs!5566 d!41023))

(declare-fun m!158709 () Bool)

(assert (=> bs!5566 m!158709))

(assert (=> bs!5566 m!158709))

(declare-fun m!158711 () Bool)

(assert (=> bs!5566 m!158711))

(assert (=> b!133099 d!41023))

(assert (=> b!133099 d!40873))

(declare-fun d!41025 () Bool)

(assert (=> d!41025 (= (apply!116 lt!69572 lt!69578) (get!1492 (getValueByKey!173 (toList!842 lt!69572) lt!69578)))))

(declare-fun bs!5567 () Bool)

(assert (= bs!5567 d!41025))

(declare-fun m!158713 () Bool)

(assert (=> bs!5567 m!158713))

(assert (=> bs!5567 m!158713))

(declare-fun m!158715 () Bool)

(assert (=> bs!5567 m!158715))

(assert (=> b!133099 d!41025))

(declare-fun d!41027 () Bool)

(assert (=> d!41027 (= (apply!116 lt!69586 lt!69571) (get!1492 (getValueByKey!173 (toList!842 lt!69586) lt!69571)))))

(declare-fun bs!5568 () Bool)

(assert (= bs!5568 d!41027))

(declare-fun m!158717 () Bool)

(assert (=> bs!5568 m!158717))

(assert (=> bs!5568 m!158717))

(declare-fun m!158719 () Bool)

(assert (=> bs!5568 m!158719))

(assert (=> b!133099 d!41027))

(declare-fun d!41029 () Bool)

(assert (=> d!41029 (= (apply!116 lt!69574 lt!69576) (get!1492 (getValueByKey!173 (toList!842 lt!69574) lt!69576)))))

(declare-fun bs!5569 () Bool)

(assert (= bs!5569 d!41029))

(declare-fun m!158721 () Bool)

(assert (=> bs!5569 m!158721))

(assert (=> bs!5569 m!158721))

(declare-fun m!158723 () Bool)

(assert (=> bs!5569 m!158723))

(assert (=> b!133099 d!41029))

(declare-fun d!41031 () Bool)

(declare-fun e!87296 () Bool)

(assert (=> d!41031 e!87296))

(declare-fun res!64472 () Bool)

(assert (=> d!41031 (=> (not res!64472) (not e!87296))))

(declare-fun lt!70148 () ListLongMap!1653)

(assert (=> d!41031 (= res!64472 (contains!884 lt!70148 (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70149 () List!1694)

(assert (=> d!41031 (= lt!70148 (ListLongMap!1654 lt!70149))))

(declare-fun lt!70146 () Unit!4141)

(declare-fun lt!70147 () Unit!4141)

(assert (=> d!41031 (= lt!70146 lt!70147)))

(assert (=> d!41031 (= (getValueByKey!173 lt!70149 (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41031 (= lt!70147 (lemmaContainsTupThenGetReturnValue!88 lt!70149 (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41031 (= lt!70149 (insertStrictlySorted!91 (toList!842 lt!69586) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41031 (= (+!169 lt!69586 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))) lt!70148)))

(declare-fun b!134015 () Bool)

(declare-fun res!64471 () Bool)

(assert (=> b!134015 (=> (not res!64471) (not e!87296))))

(assert (=> b!134015 (= res!64471 (= (getValueByKey!173 (toList!842 lt!70148) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134016 () Bool)

(assert (=> b!134016 (= e!87296 (contains!886 (toList!842 lt!70148) (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41031 res!64472) b!134015))

(assert (= (and b!134015 res!64471) b!134016))

(declare-fun m!158725 () Bool)

(assert (=> d!41031 m!158725))

(declare-fun m!158727 () Bool)

(assert (=> d!41031 m!158727))

(declare-fun m!158729 () Bool)

(assert (=> d!41031 m!158729))

(declare-fun m!158731 () Bool)

(assert (=> d!41031 m!158731))

(declare-fun m!158733 () Bool)

(assert (=> b!134015 m!158733))

(declare-fun m!158735 () Bool)

(assert (=> b!134016 m!158735))

(assert (=> b!133099 d!41031))

(declare-fun d!41033 () Bool)

(assert (=> d!41033 (= (apply!116 (+!169 lt!69574 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69576) (apply!116 lt!69574 lt!69576))))

(declare-fun lt!70150 () Unit!4141)

(assert (=> d!41033 (= lt!70150 (choose!828 lt!69574 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69576))))

(declare-fun e!87297 () Bool)

(assert (=> d!41033 e!87297))

(declare-fun res!64473 () Bool)

(assert (=> d!41033 (=> (not res!64473) (not e!87297))))

(assert (=> d!41033 (= res!64473 (contains!884 lt!69574 lt!69576))))

(assert (=> d!41033 (= (addApplyDifferent!92 lt!69574 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69576) lt!70150)))

(declare-fun b!134017 () Bool)

(assert (=> b!134017 (= e!87297 (not (= lt!69576 lt!69566)))))

(assert (= (and d!41033 res!64473) b!134017))

(assert (=> d!41033 m!156971))

(assert (=> d!41033 m!156985))

(assert (=> d!41033 m!156967))

(declare-fun m!158737 () Bool)

(assert (=> d!41033 m!158737))

(declare-fun m!158739 () Bool)

(assert (=> d!41033 m!158739))

(assert (=> d!41033 m!156971))

(assert (=> b!133099 d!41033))

(declare-fun d!41035 () Bool)

(declare-fun e!87298 () Bool)

(assert (=> d!41035 e!87298))

(declare-fun res!64475 () Bool)

(assert (=> d!41035 (=> (not res!64475) (not e!87298))))

(declare-fun lt!70153 () ListLongMap!1653)

(assert (=> d!41035 (= res!64475 (contains!884 lt!70153 (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun lt!70154 () List!1694)

(assert (=> d!41035 (= lt!70153 (ListLongMap!1654 lt!70154))))

(declare-fun lt!70151 () Unit!4141)

(declare-fun lt!70152 () Unit!4141)

(assert (=> d!41035 (= lt!70151 lt!70152)))

(assert (=> d!41035 (= (getValueByKey!173 lt!70154 (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!41035 (= lt!70152 (lemmaContainsTupThenGetReturnValue!88 lt!70154 (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!41035 (= lt!70154 (insertStrictlySorted!91 (toList!842 lt!69572) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!41035 (= (+!169 lt!69572 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!70153)))

(declare-fun b!134018 () Bool)

(declare-fun res!64474 () Bool)

(assert (=> b!134018 (=> (not res!64474) (not e!87298))))

(assert (=> b!134018 (= res!64474 (= (getValueByKey!173 (toList!842 lt!70153) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!134019 () Bool)

(assert (=> b!134019 (= e!87298 (contains!886 (toList!842 lt!70153) (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(assert (= (and d!41035 res!64475) b!134018))

(assert (= (and b!134018 res!64474) b!134019))

(declare-fun m!158741 () Bool)

(assert (=> d!41035 m!158741))

(declare-fun m!158743 () Bool)

(assert (=> d!41035 m!158743))

(declare-fun m!158745 () Bool)

(assert (=> d!41035 m!158745))

(declare-fun m!158747 () Bool)

(assert (=> d!41035 m!158747))

(declare-fun m!158749 () Bool)

(assert (=> b!134018 m!158749))

(declare-fun m!158751 () Bool)

(assert (=> b!134019 m!158751))

(assert (=> b!133099 d!41035))

(declare-fun d!41037 () Bool)

(declare-fun e!87299 () Bool)

(assert (=> d!41037 e!87299))

(declare-fun res!64477 () Bool)

(assert (=> d!41037 (=> (not res!64477) (not e!87299))))

(declare-fun lt!70157 () ListLongMap!1653)

(assert (=> d!41037 (= res!64477 (contains!884 lt!70157 (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70158 () List!1694)

(assert (=> d!41037 (= lt!70157 (ListLongMap!1654 lt!70158))))

(declare-fun lt!70155 () Unit!4141)

(declare-fun lt!70156 () Unit!4141)

(assert (=> d!41037 (= lt!70155 lt!70156)))

(assert (=> d!41037 (= (getValueByKey!173 lt!70158 (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41037 (= lt!70156 (lemmaContainsTupThenGetReturnValue!88 lt!70158 (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41037 (= lt!70158 (insertStrictlySorted!91 (toList!842 lt!69568) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41037 (= (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))) lt!70157)))

(declare-fun b!134020 () Bool)

(declare-fun res!64476 () Bool)

(assert (=> b!134020 (=> (not res!64476) (not e!87299))))

(assert (=> b!134020 (= res!64476 (= (getValueByKey!173 (toList!842 lt!70157) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134021 () Bool)

(assert (=> b!134021 (= e!87299 (contains!886 (toList!842 lt!70157) (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41037 res!64477) b!134020))

(assert (= (and b!134020 res!64476) b!134021))

(declare-fun m!158753 () Bool)

(assert (=> d!41037 m!158753))

(declare-fun m!158755 () Bool)

(assert (=> d!41037 m!158755))

(declare-fun m!158757 () Bool)

(assert (=> d!41037 m!158757))

(declare-fun m!158759 () Bool)

(assert (=> d!41037 m!158759))

(declare-fun m!158761 () Bool)

(assert (=> b!134020 m!158761))

(declare-fun m!158763 () Bool)

(assert (=> b!134021 m!158763))

(assert (=> b!133099 d!41037))

(declare-fun d!41039 () Bool)

(assert (=> d!41039 (contains!884 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))) lt!69567)))

(declare-fun lt!70159 () Unit!4141)

(assert (=> d!41039 (= lt!70159 (choose!829 lt!69568 lt!69583 (zeroValue!2719 newMap!16) lt!69567))))

(assert (=> d!41039 (contains!884 lt!69568 lt!69567)))

(assert (=> d!41039 (= (addStillContains!92 lt!69568 lt!69583 (zeroValue!2719 newMap!16) lt!69567) lt!70159)))

(declare-fun bs!5570 () Bool)

(assert (= bs!5570 d!41039))

(assert (=> bs!5570 m!156989))

(assert (=> bs!5570 m!156989))

(assert (=> bs!5570 m!156991))

(declare-fun m!158765 () Bool)

(assert (=> bs!5570 m!158765))

(declare-fun m!158767 () Bool)

(assert (=> bs!5570 m!158767))

(assert (=> b!133099 d!41039))

(declare-fun d!41041 () Bool)

(assert (=> d!41041 (= (apply!116 (+!169 lt!69574 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69576) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69574 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69576)))))

(declare-fun bs!5571 () Bool)

(assert (= bs!5571 d!41041))

(declare-fun m!158769 () Bool)

(assert (=> bs!5571 m!158769))

(assert (=> bs!5571 m!158769))

(declare-fun m!158771 () Bool)

(assert (=> bs!5571 m!158771))

(assert (=> b!133099 d!41041))

(declare-fun d!41043 () Bool)

(assert (=> d!41043 (= (apply!116 (+!169 lt!69572 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69578) (apply!116 lt!69572 lt!69578))))

(declare-fun lt!70160 () Unit!4141)

(assert (=> d!41043 (= lt!70160 (choose!828 lt!69572 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69578))))

(declare-fun e!87300 () Bool)

(assert (=> d!41043 e!87300))

(declare-fun res!64478 () Bool)

(assert (=> d!41043 (=> (not res!64478) (not e!87300))))

(assert (=> d!41043 (= res!64478 (contains!884 lt!69572 lt!69578))))

(assert (=> d!41043 (= (addApplyDifferent!92 lt!69572 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69578) lt!70160)))

(declare-fun b!134022 () Bool)

(assert (=> b!134022 (= e!87300 (not (= lt!69578 lt!69570)))))

(assert (= (and d!41043 res!64478) b!134022))

(assert (=> d!41043 m!156977))

(assert (=> d!41043 m!156979))

(assert (=> d!41043 m!156963))

(declare-fun m!158773 () Bool)

(assert (=> d!41043 m!158773))

(declare-fun m!158775 () Bool)

(assert (=> d!41043 m!158775))

(assert (=> d!41043 m!156977))

(assert (=> b!133099 d!41043))

(declare-fun d!41045 () Bool)

(assert (=> d!41045 (= (apply!116 (+!169 lt!69572 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69578) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69572 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69578)))))

(declare-fun bs!5572 () Bool)

(assert (= bs!5572 d!41045))

(declare-fun m!158777 () Bool)

(assert (=> bs!5572 m!158777))

(assert (=> bs!5572 m!158777))

(declare-fun m!158779 () Bool)

(assert (=> bs!5572 m!158779))

(assert (=> b!133099 d!41045))

(declare-fun d!41047 () Bool)

(declare-fun e!87302 () Bool)

(assert (=> d!41047 e!87302))

(declare-fun res!64479 () Bool)

(assert (=> d!41047 (=> res!64479 e!87302)))

(declare-fun lt!70161 () Bool)

(assert (=> d!41047 (= res!64479 (not lt!70161))))

(declare-fun lt!70162 () Bool)

(assert (=> d!41047 (= lt!70161 lt!70162)))

(declare-fun lt!70163 () Unit!4141)

(declare-fun e!87301 () Unit!4141)

(assert (=> d!41047 (= lt!70163 e!87301)))

(declare-fun c!24893 () Bool)

(assert (=> d!41047 (= c!24893 lt!70162)))

(assert (=> d!41047 (= lt!70162 (containsKey!176 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) lt!69567))))

(assert (=> d!41047 (= (contains!884 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))) lt!69567) lt!70161)))

(declare-fun b!134023 () Bool)

(declare-fun lt!70164 () Unit!4141)

(assert (=> b!134023 (= e!87301 lt!70164)))

(assert (=> b!134023 (= lt!70164 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) lt!69567))))

(assert (=> b!134023 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) lt!69567))))

(declare-fun b!134024 () Bool)

(declare-fun Unit!4194 () Unit!4141)

(assert (=> b!134024 (= e!87301 Unit!4194)))

(declare-fun b!134025 () Bool)

(assert (=> b!134025 (= e!87302 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) lt!69567)))))

(assert (= (and d!41047 c!24893) b!134023))

(assert (= (and d!41047 (not c!24893)) b!134024))

(assert (= (and d!41047 (not res!64479)) b!134025))

(declare-fun m!158781 () Bool)

(assert (=> d!41047 m!158781))

(declare-fun m!158783 () Bool)

(assert (=> b!134023 m!158783))

(declare-fun m!158785 () Bool)

(assert (=> b!134023 m!158785))

(assert (=> b!134023 m!158785))

(declare-fun m!158787 () Bool)

(assert (=> b!134023 m!158787))

(assert (=> b!134025 m!158785))

(assert (=> b!134025 m!158785))

(assert (=> b!134025 m!158787))

(assert (=> b!133099 d!41047))

(declare-fun d!41049 () Bool)

(assert (=> d!41049 (= (get!1492 (getValueByKey!173 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!173 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40473 d!41049))

(assert (=> d!40473 d!40643))

(assert (=> bm!14644 d!40593))

(declare-fun b!134027 () Bool)

(declare-fun e!87303 () Option!179)

(declare-fun e!87304 () Option!179)

(assert (=> b!134027 (= e!87303 e!87304)))

(declare-fun c!24895 () Bool)

(assert (=> b!134027 (= c!24895 (and ((_ is Cons!1690) (toList!842 lt!69605)) (not (= (_1!1293 (h!2295 (toList!842 lt!69605))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))))

(declare-fun b!134026 () Bool)

(assert (=> b!134026 (= e!87303 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69605)))))))

(declare-fun d!41051 () Bool)

(declare-fun c!24894 () Bool)

(assert (=> d!41051 (= c!24894 (and ((_ is Cons!1690) (toList!842 lt!69605)) (= (_1!1293 (h!2295 (toList!842 lt!69605))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (=> d!41051 (= (getValueByKey!173 (toList!842 lt!69605) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) e!87303)))

(declare-fun b!134029 () Bool)

(assert (=> b!134029 (= e!87304 None!177)))

(declare-fun b!134028 () Bool)

(assert (=> b!134028 (= e!87304 (getValueByKey!173 (t!6137 (toList!842 lt!69605)) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!41051 c!24894) b!134026))

(assert (= (and d!41051 (not c!24894)) b!134027))

(assert (= (and b!134027 c!24895) b!134028))

(assert (= (and b!134027 (not c!24895)) b!134029))

(declare-fun m!158789 () Bool)

(assert (=> b!134028 m!158789))

(assert (=> b!133156 d!41051))

(assert (=> b!133121 d!40779))

(declare-fun d!41053 () Bool)

(assert (=> d!41053 (= (apply!116 lt!69577 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1492 (getValueByKey!173 (toList!842 lt!69577) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5573 () Bool)

(assert (= bs!5573 d!41053))

(assert (=> bs!5573 m!156679))

(assert (=> bs!5573 m!158643))

(assert (=> bs!5573 m!158643))

(declare-fun m!158791 () Bool)

(assert (=> bs!5573 m!158791))

(assert (=> b!133107 d!41053))

(declare-fun d!41055 () Bool)

(declare-fun c!24896 () Bool)

(assert (=> d!41055 (= c!24896 ((_ is ValueCellFull!1094) (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!87305 () V!3481)

(assert (=> d!41055 (= (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87305)))

(declare-fun b!134030 () Bool)

(assert (=> b!134030 (= e!87305 (get!1490 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134031 () Bool)

(assert (=> b!134031 (= e!87305 (get!1491 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41055 c!24896) b!134030))

(assert (= (and d!41055 (not c!24896)) b!134031))

(assert (=> b!134030 m!156995))

(assert (=> b!134030 m!156809))

(declare-fun m!158793 () Bool)

(assert (=> b!134030 m!158793))

(assert (=> b!134031 m!156995))

(assert (=> b!134031 m!156809))

(declare-fun m!158795 () Bool)

(assert (=> b!134031 m!158795))

(assert (=> b!133107 d!41055))

(declare-fun d!41057 () Bool)

(assert (=> d!41057 (isDefined!125 (getValueByKey!173 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!70165 () Unit!4141)

(assert (=> d!41057 (= lt!70165 (choose!831 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!87306 () Bool)

(assert (=> d!41057 e!87306))

(declare-fun res!64480 () Bool)

(assert (=> d!41057 (=> (not res!64480) (not e!87306))))

(assert (=> d!41057 (= res!64480 (isStrictlySorted!309 (toList!842 lt!69344)))))

(assert (=> d!41057 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!70165)))

(declare-fun b!134032 () Bool)

(assert (=> b!134032 (= e!87306 (containsKey!176 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!41057 res!64480) b!134032))

(assert (=> d!41057 m!156581))

(assert (=> d!41057 m!156909))

(assert (=> d!41057 m!156909))

(assert (=> d!41057 m!156933))

(assert (=> d!41057 m!156581))

(declare-fun m!158797 () Bool)

(assert (=> d!41057 m!158797))

(assert (=> d!41057 m!157431))

(assert (=> b!134032 m!156581))

(assert (=> b!134032 m!156929))

(assert (=> b!133077 d!41057))

(assert (=> b!133077 d!40775))

(assert (=> b!133077 d!40777))

(declare-fun d!41059 () Bool)

(assert (not d!41059))

(assert (=> b!133045 d!41059))

(declare-fun d!41061 () Bool)

(declare-fun e!87308 () Bool)

(assert (=> d!41061 e!87308))

(declare-fun res!64481 () Bool)

(assert (=> d!41061 (=> res!64481 e!87308)))

(declare-fun lt!70166 () Bool)

(assert (=> d!41061 (= res!64481 (not lt!70166))))

(declare-fun lt!70167 () Bool)

(assert (=> d!41061 (= lt!70166 lt!70167)))

(declare-fun lt!70168 () Unit!4141)

(declare-fun e!87307 () Unit!4141)

(assert (=> d!41061 (= lt!70168 e!87307)))

(declare-fun c!24897 () Bool)

(assert (=> d!41061 (= c!24897 lt!70167)))

(assert (=> d!41061 (= lt!70167 (containsKey!176 (toList!842 lt!69605) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41061 (= (contains!884 lt!69605 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!70166)))

(declare-fun b!134033 () Bool)

(declare-fun lt!70169 () Unit!4141)

(assert (=> b!134033 (= e!87307 lt!70169)))

(assert (=> b!134033 (= lt!70169 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69605) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> b!134033 (isDefined!125 (getValueByKey!173 (toList!842 lt!69605) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134034 () Bool)

(declare-fun Unit!4195 () Unit!4141)

(assert (=> b!134034 (= e!87307 Unit!4195)))

(declare-fun b!134035 () Bool)

(assert (=> b!134035 (= e!87308 (isDefined!125 (getValueByKey!173 (toList!842 lt!69605) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (= (and d!41061 c!24897) b!134033))

(assert (= (and d!41061 (not c!24897)) b!134034))

(assert (= (and d!41061 (not res!64481)) b!134035))

(declare-fun m!158799 () Bool)

(assert (=> d!41061 m!158799))

(declare-fun m!158801 () Bool)

(assert (=> b!134033 m!158801))

(assert (=> b!134033 m!157073))

(assert (=> b!134033 m!157073))

(declare-fun m!158803 () Bool)

(assert (=> b!134033 m!158803))

(assert (=> b!134035 m!157073))

(assert (=> b!134035 m!157073))

(assert (=> b!134035 m!158803))

(assert (=> d!40527 d!41061))

(declare-fun b!134037 () Bool)

(declare-fun e!87309 () Option!179)

(declare-fun e!87310 () Option!179)

(assert (=> b!134037 (= e!87309 e!87310)))

(declare-fun c!24899 () Bool)

(assert (=> b!134037 (= c!24899 (and ((_ is Cons!1690) lt!69606) (not (= (_1!1293 (h!2295 lt!69606)) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))))

(declare-fun b!134036 () Bool)

(assert (=> b!134036 (= e!87309 (Some!178 (_2!1293 (h!2295 lt!69606))))))

(declare-fun d!41063 () Bool)

(declare-fun c!24898 () Bool)

(assert (=> d!41063 (= c!24898 (and ((_ is Cons!1690) lt!69606) (= (_1!1293 (h!2295 lt!69606)) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (=> d!41063 (= (getValueByKey!173 lt!69606 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) e!87309)))

(declare-fun b!134039 () Bool)

(assert (=> b!134039 (= e!87310 None!177)))

(declare-fun b!134038 () Bool)

(assert (=> b!134038 (= e!87310 (getValueByKey!173 (t!6137 lt!69606) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!41063 c!24898) b!134036))

(assert (= (and d!41063 (not c!24898)) b!134037))

(assert (= (and b!134037 c!24899) b!134038))

(assert (= (and b!134037 (not c!24899)) b!134039))

(declare-fun m!158805 () Bool)

(assert (=> b!134038 m!158805))

(assert (=> d!40527 d!41063))

(declare-fun d!41065 () Bool)

(assert (=> d!41065 (= (getValueByKey!173 lt!69606 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) (Some!178 (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun lt!70170 () Unit!4141)

(assert (=> d!41065 (= lt!70170 (choose!833 lt!69606 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun e!87311 () Bool)

(assert (=> d!41065 e!87311))

(declare-fun res!64482 () Bool)

(assert (=> d!41065 (=> (not res!64482) (not e!87311))))

(assert (=> d!41065 (= res!64482 (isStrictlySorted!309 lt!69606))))

(assert (=> d!41065 (= (lemmaContainsTupThenGetReturnValue!88 lt!69606 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!70170)))

(declare-fun b!134040 () Bool)

(declare-fun res!64483 () Bool)

(assert (=> b!134040 (=> (not res!64483) (not e!87311))))

(assert (=> b!134040 (= res!64483 (containsKey!176 lt!69606 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134041 () Bool)

(assert (=> b!134041 (= e!87311 (contains!886 lt!69606 (tuple2!2565 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (= (and d!41065 res!64482) b!134040))

(assert (= (and b!134040 res!64483) b!134041))

(assert (=> d!41065 m!157067))

(declare-fun m!158807 () Bool)

(assert (=> d!41065 m!158807))

(declare-fun m!158809 () Bool)

(assert (=> d!41065 m!158809))

(declare-fun m!158811 () Bool)

(assert (=> b!134040 m!158811))

(declare-fun m!158813 () Bool)

(assert (=> b!134041 m!158813))

(assert (=> d!40527 d!41065))

(declare-fun b!134042 () Bool)

(declare-fun res!64484 () Bool)

(declare-fun e!87316 () Bool)

(assert (=> b!134042 (=> (not res!64484) (not e!87316))))

(declare-fun lt!70171 () List!1694)

(assert (=> b!134042 (= res!64484 (containsKey!176 lt!70171 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134043 () Bool)

(declare-fun e!87314 () List!1694)

(declare-fun e!87315 () List!1694)

(assert (=> b!134043 (= e!87314 e!87315)))

(declare-fun c!24903 () Bool)

(assert (=> b!134043 (= c!24903 (and ((_ is Cons!1690) (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))) (= (_1!1293 (h!2295 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun bm!14776 () Bool)

(declare-fun call!14780 () List!1694)

(declare-fun call!14779 () List!1694)

(assert (=> bm!14776 (= call!14780 call!14779)))

(declare-fun b!134044 () Bool)

(declare-fun e!87312 () List!1694)

(assert (=> b!134044 (= e!87312 call!14780)))

(declare-fun c!24902 () Bool)

(declare-fun b!134045 () Bool)

(assert (=> b!134045 (= c!24902 (and ((_ is Cons!1690) (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))) (bvsgt (_1!1293 (h!2295 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (=> b!134045 (= e!87315 e!87312)))

(declare-fun b!134046 () Bool)

(assert (=> b!134046 (= e!87316 (contains!886 lt!70171 (tuple2!2565 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!134047 () Bool)

(assert (=> b!134047 (= e!87315 call!14779)))

(declare-fun d!41067 () Bool)

(assert (=> d!41067 e!87316))

(declare-fun res!64485 () Bool)

(assert (=> d!41067 (=> (not res!64485) (not e!87316))))

(assert (=> d!41067 (= res!64485 (isStrictlySorted!309 lt!70171))))

(assert (=> d!41067 (= lt!70171 e!87314)))

(declare-fun c!24901 () Bool)

(assert (=> d!41067 (= c!24901 (and ((_ is Cons!1690) (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))) (bvslt (_1!1293 (h!2295 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (=> d!41067 (isStrictlySorted!309 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))))))

(assert (=> d!41067 (= (insertStrictlySorted!91 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!70171)))

(declare-fun b!134048 () Bool)

(declare-fun e!87313 () List!1694)

(assert (=> b!134048 (= e!87313 (ite c!24903 (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))) (ite c!24902 (Cons!1690 (h!2295 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))) (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))))) Nil!1691)))))

(declare-fun b!134049 () Bool)

(declare-fun call!14781 () List!1694)

(assert (=> b!134049 (= e!87314 call!14781)))

(declare-fun b!134050 () Bool)

(assert (=> b!134050 (= e!87312 call!14780)))

(declare-fun b!134051 () Bool)

(assert (=> b!134051 (= e!87313 (insertStrictlySorted!91 (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun bm!14777 () Bool)

(assert (=> bm!14777 (= call!14779 call!14781)))

(declare-fun bm!14778 () Bool)

(assert (=> bm!14778 (= call!14781 ($colon$colon!91 e!87313 (ite c!24901 (h!2295 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))) (tuple2!2565 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))))

(declare-fun c!24900 () Bool)

(assert (=> bm!14778 (= c!24900 c!24901)))

(assert (= (and d!41067 c!24901) b!134049))

(assert (= (and d!41067 (not c!24901)) b!134043))

(assert (= (and b!134043 c!24903) b!134047))

(assert (= (and b!134043 (not c!24903)) b!134045))

(assert (= (and b!134045 c!24902) b!134050))

(assert (= (and b!134045 (not c!24902)) b!134044))

(assert (= (or b!134050 b!134044) bm!14776))

(assert (= (or b!134047 bm!14776) bm!14777))

(assert (= (or b!134049 bm!14777) bm!14778))

(assert (= (and bm!14778 c!24900) b!134051))

(assert (= (and bm!14778 (not c!24900)) b!134048))

(assert (= (and d!41067 res!64485) b!134042))

(assert (= (and b!134042 res!64484) b!134046))

(declare-fun m!158815 () Bool)

(assert (=> b!134046 m!158815))

(declare-fun m!158817 () Bool)

(assert (=> b!134051 m!158817))

(declare-fun m!158819 () Bool)

(assert (=> bm!14778 m!158819))

(declare-fun m!158821 () Bool)

(assert (=> b!134042 m!158821))

(declare-fun m!158823 () Bool)

(assert (=> d!41067 m!158823))

(declare-fun m!158825 () Bool)

(assert (=> d!41067 m!158825))

(assert (=> d!40527 d!41067))

(declare-fun d!41069 () Bool)

(declare-fun e!87317 () Bool)

(assert (=> d!41069 e!87317))

(declare-fun res!64487 () Bool)

(assert (=> d!41069 (=> (not res!64487) (not e!87317))))

(declare-fun lt!70174 () ListLongMap!1653)

(assert (=> d!41069 (= res!64487 (contains!884 lt!70174 (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!70175 () List!1694)

(assert (=> d!41069 (= lt!70174 (ListLongMap!1654 lt!70175))))

(declare-fun lt!70172 () Unit!4141)

(declare-fun lt!70173 () Unit!4141)

(assert (=> d!41069 (= lt!70172 lt!70173)))

(assert (=> d!41069 (= (getValueByKey!173 lt!70175 (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41069 (= lt!70173 (lemmaContainsTupThenGetReturnValue!88 lt!70175 (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41069 (= lt!70175 (insertStrictlySorted!91 (toList!842 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652))) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41069 (= (+!169 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652)) (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70174)))

(declare-fun b!134052 () Bool)

(declare-fun res!64486 () Bool)

(assert (=> b!134052 (=> (not res!64486) (not e!87317))))

(assert (=> b!134052 (= res!64486 (= (getValueByKey!173 (toList!842 lt!70174) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!134053 () Bool)

(assert (=> b!134053 (= e!87317 (contains!886 (toList!842 lt!70174) (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!41069 res!64487) b!134052))

(assert (= (and b!134052 res!64486) b!134053))

(declare-fun m!158827 () Bool)

(assert (=> d!41069 m!158827))

(declare-fun m!158829 () Bool)

(assert (=> d!41069 m!158829))

(declare-fun m!158831 () Bool)

(assert (=> d!41069 m!158831))

(declare-fun m!158833 () Bool)

(assert (=> d!41069 m!158833))

(declare-fun m!158835 () Bool)

(assert (=> b!134052 m!158835))

(declare-fun m!158837 () Bool)

(assert (=> b!134053 m!158837))

(assert (=> bm!14645 d!41069))

(declare-fun lt!70176 () Bool)

(declare-fun d!41071 () Bool)

(assert (=> d!41071 (= lt!70176 (select (content!134 (toList!842 lt!69373)) (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87319 () Bool)

(assert (=> d!41071 (= lt!70176 e!87319)))

(declare-fun res!64489 () Bool)

(assert (=> d!41071 (=> (not res!64489) (not e!87319))))

(assert (=> d!41071 (= res!64489 ((_ is Cons!1690) (toList!842 lt!69373)))))

(assert (=> d!41071 (= (contains!886 (toList!842 lt!69373) (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70176)))

(declare-fun b!134054 () Bool)

(declare-fun e!87318 () Bool)

(assert (=> b!134054 (= e!87319 e!87318)))

(declare-fun res!64488 () Bool)

(assert (=> b!134054 (=> res!64488 e!87318)))

(assert (=> b!134054 (= res!64488 (= (h!2295 (toList!842 lt!69373)) (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134055 () Bool)

(assert (=> b!134055 (= e!87318 (contains!886 (t!6137 (toList!842 lt!69373)) (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41071 res!64489) b!134054))

(assert (= (and b!134054 (not res!64488)) b!134055))

(declare-fun m!158839 () Bool)

(assert (=> d!41071 m!158839))

(declare-fun m!158841 () Bool)

(assert (=> d!41071 m!158841))

(declare-fun m!158843 () Bool)

(assert (=> b!134055 m!158843))

(assert (=> b!132921 d!41071))

(declare-fun d!41073 () Bool)

(assert (=> d!41073 (= (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69338)) (v!3203 (getValueByKey!173 (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69338)))))

(assert (=> d!40559 d!41073))

(declare-fun b!134057 () Bool)

(declare-fun e!87320 () Option!179)

(declare-fun e!87321 () Option!179)

(assert (=> b!134057 (= e!87320 e!87321)))

(declare-fun c!24905 () Bool)

(assert (=> b!134057 (= c!24905 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69338))))))

(declare-fun b!134056 () Bool)

(assert (=> b!134056 (= e!87320 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))))

(declare-fun d!41075 () Bool)

(declare-fun c!24904 () Bool)

(assert (=> d!41075 (= c!24904 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69338)))))

(assert (=> d!41075 (= (getValueByKey!173 (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69338) e!87320)))

(declare-fun b!134059 () Bool)

(assert (=> b!134059 (= e!87321 None!177)))

(declare-fun b!134058 () Bool)

(assert (=> b!134058 (= e!87321 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!69338))))

(assert (= (and d!41075 c!24904) b!134056))

(assert (= (and d!41075 (not c!24904)) b!134057))

(assert (= (and b!134057 c!24905) b!134058))

(assert (= (and b!134057 (not c!24905)) b!134059))

(declare-fun m!158845 () Bool)

(assert (=> b!134058 m!158845))

(assert (=> d!40559 d!41075))

(declare-fun b!134060 () Bool)

(declare-fun e!87323 () SeekEntryResult!269)

(assert (=> b!134060 (= e!87323 (Found!269 (index!3238 lt!69362)))))

(declare-fun b!134061 () Bool)

(declare-fun e!87322 () SeekEntryResult!269)

(assert (=> b!134061 (= e!87322 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15586 lt!69362) #b00000000000000000000000000000001) (nextIndex!0 (index!3238 lt!69362) (bvadd (x!15586 lt!69362) #b00000000000000000000000000000001) (mask!7164 newMap!16)) (index!3238 lt!69362) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(declare-fun b!134062 () Bool)

(declare-fun e!87324 () SeekEntryResult!269)

(assert (=> b!134062 (= e!87324 e!87323)))

(declare-fun c!24906 () Bool)

(declare-fun lt!70177 () (_ BitVec 64))

(assert (=> b!134062 (= c!24906 (= lt!70177 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!134063 () Bool)

(assert (=> b!134063 (= e!87322 (MissingVacant!269 (index!3238 lt!69362)))))

(declare-fun b!134064 () Bool)

(assert (=> b!134064 (= e!87324 Undefined!269)))

(declare-fun lt!70178 () SeekEntryResult!269)

(declare-fun d!41077 () Bool)

(assert (=> d!41077 (and (or ((_ is Undefined!269) lt!70178) (not ((_ is Found!269) lt!70178)) (and (bvsge (index!3237 lt!70178) #b00000000000000000000000000000000) (bvslt (index!3237 lt!70178) (size!2521 (_keys!4613 newMap!16))))) (or ((_ is Undefined!269) lt!70178) ((_ is Found!269) lt!70178) (not ((_ is MissingVacant!269) lt!70178)) (not (= (index!3239 lt!70178) (index!3238 lt!69362))) (and (bvsge (index!3239 lt!70178) #b00000000000000000000000000000000) (bvslt (index!3239 lt!70178) (size!2521 (_keys!4613 newMap!16))))) (or ((_ is Undefined!269) lt!70178) (ite ((_ is Found!269) lt!70178) (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!70178)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (and ((_ is MissingVacant!269) lt!70178) (= (index!3239 lt!70178) (index!3238 lt!69362)) (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3239 lt!70178)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!41077 (= lt!70178 e!87324)))

(declare-fun c!24907 () Bool)

(assert (=> d!41077 (= c!24907 (bvsge (x!15586 lt!69362) #b01111111111111111111111111111110))))

(assert (=> d!41077 (= lt!70177 (select (arr!2252 (_keys!4613 newMap!16)) (index!3238 lt!69362)))))

(assert (=> d!41077 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!41077 (= (seekKeyOrZeroReturnVacant!0 (x!15586 lt!69362) (index!3238 lt!69362) (index!3238 lt!69362) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)) lt!70178)))

(declare-fun b!134065 () Bool)

(declare-fun c!24908 () Bool)

(assert (=> b!134065 (= c!24908 (= lt!70177 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134065 (= e!87323 e!87322)))

(assert (= (and d!41077 c!24907) b!134064))

(assert (= (and d!41077 (not c!24907)) b!134062))

(assert (= (and b!134062 c!24906) b!134060))

(assert (= (and b!134062 (not c!24906)) b!134065))

(assert (= (and b!134065 c!24908) b!134063))

(assert (= (and b!134065 (not c!24908)) b!134061))

(declare-fun m!158847 () Bool)

(assert (=> b!134061 m!158847))

(assert (=> b!134061 m!158847))

(assert (=> b!134061 m!156395))

(declare-fun m!158849 () Bool)

(assert (=> b!134061 m!158849))

(declare-fun m!158851 () Bool)

(assert (=> d!41077 m!158851))

(declare-fun m!158853 () Bool)

(assert (=> d!41077 m!158853))

(assert (=> d!41077 m!156665))

(assert (=> d!41077 m!156651))

(assert (=> b!132911 d!41077))

(assert (=> b!132968 d!40529))

(declare-fun d!41079 () Bool)

(assert (=> d!41079 (= (inRange!0 (ite c!24661 (index!3236 lt!69611) (index!3239 lt!69611)) (mask!7164 newMap!16)) (and (bvsge (ite c!24661 (index!3236 lt!69611) (index!3239 lt!69611)) #b00000000000000000000000000000000) (bvslt (ite c!24661 (index!3236 lt!69611) (index!3239 lt!69611)) (bvadd (mask!7164 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14677 d!41079))

(declare-fun d!41081 () Bool)

(declare-fun lt!70179 () (_ BitVec 32))

(assert (=> d!41081 (and (bvsge lt!70179 #b00000000000000000000000000000000) (bvsle lt!70179 (bvsub (size!2521 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!87325 () (_ BitVec 32))

(assert (=> d!41081 (= lt!70179 e!87325)))

(declare-fun c!24909 () Bool)

(assert (=> d!41081 (= c!24909 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!41081 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2521 (_keys!4613 newMap!16)) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!41081 (= (arrayCountValidKeys!0 (_keys!4613 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))) lt!70179)))

(declare-fun b!134066 () Bool)

(declare-fun e!87326 () (_ BitVec 32))

(declare-fun call!14782 () (_ BitVec 32))

(assert (=> b!134066 (= e!87326 (bvadd #b00000000000000000000000000000001 call!14782))))

(declare-fun b!134067 () Bool)

(assert (=> b!134067 (= e!87326 call!14782)))

(declare-fun b!134068 () Bool)

(assert (=> b!134068 (= e!87325 e!87326)))

(declare-fun c!24910 () Bool)

(assert (=> b!134068 (= c!24910 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!14779 () Bool)

(assert (=> bm!14779 (= call!14782 (arrayCountValidKeys!0 (_keys!4613 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!134069 () Bool)

(assert (=> b!134069 (= e!87325 #b00000000000000000000000000000000)))

(assert (= (and d!41081 c!24909) b!134069))

(assert (= (and d!41081 (not c!24909)) b!134068))

(assert (= (and b!134068 c!24910) b!134066))

(assert (= (and b!134068 (not c!24910)) b!134067))

(assert (= (or b!134066 b!134067) bm!14779))

(assert (=> b!134068 m!157443))

(assert (=> b!134068 m!157443))

(assert (=> b!134068 m!157451))

(declare-fun m!158855 () Bool)

(assert (=> bm!14779 m!158855))

(assert (=> bm!14671 d!41081))

(declare-fun d!41083 () Bool)

(declare-fun res!64490 () Bool)

(declare-fun e!87327 () Bool)

(assert (=> d!41083 (=> res!64490 e!87327)))

(assert (=> d!41083 (= res!64490 (= (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!41083 (= (arrayContainsKey!0 (_keys!4613 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!87327)))

(declare-fun b!134070 () Bool)

(declare-fun e!87328 () Bool)

(assert (=> b!134070 (= e!87327 e!87328)))

(declare-fun res!64491 () Bool)

(assert (=> b!134070 (=> (not res!64491) (not e!87328))))

(assert (=> b!134070 (= res!64491 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!134071 () Bool)

(assert (=> b!134071 (= e!87328 (arrayContainsKey!0 (_keys!4613 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!41083 (not res!64490)) b!134070))

(assert (= (and b!134070 res!64491) b!134071))

(assert (=> d!41083 m!157443))

(assert (=> b!134071 m!156395))

(declare-fun m!158857 () Bool)

(assert (=> b!134071 m!158857))

(assert (=> b!132927 d!41083))

(declare-fun d!41085 () Bool)

(assert (=> d!41085 (= (get!1492 (getValueByKey!173 (toList!842 lt!69339) lt!69345)) (v!3203 (getValueByKey!173 (toList!842 lt!69339) lt!69345)))))

(assert (=> d!40541 d!41085))

(declare-fun b!134073 () Bool)

(declare-fun e!87329 () Option!179)

(declare-fun e!87330 () Option!179)

(assert (=> b!134073 (= e!87329 e!87330)))

(declare-fun c!24912 () Bool)

(assert (=> b!134073 (= c!24912 (and ((_ is Cons!1690) (toList!842 lt!69339)) (not (= (_1!1293 (h!2295 (toList!842 lt!69339))) lt!69345))))))

(declare-fun b!134072 () Bool)

(assert (=> b!134072 (= e!87329 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69339)))))))

(declare-fun d!41087 () Bool)

(declare-fun c!24911 () Bool)

(assert (=> d!41087 (= c!24911 (and ((_ is Cons!1690) (toList!842 lt!69339)) (= (_1!1293 (h!2295 (toList!842 lt!69339))) lt!69345)))))

(assert (=> d!41087 (= (getValueByKey!173 (toList!842 lt!69339) lt!69345) e!87329)))

(declare-fun b!134075 () Bool)

(assert (=> b!134075 (= e!87330 None!177)))

(declare-fun b!134074 () Bool)

(assert (=> b!134074 (= e!87330 (getValueByKey!173 (t!6137 (toList!842 lt!69339)) lt!69345))))

(assert (= (and d!41087 c!24911) b!134072))

(assert (= (and d!41087 (not c!24911)) b!134073))

(assert (= (and b!134073 c!24912) b!134074))

(assert (= (and b!134073 (not c!24912)) b!134075))

(declare-fun m!158859 () Bool)

(assert (=> b!134074 m!158859))

(assert (=> d!40541 d!41087))

(assert (=> d!40479 d!40591))

(declare-fun d!41089 () Bool)

(assert (=> d!41089 (= (inRange!0 (index!3237 lt!69645) (mask!7164 newMap!16)) (and (bvsge (index!3237 lt!69645) #b00000000000000000000000000000000) (bvslt (index!3237 lt!69645) (bvadd (mask!7164 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!133204 d!41089))

(declare-fun d!41091 () Bool)

(declare-fun e!87331 () Bool)

(assert (=> d!41091 e!87331))

(declare-fun res!64493 () Bool)

(assert (=> d!41091 (=> (not res!64493) (not e!87331))))

(declare-fun lt!70182 () ListLongMap!1653)

(assert (=> d!41091 (= res!64493 (contains!884 lt!70182 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70183 () List!1694)

(assert (=> d!41091 (= lt!70182 (ListLongMap!1654 lt!70183))))

(declare-fun lt!70180 () Unit!4141)

(declare-fun lt!70181 () Unit!4141)

(assert (=> d!41091 (= lt!70180 lt!70181)))

(assert (=> d!41091 (= (getValueByKey!173 lt!70183 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41091 (= lt!70181 (lemmaContainsTupThenGetReturnValue!88 lt!70183 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41091 (= lt!70183 (insertStrictlySorted!91 (toList!842 call!14658) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41091 (= (+!169 call!14658 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70182)))

(declare-fun b!134076 () Bool)

(declare-fun res!64492 () Bool)

(assert (=> b!134076 (=> (not res!64492) (not e!87331))))

(assert (=> b!134076 (= res!64492 (= (getValueByKey!173 (toList!842 lt!70182) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!134077 () Bool)

(assert (=> b!134077 (= e!87331 (contains!886 (toList!842 lt!70182) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!41091 res!64493) b!134076))

(assert (= (and b!134076 res!64492) b!134077))

(declare-fun m!158861 () Bool)

(assert (=> d!41091 m!158861))

(declare-fun m!158863 () Bool)

(assert (=> d!41091 m!158863))

(declare-fun m!158865 () Bool)

(assert (=> d!41091 m!158865))

(declare-fun m!158867 () Bool)

(assert (=> d!41091 m!158867))

(declare-fun m!158869 () Bool)

(assert (=> b!134076 m!158869))

(declare-fun m!158871 () Bool)

(assert (=> b!134077 m!158871))

(assert (=> b!133061 d!41091))

(declare-fun d!41093 () Bool)

(assert (=> d!41093 (= (apply!116 lt!69504 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69504) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5574 () Bool)

(assert (= bs!5574 d!41093))

(declare-fun m!158873 () Bool)

(assert (=> bs!5574 m!158873))

(assert (=> bs!5574 m!158873))

(declare-fun m!158875 () Bool)

(assert (=> bs!5574 m!158875))

(assert (=> b!133024 d!41093))

(declare-fun d!41095 () Bool)

(declare-fun e!87333 () Bool)

(assert (=> d!41095 e!87333))

(declare-fun res!64494 () Bool)

(assert (=> d!41095 (=> res!64494 e!87333)))

(declare-fun lt!70184 () Bool)

(assert (=> d!41095 (= res!64494 (not lt!70184))))

(declare-fun lt!70185 () Bool)

(assert (=> d!41095 (= lt!70184 lt!70185)))

(declare-fun lt!70186 () Unit!4141)

(declare-fun e!87332 () Unit!4141)

(assert (=> d!41095 (= lt!70186 e!87332)))

(declare-fun c!24913 () Bool)

(assert (=> d!41095 (= c!24913 lt!70185)))

(assert (=> d!41095 (= lt!70185 (containsKey!176 (toList!842 lt!69577) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41095 (= (contains!884 lt!69577 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70184)))

(declare-fun b!134078 () Bool)

(declare-fun lt!70187 () Unit!4141)

(assert (=> b!134078 (= e!87332 lt!70187)))

(assert (=> b!134078 (= lt!70187 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69577) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134078 (isDefined!125 (getValueByKey!173 (toList!842 lt!69577) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134079 () Bool)

(declare-fun Unit!4196 () Unit!4141)

(assert (=> b!134079 (= e!87332 Unit!4196)))

(declare-fun b!134080 () Bool)

(assert (=> b!134080 (= e!87333 (isDefined!125 (getValueByKey!173 (toList!842 lt!69577) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41095 c!24913) b!134078))

(assert (= (and d!41095 (not c!24913)) b!134079))

(assert (= (and d!41095 (not res!64494)) b!134080))

(declare-fun m!158877 () Bool)

(assert (=> d!41095 m!158877))

(declare-fun m!158879 () Bool)

(assert (=> b!134078 m!158879))

(assert (=> b!134078 m!158589))

(assert (=> b!134078 m!158589))

(declare-fun m!158881 () Bool)

(assert (=> b!134078 m!158881))

(assert (=> b!134080 m!158589))

(assert (=> b!134080 m!158589))

(assert (=> b!134080 m!158881))

(assert (=> bm!14661 d!41095))

(declare-fun d!41097 () Bool)

(declare-fun res!64495 () Bool)

(declare-fun e!87334 () Bool)

(assert (=> d!41097 (=> res!64495 e!87334)))

(assert (=> d!41097 (= res!64495 (and ((_ is Cons!1690) (toList!842 lt!69344)) (= (_1!1293 (h!2295 (toList!842 lt!69344))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!41097 (= (containsKey!176 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!87334)))

(declare-fun b!134081 () Bool)

(declare-fun e!87335 () Bool)

(assert (=> b!134081 (= e!87334 e!87335)))

(declare-fun res!64496 () Bool)

(assert (=> b!134081 (=> (not res!64496) (not e!87335))))

(assert (=> b!134081 (= res!64496 (and (or (not ((_ is Cons!1690) (toList!842 lt!69344))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69344))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1690) (toList!842 lt!69344)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69344))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!134082 () Bool)

(assert (=> b!134082 (= e!87335 (containsKey!176 (t!6137 (toList!842 lt!69344)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!41097 (not res!64495)) b!134081))

(assert (= (and b!134081 res!64496) b!134082))

(assert (=> b!134082 m!156581))

(declare-fun m!158883 () Bool)

(assert (=> b!134082 m!158883))

(assert (=> d!40489 d!41097))

(declare-fun d!41099 () Bool)

(declare-fun e!87337 () Bool)

(assert (=> d!41099 e!87337))

(declare-fun res!64497 () Bool)

(assert (=> d!41099 (=> res!64497 e!87337)))

(declare-fun lt!70188 () Bool)

(assert (=> d!41099 (= res!64497 (not lt!70188))))

(declare-fun lt!70189 () Bool)

(assert (=> d!41099 (= lt!70188 lt!70189)))

(declare-fun lt!70190 () Unit!4141)

(declare-fun e!87336 () Unit!4141)

(assert (=> d!41099 (= lt!70190 e!87336)))

(declare-fun c!24914 () Bool)

(assert (=> d!41099 (= c!24914 lt!70189)))

(assert (=> d!41099 (= lt!70189 (containsKey!176 (toList!842 lt!69504) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41099 (= (contains!884 lt!69504 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70188)))

(declare-fun b!134083 () Bool)

(declare-fun lt!70191 () Unit!4141)

(assert (=> b!134083 (= e!87336 lt!70191)))

(assert (=> b!134083 (= lt!70191 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69504) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134083 (isDefined!125 (getValueByKey!173 (toList!842 lt!69504) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134084 () Bool)

(declare-fun Unit!4197 () Unit!4141)

(assert (=> b!134084 (= e!87336 Unit!4197)))

(declare-fun b!134085 () Bool)

(assert (=> b!134085 (= e!87337 (isDefined!125 (getValueByKey!173 (toList!842 lt!69504) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41099 c!24914) b!134083))

(assert (= (and d!41099 (not c!24914)) b!134084))

(assert (= (and d!41099 (not res!64497)) b!134085))

(declare-fun m!158885 () Bool)

(assert (=> d!41099 m!158885))

(declare-fun m!158887 () Bool)

(assert (=> b!134083 m!158887))

(assert (=> b!134083 m!158873))

(assert (=> b!134083 m!158873))

(declare-fun m!158889 () Bool)

(assert (=> b!134083 m!158889))

(assert (=> b!134085 m!158873))

(assert (=> b!134085 m!158873))

(assert (=> b!134085 m!158889))

(assert (=> bm!14649 d!41099))

(assert (=> b!133141 d!40621))

(declare-fun b!134087 () Bool)

(declare-fun e!87338 () Option!179)

(declare-fun e!87339 () Option!179)

(assert (=> b!134087 (= e!87338 e!87339)))

(declare-fun c!24916 () Bool)

(assert (=> b!134087 (= c!24916 (and ((_ is Cons!1690) (toList!842 lt!69625)) (not (= (_1!1293 (h!2295 (toList!842 lt!69625))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!134086 () Bool)

(assert (=> b!134086 (= e!87338 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69625)))))))

(declare-fun c!24915 () Bool)

(declare-fun d!41101 () Bool)

(assert (=> d!41101 (= c!24915 (and ((_ is Cons!1690) (toList!842 lt!69625)) (= (_1!1293 (h!2295 (toList!842 lt!69625))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41101 (= (getValueByKey!173 (toList!842 lt!69625) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87338)))

(declare-fun b!134089 () Bool)

(assert (=> b!134089 (= e!87339 None!177)))

(declare-fun b!134088 () Bool)

(assert (=> b!134088 (= e!87339 (getValueByKey!173 (t!6137 (toList!842 lt!69625)) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41101 c!24915) b!134086))

(assert (= (and d!41101 (not c!24915)) b!134087))

(assert (= (and b!134087 c!24916) b!134088))

(assert (= (and b!134087 (not c!24916)) b!134089))

(declare-fun m!158891 () Bool)

(assert (=> b!134088 m!158891))

(assert (=> b!133190 d!41101))

(declare-fun mapIsEmpty!4657 () Bool)

(declare-fun mapRes!4657 () Bool)

(assert (=> mapIsEmpty!4657 mapRes!4657))

(declare-fun condMapEmpty!4657 () Bool)

(declare-fun mapDefault!4657 () ValueCell!1094)

(assert (=> mapNonEmpty!4655 (= condMapEmpty!4657 (= mapRest!4655 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4657)))))

(declare-fun e!87340 () Bool)

(assert (=> mapNonEmpty!4655 (= tp!11225 (and e!87340 mapRes!4657))))

(declare-fun b!134090 () Bool)

(declare-fun e!87341 () Bool)

(assert (=> b!134090 (= e!87341 tp_is_empty!2875)))

(declare-fun mapNonEmpty!4657 () Bool)

(declare-fun tp!11227 () Bool)

(assert (=> mapNonEmpty!4657 (= mapRes!4657 (and tp!11227 e!87341))))

(declare-fun mapKey!4657 () (_ BitVec 32))

(declare-fun mapRest!4657 () (Array (_ BitVec 32) ValueCell!1094))

(declare-fun mapValue!4657 () ValueCell!1094)

(assert (=> mapNonEmpty!4657 (= mapRest!4655 (store mapRest!4657 mapKey!4657 mapValue!4657))))

(declare-fun b!134091 () Bool)

(assert (=> b!134091 (= e!87340 tp_is_empty!2875)))

(assert (= (and mapNonEmpty!4655 condMapEmpty!4657) mapIsEmpty!4657))

(assert (= (and mapNonEmpty!4655 (not condMapEmpty!4657)) mapNonEmpty!4657))

(assert (= (and mapNonEmpty!4657 ((_ is ValueCellFull!1094) mapValue!4657)) b!134090))

(assert (= (and mapNonEmpty!4655 ((_ is ValueCellFull!1094) mapDefault!4657)) b!134091))

(declare-fun m!158893 () Bool)

(assert (=> mapNonEmpty!4657 m!158893))

(declare-fun mapIsEmpty!4658 () Bool)

(declare-fun mapRes!4658 () Bool)

(assert (=> mapIsEmpty!4658 mapRes!4658))

(declare-fun condMapEmpty!4658 () Bool)

(declare-fun mapDefault!4658 () ValueCell!1094)

(assert (=> mapNonEmpty!4656 (= condMapEmpty!4658 (= mapRest!4656 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4658)))))

(declare-fun e!87342 () Bool)

(assert (=> mapNonEmpty!4656 (= tp!11226 (and e!87342 mapRes!4658))))

(declare-fun b!134092 () Bool)

(declare-fun e!87343 () Bool)

(assert (=> b!134092 (= e!87343 tp_is_empty!2875)))

(declare-fun mapNonEmpty!4658 () Bool)

(declare-fun tp!11228 () Bool)

(assert (=> mapNonEmpty!4658 (= mapRes!4658 (and tp!11228 e!87343))))

(declare-fun mapKey!4658 () (_ BitVec 32))

(declare-fun mapValue!4658 () ValueCell!1094)

(declare-fun mapRest!4658 () (Array (_ BitVec 32) ValueCell!1094))

(assert (=> mapNonEmpty!4658 (= mapRest!4656 (store mapRest!4658 mapKey!4658 mapValue!4658))))

(declare-fun b!134093 () Bool)

(assert (=> b!134093 (= e!87342 tp_is_empty!2875)))

(assert (= (and mapNonEmpty!4656 condMapEmpty!4658) mapIsEmpty!4658))

(assert (= (and mapNonEmpty!4656 (not condMapEmpty!4658)) mapNonEmpty!4658))

(assert (= (and mapNonEmpty!4658 ((_ is ValueCellFull!1094) mapValue!4658)) b!134092))

(assert (= (and mapNonEmpty!4656 ((_ is ValueCellFull!1094) mapDefault!4658)) b!134093))

(declare-fun m!158895 () Bool)

(assert (=> mapNonEmpty!4658 m!158895))

(declare-fun b_lambda!5975 () Bool)

(assert (= b_lambda!5957 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!5975)))

(declare-fun b_lambda!5977 () Bool)

(assert (= b_lambda!5959 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!5977)))

(declare-fun b_lambda!5979 () Bool)

(assert (= b_lambda!5971 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!5979)))

(declare-fun b_lambda!5981 () Bool)

(assert (= b_lambda!5967 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!5981)))

(declare-fun b_lambda!5983 () Bool)

(assert (= b_lambda!5947 (or (and b!132503 b_free!2917) (and b!132502 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))))) b_lambda!5983)))

(declare-fun b_lambda!5985 () Bool)

(assert (= b_lambda!5973 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!5985)))

(declare-fun b_lambda!5987 () Bool)

(assert (= b_lambda!5969 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!5987)))

(declare-fun b_lambda!5989 () Bool)

(assert (= b_lambda!5953 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!5989)))

(declare-fun b_lambda!5991 () Bool)

(assert (= b_lambda!5965 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!5991)))

(declare-fun b_lambda!5993 () Bool)

(assert (= b_lambda!5961 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!5993)))

(declare-fun b_lambda!5995 () Bool)

(assert (= b_lambda!5949 (or (and b!132503 b_free!2917) (and b!132502 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))))) b_lambda!5995)))

(declare-fun b_lambda!5997 () Bool)

(assert (= b_lambda!5963 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!5997)))

(declare-fun b_lambda!5999 () Bool)

(assert (= b_lambda!5951 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!5999)))

(declare-fun b_lambda!6001 () Bool)

(assert (= b_lambda!5945 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6001)))

(check-sat (not b!134028) (not d!40587) (not b!133569) (not b!133590) (not b!133705) (not bm!14742) (not d!40693) (not d!40825) (not b!133697) (not b!133583) (not b!133733) (not d!40811) (not d!40601) (not b!133353) (not bm!14779) (not b!133264) (not d!41025) (not b!133892) (not b!133793) (not b!133375) (not bm!14766) (not d!40843) (not b!133549) (not d!40933) (not d!40767) (not d!40685) (not d!40675) (not b!133285) (not b!133850) (not d!40577) (not b!133821) (not b!134032) (not d!40837) (not b!133500) (not b!133404) (not b!133370) (not d!40765) (not d!40649) (not b!133235) (not b!133309) (not bm!14712) (not b!133248) (not b!133673) (not bm!14678) (not d!40775) (not b!133582) (not b!133975) (not b!133752) (not b!133311) (not b!133887) (not b!133801) (not b!133246) (not b!133666) (not d!41041) (not b!133928) (not b!133547) (not bm!14706) (not bm!14756) (not b!133567) (not d!41053) (not d!40889) (not b!133565) (not b!133843) (not bm!14770) (not b!133816) (not b_lambda!5977) (not b!133853) (not b!133310) (not b!133741) (not b!133546) (not b!133459) (not b!133754) b_and!8313 (not b!133912) (not b!133674) (not b!133820) (not d!40851) (not b!133303) (not d!40845) (not b!133728) (not b_lambda!5983) (not d!40711) (not d!41009) (not d!41045) (not b!133982) (not b!133322) (not b!133680) (not b_lambda!5991) (not b!134025) (not b!133940) (not b!133824) (not b!133948) (not b!133770) (not b!134033) (not mapNonEmpty!4658) (not bm!14721) (not b!133266) (not b!133416) (not d!40869) (not b!133813) (not b!133810) (not d!41035) (not b!133632) (not b_lambda!5923) (not d!40745) (not b!133797) (not d!40725) (not b!133489) (not b!133914) (not b!133621) (not d!40863) (not b!133234) (not b_lambda!5939) (not b!133782) (not b!133848) (not b!133888) (not b!133831) (not b!133485) (not d!41095) (not b!133961) (not b!133268) (not b!133748) (not bm!14683) (not d!40623) (not b!133270) (not b!134058) (not d!40879) (not d!40801) (not b!134046) (not b!133551) (not bm!14760) tp_is_empty!2875 (not d!40683) (not b!134035) (not d!40717) (not d!40817) (not b!133478) (not b!133539) (not b!133670) (not d!40827) (not d!40911) (not d!40589) (not d!40985) (not bm!14778) (not b!133777) (not d!40667) (not b!133452) (not b!133447) (not d!40787) (not d!40943) (not b!133641) (not d!40893) (not b!133933) (not b_lambda!5979) (not d!41019) (not b!133627) (not d!40919) (not b!133744) (not b_lambda!5987) (not b!134030) (not bm!14746) (not d!40915) (not b!133385) (not b!133907) (not b_lambda!5981) (not b!133402) (not b!133581) (not bm!14713) (not b!133554) (not b!133265) (not d!40713) (not d!40715) (not b!133956) (not b!133693) (not d!40965) (not b!133461) (not b!133544) (not b!133619) (not b!133992) (not b!133920) (not b!133736) (not bm!14774) (not b!133397) (not b!133703) (not bm!14752) (not d!41037) (not d!40757) (not d!40875) (not d!40603) (not b!133775) (not b!133759) (not b!133924) (not d!41071) (not b!133481) (not b!133715) (not d!40925) (not b!133368) (not b!133504) (not b!133413) (not b!133875) (not d!40739) (not d!40631) (not d!40897) (not b!133289) (not d!40859) (not bm!14771) (not b!133584) (not b!133239) (not d!40971) (not d!40921) (not b!134085) (not d!40585) (not d!40881) (not d!40847) (not b!133242) (not b!133773) (not bm!14769) (not b!133803) (not d!40699) (not b!134021) (not b!133993) (not d!40701) (not b!133650) (not b!133900) (not d!40923) (not b!133682) (not bm!14700) (not b!133422) (not d!40635) (not d!40927) (not b!133958) (not d!40983) (not d!41065) (not b!133254) (not d!40959) (not bm!14739) (not d!40705) (not b!133796) (not b!133446) (not d!40861) (not b!134078) (not d!40581) (not b!133545) (not b!133313) (not b!134041) (not b!133426) (not b!133548) (not b!133637) (not d!40609) (not b!133945) (not d!40723) (not bm!14719) (not b!133785) (not d!41021) (not bm!14681) (not b!133723) (not d!40719) (not d!40823) (not b!134088) (not d!40939) (not b!133977) (not b!133841) (not d!40929) (not b!133542) (not b!133847) (not b!133462) (not b!133497) (not b!133382) (not b!133897) (not b!134013) (not b!134082) (not bm!14687) (not d!40737) (not d!40931) (not bm!14715) (not b!133717) (not b!133573) (not b!133471) (not d!41067) (not b!134055) (not b_lambda!5989) (not bm!14720) (not b!133638) (not d!40733) (not b!133884) (not bm!14744) (not d!40909) (not d!41043) (not b!133384) (not b!133844) (not bm!14748) (not b!133291) (not b!133798) (not b!133274) (not b!134077) (not d!41039) (not d!40867) (not b!134040) (not b!133724) b_and!8315 (not b!134051) (not d!40759) (not b!133451) (not b!134019) (not b!133643) (not b!133740) (not b!133244) (not d!40751) (not b_lambda!5941) (not b!133374) (not b!133306) (not b!133371) (not b!133256) (not d!41005) (not b!133972) (not b!133846) (not b_lambda!5975) (not b!134002) (not d!40949) (not b!133430) (not b!133807) (not d!40627) (not d!40937) (not b!133905) (not b!133812) (not b!133722) (not b!133840) (not d!40781) (not b!133651) (not d!40865) (not b!133538) (not d!40791) (not b!133648) (not b!133474) (not bm!14702) (not b!133307) (not d!41093) (not bm!14762) (not d!40953) (not b!133576) (not b!133418) (not bm!14679) (not d!40755) (not bm!14734) (not b_lambda!5955) (not b!133419) (not bm!14708) (not bm!14727) (not d!40799) (not d!40763) (not b!133923) (not b!133970) (not b!133903) (not b!133991) (not b_lambda!5999) (not b!133645) (not d!40615) (not b!133571) (not b!133463) (not b!133561) (not bm!14735) (not b!133255) (not d!40641) (not d!40709) (not d!41027) (not b!133757) (not b!133765) (not d!40833) (not d!40899) (not bm!14755) (not bm!14704) (not b!133784) (not d!40613) (not b!133494) (not b!133420) (not b!133751) (not b!133935) (not d!40593) (not d!40945) (not b!133449) (not d!40665) (not b!133738) (not b!133323) (not b!134012) (not d!40795) (not b!133791) (not b!133809) (not d!40955) (not b!133795) (not d!40905) (not b!133890) (not bm!14686) (not b!134042) (not b!133578) (not b!134018) (not b!133241) (not b!133408) (not d!40785) (not b_next!2917) (not bm!14731) (not b!133287) (not b!133963) (not b!133455) (not d!40669) (not bm!14698) (not b!133300) (not d!40907) (not b!133541) (not d!40821) (not d!41061) (not b!134031) (not b!133779) (not b_lambda!5993) (not b!133502) (not b!133877) (not bm!14717) (not d!40979) (not b!133245) (not d!40729) (not d!40721) (not b!133428) (not d!40655) (not b!133922) (not b!133624) (not d!40727) (not b!133781) (not b!133942) (not bm!14722) (not b!134053) (not d!40639) (not b!133277) (not b_lambda!5985) (not d!40961) (not d!40877) (not b!133574) (not d!40981) (not d!40853) (not b!133676) (not b!133473) (not b!134052) (not d!40789) (not b!133966) (not b!133979) (not b!133378) (not b!133869) (not b!133358) (not b!133761) (not b!133891) (not bm!14737) (not b!133692) (not b!133743) (not d!40651) (not b!134005) (not d!40883) (not b!133974) (not b!133989) (not b!133804) (not d!40995) (not b!133282) (not b!134023) (not d!40963) (not b!133410) (not d!40895) (not b!133818) (not bm!14765) (not d!40749) (not b!134080) (not d!41069) (not b!133663) (not b!133530) (not b!133579) (not b!133984) (not b!133288) (not b!133553) (not b!133405) (not mapNonEmpty!4657) (not b!133695) (not b!133628) (not b!133296) (not b!133776) (not b!133414) (not d!40815) (not d!40935) (not b!133882) (not b!133652) (not b!134011) (not b!133564) (not b!133556) (not b!134009) (not d!41047) (not b!133939) (not b!134015) (not b!134076) (not b!133830) (not d!40873) (not bm!14685) (not bm!14705) (not d!41091) (not b!133893) (not b_lambda!5995) (not b!133672) (not b_lambda!6001) (not d!40773) (not b!133453) (not b!133429) (not d!40633) (not b!133699) (not d!40999) (not d!40913) (not d!41023) (not d!41015) (not b!133828) (not d!40813) (not d!41033) (not b!133794) (not b!133361) (not b!133684) (not b!133917) (not b!133889) (not b!133997) (not bm!14751) (not b!134083) (not b!133293) (not b!133297) (not b!133894) (not b!133356) (not bm!14696) (not b!133294) (not b!133707) (not bm!14775) (not b!133626) (not b!134038) (not d!40975) (not b!133901) (not b!133386) (not d!40753) (not d!40747) (not b!133508) (not b_lambda!5943) (not b_next!2919) (not b!133506) (not b!133661) (not b!133271) (not b!134020) (not b!133617) (not bm!14757) (not b!133299) (not b!133668) (not b!133344) (not b!133855) (not b!133895) (not d!40969) (not b!133851) (not b!133555) (not b!133760) (not b_lambda!5919) (not b!133815) (not d!40735) (not d!40695) (not d!41017) (not d!40619) (not b!133965) (not d!40679) (not d!40659) (not b!133273) (not d!40917) (not b!133252) (not d!40657) (not bm!14710) (not d!40903) (not d!40769) (not b_lambda!5997) (not d!40671) (not d!41011) (not d!41029) (not b!133822) (not b!133280) (not d!40831) (not b!134071) (not b!133696) (not b!133832) (not b!133376) (not b!134074) (not bm!14741) (not b!134008) (not bm!14758) (not d!41077) (not bm!14697) (not b!133656) (not b!133986) (not b!133316) (not b!134061) (not b!133937) (not b!133395) (not bm!14764) (not b!134068) (not b!133510) (not b!134016) (not b!133915) (not b!133411) (not b_lambda!5935) (not d!40731) (not d!40663) (not d!40645) (not d!40967) (not b!133348) (not b!133570) (not d!41099) (not b!133706) (not d!41057) (not b!133720) (not d!41031) (not bm!14728) (not b_lambda!5937) (not b!133805) (not b!133683))
(check-sat b_and!8313 b_and!8315 (not b_next!2917) (not b_next!2919))
(get-model)

(declare-fun d!41103 () Bool)

(declare-fun res!64498 () Bool)

(declare-fun e!87344 () Bool)

(assert (=> d!41103 (=> res!64498 e!87344)))

(assert (=> d!41103 (= res!64498 (and ((_ is Cons!1690) (toList!842 lt!69577)) (= (_1!1293 (h!2295 (toList!842 lt!69577))) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!41103 (= (containsKey!176 (toList!842 lt!69577) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) e!87344)))

(declare-fun b!134094 () Bool)

(declare-fun e!87345 () Bool)

(assert (=> b!134094 (= e!87344 e!87345)))

(declare-fun res!64499 () Bool)

(assert (=> b!134094 (=> (not res!64499) (not e!87345))))

(assert (=> b!134094 (= res!64499 (and (or (not ((_ is Cons!1690) (toList!842 lt!69577))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69577))) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1690) (toList!842 lt!69577)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69577))) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!134095 () Bool)

(assert (=> b!134095 (= e!87345 (containsKey!176 (t!6137 (toList!842 lt!69577)) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41103 (not res!64498)) b!134094))

(assert (= (and b!134094 res!64499) b!134095))

(assert (=> b!134095 m!156679))

(declare-fun m!158897 () Bool)

(assert (=> b!134095 m!158897))

(assert (=> d!40995 d!41103))

(declare-fun d!41105 () Bool)

(declare-fun lt!70192 () Bool)

(assert (=> d!41105 (= lt!70192 (select (content!134 lt!70106) (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun e!87347 () Bool)

(assert (=> d!41105 (= lt!70192 e!87347)))

(declare-fun res!64501 () Bool)

(assert (=> d!41105 (=> (not res!64501) (not e!87347))))

(assert (=> d!41105 (= res!64501 ((_ is Cons!1690) lt!70106))))

(assert (=> d!41105 (= (contains!886 lt!70106 (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!70192)))

(declare-fun b!134096 () Bool)

(declare-fun e!87346 () Bool)

(assert (=> b!134096 (= e!87347 e!87346)))

(declare-fun res!64500 () Bool)

(assert (=> b!134096 (=> res!64500 e!87346)))

(assert (=> b!134096 (= res!64500 (= (h!2295 lt!70106) (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134097 () Bool)

(assert (=> b!134097 (= e!87346 (contains!886 (t!6137 lt!70106) (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!41105 res!64501) b!134096))

(assert (= (and b!134096 (not res!64500)) b!134097))

(declare-fun m!158899 () Bool)

(assert (=> d!41105 m!158899))

(declare-fun m!158901 () Bool)

(assert (=> d!41105 m!158901))

(declare-fun m!158903 () Bool)

(assert (=> b!134097 m!158903))

(assert (=> b!133928 d!41105))

(declare-fun d!41107 () Bool)

(declare-fun res!64502 () Bool)

(declare-fun e!87348 () Bool)

(assert (=> d!41107 (=> res!64502 e!87348)))

(assert (=> d!41107 (= res!64502 (or ((_ is Nil!1691) lt!70171) ((_ is Nil!1691) (t!6137 lt!70171))))))

(assert (=> d!41107 (= (isStrictlySorted!309 lt!70171) e!87348)))

(declare-fun b!134098 () Bool)

(declare-fun e!87349 () Bool)

(assert (=> b!134098 (= e!87348 e!87349)))

(declare-fun res!64503 () Bool)

(assert (=> b!134098 (=> (not res!64503) (not e!87349))))

(assert (=> b!134098 (= res!64503 (bvslt (_1!1293 (h!2295 lt!70171)) (_1!1293 (h!2295 (t!6137 lt!70171)))))))

(declare-fun b!134099 () Bool)

(assert (=> b!134099 (= e!87349 (isStrictlySorted!309 (t!6137 lt!70171)))))

(assert (= (and d!41107 (not res!64502)) b!134098))

(assert (= (and b!134098 res!64503) b!134099))

(declare-fun m!158905 () Bool)

(assert (=> b!134099 m!158905))

(assert (=> d!41067 d!41107))

(declare-fun d!41109 () Bool)

(declare-fun res!64504 () Bool)

(declare-fun e!87350 () Bool)

(assert (=> d!41109 (=> res!64504 e!87350)))

(assert (=> d!41109 (= res!64504 (or ((_ is Nil!1691) (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))) ((_ is Nil!1691) (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))))))))

(assert (=> d!41109 (= (isStrictlySorted!309 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))) e!87350)))

(declare-fun b!134100 () Bool)

(declare-fun e!87351 () Bool)

(assert (=> b!134100 (= e!87350 e!87351)))

(declare-fun res!64505 () Bool)

(assert (=> b!134100 (=> (not res!64505) (not e!87351))))

(assert (=> b!134100 (= res!64505 (bvslt (_1!1293 (h!2295 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))))) (_1!1293 (h!2295 (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))))))))))

(declare-fun b!134101 () Bool)

(assert (=> b!134101 (= e!87351 (isStrictlySorted!309 (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))))))))

(assert (= (and d!41109 (not res!64504)) b!134100))

(assert (= (and b!134100 res!64505) b!134101))

(declare-fun m!158907 () Bool)

(assert (=> b!134101 m!158907))

(assert (=> d!41067 d!41109))

(declare-fun d!41111 () Bool)

(declare-fun lt!70193 () Bool)

(assert (=> d!41111 (= lt!70193 (select (content!134 (t!6137 (toList!842 lt!69649))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun e!87353 () Bool)

(assert (=> d!41111 (= lt!70193 e!87353)))

(declare-fun res!64507 () Bool)

(assert (=> d!41111 (=> (not res!64507) (not e!87353))))

(assert (=> d!41111 (= res!64507 ((_ is Cons!1690) (t!6137 (toList!842 lt!69649))))))

(assert (=> d!41111 (= (contains!886 (t!6137 (toList!842 lt!69649)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!70193)))

(declare-fun b!134102 () Bool)

(declare-fun e!87352 () Bool)

(assert (=> b!134102 (= e!87353 e!87352)))

(declare-fun res!64506 () Bool)

(assert (=> b!134102 (=> res!64506 e!87352)))

(assert (=> b!134102 (= res!64506 (= (h!2295 (t!6137 (toList!842 lt!69649))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!134103 () Bool)

(assert (=> b!134103 (= e!87352 (contains!886 (t!6137 (t!6137 (toList!842 lt!69649))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!41111 res!64507) b!134102))

(assert (= (and b!134102 (not res!64506)) b!134103))

(declare-fun m!158909 () Bool)

(assert (=> d!41111 m!158909))

(declare-fun m!158911 () Bool)

(assert (=> d!41111 m!158911))

(declare-fun m!158913 () Bool)

(assert (=> b!134103 m!158913))

(assert (=> b!133818 d!41111))

(assert (=> d!40725 d!40711))

(assert (=> d!40725 d!40727))

(declare-fun d!41113 () Bool)

(declare-fun e!87355 () Bool)

(assert (=> d!41113 e!87355))

(declare-fun res!64508 () Bool)

(assert (=> d!41113 (=> res!64508 e!87355)))

(declare-fun lt!70194 () Bool)

(assert (=> d!41113 (= res!64508 (not lt!70194))))

(declare-fun lt!70195 () Bool)

(assert (=> d!41113 (= lt!70194 lt!70195)))

(declare-fun lt!70196 () Unit!4141)

(declare-fun e!87354 () Unit!4141)

(assert (=> d!41113 (= lt!70196 e!87354)))

(declare-fun c!24917 () Bool)

(assert (=> d!41113 (= c!24917 lt!70195)))

(assert (=> d!41113 (= lt!70195 (containsKey!176 (toList!842 lt!69501) lt!69503))))

(assert (=> d!41113 (= (contains!884 lt!69501 lt!69503) lt!70194)))

(declare-fun b!134104 () Bool)

(declare-fun lt!70197 () Unit!4141)

(assert (=> b!134104 (= e!87354 lt!70197)))

(assert (=> b!134104 (= lt!70197 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69501) lt!69503))))

(assert (=> b!134104 (isDefined!125 (getValueByKey!173 (toList!842 lt!69501) lt!69503))))

(declare-fun b!134105 () Bool)

(declare-fun Unit!4198 () Unit!4141)

(assert (=> b!134105 (= e!87354 Unit!4198)))

(declare-fun b!134106 () Bool)

(assert (=> b!134106 (= e!87355 (isDefined!125 (getValueByKey!173 (toList!842 lt!69501) lt!69503)))))

(assert (= (and d!41113 c!24917) b!134104))

(assert (= (and d!41113 (not c!24917)) b!134105))

(assert (= (and d!41113 (not res!64508)) b!134106))

(declare-fun m!158915 () Bool)

(assert (=> d!41113 m!158915))

(declare-fun m!158917 () Bool)

(assert (=> b!134104 m!158917))

(assert (=> b!134104 m!157829))

(assert (=> b!134104 m!157829))

(declare-fun m!158919 () Bool)

(assert (=> b!134104 m!158919))

(assert (=> b!134106 m!157829))

(assert (=> b!134106 m!157829))

(assert (=> b!134106 m!158919))

(assert (=> d!40725 d!41113))

(assert (=> d!40725 d!40731))

(declare-fun d!41115 () Bool)

(assert (=> d!41115 (= (apply!116 (+!169 lt!69501 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))) lt!69503) (apply!116 lt!69501 lt!69503))))

(assert (=> d!41115 true))

(declare-fun _$34!980 () Unit!4141)

(assert (=> d!41115 (= (choose!828 lt!69501 lt!69493 (minValue!2719 newMap!16) lt!69503) _$34!980)))

(declare-fun bs!5575 () Bool)

(assert (= bs!5575 d!41115))

(assert (=> bs!5575 m!156783))

(assert (=> bs!5575 m!156783))

(assert (=> bs!5575 m!156797))

(assert (=> bs!5575 m!156779))

(assert (=> d!40725 d!41115))

(declare-fun d!41117 () Bool)

(declare-fun e!87357 () Bool)

(assert (=> d!41117 e!87357))

(declare-fun res!64509 () Bool)

(assert (=> d!41117 (=> res!64509 e!87357)))

(declare-fun lt!70198 () Bool)

(assert (=> d!41117 (= res!64509 (not lt!70198))))

(declare-fun lt!70199 () Bool)

(assert (=> d!41117 (= lt!70198 lt!70199)))

(declare-fun lt!70200 () Unit!4141)

(declare-fun e!87356 () Unit!4141)

(assert (=> d!41117 (= lt!70200 e!87356)))

(declare-fun c!24918 () Bool)

(assert (=> d!41117 (= c!24918 lt!70199)))

(assert (=> d!41117 (= lt!70199 (containsKey!176 (toList!842 lt!69804) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41117 (= (contains!884 lt!69804 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70198)))

(declare-fun b!134107 () Bool)

(declare-fun lt!70201 () Unit!4141)

(assert (=> b!134107 (= e!87356 lt!70201)))

(assert (=> b!134107 (= lt!70201 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69804) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134107 (isDefined!125 (getValueByKey!173 (toList!842 lt!69804) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134108 () Bool)

(declare-fun Unit!4199 () Unit!4141)

(assert (=> b!134108 (= e!87356 Unit!4199)))

(declare-fun b!134109 () Bool)

(assert (=> b!134109 (= e!87357 (isDefined!125 (getValueByKey!173 (toList!842 lt!69804) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41117 c!24918) b!134107))

(assert (= (and d!41117 (not c!24918)) b!134108))

(assert (= (and d!41117 (not res!64509)) b!134109))

(declare-fun m!158921 () Bool)

(assert (=> d!41117 m!158921))

(declare-fun m!158923 () Bool)

(assert (=> b!134107 m!158923))

(declare-fun m!158925 () Bool)

(assert (=> b!134107 m!158925))

(assert (=> b!134107 m!158925))

(declare-fun m!158927 () Bool)

(assert (=> b!134107 m!158927))

(assert (=> b!134109 m!158925))

(assert (=> b!134109 m!158925))

(assert (=> b!134109 m!158927))

(assert (=> bm!14715 d!41117))

(declare-fun d!41119 () Bool)

(declare-fun e!87358 () Bool)

(assert (=> d!41119 e!87358))

(declare-fun res!64511 () Bool)

(assert (=> d!41119 (=> (not res!64511) (not e!87358))))

(declare-fun lt!70204 () ListLongMap!1653)

(assert (=> d!41119 (= res!64511 (contains!884 lt!70204 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70205 () List!1694)

(assert (=> d!41119 (= lt!70204 (ListLongMap!1654 lt!70205))))

(declare-fun lt!70202 () Unit!4141)

(declare-fun lt!70203 () Unit!4141)

(assert (=> d!41119 (= lt!70202 lt!70203)))

(assert (=> d!41119 (= (getValueByKey!173 lt!70205 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41119 (= lt!70203 (lemmaContainsTupThenGetReturnValue!88 lt!70205 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41119 (= lt!70205 (insertStrictlySorted!91 (toList!842 call!14764) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41119 (= (+!169 call!14764 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70204)))

(declare-fun b!134110 () Bool)

(declare-fun res!64510 () Bool)

(assert (=> b!134110 (=> (not res!64510) (not e!87358))))

(assert (=> b!134110 (= res!64510 (= (getValueByKey!173 (toList!842 lt!70204) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!134111 () Bool)

(assert (=> b!134111 (= e!87358 (contains!886 (toList!842 lt!70204) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!41119 res!64511) b!134110))

(assert (= (and b!134110 res!64510) b!134111))

(declare-fun m!158929 () Bool)

(assert (=> d!41119 m!158929))

(declare-fun m!158931 () Bool)

(assert (=> d!41119 m!158931))

(declare-fun m!158933 () Bool)

(assert (=> d!41119 m!158933))

(declare-fun m!158935 () Bool)

(assert (=> d!41119 m!158935))

(declare-fun m!158937 () Bool)

(assert (=> b!134110 m!158937))

(declare-fun m!158939 () Bool)

(assert (=> b!134111 m!158939))

(assert (=> b!133831 d!41119))

(declare-fun d!41121 () Bool)

(declare-fun lt!70206 () Bool)

(assert (=> d!41121 (= lt!70206 (select (content!134 lt!69908) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun e!87360 () Bool)

(assert (=> d!41121 (= lt!70206 e!87360)))

(declare-fun res!64513 () Bool)

(assert (=> d!41121 (=> (not res!64513) (not e!87360))))

(assert (=> d!41121 (= res!64513 ((_ is Cons!1690) lt!69908))))

(assert (=> d!41121 (= (contains!886 lt!69908 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!70206)))

(declare-fun b!134112 () Bool)

(declare-fun e!87359 () Bool)

(assert (=> b!134112 (= e!87360 e!87359)))

(declare-fun res!64512 () Bool)

(assert (=> b!134112 (=> res!64512 e!87359)))

(assert (=> b!134112 (= res!64512 (= (h!2295 lt!69908) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134113 () Bool)

(assert (=> b!134113 (= e!87359 (contains!886 (t!6137 lt!69908) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!41121 res!64513) b!134112))

(assert (= (and b!134112 (not res!64512)) b!134113))

(declare-fun m!158941 () Bool)

(assert (=> d!41121 m!158941))

(declare-fun m!158943 () Bool)

(assert (=> d!41121 m!158943))

(declare-fun m!158945 () Bool)

(assert (=> b!134113 m!158945))

(assert (=> b!133632 d!41121))

(declare-fun d!41123 () Bool)

(assert (=> d!41123 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))) lt!69488))))

(declare-fun lt!70207 () Unit!4141)

(assert (=> d!41123 (= lt!70207 (choose!831 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))) lt!69488))))

(declare-fun e!87361 () Bool)

(assert (=> d!41123 e!87361))

(declare-fun res!64514 () Bool)

(assert (=> d!41123 (=> (not res!64514) (not e!87361))))

(assert (=> d!41123 (= res!64514 (isStrictlySorted!309 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485)))))))

(assert (=> d!41123 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))) lt!69488) lt!70207)))

(declare-fun b!134114 () Bool)

(assert (=> b!134114 (= e!87361 (containsKey!176 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))) lt!69488))))

(assert (= (and d!41123 res!64514) b!134114))

(assert (=> d!41123 m!158229))

(assert (=> d!41123 m!158229))

(assert (=> d!41123 m!158231))

(declare-fun m!158947 () Bool)

(assert (=> d!41123 m!158947))

(declare-fun m!158949 () Bool)

(assert (=> d!41123 m!158949))

(assert (=> b!134114 m!158225))

(assert (=> b!133791 d!41123))

(declare-fun d!41125 () Bool)

(assert (=> d!41125 (= (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))) lt!69488)) (not (isEmpty!416 (getValueByKey!173 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))) lt!69488))))))

(declare-fun bs!5576 () Bool)

(assert (= bs!5576 d!41125))

(assert (=> bs!5576 m!158229))

(declare-fun m!158951 () Bool)

(assert (=> bs!5576 m!158951))

(assert (=> b!133791 d!41125))

(declare-fun b!134116 () Bool)

(declare-fun e!87362 () Option!179)

(declare-fun e!87363 () Option!179)

(assert (=> b!134116 (= e!87362 e!87363)))

(declare-fun c!24920 () Bool)

(assert (=> b!134116 (= c!24920 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485)))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))))) lt!69488))))))

(declare-fun b!134115 () Bool)

(assert (=> b!134115 (= e!87362 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485)))))))))

(declare-fun c!24919 () Bool)

(declare-fun d!41127 () Bool)

(assert (=> d!41127 (= c!24919 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485)))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))))) lt!69488)))))

(assert (=> d!41127 (= (getValueByKey!173 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))) lt!69488) e!87362)))

(declare-fun b!134118 () Bool)

(assert (=> b!134118 (= e!87363 None!177)))

(declare-fun b!134117 () Bool)

(assert (=> b!134117 (= e!87363 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485)))) lt!69488))))

(assert (= (and d!41127 c!24919) b!134115))

(assert (= (and d!41127 (not c!24919)) b!134116))

(assert (= (and b!134116 c!24920) b!134117))

(assert (= (and b!134116 (not c!24920)) b!134118))

(declare-fun m!158953 () Bool)

(assert (=> b!134117 m!158953))

(assert (=> b!133791 d!41127))

(declare-fun d!41129 () Bool)

(declare-fun res!64515 () Bool)

(declare-fun e!87364 () Bool)

(assert (=> d!41129 (=> res!64515 e!87364)))

(assert (=> d!41129 (= res!64515 (and ((_ is Cons!1690) (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (= (_1!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))) lt!69334)))))

(assert (=> d!41129 (= (containsKey!176 (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!69334) e!87364)))

(declare-fun b!134119 () Bool)

(declare-fun e!87365 () Bool)

(assert (=> b!134119 (= e!87364 e!87365)))

(declare-fun res!64516 () Bool)

(assert (=> b!134119 (=> (not res!64516) (not e!87365))))

(assert (=> b!134119 (= res!64516 (and (or (not ((_ is Cons!1690) (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))) (bvsle (_1!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))) lt!69334)) ((_ is Cons!1690) (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))) lt!69334)))))

(declare-fun b!134120 () Bool)

(assert (=> b!134120 (= e!87365 (containsKey!176 (t!6137 (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69334))))

(assert (= (and d!41129 (not res!64515)) b!134119))

(assert (= (and b!134119 res!64516) b!134120))

(declare-fun m!158955 () Bool)

(assert (=> b!134120 m!158955))

(assert (=> b!133979 d!41129))

(declare-fun d!41131 () Bool)

(declare-fun e!87366 () Bool)

(assert (=> d!41131 e!87366))

(declare-fun res!64518 () Bool)

(assert (=> d!41131 (=> (not res!64518) (not e!87366))))

(declare-fun lt!70210 () ListLongMap!1653)

(assert (=> d!41131 (= res!64518 (contains!884 lt!70210 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280))))))))

(declare-fun lt!70211 () List!1694)

(assert (=> d!41131 (= lt!70210 (ListLongMap!1654 lt!70211))))

(declare-fun lt!70208 () Unit!4141)

(declare-fun lt!70209 () Unit!4141)

(assert (=> d!41131 (= lt!70208 lt!70209)))

(assert (=> d!41131 (= (getValueByKey!173 lt!70211 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280))))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280))))))))

(assert (=> d!41131 (= lt!70209 (lemmaContainsTupThenGetReturnValue!88 lt!70211 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280))))))))

(assert (=> d!41131 (= lt!70211 (insertStrictlySorted!91 (toList!842 call!14704) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280))))))))

(assert (=> d!41131 (= (+!169 call!14704 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280)))) lt!70210)))

(declare-fun b!134121 () Bool)

(declare-fun res!64517 () Bool)

(assert (=> b!134121 (=> (not res!64517) (not e!87366))))

(assert (=> b!134121 (= res!64517 (= (getValueByKey!173 (toList!842 lt!70210) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280))))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280)))))))))

(declare-fun b!134122 () Bool)

(assert (=> b!134122 (= e!87366 (contains!886 (toList!842 lt!70210) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280)))))))

(assert (= (and d!41131 res!64518) b!134121))

(assert (= (and b!134121 res!64517) b!134122))

(declare-fun m!158957 () Bool)

(assert (=> d!41131 m!158957))

(declare-fun m!158959 () Bool)

(assert (=> d!41131 m!158959))

(declare-fun m!158961 () Bool)

(assert (=> d!41131 m!158961))

(declare-fun m!158963 () Bool)

(assert (=> d!41131 m!158963))

(declare-fun m!158965 () Bool)

(assert (=> b!134121 m!158965))

(declare-fun m!158967 () Bool)

(assert (=> b!134122 m!158967))

(assert (=> b!133385 d!41131))

(declare-fun d!41133 () Bool)

(declare-fun lt!70212 () Bool)

(assert (=> d!41133 (= lt!70212 (select (content!134 lt!70138) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun e!87368 () Bool)

(assert (=> d!41133 (= lt!70212 e!87368)))

(declare-fun res!64520 () Bool)

(assert (=> d!41133 (=> (not res!64520) (not e!87368))))

(assert (=> d!41133 (= res!64520 ((_ is Cons!1690) lt!70138))))

(assert (=> d!41133 (= (contains!886 lt!70138 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!70212)))

(declare-fun b!134123 () Bool)

(declare-fun e!87367 () Bool)

(assert (=> b!134123 (= e!87368 e!87367)))

(declare-fun res!64519 () Bool)

(assert (=> b!134123 (=> res!64519 e!87367)))

(assert (=> b!134123 (= res!64519 (= (h!2295 lt!70138) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134124 () Bool)

(assert (=> b!134124 (= e!87367 (contains!886 (t!6137 lt!70138) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!41133 res!64520) b!134123))

(assert (= (and b!134123 (not res!64519)) b!134124))

(declare-fun m!158969 () Bool)

(assert (=> d!41133 m!158969))

(declare-fun m!158971 () Bool)

(assert (=> d!41133 m!158971))

(declare-fun m!158973 () Bool)

(assert (=> b!134124 m!158973))

(assert (=> b!133997 d!41133))

(declare-fun d!41135 () Bool)

(declare-fun e!87370 () Bool)

(assert (=> d!41135 e!87370))

(declare-fun res!64521 () Bool)

(assert (=> d!41135 (=> res!64521 e!87370)))

(declare-fun lt!70213 () Bool)

(assert (=> d!41135 (= res!64521 (not lt!70213))))

(declare-fun lt!70214 () Bool)

(assert (=> d!41135 (= lt!70213 lt!70214)))

(declare-fun lt!70215 () Unit!4141)

(declare-fun e!87369 () Unit!4141)

(assert (=> d!41135 (= lt!70215 e!87369)))

(declare-fun c!24921 () Bool)

(assert (=> d!41135 (= c!24921 lt!70214)))

(assert (=> d!41135 (= lt!70214 (containsKey!176 (toList!842 lt!69868) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))

(assert (=> d!41135 (= (contains!884 lt!69868 (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))) lt!70213)))

(declare-fun b!134125 () Bool)

(declare-fun lt!70216 () Unit!4141)

(assert (=> b!134125 (= e!87369 lt!70216)))

(assert (=> b!134125 (= lt!70216 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69868) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))

(assert (=> b!134125 (isDefined!125 (getValueByKey!173 (toList!842 lt!69868) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))

(declare-fun b!134126 () Bool)

(declare-fun Unit!4200 () Unit!4141)

(assert (=> b!134126 (= e!87369 Unit!4200)))

(declare-fun b!134127 () Bool)

(assert (=> b!134127 (= e!87370 (isDefined!125 (getValueByKey!173 (toList!842 lt!69868) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))))))

(assert (= (and d!41135 c!24921) b!134125))

(assert (= (and d!41135 (not c!24921)) b!134126))

(assert (= (and d!41135 (not res!64521)) b!134127))

(declare-fun m!158975 () Bool)

(assert (=> d!41135 m!158975))

(declare-fun m!158977 () Bool)

(assert (=> b!134125 m!158977))

(assert (=> b!134125 m!157825))

(assert (=> b!134125 m!157825))

(declare-fun m!158979 () Bool)

(assert (=> b!134125 m!158979))

(assert (=> b!134127 m!157825))

(assert (=> b!134127 m!157825))

(assert (=> b!134127 m!158979))

(assert (=> d!40729 d!41135))

(declare-fun b!134129 () Bool)

(declare-fun e!87371 () Option!179)

(declare-fun e!87372 () Option!179)

(assert (=> b!134129 (= e!87371 e!87372)))

(declare-fun c!24923 () Bool)

(assert (=> b!134129 (= c!24923 (and ((_ is Cons!1690) lt!69869) (not (= (_1!1293 (h!2295 lt!69869)) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))))

(declare-fun b!134128 () Bool)

(assert (=> b!134128 (= e!87371 (Some!178 (_2!1293 (h!2295 lt!69869))))))

(declare-fun c!24922 () Bool)

(declare-fun d!41137 () Bool)

(assert (=> d!41137 (= c!24922 (and ((_ is Cons!1690) lt!69869) (= (_1!1293 (h!2295 lt!69869)) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))))))

(assert (=> d!41137 (= (getValueByKey!173 lt!69869 (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))) e!87371)))

(declare-fun b!134131 () Bool)

(assert (=> b!134131 (= e!87372 None!177)))

(declare-fun b!134130 () Bool)

(assert (=> b!134130 (= e!87372 (getValueByKey!173 (t!6137 lt!69869) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))

(assert (= (and d!41137 c!24922) b!134128))

(assert (= (and d!41137 (not c!24922)) b!134129))

(assert (= (and b!134129 c!24923) b!134130))

(assert (= (and b!134129 (not c!24923)) b!134131))

(declare-fun m!158981 () Bool)

(assert (=> b!134130 m!158981))

(assert (=> d!40729 d!41137))

(declare-fun d!41139 () Bool)

(assert (=> d!41139 (= (getValueByKey!173 lt!69869 (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))

(declare-fun lt!70217 () Unit!4141)

(assert (=> d!41139 (= lt!70217 (choose!833 lt!69869 (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))

(declare-fun e!87373 () Bool)

(assert (=> d!41139 e!87373))

(declare-fun res!64522 () Bool)

(assert (=> d!41139 (=> (not res!64522) (not e!87373))))

(assert (=> d!41139 (= res!64522 (isStrictlySorted!309 lt!69869))))

(assert (=> d!41139 (= (lemmaContainsTupThenGetReturnValue!88 lt!69869 (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))) lt!70217)))

(declare-fun b!134132 () Bool)

(declare-fun res!64523 () Bool)

(assert (=> b!134132 (=> (not res!64523) (not e!87373))))

(assert (=> b!134132 (= res!64523 (containsKey!176 lt!69869 (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))

(declare-fun b!134133 () Bool)

(assert (=> b!134133 (= e!87373 (contains!886 lt!69869 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))))))

(assert (= (and d!41139 res!64522) b!134132))

(assert (= (and b!134132 res!64523) b!134133))

(assert (=> d!41139 m!157819))

(declare-fun m!158983 () Bool)

(assert (=> d!41139 m!158983))

(declare-fun m!158985 () Bool)

(assert (=> d!41139 m!158985))

(declare-fun m!158987 () Bool)

(assert (=> b!134132 m!158987))

(declare-fun m!158989 () Bool)

(assert (=> b!134133 m!158989))

(assert (=> d!40729 d!41139))

(declare-fun b!134134 () Bool)

(declare-fun res!64524 () Bool)

(declare-fun e!87378 () Bool)

(assert (=> b!134134 (=> (not res!64524) (not e!87378))))

(declare-fun lt!70218 () List!1694)

(assert (=> b!134134 (= res!64524 (containsKey!176 lt!70218 (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))

(declare-fun b!134135 () Bool)

(declare-fun e!87376 () List!1694)

(declare-fun e!87377 () List!1694)

(assert (=> b!134135 (= e!87376 e!87377)))

(declare-fun c!24927 () Bool)

(assert (=> b!134135 (= c!24927 (and ((_ is Cons!1690) (toList!842 lt!69499)) (= (_1!1293 (h!2295 (toList!842 lt!69499))) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))))))

(declare-fun bm!14780 () Bool)

(declare-fun call!14784 () List!1694)

(declare-fun call!14783 () List!1694)

(assert (=> bm!14780 (= call!14784 call!14783)))

(declare-fun b!134136 () Bool)

(declare-fun e!87374 () List!1694)

(assert (=> b!134136 (= e!87374 call!14784)))

(declare-fun b!134137 () Bool)

(declare-fun c!24926 () Bool)

(assert (=> b!134137 (= c!24926 (and ((_ is Cons!1690) (toList!842 lt!69499)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69499))) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))))))

(assert (=> b!134137 (= e!87377 e!87374)))

(declare-fun b!134138 () Bool)

(assert (=> b!134138 (= e!87378 (contains!886 lt!70218 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))))))

(declare-fun b!134139 () Bool)

(assert (=> b!134139 (= e!87377 call!14783)))

(declare-fun d!41141 () Bool)

(assert (=> d!41141 e!87378))

(declare-fun res!64525 () Bool)

(assert (=> d!41141 (=> (not res!64525) (not e!87378))))

(assert (=> d!41141 (= res!64525 (isStrictlySorted!309 lt!70218))))

(assert (=> d!41141 (= lt!70218 e!87376)))

(declare-fun c!24925 () Bool)

(assert (=> d!41141 (= c!24925 (and ((_ is Cons!1690) (toList!842 lt!69499)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69499))) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))))))

(assert (=> d!41141 (isStrictlySorted!309 (toList!842 lt!69499))))

(assert (=> d!41141 (= (insertStrictlySorted!91 (toList!842 lt!69499) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))) lt!70218)))

(declare-fun b!134140 () Bool)

(declare-fun e!87375 () List!1694)

(assert (=> b!134140 (= e!87375 (ite c!24927 (t!6137 (toList!842 lt!69499)) (ite c!24926 (Cons!1690 (h!2295 (toList!842 lt!69499)) (t!6137 (toList!842 lt!69499))) Nil!1691)))))

(declare-fun b!134141 () Bool)

(declare-fun call!14785 () List!1694)

(assert (=> b!134141 (= e!87376 call!14785)))

(declare-fun b!134142 () Bool)

(assert (=> b!134142 (= e!87374 call!14784)))

(declare-fun b!134143 () Bool)

(assert (=> b!134143 (= e!87375 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69499)) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))

(declare-fun bm!14781 () Bool)

(assert (=> bm!14781 (= call!14783 call!14785)))

(declare-fun bm!14782 () Bool)

(assert (=> bm!14782 (= call!14785 ($colon$colon!91 e!87375 (ite c!24925 (h!2295 (toList!842 lt!69499)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))))

(declare-fun c!24924 () Bool)

(assert (=> bm!14782 (= c!24924 c!24925)))

(assert (= (and d!41141 c!24925) b!134141))

(assert (= (and d!41141 (not c!24925)) b!134135))

(assert (= (and b!134135 c!24927) b!134139))

(assert (= (and b!134135 (not c!24927)) b!134137))

(assert (= (and b!134137 c!24926) b!134142))

(assert (= (and b!134137 (not c!24926)) b!134136))

(assert (= (or b!134142 b!134136) bm!14780))

(assert (= (or b!134139 bm!14780) bm!14781))

(assert (= (or b!134141 bm!14781) bm!14782))

(assert (= (and bm!14782 c!24924) b!134143))

(assert (= (and bm!14782 (not c!24924)) b!134140))

(assert (= (and d!41141 res!64525) b!134134))

(assert (= (and b!134134 res!64524) b!134138))

(declare-fun m!158991 () Bool)

(assert (=> b!134138 m!158991))

(declare-fun m!158993 () Bool)

(assert (=> b!134143 m!158993))

(declare-fun m!158995 () Bool)

(assert (=> bm!14782 m!158995))

(declare-fun m!158997 () Bool)

(assert (=> b!134134 m!158997))

(declare-fun m!158999 () Bool)

(assert (=> d!41141 m!158999))

(declare-fun m!159001 () Bool)

(assert (=> d!41141 m!159001))

(assert (=> d!40729 d!41141))

(declare-fun d!41143 () Bool)

(assert (=> d!41143 (= ($colon$colon!91 e!87123 (ite c!24803 (h!2295 (toList!842 lt!69353)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (Cons!1690 (ite c!24803 (h!2295 (toList!842 lt!69353)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) e!87123))))

(assert (=> bm!14751 d!41143))

(declare-fun d!41145 () Bool)

(declare-fun e!87380 () Bool)

(assert (=> d!41145 e!87380))

(declare-fun res!64526 () Bool)

(assert (=> d!41145 (=> res!64526 e!87380)))

(declare-fun lt!70219 () Bool)

(assert (=> d!41145 (= res!64526 (not lt!70219))))

(declare-fun lt!70220 () Bool)

(assert (=> d!41145 (= lt!70219 lt!70220)))

(declare-fun lt!70221 () Unit!4141)

(declare-fun e!87379 () Unit!4141)

(assert (=> d!41145 (= lt!70221 e!87379)))

(declare-fun c!24928 () Bool)

(assert (=> d!41145 (= c!24928 lt!70220)))

(assert (=> d!41145 (= lt!70220 (containsKey!176 (toList!842 lt!70080) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41145 (= (contains!884 lt!70080 (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) lt!70219)))

(declare-fun b!134144 () Bool)

(declare-fun lt!70222 () Unit!4141)

(assert (=> b!134144 (= e!87379 lt!70222)))

(assert (=> b!134144 (= lt!70222 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70080) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))

(assert (=> b!134144 (isDefined!125 (getValueByKey!173 (toList!842 lt!70080) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134145 () Bool)

(declare-fun Unit!4201 () Unit!4141)

(assert (=> b!134145 (= e!87379 Unit!4201)))

(declare-fun b!134146 () Bool)

(assert (=> b!134146 (= e!87380 (isDefined!125 (getValueByKey!173 (toList!842 lt!70080) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!41145 c!24928) b!134144))

(assert (= (and d!41145 (not c!24928)) b!134145))

(assert (= (and d!41145 (not res!64526)) b!134146))

(declare-fun m!159003 () Bool)

(assert (=> d!41145 m!159003))

(declare-fun m!159005 () Bool)

(assert (=> b!134144 m!159005))

(assert (=> b!134144 m!158485))

(assert (=> b!134144 m!158485))

(declare-fun m!159007 () Bool)

(assert (=> b!134144 m!159007))

(assert (=> b!134146 m!158485))

(assert (=> b!134146 m!158485))

(assert (=> b!134146 m!159007))

(assert (=> d!40923 d!41145))

(declare-fun b!134148 () Bool)

(declare-fun e!87381 () Option!179)

(declare-fun e!87382 () Option!179)

(assert (=> b!134148 (= e!87381 e!87382)))

(declare-fun c!24930 () Bool)

(assert (=> b!134148 (= c!24930 (and ((_ is Cons!1690) lt!70081) (not (= (_1!1293 (h!2295 lt!70081)) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!134147 () Bool)

(assert (=> b!134147 (= e!87381 (Some!178 (_2!1293 (h!2295 lt!70081))))))

(declare-fun c!24929 () Bool)

(declare-fun d!41147 () Bool)

(assert (=> d!41147 (= c!24929 (and ((_ is Cons!1690) lt!70081) (= (_1!1293 (h!2295 lt!70081)) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))))))

(assert (=> d!41147 (= (getValueByKey!173 lt!70081 (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) e!87381)))

(declare-fun b!134150 () Bool)

(assert (=> b!134150 (= e!87382 None!177)))

(declare-fun b!134149 () Bool)

(assert (=> b!134149 (= e!87382 (getValueByKey!173 (t!6137 lt!70081) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))

(assert (= (and d!41147 c!24929) b!134147))

(assert (= (and d!41147 (not c!24929)) b!134148))

(assert (= (and b!134148 c!24930) b!134149))

(assert (= (and b!134148 (not c!24930)) b!134150))

(declare-fun m!159009 () Bool)

(assert (=> b!134149 m!159009))

(assert (=> d!40923 d!41147))

(declare-fun d!41149 () Bool)

(assert (=> d!41149 (= (getValueByKey!173 lt!70081 (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70223 () Unit!4141)

(assert (=> d!41149 (= lt!70223 (choose!833 lt!70081 (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))

(declare-fun e!87383 () Bool)

(assert (=> d!41149 e!87383))

(declare-fun res!64527 () Bool)

(assert (=> d!41149 (=> (not res!64527) (not e!87383))))

(assert (=> d!41149 (= res!64527 (isStrictlySorted!309 lt!70081))))

(assert (=> d!41149 (= (lemmaContainsTupThenGetReturnValue!88 lt!70081 (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) lt!70223)))

(declare-fun b!134151 () Bool)

(declare-fun res!64528 () Bool)

(assert (=> b!134151 (=> (not res!64528) (not e!87383))))

(assert (=> b!134151 (= res!64528 (containsKey!176 lt!70081 (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134152 () Bool)

(assert (=> b!134152 (= e!87383 (contains!886 lt!70081 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!41149 res!64527) b!134151))

(assert (= (and b!134151 res!64528) b!134152))

(assert (=> d!41149 m!158479))

(declare-fun m!159011 () Bool)

(assert (=> d!41149 m!159011))

(declare-fun m!159013 () Bool)

(assert (=> d!41149 m!159013))

(declare-fun m!159015 () Bool)

(assert (=> b!134151 m!159015))

(declare-fun m!159017 () Bool)

(assert (=> b!134152 m!159017))

(assert (=> d!40923 d!41149))

(declare-fun b!134153 () Bool)

(declare-fun res!64529 () Bool)

(declare-fun e!87388 () Bool)

(assert (=> b!134153 (=> (not res!64529) (not e!87388))))

(declare-fun lt!70224 () List!1694)

(assert (=> b!134153 (= res!64529 (containsKey!176 lt!70224 (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134154 () Bool)

(declare-fun e!87386 () List!1694)

(declare-fun e!87387 () List!1694)

(assert (=> b!134154 (= e!87386 e!87387)))

(declare-fun c!24934 () Bool)

(assert (=> b!134154 (= c!24934 (and ((_ is Cons!1690) (toList!842 lt!69520)) (= (_1!1293 (h!2295 (toList!842 lt!69520))) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))))))

(declare-fun bm!14783 () Bool)

(declare-fun call!14787 () List!1694)

(declare-fun call!14786 () List!1694)

(assert (=> bm!14783 (= call!14787 call!14786)))

(declare-fun b!134155 () Bool)

(declare-fun e!87384 () List!1694)

(assert (=> b!134155 (= e!87384 call!14787)))

(declare-fun c!24933 () Bool)

(declare-fun b!134156 () Bool)

(assert (=> b!134156 (= c!24933 (and ((_ is Cons!1690) (toList!842 lt!69520)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69520))) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))))))

(assert (=> b!134156 (= e!87387 e!87384)))

(declare-fun b!134157 () Bool)

(assert (=> b!134157 (= e!87388 (contains!886 lt!70224 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134158 () Bool)

(assert (=> b!134158 (= e!87387 call!14786)))

(declare-fun d!41151 () Bool)

(assert (=> d!41151 e!87388))

(declare-fun res!64530 () Bool)

(assert (=> d!41151 (=> (not res!64530) (not e!87388))))

(assert (=> d!41151 (= res!64530 (isStrictlySorted!309 lt!70224))))

(assert (=> d!41151 (= lt!70224 e!87386)))

(declare-fun c!24932 () Bool)

(assert (=> d!41151 (= c!24932 (and ((_ is Cons!1690) (toList!842 lt!69520)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69520))) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))))))

(assert (=> d!41151 (isStrictlySorted!309 (toList!842 lt!69520))))

(assert (=> d!41151 (= (insertStrictlySorted!91 (toList!842 lt!69520) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) lt!70224)))

(declare-fun e!87385 () List!1694)

(declare-fun b!134159 () Bool)

(assert (=> b!134159 (= e!87385 (ite c!24934 (t!6137 (toList!842 lt!69520)) (ite c!24933 (Cons!1690 (h!2295 (toList!842 lt!69520)) (t!6137 (toList!842 lt!69520))) Nil!1691)))))

(declare-fun b!134160 () Bool)

(declare-fun call!14788 () List!1694)

(assert (=> b!134160 (= e!87386 call!14788)))

(declare-fun b!134161 () Bool)

(assert (=> b!134161 (= e!87384 call!14787)))

(declare-fun b!134162 () Bool)

(assert (=> b!134162 (= e!87385 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69520)) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))

(declare-fun bm!14784 () Bool)

(assert (=> bm!14784 (= call!14786 call!14788)))

(declare-fun bm!14785 () Bool)

(assert (=> bm!14785 (= call!14788 ($colon$colon!91 e!87385 (ite c!24932 (h!2295 (toList!842 lt!69520)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))))

(declare-fun c!24931 () Bool)

(assert (=> bm!14785 (= c!24931 c!24932)))

(assert (= (and d!41151 c!24932) b!134160))

(assert (= (and d!41151 (not c!24932)) b!134154))

(assert (= (and b!134154 c!24934) b!134158))

(assert (= (and b!134154 (not c!24934)) b!134156))

(assert (= (and b!134156 c!24933) b!134161))

(assert (= (and b!134156 (not c!24933)) b!134155))

(assert (= (or b!134161 b!134155) bm!14783))

(assert (= (or b!134158 bm!14783) bm!14784))

(assert (= (or b!134160 bm!14784) bm!14785))

(assert (= (and bm!14785 c!24931) b!134162))

(assert (= (and bm!14785 (not c!24931)) b!134159))

(assert (= (and d!41151 res!64530) b!134153))

(assert (= (and b!134153 res!64529) b!134157))

(declare-fun m!159019 () Bool)

(assert (=> b!134157 m!159019))

(declare-fun m!159021 () Bool)

(assert (=> b!134162 m!159021))

(declare-fun m!159023 () Bool)

(assert (=> bm!14785 m!159023))

(declare-fun m!159025 () Bool)

(assert (=> b!134153 m!159025))

(declare-fun m!159027 () Bool)

(assert (=> d!41151 m!159027))

(declare-fun m!159029 () Bool)

(assert (=> d!41151 m!159029))

(assert (=> d!40923 d!41151))

(declare-fun d!41153 () Bool)

(assert (=> d!41153 (isDefined!125 (getValueByKey!173 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))

(declare-fun lt!70225 () Unit!4141)

(assert (=> d!41153 (= lt!70225 (choose!831 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))

(declare-fun e!87389 () Bool)

(assert (=> d!41153 e!87389))

(declare-fun res!64531 () Bool)

(assert (=> d!41153 (=> (not res!64531) (not e!87389))))

(assert (=> d!41153 (= res!64531 (isStrictlySorted!309 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))))

(assert (=> d!41153 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))) lt!70225)))

(declare-fun b!134163 () Bool)

(assert (=> b!134163 (= e!87389 (containsKey!176 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))

(assert (= (and d!41153 res!64531) b!134163))

(assert (=> d!41153 m!156725))

(assert (=> d!41153 m!157561))

(assert (=> d!41153 m!157561))

(assert (=> d!41153 m!157563))

(assert (=> d!41153 m!156725))

(declare-fun m!159031 () Bool)

(assert (=> d!41153 m!159031))

(declare-fun m!159033 () Bool)

(assert (=> d!41153 m!159033))

(assert (=> b!134163 m!156725))

(assert (=> b!134163 m!157557))

(assert (=> b!133414 d!41153))

(declare-fun d!41155 () Bool)

(assert (=> d!41155 (= (isDefined!125 (getValueByKey!173 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))))) (not (isEmpty!416 (getValueByKey!173 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))))

(declare-fun bs!5577 () Bool)

(assert (= bs!5577 d!41155))

(assert (=> bs!5577 m!157561))

(declare-fun m!159035 () Bool)

(assert (=> bs!5577 m!159035))

(assert (=> b!133414 d!41155))

(declare-fun b!134165 () Bool)

(declare-fun e!87390 () Option!179)

(declare-fun e!87391 () Option!179)

(assert (=> b!134165 (= e!87390 e!87391)))

(declare-fun c!24936 () Bool)

(assert (=> b!134165 (= c!24936 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (not (= (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))))

(declare-fun b!134164 () Bool)

(assert (=> b!134164 (= e!87390 (Some!178 (_2!1293 (h!2295 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))))))

(declare-fun c!24935 () Bool)

(declare-fun d!41157 () Bool)

(assert (=> d!41157 (= c!24935 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))))))))

(assert (=> d!41157 (= (getValueByKey!173 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))) e!87390)))

(declare-fun b!134167 () Bool)

(assert (=> b!134167 (= e!87391 None!177)))

(declare-fun b!134166 () Bool)

(assert (=> b!134166 (= e!87391 (getValueByKey!173 (t!6137 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))

(assert (= (and d!41157 c!24935) b!134164))

(assert (= (and d!41157 (not c!24935)) b!134165))

(assert (= (and b!134165 c!24936) b!134166))

(assert (= (and b!134165 (not c!24936)) b!134167))

(assert (=> b!134166 m!156725))

(declare-fun m!159037 () Bool)

(assert (=> b!134166 m!159037))

(assert (=> b!133414 d!41157))

(declare-fun d!41159 () Bool)

(assert (=> d!41159 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69494))))

(declare-fun lt!70226 () Unit!4141)

(assert (=> d!41159 (= lt!70226 (choose!831 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69494))))

(declare-fun e!87392 () Bool)

(assert (=> d!41159 e!87392))

(declare-fun res!64532 () Bool)

(assert (=> d!41159 (=> (not res!64532) (not e!87392))))

(assert (=> d!41159 (= res!64532 (isStrictlySorted!309 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (=> d!41159 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69494) lt!70226)))

(declare-fun b!134168 () Bool)

(assert (=> b!134168 (= e!87392 (containsKey!176 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69494))))

(assert (= (and d!41159 res!64532) b!134168))

(assert (=> d!41159 m!157793))

(assert (=> d!41159 m!157793))

(assert (=> d!41159 m!157795))

(declare-fun m!159039 () Bool)

(assert (=> d!41159 m!159039))

(declare-fun m!159041 () Bool)

(assert (=> d!41159 m!159041))

(assert (=> b!134168 m!157789))

(assert (=> b!133549 d!41159))

(declare-fun d!41161 () Bool)

(assert (=> d!41161 (= (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69494)) (not (isEmpty!416 (getValueByKey!173 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69494))))))

(declare-fun bs!5578 () Bool)

(assert (= bs!5578 d!41161))

(assert (=> bs!5578 m!157793))

(declare-fun m!159043 () Bool)

(assert (=> bs!5578 m!159043))

(assert (=> b!133549 d!41161))

(declare-fun b!134170 () Bool)

(declare-fun e!87393 () Option!179)

(declare-fun e!87394 () Option!179)

(assert (=> b!134170 (= e!87393 e!87394)))

(declare-fun c!24938 () Bool)

(assert (=> b!134170 (= c!24938 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) lt!69494))))))

(declare-fun b!134169 () Bool)

(assert (=> b!134169 (= e!87393 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))))

(declare-fun d!41163 () Bool)

(declare-fun c!24937 () Bool)

(assert (=> d!41163 (= c!24937 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) lt!69494)))))

(assert (=> d!41163 (= (getValueByKey!173 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69494) e!87393)))

(declare-fun b!134172 () Bool)

(assert (=> b!134172 (= e!87394 None!177)))

(declare-fun b!134171 () Bool)

(assert (=> b!134171 (= e!87394 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) lt!69494))))

(assert (= (and d!41163 c!24937) b!134169))

(assert (= (and d!41163 (not c!24937)) b!134170))

(assert (= (and b!134170 c!24938) b!134171))

(assert (= (and b!134170 (not c!24938)) b!134172))

(declare-fun m!159045 () Bool)

(assert (=> b!134171 m!159045))

(assert (=> b!133549 d!41163))

(declare-fun d!41165 () Bool)

(assert (=> d!41165 (= (isDefined!125 (getValueByKey!173 (toList!842 (map!1398 (_2!1294 lt!69445))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))) (not (isEmpty!416 (getValueByKey!173 (toList!842 (map!1398 (_2!1294 lt!69445))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun bs!5579 () Bool)

(assert (= bs!5579 d!41165))

(assert (=> bs!5579 m!158391))

(declare-fun m!159047 () Bool)

(assert (=> bs!5579 m!159047))

(assert (=> b!133855 d!41165))

(declare-fun b!134174 () Bool)

(declare-fun e!87395 () Option!179)

(declare-fun e!87396 () Option!179)

(assert (=> b!134174 (= e!87395 e!87396)))

(declare-fun c!24940 () Bool)

(assert (=> b!134174 (= c!24940 (and ((_ is Cons!1690) (toList!842 (map!1398 (_2!1294 lt!69445)))) (not (= (_1!1293 (h!2295 (toList!842 (map!1398 (_2!1294 lt!69445))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun b!134173 () Bool)

(assert (=> b!134173 (= e!87395 (Some!178 (_2!1293 (h!2295 (toList!842 (map!1398 (_2!1294 lt!69445)))))))))

(declare-fun c!24939 () Bool)

(declare-fun d!41167 () Bool)

(assert (=> d!41167 (= c!24939 (and ((_ is Cons!1690) (toList!842 (map!1398 (_2!1294 lt!69445)))) (= (_1!1293 (h!2295 (toList!842 (map!1398 (_2!1294 lt!69445))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!41167 (= (getValueByKey!173 (toList!842 (map!1398 (_2!1294 lt!69445))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!87395)))

(declare-fun b!134176 () Bool)

(assert (=> b!134176 (= e!87396 None!177)))

(declare-fun b!134175 () Bool)

(assert (=> b!134175 (= e!87396 (getValueByKey!173 (t!6137 (toList!842 (map!1398 (_2!1294 lt!69445)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!41167 c!24939) b!134173))

(assert (= (and d!41167 (not c!24939)) b!134174))

(assert (= (and b!134174 c!24940) b!134175))

(assert (= (and b!134174 (not c!24940)) b!134176))

(assert (=> b!134175 m!156395))

(declare-fun m!159049 () Bool)

(assert (=> b!134175 m!159049))

(assert (=> b!133855 d!41167))

(declare-fun d!41169 () Bool)

(declare-fun res!64533 () Bool)

(declare-fun e!87397 () Bool)

(assert (=> d!41169 (=> res!64533 e!87397)))

(assert (=> d!41169 (= res!64533 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!69598))))

(assert (=> d!41169 (= (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69598 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!87397)))

(declare-fun b!134177 () Bool)

(declare-fun e!87398 () Bool)

(assert (=> b!134177 (= e!87397 e!87398)))

(declare-fun res!64534 () Bool)

(assert (=> b!134177 (=> (not res!64534) (not e!87398))))

(assert (=> b!134177 (= res!64534 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!134178 () Bool)

(assert (=> b!134178 (= e!87398 (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69598 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!41169 (not res!64533)) b!134177))

(assert (= (and b!134177 res!64534) b!134178))

(assert (=> d!41169 m!157015))

(declare-fun m!159051 () Bool)

(assert (=> b!134178 m!159051))

(assert (=> b!133875 d!41169))

(declare-fun d!41171 () Bool)

(declare-fun e!87400 () Bool)

(assert (=> d!41171 e!87400))

(declare-fun res!64535 () Bool)

(assert (=> d!41171 (=> res!64535 e!87400)))

(declare-fun lt!70227 () Bool)

(assert (=> d!41171 (= res!64535 (not lt!70227))))

(declare-fun lt!70228 () Bool)

(assert (=> d!41171 (= lt!70227 lt!70228)))

(declare-fun lt!70229 () Unit!4141)

(declare-fun e!87399 () Unit!4141)

(assert (=> d!41171 (= lt!70229 e!87399)))

(declare-fun c!24941 () Bool)

(assert (=> d!41171 (= c!24941 lt!70228)))

(assert (=> d!41171 (= lt!70228 (containsKey!176 (toList!842 lt!69932) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41171 (= (contains!884 lt!69932 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) lt!70227)))

(declare-fun b!134179 () Bool)

(declare-fun lt!70230 () Unit!4141)

(assert (=> b!134179 (= e!87399 lt!70230)))

(assert (=> b!134179 (= lt!70230 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69932) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134179 (isDefined!125 (getValueByKey!173 (toList!842 lt!69932) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134180 () Bool)

(declare-fun Unit!4202 () Unit!4141)

(assert (=> b!134180 (= e!87399 Unit!4202)))

(declare-fun b!134181 () Bool)

(assert (=> b!134181 (= e!87400 (isDefined!125 (getValueByKey!173 (toList!842 lt!69932) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41171 c!24941) b!134179))

(assert (= (and d!41171 (not c!24941)) b!134180))

(assert (= (and d!41171 (not res!64535)) b!134181))

(assert (=> d!41171 m!156679))

(declare-fun m!159053 () Bool)

(assert (=> d!41171 m!159053))

(assert (=> b!134179 m!156679))

(declare-fun m!159055 () Bool)

(assert (=> b!134179 m!159055))

(assert (=> b!134179 m!156679))

(declare-fun m!159057 () Bool)

(assert (=> b!134179 m!159057))

(assert (=> b!134179 m!159057))

(declare-fun m!159059 () Bool)

(assert (=> b!134179 m!159059))

(assert (=> b!134181 m!156679))

(assert (=> b!134181 m!159057))

(assert (=> b!134181 m!159057))

(assert (=> b!134181 m!159059))

(assert (=> b!133684 d!41171))

(assert (=> b!133289 d!40621))

(declare-fun b!134183 () Bool)

(declare-fun e!87401 () Option!179)

(declare-fun e!87402 () Option!179)

(assert (=> b!134183 (= e!87401 e!87402)))

(declare-fun c!24943 () Bool)

(assert (=> b!134183 (= c!24943 (and ((_ is Cons!1690) (toList!842 lt!70174)) (not (= (_1!1293 (h!2295 (toList!842 lt!70174))) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))))

(declare-fun b!134182 () Bool)

(assert (=> b!134182 (= e!87401 (Some!178 (_2!1293 (h!2295 (toList!842 lt!70174)))))))

(declare-fun d!41173 () Bool)

(declare-fun c!24942 () Bool)

(assert (=> d!41173 (= c!24942 (and ((_ is Cons!1690) (toList!842 lt!70174)) (= (_1!1293 (h!2295 (toList!842 lt!70174))) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (=> d!41173 (= (getValueByKey!173 (toList!842 lt!70174) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) e!87401)))

(declare-fun b!134185 () Bool)

(assert (=> b!134185 (= e!87402 None!177)))

(declare-fun b!134184 () Bool)

(assert (=> b!134184 (= e!87402 (getValueByKey!173 (t!6137 (toList!842 lt!70174)) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (= (and d!41173 c!24942) b!134182))

(assert (= (and d!41173 (not c!24942)) b!134183))

(assert (= (and b!134183 c!24943) b!134184))

(assert (= (and b!134183 (not c!24943)) b!134185))

(declare-fun m!159061 () Bool)

(assert (=> b!134184 m!159061))

(assert (=> b!134052 d!41173))

(declare-fun d!41175 () Bool)

(declare-fun e!87404 () Bool)

(assert (=> d!41175 e!87404))

(declare-fun res!64536 () Bool)

(assert (=> d!41175 (=> res!64536 e!87404)))

(declare-fun lt!70231 () Bool)

(assert (=> d!41175 (= res!64536 (not lt!70231))))

(declare-fun lt!70232 () Bool)

(assert (=> d!41175 (= lt!70231 lt!70232)))

(declare-fun lt!70233 () Unit!4141)

(declare-fun e!87403 () Unit!4141)

(assert (=> d!41175 (= lt!70233 e!87403)))

(declare-fun c!24944 () Bool)

(assert (=> d!41175 (= c!24944 lt!70232)))

(assert (=> d!41175 (= lt!70232 (containsKey!176 (toList!842 lt!70153) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!41175 (= (contains!884 lt!70153 (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70231)))

(declare-fun b!134186 () Bool)

(declare-fun lt!70234 () Unit!4141)

(assert (=> b!134186 (= e!87403 lt!70234)))

(assert (=> b!134186 (= lt!70234 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70153) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> b!134186 (isDefined!125 (getValueByKey!173 (toList!842 lt!70153) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!134187 () Bool)

(declare-fun Unit!4203 () Unit!4141)

(assert (=> b!134187 (= e!87403 Unit!4203)))

(declare-fun b!134188 () Bool)

(assert (=> b!134188 (= e!87404 (isDefined!125 (getValueByKey!173 (toList!842 lt!70153) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (= (and d!41175 c!24944) b!134186))

(assert (= (and d!41175 (not c!24944)) b!134187))

(assert (= (and d!41175 (not res!64536)) b!134188))

(declare-fun m!159063 () Bool)

(assert (=> d!41175 m!159063))

(declare-fun m!159065 () Bool)

(assert (=> b!134186 m!159065))

(assert (=> b!134186 m!158749))

(assert (=> b!134186 m!158749))

(declare-fun m!159067 () Bool)

(assert (=> b!134186 m!159067))

(assert (=> b!134188 m!158749))

(assert (=> b!134188 m!158749))

(assert (=> b!134188 m!159067))

(assert (=> d!41035 d!41175))

(declare-fun b!134190 () Bool)

(declare-fun e!87405 () Option!179)

(declare-fun e!87406 () Option!179)

(assert (=> b!134190 (= e!87405 e!87406)))

(declare-fun c!24946 () Bool)

(assert (=> b!134190 (= c!24946 (and ((_ is Cons!1690) lt!70154) (not (= (_1!1293 (h!2295 lt!70154)) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!134189 () Bool)

(assert (=> b!134189 (= e!87405 (Some!178 (_2!1293 (h!2295 lt!70154))))))

(declare-fun d!41177 () Bool)

(declare-fun c!24945 () Bool)

(assert (=> d!41177 (= c!24945 (and ((_ is Cons!1690) lt!70154) (= (_1!1293 (h!2295 lt!70154)) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!41177 (= (getValueByKey!173 lt!70154 (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) e!87405)))

(declare-fun b!134192 () Bool)

(assert (=> b!134192 (= e!87406 None!177)))

(declare-fun b!134191 () Bool)

(assert (=> b!134191 (= e!87406 (getValueByKey!173 (t!6137 lt!70154) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (= (and d!41177 c!24945) b!134189))

(assert (= (and d!41177 (not c!24945)) b!134190))

(assert (= (and b!134190 c!24946) b!134191))

(assert (= (and b!134190 (not c!24946)) b!134192))

(declare-fun m!159069 () Bool)

(assert (=> b!134191 m!159069))

(assert (=> d!41035 d!41177))

(declare-fun d!41179 () Bool)

(assert (=> d!41179 (= (getValueByKey!173 lt!70154 (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun lt!70235 () Unit!4141)

(assert (=> d!41179 (= lt!70235 (choose!833 lt!70154 (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun e!87407 () Bool)

(assert (=> d!41179 e!87407))

(declare-fun res!64537 () Bool)

(assert (=> d!41179 (=> (not res!64537) (not e!87407))))

(assert (=> d!41179 (= res!64537 (isStrictlySorted!309 lt!70154))))

(assert (=> d!41179 (= (lemmaContainsTupThenGetReturnValue!88 lt!70154 (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70235)))

(declare-fun b!134193 () Bool)

(declare-fun res!64538 () Bool)

(assert (=> b!134193 (=> (not res!64538) (not e!87407))))

(assert (=> b!134193 (= res!64538 (containsKey!176 lt!70154 (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!134194 () Bool)

(assert (=> b!134194 (= e!87407 (contains!886 lt!70154 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (= (and d!41179 res!64537) b!134193))

(assert (= (and b!134193 res!64538) b!134194))

(assert (=> d!41179 m!158743))

(declare-fun m!159071 () Bool)

(assert (=> d!41179 m!159071))

(declare-fun m!159073 () Bool)

(assert (=> d!41179 m!159073))

(declare-fun m!159075 () Bool)

(assert (=> b!134193 m!159075))

(declare-fun m!159077 () Bool)

(assert (=> b!134194 m!159077))

(assert (=> d!41035 d!41179))

(declare-fun b!134195 () Bool)

(declare-fun res!64539 () Bool)

(declare-fun e!87412 () Bool)

(assert (=> b!134195 (=> (not res!64539) (not e!87412))))

(declare-fun lt!70236 () List!1694)

(assert (=> b!134195 (= res!64539 (containsKey!176 lt!70236 (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!134196 () Bool)

(declare-fun e!87410 () List!1694)

(declare-fun e!87411 () List!1694)

(assert (=> b!134196 (= e!87410 e!87411)))

(declare-fun c!24950 () Bool)

(assert (=> b!134196 (= c!24950 (and ((_ is Cons!1690) (toList!842 lt!69572)) (= (_1!1293 (h!2295 (toList!842 lt!69572))) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun bm!14786 () Bool)

(declare-fun call!14790 () List!1694)

(declare-fun call!14789 () List!1694)

(assert (=> bm!14786 (= call!14790 call!14789)))

(declare-fun b!134197 () Bool)

(declare-fun e!87408 () List!1694)

(assert (=> b!134197 (= e!87408 call!14790)))

(declare-fun b!134198 () Bool)

(declare-fun c!24949 () Bool)

(assert (=> b!134198 (= c!24949 (and ((_ is Cons!1690) (toList!842 lt!69572)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69572))) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> b!134198 (= e!87411 e!87408)))

(declare-fun b!134199 () Bool)

(assert (=> b!134199 (= e!87412 (contains!886 lt!70236 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!134200 () Bool)

(assert (=> b!134200 (= e!87411 call!14789)))

(declare-fun d!41181 () Bool)

(assert (=> d!41181 e!87412))

(declare-fun res!64540 () Bool)

(assert (=> d!41181 (=> (not res!64540) (not e!87412))))

(assert (=> d!41181 (= res!64540 (isStrictlySorted!309 lt!70236))))

(assert (=> d!41181 (= lt!70236 e!87410)))

(declare-fun c!24948 () Bool)

(assert (=> d!41181 (= c!24948 (and ((_ is Cons!1690) (toList!842 lt!69572)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69572))) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!41181 (isStrictlySorted!309 (toList!842 lt!69572))))

(assert (=> d!41181 (= (insertStrictlySorted!91 (toList!842 lt!69572) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70236)))

(declare-fun b!134201 () Bool)

(declare-fun e!87409 () List!1694)

(assert (=> b!134201 (= e!87409 (ite c!24950 (t!6137 (toList!842 lt!69572)) (ite c!24949 (Cons!1690 (h!2295 (toList!842 lt!69572)) (t!6137 (toList!842 lt!69572))) Nil!1691)))))

(declare-fun b!134202 () Bool)

(declare-fun call!14791 () List!1694)

(assert (=> b!134202 (= e!87410 call!14791)))

(declare-fun b!134203 () Bool)

(assert (=> b!134203 (= e!87408 call!14790)))

(declare-fun b!134204 () Bool)

(assert (=> b!134204 (= e!87409 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69572)) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun bm!14787 () Bool)

(assert (=> bm!14787 (= call!14789 call!14791)))

(declare-fun bm!14788 () Bool)

(assert (=> bm!14788 (= call!14791 ($colon$colon!91 e!87409 (ite c!24948 (h!2295 (toList!842 lt!69572)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun c!24947 () Bool)

(assert (=> bm!14788 (= c!24947 c!24948)))

(assert (= (and d!41181 c!24948) b!134202))

(assert (= (and d!41181 (not c!24948)) b!134196))

(assert (= (and b!134196 c!24950) b!134200))

(assert (= (and b!134196 (not c!24950)) b!134198))

(assert (= (and b!134198 c!24949) b!134203))

(assert (= (and b!134198 (not c!24949)) b!134197))

(assert (= (or b!134203 b!134197) bm!14786))

(assert (= (or b!134200 bm!14786) bm!14787))

(assert (= (or b!134202 bm!14787) bm!14788))

(assert (= (and bm!14788 c!24947) b!134204))

(assert (= (and bm!14788 (not c!24947)) b!134201))

(assert (= (and d!41181 res!64540) b!134195))

(assert (= (and b!134195 res!64539) b!134199))

(declare-fun m!159079 () Bool)

(assert (=> b!134199 m!159079))

(declare-fun m!159081 () Bool)

(assert (=> b!134204 m!159081))

(declare-fun m!159083 () Bool)

(assert (=> bm!14788 m!159083))

(declare-fun m!159085 () Bool)

(assert (=> b!134195 m!159085))

(declare-fun m!159087 () Bool)

(assert (=> d!41181 m!159087))

(declare-fun m!159089 () Bool)

(assert (=> d!41181 m!159089))

(assert (=> d!41035 d!41181))

(declare-fun d!41183 () Bool)

(assert (=> d!41183 (= (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133384 d!41183))

(declare-fun d!41185 () Bool)

(declare-fun res!64541 () Bool)

(declare-fun e!87413 () Bool)

(assert (=> d!41185 (=> res!64541 e!87413)))

(assert (=> d!41185 (= res!64541 (and ((_ is Cons!1690) (toList!842 lt!69649)) (= (_1!1293 (h!2295 (toList!842 lt!69649))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41185 (= (containsKey!176 (toList!842 lt!69649) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87413)))

(declare-fun b!134205 () Bool)

(declare-fun e!87414 () Bool)

(assert (=> b!134205 (= e!87413 e!87414)))

(declare-fun res!64542 () Bool)

(assert (=> b!134205 (=> (not res!64542) (not e!87414))))

(assert (=> b!134205 (= res!64542 (and (or (not ((_ is Cons!1690) (toList!842 lt!69649))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69649))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Cons!1690) (toList!842 lt!69649)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69649))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134206 () Bool)

(assert (=> b!134206 (= e!87414 (containsKey!176 (t!6137 (toList!842 lt!69649)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41185 (not res!64541)) b!134205))

(assert (= (and b!134205 res!64542) b!134206))

(declare-fun m!159091 () Bool)

(assert (=> b!134206 m!159091))

(assert (=> d!40955 d!41185))

(declare-fun d!41187 () Bool)

(declare-fun res!64543 () Bool)

(declare-fun e!87415 () Bool)

(assert (=> d!41187 (=> res!64543 e!87415)))

(assert (=> d!41187 (= res!64543 (and ((_ is Cons!1690) lt!70171) (= (_1!1293 (h!2295 lt!70171)) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (=> d!41187 (= (containsKey!176 lt!70171 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) e!87415)))

(declare-fun b!134207 () Bool)

(declare-fun e!87416 () Bool)

(assert (=> b!134207 (= e!87415 e!87416)))

(declare-fun res!64544 () Bool)

(assert (=> b!134207 (=> (not res!64544) (not e!87416))))

(assert (=> b!134207 (= res!64544 (and (or (not ((_ is Cons!1690) lt!70171)) (bvsle (_1!1293 (h!2295 lt!70171)) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) ((_ is Cons!1690) lt!70171) (bvslt (_1!1293 (h!2295 lt!70171)) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!134208 () Bool)

(assert (=> b!134208 (= e!87416 (containsKey!176 (t!6137 lt!70171) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!41187 (not res!64543)) b!134207))

(assert (= (and b!134207 res!64544) b!134208))

(declare-fun m!159093 () Bool)

(assert (=> b!134208 m!159093))

(assert (=> b!134042 d!41187))

(declare-fun d!41189 () Bool)

(declare-fun res!64545 () Bool)

(declare-fun e!87417 () Bool)

(assert (=> d!41189 (=> res!64545 e!87417)))

(assert (=> d!41189 (= res!64545 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))) lt!69519)))))

(assert (=> d!41189 (= (containsKey!176 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) lt!69519) e!87417)))

(declare-fun b!134209 () Bool)

(declare-fun e!87418 () Bool)

(assert (=> b!134209 (= e!87417 e!87418)))

(declare-fun res!64546 () Bool)

(assert (=> b!134209 (=> (not res!64546) (not e!87418))))

(assert (=> b!134209 (= res!64546 (and (or (not ((_ is Cons!1690) (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))) (bvsle (_1!1293 (h!2295 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))) lt!69519)) ((_ is Cons!1690) (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))) (bvslt (_1!1293 (h!2295 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))) lt!69519)))))

(declare-fun b!134210 () Bool)

(assert (=> b!134210 (= e!87418 (containsKey!176 (t!6137 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))) lt!69519))))

(assert (= (and d!41189 (not res!64545)) b!134209))

(assert (= (and b!134209 res!64546) b!134210))

(declare-fun m!159095 () Bool)

(assert (=> b!134210 m!159095))

(assert (=> d!40933 d!41189))

(declare-fun b!134211 () Bool)

(assert (=> b!134211 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> b!134211 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2522 (_values!2847 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun e!87425 () Bool)

(declare-fun lt!70241 () ListLongMap!1653)

(assert (=> b!134211 (= e!87425 (= (apply!116 lt!70241 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134212 () Bool)

(declare-fun res!64549 () Bool)

(declare-fun e!87423 () Bool)

(assert (=> b!134212 (=> (not res!64549) (not e!87423))))

(assert (=> b!134212 (= res!64549 (not (contains!884 lt!70241 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134213 () Bool)

(declare-fun e!87420 () Bool)

(assert (=> b!134213 (= e!87420 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!134213 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!134214 () Bool)

(declare-fun e!87421 () Bool)

(declare-fun e!87422 () Bool)

(assert (=> b!134214 (= e!87421 e!87422)))

(declare-fun c!24954 () Bool)

(assert (=> b!134214 (= c!24954 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!134215 () Bool)

(assert (=> b!134215 (= e!87422 (= lt!70241 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun bm!14789 () Bool)

(declare-fun call!14792 () ListLongMap!1653)

(assert (=> bm!14789 (= call!14792 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!134216 () Bool)

(declare-fun e!87419 () ListLongMap!1653)

(assert (=> b!134216 (= e!87419 call!14792)))

(declare-fun b!134217 () Bool)

(declare-fun e!87424 () ListLongMap!1653)

(assert (=> b!134217 (= e!87424 e!87419)))

(declare-fun c!24951 () Bool)

(assert (=> b!134217 (= c!24951 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!41191 () Bool)

(assert (=> d!41191 e!87423))

(declare-fun res!64547 () Bool)

(assert (=> d!41191 (=> (not res!64547) (not e!87423))))

(assert (=> d!41191 (= res!64547 (not (contains!884 lt!70241 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41191 (= lt!70241 e!87424)))

(declare-fun c!24952 () Bool)

(assert (=> d!41191 (= c!24952 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!41191 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!41191 (= (getCurrentListMapNoExtraKeys!136 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (_values!2847 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992))) (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) (zeroValue!2719 (v!3198 (underlying!454 thiss!992))) (minValue!2719 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992)))) lt!70241)))

(declare-fun b!134218 () Bool)

(assert (=> b!134218 (= e!87421 e!87425)))

(assert (=> b!134218 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun res!64548 () Bool)

(assert (=> b!134218 (= res!64548 (contains!884 lt!70241 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!134218 (=> (not res!64548) (not e!87425))))

(declare-fun b!134219 () Bool)

(assert (=> b!134219 (= e!87424 (ListLongMap!1654 Nil!1691))))

(declare-fun b!134220 () Bool)

(assert (=> b!134220 (= e!87422 (isEmpty!415 lt!70241))))

(declare-fun b!134221 () Bool)

(declare-fun lt!70238 () Unit!4141)

(declare-fun lt!70242 () Unit!4141)

(assert (=> b!134221 (= lt!70238 lt!70242)))

(declare-fun lt!70240 () V!3481)

(declare-fun lt!70243 () (_ BitVec 64))

(declare-fun lt!70239 () (_ BitVec 64))

(declare-fun lt!70237 () ListLongMap!1653)

(assert (=> b!134221 (not (contains!884 (+!169 lt!70237 (tuple2!2565 lt!70239 lt!70240)) lt!70243))))

(assert (=> b!134221 (= lt!70242 (addStillNotContains!63 lt!70237 lt!70239 lt!70240 lt!70243))))

(assert (=> b!134221 (= lt!70243 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134221 (= lt!70240 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134221 (= lt!70239 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!134221 (= lt!70237 call!14792)))

(assert (=> b!134221 (= e!87419 (+!169 call!14792 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134222 () Bool)

(assert (=> b!134222 (= e!87423 e!87421)))

(declare-fun c!24953 () Bool)

(assert (=> b!134222 (= c!24953 e!87420)))

(declare-fun res!64550 () Bool)

(assert (=> b!134222 (=> (not res!64550) (not e!87420))))

(assert (=> b!134222 (= res!64550 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!41191 c!24952) b!134219))

(assert (= (and d!41191 (not c!24952)) b!134217))

(assert (= (and b!134217 c!24951) b!134221))

(assert (= (and b!134217 (not c!24951)) b!134216))

(assert (= (or b!134221 b!134216) bm!14789))

(assert (= (and d!41191 res!64547) b!134212))

(assert (= (and b!134212 res!64549) b!134222))

(assert (= (and b!134222 res!64550) b!134213))

(assert (= (and b!134222 c!24953) b!134218))

(assert (= (and b!134222 (not c!24953)) b!134214))

(assert (= (and b!134218 res!64548) b!134211))

(assert (= (and b!134214 c!24954) b!134215))

(assert (= (and b!134214 (not c!24954)) b!134220))

(declare-fun b_lambda!6003 () Bool)

(assert (=> (not b_lambda!6003) (not b!134211)))

(assert (=> b!134211 t!6133))

(declare-fun b_and!8317 () Bool)

(assert (= b_and!8313 (and (=> t!6133 result!3973) b_and!8317)))

(assert (=> b!134211 t!6135))

(declare-fun b_and!8319 () Bool)

(assert (= b_and!8315 (and (=> t!6135 result!3977) b_and!8319)))

(declare-fun b_lambda!6005 () Bool)

(assert (=> (not b_lambda!6005) (not b!134221)))

(assert (=> b!134221 t!6133))

(declare-fun b_and!8321 () Bool)

(assert (= b_and!8317 (and (=> t!6133 result!3973) b_and!8321)))

(assert (=> b!134221 t!6135))

(declare-fun b_and!8323 () Bool)

(assert (= b_and!8319 (and (=> t!6135 result!3977) b_and!8323)))

(declare-fun m!159097 () Bool)

(assert (=> b!134220 m!159097))

(declare-fun m!159099 () Bool)

(assert (=> b!134217 m!159099))

(assert (=> b!134217 m!159099))

(declare-fun m!159101 () Bool)

(assert (=> b!134217 m!159101))

(assert (=> b!134213 m!159099))

(assert (=> b!134213 m!159099))

(assert (=> b!134213 m!159101))

(declare-fun m!159103 () Bool)

(assert (=> b!134215 m!159103))

(declare-fun m!159105 () Bool)

(assert (=> b!134212 m!159105))

(declare-fun m!159107 () Bool)

(assert (=> b!134221 m!159107))

(assert (=> b!134221 m!156391))

(declare-fun m!159109 () Bool)

(assert (=> b!134221 m!159109))

(declare-fun m!159111 () Bool)

(assert (=> b!134221 m!159111))

(declare-fun m!159113 () Bool)

(assert (=> b!134221 m!159113))

(assert (=> b!134221 m!159107))

(declare-fun m!159115 () Bool)

(assert (=> b!134221 m!159115))

(assert (=> b!134221 m!159111))

(declare-fun m!159117 () Bool)

(assert (=> b!134221 m!159117))

(assert (=> b!134221 m!159099))

(assert (=> b!134221 m!156391))

(assert (=> b!134218 m!159099))

(assert (=> b!134218 m!159099))

(declare-fun m!159119 () Bool)

(assert (=> b!134218 m!159119))

(declare-fun m!159121 () Bool)

(assert (=> d!41191 m!159121))

(assert (=> d!41191 m!156405))

(assert (=> bm!14789 m!159103))

(assert (=> b!134211 m!159107))

(assert (=> b!134211 m!156391))

(assert (=> b!134211 m!159109))

(assert (=> b!134211 m!159107))

(assert (=> b!134211 m!159099))

(declare-fun m!159123 () Bool)

(assert (=> b!134211 m!159123))

(assert (=> b!134211 m!159099))

(assert (=> b!134211 m!156391))

(assert (=> bm!14686 d!41191))

(declare-fun d!41193 () Bool)

(declare-fun res!64551 () Bool)

(declare-fun e!87426 () Bool)

(assert (=> d!41193 (=> res!64551 e!87426)))

(assert (=> d!41193 (= res!64551 (and ((_ is Cons!1690) (toList!842 lt!69639)) (= (_1!1293 (h!2295 (toList!842 lt!69639))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41193 (= (containsKey!176 (toList!842 lt!69639) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87426)))

(declare-fun b!134223 () Bool)

(declare-fun e!87427 () Bool)

(assert (=> b!134223 (= e!87426 e!87427)))

(declare-fun res!64552 () Bool)

(assert (=> b!134223 (=> (not res!64552) (not e!87427))))

(assert (=> b!134223 (= res!64552 (and (or (not ((_ is Cons!1690) (toList!842 lt!69639))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69639))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Cons!1690) (toList!842 lt!69639)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69639))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134224 () Bool)

(assert (=> b!134224 (= e!87427 (containsKey!176 (t!6137 (toList!842 lt!69639)) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41193 (not res!64551)) b!134223))

(assert (= (and b!134223 res!64552) b!134224))

(declare-fun m!159125 () Bool)

(assert (=> b!134224 m!159125))

(assert (=> d!40781 d!41193))

(declare-fun d!41195 () Bool)

(declare-fun e!87428 () Bool)

(assert (=> d!41195 e!87428))

(declare-fun res!64554 () Bool)

(assert (=> d!41195 (=> (not res!64554) (not e!87428))))

(declare-fun lt!70246 () ListLongMap!1653)

(assert (=> d!41195 (= res!64554 (contains!884 lt!70246 (_1!1293 (tuple2!2565 lt!69930 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70247 () List!1694)

(assert (=> d!41195 (= lt!70246 (ListLongMap!1654 lt!70247))))

(declare-fun lt!70244 () Unit!4141)

(declare-fun lt!70245 () Unit!4141)

(assert (=> d!41195 (= lt!70244 lt!70245)))

(assert (=> d!41195 (= (getValueByKey!173 lt!70247 (_1!1293 (tuple2!2565 lt!69930 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69930 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41195 (= lt!70245 (lemmaContainsTupThenGetReturnValue!88 lt!70247 (_1!1293 (tuple2!2565 lt!69930 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69930 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41195 (= lt!70247 (insertStrictlySorted!91 (toList!842 lt!69941) (_1!1293 (tuple2!2565 lt!69930 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69930 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41195 (= (+!169 lt!69941 (tuple2!2565 lt!69930 (zeroValue!2719 newMap!16))) lt!70246)))

(declare-fun b!134225 () Bool)

(declare-fun res!64553 () Bool)

(assert (=> b!134225 (=> (not res!64553) (not e!87428))))

(assert (=> b!134225 (= res!64553 (= (getValueByKey!173 (toList!842 lt!70246) (_1!1293 (tuple2!2565 lt!69930 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69930 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134226 () Bool)

(assert (=> b!134226 (= e!87428 (contains!886 (toList!842 lt!70246) (tuple2!2565 lt!69930 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41195 res!64554) b!134225))

(assert (= (and b!134225 res!64553) b!134226))

(declare-fun m!159127 () Bool)

(assert (=> d!41195 m!159127))

(declare-fun m!159129 () Bool)

(assert (=> d!41195 m!159129))

(declare-fun m!159131 () Bool)

(assert (=> d!41195 m!159131))

(declare-fun m!159133 () Bool)

(assert (=> d!41195 m!159133))

(declare-fun m!159135 () Bool)

(assert (=> b!134225 m!159135))

(declare-fun m!159137 () Bool)

(assert (=> b!134226 m!159137))

(assert (=> b!133672 d!41195))

(declare-fun d!41197 () Bool)

(declare-fun e!87429 () Bool)

(assert (=> d!41197 e!87429))

(declare-fun res!64556 () Bool)

(assert (=> d!41197 (=> (not res!64556) (not e!87429))))

(declare-fun lt!70250 () ListLongMap!1653)

(assert (=> d!41197 (= res!64556 (contains!884 lt!70250 (_1!1293 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70251 () List!1694)

(assert (=> d!41197 (= lt!70250 (ListLongMap!1654 lt!70251))))

(declare-fun lt!70248 () Unit!4141)

(declare-fun lt!70249 () Unit!4141)

(assert (=> d!41197 (= lt!70248 lt!70249)))

(assert (=> d!41197 (= (getValueByKey!173 lt!70251 (_1!1293 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41197 (= lt!70249 (lemmaContainsTupThenGetReturnValue!88 lt!70251 (_1!1293 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41197 (= lt!70251 (insertStrictlySorted!91 (toList!842 lt!69923) (_1!1293 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41197 (= (+!169 lt!69923 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16))) lt!70250)))

(declare-fun b!134227 () Bool)

(declare-fun res!64555 () Bool)

(assert (=> b!134227 (=> (not res!64555) (not e!87429))))

(assert (=> b!134227 (= res!64555 (= (getValueByKey!173 (toList!842 lt!70250) (_1!1293 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134228 () Bool)

(assert (=> b!134228 (= e!87429 (contains!886 (toList!842 lt!70250) (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41197 res!64556) b!134227))

(assert (= (and b!134227 res!64555) b!134228))

(declare-fun m!159139 () Bool)

(assert (=> d!41197 m!159139))

(declare-fun m!159141 () Bool)

(assert (=> d!41197 m!159141))

(declare-fun m!159143 () Bool)

(assert (=> d!41197 m!159143))

(declare-fun m!159145 () Bool)

(assert (=> d!41197 m!159145))

(declare-fun m!159147 () Bool)

(assert (=> b!134227 m!159147))

(declare-fun m!159149 () Bool)

(assert (=> b!134228 m!159149))

(assert (=> b!133672 d!41197))

(declare-fun d!41199 () Bool)

(assert (=> d!41199 (= (apply!116 lt!69941 lt!69926) (get!1492 (getValueByKey!173 (toList!842 lt!69941) lt!69926)))))

(declare-fun bs!5580 () Bool)

(assert (= bs!5580 d!41199))

(declare-fun m!159151 () Bool)

(assert (=> bs!5580 m!159151))

(assert (=> bs!5580 m!159151))

(declare-fun m!159153 () Bool)

(assert (=> bs!5580 m!159153))

(assert (=> b!133672 d!41199))

(declare-fun d!41201 () Bool)

(assert (=> d!41201 (= (apply!116 (+!169 lt!69929 (tuple2!2565 lt!69921 (minValue!2719 newMap!16))) lt!69931) (apply!116 lt!69929 lt!69931))))

(declare-fun lt!70252 () Unit!4141)

(assert (=> d!41201 (= lt!70252 (choose!828 lt!69929 lt!69921 (minValue!2719 newMap!16) lt!69931))))

(declare-fun e!87430 () Bool)

(assert (=> d!41201 e!87430))

(declare-fun res!64557 () Bool)

(assert (=> d!41201 (=> (not res!64557) (not e!87430))))

(assert (=> d!41201 (= res!64557 (contains!884 lt!69929 lt!69931))))

(assert (=> d!41201 (= (addApplyDifferent!92 lt!69929 lt!69921 (minValue!2719 newMap!16) lt!69931) lt!70252)))

(declare-fun b!134229 () Bool)

(assert (=> b!134229 (= e!87430 (not (= lt!69931 lt!69921)))))

(assert (= (and d!41201 res!64557) b!134229))

(assert (=> d!41201 m!158015))

(assert (=> d!41201 m!158029))

(assert (=> d!41201 m!158011))

(declare-fun m!159155 () Bool)

(assert (=> d!41201 m!159155))

(declare-fun m!159157 () Bool)

(assert (=> d!41201 m!159157))

(assert (=> d!41201 m!158015))

(assert (=> b!133672 d!41201))

(declare-fun d!41203 () Bool)

(assert (=> d!41203 (contains!884 (+!169 lt!69923 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16))) lt!69922)))

(declare-fun lt!70253 () Unit!4141)

(assert (=> d!41203 (= lt!70253 (choose!829 lt!69923 lt!69938 (zeroValue!2719 newMap!16) lt!69922))))

(assert (=> d!41203 (contains!884 lt!69923 lt!69922)))

(assert (=> d!41203 (= (addStillContains!92 lt!69923 lt!69938 (zeroValue!2719 newMap!16) lt!69922) lt!70253)))

(declare-fun bs!5581 () Bool)

(assert (= bs!5581 d!41203))

(assert (=> bs!5581 m!158033))

(assert (=> bs!5581 m!158033))

(assert (=> bs!5581 m!158035))

(declare-fun m!159159 () Bool)

(assert (=> bs!5581 m!159159))

(declare-fun m!159161 () Bool)

(assert (=> bs!5581 m!159161))

(assert (=> b!133672 d!41203))

(declare-fun d!41205 () Bool)

(assert (=> d!41205 (= (apply!116 (+!169 lt!69941 (tuple2!2565 lt!69930 (zeroValue!2719 newMap!16))) lt!69926) (apply!116 lt!69941 lt!69926))))

(declare-fun lt!70254 () Unit!4141)

(assert (=> d!41205 (= lt!70254 (choose!828 lt!69941 lt!69930 (zeroValue!2719 newMap!16) lt!69926))))

(declare-fun e!87431 () Bool)

(assert (=> d!41205 e!87431))

(declare-fun res!64558 () Bool)

(assert (=> d!41205 (=> (not res!64558) (not e!87431))))

(assert (=> d!41205 (= res!64558 (contains!884 lt!69941 lt!69926))))

(assert (=> d!41205 (= (addApplyDifferent!92 lt!69941 lt!69930 (zeroValue!2719 newMap!16) lt!69926) lt!70254)))

(declare-fun b!134230 () Bool)

(assert (=> b!134230 (= e!87431 (not (= lt!69926 lt!69930)))))

(assert (= (and d!41205 res!64558) b!134230))

(assert (=> d!41205 m!158013))

(assert (=> d!41205 m!158037))

(assert (=> d!41205 m!158017))

(declare-fun m!159163 () Bool)

(assert (=> d!41205 m!159163))

(declare-fun m!159165 () Bool)

(assert (=> d!41205 m!159165))

(assert (=> d!41205 m!158013))

(assert (=> b!133672 d!41205))

(declare-fun d!41207 () Bool)

(declare-fun e!87433 () Bool)

(assert (=> d!41207 e!87433))

(declare-fun res!64559 () Bool)

(assert (=> d!41207 (=> res!64559 e!87433)))

(declare-fun lt!70255 () Bool)

(assert (=> d!41207 (= res!64559 (not lt!70255))))

(declare-fun lt!70256 () Bool)

(assert (=> d!41207 (= lt!70255 lt!70256)))

(declare-fun lt!70257 () Unit!4141)

(declare-fun e!87432 () Unit!4141)

(assert (=> d!41207 (= lt!70257 e!87432)))

(declare-fun c!24955 () Bool)

(assert (=> d!41207 (= c!24955 lt!70256)))

(assert (=> d!41207 (= lt!70256 (containsKey!176 (toList!842 (+!169 lt!69923 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16)))) lt!69922))))

(assert (=> d!41207 (= (contains!884 (+!169 lt!69923 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16))) lt!69922) lt!70255)))

(declare-fun b!134231 () Bool)

(declare-fun lt!70258 () Unit!4141)

(assert (=> b!134231 (= e!87432 lt!70258)))

(assert (=> b!134231 (= lt!70258 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69923 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16)))) lt!69922))))

(assert (=> b!134231 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69923 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16)))) lt!69922))))

(declare-fun b!134232 () Bool)

(declare-fun Unit!4204 () Unit!4141)

(assert (=> b!134232 (= e!87432 Unit!4204)))

(declare-fun b!134233 () Bool)

(assert (=> b!134233 (= e!87433 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69923 (tuple2!2565 lt!69938 (zeroValue!2719 newMap!16)))) lt!69922)))))

(assert (= (and d!41207 c!24955) b!134231))

(assert (= (and d!41207 (not c!24955)) b!134232))

(assert (= (and d!41207 (not res!64559)) b!134233))

(declare-fun m!159167 () Bool)

(assert (=> d!41207 m!159167))

(declare-fun m!159169 () Bool)

(assert (=> b!134231 m!159169))

(declare-fun m!159171 () Bool)

(assert (=> b!134231 m!159171))

(assert (=> b!134231 m!159171))

(declare-fun m!159173 () Bool)

(assert (=> b!134231 m!159173))

(assert (=> b!134233 m!159171))

(assert (=> b!134233 m!159171))

(assert (=> b!134233 m!159173))

(assert (=> b!133672 d!41207))

(declare-fun d!41209 () Bool)

(assert (=> d!41209 (= (apply!116 lt!69929 lt!69931) (get!1492 (getValueByKey!173 (toList!842 lt!69929) lt!69931)))))

(declare-fun bs!5582 () Bool)

(assert (= bs!5582 d!41209))

(declare-fun m!159175 () Bool)

(assert (=> bs!5582 m!159175))

(assert (=> bs!5582 m!159175))

(declare-fun m!159177 () Bool)

(assert (=> bs!5582 m!159177))

(assert (=> b!133672 d!41209))

(declare-fun d!41211 () Bool)

(assert (=> d!41211 (= (apply!116 lt!69927 lt!69933) (get!1492 (getValueByKey!173 (toList!842 lt!69927) lt!69933)))))

(declare-fun bs!5583 () Bool)

(assert (= bs!5583 d!41211))

(declare-fun m!159179 () Bool)

(assert (=> bs!5583 m!159179))

(assert (=> bs!5583 m!159179))

(declare-fun m!159181 () Bool)

(assert (=> bs!5583 m!159181))

(assert (=> b!133672 d!41211))

(declare-fun d!41213 () Bool)

(assert (=> d!41213 (= (apply!116 (+!169 lt!69929 (tuple2!2565 lt!69921 (minValue!2719 newMap!16))) lt!69931) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69929 (tuple2!2565 lt!69921 (minValue!2719 newMap!16)))) lt!69931)))))

(declare-fun bs!5584 () Bool)

(assert (= bs!5584 d!41213))

(declare-fun m!159183 () Bool)

(assert (=> bs!5584 m!159183))

(assert (=> bs!5584 m!159183))

(declare-fun m!159185 () Bool)

(assert (=> bs!5584 m!159185))

(assert (=> b!133672 d!41213))

(declare-fun d!41215 () Bool)

(assert (=> d!41215 (= (apply!116 (+!169 lt!69941 (tuple2!2565 lt!69930 (zeroValue!2719 newMap!16))) lt!69926) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69941 (tuple2!2565 lt!69930 (zeroValue!2719 newMap!16)))) lt!69926)))))

(declare-fun bs!5585 () Bool)

(assert (= bs!5585 d!41215))

(declare-fun m!159187 () Bool)

(assert (=> bs!5585 m!159187))

(assert (=> bs!5585 m!159187))

(declare-fun m!159189 () Bool)

(assert (=> bs!5585 m!159189))

(assert (=> b!133672 d!41215))

(declare-fun b!134234 () Bool)

(assert (=> b!134234 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> b!134234 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 lt!69268)))))

(declare-fun lt!70263 () ListLongMap!1653)

(declare-fun e!87440 () Bool)

(assert (=> b!134234 (= e!87440 (= (apply!116 lt!70263 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 lt!69268) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134235 () Bool)

(declare-fun res!64562 () Bool)

(declare-fun e!87438 () Bool)

(assert (=> b!134235 (=> (not res!64562) (not e!87438))))

(assert (=> b!134235 (= res!64562 (not (contains!884 lt!70263 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134236 () Bool)

(declare-fun e!87435 () Bool)

(assert (=> b!134236 (= e!87435 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134236 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134237 () Bool)

(declare-fun e!87436 () Bool)

(declare-fun e!87437 () Bool)

(assert (=> b!134237 (= e!87436 e!87437)))

(declare-fun c!24959 () Bool)

(assert (=> b!134237 (= c!24959 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!134238 () Bool)

(assert (=> b!134238 (= e!87437 (= lt!70263 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun bm!14790 () Bool)

(declare-fun call!14793 () ListLongMap!1653)

(assert (=> bm!14790 (= call!14793 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!134239 () Bool)

(declare-fun e!87434 () ListLongMap!1653)

(assert (=> b!134239 (= e!87434 call!14793)))

(declare-fun b!134240 () Bool)

(declare-fun e!87439 () ListLongMap!1653)

(assert (=> b!134240 (= e!87439 e!87434)))

(declare-fun c!24956 () Bool)

(assert (=> b!134240 (= c!24956 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!41217 () Bool)

(assert (=> d!41217 e!87438))

(declare-fun res!64560 () Bool)

(assert (=> d!41217 (=> (not res!64560) (not e!87438))))

(assert (=> d!41217 (= res!64560 (not (contains!884 lt!70263 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41217 (= lt!70263 e!87439)))

(declare-fun c!24957 () Bool)

(assert (=> d!41217 (= c!24957 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!41217 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!41217 (= (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!70263)))

(declare-fun b!134241 () Bool)

(assert (=> b!134241 (= e!87436 e!87440)))

(assert (=> b!134241 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!64561 () Bool)

(assert (=> b!134241 (= res!64561 (contains!884 lt!70263 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134241 (=> (not res!64561) (not e!87440))))

(declare-fun b!134242 () Bool)

(assert (=> b!134242 (= e!87439 (ListLongMap!1654 Nil!1691))))

(declare-fun b!134243 () Bool)

(assert (=> b!134243 (= e!87437 (isEmpty!415 lt!70263))))

(declare-fun b!134244 () Bool)

(declare-fun lt!70260 () Unit!4141)

(declare-fun lt!70264 () Unit!4141)

(assert (=> b!134244 (= lt!70260 lt!70264)))

(declare-fun lt!70265 () (_ BitVec 64))

(declare-fun lt!70262 () V!3481)

(declare-fun lt!70259 () ListLongMap!1653)

(declare-fun lt!70261 () (_ BitVec 64))

(assert (=> b!134244 (not (contains!884 (+!169 lt!70259 (tuple2!2565 lt!70261 lt!70262)) lt!70265))))

(assert (=> b!134244 (= lt!70264 (addStillNotContains!63 lt!70259 lt!70261 lt!70262 lt!70265))))

(assert (=> b!134244 (= lt!70265 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134244 (= lt!70262 (get!1489 (select (arr!2253 lt!69268) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134244 (= lt!70261 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!134244 (= lt!70259 call!14793)))

(assert (=> b!134244 (= e!87434 (+!169 call!14793 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 lt!69268) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134245 () Bool)

(assert (=> b!134245 (= e!87438 e!87436)))

(declare-fun c!24958 () Bool)

(assert (=> b!134245 (= c!24958 e!87435)))

(declare-fun res!64563 () Bool)

(assert (=> b!134245 (=> (not res!64563) (not e!87435))))

(assert (=> b!134245 (= res!64563 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (= (and d!41217 c!24957) b!134242))

(assert (= (and d!41217 (not c!24957)) b!134240))

(assert (= (and b!134240 c!24956) b!134244))

(assert (= (and b!134240 (not c!24956)) b!134239))

(assert (= (or b!134244 b!134239) bm!14790))

(assert (= (and d!41217 res!64560) b!134235))

(assert (= (and b!134235 res!64562) b!134245))

(assert (= (and b!134245 res!64563) b!134236))

(assert (= (and b!134245 c!24958) b!134241))

(assert (= (and b!134245 (not c!24958)) b!134237))

(assert (= (and b!134241 res!64561) b!134234))

(assert (= (and b!134237 c!24959) b!134238))

(assert (= (and b!134237 (not c!24959)) b!134243))

(declare-fun b_lambda!6007 () Bool)

(assert (=> (not b_lambda!6007) (not b!134234)))

(assert (=> b!134234 t!6147))

(declare-fun b_and!8325 () Bool)

(assert (= b_and!8321 (and (=> t!6147 result!3993) b_and!8325)))

(assert (=> b!134234 t!6149))

(declare-fun b_and!8327 () Bool)

(assert (= b_and!8323 (and (=> t!6149 result!3995) b_and!8327)))

(declare-fun b_lambda!6009 () Bool)

(assert (=> (not b_lambda!6009) (not b!134244)))

(assert (=> b!134244 t!6147))

(declare-fun b_and!8329 () Bool)

(assert (= b_and!8325 (and (=> t!6147 result!3993) b_and!8329)))

(assert (=> b!134244 t!6149))

(declare-fun b_and!8331 () Bool)

(assert (= b_and!8327 (and (=> t!6149 result!3995) b_and!8331)))

(declare-fun m!159191 () Bool)

(assert (=> b!134243 m!159191))

(assert (=> b!134240 m!156679))

(assert (=> b!134240 m!156679))

(assert (=> b!134240 m!156689))

(assert (=> b!134236 m!156679))

(assert (=> b!134236 m!156679))

(assert (=> b!134236 m!156689))

(declare-fun m!159193 () Bool)

(assert (=> b!134238 m!159193))

(declare-fun m!159195 () Bool)

(assert (=> b!134235 m!159195))

(assert (=> b!134244 m!158039))

(assert (=> b!134244 m!156809))

(assert (=> b!134244 m!158041))

(declare-fun m!159197 () Bool)

(assert (=> b!134244 m!159197))

(declare-fun m!159199 () Bool)

(assert (=> b!134244 m!159199))

(assert (=> b!134244 m!158039))

(declare-fun m!159201 () Bool)

(assert (=> b!134244 m!159201))

(assert (=> b!134244 m!159197))

(declare-fun m!159203 () Bool)

(assert (=> b!134244 m!159203))

(assert (=> b!134244 m!156679))

(assert (=> b!134244 m!156809))

(assert (=> b!134241 m!156679))

(assert (=> b!134241 m!156679))

(declare-fun m!159205 () Bool)

(assert (=> b!134241 m!159205))

(declare-fun m!159207 () Bool)

(assert (=> d!41217 m!159207))

(assert (=> d!41217 m!156651))

(assert (=> bm!14790 m!159193))

(assert (=> b!134234 m!158039))

(assert (=> b!134234 m!156809))

(assert (=> b!134234 m!158041))

(assert (=> b!134234 m!158039))

(assert (=> b!134234 m!156679))

(declare-fun m!159209 () Bool)

(assert (=> b!134234 m!159209))

(assert (=> b!134234 m!156679))

(assert (=> b!134234 m!156809))

(assert (=> b!133672 d!41217))

(declare-fun d!41219 () Bool)

(declare-fun e!87441 () Bool)

(assert (=> d!41219 e!87441))

(declare-fun res!64565 () Bool)

(assert (=> d!41219 (=> (not res!64565) (not e!87441))))

(declare-fun lt!70268 () ListLongMap!1653)

(assert (=> d!41219 (= res!64565 (contains!884 lt!70268 (_1!1293 (tuple2!2565 lt!69925 (minValue!2719 newMap!16)))))))

(declare-fun lt!70269 () List!1694)

(assert (=> d!41219 (= lt!70268 (ListLongMap!1654 lt!70269))))

(declare-fun lt!70266 () Unit!4141)

(declare-fun lt!70267 () Unit!4141)

(assert (=> d!41219 (= lt!70266 lt!70267)))

(assert (=> d!41219 (= (getValueByKey!173 lt!70269 (_1!1293 (tuple2!2565 lt!69925 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69925 (minValue!2719 newMap!16)))))))

(assert (=> d!41219 (= lt!70267 (lemmaContainsTupThenGetReturnValue!88 lt!70269 (_1!1293 (tuple2!2565 lt!69925 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69925 (minValue!2719 newMap!16)))))))

(assert (=> d!41219 (= lt!70269 (insertStrictlySorted!91 (toList!842 lt!69927) (_1!1293 (tuple2!2565 lt!69925 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69925 (minValue!2719 newMap!16)))))))

(assert (=> d!41219 (= (+!169 lt!69927 (tuple2!2565 lt!69925 (minValue!2719 newMap!16))) lt!70268)))

(declare-fun b!134246 () Bool)

(declare-fun res!64564 () Bool)

(assert (=> b!134246 (=> (not res!64564) (not e!87441))))

(assert (=> b!134246 (= res!64564 (= (getValueByKey!173 (toList!842 lt!70268) (_1!1293 (tuple2!2565 lt!69925 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69925 (minValue!2719 newMap!16))))))))

(declare-fun b!134247 () Bool)

(assert (=> b!134247 (= e!87441 (contains!886 (toList!842 lt!70268) (tuple2!2565 lt!69925 (minValue!2719 newMap!16))))))

(assert (= (and d!41219 res!64565) b!134246))

(assert (= (and b!134246 res!64564) b!134247))

(declare-fun m!159211 () Bool)

(assert (=> d!41219 m!159211))

(declare-fun m!159213 () Bool)

(assert (=> d!41219 m!159213))

(declare-fun m!159215 () Bool)

(assert (=> d!41219 m!159215))

(declare-fun m!159217 () Bool)

(assert (=> d!41219 m!159217))

(declare-fun m!159219 () Bool)

(assert (=> b!134246 m!159219))

(declare-fun m!159221 () Bool)

(assert (=> b!134247 m!159221))

(assert (=> b!133672 d!41219))

(declare-fun d!41221 () Bool)

(declare-fun e!87442 () Bool)

(assert (=> d!41221 e!87442))

(declare-fun res!64567 () Bool)

(assert (=> d!41221 (=> (not res!64567) (not e!87442))))

(declare-fun lt!70272 () ListLongMap!1653)

(assert (=> d!41221 (= res!64567 (contains!884 lt!70272 (_1!1293 (tuple2!2565 lt!69921 (minValue!2719 newMap!16)))))))

(declare-fun lt!70273 () List!1694)

(assert (=> d!41221 (= lt!70272 (ListLongMap!1654 lt!70273))))

(declare-fun lt!70270 () Unit!4141)

(declare-fun lt!70271 () Unit!4141)

(assert (=> d!41221 (= lt!70270 lt!70271)))

(assert (=> d!41221 (= (getValueByKey!173 lt!70273 (_1!1293 (tuple2!2565 lt!69921 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69921 (minValue!2719 newMap!16)))))))

(assert (=> d!41221 (= lt!70271 (lemmaContainsTupThenGetReturnValue!88 lt!70273 (_1!1293 (tuple2!2565 lt!69921 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69921 (minValue!2719 newMap!16)))))))

(assert (=> d!41221 (= lt!70273 (insertStrictlySorted!91 (toList!842 lt!69929) (_1!1293 (tuple2!2565 lt!69921 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69921 (minValue!2719 newMap!16)))))))

(assert (=> d!41221 (= (+!169 lt!69929 (tuple2!2565 lt!69921 (minValue!2719 newMap!16))) lt!70272)))

(declare-fun b!134248 () Bool)

(declare-fun res!64566 () Bool)

(assert (=> b!134248 (=> (not res!64566) (not e!87442))))

(assert (=> b!134248 (= res!64566 (= (getValueByKey!173 (toList!842 lt!70272) (_1!1293 (tuple2!2565 lt!69921 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69921 (minValue!2719 newMap!16))))))))

(declare-fun b!134249 () Bool)

(assert (=> b!134249 (= e!87442 (contains!886 (toList!842 lt!70272) (tuple2!2565 lt!69921 (minValue!2719 newMap!16))))))

(assert (= (and d!41221 res!64567) b!134248))

(assert (= (and b!134248 res!64566) b!134249))

(declare-fun m!159223 () Bool)

(assert (=> d!41221 m!159223))

(declare-fun m!159225 () Bool)

(assert (=> d!41221 m!159225))

(declare-fun m!159227 () Bool)

(assert (=> d!41221 m!159227))

(declare-fun m!159229 () Bool)

(assert (=> d!41221 m!159229))

(declare-fun m!159231 () Bool)

(assert (=> b!134248 m!159231))

(declare-fun m!159233 () Bool)

(assert (=> b!134249 m!159233))

(assert (=> b!133672 d!41221))

(declare-fun d!41223 () Bool)

(assert (=> d!41223 (= (apply!116 (+!169 lt!69927 (tuple2!2565 lt!69925 (minValue!2719 newMap!16))) lt!69933) (apply!116 lt!69927 lt!69933))))

(declare-fun lt!70274 () Unit!4141)

(assert (=> d!41223 (= lt!70274 (choose!828 lt!69927 lt!69925 (minValue!2719 newMap!16) lt!69933))))

(declare-fun e!87443 () Bool)

(assert (=> d!41223 e!87443))

(declare-fun res!64568 () Bool)

(assert (=> d!41223 (=> (not res!64568) (not e!87443))))

(assert (=> d!41223 (= res!64568 (contains!884 lt!69927 lt!69933))))

(assert (=> d!41223 (= (addApplyDifferent!92 lt!69927 lt!69925 (minValue!2719 newMap!16) lt!69933) lt!70274)))

(declare-fun b!134250 () Bool)

(assert (=> b!134250 (= e!87443 (not (= lt!69933 lt!69925)))))

(assert (= (and d!41223 res!64568) b!134250))

(assert (=> d!41223 m!158021))

(assert (=> d!41223 m!158023))

(assert (=> d!41223 m!158007))

(declare-fun m!159235 () Bool)

(assert (=> d!41223 m!159235))

(declare-fun m!159237 () Bool)

(assert (=> d!41223 m!159237))

(assert (=> d!41223 m!158021))

(assert (=> b!133672 d!41223))

(declare-fun d!41225 () Bool)

(assert (=> d!41225 (= (apply!116 (+!169 lt!69927 (tuple2!2565 lt!69925 (minValue!2719 newMap!16))) lt!69933) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69927 (tuple2!2565 lt!69925 (minValue!2719 newMap!16)))) lt!69933)))))

(declare-fun bs!5586 () Bool)

(assert (= bs!5586 d!41225))

(declare-fun m!159239 () Bool)

(assert (=> bs!5586 m!159239))

(assert (=> bs!5586 m!159239))

(declare-fun m!159241 () Bool)

(assert (=> bs!5586 m!159241))

(assert (=> b!133672 d!41225))

(declare-fun d!41227 () Bool)

(assert (=> d!41227 (= (get!1492 (getValueByKey!173 (toList!842 lt!69504) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!173 (toList!842 lt!69504) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41093 d!41227))

(declare-fun b!134252 () Bool)

(declare-fun e!87444 () Option!179)

(declare-fun e!87445 () Option!179)

(assert (=> b!134252 (= e!87444 e!87445)))

(declare-fun c!24961 () Bool)

(assert (=> b!134252 (= c!24961 (and ((_ is Cons!1690) (toList!842 lt!69504)) (not (= (_1!1293 (h!2295 (toList!842 lt!69504))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134251 () Bool)

(assert (=> b!134251 (= e!87444 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69504)))))))

(declare-fun d!41229 () Bool)

(declare-fun c!24960 () Bool)

(assert (=> d!41229 (= c!24960 (and ((_ is Cons!1690) (toList!842 lt!69504)) (= (_1!1293 (h!2295 (toList!842 lt!69504))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41229 (= (getValueByKey!173 (toList!842 lt!69504) #b0000000000000000000000000000000000000000000000000000000000000000) e!87444)))

(declare-fun b!134254 () Bool)

(assert (=> b!134254 (= e!87445 None!177)))

(declare-fun b!134253 () Bool)

(assert (=> b!134253 (= e!87445 (getValueByKey!173 (t!6137 (toList!842 lt!69504)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41229 c!24960) b!134251))

(assert (= (and d!41229 (not c!24960)) b!134252))

(assert (= (and b!134252 c!24961) b!134253))

(assert (= (and b!134252 (not c!24961)) b!134254))

(declare-fun m!159243 () Bool)

(assert (=> b!134253 m!159243))

(assert (=> d!41093 d!41229))

(declare-fun b!134255 () Bool)

(declare-fun e!87448 () Bool)

(declare-fun call!14794 () Bool)

(assert (=> b!134255 (= e!87448 call!14794)))

(declare-fun b!134256 () Bool)

(declare-fun e!87446 () Bool)

(assert (=> b!134256 (= e!87448 e!87446)))

(declare-fun lt!70276 () (_ BitVec 64))

(assert (=> b!134256 (= lt!70276 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!70275 () Unit!4141)

(assert (=> b!134256 (= lt!70275 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 (_2!1294 lt!69280)) lt!70276 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!134256 (arrayContainsKey!0 (_keys!4613 (_2!1294 lt!69280)) lt!70276 #b00000000000000000000000000000000)))

(declare-fun lt!70277 () Unit!4141)

(assert (=> b!134256 (= lt!70277 lt!70275)))

(declare-fun res!64569 () Bool)

(assert (=> b!134256 (= res!64569 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4613 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280))) (Found!269 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134256 (=> (not res!64569) (not e!87446))))

(declare-fun b!134257 () Bool)

(declare-fun e!87447 () Bool)

(assert (=> b!134257 (= e!87447 e!87448)))

(declare-fun c!24962 () Bool)

(assert (=> b!134257 (= c!24962 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134258 () Bool)

(assert (=> b!134258 (= e!87446 call!14794)))

(declare-fun d!41231 () Bool)

(declare-fun res!64570 () Bool)

(assert (=> d!41231 (=> res!64570 e!87447)))

(assert (=> d!41231 (= res!64570 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(assert (=> d!41231 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4613 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280))) e!87447)))

(declare-fun bm!14791 () Bool)

(assert (=> bm!14791 (= call!14794 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4613 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280))))))

(assert (= (and d!41231 (not res!64570)) b!134257))

(assert (= (and b!134257 c!24962) b!134256))

(assert (= (and b!134257 (not c!24962)) b!134255))

(assert (= (and b!134256 res!64569) b!134258))

(assert (= (or b!134258 b!134255) bm!14791))

(declare-fun m!159245 () Bool)

(assert (=> b!134256 m!159245))

(declare-fun m!159247 () Bool)

(assert (=> b!134256 m!159247))

(declare-fun m!159249 () Bool)

(assert (=> b!134256 m!159249))

(assert (=> b!134256 m!159245))

(declare-fun m!159251 () Bool)

(assert (=> b!134256 m!159251))

(assert (=> b!134257 m!159245))

(assert (=> b!134257 m!159245))

(declare-fun m!159253 () Bool)

(assert (=> b!134257 m!159253))

(declare-fun m!159255 () Bool)

(assert (=> bm!14791 m!159255))

(assert (=> bm!14765 d!41231))

(declare-fun d!41233 () Bool)

(assert (=> d!41233 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69335) lt!69334)) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69335) lt!69334))))))

(declare-fun bs!5587 () Bool)

(assert (= bs!5587 d!41233))

(assert (=> bs!5587 m!158603))

(declare-fun m!159257 () Bool)

(assert (=> bs!5587 m!159257))

(assert (=> b!133939 d!41233))

(declare-fun b!134260 () Bool)

(declare-fun e!87449 () Option!179)

(declare-fun e!87450 () Option!179)

(assert (=> b!134260 (= e!87449 e!87450)))

(declare-fun c!24964 () Bool)

(assert (=> b!134260 (= c!24964 (and ((_ is Cons!1690) (toList!842 lt!69335)) (not (= (_1!1293 (h!2295 (toList!842 lt!69335))) lt!69334))))))

(declare-fun b!134259 () Bool)

(assert (=> b!134259 (= e!87449 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69335)))))))

(declare-fun d!41235 () Bool)

(declare-fun c!24963 () Bool)

(assert (=> d!41235 (= c!24963 (and ((_ is Cons!1690) (toList!842 lt!69335)) (= (_1!1293 (h!2295 (toList!842 lt!69335))) lt!69334)))))

(assert (=> d!41235 (= (getValueByKey!173 (toList!842 lt!69335) lt!69334) e!87449)))

(declare-fun b!134262 () Bool)

(assert (=> b!134262 (= e!87450 None!177)))

(declare-fun b!134261 () Bool)

(assert (=> b!134261 (= e!87450 (getValueByKey!173 (t!6137 (toList!842 lt!69335)) lt!69334))))

(assert (= (and d!41235 c!24963) b!134259))

(assert (= (and d!41235 (not c!24963)) b!134260))

(assert (= (and b!134260 c!24964) b!134261))

(assert (= (and b!134260 (not c!24964)) b!134262))

(declare-fun m!159259 () Bool)

(assert (=> b!134261 m!159259))

(assert (=> b!133939 d!41235))

(declare-fun d!41237 () Bool)

(declare-fun e!87451 () Bool)

(assert (=> d!41237 e!87451))

(declare-fun res!64572 () Bool)

(assert (=> d!41237 (=> (not res!64572) (not e!87451))))

(declare-fun lt!70280 () ListLongMap!1653)

(assert (=> d!41237 (= res!64572 (contains!884 lt!70280 (_1!1293 (ite (or c!24835 c!24837) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!70281 () List!1694)

(assert (=> d!41237 (= lt!70280 (ListLongMap!1654 lt!70281))))

(declare-fun lt!70278 () Unit!4141)

(declare-fun lt!70279 () Unit!4141)

(assert (=> d!41237 (= lt!70278 lt!70279)))

(assert (=> d!41237 (= (getValueByKey!173 lt!70281 (_1!1293 (ite (or c!24835 c!24837) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24835 c!24837) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41237 (= lt!70279 (lemmaContainsTupThenGetReturnValue!88 lt!70281 (_1!1293 (ite (or c!24835 c!24837) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24835 c!24837) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41237 (= lt!70281 (insertStrictlySorted!91 (toList!842 (ite c!24835 call!14762 (ite c!24837 call!14763 call!14765))) (_1!1293 (ite (or c!24835 c!24837) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24835 c!24837) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41237 (= (+!169 (ite c!24835 call!14762 (ite c!24837 call!14763 call!14765)) (ite (or c!24835 c!24837) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70280)))

(declare-fun b!134263 () Bool)

(declare-fun res!64571 () Bool)

(assert (=> b!134263 (=> (not res!64571) (not e!87451))))

(assert (=> b!134263 (= res!64571 (= (getValueByKey!173 (toList!842 lt!70280) (_1!1293 (ite (or c!24835 c!24837) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24835 c!24837) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!134264 () Bool)

(assert (=> b!134264 (= e!87451 (contains!886 (toList!842 lt!70280) (ite (or c!24835 c!24837) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!41237 res!64572) b!134263))

(assert (= (and b!134263 res!64571) b!134264))

(declare-fun m!159261 () Bool)

(assert (=> d!41237 m!159261))

(declare-fun m!159263 () Bool)

(assert (=> d!41237 m!159263))

(declare-fun m!159265 () Bool)

(assert (=> d!41237 m!159265))

(declare-fun m!159267 () Bool)

(assert (=> d!41237 m!159267))

(declare-fun m!159269 () Bool)

(assert (=> b!134263 m!159269))

(declare-fun m!159271 () Bool)

(assert (=> b!134264 m!159271))

(assert (=> bm!14758 d!41237))

(declare-fun d!41239 () Bool)

(declare-fun res!64573 () Bool)

(declare-fun e!87452 () Bool)

(assert (=> d!41239 (=> res!64573 e!87452)))

(assert (=> d!41239 (= res!64573 (and ((_ is Cons!1690) (toList!842 lt!69625)) (= (_1!1293 (h!2295 (toList!842 lt!69625))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41239 (= (containsKey!176 (toList!842 lt!69625) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87452)))

(declare-fun b!134265 () Bool)

(declare-fun e!87453 () Bool)

(assert (=> b!134265 (= e!87452 e!87453)))

(declare-fun res!64574 () Bool)

(assert (=> b!134265 (=> (not res!64574) (not e!87453))))

(assert (=> b!134265 (= res!64574 (and (or (not ((_ is Cons!1690) (toList!842 lt!69625))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69625))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Cons!1690) (toList!842 lt!69625)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69625))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134266 () Bool)

(assert (=> b!134266 (= e!87453 (containsKey!176 (t!6137 (toList!842 lt!69625)) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41239 (not res!64573)) b!134265))

(assert (= (and b!134265 res!64574) b!134266))

(declare-fun m!159273 () Bool)

(assert (=> b!134266 m!159273))

(assert (=> d!41005 d!41239))

(declare-fun d!41241 () Bool)

(declare-fun e!87455 () Bool)

(assert (=> d!41241 e!87455))

(declare-fun res!64575 () Bool)

(assert (=> d!41241 (=> res!64575 e!87455)))

(declare-fun lt!70282 () Bool)

(assert (=> d!41241 (= res!64575 (not lt!70282))))

(declare-fun lt!70283 () Bool)

(assert (=> d!41241 (= lt!70282 lt!70283)))

(declare-fun lt!70284 () Unit!4141)

(declare-fun e!87454 () Unit!4141)

(assert (=> d!41241 (= lt!70284 e!87454)))

(declare-fun c!24965 () Bool)

(assert (=> d!41241 (= c!24965 lt!70283)))

(assert (=> d!41241 (= lt!70283 (containsKey!176 (toList!842 lt!69958) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41241 (= (contains!884 lt!69958 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70282)))

(declare-fun b!134267 () Bool)

(declare-fun lt!70285 () Unit!4141)

(assert (=> b!134267 (= e!87454 lt!70285)))

(assert (=> b!134267 (= lt!70285 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69958) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134267 (isDefined!125 (getValueByKey!173 (toList!842 lt!69958) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134268 () Bool)

(declare-fun Unit!4205 () Unit!4141)

(assert (=> b!134268 (= e!87454 Unit!4205)))

(declare-fun b!134269 () Bool)

(assert (=> b!134269 (= e!87455 (isDefined!125 (getValueByKey!173 (toList!842 lt!69958) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41241 c!24965) b!134267))

(assert (= (and d!41241 (not c!24965)) b!134268))

(assert (= (and d!41241 (not res!64575)) b!134269))

(declare-fun m!159275 () Bool)

(assert (=> d!41241 m!159275))

(declare-fun m!159277 () Bool)

(assert (=> b!134267 m!159277))

(declare-fun m!159279 () Bool)

(assert (=> b!134267 m!159279))

(assert (=> b!134267 m!159279))

(declare-fun m!159281 () Bool)

(assert (=> b!134267 m!159281))

(assert (=> b!134269 m!159279))

(assert (=> b!134269 m!159279))

(assert (=> b!134269 m!159281))

(assert (=> bm!14744 d!41241))

(assert (=> b!133901 d!41001))

(assert (=> b!133830 d!40621))

(declare-fun d!41243 () Bool)

(declare-fun res!64576 () Bool)

(declare-fun e!87456 () Bool)

(assert (=> d!41243 (=> res!64576 e!87456)))

(assert (=> d!41243 (= res!64576 (and ((_ is Cons!1690) (toList!842 lt!69339)) (= (_1!1293 (h!2295 (toList!842 lt!69339))) lt!69345)))))

(assert (=> d!41243 (= (containsKey!176 (toList!842 lt!69339) lt!69345) e!87456)))

(declare-fun b!134270 () Bool)

(declare-fun e!87457 () Bool)

(assert (=> b!134270 (= e!87456 e!87457)))

(declare-fun res!64577 () Bool)

(assert (=> b!134270 (=> (not res!64577) (not e!87457))))

(assert (=> b!134270 (= res!64577 (and (or (not ((_ is Cons!1690) (toList!842 lt!69339))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69339))) lt!69345)) ((_ is Cons!1690) (toList!842 lt!69339)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69339))) lt!69345)))))

(declare-fun b!134271 () Bool)

(assert (=> b!134271 (= e!87457 (containsKey!176 (t!6137 (toList!842 lt!69339)) lt!69345))))

(assert (= (and d!41243 (not res!64576)) b!134270))

(assert (= (and b!134270 res!64577) b!134271))

(declare-fun m!159283 () Bool)

(assert (=> b!134271 m!159283))

(assert (=> d!40755 d!41243))

(declare-fun d!41245 () Bool)

(declare-fun e!87459 () Bool)

(assert (=> d!41245 e!87459))

(declare-fun res!64578 () Bool)

(assert (=> d!41245 (=> res!64578 e!87459)))

(declare-fun lt!70286 () Bool)

(assert (=> d!41245 (= res!64578 (not lt!70286))))

(declare-fun lt!70287 () Bool)

(assert (=> d!41245 (= lt!70286 lt!70287)))

(declare-fun lt!70288 () Unit!4141)

(declare-fun e!87458 () Unit!4141)

(assert (=> d!41245 (= lt!70288 e!87458)))

(declare-fun c!24966 () Bool)

(assert (=> d!41245 (= c!24966 lt!70287)))

(assert (=> d!41245 (= lt!70287 (containsKey!176 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 lt!69441) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))

(assert (=> d!41245 (= (contains!884 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2252 lt!69441) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))) lt!70286)))

(declare-fun b!134272 () Bool)

(declare-fun lt!70289 () Unit!4141)

(assert (=> b!134272 (= e!87458 lt!70289)))

(assert (=> b!134272 (= lt!70289 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 lt!69441) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))

(assert (=> b!134272 (isDefined!125 (getValueByKey!173 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 lt!69441) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))

(declare-fun b!134273 () Bool)

(declare-fun Unit!4206 () Unit!4141)

(assert (=> b!134273 (= e!87458 Unit!4206)))

(declare-fun b!134274 () Bool)

(assert (=> b!134274 (= e!87459 (isDefined!125 (getValueByKey!173 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 lt!69441) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))))))))

(assert (= (and d!41245 c!24966) b!134272))

(assert (= (and d!41245 (not c!24966)) b!134273))

(assert (= (and d!41245 (not res!64578)) b!134274))

(assert (=> d!41245 m!157553))

(declare-fun m!159285 () Bool)

(assert (=> d!41245 m!159285))

(assert (=> b!134272 m!157553))

(declare-fun m!159287 () Bool)

(assert (=> b!134272 m!159287))

(assert (=> b!134272 m!157553))

(declare-fun m!159289 () Bool)

(assert (=> b!134272 m!159289))

(assert (=> b!134272 m!159289))

(declare-fun m!159291 () Bool)

(assert (=> b!134272 m!159291))

(assert (=> b!134274 m!157553))

(assert (=> b!134274 m!159289))

(assert (=> b!134274 m!159289))

(assert (=> b!134274 m!159291))

(assert (=> b!133413 d!41245))

(assert (=> b!133413 d!40671))

(declare-fun d!41247 () Bool)

(declare-fun lt!70290 () Bool)

(assert (=> d!41247 (= lt!70290 (select (content!134 lt!69915) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun e!87461 () Bool)

(assert (=> d!41247 (= lt!70290 e!87461)))

(declare-fun res!64580 () Bool)

(assert (=> d!41247 (=> (not res!64580) (not e!87461))))

(assert (=> d!41247 (= res!64580 ((_ is Cons!1690) lt!69915))))

(assert (=> d!41247 (= (contains!886 lt!69915 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!70290)))

(declare-fun b!134275 () Bool)

(declare-fun e!87460 () Bool)

(assert (=> b!134275 (= e!87461 e!87460)))

(declare-fun res!64579 () Bool)

(assert (=> b!134275 (=> res!64579 e!87460)))

(assert (=> b!134275 (= res!64579 (= (h!2295 lt!69915) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134276 () Bool)

(assert (=> b!134276 (= e!87460 (contains!886 (t!6137 lt!69915) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!41247 res!64580) b!134275))

(assert (= (and b!134275 (not res!64579)) b!134276))

(declare-fun m!159293 () Bool)

(assert (=> d!41247 m!159293))

(declare-fun m!159295 () Bool)

(assert (=> d!41247 m!159295))

(declare-fun m!159297 () Bool)

(assert (=> b!134276 m!159297))

(assert (=> b!133656 d!41247))

(declare-fun d!41249 () Bool)

(declare-fun res!64581 () Bool)

(declare-fun e!87462 () Bool)

(assert (=> d!41249 (=> res!64581 e!87462)))

(assert (=> d!41249 (= res!64581 (and ((_ is Cons!1690) (toList!842 lt!69504)) (= (_1!1293 (h!2295 (toList!842 lt!69504))) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!41249 (= (containsKey!176 (toList!842 lt!69504) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) e!87462)))

(declare-fun b!134277 () Bool)

(declare-fun e!87463 () Bool)

(assert (=> b!134277 (= e!87462 e!87463)))

(declare-fun res!64582 () Bool)

(assert (=> b!134277 (=> (not res!64582) (not e!87463))))

(assert (=> b!134277 (= res!64582 (and (or (not ((_ is Cons!1690) (toList!842 lt!69504))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69504))) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1690) (toList!842 lt!69504)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69504))) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!134278 () Bool)

(assert (=> b!134278 (= e!87463 (containsKey!176 (t!6137 (toList!842 lt!69504)) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41249 (not res!64581)) b!134277))

(assert (= (and b!134277 res!64582) b!134278))

(assert (=> b!134278 m!156679))

(declare-fun m!159299 () Bool)

(assert (=> b!134278 m!159299))

(assert (=> d!40763 d!41249))

(declare-fun d!41251 () Bool)

(declare-fun e!87464 () Bool)

(assert (=> d!41251 e!87464))

(declare-fun res!64584 () Bool)

(assert (=> d!41251 (=> (not res!64584) (not e!87464))))

(declare-fun lt!70293 () ListLongMap!1653)

(assert (=> d!41251 (= res!64584 (contains!884 lt!70293 (_1!1293 (ite (or c!24718 c!24720) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1294 lt!69280))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280)))))))))

(declare-fun lt!70294 () List!1694)

(assert (=> d!41251 (= lt!70293 (ListLongMap!1654 lt!70294))))

(declare-fun lt!70291 () Unit!4141)

(declare-fun lt!70292 () Unit!4141)

(assert (=> d!41251 (= lt!70291 lt!70292)))

(assert (=> d!41251 (= (getValueByKey!173 lt!70294 (_1!1293 (ite (or c!24718 c!24720) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1294 lt!69280))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280)))))) (Some!178 (_2!1293 (ite (or c!24718 c!24720) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1294 lt!69280))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280)))))))))

(assert (=> d!41251 (= lt!70292 (lemmaContainsTupThenGetReturnValue!88 lt!70294 (_1!1293 (ite (or c!24718 c!24720) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1294 lt!69280))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280))))) (_2!1293 (ite (or c!24718 c!24720) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1294 lt!69280))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280)))))))))

(assert (=> d!41251 (= lt!70294 (insertStrictlySorted!91 (toList!842 (ite c!24718 call!14702 (ite c!24720 call!14703 call!14705))) (_1!1293 (ite (or c!24718 c!24720) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1294 lt!69280))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280))))) (_2!1293 (ite (or c!24718 c!24720) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1294 lt!69280))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280)))))))))

(assert (=> d!41251 (= (+!169 (ite c!24718 call!14702 (ite c!24720 call!14703 call!14705)) (ite (or c!24718 c!24720) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1294 lt!69280))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280))))) lt!70293)))

(declare-fun b!134279 () Bool)

(declare-fun res!64583 () Bool)

(assert (=> b!134279 (=> (not res!64583) (not e!87464))))

(assert (=> b!134279 (= res!64583 (= (getValueByKey!173 (toList!842 lt!70293) (_1!1293 (ite (or c!24718 c!24720) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1294 lt!69280))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280)))))) (Some!178 (_2!1293 (ite (or c!24718 c!24720) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1294 lt!69280))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280))))))))))

(declare-fun b!134280 () Bool)

(assert (=> b!134280 (= e!87464 (contains!886 (toList!842 lt!70293) (ite (or c!24718 c!24720) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1294 lt!69280))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69280))))))))

(assert (= (and d!41251 res!64584) b!134279))

(assert (= (and b!134279 res!64583) b!134280))

(declare-fun m!159301 () Bool)

(assert (=> d!41251 m!159301))

(declare-fun m!159303 () Bool)

(assert (=> d!41251 m!159303))

(declare-fun m!159305 () Bool)

(assert (=> d!41251 m!159305))

(declare-fun m!159307 () Bool)

(assert (=> d!41251 m!159307))

(declare-fun m!159309 () Bool)

(assert (=> b!134279 m!159309))

(declare-fun m!159311 () Bool)

(assert (=> b!134280 m!159311))

(assert (=> bm!14698 d!41251))

(declare-fun d!41253 () Bool)

(declare-fun e!87466 () Bool)

(assert (=> d!41253 e!87466))

(declare-fun res!64585 () Bool)

(assert (=> d!41253 (=> res!64585 e!87466)))

(declare-fun lt!70295 () Bool)

(assert (=> d!41253 (= res!64585 (not lt!70295))))

(declare-fun lt!70296 () Bool)

(assert (=> d!41253 (= lt!70295 lt!70296)))

(declare-fun lt!70297 () Unit!4141)

(declare-fun e!87465 () Unit!4141)

(assert (=> d!41253 (= lt!70297 e!87465)))

(declare-fun c!24967 () Bool)

(assert (=> d!41253 (= c!24967 lt!70296)))

(assert (=> d!41253 (= lt!70296 (containsKey!176 (toList!842 (+!169 lt!69985 (tuple2!2565 lt!69987 lt!69988))) lt!69991))))

(assert (=> d!41253 (= (contains!884 (+!169 lt!69985 (tuple2!2565 lt!69987 lt!69988)) lt!69991) lt!70295)))

(declare-fun b!134281 () Bool)

(declare-fun lt!70298 () Unit!4141)

(assert (=> b!134281 (= e!87465 lt!70298)))

(assert (=> b!134281 (= lt!70298 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69985 (tuple2!2565 lt!69987 lt!69988))) lt!69991))))

(assert (=> b!134281 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69985 (tuple2!2565 lt!69987 lt!69988))) lt!69991))))

(declare-fun b!134282 () Bool)

(declare-fun Unit!4207 () Unit!4141)

(assert (=> b!134282 (= e!87465 Unit!4207)))

(declare-fun b!134283 () Bool)

(assert (=> b!134283 (= e!87466 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69985 (tuple2!2565 lt!69987 lt!69988))) lt!69991)))))

(assert (= (and d!41253 c!24967) b!134281))

(assert (= (and d!41253 (not c!24967)) b!134282))

(assert (= (and d!41253 (not res!64585)) b!134283))

(declare-fun m!159313 () Bool)

(assert (=> d!41253 m!159313))

(declare-fun m!159315 () Bool)

(assert (=> b!134281 m!159315))

(declare-fun m!159317 () Bool)

(assert (=> b!134281 m!159317))

(assert (=> b!134281 m!159317))

(declare-fun m!159319 () Bool)

(assert (=> b!134281 m!159319))

(assert (=> b!134283 m!159317))

(assert (=> b!134283 m!159317))

(assert (=> b!134283 m!159319))

(assert (=> b!133785 d!41253))

(declare-fun d!41255 () Bool)

(declare-fun e!87467 () Bool)

(assert (=> d!41255 e!87467))

(declare-fun res!64587 () Bool)

(assert (=> d!41255 (=> (not res!64587) (not e!87467))))

(declare-fun lt!70301 () ListLongMap!1653)

(assert (=> d!41255 (= res!64587 (contains!884 lt!70301 (_1!1293 (tuple2!2565 lt!69987 lt!69988))))))

(declare-fun lt!70302 () List!1694)

(assert (=> d!41255 (= lt!70301 (ListLongMap!1654 lt!70302))))

(declare-fun lt!70299 () Unit!4141)

(declare-fun lt!70300 () Unit!4141)

(assert (=> d!41255 (= lt!70299 lt!70300)))

(assert (=> d!41255 (= (getValueByKey!173 lt!70302 (_1!1293 (tuple2!2565 lt!69987 lt!69988))) (Some!178 (_2!1293 (tuple2!2565 lt!69987 lt!69988))))))

(assert (=> d!41255 (= lt!70300 (lemmaContainsTupThenGetReturnValue!88 lt!70302 (_1!1293 (tuple2!2565 lt!69987 lt!69988)) (_2!1293 (tuple2!2565 lt!69987 lt!69988))))))

(assert (=> d!41255 (= lt!70302 (insertStrictlySorted!91 (toList!842 lt!69985) (_1!1293 (tuple2!2565 lt!69987 lt!69988)) (_2!1293 (tuple2!2565 lt!69987 lt!69988))))))

(assert (=> d!41255 (= (+!169 lt!69985 (tuple2!2565 lt!69987 lt!69988)) lt!70301)))

(declare-fun b!134284 () Bool)

(declare-fun res!64586 () Bool)

(assert (=> b!134284 (=> (not res!64586) (not e!87467))))

(assert (=> b!134284 (= res!64586 (= (getValueByKey!173 (toList!842 lt!70301) (_1!1293 (tuple2!2565 lt!69987 lt!69988))) (Some!178 (_2!1293 (tuple2!2565 lt!69987 lt!69988)))))))

(declare-fun b!134285 () Bool)

(assert (=> b!134285 (= e!87467 (contains!886 (toList!842 lt!70301) (tuple2!2565 lt!69987 lt!69988)))))

(assert (= (and d!41255 res!64587) b!134284))

(assert (= (and b!134284 res!64586) b!134285))

(declare-fun m!159321 () Bool)

(assert (=> d!41255 m!159321))

(declare-fun m!159323 () Bool)

(assert (=> d!41255 m!159323))

(declare-fun m!159325 () Bool)

(assert (=> d!41255 m!159325))

(declare-fun m!159327 () Bool)

(assert (=> d!41255 m!159327))

(declare-fun m!159329 () Bool)

(assert (=> b!134284 m!159329))

(declare-fun m!159331 () Bool)

(assert (=> b!134285 m!159331))

(assert (=> b!133785 d!41255))

(assert (=> b!133785 d!40885))

(declare-fun d!41257 () Bool)

(declare-fun e!87468 () Bool)

(assert (=> d!41257 e!87468))

(declare-fun res!64589 () Bool)

(assert (=> d!41257 (=> (not res!64589) (not e!87468))))

(declare-fun lt!70305 () ListLongMap!1653)

(assert (=> d!41257 (= res!64589 (contains!884 lt!70305 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70306 () List!1694)

(assert (=> d!41257 (= lt!70305 (ListLongMap!1654 lt!70306))))

(declare-fun lt!70303 () Unit!4141)

(declare-fun lt!70304 () Unit!4141)

(assert (=> d!41257 (= lt!70303 lt!70304)))

(assert (=> d!41257 (= (getValueByKey!173 lt!70306 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41257 (= lt!70304 (lemmaContainsTupThenGetReturnValue!88 lt!70306 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41257 (= lt!70306 (insertStrictlySorted!91 (toList!842 call!14759) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41257 (= (+!169 call!14759 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70305)))

(declare-fun b!134286 () Bool)

(declare-fun res!64588 () Bool)

(assert (=> b!134286 (=> (not res!64588) (not e!87468))))

(assert (=> b!134286 (= res!64588 (= (getValueByKey!173 (toList!842 lt!70305) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134287 () Bool)

(assert (=> b!134287 (= e!87468 (contains!886 (toList!842 lt!70305) (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41257 res!64589) b!134286))

(assert (= (and b!134286 res!64588) b!134287))

(declare-fun m!159333 () Bool)

(assert (=> d!41257 m!159333))

(declare-fun m!159335 () Bool)

(assert (=> d!41257 m!159335))

(declare-fun m!159337 () Bool)

(assert (=> d!41257 m!159337))

(declare-fun m!159339 () Bool)

(assert (=> d!41257 m!159339))

(declare-fun m!159341 () Bool)

(assert (=> b!134286 m!159341))

(declare-fun m!159343 () Bool)

(assert (=> b!134287 m!159343))

(assert (=> b!133785 d!41257))

(declare-fun d!41259 () Bool)

(assert (=> d!41259 (not (contains!884 (+!169 lt!69985 (tuple2!2565 lt!69987 lt!69988)) lt!69991))))

(declare-fun lt!70307 () Unit!4141)

(assert (=> d!41259 (= lt!70307 (choose!836 lt!69985 lt!69987 lt!69988 lt!69991))))

(declare-fun e!87469 () Bool)

(assert (=> d!41259 e!87469))

(declare-fun res!64590 () Bool)

(assert (=> d!41259 (=> (not res!64590) (not e!87469))))

(assert (=> d!41259 (= res!64590 (not (contains!884 lt!69985 lt!69991)))))

(assert (=> d!41259 (= (addStillNotContains!63 lt!69985 lt!69987 lt!69988 lt!69991) lt!70307)))

(declare-fun b!134288 () Bool)

(assert (=> b!134288 (= e!87469 (not (= lt!69987 lt!69991)))))

(assert (= (and d!41259 res!64590) b!134288))

(assert (=> d!41259 m!158207))

(assert (=> d!41259 m!158207))

(assert (=> d!41259 m!158213))

(declare-fun m!159345 () Bool)

(assert (=> d!41259 m!159345))

(declare-fun m!159347 () Bool)

(assert (=> d!41259 m!159347))

(assert (=> b!133785 d!41259))

(assert (=> b!133844 d!41183))

(assert (=> d!41017 d!40845))

(assert (=> d!41017 d!40807))

(declare-fun d!41261 () Bool)

(assert (=> d!41261 (isDefined!125 (getValueByKey!173 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41261 true))

(declare-fun _$12!400 () Unit!4141)

(assert (=> d!41261 (= (choose!831 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000) _$12!400)))

(declare-fun bs!5588 () Bool)

(assert (= bs!5588 d!41261))

(assert (=> bs!5588 m!157055))

(assert (=> bs!5588 m!157055))

(assert (=> bs!5588 m!157221))

(assert (=> d!41017 d!41261))

(declare-fun d!41263 () Bool)

(declare-fun res!64591 () Bool)

(declare-fun e!87470 () Bool)

(assert (=> d!41263 (=> res!64591 e!87470)))

(assert (=> d!41263 (= res!64591 (or ((_ is Nil!1691) (toList!842 lt!69344)) ((_ is Nil!1691) (t!6137 (toList!842 lt!69344)))))))

(assert (=> d!41263 (= (isStrictlySorted!309 (toList!842 lt!69344)) e!87470)))

(declare-fun b!134289 () Bool)

(declare-fun e!87471 () Bool)

(assert (=> b!134289 (= e!87470 e!87471)))

(declare-fun res!64592 () Bool)

(assert (=> b!134289 (=> (not res!64592) (not e!87471))))

(assert (=> b!134289 (= res!64592 (bvslt (_1!1293 (h!2295 (toList!842 lt!69344))) (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344))))))))

(declare-fun b!134290 () Bool)

(assert (=> b!134290 (= e!87471 (isStrictlySorted!309 (t!6137 (toList!842 lt!69344))))))

(assert (= (and d!41263 (not res!64591)) b!134289))

(assert (= (and b!134289 res!64592) b!134290))

(declare-fun m!159349 () Bool)

(assert (=> b!134290 m!159349))

(assert (=> d!41017 d!41263))

(declare-fun d!41265 () Bool)

(assert (=> d!41265 (isDefined!125 (getValueByKey!173 (toList!842 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70308 () Unit!4141)

(assert (=> d!41265 (= lt!70308 (choose!831 (toList!842 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87472 () Bool)

(assert (=> d!41265 e!87472))

(declare-fun res!64593 () Bool)

(assert (=> d!41265 (=> (not res!64593) (not e!87472))))

(assert (=> d!41265 (= res!64593 (isStrictlySorted!309 (toList!842 lt!69486)))))

(assert (=> d!41265 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70308)))

(declare-fun b!134291 () Bool)

(assert (=> b!134291 (= e!87472 (containsKey!176 (toList!842 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41265 res!64593) b!134291))

(assert (=> d!41265 m!158651))

(assert (=> d!41265 m!158651))

(assert (=> d!41265 m!158653))

(declare-fun m!159351 () Bool)

(assert (=> d!41265 m!159351))

(declare-fun m!159353 () Bool)

(assert (=> d!41265 m!159353))

(assert (=> b!134291 m!158647))

(assert (=> b!133975 d!41265))

(declare-fun d!41267 () Bool)

(assert (=> d!41267 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5589 () Bool)

(assert (= bs!5589 d!41267))

(assert (=> bs!5589 m!158651))

(declare-fun m!159355 () Bool)

(assert (=> bs!5589 m!159355))

(assert (=> b!133975 d!41267))

(declare-fun b!134293 () Bool)

(declare-fun e!87473 () Option!179)

(declare-fun e!87474 () Option!179)

(assert (=> b!134293 (= e!87473 e!87474)))

(declare-fun c!24969 () Bool)

(assert (=> b!134293 (= c!24969 (and ((_ is Cons!1690) (toList!842 lt!69486)) (not (= (_1!1293 (h!2295 (toList!842 lt!69486))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134292 () Bool)

(assert (=> b!134292 (= e!87473 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69486)))))))

(declare-fun d!41269 () Bool)

(declare-fun c!24968 () Bool)

(assert (=> d!41269 (= c!24968 (and ((_ is Cons!1690) (toList!842 lt!69486)) (= (_1!1293 (h!2295 (toList!842 lt!69486))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41269 (= (getValueByKey!173 (toList!842 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000) e!87473)))

(declare-fun b!134295 () Bool)

(assert (=> b!134295 (= e!87474 None!177)))

(declare-fun b!134294 () Bool)

(assert (=> b!134294 (= e!87474 (getValueByKey!173 (t!6137 (toList!842 lt!69486)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41269 c!24968) b!134292))

(assert (= (and d!41269 (not c!24968)) b!134293))

(assert (= (and b!134293 c!24969) b!134294))

(assert (= (and b!134293 (not c!24969)) b!134295))

(declare-fun m!159357 () Bool)

(assert (=> b!134294 m!159357))

(assert (=> b!133975 d!41269))

(declare-fun b!134297 () Bool)

(declare-fun e!87475 () Option!179)

(declare-fun e!87476 () Option!179)

(assert (=> b!134297 (= e!87475 e!87476)))

(declare-fun c!24971 () Bool)

(assert (=> b!134297 (= c!24971 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69373))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69373)))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!134296 () Bool)

(assert (=> b!134296 (= e!87475 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 lt!69373))))))))

(declare-fun c!24970 () Bool)

(declare-fun d!41271 () Bool)

(assert (=> d!41271 (= c!24970 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69373))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69373)))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!41271 (= (getValueByKey!173 (t!6137 (toList!842 lt!69373)) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!87475)))

(declare-fun b!134299 () Bool)

(assert (=> b!134299 (= e!87476 None!177)))

(declare-fun b!134298 () Bool)

(assert (=> b!134298 (= e!87476 (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69373))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41271 c!24970) b!134296))

(assert (= (and d!41271 (not c!24970)) b!134297))

(assert (= (and b!134297 c!24971) b!134298))

(assert (= (and b!134297 (not c!24971)) b!134299))

(declare-fun m!159359 () Bool)

(assert (=> b!134298 m!159359))

(assert (=> b!133303 d!41271))

(declare-fun d!41273 () Bool)

(declare-fun e!87478 () Bool)

(assert (=> d!41273 e!87478))

(declare-fun res!64594 () Bool)

(assert (=> d!41273 (=> res!64594 e!87478)))

(declare-fun lt!70309 () Bool)

(assert (=> d!41273 (= res!64594 (not lt!70309))))

(declare-fun lt!70310 () Bool)

(assert (=> d!41273 (= lt!70309 lt!70310)))

(declare-fun lt!70311 () Unit!4141)

(declare-fun e!87477 () Unit!4141)

(assert (=> d!41273 (= lt!70311 e!87477)))

(declare-fun c!24972 () Bool)

(assert (=> d!41273 (= c!24972 lt!70310)))

(assert (=> d!41273 (= lt!70310 (containsKey!176 (toList!842 lt!69680) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41273 (= (contains!884 lt!69680 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70309)))

(declare-fun b!134300 () Bool)

(declare-fun lt!70312 () Unit!4141)

(assert (=> b!134300 (= e!87477 lt!70312)))

(assert (=> b!134300 (= lt!70312 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69680) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134300 (isDefined!125 (getValueByKey!173 (toList!842 lt!69680) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134301 () Bool)

(declare-fun Unit!4208 () Unit!4141)

(assert (=> b!134301 (= e!87477 Unit!4208)))

(declare-fun b!134302 () Bool)

(assert (=> b!134302 (= e!87478 (isDefined!125 (getValueByKey!173 (toList!842 lt!69680) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41273 c!24972) b!134300))

(assert (= (and d!41273 (not c!24972)) b!134301))

(assert (= (and d!41273 (not res!64594)) b!134302))

(declare-fun m!159361 () Bool)

(assert (=> d!41273 m!159361))

(declare-fun m!159363 () Bool)

(assert (=> b!134300 m!159363))

(declare-fun m!159365 () Bool)

(assert (=> b!134300 m!159365))

(assert (=> b!134300 m!159365))

(declare-fun m!159367 () Bool)

(assert (=> b!134300 m!159367))

(assert (=> b!134302 m!159365))

(assert (=> b!134302 m!159365))

(assert (=> b!134302 m!159367))

(assert (=> bm!14683 d!41273))

(declare-fun d!41275 () Bool)

(declare-fun e!87480 () Bool)

(assert (=> d!41275 e!87480))

(declare-fun res!64595 () Bool)

(assert (=> d!41275 (=> res!64595 e!87480)))

(declare-fun lt!70313 () Bool)

(assert (=> d!41275 (= res!64595 (not lt!70313))))

(declare-fun lt!70314 () Bool)

(assert (=> d!41275 (= lt!70313 lt!70314)))

(declare-fun lt!70315 () Unit!4141)

(declare-fun e!87479 () Unit!4141)

(assert (=> d!41275 (= lt!70315 e!87479)))

(declare-fun c!24973 () Bool)

(assert (=> d!41275 (= c!24973 lt!70314)))

(assert (=> d!41275 (= lt!70314 (containsKey!176 (toList!842 lt!69702) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41275 (= (contains!884 lt!69702 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70313)))

(declare-fun b!134303 () Bool)

(declare-fun lt!70316 () Unit!4141)

(assert (=> b!134303 (= e!87479 lt!70316)))

(assert (=> b!134303 (= lt!70316 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69702) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134303 (isDefined!125 (getValueByKey!173 (toList!842 lt!69702) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134304 () Bool)

(declare-fun Unit!4209 () Unit!4141)

(assert (=> b!134304 (= e!87479 Unit!4209)))

(declare-fun b!134305 () Bool)

(assert (=> b!134305 (= e!87480 (isDefined!125 (getValueByKey!173 (toList!842 lt!69702) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41275 c!24973) b!134303))

(assert (= (and d!41275 (not c!24973)) b!134304))

(assert (= (and d!41275 (not res!64595)) b!134305))

(declare-fun m!159369 () Bool)

(assert (=> d!41275 m!159369))

(declare-fun m!159371 () Bool)

(assert (=> b!134303 m!159371))

(declare-fun m!159373 () Bool)

(assert (=> b!134303 m!159373))

(assert (=> b!134303 m!159373))

(declare-fun m!159375 () Bool)

(assert (=> b!134303 m!159375))

(assert (=> b!134305 m!159373))

(assert (=> b!134305 m!159373))

(assert (=> b!134305 m!159375))

(assert (=> b!133288 d!41275))

(declare-fun lt!70317 () Bool)

(declare-fun d!41277 () Bool)

(assert (=> d!41277 (= lt!70317 (select (content!134 lt!69546) (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87482 () Bool)

(assert (=> d!41277 (= lt!70317 e!87482)))

(declare-fun res!64597 () Bool)

(assert (=> d!41277 (=> (not res!64597) (not e!87482))))

(assert (=> d!41277 (= res!64597 ((_ is Cons!1690) lt!69546))))

(assert (=> d!41277 (= (contains!886 lt!69546 (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70317)))

(declare-fun b!134306 () Bool)

(declare-fun e!87481 () Bool)

(assert (=> b!134306 (= e!87482 e!87481)))

(declare-fun res!64596 () Bool)

(assert (=> b!134306 (=> res!64596 e!87481)))

(assert (=> b!134306 (= res!64596 (= (h!2295 lt!69546) (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134307 () Bool)

(assert (=> b!134307 (= e!87481 (contains!886 (t!6137 lt!69546) (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41277 res!64597) b!134306))

(assert (= (and b!134306 (not res!64596)) b!134307))

(declare-fun m!159377 () Bool)

(assert (=> d!41277 m!159377))

(declare-fun m!159379 () Bool)

(assert (=> d!41277 m!159379))

(declare-fun m!159381 () Bool)

(assert (=> b!134307 m!159381))

(assert (=> b!133760 d!41277))

(declare-fun lt!70318 () Bool)

(declare-fun d!41279 () Bool)

(assert (=> d!41279 (= lt!70318 (select (content!134 (toList!842 lt!70143)) (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(declare-fun e!87484 () Bool)

(assert (=> d!41279 (= lt!70318 e!87484)))

(declare-fun res!64599 () Bool)

(assert (=> d!41279 (=> (not res!64599) (not e!87484))))

(assert (=> d!41279 (= res!64599 ((_ is Cons!1690) (toList!842 lt!70143)))))

(assert (=> d!41279 (= (contains!886 (toList!842 lt!70143) (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!70318)))

(declare-fun b!134308 () Bool)

(declare-fun e!87483 () Bool)

(assert (=> b!134308 (= e!87484 e!87483)))

(declare-fun res!64598 () Bool)

(assert (=> b!134308 (=> res!64598 e!87483)))

(assert (=> b!134308 (= res!64598 (= (h!2295 (toList!842 lt!70143)) (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(declare-fun b!134309 () Bool)

(assert (=> b!134309 (= e!87483 (contains!886 (t!6137 (toList!842 lt!70143)) (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(assert (= (and d!41279 res!64599) b!134308))

(assert (= (and b!134308 (not res!64598)) b!134309))

(declare-fun m!159383 () Bool)

(assert (=> d!41279 m!159383))

(declare-fun m!159385 () Bool)

(assert (=> d!41279 m!159385))

(declare-fun m!159387 () Bool)

(assert (=> b!134309 m!159387))

(assert (=> b!134013 d!41279))

(declare-fun d!41281 () Bool)

(declare-fun e!87485 () Bool)

(assert (=> d!41281 e!87485))

(declare-fun res!64601 () Bool)

(assert (=> d!41281 (=> (not res!64601) (not e!87485))))

(declare-fun lt!70321 () ListLongMap!1653)

(assert (=> d!41281 (= res!64601 (contains!884 lt!70321 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70322 () List!1694)

(assert (=> d!41281 (= lt!70321 (ListLongMap!1654 lt!70322))))

(declare-fun lt!70319 () Unit!4141)

(declare-fun lt!70320 () Unit!4141)

(assert (=> d!41281 (= lt!70319 lt!70320)))

(assert (=> d!41281 (= (getValueByKey!173 lt!70322 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41281 (= lt!70320 (lemmaContainsTupThenGetReturnValue!88 lt!70322 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41281 (= lt!70322 (insertStrictlySorted!91 (toList!842 call!14741) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41281 (= (+!169 call!14741 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70321)))

(declare-fun b!134310 () Bool)

(declare-fun res!64600 () Bool)

(assert (=> b!134310 (=> (not res!64600) (not e!87485))))

(assert (=> b!134310 (= res!64600 (= (getValueByKey!173 (toList!842 lt!70321) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!134311 () Bool)

(assert (=> b!134311 (= e!87485 (contains!886 (toList!842 lt!70321) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!41281 res!64601) b!134310))

(assert (= (and b!134310 res!64600) b!134311))

(declare-fun m!159389 () Bool)

(assert (=> d!41281 m!159389))

(declare-fun m!159391 () Bool)

(assert (=> d!41281 m!159391))

(declare-fun m!159393 () Bool)

(assert (=> d!41281 m!159393))

(declare-fun m!159395 () Bool)

(assert (=> d!41281 m!159395))

(declare-fun m!159397 () Bool)

(assert (=> b!134310 m!159397))

(declare-fun m!159399 () Bool)

(assert (=> b!134311 m!159399))

(assert (=> b!133683 d!41281))

(declare-fun c!24977 () Bool)

(declare-fun bm!14792 () Bool)

(declare-fun call!14796 () ListLongMap!1653)

(declare-fun call!14799 () ListLongMap!1653)

(declare-fun c!24979 () Bool)

(declare-fun call!14797 () ListLongMap!1653)

(declare-fun call!14798 () ListLongMap!1653)

(assert (=> bm!14792 (= call!14798 (+!169 (ite c!24977 call!14796 (ite c!24979 call!14797 call!14799)) (ite (or c!24977 c!24979) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (_2!1294 lt!69445))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69445))))))))

(declare-fun b!134312 () Bool)

(declare-fun e!87495 () Bool)

(declare-fun e!87489 () Bool)

(assert (=> b!134312 (= e!87495 e!87489)))

(declare-fun res!64607 () Bool)

(declare-fun call!14795 () Bool)

(assert (=> b!134312 (= res!64607 call!14795)))

(assert (=> b!134312 (=> (not res!64607) (not e!87489))))

(declare-fun b!134313 () Bool)

(declare-fun e!87493 () Unit!4141)

(declare-fun lt!70340 () Unit!4141)

(assert (=> b!134313 (= e!87493 lt!70340)))

(declare-fun lt!70326 () ListLongMap!1653)

(assert (=> b!134313 (= lt!70326 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (_2!1294 lt!69445)) (_values!2847 (_2!1294 lt!69445)) (mask!7164 (_2!1294 lt!69445)) (extraKeys!2629 (_2!1294 lt!69445)) (zeroValue!2719 (_2!1294 lt!69445)) (minValue!2719 (_2!1294 lt!69445)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1294 lt!69445))))))

(declare-fun lt!70341 () (_ BitVec 64))

(assert (=> b!134313 (= lt!70341 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70325 () (_ BitVec 64))

(assert (=> b!134313 (= lt!70325 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000))))

(declare-fun lt!70339 () Unit!4141)

(assert (=> b!134313 (= lt!70339 (addStillContains!92 lt!70326 lt!70341 (zeroValue!2719 (_2!1294 lt!69445)) lt!70325))))

(assert (=> b!134313 (contains!884 (+!169 lt!70326 (tuple2!2565 lt!70341 (zeroValue!2719 (_2!1294 lt!69445)))) lt!70325)))

(declare-fun lt!70337 () Unit!4141)

(assert (=> b!134313 (= lt!70337 lt!70339)))

(declare-fun lt!70332 () ListLongMap!1653)

(assert (=> b!134313 (= lt!70332 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (_2!1294 lt!69445)) (_values!2847 (_2!1294 lt!69445)) (mask!7164 (_2!1294 lt!69445)) (extraKeys!2629 (_2!1294 lt!69445)) (zeroValue!2719 (_2!1294 lt!69445)) (minValue!2719 (_2!1294 lt!69445)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1294 lt!69445))))))

(declare-fun lt!70324 () (_ BitVec 64))

(assert (=> b!134313 (= lt!70324 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70334 () (_ BitVec 64))

(assert (=> b!134313 (= lt!70334 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000))))

(declare-fun lt!70338 () Unit!4141)

(assert (=> b!134313 (= lt!70338 (addApplyDifferent!92 lt!70332 lt!70324 (minValue!2719 (_2!1294 lt!69445)) lt!70334))))

(assert (=> b!134313 (= (apply!116 (+!169 lt!70332 (tuple2!2565 lt!70324 (minValue!2719 (_2!1294 lt!69445)))) lt!70334) (apply!116 lt!70332 lt!70334))))

(declare-fun lt!70331 () Unit!4141)

(assert (=> b!134313 (= lt!70331 lt!70338)))

(declare-fun lt!70344 () ListLongMap!1653)

(assert (=> b!134313 (= lt!70344 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (_2!1294 lt!69445)) (_values!2847 (_2!1294 lt!69445)) (mask!7164 (_2!1294 lt!69445)) (extraKeys!2629 (_2!1294 lt!69445)) (zeroValue!2719 (_2!1294 lt!69445)) (minValue!2719 (_2!1294 lt!69445)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1294 lt!69445))))))

(declare-fun lt!70333 () (_ BitVec 64))

(assert (=> b!134313 (= lt!70333 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70329 () (_ BitVec 64))

(assert (=> b!134313 (= lt!70329 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000))))

(declare-fun lt!70342 () Unit!4141)

(assert (=> b!134313 (= lt!70342 (addApplyDifferent!92 lt!70344 lt!70333 (zeroValue!2719 (_2!1294 lt!69445)) lt!70329))))

(assert (=> b!134313 (= (apply!116 (+!169 lt!70344 (tuple2!2565 lt!70333 (zeroValue!2719 (_2!1294 lt!69445)))) lt!70329) (apply!116 lt!70344 lt!70329))))

(declare-fun lt!70343 () Unit!4141)

(assert (=> b!134313 (= lt!70343 lt!70342)))

(declare-fun lt!70330 () ListLongMap!1653)

(assert (=> b!134313 (= lt!70330 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (_2!1294 lt!69445)) (_values!2847 (_2!1294 lt!69445)) (mask!7164 (_2!1294 lt!69445)) (extraKeys!2629 (_2!1294 lt!69445)) (zeroValue!2719 (_2!1294 lt!69445)) (minValue!2719 (_2!1294 lt!69445)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1294 lt!69445))))))

(declare-fun lt!70328 () (_ BitVec 64))

(assert (=> b!134313 (= lt!70328 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!70336 () (_ BitVec 64))

(assert (=> b!134313 (= lt!70336 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000))))

(assert (=> b!134313 (= lt!70340 (addApplyDifferent!92 lt!70330 lt!70328 (minValue!2719 (_2!1294 lt!69445)) lt!70336))))

(assert (=> b!134313 (= (apply!116 (+!169 lt!70330 (tuple2!2565 lt!70328 (minValue!2719 (_2!1294 lt!69445)))) lt!70336) (apply!116 lt!70330 lt!70336))))

(declare-fun b!134314 () Bool)

(declare-fun lt!70335 () ListLongMap!1653)

(assert (=> b!134314 (= e!87489 (= (apply!116 lt!70335 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2719 (_2!1294 lt!69445))))))

(declare-fun b!134315 () Bool)

(declare-fun e!87487 () Bool)

(assert (=> b!134315 (= e!87487 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000)))))

(declare-fun bm!14793 () Bool)

(assert (=> bm!14793 (= call!14797 call!14796)))

(declare-fun bm!14794 () Bool)

(assert (=> bm!14794 (= call!14795 (contains!884 lt!70335 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134316 () Bool)

(declare-fun e!87488 () Bool)

(assert (=> b!134316 (= e!87488 e!87495)))

(declare-fun c!24978 () Bool)

(assert (=> b!134316 (= c!24978 (not (= (bvand (extraKeys!2629 (_2!1294 lt!69445)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!134317 () Bool)

(declare-fun e!87497 () Bool)

(assert (=> b!134317 (= e!87497 (= (apply!116 lt!70335 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2719 (_2!1294 lt!69445))))))

(declare-fun b!134319 () Bool)

(declare-fun e!87486 () ListLongMap!1653)

(assert (=> b!134319 (= e!87486 call!14799)))

(declare-fun bm!14795 () Bool)

(declare-fun call!14801 () ListLongMap!1653)

(assert (=> bm!14795 (= call!14801 call!14798)))

(declare-fun bm!14796 () Bool)

(declare-fun call!14800 () Bool)

(assert (=> bm!14796 (= call!14800 (contains!884 lt!70335 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134320 () Bool)

(declare-fun c!24975 () Bool)

(assert (=> b!134320 (= c!24975 (and (not (= (bvand (extraKeys!2629 (_2!1294 lt!69445)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 (_2!1294 lt!69445)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!87492 () ListLongMap!1653)

(assert (=> b!134320 (= e!87492 e!87486)))

(declare-fun bm!14797 () Bool)

(assert (=> bm!14797 (= call!14799 call!14797)))

(declare-fun b!134321 () Bool)

(declare-fun e!87498 () Bool)

(assert (=> b!134321 (= e!87498 (= (apply!116 lt!70335 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (_values!2847 (_2!1294 lt!69445))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 (_2!1294 lt!69445)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!134321 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (_values!2847 (_2!1294 lt!69445)))))))

(assert (=> b!134321 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69445)))))))

(declare-fun b!134322 () Bool)

(declare-fun e!87491 () ListLongMap!1653)

(assert (=> b!134322 (= e!87491 e!87492)))

(assert (=> b!134322 (= c!24979 (and (not (= (bvand (extraKeys!2629 (_2!1294 lt!69445)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2629 (_2!1294 lt!69445)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!134323 () Bool)

(declare-fun e!87494 () Bool)

(assert (=> b!134323 (= e!87494 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000)))))

(declare-fun b!134324 () Bool)

(assert (=> b!134324 (= e!87491 (+!169 call!14798 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (_2!1294 lt!69445)))))))

(declare-fun b!134325 () Bool)

(declare-fun e!87490 () Bool)

(assert (=> b!134325 (= e!87490 e!87498)))

(declare-fun res!64608 () Bool)

(assert (=> b!134325 (=> (not res!64608) (not e!87498))))

(assert (=> b!134325 (= res!64608 (contains!884 lt!70335 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000)))))

(assert (=> b!134325 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69445)))))))

(declare-fun bm!14798 () Bool)

(assert (=> bm!14798 (= call!14796 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (_2!1294 lt!69445)) (_values!2847 (_2!1294 lt!69445)) (mask!7164 (_2!1294 lt!69445)) (extraKeys!2629 (_2!1294 lt!69445)) (zeroValue!2719 (_2!1294 lt!69445)) (minValue!2719 (_2!1294 lt!69445)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1294 lt!69445))))))

(declare-fun b!134326 () Bool)

(assert (=> b!134326 (= e!87495 (not call!14795))))

(declare-fun b!134327 () Bool)

(assert (=> b!134327 (= e!87486 call!14801)))

(declare-fun b!134328 () Bool)

(declare-fun Unit!4210 () Unit!4141)

(assert (=> b!134328 (= e!87493 Unit!4210)))

(declare-fun b!134329 () Bool)

(declare-fun e!87496 () Bool)

(assert (=> b!134329 (= e!87496 e!87497)))

(declare-fun res!64610 () Bool)

(assert (=> b!134329 (= res!64610 call!14800)))

(assert (=> b!134329 (=> (not res!64610) (not e!87497))))

(declare-fun b!134330 () Bool)

(declare-fun res!64604 () Bool)

(assert (=> b!134330 (=> (not res!64604) (not e!87488))))

(assert (=> b!134330 (= res!64604 e!87490)))

(declare-fun res!64609 () Bool)

(assert (=> b!134330 (=> res!64609 e!87490)))

(assert (=> b!134330 (= res!64609 (not e!87494))))

(declare-fun res!64602 () Bool)

(assert (=> b!134330 (=> (not res!64602) (not e!87494))))

(assert (=> b!134330 (= res!64602 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69445)))))))

(declare-fun b!134331 () Bool)

(declare-fun res!64605 () Bool)

(assert (=> b!134331 (=> (not res!64605) (not e!87488))))

(assert (=> b!134331 (= res!64605 e!87496)))

(declare-fun c!24976 () Bool)

(assert (=> b!134331 (= c!24976 (not (= (bvand (extraKeys!2629 (_2!1294 lt!69445)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!134332 () Bool)

(assert (=> b!134332 (= e!87492 call!14801)))

(declare-fun b!134318 () Bool)

(assert (=> b!134318 (= e!87496 (not call!14800))))

(declare-fun d!41283 () Bool)

(assert (=> d!41283 e!87488))

(declare-fun res!64606 () Bool)

(assert (=> d!41283 (=> (not res!64606) (not e!87488))))

(assert (=> d!41283 (= res!64606 (or (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69445)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69445)))))))))

(declare-fun lt!70323 () ListLongMap!1653)

(assert (=> d!41283 (= lt!70335 lt!70323)))

(declare-fun lt!70327 () Unit!4141)

(assert (=> d!41283 (= lt!70327 e!87493)))

(declare-fun c!24974 () Bool)

(assert (=> d!41283 (= c!24974 e!87487)))

(declare-fun res!64603 () Bool)

(assert (=> d!41283 (=> (not res!64603) (not e!87487))))

(assert (=> d!41283 (= res!64603 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69445)))))))

(assert (=> d!41283 (= lt!70323 e!87491)))

(assert (=> d!41283 (= c!24977 (and (not (= (bvand (extraKeys!2629 (_2!1294 lt!69445)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2629 (_2!1294 lt!69445)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!41283 (validMask!0 (mask!7164 (_2!1294 lt!69445)))))

(assert (=> d!41283 (= (getCurrentListMap!518 (_keys!4613 (_2!1294 lt!69445)) (_values!2847 (_2!1294 lt!69445)) (mask!7164 (_2!1294 lt!69445)) (extraKeys!2629 (_2!1294 lt!69445)) (zeroValue!2719 (_2!1294 lt!69445)) (minValue!2719 (_2!1294 lt!69445)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1294 lt!69445))) lt!70335)))

(assert (= (and d!41283 c!24977) b!134324))

(assert (= (and d!41283 (not c!24977)) b!134322))

(assert (= (and b!134322 c!24979) b!134332))

(assert (= (and b!134322 (not c!24979)) b!134320))

(assert (= (and b!134320 c!24975) b!134327))

(assert (= (and b!134320 (not c!24975)) b!134319))

(assert (= (or b!134327 b!134319) bm!14797))

(assert (= (or b!134332 bm!14797) bm!14793))

(assert (= (or b!134332 b!134327) bm!14795))

(assert (= (or b!134324 bm!14793) bm!14798))

(assert (= (or b!134324 bm!14795) bm!14792))

(assert (= (and d!41283 res!64603) b!134315))

(assert (= (and d!41283 c!24974) b!134313))

(assert (= (and d!41283 (not c!24974)) b!134328))

(assert (= (and d!41283 res!64606) b!134330))

(assert (= (and b!134330 res!64602) b!134323))

(assert (= (and b!134330 (not res!64609)) b!134325))

(assert (= (and b!134325 res!64608) b!134321))

(assert (= (and b!134330 res!64604) b!134331))

(assert (= (and b!134331 c!24976) b!134329))

(assert (= (and b!134331 (not c!24976)) b!134318))

(assert (= (and b!134329 res!64610) b!134317))

(assert (= (or b!134329 b!134318) bm!14796))

(assert (= (and b!134331 res!64605) b!134316))

(assert (= (and b!134316 c!24978) b!134312))

(assert (= (and b!134316 (not c!24978)) b!134326))

(assert (= (and b!134312 res!64607) b!134314))

(assert (= (or b!134312 b!134326) bm!14794))

(declare-fun b_lambda!6011 () Bool)

(assert (=> (not b_lambda!6011) (not b!134321)))

(declare-fun t!6156 () Bool)

(declare-fun tb!2425 () Bool)

(assert (=> (and b!132503 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 (_2!1294 lt!69445))) t!6156) tb!2425))

(declare-fun result!4001 () Bool)

(assert (=> tb!2425 (= result!4001 tp_is_empty!2875)))

(assert (=> b!134321 t!6156))

(declare-fun b_and!8333 () Bool)

(assert (= b_and!8329 (and (=> t!6156 result!4001) b_and!8333)))

(declare-fun tb!2427 () Bool)

(declare-fun t!6158 () Bool)

(assert (=> (and b!132502 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (_2!1294 lt!69445))) t!6158) tb!2427))

(declare-fun result!4003 () Bool)

(assert (= result!4003 result!4001))

(assert (=> b!134321 t!6158))

(declare-fun b_and!8335 () Bool)

(assert (= b_and!8331 (and (=> t!6158 result!4003) b_and!8335)))

(declare-fun m!159401 () Bool)

(assert (=> d!41283 m!159401))

(declare-fun m!159403 () Bool)

(assert (=> b!134323 m!159403))

(assert (=> b!134323 m!159403))

(declare-fun m!159405 () Bool)

(assert (=> b!134323 m!159405))

(declare-fun m!159407 () Bool)

(assert (=> b!134313 m!159407))

(declare-fun m!159409 () Bool)

(assert (=> b!134313 m!159409))

(declare-fun m!159411 () Bool)

(assert (=> b!134313 m!159411))

(declare-fun m!159413 () Bool)

(assert (=> b!134313 m!159413))

(declare-fun m!159415 () Bool)

(assert (=> b!134313 m!159415))

(assert (=> b!134313 m!159403))

(declare-fun m!159417 () Bool)

(assert (=> b!134313 m!159417))

(declare-fun m!159419 () Bool)

(assert (=> b!134313 m!159419))

(declare-fun m!159421 () Bool)

(assert (=> b!134313 m!159421))

(declare-fun m!159423 () Bool)

(assert (=> b!134313 m!159423))

(declare-fun m!159425 () Bool)

(assert (=> b!134313 m!159425))

(declare-fun m!159427 () Bool)

(assert (=> b!134313 m!159427))

(assert (=> b!134313 m!159421))

(assert (=> b!134313 m!159415))

(declare-fun m!159429 () Bool)

(assert (=> b!134313 m!159429))

(declare-fun m!159431 () Bool)

(assert (=> b!134313 m!159431))

(declare-fun m!159433 () Bool)

(assert (=> b!134313 m!159433))

(assert (=> b!134313 m!159433))

(declare-fun m!159435 () Bool)

(assert (=> b!134313 m!159435))

(assert (=> b!134313 m!159413))

(declare-fun m!159437 () Bool)

(assert (=> b!134313 m!159437))

(declare-fun m!159439 () Bool)

(assert (=> b!134321 m!159439))

(declare-fun m!159441 () Bool)

(assert (=> b!134321 m!159441))

(declare-fun m!159443 () Bool)

(assert (=> b!134321 m!159443))

(assert (=> b!134321 m!159441))

(assert (=> b!134321 m!159439))

(assert (=> b!134321 m!159403))

(assert (=> b!134321 m!159403))

(declare-fun m!159445 () Bool)

(assert (=> b!134321 m!159445))

(declare-fun m!159447 () Bool)

(assert (=> bm!14794 m!159447))

(declare-fun m!159449 () Bool)

(assert (=> bm!14792 m!159449))

(assert (=> b!134315 m!159403))

(assert (=> b!134315 m!159403))

(assert (=> b!134315 m!159405))

(declare-fun m!159451 () Bool)

(assert (=> b!134317 m!159451))

(assert (=> b!134325 m!159403))

(assert (=> b!134325 m!159403))

(declare-fun m!159453 () Bool)

(assert (=> b!134325 m!159453))

(assert (=> bm!14798 m!159427))

(declare-fun m!159455 () Bool)

(assert (=> bm!14796 m!159455))

(declare-fun m!159457 () Bool)

(assert (=> b!134324 m!159457))

(declare-fun m!159459 () Bool)

(assert (=> b!134314 m!159459))

(assert (=> d!40875 d!41283))

(declare-fun d!41285 () Bool)

(assert (=> d!41285 (isDefined!125 (getValueByKey!173 (toList!842 lt!69577) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70345 () Unit!4141)

(assert (=> d!41285 (= lt!70345 (choose!831 (toList!842 lt!69577) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87499 () Bool)

(assert (=> d!41285 e!87499))

(declare-fun res!64611 () Bool)

(assert (=> d!41285 (=> (not res!64611) (not e!87499))))

(assert (=> d!41285 (= res!64611 (isStrictlySorted!309 (toList!842 lt!69577)))))

(assert (=> d!41285 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69577) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70345)))

(declare-fun b!134333 () Bool)

(assert (=> b!134333 (= e!87499 (containsKey!176 (toList!842 lt!69577) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41285 res!64611) b!134333))

(assert (=> d!41285 m!158589))

(assert (=> d!41285 m!158589))

(assert (=> d!41285 m!158881))

(declare-fun m!159461 () Bool)

(assert (=> d!41285 m!159461))

(declare-fun m!159463 () Bool)

(assert (=> d!41285 m!159463))

(assert (=> b!134333 m!158877))

(assert (=> b!134078 d!41285))

(declare-fun d!41287 () Bool)

(assert (=> d!41287 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69577) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69577) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5590 () Bool)

(assert (= bs!5590 d!41287))

(assert (=> bs!5590 m!158589))

(declare-fun m!159465 () Bool)

(assert (=> bs!5590 m!159465))

(assert (=> b!134078 d!41287))

(declare-fun b!134335 () Bool)

(declare-fun e!87500 () Option!179)

(declare-fun e!87501 () Option!179)

(assert (=> b!134335 (= e!87500 e!87501)))

(declare-fun c!24981 () Bool)

(assert (=> b!134335 (= c!24981 (and ((_ is Cons!1690) (toList!842 lt!69577)) (not (= (_1!1293 (h!2295 (toList!842 lt!69577))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134334 () Bool)

(assert (=> b!134334 (= e!87500 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69577)))))))

(declare-fun d!41289 () Bool)

(declare-fun c!24980 () Bool)

(assert (=> d!41289 (= c!24980 (and ((_ is Cons!1690) (toList!842 lt!69577)) (= (_1!1293 (h!2295 (toList!842 lt!69577))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41289 (= (getValueByKey!173 (toList!842 lt!69577) #b1000000000000000000000000000000000000000000000000000000000000000) e!87500)))

(declare-fun b!134337 () Bool)

(assert (=> b!134337 (= e!87501 None!177)))

(declare-fun b!134336 () Bool)

(assert (=> b!134336 (= e!87501 (getValueByKey!173 (t!6137 (toList!842 lt!69577)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41289 c!24980) b!134334))

(assert (= (and d!41289 (not c!24980)) b!134335))

(assert (= (and b!134335 c!24981) b!134336))

(assert (= (and b!134335 (not c!24981)) b!134337))

(declare-fun m!159467 () Bool)

(assert (=> b!134336 m!159467))

(assert (=> b!134078 d!41289))

(declare-fun lt!70346 () Bool)

(declare-fun d!41291 () Bool)

(assert (=> d!41291 (= lt!70346 (select (content!134 lt!69718) (tuple2!2565 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!87503 () Bool)

(assert (=> d!41291 (= lt!70346 e!87503)))

(declare-fun res!64613 () Bool)

(assert (=> d!41291 (=> (not res!64613) (not e!87503))))

(assert (=> d!41291 (= res!64613 ((_ is Cons!1690) lt!69718))))

(assert (=> d!41291 (= (contains!886 lt!69718 (tuple2!2565 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!70346)))

(declare-fun b!134338 () Bool)

(declare-fun e!87502 () Bool)

(assert (=> b!134338 (= e!87503 e!87502)))

(declare-fun res!64612 () Bool)

(assert (=> b!134338 (=> res!64612 e!87502)))

(assert (=> b!134338 (= res!64612 (= (h!2295 lt!69718) (tuple2!2565 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134339 () Bool)

(assert (=> b!134339 (= e!87502 (contains!886 (t!6137 lt!69718) (tuple2!2565 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!41291 res!64613) b!134338))

(assert (= (and b!134338 (not res!64612)) b!134339))

(declare-fun m!159469 () Bool)

(assert (=> d!41291 m!159469))

(declare-fun m!159471 () Bool)

(assert (=> d!41291 m!159471))

(declare-fun m!159473 () Bool)

(assert (=> b!134339 m!159473))

(assert (=> b!133348 d!41291))

(assert (=> d!40943 d!40813))

(assert (=> d!40943 d!40815))

(assert (=> b!133268 d!41191))

(assert (=> d!40825 d!40591))

(declare-fun d!41293 () Bool)

(assert (=> d!41293 (= (apply!116 lt!69738 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69738) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5591 () Bool)

(assert (= bs!5591 d!41293))

(declare-fun m!159475 () Bool)

(assert (=> bs!5591 m!159475))

(assert (=> bs!5591 m!159475))

(declare-fun m!159477 () Bool)

(assert (=> bs!5591 m!159477))

(assert (=> b!133375 d!41293))

(declare-fun d!41295 () Bool)

(declare-fun lt!70347 () Bool)

(assert (=> d!41295 (= lt!70347 (select (content!134 (toList!842 lt!70182)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun e!87505 () Bool)

(assert (=> d!41295 (= lt!70347 e!87505)))

(declare-fun res!64615 () Bool)

(assert (=> d!41295 (=> (not res!64615) (not e!87505))))

(assert (=> d!41295 (= res!64615 ((_ is Cons!1690) (toList!842 lt!70182)))))

(assert (=> d!41295 (= (contains!886 (toList!842 lt!70182) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70347)))

(declare-fun b!134340 () Bool)

(declare-fun e!87504 () Bool)

(assert (=> b!134340 (= e!87505 e!87504)))

(declare-fun res!64614 () Bool)

(assert (=> b!134340 (=> res!64614 e!87504)))

(assert (=> b!134340 (= res!64614 (= (h!2295 (toList!842 lt!70182)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun b!134341 () Bool)

(assert (=> b!134341 (= e!87504 (contains!886 (t!6137 (toList!842 lt!70182)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!41295 res!64615) b!134340))

(assert (= (and b!134340 (not res!64614)) b!134341))

(declare-fun m!159479 () Bool)

(assert (=> d!41295 m!159479))

(declare-fun m!159481 () Bool)

(assert (=> d!41295 m!159481))

(declare-fun m!159483 () Bool)

(assert (=> b!134341 m!159483))

(assert (=> b!134077 d!41295))

(declare-fun b!134342 () Bool)

(assert (=> b!134342 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> b!134342 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))))))

(declare-fun lt!70352 () ListLongMap!1653)

(declare-fun e!87512 () Bool)

(assert (=> b!134342 (= e!87512 (= (apply!116 lt!70352 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134343 () Bool)

(declare-fun res!64618 () Bool)

(declare-fun e!87510 () Bool)

(assert (=> b!134343 (=> (not res!64618) (not e!87510))))

(assert (=> b!134343 (= res!64618 (not (contains!884 lt!70352 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134344 () Bool)

(declare-fun e!87507 () Bool)

(assert (=> b!134344 (= e!87507 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134344 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134345 () Bool)

(declare-fun e!87508 () Bool)

(declare-fun e!87509 () Bool)

(assert (=> b!134345 (= e!87508 e!87509)))

(declare-fun c!24985 () Bool)

(assert (=> b!134345 (= c!24985 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!134346 () Bool)

(assert (=> b!134346 (= e!87509 (= lt!70352 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun call!14802 () ListLongMap!1653)

(declare-fun bm!14799 () Bool)

(assert (=> bm!14799 (= call!14802 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!134347 () Bool)

(declare-fun e!87506 () ListLongMap!1653)

(assert (=> b!134347 (= e!87506 call!14802)))

(declare-fun b!134348 () Bool)

(declare-fun e!87511 () ListLongMap!1653)

(assert (=> b!134348 (= e!87511 e!87506)))

(declare-fun c!24982 () Bool)

(assert (=> b!134348 (= c!24982 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!41297 () Bool)

(assert (=> d!41297 e!87510))

(declare-fun res!64616 () Bool)

(assert (=> d!41297 (=> (not res!64616) (not e!87510))))

(assert (=> d!41297 (= res!64616 (not (contains!884 lt!70352 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41297 (= lt!70352 e!87511)))

(declare-fun c!24983 () Bool)

(assert (=> d!41297 (= c!24983 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!41297 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!41297 (= (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!70352)))

(declare-fun b!134349 () Bool)

(assert (=> b!134349 (= e!87508 e!87512)))

(assert (=> b!134349 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!64617 () Bool)

(assert (=> b!134349 (= res!64617 (contains!884 lt!70352 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134349 (=> (not res!64617) (not e!87512))))

(declare-fun b!134350 () Bool)

(assert (=> b!134350 (= e!87511 (ListLongMap!1654 Nil!1691))))

(declare-fun b!134351 () Bool)

(assert (=> b!134351 (= e!87509 (isEmpty!415 lt!70352))))

(declare-fun b!134352 () Bool)

(declare-fun lt!70349 () Unit!4141)

(declare-fun lt!70353 () Unit!4141)

(assert (=> b!134352 (= lt!70349 lt!70353)))

(declare-fun lt!70348 () ListLongMap!1653)

(declare-fun lt!70351 () V!3481)

(declare-fun lt!70354 () (_ BitVec 64))

(declare-fun lt!70350 () (_ BitVec 64))

(assert (=> b!134352 (not (contains!884 (+!169 lt!70348 (tuple2!2565 lt!70350 lt!70351)) lt!70354))))

(assert (=> b!134352 (= lt!70353 (addStillNotContains!63 lt!70348 lt!70350 lt!70351 lt!70354))))

(assert (=> b!134352 (= lt!70354 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134352 (= lt!70351 (get!1489 (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134352 (= lt!70350 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!134352 (= lt!70348 call!14802)))

(assert (=> b!134352 (= e!87506 (+!169 call!14802 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134353 () Bool)

(assert (=> b!134353 (= e!87510 e!87508)))

(declare-fun c!24984 () Bool)

(assert (=> b!134353 (= c!24984 e!87507)))

(declare-fun res!64619 () Bool)

(assert (=> b!134353 (=> (not res!64619) (not e!87507))))

(assert (=> b!134353 (= res!64619 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (= (and d!41297 c!24983) b!134350))

(assert (= (and d!41297 (not c!24983)) b!134348))

(assert (= (and b!134348 c!24982) b!134352))

(assert (= (and b!134348 (not c!24982)) b!134347))

(assert (= (or b!134352 b!134347) bm!14799))

(assert (= (and d!41297 res!64616) b!134343))

(assert (= (and b!134343 res!64618) b!134353))

(assert (= (and b!134353 res!64619) b!134344))

(assert (= (and b!134353 c!24984) b!134349))

(assert (= (and b!134353 (not c!24984)) b!134345))

(assert (= (and b!134349 res!64617) b!134342))

(assert (= (and b!134345 c!24985) b!134346))

(assert (= (and b!134345 (not c!24985)) b!134351))

(declare-fun b_lambda!6013 () Bool)

(assert (=> (not b_lambda!6013) (not b!134342)))

(assert (=> b!134342 t!6147))

(declare-fun b_and!8337 () Bool)

(assert (= b_and!8333 (and (=> t!6147 result!3993) b_and!8337)))

(assert (=> b!134342 t!6149))

(declare-fun b_and!8339 () Bool)

(assert (= b_and!8335 (and (=> t!6149 result!3995) b_and!8339)))

(declare-fun b_lambda!6015 () Bool)

(assert (=> (not b_lambda!6015) (not b!134352)))

(assert (=> b!134352 t!6147))

(declare-fun b_and!8341 () Bool)

(assert (= b_and!8337 (and (=> t!6147 result!3993) b_and!8341)))

(assert (=> b!134352 t!6149))

(declare-fun b_and!8343 () Bool)

(assert (= b_and!8339 (and (=> t!6149 result!3995) b_and!8343)))

(declare-fun m!159485 () Bool)

(assert (=> b!134351 m!159485))

(assert (=> b!134348 m!156679))

(assert (=> b!134348 m!156679))

(assert (=> b!134348 m!156689))

(assert (=> b!134344 m!156679))

(assert (=> b!134344 m!156679))

(assert (=> b!134344 m!156689))

(declare-fun m!159487 () Bool)

(assert (=> b!134346 m!159487))

(declare-fun m!159489 () Bool)

(assert (=> b!134343 m!159489))

(assert (=> b!134352 m!158335))

(assert (=> b!134352 m!156809))

(assert (=> b!134352 m!158337))

(declare-fun m!159491 () Bool)

(assert (=> b!134352 m!159491))

(declare-fun m!159493 () Bool)

(assert (=> b!134352 m!159493))

(assert (=> b!134352 m!158335))

(declare-fun m!159495 () Bool)

(assert (=> b!134352 m!159495))

(assert (=> b!134352 m!159491))

(declare-fun m!159497 () Bool)

(assert (=> b!134352 m!159497))

(assert (=> b!134352 m!156679))

(assert (=> b!134352 m!156809))

(assert (=> b!134349 m!156679))

(assert (=> b!134349 m!156679))

(declare-fun m!159499 () Bool)

(assert (=> b!134349 m!159499))

(declare-fun m!159501 () Bool)

(assert (=> d!41297 m!159501))

(assert (=> d!41297 m!156651))

(assert (=> bm!14799 m!159487))

(assert (=> b!134342 m!158335))

(assert (=> b!134342 m!156809))

(assert (=> b!134342 m!158337))

(assert (=> b!134342 m!158335))

(assert (=> b!134342 m!156679))

(declare-fun m!159503 () Bool)

(assert (=> b!134342 m!159503))

(assert (=> b!134342 m!156679))

(assert (=> b!134342 m!156809))

(assert (=> bm!14764 d!41297))

(assert (=> d!41015 d!40431))

(declare-fun d!41299 () Bool)

(declare-fun res!64620 () Bool)

(declare-fun e!87513 () Bool)

(assert (=> d!41299 (=> res!64620 e!87513)))

(assert (=> d!41299 (= res!64620 (and ((_ is Cons!1690) (toList!842 lt!69504)) (= (_1!1293 (h!2295 (toList!842 lt!69504))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41299 (= (containsKey!176 (toList!842 lt!69504) #b0000000000000000000000000000000000000000000000000000000000000000) e!87513)))

(declare-fun b!134354 () Bool)

(declare-fun e!87514 () Bool)

(assert (=> b!134354 (= e!87513 e!87514)))

(declare-fun res!64621 () Bool)

(assert (=> b!134354 (=> (not res!64621) (not e!87514))))

(assert (=> b!134354 (= res!64621 (and (or (not ((_ is Cons!1690) (toList!842 lt!69504))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69504))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1690) (toList!842 lt!69504)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69504))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134355 () Bool)

(assert (=> b!134355 (= e!87514 (containsKey!176 (t!6137 (toList!842 lt!69504)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41299 (not res!64620)) b!134354))

(assert (= (and b!134354 res!64621) b!134355))

(declare-fun m!159505 () Bool)

(assert (=> b!134355 m!159505))

(assert (=> d!41099 d!41299))

(declare-fun d!41301 () Bool)

(declare-fun e!87515 () Bool)

(assert (=> d!41301 e!87515))

(declare-fun res!64623 () Bool)

(assert (=> d!41301 (=> (not res!64623) (not e!87515))))

(declare-fun lt!70357 () ListLongMap!1653)

(assert (=> d!41301 (= res!64623 (contains!884 lt!70357 (_1!1293 (ite (or c!24726 c!24728) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!70358 () List!1694)

(assert (=> d!41301 (= lt!70357 (ListLongMap!1654 lt!70358))))

(declare-fun lt!70355 () Unit!4141)

(declare-fun lt!70356 () Unit!4141)

(assert (=> d!41301 (= lt!70355 lt!70356)))

(assert (=> d!41301 (= (getValueByKey!173 lt!70358 (_1!1293 (ite (or c!24726 c!24728) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24726 c!24728) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41301 (= lt!70356 (lemmaContainsTupThenGetReturnValue!88 lt!70358 (_1!1293 (ite (or c!24726 c!24728) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24726 c!24728) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41301 (= lt!70358 (insertStrictlySorted!91 (toList!842 (ite c!24726 call!14710 (ite c!24728 call!14711 call!14713))) (_1!1293 (ite (or c!24726 c!24728) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24726 c!24728) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41301 (= (+!169 (ite c!24726 call!14710 (ite c!24728 call!14711 call!14713)) (ite (or c!24726 c!24728) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70357)))

(declare-fun b!134356 () Bool)

(declare-fun res!64622 () Bool)

(assert (=> b!134356 (=> (not res!64622) (not e!87515))))

(assert (=> b!134356 (= res!64622 (= (getValueByKey!173 (toList!842 lt!70357) (_1!1293 (ite (or c!24726 c!24728) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24726 c!24728) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!134357 () Bool)

(assert (=> b!134357 (= e!87515 (contains!886 (toList!842 lt!70357) (ite (or c!24726 c!24728) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!41301 res!64623) b!134356))

(assert (= (and b!134356 res!64622) b!134357))

(declare-fun m!159507 () Bool)

(assert (=> d!41301 m!159507))

(declare-fun m!159509 () Bool)

(assert (=> d!41301 m!159509))

(declare-fun m!159511 () Bool)

(assert (=> d!41301 m!159511))

(declare-fun m!159513 () Bool)

(assert (=> d!41301 m!159513))

(declare-fun m!159515 () Bool)

(assert (=> b!134356 m!159515))

(declare-fun m!159517 () Bool)

(assert (=> b!134357 m!159517))

(assert (=> bm!14706 d!41301))

(declare-fun d!41303 () Bool)

(assert (=> d!41303 (= (apply!116 lt!70032 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!70032) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5592 () Bool)

(assert (= bs!5592 d!41303))

(declare-fun m!159519 () Bool)

(assert (=> bs!5592 m!159519))

(assert (=> bs!5592 m!159519))

(declare-fun m!159521 () Bool)

(assert (=> bs!5592 m!159521))

(assert (=> b!133821 d!41303))

(declare-fun b!134358 () Bool)

(assert (=> b!134358 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> b!134358 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2522 (ite c!24553 (_values!2847 newMap!16) lt!69268))))))

(declare-fun lt!70363 () ListLongMap!1653)

(declare-fun e!87522 () Bool)

(assert (=> b!134358 (= e!87522 (= (apply!116 lt!70363 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134359 () Bool)

(declare-fun res!64626 () Bool)

(declare-fun e!87520 () Bool)

(assert (=> b!134359 (=> (not res!64626) (not e!87520))))

(assert (=> b!134359 (= res!64626 (not (contains!884 lt!70363 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134360 () Bool)

(declare-fun e!87517 () Bool)

(assert (=> b!134360 (= e!87517 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134360 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!134361 () Bool)

(declare-fun e!87518 () Bool)

(declare-fun e!87519 () Bool)

(assert (=> b!134361 (= e!87518 e!87519)))

(declare-fun c!24989 () Bool)

(assert (=> b!134361 (= c!24989 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!134362 () Bool)

(assert (=> b!134362 (= e!87519 (= lt!70363 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite c!24553 (_values!2847 newMap!16) lt!69268) (mask!7164 newMap!16) (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun call!14803 () ListLongMap!1653)

(declare-fun bm!14800 () Bool)

(assert (=> bm!14800 (= call!14803 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite c!24553 (_values!2847 newMap!16) lt!69268) (mask!7164 newMap!16) (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!134363 () Bool)

(declare-fun e!87516 () ListLongMap!1653)

(assert (=> b!134363 (= e!87516 call!14803)))

(declare-fun b!134364 () Bool)

(declare-fun e!87521 () ListLongMap!1653)

(assert (=> b!134364 (= e!87521 e!87516)))

(declare-fun c!24986 () Bool)

(assert (=> b!134364 (= c!24986 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!41305 () Bool)

(assert (=> d!41305 e!87520))

(declare-fun res!64624 () Bool)

(assert (=> d!41305 (=> (not res!64624) (not e!87520))))

(assert (=> d!41305 (= res!64624 (not (contains!884 lt!70363 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41305 (= lt!70363 e!87521)))

(declare-fun c!24987 () Bool)

(assert (=> d!41305 (= c!24987 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!41305 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!41305 (= (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite c!24553 (_values!2847 newMap!16) lt!69268) (mask!7164 newMap!16) (ite (and c!24553 c!24565) lt!69283 (extraKeys!2629 newMap!16)) (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)) lt!70363)))

(declare-fun b!134365 () Bool)

(assert (=> b!134365 (= e!87518 e!87522)))

(assert (=> b!134365 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!64625 () Bool)

(assert (=> b!134365 (= res!64625 (contains!884 lt!70363 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!134365 (=> (not res!64625) (not e!87522))))

(declare-fun b!134366 () Bool)

(assert (=> b!134366 (= e!87521 (ListLongMap!1654 Nil!1691))))

(declare-fun b!134367 () Bool)

(assert (=> b!134367 (= e!87519 (isEmpty!415 lt!70363))))

(declare-fun b!134368 () Bool)

(declare-fun lt!70360 () Unit!4141)

(declare-fun lt!70364 () Unit!4141)

(assert (=> b!134368 (= lt!70360 lt!70364)))

(declare-fun lt!70361 () (_ BitVec 64))

(declare-fun lt!70365 () (_ BitVec 64))

(declare-fun lt!70362 () V!3481)

(declare-fun lt!70359 () ListLongMap!1653)

(assert (=> b!134368 (not (contains!884 (+!169 lt!70359 (tuple2!2565 lt!70361 lt!70362)) lt!70365))))

(assert (=> b!134368 (= lt!70364 (addStillNotContains!63 lt!70359 lt!70361 lt!70362 lt!70365))))

(assert (=> b!134368 (= lt!70365 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134368 (= lt!70362 (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134368 (= lt!70361 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!134368 (= lt!70359 call!14803)))

(assert (=> b!134368 (= e!87516 (+!169 call!14803 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134369 () Bool)

(assert (=> b!134369 (= e!87520 e!87518)))

(declare-fun c!24988 () Bool)

(assert (=> b!134369 (= c!24988 e!87517)))

(declare-fun res!64627 () Bool)

(assert (=> b!134369 (=> (not res!64627) (not e!87517))))

(assert (=> b!134369 (= res!64627 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (= (and d!41305 c!24987) b!134366))

(assert (= (and d!41305 (not c!24987)) b!134364))

(assert (= (and b!134364 c!24986) b!134368))

(assert (= (and b!134364 (not c!24986)) b!134363))

(assert (= (or b!134368 b!134363) bm!14800))

(assert (= (and d!41305 res!64624) b!134359))

(assert (= (and b!134359 res!64626) b!134369))

(assert (= (and b!134369 res!64627) b!134360))

(assert (= (and b!134369 c!24988) b!134365))

(assert (= (and b!134369 (not c!24988)) b!134361))

(assert (= (and b!134365 res!64625) b!134358))

(assert (= (and b!134361 c!24989) b!134362))

(assert (= (and b!134361 (not c!24989)) b!134367))

(declare-fun b_lambda!6017 () Bool)

(assert (=> (not b_lambda!6017) (not b!134358)))

(assert (=> b!134358 t!6147))

(declare-fun b_and!8345 () Bool)

(assert (= b_and!8341 (and (=> t!6147 result!3993) b_and!8345)))

(assert (=> b!134358 t!6149))

(declare-fun b_and!8347 () Bool)

(assert (= b_and!8343 (and (=> t!6149 result!3995) b_and!8347)))

(declare-fun b_lambda!6019 () Bool)

(assert (=> (not b_lambda!6019) (not b!134368)))

(assert (=> b!134368 t!6147))

(declare-fun b_and!8349 () Bool)

(assert (= b_and!8345 (and (=> t!6147 result!3993) b_and!8349)))

(assert (=> b!134368 t!6149))

(declare-fun b_and!8351 () Bool)

(assert (= b_and!8347 (and (=> t!6149 result!3995) b_and!8351)))

(declare-fun m!159523 () Bool)

(assert (=> b!134367 m!159523))

(assert (=> b!134364 m!157443))

(assert (=> b!134364 m!157443))

(assert (=> b!134364 m!157451))

(assert (=> b!134360 m!157443))

(assert (=> b!134360 m!157443))

(assert (=> b!134360 m!157451))

(declare-fun m!159525 () Bool)

(assert (=> b!134362 m!159525))

(declare-fun m!159527 () Bool)

(assert (=> b!134359 m!159527))

(declare-fun m!159529 () Bool)

(assert (=> b!134368 m!159529))

(assert (=> b!134368 m!156809))

(declare-fun m!159531 () Bool)

(assert (=> b!134368 m!159531))

(declare-fun m!159533 () Bool)

(assert (=> b!134368 m!159533))

(declare-fun m!159535 () Bool)

(assert (=> b!134368 m!159535))

(assert (=> b!134368 m!159529))

(declare-fun m!159537 () Bool)

(assert (=> b!134368 m!159537))

(assert (=> b!134368 m!159533))

(declare-fun m!159539 () Bool)

(assert (=> b!134368 m!159539))

(assert (=> b!134368 m!157443))

(assert (=> b!134368 m!156809))

(assert (=> b!134365 m!157443))

(assert (=> b!134365 m!157443))

(declare-fun m!159541 () Bool)

(assert (=> b!134365 m!159541))

(declare-fun m!159543 () Bool)

(assert (=> d!41305 m!159543))

(assert (=> d!41305 m!156651))

(assert (=> bm!14800 m!159525))

(assert (=> b!134358 m!159529))

(assert (=> b!134358 m!156809))

(assert (=> b!134358 m!159531))

(assert (=> b!134358 m!159529))

(assert (=> b!134358 m!157443))

(declare-fun m!159545 () Bool)

(assert (=> b!134358 m!159545))

(assert (=> b!134358 m!157443))

(assert (=> b!134358 m!156809))

(assert (=> bm!14687 d!41305))

(declare-fun b!134370 () Bool)

(assert (=> b!134370 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(assert (=> b!134370 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (_values!2847 (_2!1294 lt!69280)))))))

(declare-fun e!87529 () Bool)

(declare-fun lt!70370 () ListLongMap!1653)

(assert (=> b!134370 (= e!87529 (= (apply!116 lt!70370 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (_values!2847 (_2!1294 lt!69280))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 (_2!1294 lt!69280)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134371 () Bool)

(declare-fun res!64630 () Bool)

(declare-fun e!87527 () Bool)

(assert (=> b!134371 (=> (not res!64630) (not e!87527))))

(assert (=> b!134371 (= res!64630 (not (contains!884 lt!70370 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134372 () Bool)

(declare-fun e!87524 () Bool)

(assert (=> b!134372 (= e!87524 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(assert (=> b!134372 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134373 () Bool)

(declare-fun e!87525 () Bool)

(declare-fun e!87526 () Bool)

(assert (=> b!134373 (= e!87525 e!87526)))

(declare-fun c!24993 () Bool)

(assert (=> b!134373 (= c!24993 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(declare-fun b!134374 () Bool)

(assert (=> b!134374 (= e!87526 (= lt!70370 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (_2!1294 lt!69280)) (_values!2847 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280)) (extraKeys!2629 (_2!1294 lt!69280)) (zeroValue!2719 (_2!1294 lt!69280)) (minValue!2719 (_2!1294 lt!69280)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 (_2!1294 lt!69280)))))))

(declare-fun bm!14801 () Bool)

(declare-fun call!14804 () ListLongMap!1653)

(assert (=> bm!14801 (= call!14804 (getCurrentListMapNoExtraKeys!136 (_keys!4613 (_2!1294 lt!69280)) (_values!2847 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280)) (extraKeys!2629 (_2!1294 lt!69280)) (zeroValue!2719 (_2!1294 lt!69280)) (minValue!2719 (_2!1294 lt!69280)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 (_2!1294 lt!69280))))))

(declare-fun b!134375 () Bool)

(declare-fun e!87523 () ListLongMap!1653)

(assert (=> b!134375 (= e!87523 call!14804)))

(declare-fun b!134376 () Bool)

(declare-fun e!87528 () ListLongMap!1653)

(assert (=> b!134376 (= e!87528 e!87523)))

(declare-fun c!24990 () Bool)

(assert (=> b!134376 (= c!24990 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(declare-fun d!41307 () Bool)

(assert (=> d!41307 e!87527))

(declare-fun res!64628 () Bool)

(assert (=> d!41307 (=> (not res!64628) (not e!87527))))

(assert (=> d!41307 (= res!64628 (not (contains!884 lt!70370 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41307 (= lt!70370 e!87528)))

(declare-fun c!24991 () Bool)

(assert (=> d!41307 (= c!24991 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(assert (=> d!41307 (validMask!0 (mask!7164 (_2!1294 lt!69280)))))

(assert (=> d!41307 (= (getCurrentListMapNoExtraKeys!136 (_keys!4613 (_2!1294 lt!69280)) (_values!2847 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280)) (extraKeys!2629 (_2!1294 lt!69280)) (zeroValue!2719 (_2!1294 lt!69280)) (minValue!2719 (_2!1294 lt!69280)) #b00000000000000000000000000000000 (defaultEntry!2864 (_2!1294 lt!69280))) lt!70370)))

(declare-fun b!134377 () Bool)

(assert (=> b!134377 (= e!87525 e!87529)))

(assert (=> b!134377 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(declare-fun res!64629 () Bool)

(assert (=> b!134377 (= res!64629 (contains!884 lt!70370 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(assert (=> b!134377 (=> (not res!64629) (not e!87529))))

(declare-fun b!134378 () Bool)

(assert (=> b!134378 (= e!87528 (ListLongMap!1654 Nil!1691))))

(declare-fun b!134379 () Bool)

(assert (=> b!134379 (= e!87526 (isEmpty!415 lt!70370))))

(declare-fun b!134380 () Bool)

(declare-fun lt!70367 () Unit!4141)

(declare-fun lt!70371 () Unit!4141)

(assert (=> b!134380 (= lt!70367 lt!70371)))

(declare-fun lt!70368 () (_ BitVec 64))

(declare-fun lt!70369 () V!3481)

(declare-fun lt!70372 () (_ BitVec 64))

(declare-fun lt!70366 () ListLongMap!1653)

(assert (=> b!134380 (not (contains!884 (+!169 lt!70366 (tuple2!2565 lt!70368 lt!70369)) lt!70372))))

(assert (=> b!134380 (= lt!70371 (addStillNotContains!63 lt!70366 lt!70368 lt!70369 lt!70372))))

(assert (=> b!134380 (= lt!70372 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134380 (= lt!70369 (get!1489 (select (arr!2253 (_values!2847 (_2!1294 lt!69280))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 (_2!1294 lt!69280)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134380 (= lt!70368 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000))))

(assert (=> b!134380 (= lt!70366 call!14804)))

(assert (=> b!134380 (= e!87523 (+!169 call!14804 (tuple2!2565 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 (_2!1294 lt!69280))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 (_2!1294 lt!69280)) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134381 () Bool)

(assert (=> b!134381 (= e!87527 e!87525)))

(declare-fun c!24992 () Bool)

(assert (=> b!134381 (= c!24992 e!87524)))

(declare-fun res!64631 () Bool)

(assert (=> b!134381 (=> (not res!64631) (not e!87524))))

(assert (=> b!134381 (= res!64631 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(assert (= (and d!41307 c!24991) b!134378))

(assert (= (and d!41307 (not c!24991)) b!134376))

(assert (= (and b!134376 c!24990) b!134380))

(assert (= (and b!134376 (not c!24990)) b!134375))

(assert (= (or b!134380 b!134375) bm!14801))

(assert (= (and d!41307 res!64628) b!134371))

(assert (= (and b!134371 res!64630) b!134381))

(assert (= (and b!134381 res!64631) b!134372))

(assert (= (and b!134381 c!24992) b!134377))

(assert (= (and b!134381 (not c!24992)) b!134373))

(assert (= (and b!134377 res!64629) b!134370))

(assert (= (and b!134373 c!24993) b!134374))

(assert (= (and b!134373 (not c!24993)) b!134379))

(declare-fun b_lambda!6021 () Bool)

(assert (=> (not b_lambda!6021) (not b!134370)))

(assert (=> b!134370 t!6151))

(declare-fun b_and!8353 () Bool)

(assert (= b_and!8349 (and (=> t!6151 result!3997) b_and!8353)))

(assert (=> b!134370 t!6153))

(declare-fun b_and!8355 () Bool)

(assert (= b_and!8351 (and (=> t!6153 result!3999) b_and!8355)))

(declare-fun b_lambda!6023 () Bool)

(assert (=> (not b_lambda!6023) (not b!134380)))

(assert (=> b!134380 t!6151))

(declare-fun b_and!8357 () Bool)

(assert (= b_and!8353 (and (=> t!6151 result!3997) b_and!8357)))

(assert (=> b!134380 t!6153))

(declare-fun b_and!8359 () Bool)

(assert (= b_and!8355 (and (=> t!6153 result!3999) b_and!8359)))

(declare-fun m!159547 () Bool)

(assert (=> b!134379 m!159547))

(assert (=> b!134376 m!157455))

(assert (=> b!134376 m!157455))

(assert (=> b!134376 m!157457))

(assert (=> b!134372 m!157455))

(assert (=> b!134372 m!157455))

(assert (=> b!134372 m!157457))

(declare-fun m!159549 () Bool)

(assert (=> b!134374 m!159549))

(declare-fun m!159551 () Bool)

(assert (=> b!134371 m!159551))

(assert (=> b!134380 m!157491))

(assert (=> b!134380 m!157493))

(assert (=> b!134380 m!157495))

(declare-fun m!159553 () Bool)

(assert (=> b!134380 m!159553))

(declare-fun m!159555 () Bool)

(assert (=> b!134380 m!159555))

(assert (=> b!134380 m!157491))

(declare-fun m!159557 () Bool)

(assert (=> b!134380 m!159557))

(assert (=> b!134380 m!159553))

(declare-fun m!159559 () Bool)

(assert (=> b!134380 m!159559))

(assert (=> b!134380 m!157455))

(assert (=> b!134380 m!157493))

(assert (=> b!134377 m!157455))

(assert (=> b!134377 m!157455))

(declare-fun m!159561 () Bool)

(assert (=> b!134377 m!159561))

(declare-fun m!159563 () Bool)

(assert (=> d!41307 m!159563))

(assert (=> d!41307 m!157387))

(assert (=> bm!14801 m!159549))

(assert (=> b!134370 m!157491))

(assert (=> b!134370 m!157493))

(assert (=> b!134370 m!157495))

(assert (=> b!134370 m!157491))

(assert (=> b!134370 m!157455))

(declare-fun m!159565 () Bool)

(assert (=> b!134370 m!159565))

(assert (=> b!134370 m!157455))

(assert (=> b!134370 m!157493))

(assert (=> bm!14704 d!41307))

(declare-fun d!41309 () Bool)

(assert (=> d!41309 (= (get!1492 (getValueByKey!173 (toList!842 lt!69529) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))) (v!3203 (getValueByKey!173 (toList!842 lt!69529) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!40883 d!41309))

(declare-fun b!134383 () Bool)

(declare-fun e!87530 () Option!179)

(declare-fun e!87531 () Option!179)

(assert (=> b!134383 (= e!87530 e!87531)))

(declare-fun c!24995 () Bool)

(assert (=> b!134383 (= c!24995 (and ((_ is Cons!1690) (toList!842 lt!69529)) (not (= (_1!1293 (h!2295 (toList!842 lt!69529))) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!134382 () Bool)

(assert (=> b!134382 (= e!87530 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69529)))))))

(declare-fun d!41311 () Bool)

(declare-fun c!24994 () Bool)

(assert (=> d!41311 (= c!24994 (and ((_ is Cons!1690) (toList!842 lt!69529)) (= (_1!1293 (h!2295 (toList!842 lt!69529))) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!41311 (= (getValueByKey!173 (toList!842 lt!69529) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) e!87530)))

(declare-fun b!134385 () Bool)

(assert (=> b!134385 (= e!87531 None!177)))

(declare-fun b!134384 () Bool)

(assert (=> b!134384 (= e!87531 (getValueByKey!173 (t!6137 (toList!842 lt!69529)) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41311 c!24994) b!134382))

(assert (= (and d!41311 (not c!24994)) b!134383))

(assert (= (and b!134383 c!24995) b!134384))

(assert (= (and b!134383 (not c!24995)) b!134385))

(assert (=> b!134384 m!156679))

(declare-fun m!159567 () Bool)

(assert (=> b!134384 m!159567))

(assert (=> d!40883 d!41311))

(declare-fun d!41313 () Bool)

(assert (=> d!41313 (= (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133270 d!41313))

(declare-fun b!134387 () Bool)

(declare-fun e!87532 () Option!179)

(declare-fun e!87533 () Option!179)

(assert (=> b!134387 (= e!87532 e!87533)))

(declare-fun c!24997 () Bool)

(assert (=> b!134387 (= c!24997 (and ((_ is Cons!1690) (toList!842 lt!70047)) (not (= (_1!1293 (h!2295 (toList!842 lt!70047))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!134386 () Bool)

(assert (=> b!134386 (= e!87532 (Some!178 (_2!1293 (h!2295 (toList!842 lt!70047)))))))

(declare-fun d!41315 () Bool)

(declare-fun c!24996 () Bool)

(assert (=> d!41315 (= c!24996 (and ((_ is Cons!1690) (toList!842 lt!70047)) (= (_1!1293 (h!2295 (toList!842 lt!70047))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41315 (= (getValueByKey!173 (toList!842 lt!70047) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) e!87532)))

(declare-fun b!134389 () Bool)

(assert (=> b!134389 (= e!87533 None!177)))

(declare-fun b!134388 () Bool)

(assert (=> b!134388 (= e!87533 (getValueByKey!173 (t!6137 (toList!842 lt!70047)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!41315 c!24996) b!134386))

(assert (= (and d!41315 (not c!24996)) b!134387))

(assert (= (and b!134387 c!24997) b!134388))

(assert (= (and b!134387 (not c!24997)) b!134389))

(declare-fun m!159569 () Bool)

(assert (=> b!134388 m!159569))

(assert (=> b!133846 d!41315))

(declare-fun d!41317 () Bool)

(assert (=> d!41317 (= (get!1492 (getValueByKey!173 (toList!842 lt!69529) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!173 (toList!842 lt!69529) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40767 d!41317))

(declare-fun b!134391 () Bool)

(declare-fun e!87534 () Option!179)

(declare-fun e!87535 () Option!179)

(assert (=> b!134391 (= e!87534 e!87535)))

(declare-fun c!24999 () Bool)

(assert (=> b!134391 (= c!24999 (and ((_ is Cons!1690) (toList!842 lt!69529)) (not (= (_1!1293 (h!2295 (toList!842 lt!69529))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134390 () Bool)

(assert (=> b!134390 (= e!87534 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69529)))))))

(declare-fun d!41319 () Bool)

(declare-fun c!24998 () Bool)

(assert (=> d!41319 (= c!24998 (and ((_ is Cons!1690) (toList!842 lt!69529)) (= (_1!1293 (h!2295 (toList!842 lt!69529))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41319 (= (getValueByKey!173 (toList!842 lt!69529) #b0000000000000000000000000000000000000000000000000000000000000000) e!87534)))

(declare-fun b!134393 () Bool)

(assert (=> b!134393 (= e!87535 None!177)))

(declare-fun b!134392 () Bool)

(assert (=> b!134392 (= e!87535 (getValueByKey!173 (t!6137 (toList!842 lt!69529)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41319 c!24998) b!134390))

(assert (= (and d!41319 (not c!24998)) b!134391))

(assert (= (and b!134391 c!24999) b!134392))

(assert (= (and b!134391 (not c!24999)) b!134393))

(declare-fun m!159571 () Bool)

(assert (=> b!134392 m!159571))

(assert (=> d!40767 d!41319))

(declare-fun d!41321 () Bool)

(declare-fun res!64632 () Bool)

(declare-fun e!87536 () Bool)

(assert (=> d!41321 (=> res!64632 e!87536)))

(assert (=> d!41321 (= res!64632 (and ((_ is Cons!1690) lt!69650) (= (_1!1293 (h!2295 lt!69650)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41321 (= (containsKey!176 lt!69650 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87536)))

(declare-fun b!134394 () Bool)

(declare-fun e!87537 () Bool)

(assert (=> b!134394 (= e!87536 e!87537)))

(declare-fun res!64633 () Bool)

(assert (=> b!134394 (=> (not res!64633) (not e!87537))))

(assert (=> b!134394 (= res!64633 (and (or (not ((_ is Cons!1690) lt!69650)) (bvsle (_1!1293 (h!2295 lt!69650)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Cons!1690) lt!69650) (bvslt (_1!1293 (h!2295 lt!69650)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134395 () Bool)

(assert (=> b!134395 (= e!87537 (containsKey!176 (t!6137 lt!69650) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41321 (not res!64632)) b!134394))

(assert (= (and b!134394 res!64633) b!134395))

(declare-fun m!159573 () Bool)

(assert (=> b!134395 m!159573))

(assert (=> b!133922 d!41321))

(declare-fun d!41323 () Bool)

(declare-fun res!64634 () Bool)

(declare-fun e!87538 () Bool)

(assert (=> d!41323 (=> res!64634 e!87538)))

(assert (=> d!41323 (= res!64634 (and ((_ is Cons!1690) (t!6137 (t!6137 (toList!842 lt!69167)))) (= (_1!1293 (h!2295 (t!6137 (t!6137 (toList!842 lt!69167))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!41323 (= (containsKey!176 (t!6137 (t!6137 (toList!842 lt!69167))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!87538)))

(declare-fun b!134396 () Bool)

(declare-fun e!87539 () Bool)

(assert (=> b!134396 (= e!87538 e!87539)))

(declare-fun res!64635 () Bool)

(assert (=> b!134396 (=> (not res!64635) (not e!87539))))

(assert (=> b!134396 (= res!64635 (and (or (not ((_ is Cons!1690) (t!6137 (t!6137 (toList!842 lt!69167))))) (bvsle (_1!1293 (h!2295 (t!6137 (t!6137 (toList!842 lt!69167))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1690) (t!6137 (t!6137 (toList!842 lt!69167)))) (bvslt (_1!1293 (h!2295 (t!6137 (t!6137 (toList!842 lt!69167))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!134397 () Bool)

(assert (=> b!134397 (= e!87539 (containsKey!176 (t!6137 (t!6137 (t!6137 (toList!842 lt!69167)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!41323 (not res!64634)) b!134396))

(assert (= (and b!134396 res!64635) b!134397))

(assert (=> b!134397 m!156395))

(declare-fun m!159575 () Bool)

(assert (=> b!134397 m!159575))

(assert (=> b!133508 d!41323))

(assert (=> b!133416 d!41155))

(assert (=> b!133416 d!41157))

(assert (=> b!133551 d!41161))

(assert (=> b!133551 d!41163))

(assert (=> d!40757 d!40501))

(assert (=> d!40757 d!40479))

(declare-fun d!41325 () Bool)

(assert (=> d!41325 (contains!884 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))

(assert (=> d!41325 true))

(declare-fun _$17!56 () Unit!4141)

(assert (=> d!41325 (= (choose!835 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) _$17!56)))

(declare-fun bs!5593 () Bool)

(assert (= bs!5593 d!41325))

(assert (=> bs!5593 m!156545))

(assert (=> bs!5593 m!156545))

(assert (=> bs!5593 m!156395))

(assert (=> bs!5593 m!156549))

(assert (=> d!40757 d!41325))

(assert (=> d!40757 d!40591))

(assert (=> b!133793 d!41125))

(assert (=> b!133793 d!41127))

(declare-fun d!41327 () Bool)

(declare-fun res!64636 () Bool)

(declare-fun e!87540 () Bool)

(assert (=> d!41327 (=> res!64636 e!87540)))

(assert (=> d!41327 (= res!64636 (and ((_ is Cons!1690) lt!69640) (= (_1!1293 (h!2295 lt!69640)) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41327 (= (containsKey!176 lt!69640 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87540)))

(declare-fun b!134398 () Bool)

(declare-fun e!87541 () Bool)

(assert (=> b!134398 (= e!87540 e!87541)))

(declare-fun res!64637 () Bool)

(assert (=> b!134398 (=> (not res!64637) (not e!87541))))

(assert (=> b!134398 (= res!64637 (and (or (not ((_ is Cons!1690) lt!69640)) (bvsle (_1!1293 (h!2295 lt!69640)) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Cons!1690) lt!69640) (bvslt (_1!1293 (h!2295 lt!69640)) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134399 () Bool)

(assert (=> b!134399 (= e!87541 (containsKey!176 (t!6137 lt!69640) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41327 (not res!64636)) b!134398))

(assert (= (and b!134398 res!64637) b!134399))

(declare-fun m!159577 () Bool)

(assert (=> b!134399 m!159577))

(assert (=> b!133626 d!41327))

(declare-fun d!41329 () Bool)

(assert (=> d!41329 (= (apply!116 lt!69804 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69804) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5594 () Bool)

(assert (= bs!5594 d!41329))

(declare-fun m!159579 () Bool)

(assert (=> bs!5594 m!159579))

(assert (=> bs!5594 m!159579))

(declare-fun m!159581 () Bool)

(assert (=> bs!5594 m!159581))

(assert (=> b!133455 d!41329))

(declare-fun lt!70373 () Bool)

(declare-fun d!41331 () Bool)

(assert (=> d!41331 (= lt!70373 (select (content!134 lt!69631) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun e!87543 () Bool)

(assert (=> d!41331 (= lt!70373 e!87543)))

(declare-fun res!64639 () Bool)

(assert (=> d!41331 (=> (not res!64639) (not e!87543))))

(assert (=> d!41331 (= res!64639 ((_ is Cons!1690) lt!69631))))

(assert (=> d!41331 (= (contains!886 lt!69631 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!70373)))

(declare-fun b!134400 () Bool)

(declare-fun e!87542 () Bool)

(assert (=> b!134400 (= e!87543 e!87542)))

(declare-fun res!64638 () Bool)

(assert (=> b!134400 (=> res!64638 e!87542)))

(assert (=> b!134400 (= res!64638 (= (h!2295 lt!69631) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134401 () Bool)

(assert (=> b!134401 (= e!87542 (contains!886 (t!6137 lt!69631) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!41331 res!64639) b!134400))

(assert (= (and b!134400 (not res!64638)) b!134401))

(declare-fun m!159583 () Bool)

(assert (=> d!41331 m!159583))

(declare-fun m!159585 () Bool)

(assert (=> d!41331 m!159585))

(declare-fun m!159587 () Bool)

(assert (=> b!134401 m!159587))

(assert (=> b!133651 d!41331))

(declare-fun d!41333 () Bool)

(assert (=> d!41333 (isDefined!125 (getValueByKey!173 (toList!842 lt!69577) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70374 () Unit!4141)

(assert (=> d!41333 (= lt!70374 (choose!831 (toList!842 lt!69577) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87544 () Bool)

(assert (=> d!41333 e!87544))

(declare-fun res!64640 () Bool)

(assert (=> d!41333 (=> (not res!64640) (not e!87544))))

(assert (=> d!41333 (= res!64640 (isStrictlySorted!309 (toList!842 lt!69577)))))

(assert (=> d!41333 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69577) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70374)))

(declare-fun b!134402 () Bool)

(assert (=> b!134402 (= e!87544 (containsKey!176 (toList!842 lt!69577) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41333 res!64640) b!134402))

(assert (=> d!41333 m!157995))

(assert (=> d!41333 m!157995))

(assert (=> d!41333 m!158157))

(declare-fun m!159589 () Bool)

(assert (=> d!41333 m!159589))

(assert (=> d!41333 m!159463))

(assert (=> b!134402 m!158153))

(assert (=> b!133738 d!41333))

(declare-fun d!41335 () Bool)

(assert (=> d!41335 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69577) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69577) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5595 () Bool)

(assert (= bs!5595 d!41335))

(assert (=> bs!5595 m!157995))

(declare-fun m!159591 () Bool)

(assert (=> bs!5595 m!159591))

(assert (=> b!133738 d!41335))

(declare-fun b!134404 () Bool)

(declare-fun e!87545 () Option!179)

(declare-fun e!87546 () Option!179)

(assert (=> b!134404 (= e!87545 e!87546)))

(declare-fun c!25001 () Bool)

(assert (=> b!134404 (= c!25001 (and ((_ is Cons!1690) (toList!842 lt!69577)) (not (= (_1!1293 (h!2295 (toList!842 lt!69577))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134403 () Bool)

(assert (=> b!134403 (= e!87545 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69577)))))))

(declare-fun d!41337 () Bool)

(declare-fun c!25000 () Bool)

(assert (=> d!41337 (= c!25000 (and ((_ is Cons!1690) (toList!842 lt!69577)) (= (_1!1293 (h!2295 (toList!842 lt!69577))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41337 (= (getValueByKey!173 (toList!842 lt!69577) #b0000000000000000000000000000000000000000000000000000000000000000) e!87545)))

(declare-fun b!134406 () Bool)

(assert (=> b!134406 (= e!87546 None!177)))

(declare-fun b!134405 () Bool)

(assert (=> b!134405 (= e!87546 (getValueByKey!173 (t!6137 (toList!842 lt!69577)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41337 c!25000) b!134403))

(assert (= (and d!41337 (not c!25000)) b!134404))

(assert (= (and b!134404 c!25001) b!134405))

(assert (= (and b!134404 (not c!25001)) b!134406))

(declare-fun m!159593 () Bool)

(assert (=> b!134405 m!159593))

(assert (=> b!133738 d!41337))

(declare-fun d!41339 () Bool)

(declare-fun res!64641 () Bool)

(declare-fun e!87547 () Bool)

(assert (=> d!41339 (=> res!64641 e!87547)))

(assert (=> d!41339 (= res!64641 (and ((_ is Cons!1690) lt!69626) (= (_1!1293 (h!2295 lt!69626)) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41339 (= (containsKey!176 lt!69626 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87547)))

(declare-fun b!134407 () Bool)

(declare-fun e!87548 () Bool)

(assert (=> b!134407 (= e!87547 e!87548)))

(declare-fun res!64642 () Bool)

(assert (=> b!134407 (=> (not res!64642) (not e!87548))))

(assert (=> b!134407 (= res!64642 (and (or (not ((_ is Cons!1690) lt!69626)) (bvsle (_1!1293 (h!2295 lt!69626)) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Cons!1690) lt!69626) (bvslt (_1!1293 (h!2295 lt!69626)) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134408 () Bool)

(assert (=> b!134408 (= e!87548 (containsKey!176 (t!6137 lt!69626) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41339 (not res!64641)) b!134407))

(assert (= (and b!134407 res!64642) b!134408))

(declare-fun m!159595 () Bool)

(assert (=> b!134408 m!159595))

(assert (=> b!133991 d!41339))

(assert (=> b!133674 d!40621))

(assert (=> d!40721 d!40717))

(assert (=> d!40721 d!40715))

(declare-fun d!41341 () Bool)

(assert (=> d!41341 (contains!884 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69494)))

(assert (=> d!41341 true))

(declare-fun _$35!382 () Unit!4141)

(assert (=> d!41341 (= (choose!829 lt!69495 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69494) _$35!382)))

(declare-fun bs!5596 () Bool)

(assert (= bs!5596 d!41341))

(assert (=> bs!5596 m!156801))

(assert (=> bs!5596 m!156801))

(assert (=> bs!5596 m!156803))

(assert (=> d!40721 d!41341))

(declare-fun d!41343 () Bool)

(declare-fun e!87550 () Bool)

(assert (=> d!41343 e!87550))

(declare-fun res!64643 () Bool)

(assert (=> d!41343 (=> res!64643 e!87550)))

(declare-fun lt!70375 () Bool)

(assert (=> d!41343 (= res!64643 (not lt!70375))))

(declare-fun lt!70376 () Bool)

(assert (=> d!41343 (= lt!70375 lt!70376)))

(declare-fun lt!70377 () Unit!4141)

(declare-fun e!87549 () Unit!4141)

(assert (=> d!41343 (= lt!70377 e!87549)))

(declare-fun c!25002 () Bool)

(assert (=> d!41343 (= c!25002 lt!70376)))

(assert (=> d!41343 (= lt!70376 (containsKey!176 (toList!842 lt!69495) lt!69494))))

(assert (=> d!41343 (= (contains!884 lt!69495 lt!69494) lt!70375)))

(declare-fun b!134409 () Bool)

(declare-fun lt!70378 () Unit!4141)

(assert (=> b!134409 (= e!87549 lt!70378)))

(assert (=> b!134409 (= lt!70378 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69495) lt!69494))))

(assert (=> b!134409 (isDefined!125 (getValueByKey!173 (toList!842 lt!69495) lt!69494))))

(declare-fun b!134410 () Bool)

(declare-fun Unit!4211 () Unit!4141)

(assert (=> b!134410 (= e!87549 Unit!4211)))

(declare-fun b!134411 () Bool)

(assert (=> b!134411 (= e!87550 (isDefined!125 (getValueByKey!173 (toList!842 lt!69495) lt!69494)))))

(assert (= (and d!41343 c!25002) b!134409))

(assert (= (and d!41343 (not c!25002)) b!134410))

(assert (= (and d!41343 (not res!64643)) b!134411))

(declare-fun m!159597 () Bool)

(assert (=> d!41343 m!159597))

(declare-fun m!159599 () Bool)

(assert (=> b!134409 m!159599))

(declare-fun m!159601 () Bool)

(assert (=> b!134409 m!159601))

(assert (=> b!134409 m!159601))

(declare-fun m!159603 () Bool)

(assert (=> b!134409 m!159603))

(assert (=> b!134411 m!159601))

(assert (=> b!134411 m!159601))

(assert (=> b!134411 m!159603))

(assert (=> d!40721 d!41343))

(declare-fun d!41345 () Bool)

(assert (=> d!41345 (= (isEmpty!416 (getValueByKey!173 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))) (not ((_ is Some!178) (getValueByKey!173 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))))

(assert (=> d!40603 d!41345))

(declare-fun d!41347 () Bool)

(declare-fun lt!70379 () Bool)

(assert (=> d!41347 (= lt!70379 (select (content!134 (t!6137 (toList!842 lt!69605))) (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun e!87552 () Bool)

(assert (=> d!41347 (= lt!70379 e!87552)))

(declare-fun res!64645 () Bool)

(assert (=> d!41347 (=> (not res!64645) (not e!87552))))

(assert (=> d!41347 (= res!64645 ((_ is Cons!1690) (t!6137 (toList!842 lt!69605))))))

(assert (=> d!41347 (= (contains!886 (t!6137 (toList!842 lt!69605)) (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70379)))

(declare-fun b!134412 () Bool)

(declare-fun e!87551 () Bool)

(assert (=> b!134412 (= e!87552 e!87551)))

(declare-fun res!64644 () Bool)

(assert (=> b!134412 (=> res!64644 e!87551)))

(assert (=> b!134412 (= res!64644 (= (h!2295 (t!6137 (toList!842 lt!69605))) (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!134413 () Bool)

(assert (=> b!134413 (= e!87551 (contains!886 (t!6137 (t!6137 (toList!842 lt!69605))) (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41347 res!64645) b!134412))

(assert (= (and b!134412 (not res!64644)) b!134413))

(declare-fun m!159605 () Bool)

(assert (=> d!41347 m!159605))

(declare-fun m!159607 () Bool)

(assert (=> d!41347 m!159607))

(declare-fun m!159609 () Bool)

(assert (=> b!134413 m!159609))

(assert (=> b!133935 d!41347))

(declare-fun b!134414 () Bool)

(declare-fun res!64646 () Bool)

(declare-fun e!87557 () Bool)

(assert (=> b!134414 (=> (not res!64646) (not e!87557))))

(declare-fun lt!70380 () List!1694)

(assert (=> b!134414 (= res!64646 (containsKey!176 lt!70380 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134415 () Bool)

(declare-fun e!87555 () List!1694)

(declare-fun e!87556 () List!1694)

(assert (=> b!134415 (= e!87555 e!87556)))

(declare-fun c!25006 () Bool)

(assert (=> b!134415 (= c!25006 (and ((_ is Cons!1690) (t!6137 (toList!842 call!14604))) (= (_1!1293 (h!2295 (t!6137 (toList!842 call!14604)))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14802 () Bool)

(declare-fun call!14806 () List!1694)

(declare-fun call!14805 () List!1694)

(assert (=> bm!14802 (= call!14806 call!14805)))

(declare-fun b!134416 () Bool)

(declare-fun e!87553 () List!1694)

(assert (=> b!134416 (= e!87553 call!14806)))

(declare-fun b!134417 () Bool)

(declare-fun c!25005 () Bool)

(assert (=> b!134417 (= c!25005 (and ((_ is Cons!1690) (t!6137 (toList!842 call!14604))) (bvsgt (_1!1293 (h!2295 (t!6137 (toList!842 call!14604)))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!134417 (= e!87556 e!87553)))

(declare-fun b!134418 () Bool)

(assert (=> b!134418 (= e!87557 (contains!886 lt!70380 (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134419 () Bool)

(assert (=> b!134419 (= e!87556 call!14805)))

(declare-fun d!41349 () Bool)

(assert (=> d!41349 e!87557))

(declare-fun res!64647 () Bool)

(assert (=> d!41349 (=> (not res!64647) (not e!87557))))

(assert (=> d!41349 (= res!64647 (isStrictlySorted!309 lt!70380))))

(assert (=> d!41349 (= lt!70380 e!87555)))

(declare-fun c!25004 () Bool)

(assert (=> d!41349 (= c!25004 (and ((_ is Cons!1690) (t!6137 (toList!842 call!14604))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 call!14604)))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41349 (isStrictlySorted!309 (t!6137 (toList!842 call!14604)))))

(assert (=> d!41349 (= (insertStrictlySorted!91 (t!6137 (toList!842 call!14604)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70380)))

(declare-fun e!87554 () List!1694)

(declare-fun b!134420 () Bool)

(assert (=> b!134420 (= e!87554 (ite c!25006 (t!6137 (t!6137 (toList!842 call!14604))) (ite c!25005 (Cons!1690 (h!2295 (t!6137 (toList!842 call!14604))) (t!6137 (t!6137 (toList!842 call!14604)))) Nil!1691)))))

(declare-fun b!134421 () Bool)

(declare-fun call!14807 () List!1694)

(assert (=> b!134421 (= e!87555 call!14807)))

(declare-fun b!134422 () Bool)

(assert (=> b!134422 (= e!87553 call!14806)))

(declare-fun b!134423 () Bool)

(assert (=> b!134423 (= e!87554 (insertStrictlySorted!91 (t!6137 (t!6137 (toList!842 call!14604))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14803 () Bool)

(assert (=> bm!14803 (= call!14805 call!14807)))

(declare-fun bm!14804 () Bool)

(assert (=> bm!14804 (= call!14807 ($colon$colon!91 e!87554 (ite c!25004 (h!2295 (t!6137 (toList!842 call!14604))) (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25003 () Bool)

(assert (=> bm!14804 (= c!25003 c!25004)))

(assert (= (and d!41349 c!25004) b!134421))

(assert (= (and d!41349 (not c!25004)) b!134415))

(assert (= (and b!134415 c!25006) b!134419))

(assert (= (and b!134415 (not c!25006)) b!134417))

(assert (= (and b!134417 c!25005) b!134422))

(assert (= (and b!134417 (not c!25005)) b!134416))

(assert (= (or b!134422 b!134416) bm!14802))

(assert (= (or b!134419 bm!14802) bm!14803))

(assert (= (or b!134421 bm!14803) bm!14804))

(assert (= (and bm!14804 c!25003) b!134423))

(assert (= (and bm!14804 (not c!25003)) b!134420))

(assert (= (and d!41349 res!64647) b!134414))

(assert (= (and b!134414 res!64646) b!134418))

(declare-fun m!159611 () Bool)

(assert (=> b!134418 m!159611))

(declare-fun m!159613 () Bool)

(assert (=> b!134423 m!159613))

(declare-fun m!159615 () Bool)

(assert (=> bm!14804 m!159615))

(declare-fun m!159617 () Bool)

(assert (=> b!134414 m!159617))

(declare-fun m!159619 () Bool)

(assert (=> d!41349 m!159619))

(declare-fun m!159621 () Bool)

(assert (=> d!41349 m!159621))

(assert (=> b!133770 d!41349))

(declare-fun d!41351 () Bool)

(assert (=> d!41351 (isDefined!125 (getValueByKey!173 (toList!842 lt!69634) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun lt!70381 () Unit!4141)

(assert (=> d!41351 (= lt!70381 (choose!831 (toList!842 lt!69634) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun e!87558 () Bool)

(assert (=> d!41351 e!87558))

(declare-fun res!64648 () Bool)

(assert (=> d!41351 (=> (not res!64648) (not e!87558))))

(assert (=> d!41351 (= res!64648 (isStrictlySorted!309 (toList!842 lt!69634)))))

(assert (=> d!41351 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69634) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70381)))

(declare-fun b!134424 () Bool)

(assert (=> b!134424 (= e!87558 (containsKey!176 (toList!842 lt!69634) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41351 res!64648) b!134424))

(assert (=> d!41351 m!157149))

(assert (=> d!41351 m!157149))

(assert (=> d!41351 m!158127))

(declare-fun m!159623 () Bool)

(assert (=> d!41351 m!159623))

(declare-fun m!159625 () Bool)

(assert (=> d!41351 m!159625))

(assert (=> b!134424 m!158123))

(assert (=> b!133715 d!41351))

(declare-fun d!41353 () Bool)

(assert (=> d!41353 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69634) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69634) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun bs!5597 () Bool)

(assert (= bs!5597 d!41353))

(assert (=> bs!5597 m!157149))

(declare-fun m!159627 () Bool)

(assert (=> bs!5597 m!159627))

(assert (=> b!133715 d!41353))

(assert (=> b!133715 d!40871))

(declare-fun d!41355 () Bool)

(declare-fun e!87560 () Bool)

(assert (=> d!41355 e!87560))

(declare-fun res!64649 () Bool)

(assert (=> d!41355 (=> res!64649 e!87560)))

(declare-fun lt!70382 () Bool)

(assert (=> d!41355 (= res!64649 (not lt!70382))))

(declare-fun lt!70383 () Bool)

(assert (=> d!41355 (= lt!70382 lt!70383)))

(declare-fun lt!70384 () Unit!4141)

(declare-fun e!87559 () Unit!4141)

(assert (=> d!41355 (= lt!70384 e!87559)))

(declare-fun c!25007 () Bool)

(assert (=> d!41355 (= c!25007 lt!70383)))

(assert (=> d!41355 (= lt!70383 (containsKey!176 (toList!842 lt!69858) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!41355 (= (contains!884 lt!69858 (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!70382)))

(declare-fun b!134425 () Bool)

(declare-fun lt!70385 () Unit!4141)

(assert (=> b!134425 (= e!87559 lt!70385)))

(assert (=> b!134425 (= lt!70385 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69858) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> b!134425 (isDefined!125 (getValueByKey!173 (toList!842 lt!69858) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!134426 () Bool)

(declare-fun Unit!4212 () Unit!4141)

(assert (=> b!134426 (= e!87559 Unit!4212)))

(declare-fun b!134427 () Bool)

(assert (=> b!134427 (= e!87560 (isDefined!125 (getValueByKey!173 (toList!842 lt!69858) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (= (and d!41355 c!25007) b!134425))

(assert (= (and d!41355 (not c!25007)) b!134426))

(assert (= (and d!41355 (not res!64649)) b!134427))

(declare-fun m!159629 () Bool)

(assert (=> d!41355 m!159629))

(declare-fun m!159631 () Bool)

(assert (=> b!134425 m!159631))

(assert (=> b!134425 m!157785))

(assert (=> b!134425 m!157785))

(declare-fun m!159633 () Bool)

(assert (=> b!134425 m!159633))

(assert (=> b!134427 m!157785))

(assert (=> b!134427 m!157785))

(assert (=> b!134427 m!159633))

(assert (=> d!40715 d!41355))

(declare-fun b!134429 () Bool)

(declare-fun e!87561 () Option!179)

(declare-fun e!87562 () Option!179)

(assert (=> b!134429 (= e!87561 e!87562)))

(declare-fun c!25009 () Bool)

(assert (=> b!134429 (= c!25009 (and ((_ is Cons!1690) lt!69859) (not (= (_1!1293 (h!2295 lt!69859)) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))))

(declare-fun b!134428 () Bool)

(assert (=> b!134428 (= e!87561 (Some!178 (_2!1293 (h!2295 lt!69859))))))

(declare-fun c!25008 () Bool)

(declare-fun d!41357 () Bool)

(assert (=> d!41357 (= c!25008 (and ((_ is Cons!1690) lt!69859) (= (_1!1293 (h!2295 lt!69859)) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (=> d!41357 (= (getValueByKey!173 lt!69859 (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) e!87561)))

(declare-fun b!134431 () Bool)

(assert (=> b!134431 (= e!87562 None!177)))

(declare-fun b!134430 () Bool)

(assert (=> b!134430 (= e!87562 (getValueByKey!173 (t!6137 lt!69859) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (= (and d!41357 c!25008) b!134428))

(assert (= (and d!41357 (not c!25008)) b!134429))

(assert (= (and b!134429 c!25009) b!134430))

(assert (= (and b!134429 (not c!25009)) b!134431))

(declare-fun m!159635 () Bool)

(assert (=> b!134430 m!159635))

(assert (=> d!40715 d!41357))

(declare-fun d!41359 () Bool)

(assert (=> d!41359 (= (getValueByKey!173 lt!69859 (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) (Some!178 (_2!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun lt!70386 () Unit!4141)

(assert (=> d!41359 (= lt!70386 (choose!833 lt!69859 (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun e!87563 () Bool)

(assert (=> d!41359 e!87563))

(declare-fun res!64650 () Bool)

(assert (=> d!41359 (=> (not res!64650) (not e!87563))))

(assert (=> d!41359 (= res!64650 (isStrictlySorted!309 lt!69859))))

(assert (=> d!41359 (= (lemmaContainsTupThenGetReturnValue!88 lt!69859 (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!70386)))

(declare-fun b!134432 () Bool)

(declare-fun res!64651 () Bool)

(assert (=> b!134432 (=> (not res!64651) (not e!87563))))

(assert (=> b!134432 (= res!64651 (containsKey!176 lt!69859 (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!134433 () Bool)

(assert (=> b!134433 (= e!87563 (contains!886 lt!69859 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (= (and d!41359 res!64650) b!134432))

(assert (= (and b!134432 res!64651) b!134433))

(assert (=> d!41359 m!157779))

(declare-fun m!159637 () Bool)

(assert (=> d!41359 m!159637))

(declare-fun m!159639 () Bool)

(assert (=> d!41359 m!159639))

(declare-fun m!159641 () Bool)

(assert (=> b!134432 m!159641))

(declare-fun m!159643 () Bool)

(assert (=> b!134433 m!159643))

(assert (=> d!40715 d!41359))

(declare-fun b!134434 () Bool)

(declare-fun res!64652 () Bool)

(declare-fun e!87568 () Bool)

(assert (=> b!134434 (=> (not res!64652) (not e!87568))))

(declare-fun lt!70387 () List!1694)

(assert (=> b!134434 (= res!64652 (containsKey!176 lt!70387 (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!134435 () Bool)

(declare-fun e!87566 () List!1694)

(declare-fun e!87567 () List!1694)

(assert (=> b!134435 (= e!87566 e!87567)))

(declare-fun c!25013 () Bool)

(assert (=> b!134435 (= c!25013 (and ((_ is Cons!1690) (toList!842 lt!69495)) (= (_1!1293 (h!2295 (toList!842 lt!69495))) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun bm!14805 () Bool)

(declare-fun call!14809 () List!1694)

(declare-fun call!14808 () List!1694)

(assert (=> bm!14805 (= call!14809 call!14808)))

(declare-fun b!134436 () Bool)

(declare-fun e!87564 () List!1694)

(assert (=> b!134436 (= e!87564 call!14809)))

(declare-fun c!25012 () Bool)

(declare-fun b!134437 () Bool)

(assert (=> b!134437 (= c!25012 (and ((_ is Cons!1690) (toList!842 lt!69495)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69495))) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (=> b!134437 (= e!87567 e!87564)))

(declare-fun b!134438 () Bool)

(assert (=> b!134438 (= e!87568 (contains!886 lt!70387 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun b!134439 () Bool)

(assert (=> b!134439 (= e!87567 call!14808)))

(declare-fun d!41361 () Bool)

(assert (=> d!41361 e!87568))

(declare-fun res!64653 () Bool)

(assert (=> d!41361 (=> (not res!64653) (not e!87568))))

(assert (=> d!41361 (= res!64653 (isStrictlySorted!309 lt!70387))))

(assert (=> d!41361 (= lt!70387 e!87566)))

(declare-fun c!25011 () Bool)

(assert (=> d!41361 (= c!25011 (and ((_ is Cons!1690) (toList!842 lt!69495)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69495))) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (=> d!41361 (isStrictlySorted!309 (toList!842 lt!69495))))

(assert (=> d!41361 (= (insertStrictlySorted!91 (toList!842 lt!69495) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!70387)))

(declare-fun e!87565 () List!1694)

(declare-fun b!134440 () Bool)

(assert (=> b!134440 (= e!87565 (ite c!25013 (t!6137 (toList!842 lt!69495)) (ite c!25012 (Cons!1690 (h!2295 (toList!842 lt!69495)) (t!6137 (toList!842 lt!69495))) Nil!1691)))))

(declare-fun b!134441 () Bool)

(declare-fun call!14810 () List!1694)

(assert (=> b!134441 (= e!87566 call!14810)))

(declare-fun b!134442 () Bool)

(assert (=> b!134442 (= e!87564 call!14809)))

(declare-fun b!134443 () Bool)

(assert (=> b!134443 (= e!87565 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69495)) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun bm!14806 () Bool)

(assert (=> bm!14806 (= call!14808 call!14810)))

(declare-fun bm!14807 () Bool)

(assert (=> bm!14807 (= call!14810 ($colon$colon!91 e!87565 (ite c!25011 (h!2295 (toList!842 lt!69495)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))))

(declare-fun c!25010 () Bool)

(assert (=> bm!14807 (= c!25010 c!25011)))

(assert (= (and d!41361 c!25011) b!134441))

(assert (= (and d!41361 (not c!25011)) b!134435))

(assert (= (and b!134435 c!25013) b!134439))

(assert (= (and b!134435 (not c!25013)) b!134437))

(assert (= (and b!134437 c!25012) b!134442))

(assert (= (and b!134437 (not c!25012)) b!134436))

(assert (= (or b!134442 b!134436) bm!14805))

(assert (= (or b!134439 bm!14805) bm!14806))

(assert (= (or b!134441 bm!14806) bm!14807))

(assert (= (and bm!14807 c!25010) b!134443))

(assert (= (and bm!14807 (not c!25010)) b!134440))

(assert (= (and d!41361 res!64653) b!134434))

(assert (= (and b!134434 res!64652) b!134438))

(declare-fun m!159645 () Bool)

(assert (=> b!134438 m!159645))

(declare-fun m!159647 () Bool)

(assert (=> b!134443 m!159647))

(declare-fun m!159649 () Bool)

(assert (=> bm!14807 m!159649))

(declare-fun m!159651 () Bool)

(assert (=> b!134434 m!159651))

(declare-fun m!159653 () Bool)

(assert (=> d!41361 m!159653))

(declare-fun m!159655 () Bool)

(assert (=> d!41361 m!159655))

(assert (=> d!40715 d!41361))

(declare-fun d!41363 () Bool)

(assert (=> d!41363 (= (apply!116 lt!69735 lt!69737) (get!1492 (getValueByKey!173 (toList!842 lt!69735) lt!69737)))))

(declare-fun bs!5598 () Bool)

(assert (= bs!5598 d!41363))

(declare-fun m!159657 () Bool)

(assert (=> bs!5598 m!159657))

(assert (=> bs!5598 m!159657))

(declare-fun m!159659 () Bool)

(assert (=> bs!5598 m!159659))

(assert (=> b!133374 d!41363))

(declare-fun d!41365 () Bool)

(assert (=> d!41365 (= (apply!116 (+!169 lt!69735 (tuple2!2565 lt!69727 (minValue!2719 (_2!1294 lt!69280)))) lt!69737) (apply!116 lt!69735 lt!69737))))

(declare-fun lt!70388 () Unit!4141)

(assert (=> d!41365 (= lt!70388 (choose!828 lt!69735 lt!69727 (minValue!2719 (_2!1294 lt!69280)) lt!69737))))

(declare-fun e!87569 () Bool)

(assert (=> d!41365 e!87569))

(declare-fun res!64654 () Bool)

(assert (=> d!41365 (=> (not res!64654) (not e!87569))))

(assert (=> d!41365 (= res!64654 (contains!884 lt!69735 lt!69737))))

(assert (=> d!41365 (= (addApplyDifferent!92 lt!69735 lt!69727 (minValue!2719 (_2!1294 lt!69280)) lt!69737) lt!70388)))

(declare-fun b!134444 () Bool)

(assert (=> b!134444 (= e!87569 (not (= lt!69737 lt!69727)))))

(assert (= (and d!41365 res!64654) b!134444))

(assert (=> d!41365 m!157467))

(assert (=> d!41365 m!157481))

(assert (=> d!41365 m!157463))

(declare-fun m!159661 () Bool)

(assert (=> d!41365 m!159661))

(declare-fun m!159663 () Bool)

(assert (=> d!41365 m!159663))

(assert (=> d!41365 m!157467))

(assert (=> b!133374 d!41365))

(declare-fun d!41367 () Bool)

(assert (=> d!41367 (contains!884 (+!169 lt!69729 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280)))) lt!69728)))

(declare-fun lt!70389 () Unit!4141)

(assert (=> d!41367 (= lt!70389 (choose!829 lt!69729 lt!69744 (zeroValue!2719 (_2!1294 lt!69280)) lt!69728))))

(assert (=> d!41367 (contains!884 lt!69729 lt!69728)))

(assert (=> d!41367 (= (addStillContains!92 lt!69729 lt!69744 (zeroValue!2719 (_2!1294 lt!69280)) lt!69728) lt!70389)))

(declare-fun bs!5599 () Bool)

(assert (= bs!5599 d!41367))

(assert (=> bs!5599 m!157485))

(assert (=> bs!5599 m!157485))

(assert (=> bs!5599 m!157487))

(declare-fun m!159665 () Bool)

(assert (=> bs!5599 m!159665))

(declare-fun m!159667 () Bool)

(assert (=> bs!5599 m!159667))

(assert (=> b!133374 d!41367))

(declare-fun d!41369 () Bool)

(assert (=> d!41369 (= (apply!116 (+!169 lt!69735 (tuple2!2565 lt!69727 (minValue!2719 (_2!1294 lt!69280)))) lt!69737) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69735 (tuple2!2565 lt!69727 (minValue!2719 (_2!1294 lt!69280))))) lt!69737)))))

(declare-fun bs!5600 () Bool)

(assert (= bs!5600 d!41369))

(declare-fun m!159669 () Bool)

(assert (=> bs!5600 m!159669))

(assert (=> bs!5600 m!159669))

(declare-fun m!159671 () Bool)

(assert (=> bs!5600 m!159671))

(assert (=> b!133374 d!41369))

(declare-fun d!41371 () Bool)

(declare-fun e!87570 () Bool)

(assert (=> d!41371 e!87570))

(declare-fun res!64656 () Bool)

(assert (=> d!41371 (=> (not res!64656) (not e!87570))))

(declare-fun lt!70392 () ListLongMap!1653)

(assert (=> d!41371 (= res!64656 (contains!884 lt!70392 (_1!1293 (tuple2!2565 lt!69736 (zeroValue!2719 (_2!1294 lt!69280))))))))

(declare-fun lt!70393 () List!1694)

(assert (=> d!41371 (= lt!70392 (ListLongMap!1654 lt!70393))))

(declare-fun lt!70390 () Unit!4141)

(declare-fun lt!70391 () Unit!4141)

(assert (=> d!41371 (= lt!70390 lt!70391)))

(assert (=> d!41371 (= (getValueByKey!173 lt!70393 (_1!1293 (tuple2!2565 lt!69736 (zeroValue!2719 (_2!1294 lt!69280))))) (Some!178 (_2!1293 (tuple2!2565 lt!69736 (zeroValue!2719 (_2!1294 lt!69280))))))))

(assert (=> d!41371 (= lt!70391 (lemmaContainsTupThenGetReturnValue!88 lt!70393 (_1!1293 (tuple2!2565 lt!69736 (zeroValue!2719 (_2!1294 lt!69280)))) (_2!1293 (tuple2!2565 lt!69736 (zeroValue!2719 (_2!1294 lt!69280))))))))

(assert (=> d!41371 (= lt!70393 (insertStrictlySorted!91 (toList!842 lt!69747) (_1!1293 (tuple2!2565 lt!69736 (zeroValue!2719 (_2!1294 lt!69280)))) (_2!1293 (tuple2!2565 lt!69736 (zeroValue!2719 (_2!1294 lt!69280))))))))

(assert (=> d!41371 (= (+!169 lt!69747 (tuple2!2565 lt!69736 (zeroValue!2719 (_2!1294 lt!69280)))) lt!70392)))

(declare-fun b!134445 () Bool)

(declare-fun res!64655 () Bool)

(assert (=> b!134445 (=> (not res!64655) (not e!87570))))

(assert (=> b!134445 (= res!64655 (= (getValueByKey!173 (toList!842 lt!70392) (_1!1293 (tuple2!2565 lt!69736 (zeroValue!2719 (_2!1294 lt!69280))))) (Some!178 (_2!1293 (tuple2!2565 lt!69736 (zeroValue!2719 (_2!1294 lt!69280)))))))))

(declare-fun b!134446 () Bool)

(assert (=> b!134446 (= e!87570 (contains!886 (toList!842 lt!70392) (tuple2!2565 lt!69736 (zeroValue!2719 (_2!1294 lt!69280)))))))

(assert (= (and d!41371 res!64656) b!134445))

(assert (= (and b!134445 res!64655) b!134446))

(declare-fun m!159673 () Bool)

(assert (=> d!41371 m!159673))

(declare-fun m!159675 () Bool)

(assert (=> d!41371 m!159675))

(declare-fun m!159677 () Bool)

(assert (=> d!41371 m!159677))

(declare-fun m!159679 () Bool)

(assert (=> d!41371 m!159679))

(declare-fun m!159681 () Bool)

(assert (=> b!134445 m!159681))

(declare-fun m!159683 () Bool)

(assert (=> b!134446 m!159683))

(assert (=> b!133374 d!41371))

(declare-fun d!41373 () Bool)

(assert (=> d!41373 (= (apply!116 (+!169 lt!69747 (tuple2!2565 lt!69736 (zeroValue!2719 (_2!1294 lt!69280)))) lt!69732) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69747 (tuple2!2565 lt!69736 (zeroValue!2719 (_2!1294 lt!69280))))) lt!69732)))))

(declare-fun bs!5601 () Bool)

(assert (= bs!5601 d!41373))

(declare-fun m!159685 () Bool)

(assert (=> bs!5601 m!159685))

(assert (=> bs!5601 m!159685))

(declare-fun m!159687 () Bool)

(assert (=> bs!5601 m!159687))

(assert (=> b!133374 d!41373))

(declare-fun d!41375 () Bool)

(declare-fun e!87571 () Bool)

(assert (=> d!41375 e!87571))

(declare-fun res!64658 () Bool)

(assert (=> d!41375 (=> (not res!64658) (not e!87571))))

(declare-fun lt!70396 () ListLongMap!1653)

(assert (=> d!41375 (= res!64658 (contains!884 lt!70396 (_1!1293 (tuple2!2565 lt!69727 (minValue!2719 (_2!1294 lt!69280))))))))

(declare-fun lt!70397 () List!1694)

(assert (=> d!41375 (= lt!70396 (ListLongMap!1654 lt!70397))))

(declare-fun lt!70394 () Unit!4141)

(declare-fun lt!70395 () Unit!4141)

(assert (=> d!41375 (= lt!70394 lt!70395)))

(assert (=> d!41375 (= (getValueByKey!173 lt!70397 (_1!1293 (tuple2!2565 lt!69727 (minValue!2719 (_2!1294 lt!69280))))) (Some!178 (_2!1293 (tuple2!2565 lt!69727 (minValue!2719 (_2!1294 lt!69280))))))))

(assert (=> d!41375 (= lt!70395 (lemmaContainsTupThenGetReturnValue!88 lt!70397 (_1!1293 (tuple2!2565 lt!69727 (minValue!2719 (_2!1294 lt!69280)))) (_2!1293 (tuple2!2565 lt!69727 (minValue!2719 (_2!1294 lt!69280))))))))

(assert (=> d!41375 (= lt!70397 (insertStrictlySorted!91 (toList!842 lt!69735) (_1!1293 (tuple2!2565 lt!69727 (minValue!2719 (_2!1294 lt!69280)))) (_2!1293 (tuple2!2565 lt!69727 (minValue!2719 (_2!1294 lt!69280))))))))

(assert (=> d!41375 (= (+!169 lt!69735 (tuple2!2565 lt!69727 (minValue!2719 (_2!1294 lt!69280)))) lt!70396)))

(declare-fun b!134447 () Bool)

(declare-fun res!64657 () Bool)

(assert (=> b!134447 (=> (not res!64657) (not e!87571))))

(assert (=> b!134447 (= res!64657 (= (getValueByKey!173 (toList!842 lt!70396) (_1!1293 (tuple2!2565 lt!69727 (minValue!2719 (_2!1294 lt!69280))))) (Some!178 (_2!1293 (tuple2!2565 lt!69727 (minValue!2719 (_2!1294 lt!69280)))))))))

(declare-fun b!134448 () Bool)

(assert (=> b!134448 (= e!87571 (contains!886 (toList!842 lt!70396) (tuple2!2565 lt!69727 (minValue!2719 (_2!1294 lt!69280)))))))

(assert (= (and d!41375 res!64658) b!134447))

(assert (= (and b!134447 res!64657) b!134448))

(declare-fun m!159689 () Bool)

(assert (=> d!41375 m!159689))

(declare-fun m!159691 () Bool)

(assert (=> d!41375 m!159691))

(declare-fun m!159693 () Bool)

(assert (=> d!41375 m!159693))

(declare-fun m!159695 () Bool)

(assert (=> d!41375 m!159695))

(declare-fun m!159697 () Bool)

(assert (=> b!134447 m!159697))

(declare-fun m!159699 () Bool)

(assert (=> b!134448 m!159699))

(assert (=> b!133374 d!41375))

(declare-fun d!41377 () Bool)

(assert (=> d!41377 (= (apply!116 (+!169 lt!69733 (tuple2!2565 lt!69731 (minValue!2719 (_2!1294 lt!69280)))) lt!69739) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69733 (tuple2!2565 lt!69731 (minValue!2719 (_2!1294 lt!69280))))) lt!69739)))))

(declare-fun bs!5602 () Bool)

(assert (= bs!5602 d!41377))

(declare-fun m!159701 () Bool)

(assert (=> bs!5602 m!159701))

(assert (=> bs!5602 m!159701))

(declare-fun m!159703 () Bool)

(assert (=> bs!5602 m!159703))

(assert (=> b!133374 d!41377))

(declare-fun d!41379 () Bool)

(declare-fun e!87572 () Bool)

(assert (=> d!41379 e!87572))

(declare-fun res!64660 () Bool)

(assert (=> d!41379 (=> (not res!64660) (not e!87572))))

(declare-fun lt!70400 () ListLongMap!1653)

(assert (=> d!41379 (= res!64660 (contains!884 lt!70400 (_1!1293 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280))))))))

(declare-fun lt!70401 () List!1694)

(assert (=> d!41379 (= lt!70400 (ListLongMap!1654 lt!70401))))

(declare-fun lt!70398 () Unit!4141)

(declare-fun lt!70399 () Unit!4141)

(assert (=> d!41379 (= lt!70398 lt!70399)))

(assert (=> d!41379 (= (getValueByKey!173 lt!70401 (_1!1293 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280))))) (Some!178 (_2!1293 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280))))))))

(assert (=> d!41379 (= lt!70399 (lemmaContainsTupThenGetReturnValue!88 lt!70401 (_1!1293 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280)))) (_2!1293 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280))))))))

(assert (=> d!41379 (= lt!70401 (insertStrictlySorted!91 (toList!842 lt!69729) (_1!1293 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280)))) (_2!1293 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280))))))))

(assert (=> d!41379 (= (+!169 lt!69729 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280)))) lt!70400)))

(declare-fun b!134449 () Bool)

(declare-fun res!64659 () Bool)

(assert (=> b!134449 (=> (not res!64659) (not e!87572))))

(assert (=> b!134449 (= res!64659 (= (getValueByKey!173 (toList!842 lt!70400) (_1!1293 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280))))) (Some!178 (_2!1293 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280)))))))))

(declare-fun b!134450 () Bool)

(assert (=> b!134450 (= e!87572 (contains!886 (toList!842 lt!70400) (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280)))))))

(assert (= (and d!41379 res!64660) b!134449))

(assert (= (and b!134449 res!64659) b!134450))

(declare-fun m!159705 () Bool)

(assert (=> d!41379 m!159705))

(declare-fun m!159707 () Bool)

(assert (=> d!41379 m!159707))

(declare-fun m!159709 () Bool)

(assert (=> d!41379 m!159709))

(declare-fun m!159711 () Bool)

(assert (=> d!41379 m!159711))

(declare-fun m!159713 () Bool)

(assert (=> b!134449 m!159713))

(declare-fun m!159715 () Bool)

(assert (=> b!134450 m!159715))

(assert (=> b!133374 d!41379))

(assert (=> b!133374 d!41307))

(declare-fun d!41381 () Bool)

(assert (=> d!41381 (= (apply!116 lt!69733 lt!69739) (get!1492 (getValueByKey!173 (toList!842 lt!69733) lt!69739)))))

(declare-fun bs!5603 () Bool)

(assert (= bs!5603 d!41381))

(declare-fun m!159717 () Bool)

(assert (=> bs!5603 m!159717))

(assert (=> bs!5603 m!159717))

(declare-fun m!159719 () Bool)

(assert (=> bs!5603 m!159719))

(assert (=> b!133374 d!41381))

(declare-fun d!41383 () Bool)

(assert (=> d!41383 (= (apply!116 lt!69747 lt!69732) (get!1492 (getValueByKey!173 (toList!842 lt!69747) lt!69732)))))

(declare-fun bs!5604 () Bool)

(assert (= bs!5604 d!41383))

(declare-fun m!159721 () Bool)

(assert (=> bs!5604 m!159721))

(assert (=> bs!5604 m!159721))

(declare-fun m!159723 () Bool)

(assert (=> bs!5604 m!159723))

(assert (=> b!133374 d!41383))

(declare-fun d!41385 () Bool)

(assert (=> d!41385 (= (apply!116 (+!169 lt!69747 (tuple2!2565 lt!69736 (zeroValue!2719 (_2!1294 lt!69280)))) lt!69732) (apply!116 lt!69747 lt!69732))))

(declare-fun lt!70402 () Unit!4141)

(assert (=> d!41385 (= lt!70402 (choose!828 lt!69747 lt!69736 (zeroValue!2719 (_2!1294 lt!69280)) lt!69732))))

(declare-fun e!87573 () Bool)

(assert (=> d!41385 e!87573))

(declare-fun res!64661 () Bool)

(assert (=> d!41385 (=> (not res!64661) (not e!87573))))

(assert (=> d!41385 (= res!64661 (contains!884 lt!69747 lt!69732))))

(assert (=> d!41385 (= (addApplyDifferent!92 lt!69747 lt!69736 (zeroValue!2719 (_2!1294 lt!69280)) lt!69732) lt!70402)))

(declare-fun b!134451 () Bool)

(assert (=> b!134451 (= e!87573 (not (= lt!69732 lt!69736)))))

(assert (= (and d!41385 res!64661) b!134451))

(assert (=> d!41385 m!157465))

(assert (=> d!41385 m!157489))

(assert (=> d!41385 m!157469))

(declare-fun m!159725 () Bool)

(assert (=> d!41385 m!159725))

(declare-fun m!159727 () Bool)

(assert (=> d!41385 m!159727))

(assert (=> d!41385 m!157465))

(assert (=> b!133374 d!41385))

(declare-fun d!41387 () Bool)

(declare-fun e!87575 () Bool)

(assert (=> d!41387 e!87575))

(declare-fun res!64662 () Bool)

(assert (=> d!41387 (=> res!64662 e!87575)))

(declare-fun lt!70403 () Bool)

(assert (=> d!41387 (= res!64662 (not lt!70403))))

(declare-fun lt!70404 () Bool)

(assert (=> d!41387 (= lt!70403 lt!70404)))

(declare-fun lt!70405 () Unit!4141)

(declare-fun e!87574 () Unit!4141)

(assert (=> d!41387 (= lt!70405 e!87574)))

(declare-fun c!25014 () Bool)

(assert (=> d!41387 (= c!25014 lt!70404)))

(assert (=> d!41387 (= lt!70404 (containsKey!176 (toList!842 (+!169 lt!69729 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280))))) lt!69728))))

(assert (=> d!41387 (= (contains!884 (+!169 lt!69729 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280)))) lt!69728) lt!70403)))

(declare-fun b!134452 () Bool)

(declare-fun lt!70406 () Unit!4141)

(assert (=> b!134452 (= e!87574 lt!70406)))

(assert (=> b!134452 (= lt!70406 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69729 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280))))) lt!69728))))

(assert (=> b!134452 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69729 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280))))) lt!69728))))

(declare-fun b!134453 () Bool)

(declare-fun Unit!4213 () Unit!4141)

(assert (=> b!134453 (= e!87574 Unit!4213)))

(declare-fun b!134454 () Bool)

(assert (=> b!134454 (= e!87575 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69729 (tuple2!2565 lt!69744 (zeroValue!2719 (_2!1294 lt!69280))))) lt!69728)))))

(assert (= (and d!41387 c!25014) b!134452))

(assert (= (and d!41387 (not c!25014)) b!134453))

(assert (= (and d!41387 (not res!64662)) b!134454))

(declare-fun m!159729 () Bool)

(assert (=> d!41387 m!159729))

(declare-fun m!159731 () Bool)

(assert (=> b!134452 m!159731))

(declare-fun m!159733 () Bool)

(assert (=> b!134452 m!159733))

(assert (=> b!134452 m!159733))

(declare-fun m!159735 () Bool)

(assert (=> b!134452 m!159735))

(assert (=> b!134454 m!159733))

(assert (=> b!134454 m!159733))

(assert (=> b!134454 m!159735))

(assert (=> b!133374 d!41387))

(declare-fun d!41389 () Bool)

(assert (=> d!41389 (= (apply!116 (+!169 lt!69733 (tuple2!2565 lt!69731 (minValue!2719 (_2!1294 lt!69280)))) lt!69739) (apply!116 lt!69733 lt!69739))))

(declare-fun lt!70407 () Unit!4141)

(assert (=> d!41389 (= lt!70407 (choose!828 lt!69733 lt!69731 (minValue!2719 (_2!1294 lt!69280)) lt!69739))))

(declare-fun e!87576 () Bool)

(assert (=> d!41389 e!87576))

(declare-fun res!64663 () Bool)

(assert (=> d!41389 (=> (not res!64663) (not e!87576))))

(assert (=> d!41389 (= res!64663 (contains!884 lt!69733 lt!69739))))

(assert (=> d!41389 (= (addApplyDifferent!92 lt!69733 lt!69731 (minValue!2719 (_2!1294 lt!69280)) lt!69739) lt!70407)))

(declare-fun b!134455 () Bool)

(assert (=> b!134455 (= e!87576 (not (= lt!69739 lt!69731)))))

(assert (= (and d!41389 res!64663) b!134455))

(assert (=> d!41389 m!157473))

(assert (=> d!41389 m!157475))

(assert (=> d!41389 m!157459))

(declare-fun m!159737 () Bool)

(assert (=> d!41389 m!159737))

(declare-fun m!159739 () Bool)

(assert (=> d!41389 m!159739))

(assert (=> d!41389 m!157473))

(assert (=> b!133374 d!41389))

(declare-fun d!41391 () Bool)

(declare-fun e!87577 () Bool)

(assert (=> d!41391 e!87577))

(declare-fun res!64665 () Bool)

(assert (=> d!41391 (=> (not res!64665) (not e!87577))))

(declare-fun lt!70410 () ListLongMap!1653)

(assert (=> d!41391 (= res!64665 (contains!884 lt!70410 (_1!1293 (tuple2!2565 lt!69731 (minValue!2719 (_2!1294 lt!69280))))))))

(declare-fun lt!70411 () List!1694)

(assert (=> d!41391 (= lt!70410 (ListLongMap!1654 lt!70411))))

(declare-fun lt!70408 () Unit!4141)

(declare-fun lt!70409 () Unit!4141)

(assert (=> d!41391 (= lt!70408 lt!70409)))

(assert (=> d!41391 (= (getValueByKey!173 lt!70411 (_1!1293 (tuple2!2565 lt!69731 (minValue!2719 (_2!1294 lt!69280))))) (Some!178 (_2!1293 (tuple2!2565 lt!69731 (minValue!2719 (_2!1294 lt!69280))))))))

(assert (=> d!41391 (= lt!70409 (lemmaContainsTupThenGetReturnValue!88 lt!70411 (_1!1293 (tuple2!2565 lt!69731 (minValue!2719 (_2!1294 lt!69280)))) (_2!1293 (tuple2!2565 lt!69731 (minValue!2719 (_2!1294 lt!69280))))))))

(assert (=> d!41391 (= lt!70411 (insertStrictlySorted!91 (toList!842 lt!69733) (_1!1293 (tuple2!2565 lt!69731 (minValue!2719 (_2!1294 lt!69280)))) (_2!1293 (tuple2!2565 lt!69731 (minValue!2719 (_2!1294 lt!69280))))))))

(assert (=> d!41391 (= (+!169 lt!69733 (tuple2!2565 lt!69731 (minValue!2719 (_2!1294 lt!69280)))) lt!70410)))

(declare-fun b!134456 () Bool)

(declare-fun res!64664 () Bool)

(assert (=> b!134456 (=> (not res!64664) (not e!87577))))

(assert (=> b!134456 (= res!64664 (= (getValueByKey!173 (toList!842 lt!70410) (_1!1293 (tuple2!2565 lt!69731 (minValue!2719 (_2!1294 lt!69280))))) (Some!178 (_2!1293 (tuple2!2565 lt!69731 (minValue!2719 (_2!1294 lt!69280)))))))))

(declare-fun b!134457 () Bool)

(assert (=> b!134457 (= e!87577 (contains!886 (toList!842 lt!70410) (tuple2!2565 lt!69731 (minValue!2719 (_2!1294 lt!69280)))))))

(assert (= (and d!41391 res!64665) b!134456))

(assert (= (and b!134456 res!64664) b!134457))

(declare-fun m!159741 () Bool)

(assert (=> d!41391 m!159741))

(declare-fun m!159743 () Bool)

(assert (=> d!41391 m!159743))

(declare-fun m!159745 () Bool)

(assert (=> d!41391 m!159745))

(declare-fun m!159747 () Bool)

(assert (=> d!41391 m!159747))

(declare-fun m!159749 () Bool)

(assert (=> b!134456 m!159749))

(declare-fun m!159751 () Bool)

(assert (=> b!134457 m!159751))

(assert (=> b!133374 d!41391))

(declare-fun d!41393 () Bool)

(declare-fun e!87579 () Bool)

(assert (=> d!41393 e!87579))

(declare-fun res!64666 () Bool)

(assert (=> d!41393 (=> res!64666 e!87579)))

(declare-fun lt!70412 () Bool)

(assert (=> d!41393 (= res!64666 (not lt!70412))))

(declare-fun lt!70413 () Bool)

(assert (=> d!41393 (= lt!70412 lt!70413)))

(declare-fun lt!70414 () Unit!4141)

(declare-fun e!87578 () Unit!4141)

(assert (=> d!41393 (= lt!70414 e!87578)))

(declare-fun c!25015 () Bool)

(assert (=> d!41393 (= c!25015 lt!70413)))

(assert (=> d!41393 (= lt!70413 (containsKey!176 (toList!842 lt!69846) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41393 (= (contains!884 lt!69846 (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) lt!70412)))

(declare-fun b!134458 () Bool)

(declare-fun lt!70415 () Unit!4141)

(assert (=> b!134458 (= e!87578 lt!70415)))

(assert (=> b!134458 (= lt!70415 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69846) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> b!134458 (isDefined!125 (getValueByKey!173 (toList!842 lt!69846) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!134459 () Bool)

(declare-fun Unit!4214 () Unit!4141)

(assert (=> b!134459 (= e!87578 Unit!4214)))

(declare-fun b!134460 () Bool)

(assert (=> b!134460 (= e!87579 (isDefined!125 (getValueByKey!173 (toList!842 lt!69846) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (= (and d!41393 c!25015) b!134458))

(assert (= (and d!41393 (not c!25015)) b!134459))

(assert (= (and d!41393 (not res!64666)) b!134460))

(declare-fun m!159753 () Bool)

(assert (=> d!41393 m!159753))

(declare-fun m!159755 () Bool)

(assert (=> b!134458 m!159755))

(assert (=> b!134458 m!157747))

(assert (=> b!134458 m!157747))

(declare-fun m!159757 () Bool)

(assert (=> b!134458 m!159757))

(assert (=> b!134460 m!157747))

(assert (=> b!134460 m!157747))

(assert (=> b!134460 m!159757))

(assert (=> d!40705 d!41393))

(declare-fun b!134462 () Bool)

(declare-fun e!87580 () Option!179)

(declare-fun e!87581 () Option!179)

(assert (=> b!134462 (= e!87580 e!87581)))

(declare-fun c!25017 () Bool)

(assert (=> b!134462 (= c!25017 (and ((_ is Cons!1690) lt!69847) (not (= (_1!1293 (h!2295 lt!69847)) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))))

(declare-fun b!134461 () Bool)

(assert (=> b!134461 (= e!87580 (Some!178 (_2!1293 (h!2295 lt!69847))))))

(declare-fun c!25016 () Bool)

(declare-fun d!41395 () Bool)

(assert (=> d!41395 (= c!25016 (and ((_ is Cons!1690) lt!69847) (= (_1!1293 (h!2295 lt!69847)) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (=> d!41395 (= (getValueByKey!173 lt!69847 (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) e!87580)))

(declare-fun b!134464 () Bool)

(assert (=> b!134464 (= e!87581 None!177)))

(declare-fun b!134463 () Bool)

(assert (=> b!134463 (= e!87581 (getValueByKey!173 (t!6137 lt!69847) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (= (and d!41395 c!25016) b!134461))

(assert (= (and d!41395 (not c!25016)) b!134462))

(assert (= (and b!134462 c!25017) b!134463))

(assert (= (and b!134462 (not c!25017)) b!134464))

(declare-fun m!159759 () Bool)

(assert (=> b!134463 m!159759))

(assert (=> d!40705 d!41395))

(declare-fun d!41397 () Bool)

(assert (=> d!41397 (= (getValueByKey!173 lt!69847 (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!70416 () Unit!4141)

(assert (=> d!41397 (= lt!70416 (choose!833 lt!69847 (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun e!87582 () Bool)

(assert (=> d!41397 e!87582))

(declare-fun res!64667 () Bool)

(assert (=> d!41397 (=> (not res!64667) (not e!87582))))

(assert (=> d!41397 (= res!64667 (isStrictlySorted!309 lt!69847))))

(assert (=> d!41397 (= (lemmaContainsTupThenGetReturnValue!88 lt!69847 (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) lt!70416)))

(declare-fun b!134465 () Bool)

(declare-fun res!64668 () Bool)

(assert (=> b!134465 (=> (not res!64668) (not e!87582))))

(assert (=> b!134465 (= res!64668 (containsKey!176 lt!69847 (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!134466 () Bool)

(assert (=> b!134466 (= e!87582 (contains!886 lt!69847 (tuple2!2565 (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (= (and d!41397 res!64667) b!134465))

(assert (= (and b!134465 res!64668) b!134466))

(assert (=> d!41397 m!157741))

(declare-fun m!159761 () Bool)

(assert (=> d!41397 m!159761))

(declare-fun m!159763 () Bool)

(assert (=> d!41397 m!159763))

(declare-fun m!159765 () Bool)

(assert (=> b!134465 m!159765))

(declare-fun m!159767 () Bool)

(assert (=> b!134466 m!159767))

(assert (=> d!40705 d!41397))

(declare-fun b!134467 () Bool)

(declare-fun res!64669 () Bool)

(declare-fun e!87587 () Bool)

(assert (=> b!134467 (=> (not res!64669) (not e!87587))))

(declare-fun lt!70417 () List!1694)

(assert (=> b!134467 (= res!64669 (containsKey!176 lt!70417 (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!134468 () Bool)

(declare-fun e!87585 () List!1694)

(declare-fun e!87586 () List!1694)

(assert (=> b!134468 (= e!87585 e!87586)))

(declare-fun c!25021 () Bool)

(assert (=> b!134468 (= c!25021 (and ((_ is Cons!1690) (toList!842 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659)))) (= (_1!1293 (h!2295 (toList!842 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659))))) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun bm!14808 () Bool)

(declare-fun call!14812 () List!1694)

(declare-fun call!14811 () List!1694)

(assert (=> bm!14808 (= call!14812 call!14811)))

(declare-fun b!134469 () Bool)

(declare-fun e!87583 () List!1694)

(assert (=> b!134469 (= e!87583 call!14812)))

(declare-fun c!25020 () Bool)

(declare-fun b!134470 () Bool)

(assert (=> b!134470 (= c!25020 (and ((_ is Cons!1690) (toList!842 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659)))) (bvsgt (_1!1293 (h!2295 (toList!842 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659))))) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (=> b!134470 (= e!87586 e!87583)))

(declare-fun b!134471 () Bool)

(assert (=> b!134471 (= e!87587 (contains!886 lt!70417 (tuple2!2565 (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!134472 () Bool)

(assert (=> b!134472 (= e!87586 call!14811)))

(declare-fun d!41399 () Bool)

(assert (=> d!41399 e!87587))

(declare-fun res!64670 () Bool)

(assert (=> d!41399 (=> (not res!64670) (not e!87587))))

(assert (=> d!41399 (= res!64670 (isStrictlySorted!309 lt!70417))))

(assert (=> d!41399 (= lt!70417 e!87585)))

(declare-fun c!25019 () Bool)

(assert (=> d!41399 (= c!25019 (and ((_ is Cons!1690) (toList!842 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659)))) (bvslt (_1!1293 (h!2295 (toList!842 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659))))) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (=> d!41399 (isStrictlySorted!309 (toList!842 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659))))))

(assert (=> d!41399 (= (insertStrictlySorted!91 (toList!842 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659))) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) lt!70417)))

(declare-fun e!87584 () List!1694)

(declare-fun b!134473 () Bool)

(assert (=> b!134473 (= e!87584 (ite c!25021 (t!6137 (toList!842 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659)))) (ite c!25020 (Cons!1690 (h!2295 (toList!842 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659)))) (t!6137 (toList!842 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659))))) Nil!1691)))))

(declare-fun b!134474 () Bool)

(declare-fun call!14813 () List!1694)

(assert (=> b!134474 (= e!87585 call!14813)))

(declare-fun b!134475 () Bool)

(assert (=> b!134475 (= e!87583 call!14812)))

(declare-fun b!134476 () Bool)

(assert (=> b!134476 (= e!87584 (insertStrictlySorted!91 (t!6137 (toList!842 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659)))) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun bm!14809 () Bool)

(assert (=> bm!14809 (= call!14811 call!14813)))

(declare-fun bm!14810 () Bool)

(assert (=> bm!14810 (= call!14813 ($colon$colon!91 e!87584 (ite c!25019 (h!2295 (toList!842 (ite c!24630 call!14656 (ite c!24632 call!14657 call!14659)))) (tuple2!2565 (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))))

(declare-fun c!25018 () Bool)

(assert (=> bm!14810 (= c!25018 c!25019)))

(assert (= (and d!41399 c!25019) b!134474))

(assert (= (and d!41399 (not c!25019)) b!134468))

(assert (= (and b!134468 c!25021) b!134472))

(assert (= (and b!134468 (not c!25021)) b!134470))

(assert (= (and b!134470 c!25020) b!134475))

(assert (= (and b!134470 (not c!25020)) b!134469))

(assert (= (or b!134475 b!134469) bm!14808))

(assert (= (or b!134472 bm!14808) bm!14809))

(assert (= (or b!134474 bm!14809) bm!14810))

(assert (= (and bm!14810 c!25018) b!134476))

(assert (= (and bm!14810 (not c!25018)) b!134473))

(assert (= (and d!41399 res!64670) b!134467))

(assert (= (and b!134467 res!64669) b!134471))

(declare-fun m!159769 () Bool)

(assert (=> b!134471 m!159769))

(declare-fun m!159771 () Bool)

(assert (=> b!134476 m!159771))

(declare-fun m!159773 () Bool)

(assert (=> bm!14810 m!159773))

(declare-fun m!159775 () Bool)

(assert (=> b!134467 m!159775))

(declare-fun m!159777 () Bool)

(assert (=> d!41399 m!159777))

(declare-fun m!159779 () Bool)

(assert (=> d!41399 m!159779))

(assert (=> d!40705 d!41399))

(declare-fun d!41401 () Bool)

(declare-fun e!87589 () Bool)

(assert (=> d!41401 e!87589))

(declare-fun res!64671 () Bool)

(assert (=> d!41401 (=> res!64671 e!87589)))

(declare-fun lt!70418 () Bool)

(assert (=> d!41401 (= res!64671 (not lt!70418))))

(declare-fun lt!70419 () Bool)

(assert (=> d!41401 (= lt!70418 lt!70419)))

(declare-fun lt!70420 () Unit!4141)

(declare-fun e!87588 () Unit!4141)

(assert (=> d!41401 (= lt!70420 e!87588)))

(declare-fun c!25022 () Bool)

(assert (=> d!41401 (= c!25022 lt!70419)))

(assert (=> d!41401 (= lt!70419 (containsKey!176 (toList!842 lt!70032) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41401 (= (contains!884 lt!70032 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) lt!70418)))

(declare-fun b!134477 () Bool)

(declare-fun lt!70421 () Unit!4141)

(assert (=> b!134477 (= e!87588 lt!70421)))

(assert (=> b!134477 (= lt!70421 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70032) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134477 (isDefined!125 (getValueByKey!173 (toList!842 lt!70032) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134478 () Bool)

(declare-fun Unit!4215 () Unit!4141)

(assert (=> b!134478 (= e!87588 Unit!4215)))

(declare-fun b!134479 () Bool)

(assert (=> b!134479 (= e!87589 (isDefined!125 (getValueByKey!173 (toList!842 lt!70032) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41401 c!25022) b!134477))

(assert (= (and d!41401 (not c!25022)) b!134478))

(assert (= (and d!41401 (not res!64671)) b!134479))

(assert (=> d!41401 m!156679))

(declare-fun m!159781 () Bool)

(assert (=> d!41401 m!159781))

(assert (=> b!134477 m!156679))

(declare-fun m!159783 () Bool)

(assert (=> b!134477 m!159783))

(assert (=> b!134477 m!156679))

(declare-fun m!159785 () Bool)

(assert (=> b!134477 m!159785))

(assert (=> b!134477 m!159785))

(declare-fun m!159787 () Bool)

(assert (=> b!134477 m!159787))

(assert (=> b!134479 m!156679))

(assert (=> b!134479 m!159785))

(assert (=> b!134479 m!159785))

(assert (=> b!134479 m!159787))

(assert (=> b!133832 d!41401))

(declare-fun d!41403 () Bool)

(declare-fun e!87591 () Bool)

(assert (=> d!41403 e!87591))

(declare-fun res!64672 () Bool)

(assert (=> d!41403 (=> res!64672 e!87591)))

(declare-fun lt!70422 () Bool)

(assert (=> d!41403 (= res!64672 (not lt!70422))))

(declare-fun lt!70423 () Bool)

(assert (=> d!41403 (= lt!70422 lt!70423)))

(declare-fun lt!70424 () Unit!4141)

(declare-fun e!87590 () Unit!4141)

(assert (=> d!41403 (= lt!70424 e!87590)))

(declare-fun c!25023 () Bool)

(assert (=> d!41403 (= c!25023 lt!70423)))

(assert (=> d!41403 (= lt!70423 (containsKey!176 (toList!842 lt!70005) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41403 (= (contains!884 lt!70005 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70422)))

(declare-fun b!134480 () Bool)

(declare-fun lt!70425 () Unit!4141)

(assert (=> b!134480 (= e!87590 lt!70425)))

(assert (=> b!134480 (= lt!70425 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70005) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!134480 (isDefined!125 (getValueByKey!173 (toList!842 lt!70005) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134481 () Bool)

(declare-fun Unit!4216 () Unit!4141)

(assert (=> b!134481 (= e!87590 Unit!4216)))

(declare-fun b!134482 () Bool)

(assert (=> b!134482 (= e!87591 (isDefined!125 (getValueByKey!173 (toList!842 lt!70005) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41403 c!25023) b!134480))

(assert (= (and d!41403 (not c!25023)) b!134481))

(assert (= (and d!41403 (not res!64672)) b!134482))

(declare-fun m!159789 () Bool)

(assert (=> d!41403 m!159789))

(declare-fun m!159791 () Bool)

(assert (=> b!134480 m!159791))

(assert (=> b!134480 m!158253))

(assert (=> b!134480 m!158253))

(declare-fun m!159793 () Bool)

(assert (=> b!134480 m!159793))

(assert (=> b!134482 m!158253))

(assert (=> b!134482 m!158253))

(assert (=> b!134482 m!159793))

(assert (=> d!40867 d!41403))

(declare-fun b!134484 () Bool)

(declare-fun e!87592 () Option!179)

(declare-fun e!87593 () Option!179)

(assert (=> b!134484 (= e!87592 e!87593)))

(declare-fun c!25025 () Bool)

(assert (=> b!134484 (= c!25025 (and ((_ is Cons!1690) lt!70006) (not (= (_1!1293 (h!2295 lt!70006)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134483 () Bool)

(assert (=> b!134483 (= e!87592 (Some!178 (_2!1293 (h!2295 lt!70006))))))

(declare-fun c!25024 () Bool)

(declare-fun d!41405 () Bool)

(assert (=> d!41405 (= c!25024 (and ((_ is Cons!1690) lt!70006) (= (_1!1293 (h!2295 lt!70006)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41405 (= (getValueByKey!173 lt!70006 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87592)))

(declare-fun b!134486 () Bool)

(assert (=> b!134486 (= e!87593 None!177)))

(declare-fun b!134485 () Bool)

(assert (=> b!134485 (= e!87593 (getValueByKey!173 (t!6137 lt!70006) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41405 c!25024) b!134483))

(assert (= (and d!41405 (not c!25024)) b!134484))

(assert (= (and b!134484 c!25025) b!134485))

(assert (= (and b!134484 (not c!25025)) b!134486))

(declare-fun m!159795 () Bool)

(assert (=> b!134485 m!159795))

(assert (=> d!40867 d!41405))

(declare-fun d!41407 () Bool)

(assert (=> d!41407 (= (getValueByKey!173 lt!70006 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70426 () Unit!4141)

(assert (=> d!41407 (= lt!70426 (choose!833 lt!70006 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87594 () Bool)

(assert (=> d!41407 e!87594))

(declare-fun res!64673 () Bool)

(assert (=> d!41407 (=> (not res!64673) (not e!87594))))

(assert (=> d!41407 (= res!64673 (isStrictlySorted!309 lt!70006))))

(assert (=> d!41407 (= (lemmaContainsTupThenGetReturnValue!88 lt!70006 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70426)))

(declare-fun b!134487 () Bool)

(declare-fun res!64674 () Bool)

(assert (=> b!134487 (=> (not res!64674) (not e!87594))))

(assert (=> b!134487 (= res!64674 (containsKey!176 lt!70006 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134488 () Bool)

(assert (=> b!134488 (= e!87594 (contains!886 lt!70006 (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41407 res!64673) b!134487))

(assert (= (and b!134487 res!64674) b!134488))

(assert (=> d!41407 m!158247))

(declare-fun m!159797 () Bool)

(assert (=> d!41407 m!159797))

(declare-fun m!159799 () Bool)

(assert (=> d!41407 m!159799))

(declare-fun m!159801 () Bool)

(assert (=> b!134487 m!159801))

(declare-fun m!159803 () Bool)

(assert (=> b!134488 m!159803))

(assert (=> d!40867 d!41407))

(declare-fun b!134489 () Bool)

(declare-fun res!64675 () Bool)

(declare-fun e!87599 () Bool)

(assert (=> b!134489 (=> (not res!64675) (not e!87599))))

(declare-fun lt!70427 () List!1694)

(assert (=> b!134489 (= res!64675 (containsKey!176 lt!70427 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134490 () Bool)

(declare-fun e!87597 () List!1694)

(declare-fun e!87598 () List!1694)

(assert (=> b!134490 (= e!87597 e!87598)))

(declare-fun c!25029 () Bool)

(assert (=> b!134490 (= c!25029 (and ((_ is Cons!1690) (toList!842 call!14647)) (= (_1!1293 (h!2295 (toList!842 call!14647))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14811 () Bool)

(declare-fun call!14815 () List!1694)

(declare-fun call!14814 () List!1694)

(assert (=> bm!14811 (= call!14815 call!14814)))

(declare-fun b!134491 () Bool)

(declare-fun e!87595 () List!1694)

(assert (=> b!134491 (= e!87595 call!14815)))

(declare-fun b!134492 () Bool)

(declare-fun c!25028 () Bool)

(assert (=> b!134492 (= c!25028 (and ((_ is Cons!1690) (toList!842 call!14647)) (bvsgt (_1!1293 (h!2295 (toList!842 call!14647))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!134492 (= e!87598 e!87595)))

(declare-fun b!134493 () Bool)

(assert (=> b!134493 (= e!87599 (contains!886 lt!70427 (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134494 () Bool)

(assert (=> b!134494 (= e!87598 call!14814)))

(declare-fun d!41409 () Bool)

(assert (=> d!41409 e!87599))

(declare-fun res!64676 () Bool)

(assert (=> d!41409 (=> (not res!64676) (not e!87599))))

(assert (=> d!41409 (= res!64676 (isStrictlySorted!309 lt!70427))))

(assert (=> d!41409 (= lt!70427 e!87597)))

(declare-fun c!25027 () Bool)

(assert (=> d!41409 (= c!25027 (and ((_ is Cons!1690) (toList!842 call!14647)) (bvslt (_1!1293 (h!2295 (toList!842 call!14647))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41409 (isStrictlySorted!309 (toList!842 call!14647))))

(assert (=> d!41409 (= (insertStrictlySorted!91 (toList!842 call!14647) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70427)))

(declare-fun e!87596 () List!1694)

(declare-fun b!134495 () Bool)

(assert (=> b!134495 (= e!87596 (ite c!25029 (t!6137 (toList!842 call!14647)) (ite c!25028 (Cons!1690 (h!2295 (toList!842 call!14647)) (t!6137 (toList!842 call!14647))) Nil!1691)))))

(declare-fun b!134496 () Bool)

(declare-fun call!14816 () List!1694)

(assert (=> b!134496 (= e!87597 call!14816)))

(declare-fun b!134497 () Bool)

(assert (=> b!134497 (= e!87595 call!14815)))

(declare-fun b!134498 () Bool)

(assert (=> b!134498 (= e!87596 (insertStrictlySorted!91 (t!6137 (toList!842 call!14647)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14812 () Bool)

(assert (=> bm!14812 (= call!14814 call!14816)))

(declare-fun bm!14813 () Bool)

(assert (=> bm!14813 (= call!14816 ($colon$colon!91 e!87596 (ite c!25027 (h!2295 (toList!842 call!14647)) (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25026 () Bool)

(assert (=> bm!14813 (= c!25026 c!25027)))

(assert (= (and d!41409 c!25027) b!134496))

(assert (= (and d!41409 (not c!25027)) b!134490))

(assert (= (and b!134490 c!25029) b!134494))

(assert (= (and b!134490 (not c!25029)) b!134492))

(assert (= (and b!134492 c!25028) b!134497))

(assert (= (and b!134492 (not c!25028)) b!134491))

(assert (= (or b!134497 b!134491) bm!14811))

(assert (= (or b!134494 bm!14811) bm!14812))

(assert (= (or b!134496 bm!14812) bm!14813))

(assert (= (and bm!14813 c!25026) b!134498))

(assert (= (and bm!14813 (not c!25026)) b!134495))

(assert (= (and d!41409 res!64676) b!134489))

(assert (= (and b!134489 res!64675) b!134493))

(declare-fun m!159805 () Bool)

(assert (=> b!134493 m!159805))

(declare-fun m!159807 () Bool)

(assert (=> b!134498 m!159807))

(declare-fun m!159809 () Bool)

(assert (=> bm!14813 m!159809))

(declare-fun m!159811 () Bool)

(assert (=> b!134489 m!159811))

(declare-fun m!159813 () Bool)

(assert (=> d!41409 m!159813))

(declare-fun m!159815 () Bool)

(assert (=> d!41409 m!159815))

(assert (=> d!40867 d!41409))

(declare-fun d!41411 () Bool)

(assert (=> d!41411 (isDefined!125 (getValueByKey!173 (toList!842 lt!69529) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!70428 () Unit!4141)

(assert (=> d!41411 (= lt!70428 (choose!831 (toList!842 lt!69529) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!87600 () Bool)

(assert (=> d!41411 e!87600))

(declare-fun res!64677 () Bool)

(assert (=> d!41411 (=> (not res!64677) (not e!87600))))

(assert (=> d!41411 (= res!64677 (isStrictlySorted!309 (toList!842 lt!69529)))))

(assert (=> d!41411 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69529) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) lt!70428)))

(declare-fun b!134499 () Bool)

(assert (=> b!134499 (= e!87600 (containsKey!176 (toList!842 lt!69529) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41411 res!64677) b!134499))

(assert (=> d!41411 m!156679))

(assert (=> d!41411 m!158355))

(assert (=> d!41411 m!158355))

(assert (=> d!41411 m!158611))

(assert (=> d!41411 m!156679))

(declare-fun m!159817 () Bool)

(assert (=> d!41411 m!159817))

(declare-fun m!159819 () Bool)

(assert (=> d!41411 m!159819))

(assert (=> b!134499 m!156679))

(assert (=> b!134499 m!158607))

(assert (=> b!133940 d!41411))

(declare-fun d!41413 () Bool)

(assert (=> d!41413 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69529) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69529) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5605 () Bool)

(assert (= bs!5605 d!41413))

(assert (=> bs!5605 m!158355))

(declare-fun m!159821 () Bool)

(assert (=> bs!5605 m!159821))

(assert (=> b!133940 d!41413))

(assert (=> b!133940 d!41311))

(declare-fun b!134501 () Bool)

(declare-fun e!87601 () Option!179)

(declare-fun e!87602 () Option!179)

(assert (=> b!134501 (= e!87601 e!87602)))

(declare-fun c!25031 () Bool)

(assert (=> b!134501 (= c!25031 (and ((_ is Cons!1690) (toList!842 lt!70182)) (not (= (_1!1293 (h!2295 (toList!842 lt!70182))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!134500 () Bool)

(assert (=> b!134500 (= e!87601 (Some!178 (_2!1293 (h!2295 (toList!842 lt!70182)))))))

(declare-fun d!41415 () Bool)

(declare-fun c!25030 () Bool)

(assert (=> d!41415 (= c!25030 (and ((_ is Cons!1690) (toList!842 lt!70182)) (= (_1!1293 (h!2295 (toList!842 lt!70182))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41415 (= (getValueByKey!173 (toList!842 lt!70182) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) e!87601)))

(declare-fun b!134503 () Bool)

(assert (=> b!134503 (= e!87602 None!177)))

(declare-fun b!134502 () Bool)

(assert (=> b!134502 (= e!87602 (getValueByKey!173 (t!6137 (toList!842 lt!70182)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!41415 c!25030) b!134500))

(assert (= (and d!41415 (not c!25030)) b!134501))

(assert (= (and b!134501 c!25031) b!134502))

(assert (= (and b!134501 (not c!25031)) b!134503))

(declare-fun m!159823 () Bool)

(assert (=> b!134502 m!159823))

(assert (=> b!134076 d!41415))

(declare-fun b!134505 () Bool)

(declare-fun e!87603 () Option!179)

(declare-fun e!87604 () Option!179)

(assert (=> b!134505 (= e!87603 e!87604)))

(declare-fun c!25033 () Bool)

(assert (=> b!134505 (= c!25033 (and ((_ is Cons!1690) (t!6137 lt!69635)) (not (= (_1!1293 (h!2295 (t!6137 lt!69635))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!134504 () Bool)

(assert (=> b!134504 (= e!87603 (Some!178 (_2!1293 (h!2295 (t!6137 lt!69635)))))))

(declare-fun d!41417 () Bool)

(declare-fun c!25032 () Bool)

(assert (=> d!41417 (= c!25032 (and ((_ is Cons!1690) (t!6137 lt!69635)) (= (_1!1293 (h!2295 (t!6137 lt!69635))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41417 (= (getValueByKey!173 (t!6137 lt!69635) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87603)))

(declare-fun b!134507 () Bool)

(assert (=> b!134507 (= e!87604 None!177)))

(declare-fun b!134506 () Bool)

(assert (=> b!134506 (= e!87604 (getValueByKey!173 (t!6137 (t!6137 lt!69635)) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41417 c!25032) b!134504))

(assert (= (and d!41417 (not c!25032)) b!134505))

(assert (= (and b!134505 c!25033) b!134506))

(assert (= (and b!134505 (not c!25033)) b!134507))

(declare-fun m!159825 () Bool)

(assert (=> b!134506 m!159825))

(assert (=> b!133720 d!41417))

(assert (=> b!133291 d!41305))

(declare-fun b!134510 () Bool)

(declare-fun res!64679 () Bool)

(declare-fun e!87605 () Bool)

(assert (=> b!134510 (=> (not res!64679) (not e!87605))))

(assert (=> b!134510 (= res!64679 (= (size!2527 (_2!1294 lt!69445)) (bvadd (_size!597 (_2!1294 lt!69445)) (bvsdiv (bvadd (extraKeys!2629 (_2!1294 lt!69445)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!134508 () Bool)

(declare-fun res!64680 () Bool)

(assert (=> b!134508 (=> (not res!64680) (not e!87605))))

(assert (=> b!134508 (= res!64680 (and (= (size!2522 (_values!2847 (_2!1294 lt!69445))) (bvadd (mask!7164 (_2!1294 lt!69445)) #b00000000000000000000000000000001)) (= (size!2521 (_keys!4613 (_2!1294 lt!69445))) (size!2522 (_values!2847 (_2!1294 lt!69445)))) (bvsge (_size!597 (_2!1294 lt!69445)) #b00000000000000000000000000000000) (bvsle (_size!597 (_2!1294 lt!69445)) (bvadd (mask!7164 (_2!1294 lt!69445)) #b00000000000000000000000000000001))))))

(declare-fun d!41419 () Bool)

(declare-fun res!64681 () Bool)

(assert (=> d!41419 (=> (not res!64681) (not e!87605))))

(assert (=> d!41419 (= res!64681 (validMask!0 (mask!7164 (_2!1294 lt!69445))))))

(assert (=> d!41419 (= (simpleValid!92 (_2!1294 lt!69445)) e!87605)))

(declare-fun b!134511 () Bool)

(assert (=> b!134511 (= e!87605 (and (bvsge (extraKeys!2629 (_2!1294 lt!69445)) #b00000000000000000000000000000000) (bvsle (extraKeys!2629 (_2!1294 lt!69445)) #b00000000000000000000000000000011) (bvsge (_vacant!597 (_2!1294 lt!69445)) #b00000000000000000000000000000000)))))

(declare-fun b!134509 () Bool)

(declare-fun res!64678 () Bool)

(assert (=> b!134509 (=> (not res!64678) (not e!87605))))

(assert (=> b!134509 (= res!64678 (bvsge (size!2527 (_2!1294 lt!69445)) (_size!597 (_2!1294 lt!69445))))))

(assert (= (and d!41419 res!64681) b!134508))

(assert (= (and b!134508 res!64680) b!134509))

(assert (= (and b!134509 res!64678) b!134510))

(assert (= (and b!134510 res!64679) b!134511))

(declare-fun m!159827 () Bool)

(assert (=> b!134510 m!159827))

(assert (=> d!41419 m!159401))

(assert (=> b!134509 m!159827))

(assert (=> d!40765 d!41419))

(declare-fun d!41421 () Bool)

(assert (=> d!41421 (= (apply!116 lt!69680 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1492 (getValueByKey!173 (toList!842 lt!69680) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5606 () Bool)

(assert (= bs!5606 d!41421))

(assert (=> bs!5606 m!156679))

(declare-fun m!159829 () Bool)

(assert (=> bs!5606 m!159829))

(assert (=> bs!5606 m!159829))

(declare-fun m!159831 () Bool)

(assert (=> bs!5606 m!159831))

(assert (=> b!133252 d!41421))

(assert (=> b!133252 d!40885))

(declare-fun d!41423 () Bool)

(declare-fun e!87607 () Bool)

(assert (=> d!41423 e!87607))

(declare-fun res!64682 () Bool)

(assert (=> d!41423 (=> res!64682 e!87607)))

(declare-fun lt!70429 () Bool)

(assert (=> d!41423 (= res!64682 (not lt!70429))))

(declare-fun lt!70430 () Bool)

(assert (=> d!41423 (= lt!70429 lt!70430)))

(declare-fun lt!70431 () Unit!4141)

(declare-fun e!87606 () Unit!4141)

(assert (=> d!41423 (= lt!70431 e!87606)))

(declare-fun c!25034 () Bool)

(assert (=> d!41423 (= c!25034 lt!70430)))

(assert (=> d!41423 (= lt!70430 (containsKey!176 (toList!842 lt!69738) (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(assert (=> d!41423 (= (contains!884 lt!69738 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)) lt!70429)))

(declare-fun b!134512 () Bool)

(declare-fun lt!70432 () Unit!4141)

(assert (=> b!134512 (= e!87606 lt!70432)))

(assert (=> b!134512 (= lt!70432 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69738) (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(assert (=> b!134512 (isDefined!125 (getValueByKey!173 (toList!842 lt!69738) (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(declare-fun b!134513 () Bool)

(declare-fun Unit!4217 () Unit!4141)

(assert (=> b!134513 (= e!87606 Unit!4217)))

(declare-fun b!134514 () Bool)

(assert (=> b!134514 (= e!87607 (isDefined!125 (getValueByKey!173 (toList!842 lt!69738) (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000))))))

(assert (= (and d!41423 c!25034) b!134512))

(assert (= (and d!41423 (not c!25034)) b!134513))

(assert (= (and d!41423 (not res!64682)) b!134514))

(assert (=> d!41423 m!157455))

(declare-fun m!159833 () Bool)

(assert (=> d!41423 m!159833))

(assert (=> b!134512 m!157455))

(declare-fun m!159835 () Bool)

(assert (=> b!134512 m!159835))

(assert (=> b!134512 m!157455))

(declare-fun m!159837 () Bool)

(assert (=> b!134512 m!159837))

(assert (=> b!134512 m!159837))

(declare-fun m!159839 () Bool)

(assert (=> b!134512 m!159839))

(assert (=> b!134514 m!157455))

(assert (=> b!134514 m!159837))

(assert (=> b!134514 m!159837))

(assert (=> b!134514 m!159839))

(assert (=> b!133386 d!41423))

(assert (=> d!41065 d!41063))

(declare-fun d!41425 () Bool)

(assert (=> d!41425 (= (getValueByKey!173 lt!69606 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) (Some!178 (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41425 true))

(declare-fun _$22!484 () Unit!4141)

(assert (=> d!41425 (= (choose!833 lt!69606 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) _$22!484)))

(declare-fun bs!5607 () Bool)

(assert (= bs!5607 d!41425))

(assert (=> bs!5607 m!157067))

(assert (=> d!41065 d!41425))

(declare-fun d!41427 () Bool)

(declare-fun res!64683 () Bool)

(declare-fun e!87608 () Bool)

(assert (=> d!41427 (=> res!64683 e!87608)))

(assert (=> d!41427 (= res!64683 (or ((_ is Nil!1691) lt!69606) ((_ is Nil!1691) (t!6137 lt!69606))))))

(assert (=> d!41427 (= (isStrictlySorted!309 lt!69606) e!87608)))

(declare-fun b!134515 () Bool)

(declare-fun e!87609 () Bool)

(assert (=> b!134515 (= e!87608 e!87609)))

(declare-fun res!64684 () Bool)

(assert (=> b!134515 (=> (not res!64684) (not e!87609))))

(assert (=> b!134515 (= res!64684 (bvslt (_1!1293 (h!2295 lt!69606)) (_1!1293 (h!2295 (t!6137 lt!69606)))))))

(declare-fun b!134516 () Bool)

(assert (=> b!134516 (= e!87609 (isStrictlySorted!309 (t!6137 lt!69606)))))

(assert (= (and d!41427 (not res!64683)) b!134515))

(assert (= (and b!134515 res!64684) b!134516))

(declare-fun m!159841 () Bool)

(assert (=> b!134516 m!159841))

(assert (=> d!41065 d!41427))

(assert (=> d!40631 d!40629))

(declare-fun d!41429 () Bool)

(assert (=> d!41429 (= (getValueByKey!173 lt!69374 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!178 (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41429 true))

(declare-fun _$22!485 () Unit!4141)

(assert (=> d!41429 (= (choose!833 lt!69374 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) _$22!485)))

(declare-fun bs!5608 () Bool)

(assert (= bs!5608 d!41429))

(assert (=> bs!5608 m!156669))

(assert (=> d!40631 d!41429))

(declare-fun d!41431 () Bool)

(declare-fun res!64685 () Bool)

(declare-fun e!87610 () Bool)

(assert (=> d!41431 (=> res!64685 e!87610)))

(assert (=> d!41431 (= res!64685 (or ((_ is Nil!1691) lt!69374) ((_ is Nil!1691) (t!6137 lt!69374))))))

(assert (=> d!41431 (= (isStrictlySorted!309 lt!69374) e!87610)))

(declare-fun b!134517 () Bool)

(declare-fun e!87611 () Bool)

(assert (=> b!134517 (= e!87610 e!87611)))

(declare-fun res!64686 () Bool)

(assert (=> b!134517 (=> (not res!64686) (not e!87611))))

(assert (=> b!134517 (= res!64686 (bvslt (_1!1293 (h!2295 lt!69374)) (_1!1293 (h!2295 (t!6137 lt!69374)))))))

(declare-fun b!134518 () Bool)

(assert (=> b!134518 (= e!87611 (isStrictlySorted!309 (t!6137 lt!69374)))))

(assert (= (and d!41431 (not res!64685)) b!134517))

(assert (= (and b!134517 res!64686) b!134518))

(declare-fun m!159843 () Bool)

(assert (=> b!134518 m!159843))

(assert (=> d!40631 d!41431))

(declare-fun d!41433 () Bool)

(assert (=> d!41433 (= (apply!116 (+!169 lt!70041 (tuple2!2565 lt!70030 (zeroValue!2719 newMap!16))) lt!70026) (apply!116 lt!70041 lt!70026))))

(declare-fun lt!70433 () Unit!4141)

(assert (=> d!41433 (= lt!70433 (choose!828 lt!70041 lt!70030 (zeroValue!2719 newMap!16) lt!70026))))

(declare-fun e!87612 () Bool)

(assert (=> d!41433 e!87612))

(declare-fun res!64687 () Bool)

(assert (=> d!41433 (=> (not res!64687) (not e!87612))))

(assert (=> d!41433 (= res!64687 (contains!884 lt!70041 lt!70026))))

(assert (=> d!41433 (= (addApplyDifferent!92 lt!70041 lt!70030 (zeroValue!2719 newMap!16) lt!70026) lt!70433)))

(declare-fun b!134519 () Bool)

(assert (=> b!134519 (= e!87612 (not (= lt!70026 lt!70030)))))

(assert (= (and d!41433 res!64687) b!134519))

(assert (=> d!41433 m!158309))

(assert (=> d!41433 m!158333))

(assert (=> d!41433 m!158313))

(declare-fun m!159845 () Bool)

(assert (=> d!41433 m!159845))

(declare-fun m!159847 () Bool)

(assert (=> d!41433 m!159847))

(assert (=> d!41433 m!158309))

(assert (=> b!133820 d!41433))

(declare-fun d!41435 () Bool)

(declare-fun e!87614 () Bool)

(assert (=> d!41435 e!87614))

(declare-fun res!64688 () Bool)

(assert (=> d!41435 (=> res!64688 e!87614)))

(declare-fun lt!70434 () Bool)

(assert (=> d!41435 (= res!64688 (not lt!70434))))

(declare-fun lt!70435 () Bool)

(assert (=> d!41435 (= lt!70434 lt!70435)))

(declare-fun lt!70436 () Unit!4141)

(declare-fun e!87613 () Unit!4141)

(assert (=> d!41435 (= lt!70436 e!87613)))

(declare-fun c!25035 () Bool)

(assert (=> d!41435 (= c!25035 lt!70435)))

(assert (=> d!41435 (= lt!70435 (containsKey!176 (toList!842 (+!169 lt!70023 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16)))) lt!70022))))

(assert (=> d!41435 (= (contains!884 (+!169 lt!70023 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16))) lt!70022) lt!70434)))

(declare-fun b!134520 () Bool)

(declare-fun lt!70437 () Unit!4141)

(assert (=> b!134520 (= e!87613 lt!70437)))

(assert (=> b!134520 (= lt!70437 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!70023 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16)))) lt!70022))))

(assert (=> b!134520 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!70023 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16)))) lt!70022))))

(declare-fun b!134521 () Bool)

(declare-fun Unit!4218 () Unit!4141)

(assert (=> b!134521 (= e!87613 Unit!4218)))

(declare-fun b!134522 () Bool)

(assert (=> b!134522 (= e!87614 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!70023 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16)))) lt!70022)))))

(assert (= (and d!41435 c!25035) b!134520))

(assert (= (and d!41435 (not c!25035)) b!134521))

(assert (= (and d!41435 (not res!64688)) b!134522))

(declare-fun m!159849 () Bool)

(assert (=> d!41435 m!159849))

(declare-fun m!159851 () Bool)

(assert (=> b!134520 m!159851))

(declare-fun m!159853 () Bool)

(assert (=> b!134520 m!159853))

(assert (=> b!134520 m!159853))

(declare-fun m!159855 () Bool)

(assert (=> b!134520 m!159855))

(assert (=> b!134522 m!159853))

(assert (=> b!134522 m!159853))

(assert (=> b!134522 m!159855))

(assert (=> b!133820 d!41435))

(declare-fun d!41437 () Bool)

(assert (=> d!41437 (= (apply!116 lt!70029 lt!70031) (get!1492 (getValueByKey!173 (toList!842 lt!70029) lt!70031)))))

(declare-fun bs!5609 () Bool)

(assert (= bs!5609 d!41437))

(declare-fun m!159857 () Bool)

(assert (=> bs!5609 m!159857))

(assert (=> bs!5609 m!159857))

(declare-fun m!159859 () Bool)

(assert (=> bs!5609 m!159859))

(assert (=> b!133820 d!41437))

(declare-fun d!41439 () Bool)

(assert (=> d!41439 (= (apply!116 (+!169 lt!70041 (tuple2!2565 lt!70030 (zeroValue!2719 newMap!16))) lt!70026) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!70041 (tuple2!2565 lt!70030 (zeroValue!2719 newMap!16)))) lt!70026)))))

(declare-fun bs!5610 () Bool)

(assert (= bs!5610 d!41439))

(declare-fun m!159861 () Bool)

(assert (=> bs!5610 m!159861))

(assert (=> bs!5610 m!159861))

(declare-fun m!159863 () Bool)

(assert (=> bs!5610 m!159863))

(assert (=> b!133820 d!41439))

(declare-fun d!41441 () Bool)

(declare-fun e!87615 () Bool)

(assert (=> d!41441 e!87615))

(declare-fun res!64690 () Bool)

(assert (=> d!41441 (=> (not res!64690) (not e!87615))))

(declare-fun lt!70440 () ListLongMap!1653)

(assert (=> d!41441 (= res!64690 (contains!884 lt!70440 (_1!1293 (tuple2!2565 lt!70025 (minValue!2719 newMap!16)))))))

(declare-fun lt!70441 () List!1694)

(assert (=> d!41441 (= lt!70440 (ListLongMap!1654 lt!70441))))

(declare-fun lt!70438 () Unit!4141)

(declare-fun lt!70439 () Unit!4141)

(assert (=> d!41441 (= lt!70438 lt!70439)))

(assert (=> d!41441 (= (getValueByKey!173 lt!70441 (_1!1293 (tuple2!2565 lt!70025 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!70025 (minValue!2719 newMap!16)))))))

(assert (=> d!41441 (= lt!70439 (lemmaContainsTupThenGetReturnValue!88 lt!70441 (_1!1293 (tuple2!2565 lt!70025 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!70025 (minValue!2719 newMap!16)))))))

(assert (=> d!41441 (= lt!70441 (insertStrictlySorted!91 (toList!842 lt!70027) (_1!1293 (tuple2!2565 lt!70025 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!70025 (minValue!2719 newMap!16)))))))

(assert (=> d!41441 (= (+!169 lt!70027 (tuple2!2565 lt!70025 (minValue!2719 newMap!16))) lt!70440)))

(declare-fun b!134523 () Bool)

(declare-fun res!64689 () Bool)

(assert (=> b!134523 (=> (not res!64689) (not e!87615))))

(assert (=> b!134523 (= res!64689 (= (getValueByKey!173 (toList!842 lt!70440) (_1!1293 (tuple2!2565 lt!70025 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!70025 (minValue!2719 newMap!16))))))))

(declare-fun b!134524 () Bool)

(assert (=> b!134524 (= e!87615 (contains!886 (toList!842 lt!70440) (tuple2!2565 lt!70025 (minValue!2719 newMap!16))))))

(assert (= (and d!41441 res!64690) b!134523))

(assert (= (and b!134523 res!64689) b!134524))

(declare-fun m!159865 () Bool)

(assert (=> d!41441 m!159865))

(declare-fun m!159867 () Bool)

(assert (=> d!41441 m!159867))

(declare-fun m!159869 () Bool)

(assert (=> d!41441 m!159869))

(declare-fun m!159871 () Bool)

(assert (=> d!41441 m!159871))

(declare-fun m!159873 () Bool)

(assert (=> b!134523 m!159873))

(declare-fun m!159875 () Bool)

(assert (=> b!134524 m!159875))

(assert (=> b!133820 d!41441))

(declare-fun d!41443 () Bool)

(assert (=> d!41443 (= (apply!116 lt!70041 lt!70026) (get!1492 (getValueByKey!173 (toList!842 lt!70041) lt!70026)))))

(declare-fun bs!5611 () Bool)

(assert (= bs!5611 d!41443))

(declare-fun m!159877 () Bool)

(assert (=> bs!5611 m!159877))

(assert (=> bs!5611 m!159877))

(declare-fun m!159879 () Bool)

(assert (=> bs!5611 m!159879))

(assert (=> b!133820 d!41443))

(declare-fun d!41445 () Bool)

(declare-fun e!87616 () Bool)

(assert (=> d!41445 e!87616))

(declare-fun res!64692 () Bool)

(assert (=> d!41445 (=> (not res!64692) (not e!87616))))

(declare-fun lt!70444 () ListLongMap!1653)

(assert (=> d!41445 (= res!64692 (contains!884 lt!70444 (_1!1293 (tuple2!2565 lt!70021 (minValue!2719 newMap!16)))))))

(declare-fun lt!70445 () List!1694)

(assert (=> d!41445 (= lt!70444 (ListLongMap!1654 lt!70445))))

(declare-fun lt!70442 () Unit!4141)

(declare-fun lt!70443 () Unit!4141)

(assert (=> d!41445 (= lt!70442 lt!70443)))

(assert (=> d!41445 (= (getValueByKey!173 lt!70445 (_1!1293 (tuple2!2565 lt!70021 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!70021 (minValue!2719 newMap!16)))))))

(assert (=> d!41445 (= lt!70443 (lemmaContainsTupThenGetReturnValue!88 lt!70445 (_1!1293 (tuple2!2565 lt!70021 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!70021 (minValue!2719 newMap!16)))))))

(assert (=> d!41445 (= lt!70445 (insertStrictlySorted!91 (toList!842 lt!70029) (_1!1293 (tuple2!2565 lt!70021 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!70021 (minValue!2719 newMap!16)))))))

(assert (=> d!41445 (= (+!169 lt!70029 (tuple2!2565 lt!70021 (minValue!2719 newMap!16))) lt!70444)))

(declare-fun b!134525 () Bool)

(declare-fun res!64691 () Bool)

(assert (=> b!134525 (=> (not res!64691) (not e!87616))))

(assert (=> b!134525 (= res!64691 (= (getValueByKey!173 (toList!842 lt!70444) (_1!1293 (tuple2!2565 lt!70021 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!70021 (minValue!2719 newMap!16))))))))

(declare-fun b!134526 () Bool)

(assert (=> b!134526 (= e!87616 (contains!886 (toList!842 lt!70444) (tuple2!2565 lt!70021 (minValue!2719 newMap!16))))))

(assert (= (and d!41445 res!64692) b!134525))

(assert (= (and b!134525 res!64691) b!134526))

(declare-fun m!159881 () Bool)

(assert (=> d!41445 m!159881))

(declare-fun m!159883 () Bool)

(assert (=> d!41445 m!159883))

(declare-fun m!159885 () Bool)

(assert (=> d!41445 m!159885))

(declare-fun m!159887 () Bool)

(assert (=> d!41445 m!159887))

(declare-fun m!159889 () Bool)

(assert (=> b!134525 m!159889))

(declare-fun m!159891 () Bool)

(assert (=> b!134526 m!159891))

(assert (=> b!133820 d!41445))

(declare-fun d!41447 () Bool)

(declare-fun e!87617 () Bool)

(assert (=> d!41447 e!87617))

(declare-fun res!64694 () Bool)

(assert (=> d!41447 (=> (not res!64694) (not e!87617))))

(declare-fun lt!70448 () ListLongMap!1653)

(assert (=> d!41447 (= res!64694 (contains!884 lt!70448 (_1!1293 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70449 () List!1694)

(assert (=> d!41447 (= lt!70448 (ListLongMap!1654 lt!70449))))

(declare-fun lt!70446 () Unit!4141)

(declare-fun lt!70447 () Unit!4141)

(assert (=> d!41447 (= lt!70446 lt!70447)))

(assert (=> d!41447 (= (getValueByKey!173 lt!70449 (_1!1293 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41447 (= lt!70447 (lemmaContainsTupThenGetReturnValue!88 lt!70449 (_1!1293 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41447 (= lt!70449 (insertStrictlySorted!91 (toList!842 lt!70023) (_1!1293 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41447 (= (+!169 lt!70023 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16))) lt!70448)))

(declare-fun b!134527 () Bool)

(declare-fun res!64693 () Bool)

(assert (=> b!134527 (=> (not res!64693) (not e!87617))))

(assert (=> b!134527 (= res!64693 (= (getValueByKey!173 (toList!842 lt!70448) (_1!1293 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134528 () Bool)

(assert (=> b!134528 (= e!87617 (contains!886 (toList!842 lt!70448) (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41447 res!64694) b!134527))

(assert (= (and b!134527 res!64693) b!134528))

(declare-fun m!159893 () Bool)

(assert (=> d!41447 m!159893))

(declare-fun m!159895 () Bool)

(assert (=> d!41447 m!159895))

(declare-fun m!159897 () Bool)

(assert (=> d!41447 m!159897))

(declare-fun m!159899 () Bool)

(assert (=> d!41447 m!159899))

(declare-fun m!159901 () Bool)

(assert (=> b!134527 m!159901))

(declare-fun m!159903 () Bool)

(assert (=> b!134528 m!159903))

(assert (=> b!133820 d!41447))

(declare-fun d!41449 () Bool)

(assert (=> d!41449 (= (apply!116 (+!169 lt!70029 (tuple2!2565 lt!70021 (minValue!2719 newMap!16))) lt!70031) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!70029 (tuple2!2565 lt!70021 (minValue!2719 newMap!16)))) lt!70031)))))

(declare-fun bs!5612 () Bool)

(assert (= bs!5612 d!41449))

(declare-fun m!159905 () Bool)

(assert (=> bs!5612 m!159905))

(assert (=> bs!5612 m!159905))

(declare-fun m!159907 () Bool)

(assert (=> bs!5612 m!159907))

(assert (=> b!133820 d!41449))

(assert (=> b!133820 d!41297))

(declare-fun d!41451 () Bool)

(declare-fun e!87618 () Bool)

(assert (=> d!41451 e!87618))

(declare-fun res!64696 () Bool)

(assert (=> d!41451 (=> (not res!64696) (not e!87618))))

(declare-fun lt!70452 () ListLongMap!1653)

(assert (=> d!41451 (= res!64696 (contains!884 lt!70452 (_1!1293 (tuple2!2565 lt!70030 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70453 () List!1694)

(assert (=> d!41451 (= lt!70452 (ListLongMap!1654 lt!70453))))

(declare-fun lt!70450 () Unit!4141)

(declare-fun lt!70451 () Unit!4141)

(assert (=> d!41451 (= lt!70450 lt!70451)))

(assert (=> d!41451 (= (getValueByKey!173 lt!70453 (_1!1293 (tuple2!2565 lt!70030 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!70030 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41451 (= lt!70451 (lemmaContainsTupThenGetReturnValue!88 lt!70453 (_1!1293 (tuple2!2565 lt!70030 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!70030 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41451 (= lt!70453 (insertStrictlySorted!91 (toList!842 lt!70041) (_1!1293 (tuple2!2565 lt!70030 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!70030 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41451 (= (+!169 lt!70041 (tuple2!2565 lt!70030 (zeroValue!2719 newMap!16))) lt!70452)))

(declare-fun b!134529 () Bool)

(declare-fun res!64695 () Bool)

(assert (=> b!134529 (=> (not res!64695) (not e!87618))))

(assert (=> b!134529 (= res!64695 (= (getValueByKey!173 (toList!842 lt!70452) (_1!1293 (tuple2!2565 lt!70030 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!70030 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134530 () Bool)

(assert (=> b!134530 (= e!87618 (contains!886 (toList!842 lt!70452) (tuple2!2565 lt!70030 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41451 res!64696) b!134529))

(assert (= (and b!134529 res!64695) b!134530))

(declare-fun m!159909 () Bool)

(assert (=> d!41451 m!159909))

(declare-fun m!159911 () Bool)

(assert (=> d!41451 m!159911))

(declare-fun m!159913 () Bool)

(assert (=> d!41451 m!159913))

(declare-fun m!159915 () Bool)

(assert (=> d!41451 m!159915))

(declare-fun m!159917 () Bool)

(assert (=> b!134529 m!159917))

(declare-fun m!159919 () Bool)

(assert (=> b!134530 m!159919))

(assert (=> b!133820 d!41451))

(declare-fun d!41453 () Bool)

(assert (=> d!41453 (= (apply!116 (+!169 lt!70027 (tuple2!2565 lt!70025 (minValue!2719 newMap!16))) lt!70033) (apply!116 lt!70027 lt!70033))))

(declare-fun lt!70454 () Unit!4141)

(assert (=> d!41453 (= lt!70454 (choose!828 lt!70027 lt!70025 (minValue!2719 newMap!16) lt!70033))))

(declare-fun e!87619 () Bool)

(assert (=> d!41453 e!87619))

(declare-fun res!64697 () Bool)

(assert (=> d!41453 (=> (not res!64697) (not e!87619))))

(assert (=> d!41453 (= res!64697 (contains!884 lt!70027 lt!70033))))

(assert (=> d!41453 (= (addApplyDifferent!92 lt!70027 lt!70025 (minValue!2719 newMap!16) lt!70033) lt!70454)))

(declare-fun b!134531 () Bool)

(assert (=> b!134531 (= e!87619 (not (= lt!70033 lt!70025)))))

(assert (= (and d!41453 res!64697) b!134531))

(assert (=> d!41453 m!158317))

(assert (=> d!41453 m!158319))

(assert (=> d!41453 m!158303))

(declare-fun m!159921 () Bool)

(assert (=> d!41453 m!159921))

(declare-fun m!159923 () Bool)

(assert (=> d!41453 m!159923))

(assert (=> d!41453 m!158317))

(assert (=> b!133820 d!41453))

(declare-fun d!41455 () Bool)

(assert (=> d!41455 (= (apply!116 (+!169 lt!70029 (tuple2!2565 lt!70021 (minValue!2719 newMap!16))) lt!70031) (apply!116 lt!70029 lt!70031))))

(declare-fun lt!70455 () Unit!4141)

(assert (=> d!41455 (= lt!70455 (choose!828 lt!70029 lt!70021 (minValue!2719 newMap!16) lt!70031))))

(declare-fun e!87620 () Bool)

(assert (=> d!41455 e!87620))

(declare-fun res!64698 () Bool)

(assert (=> d!41455 (=> (not res!64698) (not e!87620))))

(assert (=> d!41455 (= res!64698 (contains!884 lt!70029 lt!70031))))

(assert (=> d!41455 (= (addApplyDifferent!92 lt!70029 lt!70021 (minValue!2719 newMap!16) lt!70031) lt!70455)))

(declare-fun b!134532 () Bool)

(assert (=> b!134532 (= e!87620 (not (= lt!70031 lt!70021)))))

(assert (= (and d!41455 res!64698) b!134532))

(assert (=> d!41455 m!158311))

(assert (=> d!41455 m!158325))

(assert (=> d!41455 m!158307))

(declare-fun m!159925 () Bool)

(assert (=> d!41455 m!159925))

(declare-fun m!159927 () Bool)

(assert (=> d!41455 m!159927))

(assert (=> d!41455 m!158311))

(assert (=> b!133820 d!41455))

(declare-fun d!41457 () Bool)

(assert (=> d!41457 (= (apply!116 (+!169 lt!70027 (tuple2!2565 lt!70025 (minValue!2719 newMap!16))) lt!70033) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!70027 (tuple2!2565 lt!70025 (minValue!2719 newMap!16)))) lt!70033)))))

(declare-fun bs!5613 () Bool)

(assert (= bs!5613 d!41457))

(declare-fun m!159929 () Bool)

(assert (=> bs!5613 m!159929))

(assert (=> bs!5613 m!159929))

(declare-fun m!159931 () Bool)

(assert (=> bs!5613 m!159931))

(assert (=> b!133820 d!41457))

(declare-fun d!41459 () Bool)

(assert (=> d!41459 (contains!884 (+!169 lt!70023 (tuple2!2565 lt!70038 (zeroValue!2719 newMap!16))) lt!70022)))

(declare-fun lt!70456 () Unit!4141)

(assert (=> d!41459 (= lt!70456 (choose!829 lt!70023 lt!70038 (zeroValue!2719 newMap!16) lt!70022))))

(assert (=> d!41459 (contains!884 lt!70023 lt!70022)))

(assert (=> d!41459 (= (addStillContains!92 lt!70023 lt!70038 (zeroValue!2719 newMap!16) lt!70022) lt!70456)))

(declare-fun bs!5614 () Bool)

(assert (= bs!5614 d!41459))

(assert (=> bs!5614 m!158329))

(assert (=> bs!5614 m!158329))

(assert (=> bs!5614 m!158331))

(declare-fun m!159933 () Bool)

(assert (=> bs!5614 m!159933))

(declare-fun m!159935 () Bool)

(assert (=> bs!5614 m!159935))

(assert (=> b!133820 d!41459))

(declare-fun d!41461 () Bool)

(assert (=> d!41461 (= (apply!116 lt!70027 lt!70033) (get!1492 (getValueByKey!173 (toList!842 lt!70027) lt!70033)))))

(declare-fun bs!5615 () Bool)

(assert (= bs!5615 d!41461))

(declare-fun m!159937 () Bool)

(assert (=> bs!5615 m!159937))

(assert (=> bs!5615 m!159937))

(declare-fun m!159939 () Bool)

(assert (=> bs!5615 m!159939))

(assert (=> b!133820 d!41461))

(declare-fun d!41463 () Bool)

(assert (not d!41463))

(assert (=> b!133751 d!41463))

(declare-fun d!41465 () Bool)

(declare-fun res!64699 () Bool)

(declare-fun e!87621 () Bool)

(assert (=> d!41465 (=> res!64699 e!87621)))

(assert (=> d!41465 (= res!64699 (and ((_ is Cons!1690) (toList!842 lt!69486)) (= (_1!1293 (h!2295 (toList!842 lt!69486))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41465 (= (containsKey!176 (toList!842 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000) e!87621)))

(declare-fun b!134533 () Bool)

(declare-fun e!87622 () Bool)

(assert (=> b!134533 (= e!87621 e!87622)))

(declare-fun res!64700 () Bool)

(assert (=> b!134533 (=> (not res!64700) (not e!87622))))

(assert (=> b!134533 (= res!64700 (and (or (not ((_ is Cons!1690) (toList!842 lt!69486))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69486))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1690) (toList!842 lt!69486)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69486))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134534 () Bool)

(assert (=> b!134534 (= e!87622 (containsKey!176 (t!6137 (toList!842 lt!69486)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41465 (not res!64699)) b!134533))

(assert (= (and b!134533 res!64700) b!134534))

(declare-fun m!159941 () Bool)

(assert (=> b!134534 m!159941))

(assert (=> d!40905 d!41465))

(declare-fun d!41467 () Bool)

(assert (=> d!41467 (= (get!1492 (getValueByKey!173 (toList!842 lt!69486) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3203 (getValueByKey!173 (toList!842 lt!69486) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!40615 d!41467))

(declare-fun b!134536 () Bool)

(declare-fun e!87623 () Option!179)

(declare-fun e!87624 () Option!179)

(assert (=> b!134536 (= e!87623 e!87624)))

(declare-fun c!25037 () Bool)

(assert (=> b!134536 (= c!25037 (and ((_ is Cons!1690) (toList!842 lt!69486)) (not (= (_1!1293 (h!2295 (toList!842 lt!69486))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!134535 () Bool)

(assert (=> b!134535 (= e!87623 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69486)))))))

(declare-fun d!41469 () Bool)

(declare-fun c!25036 () Bool)

(assert (=> d!41469 (= c!25036 (and ((_ is Cons!1690) (toList!842 lt!69486)) (= (_1!1293 (h!2295 (toList!842 lt!69486))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!41469 (= (getValueByKey!173 (toList!842 lt!69486) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!87623)))

(declare-fun b!134538 () Bool)

(assert (=> b!134538 (= e!87624 None!177)))

(declare-fun b!134537 () Bool)

(assert (=> b!134537 (= e!87624 (getValueByKey!173 (t!6137 (toList!842 lt!69486)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!41469 c!25036) b!134535))

(assert (= (and d!41469 (not c!25036)) b!134536))

(assert (= (and b!134536 c!25037) b!134537))

(assert (= (and b!134536 (not c!25037)) b!134538))

(assert (=> b!134537 m!156581))

(declare-fun m!159943 () Bool)

(assert (=> b!134537 m!159943))

(assert (=> d!40615 d!41469))

(declare-fun d!41471 () Bool)

(assert (=> d!41471 (= (apply!116 lt!69958 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69958) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5616 () Bool)

(assert (= bs!5616 d!41471))

(declare-fun m!159945 () Bool)

(assert (=> bs!5616 m!159945))

(assert (=> bs!5616 m!159945))

(declare-fun m!159947 () Bool)

(assert (=> bs!5616 m!159947))

(assert (=> b!133699 d!41471))

(declare-fun d!41473 () Bool)

(assert (=> d!41473 (= (apply!116 lt!69779 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)) (get!1492 (getValueByKey!173 (toList!842 lt!69779) (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000))))))

(declare-fun bs!5617 () Bool)

(assert (= bs!5617 d!41473))

(assert (=> bs!5617 m!157539))

(declare-fun m!159949 () Bool)

(assert (=> bs!5617 m!159949))

(assert (=> bs!5617 m!159949))

(declare-fun m!159951 () Bool)

(assert (=> bs!5617 m!159951))

(assert (=> b!133426 d!41473))

(declare-fun d!41475 () Bool)

(declare-fun c!25038 () Bool)

(assert (=> d!41475 (= c!25038 ((_ is ValueCellFull!1094) (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!87625 () V!3481)

(assert (=> d!41475 (= (get!1489 (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87625)))

(declare-fun b!134539 () Bool)

(assert (=> b!134539 (= e!87625 (get!1490 (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134540 () Bool)

(assert (=> b!134540 (= e!87625 (get!1491 (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41475 c!25038) b!134539))

(assert (= (and d!41475 (not c!25038)) b!134540))

(assert (=> b!134539 m!157597))

(assert (=> b!134539 m!156809))

(declare-fun m!159953 () Bool)

(assert (=> b!134539 m!159953))

(assert (=> b!134540 m!157597))

(assert (=> b!134540 m!156809))

(declare-fun m!159955 () Bool)

(assert (=> b!134540 m!159955))

(assert (=> b!133426 d!41475))

(assert (=> b!133977 d!41267))

(assert (=> b!133977 d!41269))

(assert (=> b!134080 d!41287))

(assert (=> b!134080 d!41289))

(assert (=> bm!14741 d!41217))

(declare-fun d!41477 () Bool)

(declare-fun res!64701 () Bool)

(declare-fun e!87626 () Bool)

(assert (=> d!41477 (=> res!64701 e!87626)))

(assert (=> d!41477 (= res!64701 (and ((_ is Cons!1690) (toList!842 lt!69529)) (= (_1!1293 (h!2295 (toList!842 lt!69529))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41477 (= (containsKey!176 (toList!842 lt!69529) #b0000000000000000000000000000000000000000000000000000000000000000) e!87626)))

(declare-fun b!134541 () Bool)

(declare-fun e!87627 () Bool)

(assert (=> b!134541 (= e!87626 e!87627)))

(declare-fun res!64702 () Bool)

(assert (=> b!134541 (=> (not res!64702) (not e!87627))))

(assert (=> b!134541 (= res!64702 (and (or (not ((_ is Cons!1690) (toList!842 lt!69529))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69529))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1690) (toList!842 lt!69529)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69529))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134542 () Bool)

(assert (=> b!134542 (= e!87627 (containsKey!176 (t!6137 (toList!842 lt!69529)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41477 (not res!64701)) b!134541))

(assert (= (and b!134541 res!64702) b!134542))

(declare-fun m!159957 () Bool)

(assert (=> b!134542 m!159957))

(assert (=> d!40709 d!41477))

(declare-fun lt!70457 () Bool)

(declare-fun d!41479 () Bool)

(assert (=> d!41479 (= lt!70457 (select (content!134 (toList!842 lt!70174)) (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun e!87629 () Bool)

(assert (=> d!41479 (= lt!70457 e!87629)))

(declare-fun res!64704 () Bool)

(assert (=> d!41479 (=> (not res!64704) (not e!87629))))

(assert (=> d!41479 (= res!64704 ((_ is Cons!1690) (toList!842 lt!70174)))))

(assert (=> d!41479 (= (contains!886 (toList!842 lt!70174) (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70457)))

(declare-fun b!134543 () Bool)

(declare-fun e!87628 () Bool)

(assert (=> b!134543 (= e!87629 e!87628)))

(declare-fun res!64703 () Bool)

(assert (=> b!134543 (=> res!64703 e!87628)))

(assert (=> b!134543 (= res!64703 (= (h!2295 (toList!842 lt!70174)) (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!134544 () Bool)

(assert (=> b!134544 (= e!87628 (contains!886 (t!6137 (toList!842 lt!70174)) (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!41479 res!64704) b!134543))

(assert (= (and b!134543 (not res!64703)) b!134544))

(declare-fun m!159959 () Bool)

(assert (=> d!41479 m!159959))

(declare-fun m!159961 () Bool)

(assert (=> d!41479 m!159961))

(declare-fun m!159963 () Bool)

(assert (=> b!134544 m!159963))

(assert (=> b!134053 d!41479))

(declare-fun lt!70458 () Bool)

(declare-fun d!41481 () Bool)

(assert (=> d!41481 (= lt!70458 (select (content!134 (t!6137 (toList!842 lt!69634))) (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun e!87631 () Bool)

(assert (=> d!41481 (= lt!70458 e!87631)))

(declare-fun res!64706 () Bool)

(assert (=> d!41481 (=> (not res!64706) (not e!87631))))

(assert (=> d!41481 (= res!64706 ((_ is Cons!1690) (t!6137 (toList!842 lt!69634))))))

(assert (=> d!41481 (= (contains!886 (t!6137 (toList!842 lt!69634)) (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!70458)))

(declare-fun b!134545 () Bool)

(declare-fun e!87630 () Bool)

(assert (=> b!134545 (= e!87631 e!87630)))

(declare-fun res!64705 () Bool)

(assert (=> b!134545 (=> res!64705 e!87630)))

(assert (=> b!134545 (= res!64705 (= (h!2295 (t!6137 (toList!842 lt!69634))) (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!134546 () Bool)

(assert (=> b!134546 (= e!87630 (contains!886 (t!6137 (t!6137 (toList!842 lt!69634))) (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!41481 res!64706) b!134545))

(assert (= (and b!134545 (not res!64705)) b!134546))

(declare-fun m!159965 () Bool)

(assert (=> d!41481 m!159965))

(declare-fun m!159967 () Bool)

(assert (=> d!41481 m!159967))

(declare-fun m!159969 () Bool)

(assert (=> b!134546 m!159969))

(assert (=> b!133564 d!41481))

(declare-fun d!41483 () Bool)

(declare-fun e!87633 () Bool)

(assert (=> d!41483 e!87633))

(declare-fun res!64707 () Bool)

(assert (=> d!41483 (=> res!64707 e!87633)))

(declare-fun lt!70459 () Bool)

(assert (=> d!41483 (= res!64707 (not lt!70459))))

(declare-fun lt!70460 () Bool)

(assert (=> d!41483 (= lt!70459 lt!70460)))

(declare-fun lt!70461 () Unit!4141)

(declare-fun e!87632 () Unit!4141)

(assert (=> d!41483 (= lt!70461 e!87632)))

(declare-fun c!25039 () Bool)

(assert (=> d!41483 (= c!25039 lt!70460)))

(assert (=> d!41483 (= lt!70460 (containsKey!176 (toList!842 lt!70148) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41483 (= (contains!884 lt!70148 (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))) lt!70459)))

(declare-fun b!134547 () Bool)

(declare-fun lt!70462 () Unit!4141)

(assert (=> b!134547 (= e!87632 lt!70462)))

(assert (=> b!134547 (= lt!70462 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70148) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))

(assert (=> b!134547 (isDefined!125 (getValueByKey!173 (toList!842 lt!70148) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134548 () Bool)

(declare-fun Unit!4219 () Unit!4141)

(assert (=> b!134548 (= e!87632 Unit!4219)))

(declare-fun b!134549 () Bool)

(assert (=> b!134549 (= e!87633 (isDefined!125 (getValueByKey!173 (toList!842 lt!70148) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!41483 c!25039) b!134547))

(assert (= (and d!41483 (not c!25039)) b!134548))

(assert (= (and d!41483 (not res!64707)) b!134549))

(declare-fun m!159971 () Bool)

(assert (=> d!41483 m!159971))

(declare-fun m!159973 () Bool)

(assert (=> b!134547 m!159973))

(assert (=> b!134547 m!158733))

(assert (=> b!134547 m!158733))

(declare-fun m!159975 () Bool)

(assert (=> b!134547 m!159975))

(assert (=> b!134549 m!158733))

(assert (=> b!134549 m!158733))

(assert (=> b!134549 m!159975))

(assert (=> d!41031 d!41483))

(declare-fun b!134551 () Bool)

(declare-fun e!87634 () Option!179)

(declare-fun e!87635 () Option!179)

(assert (=> b!134551 (= e!87634 e!87635)))

(declare-fun c!25041 () Bool)

(assert (=> b!134551 (= c!25041 (and ((_ is Cons!1690) lt!70149) (not (= (_1!1293 (h!2295 lt!70149)) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!134550 () Bool)

(assert (=> b!134550 (= e!87634 (Some!178 (_2!1293 (h!2295 lt!70149))))))

(declare-fun d!41485 () Bool)

(declare-fun c!25040 () Bool)

(assert (=> d!41485 (= c!25040 (and ((_ is Cons!1690) lt!70149) (= (_1!1293 (h!2295 lt!70149)) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))))))

(assert (=> d!41485 (= (getValueByKey!173 lt!70149 (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))) e!87634)))

(declare-fun b!134553 () Bool)

(assert (=> b!134553 (= e!87635 None!177)))

(declare-fun b!134552 () Bool)

(assert (=> b!134552 (= e!87635 (getValueByKey!173 (t!6137 lt!70149) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))

(assert (= (and d!41485 c!25040) b!134550))

(assert (= (and d!41485 (not c!25040)) b!134551))

(assert (= (and b!134551 c!25041) b!134552))

(assert (= (and b!134551 (not c!25041)) b!134553))

(declare-fun m!159977 () Bool)

(assert (=> b!134552 m!159977))

(assert (=> d!41031 d!41485))

(declare-fun d!41487 () Bool)

(assert (=> d!41487 (= (getValueByKey!173 lt!70149 (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70463 () Unit!4141)

(assert (=> d!41487 (= lt!70463 (choose!833 lt!70149 (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))

(declare-fun e!87636 () Bool)

(assert (=> d!41487 e!87636))

(declare-fun res!64708 () Bool)

(assert (=> d!41487 (=> (not res!64708) (not e!87636))))

(assert (=> d!41487 (= res!64708 (isStrictlySorted!309 lt!70149))))

(assert (=> d!41487 (= (lemmaContainsTupThenGetReturnValue!88 lt!70149 (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))) lt!70463)))

(declare-fun b!134554 () Bool)

(declare-fun res!64709 () Bool)

(assert (=> b!134554 (=> (not res!64709) (not e!87636))))

(assert (=> b!134554 (= res!64709 (containsKey!176 lt!70149 (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134555 () Bool)

(assert (=> b!134555 (= e!87636 (contains!886 lt!70149 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!41487 res!64708) b!134554))

(assert (= (and b!134554 res!64709) b!134555))

(assert (=> d!41487 m!158727))

(declare-fun m!159979 () Bool)

(assert (=> d!41487 m!159979))

(declare-fun m!159981 () Bool)

(assert (=> d!41487 m!159981))

(declare-fun m!159983 () Bool)

(assert (=> b!134554 m!159983))

(declare-fun m!159985 () Bool)

(assert (=> b!134555 m!159985))

(assert (=> d!41031 d!41487))

(declare-fun b!134556 () Bool)

(declare-fun res!64710 () Bool)

(declare-fun e!87641 () Bool)

(assert (=> b!134556 (=> (not res!64710) (not e!87641))))

(declare-fun lt!70464 () List!1694)

(assert (=> b!134556 (= res!64710 (containsKey!176 lt!70464 (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))

(declare-fun b!134557 () Bool)

(declare-fun e!87639 () List!1694)

(declare-fun e!87640 () List!1694)

(assert (=> b!134557 (= e!87639 e!87640)))

(declare-fun c!25045 () Bool)

(assert (=> b!134557 (= c!25045 (and ((_ is Cons!1690) (toList!842 lt!69586)) (= (_1!1293 (h!2295 (toList!842 lt!69586))) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))))))

(declare-fun bm!14814 () Bool)

(declare-fun call!14818 () List!1694)

(declare-fun call!14817 () List!1694)

(assert (=> bm!14814 (= call!14818 call!14817)))

(declare-fun b!134558 () Bool)

(declare-fun e!87637 () List!1694)

(assert (=> b!134558 (= e!87637 call!14818)))

(declare-fun c!25044 () Bool)

(declare-fun b!134559 () Bool)

(assert (=> b!134559 (= c!25044 (and ((_ is Cons!1690) (toList!842 lt!69586)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69586))) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))))))

(assert (=> b!134559 (= e!87640 e!87637)))

(declare-fun b!134560 () Bool)

(assert (=> b!134560 (= e!87641 (contains!886 lt!70464 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134561 () Bool)

(assert (=> b!134561 (= e!87640 call!14817)))

(declare-fun d!41489 () Bool)

(assert (=> d!41489 e!87641))

(declare-fun res!64711 () Bool)

(assert (=> d!41489 (=> (not res!64711) (not e!87641))))

(assert (=> d!41489 (= res!64711 (isStrictlySorted!309 lt!70464))))

(assert (=> d!41489 (= lt!70464 e!87639)))

(declare-fun c!25043 () Bool)

(assert (=> d!41489 (= c!25043 (and ((_ is Cons!1690) (toList!842 lt!69586)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69586))) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))))))

(assert (=> d!41489 (isStrictlySorted!309 (toList!842 lt!69586))))

(assert (=> d!41489 (= (insertStrictlySorted!91 (toList!842 lt!69586) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))) lt!70464)))

(declare-fun b!134562 () Bool)

(declare-fun e!87638 () List!1694)

(assert (=> b!134562 (= e!87638 (ite c!25045 (t!6137 (toList!842 lt!69586)) (ite c!25044 (Cons!1690 (h!2295 (toList!842 lt!69586)) (t!6137 (toList!842 lt!69586))) Nil!1691)))))

(declare-fun b!134563 () Bool)

(declare-fun call!14819 () List!1694)

(assert (=> b!134563 (= e!87639 call!14819)))

(declare-fun b!134564 () Bool)

(assert (=> b!134564 (= e!87637 call!14818)))

(declare-fun b!134565 () Bool)

(assert (=> b!134565 (= e!87638 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69586)) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))

(declare-fun bm!14815 () Bool)

(assert (=> bm!14815 (= call!14817 call!14819)))

(declare-fun bm!14816 () Bool)

(assert (=> bm!14816 (= call!14819 ($colon$colon!91 e!87638 (ite c!25043 (h!2295 (toList!842 lt!69586)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))))

(declare-fun c!25042 () Bool)

(assert (=> bm!14816 (= c!25042 c!25043)))

(assert (= (and d!41489 c!25043) b!134563))

(assert (= (and d!41489 (not c!25043)) b!134557))

(assert (= (and b!134557 c!25045) b!134561))

(assert (= (and b!134557 (not c!25045)) b!134559))

(assert (= (and b!134559 c!25044) b!134564))

(assert (= (and b!134559 (not c!25044)) b!134558))

(assert (= (or b!134564 b!134558) bm!14814))

(assert (= (or b!134561 bm!14814) bm!14815))

(assert (= (or b!134563 bm!14815) bm!14816))

(assert (= (and bm!14816 c!25042) b!134565))

(assert (= (and bm!14816 (not c!25042)) b!134562))

(assert (= (and d!41489 res!64711) b!134556))

(assert (= (and b!134556 res!64710) b!134560))

(declare-fun m!159987 () Bool)

(assert (=> b!134560 m!159987))

(declare-fun m!159989 () Bool)

(assert (=> b!134565 m!159989))

(declare-fun m!159991 () Bool)

(assert (=> bm!14816 m!159991))

(declare-fun m!159993 () Bool)

(assert (=> b!134556 m!159993))

(declare-fun m!159995 () Bool)

(assert (=> d!41489 m!159995))

(declare-fun m!159997 () Bool)

(assert (=> d!41489 m!159997))

(assert (=> d!41031 d!41489))

(declare-fun b!134567 () Bool)

(declare-fun e!87642 () Option!179)

(declare-fun e!87643 () Option!179)

(assert (=> b!134567 (= e!87642 e!87643)))

(declare-fun c!25047 () Bool)

(assert (=> b!134567 (= c!25047 (and ((_ is Cons!1690) (t!6137 (toList!842 e!86556))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 e!86556)))) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))))

(declare-fun b!134566 () Bool)

(assert (=> b!134566 (= e!87642 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 e!86556))))))))

(declare-fun d!41491 () Bool)

(declare-fun c!25046 () Bool)

(assert (=> d!41491 (= c!25046 (and ((_ is Cons!1690) (t!6137 (toList!842 e!86556))) (= (_1!1293 (h!2295 (t!6137 (toList!842 e!86556)))) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))))

(assert (=> d!41491 (= (getValueByKey!173 (t!6137 (toList!842 e!86556)) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))) e!87642)))

(declare-fun b!134569 () Bool)

(assert (=> b!134569 (= e!87643 None!177)))

(declare-fun b!134568 () Bool)

(assert (=> b!134568 (= e!87643 (getValueByKey!173 (t!6137 (t!6137 (toList!842 e!86556))) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(assert (= (and d!41491 c!25046) b!134566))

(assert (= (and d!41491 (not c!25046)) b!134567))

(assert (= (and b!134567 c!25047) b!134568))

(assert (= (and b!134567 (not c!25047)) b!134569))

(declare-fun m!159999 () Bool)

(assert (=> b!134568 m!159999))

(assert (=> b!133239 d!41491))

(declare-fun d!41493 () Bool)

(declare-fun res!64712 () Bool)

(declare-fun e!87644 () Bool)

(assert (=> d!41493 (=> res!64712 e!87644)))

(assert (=> d!41493 (= res!64712 (and ((_ is Cons!1690) lt!69631) (= (_1!1293 (h!2295 lt!69631)) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41493 (= (containsKey!176 lt!69631 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87644)))

(declare-fun b!134570 () Bool)

(declare-fun e!87645 () Bool)

(assert (=> b!134570 (= e!87644 e!87645)))

(declare-fun res!64713 () Bool)

(assert (=> b!134570 (=> (not res!64713) (not e!87645))))

(assert (=> b!134570 (= res!64713 (and (or (not ((_ is Cons!1690) lt!69631)) (bvsle (_1!1293 (h!2295 lt!69631)) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Cons!1690) lt!69631) (bvslt (_1!1293 (h!2295 lt!69631)) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134571 () Bool)

(assert (=> b!134571 (= e!87645 (containsKey!176 (t!6137 lt!69631) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41493 (not res!64712)) b!134570))

(assert (= (and b!134570 res!64713) b!134571))

(declare-fun m!160001 () Bool)

(assert (=> b!134571 m!160001))

(assert (=> b!133650 d!41493))

(assert (=> d!40861 d!40863))

(assert (=> d!40861 d!40865))

(declare-fun d!41495 () Bool)

(assert (=> d!41495 (not (contains!884 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485)) lt!69488))))

(assert (=> d!41495 true))

(declare-fun _$36!333 () Unit!4141)

(assert (=> d!41495 (= (choose!836 lt!69482 lt!69484 lt!69485 lt!69488) _$36!333)))

(declare-fun bs!5618 () Bool)

(assert (= bs!5618 d!41495))

(assert (=> bs!5618 m!156755))

(assert (=> bs!5618 m!156755))

(assert (=> bs!5618 m!156761))

(assert (=> d!40861 d!41495))

(declare-fun d!41497 () Bool)

(declare-fun e!87647 () Bool)

(assert (=> d!41497 e!87647))

(declare-fun res!64714 () Bool)

(assert (=> d!41497 (=> res!64714 e!87647)))

(declare-fun lt!70465 () Bool)

(assert (=> d!41497 (= res!64714 (not lt!70465))))

(declare-fun lt!70466 () Bool)

(assert (=> d!41497 (= lt!70465 lt!70466)))

(declare-fun lt!70467 () Unit!4141)

(declare-fun e!87646 () Unit!4141)

(assert (=> d!41497 (= lt!70467 e!87646)))

(declare-fun c!25048 () Bool)

(assert (=> d!41497 (= c!25048 lt!70466)))

(assert (=> d!41497 (= lt!70466 (containsKey!176 (toList!842 lt!69482) lt!69488))))

(assert (=> d!41497 (= (contains!884 lt!69482 lt!69488) lt!70465)))

(declare-fun b!134573 () Bool)

(declare-fun lt!70468 () Unit!4141)

(assert (=> b!134573 (= e!87646 lt!70468)))

(assert (=> b!134573 (= lt!70468 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69482) lt!69488))))

(assert (=> b!134573 (isDefined!125 (getValueByKey!173 (toList!842 lt!69482) lt!69488))))

(declare-fun b!134574 () Bool)

(declare-fun Unit!4220 () Unit!4141)

(assert (=> b!134574 (= e!87646 Unit!4220)))

(declare-fun b!134575 () Bool)

(assert (=> b!134575 (= e!87647 (isDefined!125 (getValueByKey!173 (toList!842 lt!69482) lt!69488)))))

(assert (= (and d!41497 c!25048) b!134573))

(assert (= (and d!41497 (not c!25048)) b!134574))

(assert (= (and d!41497 (not res!64714)) b!134575))

(declare-fun m!160003 () Bool)

(assert (=> d!41497 m!160003))

(declare-fun m!160005 () Bool)

(assert (=> b!134573 m!160005))

(declare-fun m!160007 () Bool)

(assert (=> b!134573 m!160007))

(assert (=> b!134573 m!160007))

(declare-fun m!160009 () Bool)

(assert (=> b!134573 m!160009))

(assert (=> b!134575 m!160007))

(assert (=> b!134575 m!160007))

(assert (=> b!134575 m!160009))

(assert (=> d!40861 d!41497))

(declare-fun d!41499 () Bool)

(declare-fun res!64715 () Bool)

(declare-fun e!87648 () Bool)

(assert (=> d!41499 (=> res!64715 e!87648)))

(assert (=> d!41499 (= res!64715 (or ((_ is Nil!1691) lt!69718) ((_ is Nil!1691) (t!6137 lt!69718))))))

(assert (=> d!41499 (= (isStrictlySorted!309 lt!69718) e!87648)))

(declare-fun b!134576 () Bool)

(declare-fun e!87649 () Bool)

(assert (=> b!134576 (= e!87648 e!87649)))

(declare-fun res!64716 () Bool)

(assert (=> b!134576 (=> (not res!64716) (not e!87649))))

(assert (=> b!134576 (= res!64716 (bvslt (_1!1293 (h!2295 lt!69718)) (_1!1293 (h!2295 (t!6137 lt!69718)))))))

(declare-fun b!134577 () Bool)

(assert (=> b!134577 (= e!87649 (isStrictlySorted!309 (t!6137 lt!69718)))))

(assert (= (and d!41499 (not res!64715)) b!134576))

(assert (= (and b!134576 res!64716) b!134577))

(declare-fun m!160011 () Bool)

(assert (=> b!134577 m!160011))

(assert (=> d!40633 d!41499))

(declare-fun d!41501 () Bool)

(declare-fun res!64717 () Bool)

(declare-fun e!87650 () Bool)

(assert (=> d!41501 (=> res!64717 e!87650)))

(assert (=> d!41501 (= res!64717 (or ((_ is Nil!1691) (toList!842 e!86561)) ((_ is Nil!1691) (t!6137 (toList!842 e!86561)))))))

(assert (=> d!41501 (= (isStrictlySorted!309 (toList!842 e!86561)) e!87650)))

(declare-fun b!134578 () Bool)

(declare-fun e!87651 () Bool)

(assert (=> b!134578 (= e!87650 e!87651)))

(declare-fun res!64718 () Bool)

(assert (=> b!134578 (=> (not res!64718) (not e!87651))))

(assert (=> b!134578 (= res!64718 (bvslt (_1!1293 (h!2295 (toList!842 e!86561))) (_1!1293 (h!2295 (t!6137 (toList!842 e!86561))))))))

(declare-fun b!134579 () Bool)

(assert (=> b!134579 (= e!87651 (isStrictlySorted!309 (t!6137 (toList!842 e!86561))))))

(assert (= (and d!41501 (not res!64717)) b!134578))

(assert (= (and b!134578 res!64718) b!134579))

(declare-fun m!160013 () Bool)

(assert (=> b!134579 m!160013))

(assert (=> d!40633 d!41501))

(declare-fun d!41503 () Bool)

(assert (=> d!41503 (= (apply!116 lt!69932 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69932) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5619 () Bool)

(assert (= bs!5619 d!41503))

(declare-fun m!160015 () Bool)

(assert (=> bs!5619 m!160015))

(assert (=> bs!5619 m!160015))

(declare-fun m!160017 () Bool)

(assert (=> bs!5619 m!160017))

(assert (=> b!133673 d!41503))

(declare-fun d!41505 () Bool)

(assert (=> d!41505 (isDefined!125 (getValueByKey!173 (toList!842 lt!69341) lt!69343))))

(declare-fun lt!70469 () Unit!4141)

(assert (=> d!41505 (= lt!70469 (choose!831 (toList!842 lt!69341) lt!69343))))

(declare-fun e!87652 () Bool)

(assert (=> d!41505 e!87652))

(declare-fun res!64719 () Bool)

(assert (=> d!41505 (=> (not res!64719) (not e!87652))))

(assert (=> d!41505 (= res!64719 (isStrictlySorted!309 (toList!842 lt!69341)))))

(assert (=> d!41505 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69341) lt!69343) lt!70469)))

(declare-fun b!134580 () Bool)

(assert (=> b!134580 (= e!87652 (containsKey!176 (toList!842 lt!69341) lt!69343))))

(assert (= (and d!41505 res!64719) b!134580))

(assert (=> d!41505 m!157153))

(assert (=> d!41505 m!157153))

(assert (=> d!41505 m!157869))

(declare-fun m!160019 () Bool)

(assert (=> d!41505 m!160019))

(assert (=> d!41505 m!158685))

(assert (=> b!134580 m!157865))

(assert (=> b!133565 d!41505))

(declare-fun d!41507 () Bool)

(assert (=> d!41507 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69341) lt!69343)) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69341) lt!69343))))))

(declare-fun bs!5620 () Bool)

(assert (= bs!5620 d!41507))

(assert (=> bs!5620 m!157153))

(declare-fun m!160021 () Bool)

(assert (=> bs!5620 m!160021))

(assert (=> b!133565 d!41507))

(assert (=> b!133565 d!40599))

(declare-fun d!41509 () Bool)

(assert (=> d!41509 (= (get!1492 (getValueByKey!173 (toList!842 lt!69529) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!173 (toList!842 lt!69529) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40817 d!41509))

(declare-fun b!134582 () Bool)

(declare-fun e!87653 () Option!179)

(declare-fun e!87654 () Option!179)

(assert (=> b!134582 (= e!87653 e!87654)))

(declare-fun c!25050 () Bool)

(assert (=> b!134582 (= c!25050 (and ((_ is Cons!1690) (toList!842 lt!69529)) (not (= (_1!1293 (h!2295 (toList!842 lt!69529))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134581 () Bool)

(assert (=> b!134581 (= e!87653 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69529)))))))

(declare-fun d!41511 () Bool)

(declare-fun c!25049 () Bool)

(assert (=> d!41511 (= c!25049 (and ((_ is Cons!1690) (toList!842 lt!69529)) (= (_1!1293 (h!2295 (toList!842 lt!69529))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41511 (= (getValueByKey!173 (toList!842 lt!69529) #b1000000000000000000000000000000000000000000000000000000000000000) e!87653)))

(declare-fun b!134584 () Bool)

(assert (=> b!134584 (= e!87654 None!177)))

(declare-fun b!134583 () Bool)

(assert (=> b!134583 (= e!87654 (getValueByKey!173 (t!6137 (toList!842 lt!69529)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41511 c!25049) b!134581))

(assert (= (and d!41511 (not c!25049)) b!134582))

(assert (= (and b!134582 c!25050) b!134583))

(assert (= (and b!134582 (not c!25050)) b!134584))

(declare-fun m!160023 () Bool)

(assert (=> b!134583 m!160023))

(assert (=> d!40817 d!41511))

(assert (=> b!133408 d!40657))

(assert (=> b!133408 d!40479))

(assert (=> b!133408 d!40667))

(declare-fun b!134586 () Bool)

(declare-fun e!87655 () Option!179)

(declare-fun e!87656 () Option!179)

(assert (=> b!134586 (= e!87655 e!87656)))

(declare-fun c!25052 () Bool)

(assert (=> b!134586 (= c!25052 (and ((_ is Cons!1690) (toList!842 lt!69854)) (not (= (_1!1293 (h!2295 (toList!842 lt!69854))) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))))

(declare-fun b!134585 () Bool)

(assert (=> b!134585 (= e!87655 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69854)))))))

(declare-fun d!41513 () Bool)

(declare-fun c!25051 () Bool)

(assert (=> d!41513 (= c!25051 (and ((_ is Cons!1690) (toList!842 lt!69854)) (= (_1!1293 (h!2295 (toList!842 lt!69854))) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))))))

(assert (=> d!41513 (= (getValueByKey!173 (toList!842 lt!69854) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))) e!87655)))

(declare-fun b!134588 () Bool)

(assert (=> b!134588 (= e!87656 None!177)))

(declare-fun b!134587 () Bool)

(assert (=> b!134587 (= e!87656 (getValueByKey!173 (t!6137 (toList!842 lt!69854)) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))

(assert (= (and d!41513 c!25051) b!134585))

(assert (= (and d!41513 (not c!25051)) b!134586))

(assert (= (and b!134586 c!25052) b!134587))

(assert (= (and b!134586 (not c!25052)) b!134588))

(declare-fun m!160025 () Bool)

(assert (=> b!134587 m!160025))

(assert (=> b!133545 d!41513))

(declare-fun d!41515 () Bool)

(declare-fun e!87658 () Bool)

(assert (=> d!41515 e!87658))

(declare-fun res!64720 () Bool)

(assert (=> d!41515 (=> res!64720 e!87658)))

(declare-fun lt!70470 () Bool)

(assert (=> d!41515 (= res!64720 (not lt!70470))))

(declare-fun lt!70471 () Bool)

(assert (=> d!41515 (= lt!70470 lt!70471)))

(declare-fun lt!70472 () Unit!4141)

(declare-fun e!87657 () Unit!4141)

(assert (=> d!41515 (= lt!70472 e!87657)))

(declare-fun c!25053 () Bool)

(assert (=> d!41515 (= c!25053 lt!70471)))

(assert (=> d!41515 (= lt!70471 (containsKey!176 (toList!842 lt!70012) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41515 (= (contains!884 lt!70012 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70470)))

(declare-fun b!134589 () Bool)

(declare-fun lt!70473 () Unit!4141)

(assert (=> b!134589 (= e!87657 lt!70473)))

(assert (=> b!134589 (= lt!70473 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70012) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134589 (isDefined!125 (getValueByKey!173 (toList!842 lt!70012) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134590 () Bool)

(declare-fun Unit!4221 () Unit!4141)

(assert (=> b!134590 (= e!87657 Unit!4221)))

(declare-fun b!134591 () Bool)

(assert (=> b!134591 (= e!87658 (isDefined!125 (getValueByKey!173 (toList!842 lt!70012) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41515 c!25053) b!134589))

(assert (= (and d!41515 (not c!25053)) b!134590))

(assert (= (and d!41515 (not res!64720)) b!134591))

(declare-fun m!160027 () Bool)

(assert (=> d!41515 m!160027))

(declare-fun m!160029 () Bool)

(assert (=> b!134589 m!160029))

(declare-fun m!160031 () Bool)

(assert (=> b!134589 m!160031))

(assert (=> b!134589 m!160031))

(declare-fun m!160033 () Bool)

(assert (=> b!134589 m!160033))

(assert (=> b!134591 m!160031))

(assert (=> b!134591 m!160031))

(assert (=> b!134591 m!160033))

(assert (=> d!40873 d!41515))

(assert (=> d!40873 d!40591))

(declare-fun b!134593 () Bool)

(declare-fun e!87659 () Option!179)

(declare-fun e!87660 () Option!179)

(assert (=> b!134593 (= e!87659 e!87660)))

(declare-fun c!25055 () Bool)

(assert (=> b!134593 (= c!25055 (and ((_ is Cons!1690) (t!6137 lt!69606)) (not (= (_1!1293 (h!2295 (t!6137 lt!69606))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))))

(declare-fun b!134592 () Bool)

(assert (=> b!134592 (= e!87659 (Some!178 (_2!1293 (h!2295 (t!6137 lt!69606)))))))

(declare-fun c!25054 () Bool)

(declare-fun d!41517 () Bool)

(assert (=> d!41517 (= c!25054 (and ((_ is Cons!1690) (t!6137 lt!69606)) (= (_1!1293 (h!2295 (t!6137 lt!69606))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (=> d!41517 (= (getValueByKey!173 (t!6137 lt!69606) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) e!87659)))

(declare-fun b!134595 () Bool)

(assert (=> b!134595 (= e!87660 None!177)))

(declare-fun b!134594 () Bool)

(assert (=> b!134594 (= e!87660 (getValueByKey!173 (t!6137 (t!6137 lt!69606)) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!41517 c!25054) b!134592))

(assert (= (and d!41517 (not c!25054)) b!134593))

(assert (= (and b!134593 c!25055) b!134594))

(assert (= (and b!134593 (not c!25055)) b!134595))

(declare-fun m!160035 () Bool)

(assert (=> b!134594 m!160035))

(assert (=> b!134038 d!41517))

(declare-fun d!41519 () Bool)

(declare-fun lt!70474 () Bool)

(assert (=> d!41519 (= lt!70474 (select (content!134 (toList!842 lt!70017)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87662 () Bool)

(assert (=> d!41519 (= lt!70474 e!87662)))

(declare-fun res!64722 () Bool)

(assert (=> d!41519 (=> (not res!64722) (not e!87662))))

(assert (=> d!41519 (= res!64722 ((_ is Cons!1690) (toList!842 lt!70017)))))

(assert (=> d!41519 (= (contains!886 (toList!842 lt!70017) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70474)))

(declare-fun b!134596 () Bool)

(declare-fun e!87661 () Bool)

(assert (=> b!134596 (= e!87662 e!87661)))

(declare-fun res!64721 () Bool)

(assert (=> b!134596 (=> res!64721 e!87661)))

(assert (=> b!134596 (= res!64721 (= (h!2295 (toList!842 lt!70017)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134597 () Bool)

(assert (=> b!134597 (= e!87661 (contains!886 (t!6137 (toList!842 lt!70017)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41519 res!64722) b!134596))

(assert (= (and b!134596 (not res!64721)) b!134597))

(declare-fun m!160037 () Bool)

(assert (=> d!41519 m!160037))

(declare-fun m!160039 () Bool)

(assert (=> d!41519 m!160039))

(declare-fun m!160041 () Bool)

(assert (=> b!134597 m!160041))

(assert (=> b!133816 d!41519))

(declare-fun d!41521 () Bool)

(declare-fun e!87664 () Bool)

(assert (=> d!41521 e!87664))

(declare-fun res!64723 () Bool)

(assert (=> d!41521 (=> res!64723 e!87664)))

(declare-fun lt!70475 () Bool)

(assert (=> d!41521 (= res!64723 (not lt!70475))))

(declare-fun lt!70476 () Bool)

(assert (=> d!41521 (= lt!70475 lt!70476)))

(declare-fun lt!70477 () Unit!4141)

(declare-fun e!87663 () Unit!4141)

(assert (=> d!41521 (= lt!70477 e!87663)))

(declare-fun c!25056 () Bool)

(assert (=> d!41521 (= c!25056 lt!70476)))

(assert (=> d!41521 (= lt!70476 (containsKey!176 (toList!842 lt!69989) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41521 (= (contains!884 lt!69989 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) lt!70475)))

(declare-fun b!134598 () Bool)

(declare-fun lt!70478 () Unit!4141)

(assert (=> b!134598 (= e!87663 lt!70478)))

(assert (=> b!134598 (= lt!70478 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69989) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134598 (isDefined!125 (getValueByKey!173 (toList!842 lt!69989) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134599 () Bool)

(declare-fun Unit!4222 () Unit!4141)

(assert (=> b!134599 (= e!87663 Unit!4222)))

(declare-fun b!134600 () Bool)

(assert (=> b!134600 (= e!87664 (isDefined!125 (getValueByKey!173 (toList!842 lt!69989) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41521 c!25056) b!134598))

(assert (= (and d!41521 (not c!25056)) b!134599))

(assert (= (and d!41521 (not res!64723)) b!134600))

(assert (=> d!41521 m!156679))

(declare-fun m!160043 () Bool)

(assert (=> d!41521 m!160043))

(assert (=> b!134598 m!156679))

(declare-fun m!160045 () Bool)

(assert (=> b!134598 m!160045))

(assert (=> b!134598 m!156679))

(declare-fun m!160047 () Bool)

(assert (=> b!134598 m!160047))

(assert (=> b!134598 m!160047))

(declare-fun m!160049 () Bool)

(assert (=> b!134598 m!160049))

(assert (=> b!134600 m!156679))

(assert (=> b!134600 m!160047))

(assert (=> b!134600 m!160047))

(assert (=> b!134600 m!160049))

(assert (=> b!133782 d!41521))

(declare-fun d!41523 () Bool)

(assert (=> d!41523 (= (get!1492 (getValueByKey!173 (toList!842 lt!69524) lt!69530)) (v!3203 (getValueByKey!173 (toList!842 lt!69524) lt!69530)))))

(assert (=> d!40927 d!41523))

(declare-fun b!134602 () Bool)

(declare-fun e!87665 () Option!179)

(declare-fun e!87666 () Option!179)

(assert (=> b!134602 (= e!87665 e!87666)))

(declare-fun c!25058 () Bool)

(assert (=> b!134602 (= c!25058 (and ((_ is Cons!1690) (toList!842 lt!69524)) (not (= (_1!1293 (h!2295 (toList!842 lt!69524))) lt!69530))))))

(declare-fun b!134601 () Bool)

(assert (=> b!134601 (= e!87665 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69524)))))))

(declare-fun d!41525 () Bool)

(declare-fun c!25057 () Bool)

(assert (=> d!41525 (= c!25057 (and ((_ is Cons!1690) (toList!842 lt!69524)) (= (_1!1293 (h!2295 (toList!842 lt!69524))) lt!69530)))))

(assert (=> d!41525 (= (getValueByKey!173 (toList!842 lt!69524) lt!69530) e!87665)))

(declare-fun b!134604 () Bool)

(assert (=> b!134604 (= e!87666 None!177)))

(declare-fun b!134603 () Bool)

(assert (=> b!134603 (= e!87666 (getValueByKey!173 (t!6137 (toList!842 lt!69524)) lt!69530))))

(assert (= (and d!41525 c!25057) b!134601))

(assert (= (and d!41525 (not c!25057)) b!134602))

(assert (= (and b!134602 c!25058) b!134603))

(assert (= (and b!134602 (not c!25058)) b!134604))

(declare-fun m!160051 () Bool)

(assert (=> b!134603 m!160051))

(assert (=> d!40927 d!41525))

(assert (=> d!41021 d!41023))

(declare-fun d!41527 () Bool)

(declare-fun e!87668 () Bool)

(assert (=> d!41527 e!87668))

(declare-fun res!64724 () Bool)

(assert (=> d!41527 (=> res!64724 e!87668)))

(declare-fun lt!70479 () Bool)

(assert (=> d!41527 (= res!64724 (not lt!70479))))

(declare-fun lt!70480 () Bool)

(assert (=> d!41527 (= lt!70479 lt!70480)))

(declare-fun lt!70481 () Unit!4141)

(declare-fun e!87667 () Unit!4141)

(assert (=> d!41527 (= lt!70481 e!87667)))

(declare-fun c!25059 () Bool)

(assert (=> d!41527 (= c!25059 lt!70480)))

(assert (=> d!41527 (= lt!70480 (containsKey!176 (toList!842 lt!69586) lt!69571))))

(assert (=> d!41527 (= (contains!884 lt!69586 lt!69571) lt!70479)))

(declare-fun b!134605 () Bool)

(declare-fun lt!70482 () Unit!4141)

(assert (=> b!134605 (= e!87667 lt!70482)))

(assert (=> b!134605 (= lt!70482 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69586) lt!69571))))

(assert (=> b!134605 (isDefined!125 (getValueByKey!173 (toList!842 lt!69586) lt!69571))))

(declare-fun b!134606 () Bool)

(declare-fun Unit!4223 () Unit!4141)

(assert (=> b!134606 (= e!87667 Unit!4223)))

(declare-fun b!134607 () Bool)

(assert (=> b!134607 (= e!87668 (isDefined!125 (getValueByKey!173 (toList!842 lt!69586) lt!69571)))))

(assert (= (and d!41527 c!25059) b!134605))

(assert (= (and d!41527 (not c!25059)) b!134606))

(assert (= (and d!41527 (not res!64724)) b!134607))

(declare-fun m!160053 () Bool)

(assert (=> d!41527 m!160053))

(declare-fun m!160055 () Bool)

(assert (=> b!134605 m!160055))

(assert (=> b!134605 m!158717))

(assert (=> b!134605 m!158717))

(declare-fun m!160057 () Bool)

(assert (=> b!134605 m!160057))

(assert (=> b!134607 m!158717))

(assert (=> b!134607 m!158717))

(assert (=> b!134607 m!160057))

(assert (=> d!41021 d!41527))

(assert (=> d!41021 d!41027))

(assert (=> d!41021 d!41031))

(declare-fun d!41529 () Bool)

(assert (=> d!41529 (= (apply!116 (+!169 lt!69586 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))) lt!69571) (apply!116 lt!69586 lt!69571))))

(assert (=> d!41529 true))

(declare-fun _$34!981 () Unit!4141)

(assert (=> d!41529 (= (choose!828 lt!69586 lt!69575 (zeroValue!2719 newMap!16) lt!69571) _$34!981)))

(declare-fun bs!5621 () Bool)

(assert (= bs!5621 d!41529))

(assert (=> bs!5621 m!156969))

(assert (=> bs!5621 m!156969))

(assert (=> bs!5621 m!156993))

(assert (=> bs!5621 m!156973))

(assert (=> d!41021 d!41529))

(declare-fun d!41531 () Bool)

(declare-fun res!64725 () Bool)

(declare-fun e!87669 () Bool)

(assert (=> d!41531 (=> res!64725 e!87669)))

(assert (=> d!41531 (= res!64725 (or ((_ is Nil!1691) lt!70106) ((_ is Nil!1691) (t!6137 lt!70106))))))

(assert (=> d!41531 (= (isStrictlySorted!309 lt!70106) e!87669)))

(declare-fun b!134608 () Bool)

(declare-fun e!87670 () Bool)

(assert (=> b!134608 (= e!87669 e!87670)))

(declare-fun res!64726 () Bool)

(assert (=> b!134608 (=> (not res!64726) (not e!87670))))

(assert (=> b!134608 (= res!64726 (bvslt (_1!1293 (h!2295 lt!70106)) (_1!1293 (h!2295 (t!6137 lt!70106)))))))

(declare-fun b!134609 () Bool)

(assert (=> b!134609 (= e!87670 (isStrictlySorted!309 (t!6137 lt!70106)))))

(assert (= (and d!41531 (not res!64725)) b!134608))

(assert (= (and b!134608 res!64726) b!134609))

(declare-fun m!160059 () Bool)

(assert (=> b!134609 m!160059))

(assert (=> d!40961 d!41531))

(declare-fun d!41533 () Bool)

(declare-fun res!64727 () Bool)

(declare-fun e!87671 () Bool)

(assert (=> d!41533 (=> res!64727 e!87671)))

(assert (=> d!41533 (= res!64727 (or ((_ is Nil!1691) (toList!842 call!14628)) ((_ is Nil!1691) (t!6137 (toList!842 call!14628)))))))

(assert (=> d!41533 (= (isStrictlySorted!309 (toList!842 call!14628)) e!87671)))

(declare-fun b!134610 () Bool)

(declare-fun e!87672 () Bool)

(assert (=> b!134610 (= e!87671 e!87672)))

(declare-fun res!64728 () Bool)

(assert (=> b!134610 (=> (not res!64728) (not e!87672))))

(assert (=> b!134610 (= res!64728 (bvslt (_1!1293 (h!2295 (toList!842 call!14628))) (_1!1293 (h!2295 (t!6137 (toList!842 call!14628))))))))

(declare-fun b!134611 () Bool)

(assert (=> b!134611 (= e!87672 (isStrictlySorted!309 (t!6137 (toList!842 call!14628))))))

(assert (= (and d!41533 (not res!64727)) b!134610))

(assert (= (and b!134610 res!64728) b!134611))

(declare-fun m!160061 () Bool)

(assert (=> b!134611 m!160061))

(assert (=> d!40961 d!41533))

(declare-fun d!41535 () Bool)

(assert (=> d!41535 (= (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and (not (= (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133966 d!41535))

(declare-fun d!41537 () Bool)

(declare-fun lt!70483 () Bool)

(assert (=> d!41537 (= lt!70483 (select (content!134 (t!6137 (toList!842 lt!69630))) (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun e!87674 () Bool)

(assert (=> d!41537 (= lt!70483 e!87674)))

(declare-fun res!64730 () Bool)

(assert (=> d!41537 (=> (not res!64730) (not e!87674))))

(assert (=> d!41537 (= res!64730 ((_ is Cons!1690) (t!6137 (toList!842 lt!69630))))))

(assert (=> d!41537 (= (contains!886 (t!6137 (toList!842 lt!69630)) (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!70483)))

(declare-fun b!134612 () Bool)

(declare-fun e!87673 () Bool)

(assert (=> b!134612 (= e!87674 e!87673)))

(declare-fun res!64729 () Bool)

(assert (=> b!134612 (=> res!64729 e!87673)))

(assert (=> b!134612 (= res!64729 (= (h!2295 (t!6137 (toList!842 lt!69630))) (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!134613 () Bool)

(assert (=> b!134613 (= e!87673 (contains!886 (t!6137 (t!6137 (toList!842 lt!69630))) (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!41537 res!64730) b!134612))

(assert (= (and b!134612 (not res!64729)) b!134613))

(declare-fun m!160063 () Bool)

(assert (=> d!41537 m!160063))

(declare-fun m!160065 () Bool)

(assert (=> d!41537 m!160065))

(declare-fun m!160067 () Bool)

(assert (=> b!134613 m!160067))

(assert (=> b!133510 d!41537))

(declare-fun d!41539 () Bool)

(declare-fun e!87676 () Bool)

(assert (=> d!41539 e!87676))

(declare-fun res!64731 () Bool)

(assert (=> d!41539 (=> res!64731 e!87676)))

(declare-fun lt!70484 () Bool)

(assert (=> d!41539 (= res!64731 (not lt!70484))))

(declare-fun lt!70485 () Bool)

(assert (=> d!41539 (= lt!70484 lt!70485)))

(declare-fun lt!70486 () Unit!4141)

(declare-fun e!87675 () Unit!4141)

(assert (=> d!41539 (= lt!70486 e!87675)))

(declare-fun c!25060 () Bool)

(assert (=> d!41539 (= c!25060 lt!70485)))

(assert (=> d!41539 (= lt!70485 (containsKey!176 (toList!842 lt!69944) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41539 (= (contains!884 lt!69944 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70484)))

(declare-fun b!134614 () Bool)

(declare-fun lt!70487 () Unit!4141)

(assert (=> b!134614 (= e!87675 lt!70487)))

(assert (=> b!134614 (= lt!70487 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69944) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!134614 (isDefined!125 (getValueByKey!173 (toList!842 lt!69944) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134615 () Bool)

(declare-fun Unit!4224 () Unit!4141)

(assert (=> b!134615 (= e!87675 Unit!4224)))

(declare-fun b!134616 () Bool)

(assert (=> b!134616 (= e!87676 (isDefined!125 (getValueByKey!173 (toList!842 lt!69944) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41539 c!25060) b!134614))

(assert (= (and d!41539 (not c!25060)) b!134615))

(assert (= (and d!41539 (not res!64731)) b!134616))

(declare-fun m!160069 () Bool)

(assert (=> d!41539 m!160069))

(declare-fun m!160071 () Bool)

(assert (=> b!134614 m!160071))

(assert (=> b!134614 m!158071))

(assert (=> b!134614 m!158071))

(declare-fun m!160073 () Bool)

(assert (=> b!134614 m!160073))

(assert (=> b!134616 m!158071))

(assert (=> b!134616 m!158071))

(assert (=> b!134616 m!160073))

(assert (=> d!40823 d!41539))

(declare-fun b!134618 () Bool)

(declare-fun e!87677 () Option!179)

(declare-fun e!87678 () Option!179)

(assert (=> b!134618 (= e!87677 e!87678)))

(declare-fun c!25062 () Bool)

(assert (=> b!134618 (= c!25062 (and ((_ is Cons!1690) lt!69945) (not (= (_1!1293 (h!2295 lt!69945)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134617 () Bool)

(assert (=> b!134617 (= e!87677 (Some!178 (_2!1293 (h!2295 lt!69945))))))

(declare-fun d!41541 () Bool)

(declare-fun c!25061 () Bool)

(assert (=> d!41541 (= c!25061 (and ((_ is Cons!1690) lt!69945) (= (_1!1293 (h!2295 lt!69945)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41541 (= (getValueByKey!173 lt!69945 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87677)))

(declare-fun b!134620 () Bool)

(assert (=> b!134620 (= e!87678 None!177)))

(declare-fun b!134619 () Bool)

(assert (=> b!134619 (= e!87678 (getValueByKey!173 (t!6137 lt!69945) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41541 c!25061) b!134617))

(assert (= (and d!41541 (not c!25061)) b!134618))

(assert (= (and b!134618 c!25062) b!134619))

(assert (= (and b!134618 (not c!25062)) b!134620))

(declare-fun m!160075 () Bool)

(assert (=> b!134619 m!160075))

(assert (=> d!40823 d!41541))

(declare-fun d!41543 () Bool)

(assert (=> d!41543 (= (getValueByKey!173 lt!69945 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70488 () Unit!4141)

(assert (=> d!41543 (= lt!70488 (choose!833 lt!69945 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87679 () Bool)

(assert (=> d!41543 e!87679))

(declare-fun res!64732 () Bool)

(assert (=> d!41543 (=> (not res!64732) (not e!87679))))

(assert (=> d!41543 (= res!64732 (isStrictlySorted!309 lt!69945))))

(assert (=> d!41543 (= (lemmaContainsTupThenGetReturnValue!88 lt!69945 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70488)))

(declare-fun b!134621 () Bool)

(declare-fun res!64733 () Bool)

(assert (=> b!134621 (=> (not res!64733) (not e!87679))))

(assert (=> b!134621 (= res!64733 (containsKey!176 lt!69945 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134622 () Bool)

(assert (=> b!134622 (= e!87679 (contains!886 lt!69945 (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41543 res!64732) b!134621))

(assert (= (and b!134621 res!64733) b!134622))

(assert (=> d!41543 m!158065))

(declare-fun m!160077 () Bool)

(assert (=> d!41543 m!160077))

(declare-fun m!160079 () Bool)

(assert (=> d!41543 m!160079))

(declare-fun m!160081 () Bool)

(assert (=> b!134621 m!160081))

(declare-fun m!160083 () Bool)

(assert (=> b!134622 m!160083))

(assert (=> d!40823 d!41543))

(declare-fun b!134623 () Bool)

(declare-fun res!64734 () Bool)

(declare-fun e!87684 () Bool)

(assert (=> b!134623 (=> (not res!64734) (not e!87684))))

(declare-fun lt!70489 () List!1694)

(assert (=> b!134623 (= res!64734 (containsKey!176 lt!70489 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134624 () Bool)

(declare-fun e!87682 () List!1694)

(declare-fun e!87683 () List!1694)

(assert (=> b!134624 (= e!87682 e!87683)))

(declare-fun c!25066 () Bool)

(assert (=> b!134624 (= c!25066 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14817 () Bool)

(declare-fun call!14821 () List!1694)

(declare-fun call!14820 () List!1694)

(assert (=> bm!14817 (= call!14821 call!14820)))

(declare-fun b!134625 () Bool)

(declare-fun e!87680 () List!1694)

(assert (=> b!134625 (= e!87680 call!14821)))

(declare-fun c!25065 () Bool)

(declare-fun b!134626 () Bool)

(assert (=> b!134626 (= c!25065 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvsgt (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!134626 (= e!87683 e!87680)))

(declare-fun b!134627 () Bool)

(assert (=> b!134627 (= e!87684 (contains!886 lt!70489 (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134628 () Bool)

(assert (=> b!134628 (= e!87683 call!14820)))

(declare-fun d!41545 () Bool)

(assert (=> d!41545 e!87684))

(declare-fun res!64735 () Bool)

(assert (=> d!41545 (=> (not res!64735) (not e!87684))))

(assert (=> d!41545 (= res!64735 (isStrictlySorted!309 lt!70489))))

(assert (=> d!41545 (= lt!70489 e!87682)))

(declare-fun c!25064 () Bool)

(assert (=> d!41545 (= c!25064 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvslt (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41545 (isStrictlySorted!309 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))

(assert (=> d!41545 (= (insertStrictlySorted!91 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70489)))

(declare-fun b!134629 () Bool)

(declare-fun e!87681 () List!1694)

(assert (=> b!134629 (= e!87681 (ite c!25066 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (ite c!25065 (Cons!1690 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) Nil!1691)))))

(declare-fun b!134630 () Bool)

(declare-fun call!14822 () List!1694)

(assert (=> b!134630 (= e!87682 call!14822)))

(declare-fun b!134631 () Bool)

(assert (=> b!134631 (= e!87680 call!14821)))

(declare-fun b!134632 () Bool)

(assert (=> b!134632 (= e!87681 (insertStrictlySorted!91 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14818 () Bool)

(assert (=> bm!14818 (= call!14820 call!14822)))

(declare-fun bm!14819 () Bool)

(assert (=> bm!14819 (= call!14822 ($colon$colon!91 e!87681 (ite c!25064 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25063 () Bool)

(assert (=> bm!14819 (= c!25063 c!25064)))

(assert (= (and d!41545 c!25064) b!134630))

(assert (= (and d!41545 (not c!25064)) b!134624))

(assert (= (and b!134624 c!25066) b!134628))

(assert (= (and b!134624 (not c!25066)) b!134626))

(assert (= (and b!134626 c!25065) b!134631))

(assert (= (and b!134626 (not c!25065)) b!134625))

(assert (= (or b!134631 b!134625) bm!14817))

(assert (= (or b!134628 bm!14817) bm!14818))

(assert (= (or b!134630 bm!14818) bm!14819))

(assert (= (and bm!14819 c!25063) b!134632))

(assert (= (and bm!14819 (not c!25063)) b!134629))

(assert (= (and d!41545 res!64735) b!134623))

(assert (= (and b!134623 res!64734) b!134627))

(declare-fun m!160085 () Bool)

(assert (=> b!134627 m!160085))

(declare-fun m!160087 () Bool)

(assert (=> b!134632 m!160087))

(declare-fun m!160089 () Bool)

(assert (=> bm!14819 m!160089))

(declare-fun m!160091 () Bool)

(assert (=> b!134623 m!160091))

(declare-fun m!160093 () Bool)

(assert (=> d!41545 m!160093))

(assert (=> d!41545 m!157341))

(assert (=> d!40823 d!41545))

(assert (=> b!133282 d!40707))

(declare-fun d!41547 () Bool)

(assert (=> d!41547 (= (apply!116 lt!69958 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69958) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5622 () Bool)

(assert (= bs!5622 d!41547))

(assert (=> bs!5622 m!159279))

(assert (=> bs!5622 m!159279))

(declare-fun m!160095 () Bool)

(assert (=> bs!5622 m!160095))

(assert (=> b!133696 d!41547))

(declare-fun d!41549 () Bool)

(assert (=> d!41549 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69504) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69504) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5623 () Bool)

(assert (= bs!5623 d!41549))

(assert (=> bs!5623 m!158873))

(declare-fun m!160097 () Bool)

(assert (=> bs!5623 m!160097))

(assert (=> b!134085 d!41549))

(assert (=> b!134085 d!41229))

(declare-fun d!41551 () Bool)

(declare-fun e!87686 () Bool)

(assert (=> d!41551 e!87686))

(declare-fun res!64736 () Bool)

(assert (=> d!41551 (=> res!64736 e!87686)))

(declare-fun lt!70490 () Bool)

(assert (=> d!41551 (= res!64736 (not lt!70490))))

(declare-fun lt!70491 () Bool)

(assert (=> d!41551 (= lt!70490 lt!70491)))

(declare-fun lt!70492 () Unit!4141)

(declare-fun e!87685 () Unit!4141)

(assert (=> d!41551 (= lt!70492 e!87685)))

(declare-fun c!25067 () Bool)

(assert (=> d!41551 (= c!25067 lt!70491)))

(assert (=> d!41551 (= lt!70491 (containsKey!176 (toList!842 lt!69694) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41551 (= (contains!884 lt!69694 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70490)))

(declare-fun b!134633 () Bool)

(declare-fun lt!70493 () Unit!4141)

(assert (=> b!134633 (= e!87685 lt!70493)))

(assert (=> b!134633 (= lt!70493 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69694) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134633 (isDefined!125 (getValueByKey!173 (toList!842 lt!69694) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134634 () Bool)

(declare-fun Unit!4225 () Unit!4141)

(assert (=> b!134634 (= e!87685 Unit!4225)))

(declare-fun b!134635 () Bool)

(assert (=> b!134635 (= e!87686 (isDefined!125 (getValueByKey!173 (toList!842 lt!69694) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41551 c!25067) b!134633))

(assert (= (and d!41551 (not c!25067)) b!134634))

(assert (= (and d!41551 (not res!64736)) b!134635))

(declare-fun m!160099 () Bool)

(assert (=> d!41551 m!160099))

(declare-fun m!160101 () Bool)

(assert (=> b!134633 m!160101))

(declare-fun m!160103 () Bool)

(assert (=> b!134633 m!160103))

(assert (=> b!134633 m!160103))

(declare-fun m!160105 () Bool)

(assert (=> b!134633 m!160105))

(assert (=> b!134635 m!160103))

(assert (=> b!134635 m!160103))

(assert (=> b!134635 m!160105))

(assert (=> b!133265 d!41551))

(declare-fun d!41553 () Bool)

(declare-fun res!64737 () Bool)

(declare-fun e!87687 () Bool)

(assert (=> d!41553 (=> res!64737 e!87687)))

(assert (=> d!41553 (= res!64737 (or ((_ is Nil!1691) lt!69908) ((_ is Nil!1691) (t!6137 lt!69908))))))

(assert (=> d!41553 (= (isStrictlySorted!309 lt!69908) e!87687)))

(declare-fun b!134636 () Bool)

(declare-fun e!87688 () Bool)

(assert (=> b!134636 (= e!87687 e!87688)))

(declare-fun res!64738 () Bool)

(assert (=> b!134636 (=> (not res!64738) (not e!87688))))

(assert (=> b!134636 (= res!64738 (bvslt (_1!1293 (h!2295 lt!69908)) (_1!1293 (h!2295 (t!6137 lt!69908)))))))

(declare-fun b!134637 () Bool)

(assert (=> b!134637 (= e!87688 (isStrictlySorted!309 (t!6137 lt!69908)))))

(assert (= (and d!41553 (not res!64737)) b!134636))

(assert (= (and b!134636 res!64738) b!134637))

(declare-fun m!160107 () Bool)

(assert (=> b!134637 m!160107))

(assert (=> d!40787 d!41553))

(declare-fun d!41555 () Bool)

(declare-fun res!64739 () Bool)

(declare-fun e!87689 () Bool)

(assert (=> d!41555 (=> res!64739 e!87689)))

(assert (=> d!41555 (= res!64739 (or ((_ is Nil!1691) (toList!842 lt!69335)) ((_ is Nil!1691) (t!6137 (toList!842 lt!69335)))))))

(assert (=> d!41555 (= (isStrictlySorted!309 (toList!842 lt!69335)) e!87689)))

(declare-fun b!134638 () Bool)

(declare-fun e!87690 () Bool)

(assert (=> b!134638 (= e!87689 e!87690)))

(declare-fun res!64740 () Bool)

(assert (=> b!134638 (=> (not res!64740) (not e!87690))))

(assert (=> b!134638 (= res!64740 (bvslt (_1!1293 (h!2295 (toList!842 lt!69335))) (_1!1293 (h!2295 (t!6137 (toList!842 lt!69335))))))))

(declare-fun b!134639 () Bool)

(assert (=> b!134639 (= e!87690 (isStrictlySorted!309 (t!6137 (toList!842 lt!69335))))))

(assert (= (and d!41555 (not res!64739)) b!134638))

(assert (= (and b!134638 res!64740) b!134639))

(declare-fun m!160109 () Bool)

(assert (=> b!134639 m!160109))

(assert (=> d!40787 d!41555))

(declare-fun d!41557 () Bool)

(declare-fun lt!70494 () Bool)

(assert (=> d!41557 (= lt!70494 (select (content!134 lt!69984) (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87692 () Bool)

(assert (=> d!41557 (= lt!70494 e!87692)))

(declare-fun res!64742 () Bool)

(assert (=> d!41557 (=> (not res!64742) (not e!87692))))

(assert (=> d!41557 (= res!64742 ((_ is Cons!1690) lt!69984))))

(assert (=> d!41557 (= (contains!886 lt!69984 (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70494)))

(declare-fun b!134640 () Bool)

(declare-fun e!87691 () Bool)

(assert (=> b!134640 (= e!87692 e!87691)))

(declare-fun res!64741 () Bool)

(assert (=> b!134640 (=> res!64741 e!87691)))

(assert (=> b!134640 (= res!64741 (= (h!2295 lt!69984) (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134641 () Bool)

(assert (=> b!134641 (= e!87691 (contains!886 (t!6137 lt!69984) (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41557 res!64742) b!134640))

(assert (= (and b!134640 (not res!64741)) b!134641))

(declare-fun m!160111 () Bool)

(assert (=> d!41557 m!160111))

(declare-fun m!160113 () Bool)

(assert (=> d!41557 m!160113))

(declare-fun m!160115 () Bool)

(assert (=> b!134641 m!160115))

(assert (=> b!133765 d!41557))

(declare-fun d!41559 () Bool)

(declare-fun e!87694 () Bool)

(assert (=> d!41559 e!87694))

(declare-fun res!64743 () Bool)

(assert (=> d!41559 (=> res!64743 e!87694)))

(declare-fun lt!70495 () Bool)

(assert (=> d!41559 (= res!64743 (not lt!70495))))

(declare-fun lt!70496 () Bool)

(assert (=> d!41559 (= lt!70495 lt!70496)))

(declare-fun lt!70497 () Unit!4141)

(declare-fun e!87693 () Unit!4141)

(assert (=> d!41559 (= lt!70497 e!87693)))

(declare-fun c!25068 () Bool)

(assert (=> d!41559 (= c!25068 lt!70496)))

(assert (=> d!41559 (= lt!70496 (containsKey!176 (toList!842 lt!69804) (select (arr!2252 lt!69441) #b00000000000000000000000000000000)))))

(assert (=> d!41559 (= (contains!884 lt!69804 (select (arr!2252 lt!69441) #b00000000000000000000000000000000)) lt!70495)))

(declare-fun b!134642 () Bool)

(declare-fun lt!70498 () Unit!4141)

(assert (=> b!134642 (= e!87693 lt!70498)))

(assert (=> b!134642 (= lt!70498 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69804) (select (arr!2252 lt!69441) #b00000000000000000000000000000000)))))

(assert (=> b!134642 (isDefined!125 (getValueByKey!173 (toList!842 lt!69804) (select (arr!2252 lt!69441) #b00000000000000000000000000000000)))))

(declare-fun b!134643 () Bool)

(declare-fun Unit!4226 () Unit!4141)

(assert (=> b!134643 (= e!87693 Unit!4226)))

(declare-fun b!134644 () Bool)

(assert (=> b!134644 (= e!87694 (isDefined!125 (getValueByKey!173 (toList!842 lt!69804) (select (arr!2252 lt!69441) #b00000000000000000000000000000000))))))

(assert (= (and d!41559 c!25068) b!134642))

(assert (= (and d!41559 (not c!25068)) b!134643))

(assert (= (and d!41559 (not res!64743)) b!134644))

(assert (=> d!41559 m!157625))

(declare-fun m!160117 () Bool)

(assert (=> d!41559 m!160117))

(assert (=> b!134642 m!157625))

(declare-fun m!160119 () Bool)

(assert (=> b!134642 m!160119))

(assert (=> b!134642 m!157625))

(declare-fun m!160121 () Bool)

(assert (=> b!134642 m!160121))

(assert (=> b!134642 m!160121))

(declare-fun m!160123 () Bool)

(assert (=> b!134642 m!160123))

(assert (=> b!134644 m!157625))

(assert (=> b!134644 m!160121))

(assert (=> b!134644 m!160121))

(assert (=> b!134644 m!160123))

(assert (=> b!133463 d!41559))

(declare-fun d!41561 () Bool)

(declare-fun res!64744 () Bool)

(declare-fun e!87695 () Bool)

(assert (=> d!41561 (=> res!64744 e!87695)))

(assert (=> d!41561 (= res!64744 (or ((_ is Nil!1691) lt!70138) ((_ is Nil!1691) (t!6137 lt!70138))))))

(assert (=> d!41561 (= (isStrictlySorted!309 lt!70138) e!87695)))

(declare-fun b!134645 () Bool)

(declare-fun e!87696 () Bool)

(assert (=> b!134645 (= e!87695 e!87696)))

(declare-fun res!64745 () Bool)

(assert (=> b!134645 (=> (not res!64745) (not e!87696))))

(assert (=> b!134645 (= res!64745 (bvslt (_1!1293 (h!2295 lt!70138)) (_1!1293 (h!2295 (t!6137 lt!70138)))))))

(declare-fun b!134646 () Bool)

(assert (=> b!134646 (= e!87696 (isStrictlySorted!309 (t!6137 lt!70138)))))

(assert (= (and d!41561 (not res!64744)) b!134645))

(assert (= (and b!134645 res!64745) b!134646))

(declare-fun m!160125 () Bool)

(assert (=> b!134646 m!160125))

(assert (=> d!41011 d!41561))

(declare-fun d!41563 () Bool)

(declare-fun res!64746 () Bool)

(declare-fun e!87697 () Bool)

(assert (=> d!41563 (=> res!64746 e!87697)))

(assert (=> d!41563 (= res!64746 (or ((_ is Nil!1691) (toList!842 lt!69341)) ((_ is Nil!1691) (t!6137 (toList!842 lt!69341)))))))

(assert (=> d!41563 (= (isStrictlySorted!309 (toList!842 lt!69341)) e!87697)))

(declare-fun b!134647 () Bool)

(declare-fun e!87698 () Bool)

(assert (=> b!134647 (= e!87697 e!87698)))

(declare-fun res!64747 () Bool)

(assert (=> b!134647 (=> (not res!64747) (not e!87698))))

(assert (=> b!134647 (= res!64747 (bvslt (_1!1293 (h!2295 (toList!842 lt!69341))) (_1!1293 (h!2295 (t!6137 (toList!842 lt!69341))))))))

(declare-fun b!134648 () Bool)

(assert (=> b!134648 (= e!87698 (isStrictlySorted!309 (t!6137 (toList!842 lt!69341))))))

(assert (= (and d!41563 (not res!64746)) b!134647))

(assert (= (and b!134647 res!64747) b!134648))

(declare-fun m!160127 () Bool)

(assert (=> b!134648 m!160127))

(assert (=> d!41011 d!41563))

(declare-fun d!41565 () Bool)

(assert (=> d!41565 (isDefined!125 (getValueByKey!173 (toList!842 lt!69605) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun lt!70499 () Unit!4141)

(assert (=> d!41565 (= lt!70499 (choose!831 (toList!842 lt!69605) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun e!87699 () Bool)

(assert (=> d!41565 e!87699))

(declare-fun res!64748 () Bool)

(assert (=> d!41565 (=> (not res!64748) (not e!87699))))

(assert (=> d!41565 (= res!64748 (isStrictlySorted!309 (toList!842 lt!69605)))))

(assert (=> d!41565 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69605) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!70499)))

(declare-fun b!134649 () Bool)

(assert (=> b!134649 (= e!87699 (containsKey!176 (toList!842 lt!69605) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!41565 res!64748) b!134649))

(assert (=> d!41565 m!157073))

(assert (=> d!41565 m!157073))

(assert (=> d!41565 m!158803))

(declare-fun m!160129 () Bool)

(assert (=> d!41565 m!160129))

(declare-fun m!160131 () Bool)

(assert (=> d!41565 m!160131))

(assert (=> b!134649 m!158799))

(assert (=> b!134033 d!41565))

(declare-fun d!41567 () Bool)

(assert (=> d!41567 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69605) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69605) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))))

(declare-fun bs!5624 () Bool)

(assert (= bs!5624 d!41567))

(assert (=> bs!5624 m!157073))

(declare-fun m!160133 () Bool)

(assert (=> bs!5624 m!160133))

(assert (=> b!134033 d!41567))

(assert (=> b!134033 d!41051))

(declare-fun d!41569 () Bool)

(assert (=> d!41569 (= (validKeyInArray!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)) (and (not (= (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133411 d!41569))

(declare-fun d!41571 () Bool)

(declare-fun lt!70500 () (_ BitVec 32))

(assert (=> d!41571 (and (bvsge lt!70500 #b00000000000000000000000000000000) (bvsle lt!70500 (bvsub (size!2521 lt!69456) (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001))))))

(declare-fun e!87700 () (_ BitVec 32))

(assert (=> d!41571 (= lt!70500 e!87700)))

(declare-fun c!25069 () Bool)

(assert (=> d!41571 (= c!25069 (bvsge (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001) (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001)))))

(assert (=> d!41571 (and (bvsle (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001) (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001)) (bvsge (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001) (size!2521 lt!69456)))))

(assert (=> d!41571 (= (arrayCountValidKeys!0 lt!69456 (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001) (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001)) lt!70500)))

(declare-fun b!134650 () Bool)

(declare-fun e!87701 () (_ BitVec 32))

(declare-fun call!14823 () (_ BitVec 32))

(assert (=> b!134650 (= e!87701 (bvadd #b00000000000000000000000000000001 call!14823))))

(declare-fun b!134651 () Bool)

(assert (=> b!134651 (= e!87701 call!14823)))

(declare-fun b!134652 () Bool)

(assert (=> b!134652 (= e!87700 e!87701)))

(declare-fun c!25070 () Bool)

(assert (=> b!134652 (= c!25070 (validKeyInArray!0 (select (arr!2252 lt!69456) (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001))))))

(declare-fun bm!14820 () Bool)

(assert (=> bm!14820 (= call!14823 (arrayCountValidKeys!0 lt!69456 (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001)))))

(declare-fun b!134653 () Bool)

(assert (=> b!134653 (= e!87700 #b00000000000000000000000000000000)))

(assert (= (and d!41571 c!25069) b!134653))

(assert (= (and d!41571 (not c!25069)) b!134652))

(assert (= (and b!134652 c!25070) b!134650))

(assert (= (and b!134652 (not c!25070)) b!134651))

(assert (= (or b!134650 b!134651) bm!14820))

(declare-fun m!160135 () Bool)

(assert (=> b!134652 m!160135))

(assert (=> b!134652 m!160135))

(declare-fun m!160137 () Bool)

(assert (=> b!134652 m!160137))

(declare-fun m!160139 () Bool)

(assert (=> bm!14820 m!160139))

(assert (=> bm!14722 d!41571))

(declare-fun d!41573 () Bool)

(assert (=> d!41573 (isDefined!125 (getValueByKey!173 (toList!842 lt!69373) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!70501 () Unit!4141)

(assert (=> d!41573 (= lt!70501 (choose!831 (toList!842 lt!69373) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!87702 () Bool)

(assert (=> d!41573 e!87702))

(declare-fun res!64749 () Bool)

(assert (=> d!41573 (=> (not res!64749) (not e!87702))))

(assert (=> d!41573 (= res!64749 (isStrictlySorted!309 (toList!842 lt!69373)))))

(assert (=> d!41573 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69373) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70501)))

(declare-fun b!134654 () Bool)

(assert (=> b!134654 (= e!87702 (containsKey!176 (toList!842 lt!69373) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41573 res!64749) b!134654))

(assert (=> d!41573 m!156675))

(assert (=> d!41573 m!156675))

(assert (=> d!41573 m!157401))

(declare-fun m!160141 () Bool)

(assert (=> d!41573 m!160141))

(declare-fun m!160143 () Bool)

(assert (=> d!41573 m!160143))

(assert (=> b!134654 m!157397))

(assert (=> b!133311 d!41573))

(declare-fun d!41575 () Bool)

(assert (=> d!41575 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69373) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69373) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun bs!5625 () Bool)

(assert (= bs!5625 d!41575))

(assert (=> bs!5625 m!156675))

(declare-fun m!160145 () Bool)

(assert (=> bs!5625 m!160145))

(assert (=> b!133311 d!41575))

(assert (=> b!133311 d!40617))

(declare-fun d!41577 () Bool)

(assert (=> d!41577 (= (apply!116 lt!69932 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1492 (getValueByKey!173 (toList!842 lt!69932) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5626 () Bool)

(assert (= bs!5626 d!41577))

(assert (=> bs!5626 m!156679))

(assert (=> bs!5626 m!159057))

(assert (=> bs!5626 m!159057))

(declare-fun m!160147 () Bool)

(assert (=> bs!5626 m!160147))

(assert (=> b!133680 d!41577))

(declare-fun d!41579 () Bool)

(declare-fun c!25071 () Bool)

(assert (=> d!41579 (= c!25071 ((_ is ValueCellFull!1094) (select (arr!2253 lt!69268) #b00000000000000000000000000000000)))))

(declare-fun e!87703 () V!3481)

(assert (=> d!41579 (= (get!1489 (select (arr!2253 lt!69268) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87703)))

(declare-fun b!134655 () Bool)

(assert (=> b!134655 (= e!87703 (get!1490 (select (arr!2253 lt!69268) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134656 () Bool)

(assert (=> b!134656 (= e!87703 (get!1491 (select (arr!2253 lt!69268) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41579 c!25071) b!134655))

(assert (= (and d!41579 (not c!25071)) b!134656))

(assert (=> b!134655 m!158039))

(assert (=> b!134655 m!156809))

(declare-fun m!160149 () Bool)

(assert (=> b!134655 m!160149))

(assert (=> b!134656 m!158039))

(assert (=> b!134656 m!156809))

(declare-fun m!160151 () Bool)

(assert (=> b!134656 m!160151))

(assert (=> b!133680 d!41579))

(assert (=> d!40913 d!40919))

(assert (=> d!40913 d!40921))

(declare-fun d!41581 () Bool)

(assert (=> d!41581 (= (apply!116 (+!169 lt!69526 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))) lt!69528) (apply!116 lt!69526 lt!69528))))

(assert (=> d!41581 true))

(declare-fun _$34!982 () Unit!4141)

(assert (=> d!41581 (= (choose!828 lt!69526 lt!69518 (minValue!2719 newMap!16) lt!69528) _$34!982)))

(declare-fun bs!5627 () Bool)

(assert (= bs!5627 d!41581))

(assert (=> bs!5627 m!156857))

(assert (=> bs!5627 m!156857))

(assert (=> bs!5627 m!156871))

(assert (=> bs!5627 m!156853))

(assert (=> d!40913 d!41581))

(assert (=> d!40913 d!40931))

(declare-fun d!41583 () Bool)

(declare-fun e!87705 () Bool)

(assert (=> d!41583 e!87705))

(declare-fun res!64750 () Bool)

(assert (=> d!41583 (=> res!64750 e!87705)))

(declare-fun lt!70502 () Bool)

(assert (=> d!41583 (= res!64750 (not lt!70502))))

(declare-fun lt!70503 () Bool)

(assert (=> d!41583 (= lt!70502 lt!70503)))

(declare-fun lt!70504 () Unit!4141)

(declare-fun e!87704 () Unit!4141)

(assert (=> d!41583 (= lt!70504 e!87704)))

(declare-fun c!25072 () Bool)

(assert (=> d!41583 (= c!25072 lt!70503)))

(assert (=> d!41583 (= lt!70503 (containsKey!176 (toList!842 lt!69526) lt!69528))))

(assert (=> d!41583 (= (contains!884 lt!69526 lt!69528) lt!70502)))

(declare-fun b!134657 () Bool)

(declare-fun lt!70505 () Unit!4141)

(assert (=> b!134657 (= e!87704 lt!70505)))

(assert (=> b!134657 (= lt!70505 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69526) lt!69528))))

(assert (=> b!134657 (isDefined!125 (getValueByKey!173 (toList!842 lt!69526) lt!69528))))

(declare-fun b!134658 () Bool)

(declare-fun Unit!4227 () Unit!4141)

(assert (=> b!134658 (= e!87704 Unit!4227)))

(declare-fun b!134659 () Bool)

(assert (=> b!134659 (= e!87705 (isDefined!125 (getValueByKey!173 (toList!842 lt!69526) lt!69528)))))

(assert (= (and d!41583 c!25072) b!134657))

(assert (= (and d!41583 (not c!25072)) b!134658))

(assert (= (and d!41583 (not res!64750)) b!134659))

(declare-fun m!160153 () Bool)

(assert (=> d!41583 m!160153))

(declare-fun m!160155 () Bool)

(assert (=> b!134657 m!160155))

(assert (=> b!134657 m!158473))

(assert (=> b!134657 m!158473))

(declare-fun m!160157 () Bool)

(assert (=> b!134657 m!160157))

(assert (=> b!134659 m!158473))

(assert (=> b!134659 m!158473))

(assert (=> b!134659 m!160157))

(assert (=> d!40913 d!41583))

(assert (=> d!40737 d!40713))

(assert (=> d!40737 d!40729))

(declare-fun d!41585 () Bool)

(declare-fun e!87707 () Bool)

(assert (=> d!41585 e!87707))

(declare-fun res!64751 () Bool)

(assert (=> d!41585 (=> res!64751 e!87707)))

(declare-fun lt!70506 () Bool)

(assert (=> d!41585 (= res!64751 (not lt!70506))))

(declare-fun lt!70507 () Bool)

(assert (=> d!41585 (= lt!70506 lt!70507)))

(declare-fun lt!70508 () Unit!4141)

(declare-fun e!87706 () Unit!4141)

(assert (=> d!41585 (= lt!70508 e!87706)))

(declare-fun c!25073 () Bool)

(assert (=> d!41585 (= c!25073 lt!70507)))

(assert (=> d!41585 (= lt!70507 (containsKey!176 (toList!842 lt!69499) lt!69505))))

(assert (=> d!41585 (= (contains!884 lt!69499 lt!69505) lt!70506)))

(declare-fun b!134660 () Bool)

(declare-fun lt!70509 () Unit!4141)

(assert (=> b!134660 (= e!87706 lt!70509)))

(assert (=> b!134660 (= lt!70509 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69499) lt!69505))))

(assert (=> b!134660 (isDefined!125 (getValueByKey!173 (toList!842 lt!69499) lt!69505))))

(declare-fun b!134661 () Bool)

(declare-fun Unit!4228 () Unit!4141)

(assert (=> b!134661 (= e!87706 Unit!4228)))

(declare-fun b!134662 () Bool)

(assert (=> b!134662 (= e!87707 (isDefined!125 (getValueByKey!173 (toList!842 lt!69499) lt!69505)))))

(assert (= (and d!41585 c!25073) b!134660))

(assert (= (and d!41585 (not c!25073)) b!134661))

(assert (= (and d!41585 (not res!64751)) b!134662))

(declare-fun m!160159 () Bool)

(assert (=> d!41585 m!160159))

(declare-fun m!160161 () Bool)

(assert (=> b!134660 m!160161))

(assert (=> b!134660 m!157773))

(assert (=> b!134660 m!157773))

(declare-fun m!160163 () Bool)

(assert (=> b!134660 m!160163))

(assert (=> b!134662 m!157773))

(assert (=> b!134662 m!157773))

(assert (=> b!134662 m!160163))

(assert (=> d!40737 d!41585))

(declare-fun d!41587 () Bool)

(assert (=> d!41587 (= (apply!116 (+!169 lt!69499 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))) lt!69505) (apply!116 lt!69499 lt!69505))))

(assert (=> d!41587 true))

(declare-fun _$34!983 () Unit!4141)

(assert (=> d!41587 (= (choose!828 lt!69499 lt!69497 (minValue!2719 newMap!16) lt!69505) _$34!983)))

(declare-fun bs!5628 () Bool)

(assert (= bs!5628 d!41587))

(assert (=> bs!5628 m!156789))

(assert (=> bs!5628 m!156789))

(assert (=> bs!5628 m!156791))

(assert (=> bs!5628 m!156775))

(assert (=> d!40737 d!41587))

(assert (=> d!40737 d!40723))

(assert (=> d!40821 d!40823))

(assert (=> d!40821 d!40479))

(assert (=> d!40821 d!40825))

(declare-fun d!41589 () Bool)

(declare-fun lt!70510 () (_ BitVec 32))

(assert (=> d!41589 (and (bvsge lt!70510 #b00000000000000000000000000000000) (bvsle lt!70510 (bvsub (size!2521 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun e!87708 () (_ BitVec 32))

(assert (=> d!41589 (= lt!70510 e!87708)))

(declare-fun c!25074 () Bool)

(assert (=> d!41589 (= c!25074 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!41589 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2521 (_keys!4613 newMap!16)) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!41589 (= (arrayCountValidKeys!0 (_keys!4613 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))) lt!70510)))

(declare-fun b!134663 () Bool)

(declare-fun e!87709 () (_ BitVec 32))

(declare-fun call!14824 () (_ BitVec 32))

(assert (=> b!134663 (= e!87709 (bvadd #b00000000000000000000000000000001 call!14824))))

(declare-fun b!134664 () Bool)

(assert (=> b!134664 (= e!87709 call!14824)))

(declare-fun b!134665 () Bool)

(assert (=> b!134665 (= e!87708 e!87709)))

(declare-fun c!25075 () Bool)

(assert (=> b!134665 (= c!25075 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!14821 () Bool)

(assert (=> bm!14821 (= call!14824 (arrayCountValidKeys!0 (_keys!4613 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!134666 () Bool)

(assert (=> b!134666 (= e!87708 #b00000000000000000000000000000000)))

(assert (= (and d!41589 c!25074) b!134666))

(assert (= (and d!41589 (not c!25074)) b!134665))

(assert (= (and b!134665 c!25075) b!134663))

(assert (= (and b!134665 (not c!25075)) b!134664))

(assert (= (or b!134663 b!134664) bm!14821))

(declare-fun m!160165 () Bool)

(assert (=> b!134665 m!160165))

(assert (=> b!134665 m!160165))

(declare-fun m!160167 () Bool)

(assert (=> b!134665 m!160167))

(declare-fun m!160169 () Bool)

(assert (=> bm!14821 m!160169))

(assert (=> bm!14779 d!41589))

(declare-fun d!41591 () Bool)

(assert (=> d!41591 (isDefined!125 (getValueByKey!173 (toList!842 lt!69504) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70511 () Unit!4141)

(assert (=> d!41591 (= lt!70511 (choose!831 (toList!842 lt!69504) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87710 () Bool)

(assert (=> d!41591 e!87710))

(declare-fun res!64752 () Bool)

(assert (=> d!41591 (=> (not res!64752) (not e!87710))))

(assert (=> d!41591 (= res!64752 (isStrictlySorted!309 (toList!842 lt!69504)))))

(assert (=> d!41591 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69504) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70511)))

(declare-fun b!134667 () Bool)

(assert (=> b!134667 (= e!87710 (containsKey!176 (toList!842 lt!69504) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41591 res!64752) b!134667))

(assert (=> d!41591 m!157227))

(assert (=> d!41591 m!157227))

(assert (=> d!41591 m!157895))

(declare-fun m!160171 () Bool)

(assert (=> d!41591 m!160171))

(declare-fun m!160173 () Bool)

(assert (=> d!41591 m!160173))

(assert (=> b!134667 m!157891))

(assert (=> b!133574 d!41591))

(declare-fun d!41593 () Bool)

(assert (=> d!41593 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69504) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69504) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5629 () Bool)

(assert (= bs!5629 d!41593))

(assert (=> bs!5629 m!157227))

(declare-fun m!160175 () Bool)

(assert (=> bs!5629 m!160175))

(assert (=> b!133574 d!41593))

(declare-fun b!134669 () Bool)

(declare-fun e!87711 () Option!179)

(declare-fun e!87712 () Option!179)

(assert (=> b!134669 (= e!87711 e!87712)))

(declare-fun c!25077 () Bool)

(assert (=> b!134669 (= c!25077 (and ((_ is Cons!1690) (toList!842 lt!69504)) (not (= (_1!1293 (h!2295 (toList!842 lt!69504))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134668 () Bool)

(assert (=> b!134668 (= e!87711 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69504)))))))

(declare-fun d!41595 () Bool)

(declare-fun c!25076 () Bool)

(assert (=> d!41595 (= c!25076 (and ((_ is Cons!1690) (toList!842 lt!69504)) (= (_1!1293 (h!2295 (toList!842 lt!69504))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41595 (= (getValueByKey!173 (toList!842 lt!69504) #b1000000000000000000000000000000000000000000000000000000000000000) e!87711)))

(declare-fun b!134671 () Bool)

(assert (=> b!134671 (= e!87712 None!177)))

(declare-fun b!134670 () Bool)

(assert (=> b!134670 (= e!87712 (getValueByKey!173 (t!6137 (toList!842 lt!69504)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41595 c!25076) b!134668))

(assert (= (and d!41595 (not c!25076)) b!134669))

(assert (= (and b!134669 c!25077) b!134670))

(assert (= (and b!134669 (not c!25077)) b!134671))

(declare-fun m!160177 () Bool)

(assert (=> b!134670 m!160177))

(assert (=> b!133574 d!41595))

(declare-fun d!41597 () Bool)

(assert (=> d!41597 (= (apply!116 (+!169 lt!69799 (tuple2!2565 lt!69797 (minValue!2719 newMap!16))) lt!69805) (apply!116 lt!69799 lt!69805))))

(declare-fun lt!70512 () Unit!4141)

(assert (=> d!41597 (= lt!70512 (choose!828 lt!69799 lt!69797 (minValue!2719 newMap!16) lt!69805))))

(declare-fun e!87713 () Bool)

(assert (=> d!41597 e!87713))

(declare-fun res!64753 () Bool)

(assert (=> d!41597 (=> (not res!64753) (not e!87713))))

(assert (=> d!41597 (= res!64753 (contains!884 lt!69799 lt!69805))))

(assert (=> d!41597 (= (addApplyDifferent!92 lt!69799 lt!69797 (minValue!2719 newMap!16) lt!69805) lt!70512)))

(declare-fun b!134672 () Bool)

(assert (=> b!134672 (= e!87713 (not (= lt!69805 lt!69797)))))

(assert (= (and d!41597 res!64753) b!134672))

(assert (=> d!41597 m!157643))

(assert (=> d!41597 m!157645))

(assert (=> d!41597 m!157629))

(declare-fun m!160179 () Bool)

(assert (=> d!41597 m!160179))

(declare-fun m!160181 () Bool)

(assert (=> d!41597 m!160181))

(assert (=> d!41597 m!157643))

(assert (=> b!133451 d!41597))

(declare-fun d!41599 () Bool)

(assert (=> d!41599 (contains!884 (+!169 lt!69795 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16))) lt!69794)))

(declare-fun lt!70513 () Unit!4141)

(assert (=> d!41599 (= lt!70513 (choose!829 lt!69795 lt!69810 (zeroValue!2719 newMap!16) lt!69794))))

(assert (=> d!41599 (contains!884 lt!69795 lt!69794)))

(assert (=> d!41599 (= (addStillContains!92 lt!69795 lt!69810 (zeroValue!2719 newMap!16) lt!69794) lt!70513)))

(declare-fun bs!5630 () Bool)

(assert (= bs!5630 d!41599))

(assert (=> bs!5630 m!157655))

(assert (=> bs!5630 m!157655))

(assert (=> bs!5630 m!157657))

(declare-fun m!160183 () Bool)

(assert (=> bs!5630 m!160183))

(declare-fun m!160185 () Bool)

(assert (=> bs!5630 m!160185))

(assert (=> b!133451 d!41599))

(declare-fun d!41601 () Bool)

(declare-fun e!87715 () Bool)

(assert (=> d!41601 e!87715))

(declare-fun res!64754 () Bool)

(assert (=> d!41601 (=> res!64754 e!87715)))

(declare-fun lt!70514 () Bool)

(assert (=> d!41601 (= res!64754 (not lt!70514))))

(declare-fun lt!70515 () Bool)

(assert (=> d!41601 (= lt!70514 lt!70515)))

(declare-fun lt!70516 () Unit!4141)

(declare-fun e!87714 () Unit!4141)

(assert (=> d!41601 (= lt!70516 e!87714)))

(declare-fun c!25078 () Bool)

(assert (=> d!41601 (= c!25078 lt!70515)))

(assert (=> d!41601 (= lt!70515 (containsKey!176 (toList!842 (+!169 lt!69795 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16)))) lt!69794))))

(assert (=> d!41601 (= (contains!884 (+!169 lt!69795 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16))) lt!69794) lt!70514)))

(declare-fun b!134673 () Bool)

(declare-fun lt!70517 () Unit!4141)

(assert (=> b!134673 (= e!87714 lt!70517)))

(assert (=> b!134673 (= lt!70517 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69795 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16)))) lt!69794))))

(assert (=> b!134673 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69795 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16)))) lt!69794))))

(declare-fun b!134674 () Bool)

(declare-fun Unit!4229 () Unit!4141)

(assert (=> b!134674 (= e!87714 Unit!4229)))

(declare-fun b!134675 () Bool)

(assert (=> b!134675 (= e!87715 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69795 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16)))) lt!69794)))))

(assert (= (and d!41601 c!25078) b!134673))

(assert (= (and d!41601 (not c!25078)) b!134674))

(assert (= (and d!41601 (not res!64754)) b!134675))

(declare-fun m!160187 () Bool)

(assert (=> d!41601 m!160187))

(declare-fun m!160189 () Bool)

(assert (=> b!134673 m!160189))

(declare-fun m!160191 () Bool)

(assert (=> b!134673 m!160191))

(assert (=> b!134673 m!160191))

(declare-fun m!160193 () Bool)

(assert (=> b!134673 m!160193))

(assert (=> b!134675 m!160191))

(assert (=> b!134675 m!160191))

(assert (=> b!134675 m!160193))

(assert (=> b!133451 d!41601))

(declare-fun d!41603 () Bool)

(assert (=> d!41603 (= (apply!116 (+!169 lt!69799 (tuple2!2565 lt!69797 (minValue!2719 newMap!16))) lt!69805) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69799 (tuple2!2565 lt!69797 (minValue!2719 newMap!16)))) lt!69805)))))

(declare-fun bs!5631 () Bool)

(assert (= bs!5631 d!41603))

(declare-fun m!160195 () Bool)

(assert (=> bs!5631 m!160195))

(assert (=> bs!5631 m!160195))

(declare-fun m!160197 () Bool)

(assert (=> bs!5631 m!160197))

(assert (=> b!133451 d!41603))

(declare-fun d!41605 () Bool)

(declare-fun e!87716 () Bool)

(assert (=> d!41605 e!87716))

(declare-fun res!64756 () Bool)

(assert (=> d!41605 (=> (not res!64756) (not e!87716))))

(declare-fun lt!70520 () ListLongMap!1653)

(assert (=> d!41605 (= res!64756 (contains!884 lt!70520 (_1!1293 (tuple2!2565 lt!69797 (minValue!2719 newMap!16)))))))

(declare-fun lt!70521 () List!1694)

(assert (=> d!41605 (= lt!70520 (ListLongMap!1654 lt!70521))))

(declare-fun lt!70518 () Unit!4141)

(declare-fun lt!70519 () Unit!4141)

(assert (=> d!41605 (= lt!70518 lt!70519)))

(assert (=> d!41605 (= (getValueByKey!173 lt!70521 (_1!1293 (tuple2!2565 lt!69797 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69797 (minValue!2719 newMap!16)))))))

(assert (=> d!41605 (= lt!70519 (lemmaContainsTupThenGetReturnValue!88 lt!70521 (_1!1293 (tuple2!2565 lt!69797 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69797 (minValue!2719 newMap!16)))))))

(assert (=> d!41605 (= lt!70521 (insertStrictlySorted!91 (toList!842 lt!69799) (_1!1293 (tuple2!2565 lt!69797 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69797 (minValue!2719 newMap!16)))))))

(assert (=> d!41605 (= (+!169 lt!69799 (tuple2!2565 lt!69797 (minValue!2719 newMap!16))) lt!70520)))

(declare-fun b!134676 () Bool)

(declare-fun res!64755 () Bool)

(assert (=> b!134676 (=> (not res!64755) (not e!87716))))

(assert (=> b!134676 (= res!64755 (= (getValueByKey!173 (toList!842 lt!70520) (_1!1293 (tuple2!2565 lt!69797 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69797 (minValue!2719 newMap!16))))))))

(declare-fun b!134677 () Bool)

(assert (=> b!134677 (= e!87716 (contains!886 (toList!842 lt!70520) (tuple2!2565 lt!69797 (minValue!2719 newMap!16))))))

(assert (= (and d!41605 res!64756) b!134676))

(assert (= (and b!134676 res!64755) b!134677))

(declare-fun m!160199 () Bool)

(assert (=> d!41605 m!160199))

(declare-fun m!160201 () Bool)

(assert (=> d!41605 m!160201))

(declare-fun m!160203 () Bool)

(assert (=> d!41605 m!160203))

(declare-fun m!160205 () Bool)

(assert (=> d!41605 m!160205))

(declare-fun m!160207 () Bool)

(assert (=> b!134676 m!160207))

(declare-fun m!160209 () Bool)

(assert (=> b!134677 m!160209))

(assert (=> b!133451 d!41605))

(declare-fun d!41607 () Bool)

(assert (=> d!41607 (= (apply!116 (+!169 lt!69801 (tuple2!2565 lt!69793 (minValue!2719 newMap!16))) lt!69803) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69801 (tuple2!2565 lt!69793 (minValue!2719 newMap!16)))) lt!69803)))))

(declare-fun bs!5632 () Bool)

(assert (= bs!5632 d!41607))

(declare-fun m!160211 () Bool)

(assert (=> bs!5632 m!160211))

(assert (=> bs!5632 m!160211))

(declare-fun m!160213 () Bool)

(assert (=> bs!5632 m!160213))

(assert (=> b!133451 d!41607))

(declare-fun d!41609 () Bool)

(assert (=> d!41609 (= (apply!116 (+!169 lt!69813 (tuple2!2565 lt!69802 (zeroValue!2719 newMap!16))) lt!69798) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69813 (tuple2!2565 lt!69802 (zeroValue!2719 newMap!16)))) lt!69798)))))

(declare-fun bs!5633 () Bool)

(assert (= bs!5633 d!41609))

(declare-fun m!160215 () Bool)

(assert (=> bs!5633 m!160215))

(assert (=> bs!5633 m!160215))

(declare-fun m!160217 () Bool)

(assert (=> bs!5633 m!160217))

(assert (=> b!133451 d!41609))

(declare-fun d!41611 () Bool)

(assert (=> d!41611 (= (apply!116 (+!169 lt!69813 (tuple2!2565 lt!69802 (zeroValue!2719 newMap!16))) lt!69798) (apply!116 lt!69813 lt!69798))))

(declare-fun lt!70522 () Unit!4141)

(assert (=> d!41611 (= lt!70522 (choose!828 lt!69813 lt!69802 (zeroValue!2719 newMap!16) lt!69798))))

(declare-fun e!87717 () Bool)

(assert (=> d!41611 e!87717))

(declare-fun res!64757 () Bool)

(assert (=> d!41611 (=> (not res!64757) (not e!87717))))

(assert (=> d!41611 (= res!64757 (contains!884 lt!69813 lt!69798))))

(assert (=> d!41611 (= (addApplyDifferent!92 lt!69813 lt!69802 (zeroValue!2719 newMap!16) lt!69798) lt!70522)))

(declare-fun b!134678 () Bool)

(assert (=> b!134678 (= e!87717 (not (= lt!69798 lt!69802)))))

(assert (= (and d!41611 res!64757) b!134678))

(assert (=> d!41611 m!157635))

(assert (=> d!41611 m!157659))

(assert (=> d!41611 m!157639))

(declare-fun m!160219 () Bool)

(assert (=> d!41611 m!160219))

(declare-fun m!160221 () Bool)

(assert (=> d!41611 m!160221))

(assert (=> d!41611 m!157635))

(assert (=> b!133451 d!41611))

(declare-fun d!41613 () Bool)

(assert (=> d!41613 (= (apply!116 lt!69801 lt!69803) (get!1492 (getValueByKey!173 (toList!842 lt!69801) lt!69803)))))

(declare-fun bs!5634 () Bool)

(assert (= bs!5634 d!41613))

(declare-fun m!160223 () Bool)

(assert (=> bs!5634 m!160223))

(assert (=> bs!5634 m!160223))

(declare-fun m!160225 () Bool)

(assert (=> bs!5634 m!160225))

(assert (=> b!133451 d!41613))

(declare-fun d!41615 () Bool)

(assert (=> d!41615 (= (apply!116 (+!169 lt!69801 (tuple2!2565 lt!69793 (minValue!2719 newMap!16))) lt!69803) (apply!116 lt!69801 lt!69803))))

(declare-fun lt!70523 () Unit!4141)

(assert (=> d!41615 (= lt!70523 (choose!828 lt!69801 lt!69793 (minValue!2719 newMap!16) lt!69803))))

(declare-fun e!87718 () Bool)

(assert (=> d!41615 e!87718))

(declare-fun res!64758 () Bool)

(assert (=> d!41615 (=> (not res!64758) (not e!87718))))

(assert (=> d!41615 (= res!64758 (contains!884 lt!69801 lt!69803))))

(assert (=> d!41615 (= (addApplyDifferent!92 lt!69801 lt!69793 (minValue!2719 newMap!16) lt!69803) lt!70523)))

(declare-fun b!134679 () Bool)

(assert (=> b!134679 (= e!87718 (not (= lt!69803 lt!69793)))))

(assert (= (and d!41615 res!64758) b!134679))

(assert (=> d!41615 m!157637))

(assert (=> d!41615 m!157651))

(assert (=> d!41615 m!157633))

(declare-fun m!160227 () Bool)

(assert (=> d!41615 m!160227))

(declare-fun m!160229 () Bool)

(assert (=> d!41615 m!160229))

(assert (=> d!41615 m!157637))

(assert (=> b!133451 d!41615))

(declare-fun d!41617 () Bool)

(declare-fun e!87719 () Bool)

(assert (=> d!41617 e!87719))

(declare-fun res!64760 () Bool)

(assert (=> d!41617 (=> (not res!64760) (not e!87719))))

(declare-fun lt!70526 () ListLongMap!1653)

(assert (=> d!41617 (= res!64760 (contains!884 lt!70526 (_1!1293 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70527 () List!1694)

(assert (=> d!41617 (= lt!70526 (ListLongMap!1654 lt!70527))))

(declare-fun lt!70524 () Unit!4141)

(declare-fun lt!70525 () Unit!4141)

(assert (=> d!41617 (= lt!70524 lt!70525)))

(assert (=> d!41617 (= (getValueByKey!173 lt!70527 (_1!1293 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41617 (= lt!70525 (lemmaContainsTupThenGetReturnValue!88 lt!70527 (_1!1293 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41617 (= lt!70527 (insertStrictlySorted!91 (toList!842 lt!69795) (_1!1293 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41617 (= (+!169 lt!69795 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16))) lt!70526)))

(declare-fun b!134680 () Bool)

(declare-fun res!64759 () Bool)

(assert (=> b!134680 (=> (not res!64759) (not e!87719))))

(assert (=> b!134680 (= res!64759 (= (getValueByKey!173 (toList!842 lt!70526) (_1!1293 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134681 () Bool)

(assert (=> b!134681 (= e!87719 (contains!886 (toList!842 lt!70526) (tuple2!2565 lt!69810 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41617 res!64760) b!134680))

(assert (= (and b!134680 res!64759) b!134681))

(declare-fun m!160231 () Bool)

(assert (=> d!41617 m!160231))

(declare-fun m!160233 () Bool)

(assert (=> d!41617 m!160233))

(declare-fun m!160235 () Bool)

(assert (=> d!41617 m!160235))

(declare-fun m!160237 () Bool)

(assert (=> d!41617 m!160237))

(declare-fun m!160239 () Bool)

(assert (=> b!134680 m!160239))

(declare-fun m!160241 () Bool)

(assert (=> b!134681 m!160241))

(assert (=> b!133451 d!41617))

(declare-fun d!41619 () Bool)

(declare-fun e!87720 () Bool)

(assert (=> d!41619 e!87720))

(declare-fun res!64762 () Bool)

(assert (=> d!41619 (=> (not res!64762) (not e!87720))))

(declare-fun lt!70530 () ListLongMap!1653)

(assert (=> d!41619 (= res!64762 (contains!884 lt!70530 (_1!1293 (tuple2!2565 lt!69802 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70531 () List!1694)

(assert (=> d!41619 (= lt!70530 (ListLongMap!1654 lt!70531))))

(declare-fun lt!70528 () Unit!4141)

(declare-fun lt!70529 () Unit!4141)

(assert (=> d!41619 (= lt!70528 lt!70529)))

(assert (=> d!41619 (= (getValueByKey!173 lt!70531 (_1!1293 (tuple2!2565 lt!69802 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69802 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41619 (= lt!70529 (lemmaContainsTupThenGetReturnValue!88 lt!70531 (_1!1293 (tuple2!2565 lt!69802 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69802 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41619 (= lt!70531 (insertStrictlySorted!91 (toList!842 lt!69813) (_1!1293 (tuple2!2565 lt!69802 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69802 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41619 (= (+!169 lt!69813 (tuple2!2565 lt!69802 (zeroValue!2719 newMap!16))) lt!70530)))

(declare-fun b!134682 () Bool)

(declare-fun res!64761 () Bool)

(assert (=> b!134682 (=> (not res!64761) (not e!87720))))

(assert (=> b!134682 (= res!64761 (= (getValueByKey!173 (toList!842 lt!70530) (_1!1293 (tuple2!2565 lt!69802 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69802 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134683 () Bool)

(assert (=> b!134683 (= e!87720 (contains!886 (toList!842 lt!70530) (tuple2!2565 lt!69802 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41619 res!64762) b!134682))

(assert (= (and b!134682 res!64761) b!134683))

(declare-fun m!160243 () Bool)

(assert (=> d!41619 m!160243))

(declare-fun m!160245 () Bool)

(assert (=> d!41619 m!160245))

(declare-fun m!160247 () Bool)

(assert (=> d!41619 m!160247))

(declare-fun m!160249 () Bool)

(assert (=> d!41619 m!160249))

(declare-fun m!160251 () Bool)

(assert (=> b!134682 m!160251))

(declare-fun m!160253 () Bool)

(assert (=> b!134683 m!160253))

(assert (=> b!133451 d!41619))

(declare-fun b!134684 () Bool)

(assert (=> b!134684 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 lt!69441)))))

(assert (=> b!134684 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 lt!69466)))))

(declare-fun lt!70536 () ListLongMap!1653)

(declare-fun e!87727 () Bool)

(assert (=> b!134684 (= e!87727 (= (apply!116 lt!70536 (select (arr!2252 lt!69441) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 lt!69466) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134685 () Bool)

(declare-fun res!64765 () Bool)

(declare-fun e!87725 () Bool)

(assert (=> b!134685 (=> (not res!64765) (not e!87725))))

(assert (=> b!134685 (= res!64765 (not (contains!884 lt!70536 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134686 () Bool)

(declare-fun e!87722 () Bool)

(assert (=> b!134686 (= e!87722 (validKeyInArray!0 (select (arr!2252 lt!69441) #b00000000000000000000000000000000)))))

(assert (=> b!134686 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134687 () Bool)

(declare-fun e!87723 () Bool)

(declare-fun e!87724 () Bool)

(assert (=> b!134687 (= e!87723 e!87724)))

(declare-fun c!25082 () Bool)

(assert (=> b!134687 (= c!25082 (bvslt #b00000000000000000000000000000000 (size!2521 lt!69441)))))

(declare-fun b!134688 () Bool)

(assert (=> b!134688 (= e!87724 (= lt!70536 (getCurrentListMapNoExtraKeys!136 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun bm!14822 () Bool)

(declare-fun call!14825 () ListLongMap!1653)

(assert (=> bm!14822 (= call!14825 (getCurrentListMapNoExtraKeys!136 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!134689 () Bool)

(declare-fun e!87721 () ListLongMap!1653)

(assert (=> b!134689 (= e!87721 call!14825)))

(declare-fun b!134690 () Bool)

(declare-fun e!87726 () ListLongMap!1653)

(assert (=> b!134690 (= e!87726 e!87721)))

(declare-fun c!25079 () Bool)

(assert (=> b!134690 (= c!25079 (validKeyInArray!0 (select (arr!2252 lt!69441) #b00000000000000000000000000000000)))))

(declare-fun d!41621 () Bool)

(assert (=> d!41621 e!87725))

(declare-fun res!64763 () Bool)

(assert (=> d!41621 (=> (not res!64763) (not e!87725))))

(assert (=> d!41621 (= res!64763 (not (contains!884 lt!70536 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41621 (= lt!70536 e!87726)))

(declare-fun c!25080 () Bool)

(assert (=> d!41621 (= c!25080 (bvsge #b00000000000000000000000000000000 (size!2521 lt!69441)))))

(assert (=> d!41621 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!41621 (= (getCurrentListMapNoExtraKeys!136 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!70536)))

(declare-fun b!134691 () Bool)

(assert (=> b!134691 (= e!87723 e!87727)))

(assert (=> b!134691 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 lt!69441)))))

(declare-fun res!64764 () Bool)

(assert (=> b!134691 (= res!64764 (contains!884 lt!70536 (select (arr!2252 lt!69441) #b00000000000000000000000000000000)))))

(assert (=> b!134691 (=> (not res!64764) (not e!87727))))

(declare-fun b!134692 () Bool)

(assert (=> b!134692 (= e!87726 (ListLongMap!1654 Nil!1691))))

(declare-fun b!134693 () Bool)

(assert (=> b!134693 (= e!87724 (isEmpty!415 lt!70536))))

(declare-fun b!134694 () Bool)

(declare-fun lt!70533 () Unit!4141)

(declare-fun lt!70537 () Unit!4141)

(assert (=> b!134694 (= lt!70533 lt!70537)))

(declare-fun lt!70538 () (_ BitVec 64))

(declare-fun lt!70535 () V!3481)

(declare-fun lt!70532 () ListLongMap!1653)

(declare-fun lt!70534 () (_ BitVec 64))

(assert (=> b!134694 (not (contains!884 (+!169 lt!70532 (tuple2!2565 lt!70534 lt!70535)) lt!70538))))

(assert (=> b!134694 (= lt!70537 (addStillNotContains!63 lt!70532 lt!70534 lt!70535 lt!70538))))

(assert (=> b!134694 (= lt!70538 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134694 (= lt!70535 (get!1489 (select (arr!2253 lt!69466) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134694 (= lt!70534 (select (arr!2252 lt!69441) #b00000000000000000000000000000000))))

(assert (=> b!134694 (= lt!70532 call!14825)))

(assert (=> b!134694 (= e!87721 (+!169 call!14825 (tuple2!2565 (select (arr!2252 lt!69441) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 lt!69466) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134695 () Bool)

(assert (=> b!134695 (= e!87725 e!87723)))

(declare-fun c!25081 () Bool)

(assert (=> b!134695 (= c!25081 e!87722)))

(declare-fun res!64766 () Bool)

(assert (=> b!134695 (=> (not res!64766) (not e!87722))))

(assert (=> b!134695 (= res!64766 (bvslt #b00000000000000000000000000000000 (size!2521 lt!69441)))))

(assert (= (and d!41621 c!25080) b!134692))

(assert (= (and d!41621 (not c!25080)) b!134690))

(assert (= (and b!134690 c!25079) b!134694))

(assert (= (and b!134690 (not c!25079)) b!134689))

(assert (= (or b!134694 b!134689) bm!14822))

(assert (= (and d!41621 res!64763) b!134685))

(assert (= (and b!134685 res!64765) b!134695))

(assert (= (and b!134695 res!64766) b!134686))

(assert (= (and b!134695 c!25081) b!134691))

(assert (= (and b!134695 (not c!25081)) b!134687))

(assert (= (and b!134691 res!64764) b!134684))

(assert (= (and b!134687 c!25082) b!134688))

(assert (= (and b!134687 (not c!25082)) b!134693))

(declare-fun b_lambda!6025 () Bool)

(assert (=> (not b_lambda!6025) (not b!134684)))

(assert (=> b!134684 t!6147))

(declare-fun b_and!8361 () Bool)

(assert (= b_and!8357 (and (=> t!6147 result!3993) b_and!8361)))

(assert (=> b!134684 t!6149))

(declare-fun b_and!8363 () Bool)

(assert (= b_and!8359 (and (=> t!6149 result!3995) b_and!8363)))

(declare-fun b_lambda!6027 () Bool)

(assert (=> (not b_lambda!6027) (not b!134694)))

(assert (=> b!134694 t!6147))

(declare-fun b_and!8365 () Bool)

(assert (= b_and!8361 (and (=> t!6147 result!3993) b_and!8365)))

(assert (=> b!134694 t!6149))

(declare-fun b_and!8367 () Bool)

(assert (= b_and!8363 (and (=> t!6149 result!3995) b_and!8367)))

(declare-fun m!160255 () Bool)

(assert (=> b!134693 m!160255))

(assert (=> b!134690 m!157625))

(assert (=> b!134690 m!157625))

(assert (=> b!134690 m!157627))

(assert (=> b!134686 m!157625))

(assert (=> b!134686 m!157625))

(assert (=> b!134686 m!157627))

(declare-fun m!160257 () Bool)

(assert (=> b!134688 m!160257))

(declare-fun m!160259 () Bool)

(assert (=> b!134685 m!160259))

(assert (=> b!134694 m!157661))

(assert (=> b!134694 m!156809))

(assert (=> b!134694 m!157663))

(declare-fun m!160261 () Bool)

(assert (=> b!134694 m!160261))

(declare-fun m!160263 () Bool)

(assert (=> b!134694 m!160263))

(assert (=> b!134694 m!157661))

(declare-fun m!160265 () Bool)

(assert (=> b!134694 m!160265))

(assert (=> b!134694 m!160261))

(declare-fun m!160267 () Bool)

(assert (=> b!134694 m!160267))

(assert (=> b!134694 m!157625))

(assert (=> b!134694 m!156809))

(assert (=> b!134691 m!157625))

(assert (=> b!134691 m!157625))

(declare-fun m!160269 () Bool)

(assert (=> b!134691 m!160269))

(declare-fun m!160271 () Bool)

(assert (=> d!41621 m!160271))

(assert (=> d!41621 m!156651))

(assert (=> bm!14822 m!160257))

(assert (=> b!134684 m!157661))

(assert (=> b!134684 m!156809))

(assert (=> b!134684 m!157663))

(assert (=> b!134684 m!157661))

(assert (=> b!134684 m!157625))

(declare-fun m!160273 () Bool)

(assert (=> b!134684 m!160273))

(assert (=> b!134684 m!157625))

(assert (=> b!134684 m!156809))

(assert (=> b!133451 d!41621))

(declare-fun d!41623 () Bool)

(declare-fun e!87728 () Bool)

(assert (=> d!41623 e!87728))

(declare-fun res!64768 () Bool)

(assert (=> d!41623 (=> (not res!64768) (not e!87728))))

(declare-fun lt!70541 () ListLongMap!1653)

(assert (=> d!41623 (= res!64768 (contains!884 lt!70541 (_1!1293 (tuple2!2565 lt!69793 (minValue!2719 newMap!16)))))))

(declare-fun lt!70542 () List!1694)

(assert (=> d!41623 (= lt!70541 (ListLongMap!1654 lt!70542))))

(declare-fun lt!70539 () Unit!4141)

(declare-fun lt!70540 () Unit!4141)

(assert (=> d!41623 (= lt!70539 lt!70540)))

(assert (=> d!41623 (= (getValueByKey!173 lt!70542 (_1!1293 (tuple2!2565 lt!69793 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69793 (minValue!2719 newMap!16)))))))

(assert (=> d!41623 (= lt!70540 (lemmaContainsTupThenGetReturnValue!88 lt!70542 (_1!1293 (tuple2!2565 lt!69793 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69793 (minValue!2719 newMap!16)))))))

(assert (=> d!41623 (= lt!70542 (insertStrictlySorted!91 (toList!842 lt!69801) (_1!1293 (tuple2!2565 lt!69793 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69793 (minValue!2719 newMap!16)))))))

(assert (=> d!41623 (= (+!169 lt!69801 (tuple2!2565 lt!69793 (minValue!2719 newMap!16))) lt!70541)))

(declare-fun b!134696 () Bool)

(declare-fun res!64767 () Bool)

(assert (=> b!134696 (=> (not res!64767) (not e!87728))))

(assert (=> b!134696 (= res!64767 (= (getValueByKey!173 (toList!842 lt!70541) (_1!1293 (tuple2!2565 lt!69793 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69793 (minValue!2719 newMap!16))))))))

(declare-fun b!134697 () Bool)

(assert (=> b!134697 (= e!87728 (contains!886 (toList!842 lt!70541) (tuple2!2565 lt!69793 (minValue!2719 newMap!16))))))

(assert (= (and d!41623 res!64768) b!134696))

(assert (= (and b!134696 res!64767) b!134697))

(declare-fun m!160275 () Bool)

(assert (=> d!41623 m!160275))

(declare-fun m!160277 () Bool)

(assert (=> d!41623 m!160277))

(declare-fun m!160279 () Bool)

(assert (=> d!41623 m!160279))

(declare-fun m!160281 () Bool)

(assert (=> d!41623 m!160281))

(declare-fun m!160283 () Bool)

(assert (=> b!134696 m!160283))

(declare-fun m!160285 () Bool)

(assert (=> b!134697 m!160285))

(assert (=> b!133451 d!41623))

(declare-fun d!41625 () Bool)

(assert (=> d!41625 (= (apply!116 lt!69799 lt!69805) (get!1492 (getValueByKey!173 (toList!842 lt!69799) lt!69805)))))

(declare-fun bs!5635 () Bool)

(assert (= bs!5635 d!41625))

(declare-fun m!160287 () Bool)

(assert (=> bs!5635 m!160287))

(assert (=> bs!5635 m!160287))

(declare-fun m!160289 () Bool)

(assert (=> bs!5635 m!160289))

(assert (=> b!133451 d!41625))

(declare-fun d!41627 () Bool)

(assert (=> d!41627 (= (apply!116 lt!69813 lt!69798) (get!1492 (getValueByKey!173 (toList!842 lt!69813) lt!69798)))))

(declare-fun bs!5636 () Bool)

(assert (= bs!5636 d!41627))

(declare-fun m!160291 () Bool)

(assert (=> bs!5636 m!160291))

(assert (=> bs!5636 m!160291))

(declare-fun m!160293 () Bool)

(assert (=> bs!5636 m!160293))

(assert (=> b!133451 d!41627))

(declare-fun d!41629 () Bool)

(declare-fun lt!70543 () Bool)

(assert (=> d!41629 (= lt!70543 (select (content!134 (toList!842 lt!70076)) (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))))

(declare-fun e!87730 () Bool)

(assert (=> d!41629 (= lt!70543 e!87730)))

(declare-fun res!64770 () Bool)

(assert (=> d!41629 (=> (not res!64770) (not e!87730))))

(assert (=> d!41629 (= res!64770 ((_ is Cons!1690) (toList!842 lt!70076)))))

(assert (=> d!41629 (= (contains!886 (toList!842 lt!70076) (tuple2!2565 lt!69518 (minValue!2719 newMap!16))) lt!70543)))

(declare-fun b!134698 () Bool)

(declare-fun e!87729 () Bool)

(assert (=> b!134698 (= e!87730 e!87729)))

(declare-fun res!64769 () Bool)

(assert (=> b!134698 (=> res!64769 e!87729)))

(assert (=> b!134698 (= res!64769 (= (h!2295 (toList!842 lt!70076)) (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))))

(declare-fun b!134699 () Bool)

(assert (=> b!134699 (= e!87729 (contains!886 (t!6137 (toList!842 lt!70076)) (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))))

(assert (= (and d!41629 res!64770) b!134698))

(assert (= (and b!134698 (not res!64769)) b!134699))

(declare-fun m!160295 () Bool)

(assert (=> d!41629 m!160295))

(declare-fun m!160297 () Bool)

(assert (=> d!41629 m!160297))

(declare-fun m!160299 () Bool)

(assert (=> b!134699 m!160299))

(assert (=> b!133890 d!41629))

(assert (=> d!40799 d!40797))

(declare-fun d!41631 () Bool)

(assert (=> d!41631 (= (getValueByKey!173 lt!69631 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!41631 true))

(declare-fun _$22!486 () Unit!4141)

(assert (=> d!41631 (= (choose!833 lt!69631 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) _$22!486)))

(declare-fun bs!5637 () Bool)

(assert (= bs!5637 d!41631))

(assert (=> bs!5637 m!157123))

(assert (=> d!40799 d!41631))

(declare-fun d!41633 () Bool)

(declare-fun res!64771 () Bool)

(declare-fun e!87731 () Bool)

(assert (=> d!41633 (=> res!64771 e!87731)))

(assert (=> d!41633 (= res!64771 (or ((_ is Nil!1691) lt!69631) ((_ is Nil!1691) (t!6137 lt!69631))))))

(assert (=> d!41633 (= (isStrictlySorted!309 lt!69631) e!87731)))

(declare-fun b!134700 () Bool)

(declare-fun e!87732 () Bool)

(assert (=> b!134700 (= e!87731 e!87732)))

(declare-fun res!64772 () Bool)

(assert (=> b!134700 (=> (not res!64772) (not e!87732))))

(assert (=> b!134700 (= res!64772 (bvslt (_1!1293 (h!2295 lt!69631)) (_1!1293 (h!2295 (t!6137 lt!69631)))))))

(declare-fun b!134701 () Bool)

(assert (=> b!134701 (= e!87732 (isStrictlySorted!309 (t!6137 lt!69631)))))

(assert (= (and d!41633 (not res!64771)) b!134700))

(assert (= (and b!134700 res!64772) b!134701))

(declare-fun m!160301 () Bool)

(assert (=> b!134701 m!160301))

(assert (=> d!40799 d!41633))

(assert (=> d!40753 d!40547))

(assert (=> d!40753 d!40543))

(assert (=> d!40753 d!40541))

(declare-fun d!41635 () Bool)

(assert (=> d!41635 (contains!884 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (select (arr!2252 lt!69441) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))))))

(assert (=> d!41635 true))

(declare-fun _$16!152 () Unit!4141)

(assert (=> d!41635 (= (choose!825 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (defaultEntry!2864 newMap!16)) _$16!152)))

(declare-fun bs!5638 () Bool)

(assert (= bs!5638 d!41635))

(assert (=> bs!5638 m!156701))

(assert (=> bs!5638 m!157553))

(assert (=> bs!5638 m!156701))

(assert (=> bs!5638 m!157553))

(assert (=> bs!5638 m!157555))

(assert (=> d!40663 d!41635))

(assert (=> d!40663 d!40591))

(assert (=> d!40587 d!40585))

(assert (=> d!40587 d!40479))

(assert (=> d!40587 d!40589))

(declare-fun d!41637 () Bool)

(assert (=> d!41637 (= (get!1492 (getValueByKey!173 (toList!842 lt!69577) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!173 (toList!842 lt!69577) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40811 d!41637))

(assert (=> d!40811 d!41337))

(assert (=> d!41039 d!41047))

(assert (=> d!41039 d!41037))

(declare-fun d!41639 () Bool)

(assert (=> d!41639 (contains!884 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))) lt!69567)))

(assert (=> d!41639 true))

(declare-fun _$35!383 () Unit!4141)

(assert (=> d!41639 (= (choose!829 lt!69568 lt!69583 (zeroValue!2719 newMap!16) lt!69567) _$35!383)))

(declare-fun bs!5639 () Bool)

(assert (= bs!5639 d!41639))

(assert (=> bs!5639 m!156989))

(assert (=> bs!5639 m!156989))

(assert (=> bs!5639 m!156991))

(assert (=> d!41039 d!41639))

(declare-fun d!41641 () Bool)

(declare-fun e!87734 () Bool)

(assert (=> d!41641 e!87734))

(declare-fun res!64773 () Bool)

(assert (=> d!41641 (=> res!64773 e!87734)))

(declare-fun lt!70544 () Bool)

(assert (=> d!41641 (= res!64773 (not lt!70544))))

(declare-fun lt!70545 () Bool)

(assert (=> d!41641 (= lt!70544 lt!70545)))

(declare-fun lt!70546 () Unit!4141)

(declare-fun e!87733 () Unit!4141)

(assert (=> d!41641 (= lt!70546 e!87733)))

(declare-fun c!25083 () Bool)

(assert (=> d!41641 (= c!25083 lt!70545)))

(assert (=> d!41641 (= lt!70545 (containsKey!176 (toList!842 lt!69568) lt!69567))))

(assert (=> d!41641 (= (contains!884 lt!69568 lt!69567) lt!70544)))

(declare-fun b!134702 () Bool)

(declare-fun lt!70547 () Unit!4141)

(assert (=> b!134702 (= e!87733 lt!70547)))

(assert (=> b!134702 (= lt!70547 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69568) lt!69567))))

(assert (=> b!134702 (isDefined!125 (getValueByKey!173 (toList!842 lt!69568) lt!69567))))

(declare-fun b!134703 () Bool)

(declare-fun Unit!4230 () Unit!4141)

(assert (=> b!134703 (= e!87733 Unit!4230)))

(declare-fun b!134704 () Bool)

(assert (=> b!134704 (= e!87734 (isDefined!125 (getValueByKey!173 (toList!842 lt!69568) lt!69567)))))

(assert (= (and d!41641 c!25083) b!134702))

(assert (= (and d!41641 (not c!25083)) b!134703))

(assert (= (and d!41641 (not res!64773)) b!134704))

(declare-fun m!160303 () Bool)

(assert (=> d!41641 m!160303))

(declare-fun m!160305 () Bool)

(assert (=> b!134702 m!160305))

(declare-fun m!160307 () Bool)

(assert (=> b!134702 m!160307))

(assert (=> b!134702 m!160307))

(declare-fun m!160309 () Bool)

(assert (=> b!134702 m!160309))

(assert (=> b!134704 m!160307))

(assert (=> b!134704 m!160307))

(assert (=> b!134704 m!160309))

(assert (=> d!41039 d!41641))

(declare-fun d!41643 () Bool)

(assert (=> d!41643 (= (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69538 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))) lt!69523)) (v!3203 (getValueByKey!173 (toList!842 (+!169 lt!69538 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))) lt!69523)))))

(assert (=> d!40909 d!41643))

(declare-fun b!134706 () Bool)

(declare-fun e!87735 () Option!179)

(declare-fun e!87736 () Option!179)

(assert (=> b!134706 (= e!87735 e!87736)))

(declare-fun c!25085 () Bool)

(assert (=> b!134706 (= c!25085 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69538 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69538 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))) lt!69523))))))

(declare-fun b!134705 () Bool)

(assert (=> b!134705 (= e!87735 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69538 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))))))))

(declare-fun c!25084 () Bool)

(declare-fun d!41645 () Bool)

(assert (=> d!41645 (= c!25084 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69538 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69538 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))) lt!69523)))))

(assert (=> d!41645 (= (getValueByKey!173 (toList!842 (+!169 lt!69538 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))) lt!69523) e!87735)))

(declare-fun b!134708 () Bool)

(assert (=> b!134708 (= e!87736 None!177)))

(declare-fun b!134707 () Bool)

(assert (=> b!134707 (= e!87736 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69538 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))) lt!69523))))

(assert (= (and d!41645 c!25084) b!134705))

(assert (= (and d!41645 (not c!25084)) b!134706))

(assert (= (and b!134706 c!25085) b!134707))

(assert (= (and b!134706 (not c!25085)) b!134708))

(declare-fun m!160311 () Bool)

(assert (=> b!134707 m!160311))

(assert (=> d!40909 d!41645))

(declare-fun d!41647 () Bool)

(declare-fun res!64774 () Bool)

(declare-fun e!87737 () Bool)

(assert (=> d!41647 (=> res!64774 e!87737)))

(assert (=> d!41647 (= res!64774 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69344))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41647 (= (containsKey!176 (t!6137 (toList!842 lt!69344)) #b1000000000000000000000000000000000000000000000000000000000000000) e!87737)))

(declare-fun b!134709 () Bool)

(declare-fun e!87738 () Bool)

(assert (=> b!134709 (= e!87737 e!87738)))

(declare-fun res!64775 () Bool)

(assert (=> b!134709 (=> (not res!64775) (not e!87738))))

(assert (=> b!134709 (= res!64775 (and (or (not ((_ is Cons!1690) (t!6137 (toList!842 lt!69344)))) (bvsle (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344)))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1690) (t!6137 (toList!842 lt!69344))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134710 () Bool)

(assert (=> b!134710 (= e!87738 (containsKey!176 (t!6137 (t!6137 (toList!842 lt!69344))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41647 (not res!64774)) b!134709))

(assert (= (and b!134709 res!64775) b!134710))

(declare-fun m!160313 () Bool)

(assert (=> b!134710 m!160313))

(assert (=> b!133578 d!41647))

(declare-fun d!41649 () Bool)

(declare-fun lt!70548 () Bool)

(assert (=> d!41649 (= lt!70548 (select (content!134 lt!69635) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun e!87740 () Bool)

(assert (=> d!41649 (= lt!70548 e!87740)))

(declare-fun res!64777 () Bool)

(assert (=> d!41649 (=> (not res!64777) (not e!87740))))

(assert (=> d!41649 (= res!64777 ((_ is Cons!1690) lt!69635))))

(assert (=> d!41649 (= (contains!886 lt!69635 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!70548)))

(declare-fun b!134711 () Bool)

(declare-fun e!87739 () Bool)

(assert (=> b!134711 (= e!87740 e!87739)))

(declare-fun res!64776 () Bool)

(assert (=> b!134711 (=> res!64776 e!87739)))

(assert (=> b!134711 (= res!64776 (= (h!2295 lt!69635) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134712 () Bool)

(assert (=> b!134712 (= e!87739 (contains!886 (t!6137 lt!69635) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!41649 res!64777) b!134711))

(assert (= (and b!134711 (not res!64776)) b!134712))

(declare-fun m!160315 () Bool)

(assert (=> d!41649 m!160315))

(declare-fun m!160317 () Bool)

(assert (=> d!41649 m!160317))

(declare-fun m!160319 () Bool)

(assert (=> b!134712 m!160319))

(assert (=> b!133723 d!41649))

(declare-fun d!41651 () Bool)

(declare-fun e!87741 () Bool)

(assert (=> d!41651 e!87741))

(declare-fun res!64779 () Bool)

(assert (=> d!41651 (=> (not res!64779) (not e!87741))))

(declare-fun lt!70551 () ListLongMap!1653)

(assert (=> d!41651 (= res!64779 (contains!884 lt!70551 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70552 () List!1694)

(assert (=> d!41651 (= lt!70551 (ListLongMap!1654 lt!70552))))

(declare-fun lt!70549 () Unit!4141)

(declare-fun lt!70550 () Unit!4141)

(assert (=> d!41651 (= lt!70549 lt!70550)))

(assert (=> d!41651 (= (getValueByKey!173 lt!70552 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41651 (= lt!70550 (lemmaContainsTupThenGetReturnValue!88 lt!70552 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41651 (= lt!70552 (insertStrictlySorted!91 (toList!842 call!14719) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!41651 (= (+!169 call!14719 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70551)))

(declare-fun b!134713 () Bool)

(declare-fun res!64778 () Bool)

(assert (=> b!134713 (=> (not res!64778) (not e!87741))))

(assert (=> b!134713 (= res!64778 (= (getValueByKey!173 (toList!842 lt!70551) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!134714 () Bool)

(assert (=> b!134714 (= e!87741 (contains!886 (toList!842 lt!70551) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!41651 res!64779) b!134713))

(assert (= (and b!134713 res!64778) b!134714))

(declare-fun m!160321 () Bool)

(assert (=> d!41651 m!160321))

(declare-fun m!160323 () Bool)

(assert (=> d!41651 m!160323))

(declare-fun m!160325 () Bool)

(assert (=> d!41651 m!160325))

(declare-fun m!160327 () Bool)

(assert (=> d!41651 m!160327))

(declare-fun m!160329 () Bool)

(assert (=> b!134713 m!160329))

(declare-fun m!160331 () Bool)

(assert (=> b!134714 m!160331))

(assert (=> b!133462 d!41651))

(declare-fun d!41653 () Bool)

(declare-fun res!64780 () Bool)

(declare-fun e!87742 () Bool)

(assert (=> d!41653 (=> res!64780 e!87742)))

(assert (=> d!41653 (= res!64780 (and ((_ is Cons!1690) (toList!842 lt!69486)) (= (_1!1293 (h!2295 (toList!842 lt!69486))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!41653 (= (containsKey!176 (toList!842 lt!69486) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!87742)))

(declare-fun b!134715 () Bool)

(declare-fun e!87743 () Bool)

(assert (=> b!134715 (= e!87742 e!87743)))

(declare-fun res!64781 () Bool)

(assert (=> b!134715 (=> (not res!64781) (not e!87743))))

(assert (=> b!134715 (= res!64781 (and (or (not ((_ is Cons!1690) (toList!842 lt!69486))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69486))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1690) (toList!842 lt!69486)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69486))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!134716 () Bool)

(assert (=> b!134716 (= e!87743 (containsKey!176 (t!6137 (toList!842 lt!69486)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!41653 (not res!64780)) b!134715))

(assert (= (and b!134715 res!64781) b!134716))

(assert (=> b!134716 m!156581))

(declare-fun m!160333 () Bool)

(assert (=> b!134716 m!160333))

(assert (=> d!40693 d!41653))

(assert (=> d!40917 d!40933))

(assert (=> d!40917 d!40923))

(declare-fun d!41655 () Bool)

(assert (=> d!41655 (contains!884 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))) lt!69519)))

(assert (=> d!41655 true))

(declare-fun _$35!384 () Unit!4141)

(assert (=> d!41655 (= (choose!829 lt!69520 lt!69535 (zeroValue!2719 newMap!16) lt!69519) _$35!384)))

(declare-fun bs!5640 () Bool)

(assert (= bs!5640 d!41655))

(assert (=> bs!5640 m!156875))

(assert (=> bs!5640 m!156875))

(assert (=> bs!5640 m!156877))

(assert (=> d!40917 d!41655))

(declare-fun d!41657 () Bool)

(declare-fun e!87745 () Bool)

(assert (=> d!41657 e!87745))

(declare-fun res!64782 () Bool)

(assert (=> d!41657 (=> res!64782 e!87745)))

(declare-fun lt!70553 () Bool)

(assert (=> d!41657 (= res!64782 (not lt!70553))))

(declare-fun lt!70554 () Bool)

(assert (=> d!41657 (= lt!70553 lt!70554)))

(declare-fun lt!70555 () Unit!4141)

(declare-fun e!87744 () Unit!4141)

(assert (=> d!41657 (= lt!70555 e!87744)))

(declare-fun c!25086 () Bool)

(assert (=> d!41657 (= c!25086 lt!70554)))

(assert (=> d!41657 (= lt!70554 (containsKey!176 (toList!842 lt!69520) lt!69519))))

(assert (=> d!41657 (= (contains!884 lt!69520 lt!69519) lt!70553)))

(declare-fun b!134717 () Bool)

(declare-fun lt!70556 () Unit!4141)

(assert (=> b!134717 (= e!87744 lt!70556)))

(assert (=> b!134717 (= lt!70556 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69520) lt!69519))))

(assert (=> b!134717 (isDefined!125 (getValueByKey!173 (toList!842 lt!69520) lt!69519))))

(declare-fun b!134718 () Bool)

(declare-fun Unit!4231 () Unit!4141)

(assert (=> b!134718 (= e!87744 Unit!4231)))

(declare-fun b!134719 () Bool)

(assert (=> b!134719 (= e!87745 (isDefined!125 (getValueByKey!173 (toList!842 lt!69520) lt!69519)))))

(assert (= (and d!41657 c!25086) b!134717))

(assert (= (and d!41657 (not c!25086)) b!134718))

(assert (= (and d!41657 (not res!64782)) b!134719))

(declare-fun m!160335 () Bool)

(assert (=> d!41657 m!160335))

(declare-fun m!160337 () Bool)

(assert (=> b!134717 m!160337))

(declare-fun m!160339 () Bool)

(assert (=> b!134717 m!160339))

(assert (=> b!134717 m!160339))

(declare-fun m!160341 () Bool)

(assert (=> b!134717 m!160341))

(assert (=> b!134719 m!160339))

(assert (=> b!134719 m!160339))

(assert (=> b!134719 m!160341))

(assert (=> d!40917 d!41657))

(declare-fun d!41659 () Bool)

(assert (=> d!41659 (= (isEmpty!417 (toList!842 lt!69486)) ((_ is Nil!1691) (toList!842 lt!69486)))))

(assert (=> d!40979 d!41659))

(assert (=> d!40589 d!40591))

(declare-fun d!41661 () Bool)

(assert (=> d!41661 (= (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (and (not (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133850 d!41661))

(declare-fun d!41663 () Bool)

(declare-fun lt!70557 () Bool)

(assert (=> d!41663 (= lt!70557 (select (content!134 (toList!842 lt!70084)) (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))))

(declare-fun e!87747 () Bool)

(assert (=> d!41663 (= lt!70557 e!87747)))

(declare-fun res!64784 () Bool)

(assert (=> d!41663 (=> (not res!64784) (not e!87747))))

(assert (=> d!41663 (= res!64784 ((_ is Cons!1690) (toList!842 lt!70084)))))

(assert (=> d!41663 (= (contains!886 (toList!842 lt!70084) (tuple2!2565 lt!69522 (minValue!2719 newMap!16))) lt!70557)))

(declare-fun b!134720 () Bool)

(declare-fun e!87746 () Bool)

(assert (=> b!134720 (= e!87747 e!87746)))

(declare-fun res!64783 () Bool)

(assert (=> b!134720 (=> res!64783 e!87746)))

(assert (=> b!134720 (= res!64783 (= (h!2295 (toList!842 lt!70084)) (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))))

(declare-fun b!134721 () Bool)

(assert (=> b!134721 (= e!87746 (contains!886 (t!6137 (toList!842 lt!70084)) (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))))

(assert (= (and d!41663 res!64784) b!134720))

(assert (= (and b!134720 (not res!64783)) b!134721))

(declare-fun m!160343 () Bool)

(assert (=> d!41663 m!160343))

(declare-fun m!160345 () Bool)

(assert (=> d!41663 m!160345))

(declare-fun m!160347 () Bool)

(assert (=> b!134721 m!160347))

(assert (=> b!133894 d!41663))

(declare-fun d!41665 () Bool)

(declare-fun res!64785 () Bool)

(declare-fun e!87748 () Bool)

(assert (=> d!41665 (=> res!64785 e!87748)))

(assert (=> d!41665 (= res!64785 (and ((_ is Cons!1690) lt!70106) (= (_1!1293 (h!2295 lt!70106)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41665 (= (containsKey!176 lt!70106 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87748)))

(declare-fun b!134722 () Bool)

(declare-fun e!87749 () Bool)

(assert (=> b!134722 (= e!87748 e!87749)))

(declare-fun res!64786 () Bool)

(assert (=> b!134722 (=> (not res!64786) (not e!87749))))

(assert (=> b!134722 (= res!64786 (and (or (not ((_ is Cons!1690) lt!70106)) (bvsle (_1!1293 (h!2295 lt!70106)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Cons!1690) lt!70106) (bvslt (_1!1293 (h!2295 lt!70106)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134723 () Bool)

(assert (=> b!134723 (= e!87749 (containsKey!176 (t!6137 lt!70106) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41665 (not res!64785)) b!134722))

(assert (= (and b!134722 res!64786) b!134723))

(declare-fun m!160349 () Bool)

(assert (=> b!134723 m!160349))

(assert (=> b!133924 d!41665))

(declare-fun b!134725 () Bool)

(declare-fun e!87750 () Option!179)

(declare-fun e!87751 () Option!179)

(assert (=> b!134725 (= e!87750 e!87751)))

(declare-fun c!25088 () Bool)

(assert (=> b!134725 (= c!25088 (and ((_ is Cons!1690) (t!6137 (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))) lt!69343))))))

(declare-fun b!134724 () Bool)

(assert (=> b!134724 (= e!87750 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))))

(declare-fun d!41667 () Bool)

(declare-fun c!25087 () Bool)

(assert (=> d!41667 (= c!25087 (and ((_ is Cons!1690) (t!6137 (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (= (_1!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))) lt!69343)))))

(assert (=> d!41667 (= (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!69343) e!87750)))

(declare-fun b!134727 () Bool)

(assert (=> b!134727 (= e!87751 None!177)))

(declare-fun b!134726 () Bool)

(assert (=> b!134726 (= e!87751 (getValueByKey!173 (t!6137 (t!6137 (toList!842 (+!169 lt!69341 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69343))))

(assert (= (and d!41667 c!25087) b!134724))

(assert (= (and d!41667 (not c!25087)) b!134725))

(assert (= (and b!134725 c!25088) b!134726))

(assert (= (and b!134725 (not c!25088)) b!134727))

(declare-fun m!160351 () Bool)

(assert (=> b!134726 m!160351))

(assert (=> b!133970 d!41667))

(declare-fun d!41669 () Bool)

(declare-fun res!64787 () Bool)

(declare-fun e!87752 () Bool)

(assert (=> d!41669 (=> res!64787 e!87752)))

(assert (=> d!41669 (= res!64787 (and ((_ is Cons!1690) (toList!842 lt!69545)) (= (_1!1293 (h!2295 (toList!842 lt!69545))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41669 (= (containsKey!176 (toList!842 lt!69545) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87752)))

(declare-fun b!134728 () Bool)

(declare-fun e!87753 () Bool)

(assert (=> b!134728 (= e!87752 e!87753)))

(declare-fun res!64788 () Bool)

(assert (=> b!134728 (=> (not res!64788) (not e!87753))))

(assert (=> b!134728 (= res!64788 (and (or (not ((_ is Cons!1690) (toList!842 lt!69545))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69545))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1690) (toList!842 lt!69545)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69545))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134729 () Bool)

(assert (=> b!134729 (= e!87753 (containsKey!176 (t!6137 (toList!842 lt!69545)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41669 (not res!64787)) b!134728))

(assert (= (and b!134728 res!64788) b!134729))

(declare-fun m!160353 () Bool)

(assert (=> b!134729 m!160353))

(assert (=> d!40847 d!41669))

(declare-fun d!41671 () Bool)

(declare-fun e!87755 () Bool)

(assert (=> d!41671 e!87755))

(declare-fun res!64789 () Bool)

(assert (=> d!41671 (=> res!64789 e!87755)))

(declare-fun lt!70558 () Bool)

(assert (=> d!41671 (= res!64789 (not lt!70558))))

(declare-fun lt!70559 () Bool)

(assert (=> d!41671 (= lt!70558 lt!70559)))

(declare-fun lt!70560 () Unit!4141)

(declare-fun e!87754 () Unit!4141)

(assert (=> d!41671 (= lt!70560 e!87754)))

(declare-fun c!25089 () Bool)

(assert (=> d!41671 (= c!25089 lt!70559)))

(assert (=> d!41671 (= lt!70559 (containsKey!176 (toList!842 lt!69958) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41671 (= (contains!884 lt!69958 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) lt!70558)))

(declare-fun b!134730 () Bool)

(declare-fun lt!70561 () Unit!4141)

(assert (=> b!134730 (= e!87754 lt!70561)))

(assert (=> b!134730 (= lt!70561 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69958) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134730 (isDefined!125 (getValueByKey!173 (toList!842 lt!69958) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134731 () Bool)

(declare-fun Unit!4232 () Unit!4141)

(assert (=> b!134731 (= e!87754 Unit!4232)))

(declare-fun b!134732 () Bool)

(assert (=> b!134732 (= e!87755 (isDefined!125 (getValueByKey!173 (toList!842 lt!69958) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41671 c!25089) b!134730))

(assert (= (and d!41671 (not c!25089)) b!134731))

(assert (= (and d!41671 (not res!64789)) b!134732))

(assert (=> d!41671 m!156679))

(declare-fun m!160355 () Bool)

(assert (=> d!41671 m!160355))

(assert (=> b!134730 m!156679))

(declare-fun m!160357 () Bool)

(assert (=> b!134730 m!160357))

(assert (=> b!134730 m!156679))

(declare-fun m!160359 () Bool)

(assert (=> b!134730 m!160359))

(assert (=> b!134730 m!160359))

(declare-fun m!160361 () Bool)

(assert (=> b!134730 m!160361))

(assert (=> b!134732 m!156679))

(assert (=> b!134732 m!160359))

(assert (=> b!134732 m!160359))

(assert (=> b!134732 m!160361))

(assert (=> b!133707 d!41671))

(declare-fun d!41673 () Bool)

(assert (=> d!41673 (= (get!1490 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3197 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!133840 d!41673))

(declare-fun d!41675 () Bool)

(assert (=> d!41675 (isDefined!125 (getValueByKey!173 (toList!842 lt!69353) lt!69338))))

(declare-fun lt!70562 () Unit!4141)

(assert (=> d!41675 (= lt!70562 (choose!831 (toList!842 lt!69353) lt!69338))))

(declare-fun e!87756 () Bool)

(assert (=> d!41675 e!87756))

(declare-fun res!64790 () Bool)

(assert (=> d!41675 (=> (not res!64790) (not e!87756))))

(assert (=> d!41675 (= res!64790 (isStrictlySorted!309 (toList!842 lt!69353)))))

(assert (=> d!41675 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69353) lt!69338) lt!70562)))

(declare-fun b!134733 () Bool)

(assert (=> b!134733 (= e!87756 (containsKey!176 (toList!842 lt!69353) lt!69338))))

(assert (= (and d!41675 res!64790) b!134733))

(assert (=> d!41675 m!157157))

(assert (=> d!41675 m!157157))

(assert (=> d!41675 m!158629))

(declare-fun m!160363 () Bool)

(assert (=> d!41675 m!160363))

(assert (=> d!41675 m!158149))

(assert (=> b!134733 m!158625))

(assert (=> b!133956 d!41675))

(declare-fun d!41677 () Bool)

(assert (=> d!41677 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69353) lt!69338)) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69353) lt!69338))))))

(declare-fun bs!5641 () Bool)

(assert (= bs!5641 d!41677))

(assert (=> bs!5641 m!157157))

(declare-fun m!160365 () Bool)

(assert (=> bs!5641 m!160365))

(assert (=> b!133956 d!41677))

(assert (=> b!133956 d!40743))

(declare-fun d!41679 () Bool)

(assert (=> d!41679 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5642 () Bool)

(assert (= bs!5642 d!41679))

(assert (=> bs!5642 m!158425))

(declare-fun m!160367 () Bool)

(assert (=> bs!5642 m!160367))

(assert (=> b!133884 d!41679))

(declare-fun b!134735 () Bool)

(declare-fun e!87757 () Option!179)

(declare-fun e!87758 () Option!179)

(assert (=> b!134735 (= e!87757 e!87758)))

(declare-fun c!25091 () Bool)

(assert (=> b!134735 (= c!25091 (and ((_ is Cons!1690) (toList!842 lt!69486)) (not (= (_1!1293 (h!2295 (toList!842 lt!69486))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134734 () Bool)

(assert (=> b!134734 (= e!87757 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69486)))))))

(declare-fun d!41681 () Bool)

(declare-fun c!25090 () Bool)

(assert (=> d!41681 (= c!25090 (and ((_ is Cons!1690) (toList!842 lt!69486)) (= (_1!1293 (h!2295 (toList!842 lt!69486))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41681 (= (getValueByKey!173 (toList!842 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000) e!87757)))

(declare-fun b!134737 () Bool)

(assert (=> b!134737 (= e!87758 None!177)))

(declare-fun b!134736 () Bool)

(assert (=> b!134736 (= e!87758 (getValueByKey!173 (t!6137 (toList!842 lt!69486)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41681 c!25090) b!134734))

(assert (= (and d!41681 (not c!25090)) b!134735))

(assert (= (and b!134735 c!25091) b!134736))

(assert (= (and b!134735 (not c!25091)) b!134737))

(declare-fun m!160369 () Bool)

(assert (=> b!134736 m!160369))

(assert (=> b!133884 d!41681))

(declare-fun d!41683 () Bool)

(declare-fun res!64791 () Bool)

(declare-fun e!87759 () Bool)

(assert (=> d!41683 (=> res!64791 e!87759)))

(assert (=> d!41683 (= res!64791 (and ((_ is Cons!1690) lt!69908) (= (_1!1293 (h!2295 lt!69908)) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41683 (= (containsKey!176 lt!69908 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87759)))

(declare-fun b!134738 () Bool)

(declare-fun e!87760 () Bool)

(assert (=> b!134738 (= e!87759 e!87760)))

(declare-fun res!64792 () Bool)

(assert (=> b!134738 (=> (not res!64792) (not e!87760))))

(assert (=> b!134738 (= res!64792 (and (or (not ((_ is Cons!1690) lt!69908)) (bvsle (_1!1293 (h!2295 lt!69908)) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Cons!1690) lt!69908) (bvslt (_1!1293 (h!2295 lt!69908)) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134739 () Bool)

(assert (=> b!134739 (= e!87760 (containsKey!176 (t!6137 lt!69908) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41683 (not res!64791)) b!134738))

(assert (= (and b!134738 res!64792) b!134739))

(declare-fun m!160371 () Bool)

(assert (=> b!134739 m!160371))

(assert (=> b!133628 d!41683))

(declare-fun d!41685 () Bool)

(assert (=> d!41685 (= (get!1492 (getValueByKey!173 (toList!842 lt!69577) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))) (v!3203 (getValueByKey!173 (toList!842 lt!69577) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!41053 d!41685))

(declare-fun b!134741 () Bool)

(declare-fun e!87761 () Option!179)

(declare-fun e!87762 () Option!179)

(assert (=> b!134741 (= e!87761 e!87762)))

(declare-fun c!25093 () Bool)

(assert (=> b!134741 (= c!25093 (and ((_ is Cons!1690) (toList!842 lt!69577)) (not (= (_1!1293 (h!2295 (toList!842 lt!69577))) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!134740 () Bool)

(assert (=> b!134740 (= e!87761 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69577)))))))

(declare-fun d!41687 () Bool)

(declare-fun c!25092 () Bool)

(assert (=> d!41687 (= c!25092 (and ((_ is Cons!1690) (toList!842 lt!69577)) (= (_1!1293 (h!2295 (toList!842 lt!69577))) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!41687 (= (getValueByKey!173 (toList!842 lt!69577) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) e!87761)))

(declare-fun b!134743 () Bool)

(assert (=> b!134743 (= e!87762 None!177)))

(declare-fun b!134742 () Bool)

(assert (=> b!134742 (= e!87762 (getValueByKey!173 (t!6137 (toList!842 lt!69577)) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!41687 c!25092) b!134740))

(assert (= (and d!41687 (not c!25092)) b!134741))

(assert (= (and b!134741 c!25093) b!134742))

(assert (= (and b!134741 (not c!25093)) b!134743))

(assert (=> b!134742 m!156679))

(declare-fun m!160373 () Bool)

(assert (=> b!134742 m!160373))

(assert (=> d!41053 d!41687))

(declare-fun d!41689 () Bool)

(declare-fun res!64793 () Bool)

(declare-fun e!87763 () Bool)

(assert (=> d!41689 (=> res!64793 e!87763)))

(assert (=> d!41689 (= res!64793 (and ((_ is Cons!1690) lt!70138) (= (_1!1293 (h!2295 lt!70138)) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41689 (= (containsKey!176 lt!70138 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87763)))

(declare-fun b!134744 () Bool)

(declare-fun e!87764 () Bool)

(assert (=> b!134744 (= e!87763 e!87764)))

(declare-fun res!64794 () Bool)

(assert (=> b!134744 (=> (not res!64794) (not e!87764))))

(assert (=> b!134744 (= res!64794 (and (or (not ((_ is Cons!1690) lt!70138)) (bvsle (_1!1293 (h!2295 lt!70138)) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Cons!1690) lt!70138) (bvslt (_1!1293 (h!2295 lt!70138)) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134745 () Bool)

(assert (=> b!134745 (= e!87764 (containsKey!176 (t!6137 lt!70138) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41689 (not res!64793)) b!134744))

(assert (= (and b!134744 res!64794) b!134745))

(declare-fun m!160375 () Bool)

(assert (=> b!134745 m!160375))

(assert (=> b!133993 d!41689))

(assert (=> d!40655 d!40455))

(assert (=> b!134068 d!41535))

(assert (=> d!40667 d!40591))

(declare-fun d!41691 () Bool)

(assert (=> d!41691 (= (get!1492 (getValueByKey!173 (toList!842 lt!69513) lt!69498)) (v!3203 (getValueByKey!173 (toList!842 lt!69513) lt!69498)))))

(assert (=> d!40719 d!41691))

(declare-fun b!134747 () Bool)

(declare-fun e!87765 () Option!179)

(declare-fun e!87766 () Option!179)

(assert (=> b!134747 (= e!87765 e!87766)))

(declare-fun c!25095 () Bool)

(assert (=> b!134747 (= c!25095 (and ((_ is Cons!1690) (toList!842 lt!69513)) (not (= (_1!1293 (h!2295 (toList!842 lt!69513))) lt!69498))))))

(declare-fun b!134746 () Bool)

(assert (=> b!134746 (= e!87765 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69513)))))))

(declare-fun d!41693 () Bool)

(declare-fun c!25094 () Bool)

(assert (=> d!41693 (= c!25094 (and ((_ is Cons!1690) (toList!842 lt!69513)) (= (_1!1293 (h!2295 (toList!842 lt!69513))) lt!69498)))))

(assert (=> d!41693 (= (getValueByKey!173 (toList!842 lt!69513) lt!69498) e!87765)))

(declare-fun b!134749 () Bool)

(assert (=> b!134749 (= e!87766 None!177)))

(declare-fun b!134748 () Bool)

(assert (=> b!134748 (= e!87766 (getValueByKey!173 (t!6137 (toList!842 lt!69513)) lt!69498))))

(assert (= (and d!41693 c!25094) b!134746))

(assert (= (and d!41693 (not c!25094)) b!134747))

(assert (= (and b!134747 c!25095) b!134748))

(assert (= (and b!134747 (not c!25095)) b!134749))

(declare-fun m!160377 () Bool)

(assert (=> b!134748 m!160377))

(assert (=> d!40719 d!41693))

(assert (=> b!133781 d!40621))

(declare-fun b!134751 () Bool)

(declare-fun e!87767 () Option!179)

(declare-fun e!87768 () Option!179)

(assert (=> b!134751 (= e!87767 e!87768)))

(declare-fun c!25097 () Bool)

(assert (=> b!134751 (= c!25097 (and ((_ is Cons!1690) (toList!842 lt!70017)) (not (= (_1!1293 (h!2295 (toList!842 lt!70017))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134750 () Bool)

(assert (=> b!134750 (= e!87767 (Some!178 (_2!1293 (h!2295 (toList!842 lt!70017)))))))

(declare-fun c!25096 () Bool)

(declare-fun d!41695 () Bool)

(assert (=> d!41695 (= c!25096 (and ((_ is Cons!1690) (toList!842 lt!70017)) (= (_1!1293 (h!2295 (toList!842 lt!70017))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41695 (= (getValueByKey!173 (toList!842 lt!70017) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87767)))

(declare-fun b!134753 () Bool)

(assert (=> b!134753 (= e!87768 None!177)))

(declare-fun b!134752 () Bool)

(assert (=> b!134752 (= e!87768 (getValueByKey!173 (t!6137 (toList!842 lt!70017)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41695 c!25096) b!134750))

(assert (= (and d!41695 (not c!25096)) b!134751))

(assert (= (and b!134751 c!25097) b!134752))

(assert (= (and b!134751 (not c!25097)) b!134753))

(declare-fun m!160379 () Bool)

(assert (=> b!134752 m!160379))

(assert (=> b!133815 d!41695))

(declare-fun d!41697 () Bool)

(assert (=> d!41697 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69529) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69529) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5643 () Bool)

(assert (= bs!5643 d!41697))

(assert (=> bs!5643 m!157757))

(declare-fun m!160381 () Bool)

(assert (=> bs!5643 m!160381))

(assert (=> b!133544 d!41697))

(assert (=> b!133544 d!41319))

(declare-fun b!134754 () Bool)

(declare-fun e!87771 () Bool)

(assert (=> b!134754 (= e!87771 (contains!885 (ite c!24877 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134755 () Bool)

(declare-fun e!87769 () Bool)

(declare-fun call!14826 () Bool)

(assert (=> b!134755 (= e!87769 call!14826)))

(declare-fun b!134756 () Bool)

(declare-fun e!87772 () Bool)

(declare-fun e!87770 () Bool)

(assert (=> b!134756 (= e!87772 e!87770)))

(declare-fun res!64796 () Bool)

(assert (=> b!134756 (=> (not res!64796) (not e!87770))))

(assert (=> b!134756 (= res!64796 (not e!87771))))

(declare-fun res!64797 () Bool)

(assert (=> b!134756 (=> (not res!64797) (not e!87771))))

(assert (=> b!134756 (= res!64797 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun c!25098 () Bool)

(declare-fun bm!14823 () Bool)

(assert (=> bm!14823 (= call!14826 (arrayNoDuplicates!0 (_keys!4613 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!25098 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24877 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690))) (ite c!24877 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690)))))))

(declare-fun d!41699 () Bool)

(declare-fun res!64795 () Bool)

(assert (=> d!41699 (=> res!64795 e!87772)))

(assert (=> d!41699 (= res!64795 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!41699 (= (arrayNoDuplicates!0 (_keys!4613 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24877 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690))) e!87772)))

(declare-fun b!134757 () Bool)

(assert (=> b!134757 (= e!87770 e!87769)))

(assert (=> b!134757 (= c!25098 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!134758 () Bool)

(assert (=> b!134758 (= e!87769 call!14826)))

(assert (= (and d!41699 (not res!64795)) b!134756))

(assert (= (and b!134756 res!64797) b!134754))

(assert (= (and b!134756 res!64796) b!134757))

(assert (= (and b!134757 c!25098) b!134755))

(assert (= (and b!134757 (not c!25098)) b!134758))

(assert (= (or b!134755 b!134758) bm!14823))

(assert (=> b!134754 m!160165))

(assert (=> b!134754 m!160165))

(declare-fun m!160383 () Bool)

(assert (=> b!134754 m!160383))

(assert (=> b!134756 m!160165))

(assert (=> b!134756 m!160165))

(assert (=> b!134756 m!160167))

(assert (=> bm!14823 m!160165))

(declare-fun m!160385 () Bool)

(assert (=> bm!14823 m!160385))

(assert (=> b!134757 m!160165))

(assert (=> b!134757 m!160165))

(assert (=> b!134757 m!160167))

(assert (=> bm!14771 d!41699))

(declare-fun d!41701 () Bool)

(assert (=> d!41701 (= (size!2527 (_2!1294 lt!69280)) (bvadd (_size!597 (_2!1294 lt!69280)) (bvsdiv (bvadd (extraKeys!2629 (_2!1294 lt!69280)) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!133307 d!41701))

(declare-fun d!41703 () Bool)

(declare-fun e!87774 () Bool)

(assert (=> d!41703 e!87774))

(declare-fun res!64798 () Bool)

(assert (=> d!41703 (=> res!64798 e!87774)))

(declare-fun lt!70563 () Bool)

(assert (=> d!41703 (= res!64798 (not lt!70563))))

(declare-fun lt!70564 () Bool)

(assert (=> d!41703 (= lt!70563 lt!70564)))

(declare-fun lt!70565 () Unit!4141)

(declare-fun e!87773 () Unit!4141)

(assert (=> d!41703 (= lt!70565 e!87773)))

(declare-fun c!25099 () Bool)

(assert (=> d!41703 (= c!25099 lt!70564)))

(assert (=> d!41703 (= lt!70564 (containsKey!176 (toList!842 lt!70001) (_1!1293 (tuple2!2565 lt!69484 lt!69485))))))

(assert (=> d!41703 (= (contains!884 lt!70001 (_1!1293 (tuple2!2565 lt!69484 lt!69485))) lt!70563)))

(declare-fun b!134759 () Bool)

(declare-fun lt!70566 () Unit!4141)

(assert (=> b!134759 (= e!87773 lt!70566)))

(assert (=> b!134759 (= lt!70566 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70001) (_1!1293 (tuple2!2565 lt!69484 lt!69485))))))

(assert (=> b!134759 (isDefined!125 (getValueByKey!173 (toList!842 lt!70001) (_1!1293 (tuple2!2565 lt!69484 lt!69485))))))

(declare-fun b!134760 () Bool)

(declare-fun Unit!4233 () Unit!4141)

(assert (=> b!134760 (= e!87773 Unit!4233)))

(declare-fun b!134761 () Bool)

(assert (=> b!134761 (= e!87774 (isDefined!125 (getValueByKey!173 (toList!842 lt!70001) (_1!1293 (tuple2!2565 lt!69484 lt!69485)))))))

(assert (= (and d!41703 c!25099) b!134759))

(assert (= (and d!41703 (not c!25099)) b!134760))

(assert (= (and d!41703 (not res!64798)) b!134761))

(declare-fun m!160387 () Bool)

(assert (=> d!41703 m!160387))

(declare-fun m!160389 () Bool)

(assert (=> b!134759 m!160389))

(assert (=> b!134759 m!158241))

(assert (=> b!134759 m!158241))

(declare-fun m!160391 () Bool)

(assert (=> b!134759 m!160391))

(assert (=> b!134761 m!158241))

(assert (=> b!134761 m!158241))

(assert (=> b!134761 m!160391))

(assert (=> d!40865 d!41703))

(declare-fun b!134763 () Bool)

(declare-fun e!87775 () Option!179)

(declare-fun e!87776 () Option!179)

(assert (=> b!134763 (= e!87775 e!87776)))

(declare-fun c!25101 () Bool)

(assert (=> b!134763 (= c!25101 (and ((_ is Cons!1690) lt!70002) (not (= (_1!1293 (h!2295 lt!70002)) (_1!1293 (tuple2!2565 lt!69484 lt!69485))))))))

(declare-fun b!134762 () Bool)

(assert (=> b!134762 (= e!87775 (Some!178 (_2!1293 (h!2295 lt!70002))))))

(declare-fun c!25100 () Bool)

(declare-fun d!41705 () Bool)

(assert (=> d!41705 (= c!25100 (and ((_ is Cons!1690) lt!70002) (= (_1!1293 (h!2295 lt!70002)) (_1!1293 (tuple2!2565 lt!69484 lt!69485)))))))

(assert (=> d!41705 (= (getValueByKey!173 lt!70002 (_1!1293 (tuple2!2565 lt!69484 lt!69485))) e!87775)))

(declare-fun b!134765 () Bool)

(assert (=> b!134765 (= e!87776 None!177)))

(declare-fun b!134764 () Bool)

(assert (=> b!134764 (= e!87776 (getValueByKey!173 (t!6137 lt!70002) (_1!1293 (tuple2!2565 lt!69484 lt!69485))))))

(assert (= (and d!41705 c!25100) b!134762))

(assert (= (and d!41705 (not c!25100)) b!134763))

(assert (= (and b!134763 c!25101) b!134764))

(assert (= (and b!134763 (not c!25101)) b!134765))

(declare-fun m!160393 () Bool)

(assert (=> b!134764 m!160393))

(assert (=> d!40865 d!41705))

(declare-fun d!41707 () Bool)

(assert (=> d!41707 (= (getValueByKey!173 lt!70002 (_1!1293 (tuple2!2565 lt!69484 lt!69485))) (Some!178 (_2!1293 (tuple2!2565 lt!69484 lt!69485))))))

(declare-fun lt!70567 () Unit!4141)

(assert (=> d!41707 (= lt!70567 (choose!833 lt!70002 (_1!1293 (tuple2!2565 lt!69484 lt!69485)) (_2!1293 (tuple2!2565 lt!69484 lt!69485))))))

(declare-fun e!87777 () Bool)

(assert (=> d!41707 e!87777))

(declare-fun res!64799 () Bool)

(assert (=> d!41707 (=> (not res!64799) (not e!87777))))

(assert (=> d!41707 (= res!64799 (isStrictlySorted!309 lt!70002))))

(assert (=> d!41707 (= (lemmaContainsTupThenGetReturnValue!88 lt!70002 (_1!1293 (tuple2!2565 lt!69484 lt!69485)) (_2!1293 (tuple2!2565 lt!69484 lt!69485))) lt!70567)))

(declare-fun b!134766 () Bool)

(declare-fun res!64800 () Bool)

(assert (=> b!134766 (=> (not res!64800) (not e!87777))))

(assert (=> b!134766 (= res!64800 (containsKey!176 lt!70002 (_1!1293 (tuple2!2565 lt!69484 lt!69485))))))

(declare-fun b!134767 () Bool)

(assert (=> b!134767 (= e!87777 (contains!886 lt!70002 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69484 lt!69485)) (_2!1293 (tuple2!2565 lt!69484 lt!69485)))))))

(assert (= (and d!41707 res!64799) b!134766))

(assert (= (and b!134766 res!64800) b!134767))

(assert (=> d!41707 m!158235))

(declare-fun m!160395 () Bool)

(assert (=> d!41707 m!160395))

(declare-fun m!160397 () Bool)

(assert (=> d!41707 m!160397))

(declare-fun m!160399 () Bool)

(assert (=> b!134766 m!160399))

(declare-fun m!160401 () Bool)

(assert (=> b!134767 m!160401))

(assert (=> d!40865 d!41707))

(declare-fun b!134768 () Bool)

(declare-fun res!64801 () Bool)

(declare-fun e!87782 () Bool)

(assert (=> b!134768 (=> (not res!64801) (not e!87782))))

(declare-fun lt!70568 () List!1694)

(assert (=> b!134768 (= res!64801 (containsKey!176 lt!70568 (_1!1293 (tuple2!2565 lt!69484 lt!69485))))))

(declare-fun b!134769 () Bool)

(declare-fun e!87780 () List!1694)

(declare-fun e!87781 () List!1694)

(assert (=> b!134769 (= e!87780 e!87781)))

(declare-fun c!25105 () Bool)

(assert (=> b!134769 (= c!25105 (and ((_ is Cons!1690) (toList!842 lt!69482)) (= (_1!1293 (h!2295 (toList!842 lt!69482))) (_1!1293 (tuple2!2565 lt!69484 lt!69485)))))))

(declare-fun bm!14824 () Bool)

(declare-fun call!14828 () List!1694)

(declare-fun call!14827 () List!1694)

(assert (=> bm!14824 (= call!14828 call!14827)))

(declare-fun b!134770 () Bool)

(declare-fun e!87778 () List!1694)

(assert (=> b!134770 (= e!87778 call!14828)))

(declare-fun b!134771 () Bool)

(declare-fun c!25104 () Bool)

(assert (=> b!134771 (= c!25104 (and ((_ is Cons!1690) (toList!842 lt!69482)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69482))) (_1!1293 (tuple2!2565 lt!69484 lt!69485)))))))

(assert (=> b!134771 (= e!87781 e!87778)))

(declare-fun b!134772 () Bool)

(assert (=> b!134772 (= e!87782 (contains!886 lt!70568 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69484 lt!69485)) (_2!1293 (tuple2!2565 lt!69484 lt!69485)))))))

(declare-fun b!134773 () Bool)

(assert (=> b!134773 (= e!87781 call!14827)))

(declare-fun d!41709 () Bool)

(assert (=> d!41709 e!87782))

(declare-fun res!64802 () Bool)

(assert (=> d!41709 (=> (not res!64802) (not e!87782))))

(assert (=> d!41709 (= res!64802 (isStrictlySorted!309 lt!70568))))

(assert (=> d!41709 (= lt!70568 e!87780)))

(declare-fun c!25103 () Bool)

(assert (=> d!41709 (= c!25103 (and ((_ is Cons!1690) (toList!842 lt!69482)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69482))) (_1!1293 (tuple2!2565 lt!69484 lt!69485)))))))

(assert (=> d!41709 (isStrictlySorted!309 (toList!842 lt!69482))))

(assert (=> d!41709 (= (insertStrictlySorted!91 (toList!842 lt!69482) (_1!1293 (tuple2!2565 lt!69484 lt!69485)) (_2!1293 (tuple2!2565 lt!69484 lt!69485))) lt!70568)))

(declare-fun e!87779 () List!1694)

(declare-fun b!134774 () Bool)

(assert (=> b!134774 (= e!87779 (ite c!25105 (t!6137 (toList!842 lt!69482)) (ite c!25104 (Cons!1690 (h!2295 (toList!842 lt!69482)) (t!6137 (toList!842 lt!69482))) Nil!1691)))))

(declare-fun b!134775 () Bool)

(declare-fun call!14829 () List!1694)

(assert (=> b!134775 (= e!87780 call!14829)))

(declare-fun b!134776 () Bool)

(assert (=> b!134776 (= e!87778 call!14828)))

(declare-fun b!134777 () Bool)

(assert (=> b!134777 (= e!87779 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69482)) (_1!1293 (tuple2!2565 lt!69484 lt!69485)) (_2!1293 (tuple2!2565 lt!69484 lt!69485))))))

(declare-fun bm!14825 () Bool)

(assert (=> bm!14825 (= call!14827 call!14829)))

(declare-fun bm!14826 () Bool)

(assert (=> bm!14826 (= call!14829 ($colon$colon!91 e!87779 (ite c!25103 (h!2295 (toList!842 lt!69482)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69484 lt!69485)) (_2!1293 (tuple2!2565 lt!69484 lt!69485))))))))

(declare-fun c!25102 () Bool)

(assert (=> bm!14826 (= c!25102 c!25103)))

(assert (= (and d!41709 c!25103) b!134775))

(assert (= (and d!41709 (not c!25103)) b!134769))

(assert (= (and b!134769 c!25105) b!134773))

(assert (= (and b!134769 (not c!25105)) b!134771))

(assert (= (and b!134771 c!25104) b!134776))

(assert (= (and b!134771 (not c!25104)) b!134770))

(assert (= (or b!134776 b!134770) bm!14824))

(assert (= (or b!134773 bm!14824) bm!14825))

(assert (= (or b!134775 bm!14825) bm!14826))

(assert (= (and bm!14826 c!25102) b!134777))

(assert (= (and bm!14826 (not c!25102)) b!134774))

(assert (= (and d!41709 res!64802) b!134768))

(assert (= (and b!134768 res!64801) b!134772))

(declare-fun m!160403 () Bool)

(assert (=> b!134772 m!160403))

(declare-fun m!160405 () Bool)

(assert (=> b!134777 m!160405))

(declare-fun m!160407 () Bool)

(assert (=> bm!14826 m!160407))

(declare-fun m!160409 () Bool)

(assert (=> b!134768 m!160409))

(declare-fun m!160411 () Bool)

(assert (=> d!41709 m!160411))

(declare-fun m!160413 () Bool)

(assert (=> d!41709 m!160413))

(assert (=> d!40865 d!41709))

(declare-fun d!41711 () Bool)

(assert (=> d!41711 (= (apply!116 lt!69694 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1492 (getValueByKey!173 (toList!842 lt!69694) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!5644 () Bool)

(assert (= bs!5644 d!41711))

(assert (=> bs!5644 m!157309))

(declare-fun m!160415 () Bool)

(assert (=> bs!5644 m!160415))

(assert (=> bs!5644 m!160415))

(declare-fun m!160417 () Bool)

(assert (=> bs!5644 m!160417))

(assert (=> b!133264 d!41711))

(declare-fun d!41713 () Bool)

(declare-fun c!25106 () Bool)

(assert (=> d!41713 (= c!25106 ((_ is ValueCellFull!1094) (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!87783 () V!3481)

(assert (=> d!41713 (= (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87783)))

(declare-fun b!134778 () Bool)

(assert (=> b!134778 (= e!87783 (get!1490 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134779 () Bool)

(assert (=> b!134779 (= e!87783 (get!1491 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41713 c!25106) b!134778))

(assert (= (and d!41713 (not c!25106)) b!134779))

(assert (=> b!134778 m!157317))

(assert (=> b!134778 m!156391))

(declare-fun m!160419 () Bool)

(assert (=> b!134778 m!160419))

(assert (=> b!134779 m!157317))

(assert (=> b!134779 m!156391))

(declare-fun m!160421 () Bool)

(assert (=> b!134779 m!160421))

(assert (=> b!133264 d!41713))

(assert (=> b!133478 d!40673))

(declare-fun d!41715 () Bool)

(assert (=> d!41715 (= (apply!116 lt!69953 lt!69959) (get!1492 (getValueByKey!173 (toList!842 lt!69953) lt!69959)))))

(declare-fun bs!5645 () Bool)

(assert (= bs!5645 d!41715))

(declare-fun m!160423 () Bool)

(assert (=> bs!5645 m!160423))

(assert (=> bs!5645 m!160423))

(declare-fun m!160425 () Bool)

(assert (=> bs!5645 m!160425))

(assert (=> b!133695 d!41715))

(declare-fun d!41717 () Bool)

(assert (=> d!41717 (= (apply!116 (+!169 lt!69967 (tuple2!2565 lt!69956 (zeroValue!2719 newMap!16))) lt!69952) (apply!116 lt!69967 lt!69952))))

(declare-fun lt!70569 () Unit!4141)

(assert (=> d!41717 (= lt!70569 (choose!828 lt!69967 lt!69956 (zeroValue!2719 newMap!16) lt!69952))))

(declare-fun e!87784 () Bool)

(assert (=> d!41717 e!87784))

(declare-fun res!64803 () Bool)

(assert (=> d!41717 (=> (not res!64803) (not e!87784))))

(assert (=> d!41717 (= res!64803 (contains!884 lt!69967 lt!69952))))

(assert (=> d!41717 (= (addApplyDifferent!92 lt!69967 lt!69956 (zeroValue!2719 newMap!16) lt!69952) lt!70569)))

(declare-fun b!134780 () Bool)

(assert (=> b!134780 (= e!87784 (not (= lt!69952 lt!69956)))))

(assert (= (and d!41717 res!64803) b!134780))

(assert (=> d!41717 m!158081))

(assert (=> d!41717 m!158105))

(assert (=> d!41717 m!158085))

(declare-fun m!160427 () Bool)

(assert (=> d!41717 m!160427))

(declare-fun m!160429 () Bool)

(assert (=> d!41717 m!160429))

(assert (=> d!41717 m!158081))

(assert (=> b!133695 d!41717))

(declare-fun d!41719 () Bool)

(declare-fun e!87785 () Bool)

(assert (=> d!41719 e!87785))

(declare-fun res!64805 () Bool)

(assert (=> d!41719 (=> (not res!64805) (not e!87785))))

(declare-fun lt!70572 () ListLongMap!1653)

(assert (=> d!41719 (= res!64805 (contains!884 lt!70572 (_1!1293 (tuple2!2565 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70573 () List!1694)

(assert (=> d!41719 (= lt!70572 (ListLongMap!1654 lt!70573))))

(declare-fun lt!70570 () Unit!4141)

(declare-fun lt!70571 () Unit!4141)

(assert (=> d!41719 (= lt!70570 lt!70571)))

(assert (=> d!41719 (= (getValueByKey!173 lt!70573 (_1!1293 (tuple2!2565 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41719 (= lt!70571 (lemmaContainsTupThenGetReturnValue!88 lt!70573 (_1!1293 (tuple2!2565 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41719 (= lt!70573 (insertStrictlySorted!91 (toList!842 lt!69953) (_1!1293 (tuple2!2565 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41719 (= (+!169 lt!69953 (tuple2!2565 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70572)))

(declare-fun b!134781 () Bool)

(declare-fun res!64804 () Bool)

(assert (=> b!134781 (=> (not res!64804) (not e!87785))))

(assert (=> b!134781 (= res!64804 (= (getValueByKey!173 (toList!842 lt!70572) (_1!1293 (tuple2!2565 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134782 () Bool)

(assert (=> b!134782 (= e!87785 (contains!886 (toList!842 lt!70572) (tuple2!2565 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41719 res!64805) b!134781))

(assert (= (and b!134781 res!64804) b!134782))

(declare-fun m!160431 () Bool)

(assert (=> d!41719 m!160431))

(declare-fun m!160433 () Bool)

(assert (=> d!41719 m!160433))

(declare-fun m!160435 () Bool)

(assert (=> d!41719 m!160435))

(declare-fun m!160437 () Bool)

(assert (=> d!41719 m!160437))

(declare-fun m!160439 () Bool)

(assert (=> b!134781 m!160439))

(declare-fun m!160441 () Bool)

(assert (=> b!134782 m!160441))

(assert (=> b!133695 d!41719))

(declare-fun d!41721 () Bool)

(declare-fun e!87787 () Bool)

(assert (=> d!41721 e!87787))

(declare-fun res!64806 () Bool)

(assert (=> d!41721 (=> res!64806 e!87787)))

(declare-fun lt!70574 () Bool)

(assert (=> d!41721 (= res!64806 (not lt!70574))))

(declare-fun lt!70575 () Bool)

(assert (=> d!41721 (= lt!70574 lt!70575)))

(declare-fun lt!70576 () Unit!4141)

(declare-fun e!87786 () Unit!4141)

(assert (=> d!41721 (= lt!70576 e!87786)))

(declare-fun c!25107 () Bool)

(assert (=> d!41721 (= c!25107 lt!70575)))

(assert (=> d!41721 (= lt!70575 (containsKey!176 (toList!842 (+!169 lt!69949 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16)))) lt!69948))))

(assert (=> d!41721 (= (contains!884 (+!169 lt!69949 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16))) lt!69948) lt!70574)))

(declare-fun b!134783 () Bool)

(declare-fun lt!70577 () Unit!4141)

(assert (=> b!134783 (= e!87786 lt!70577)))

(assert (=> b!134783 (= lt!70577 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69949 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16)))) lt!69948))))

(assert (=> b!134783 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69949 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16)))) lt!69948))))

(declare-fun b!134784 () Bool)

(declare-fun Unit!4234 () Unit!4141)

(assert (=> b!134784 (= e!87786 Unit!4234)))

(declare-fun b!134785 () Bool)

(assert (=> b!134785 (= e!87787 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69949 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16)))) lt!69948)))))

(assert (= (and d!41721 c!25107) b!134783))

(assert (= (and d!41721 (not c!25107)) b!134784))

(assert (= (and d!41721 (not res!64806)) b!134785))

(declare-fun m!160443 () Bool)

(assert (=> d!41721 m!160443))

(declare-fun m!160445 () Bool)

(assert (=> b!134783 m!160445))

(declare-fun m!160447 () Bool)

(assert (=> b!134783 m!160447))

(assert (=> b!134783 m!160447))

(declare-fun m!160449 () Bool)

(assert (=> b!134783 m!160449))

(assert (=> b!134785 m!160447))

(assert (=> b!134785 m!160447))

(assert (=> b!134785 m!160449))

(assert (=> b!133695 d!41721))

(declare-fun d!41723 () Bool)

(assert (=> d!41723 (= (apply!116 lt!69955 lt!69957) (get!1492 (getValueByKey!173 (toList!842 lt!69955) lt!69957)))))

(declare-fun bs!5646 () Bool)

(assert (= bs!5646 d!41723))

(declare-fun m!160451 () Bool)

(assert (=> bs!5646 m!160451))

(assert (=> bs!5646 m!160451))

(declare-fun m!160453 () Bool)

(assert (=> bs!5646 m!160453))

(assert (=> b!133695 d!41723))

(declare-fun d!41725 () Bool)

(assert (=> d!41725 (= (apply!116 (+!169 lt!69967 (tuple2!2565 lt!69956 (zeroValue!2719 newMap!16))) lt!69952) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69967 (tuple2!2565 lt!69956 (zeroValue!2719 newMap!16)))) lt!69952)))))

(declare-fun bs!5647 () Bool)

(assert (= bs!5647 d!41725))

(declare-fun m!160455 () Bool)

(assert (=> bs!5647 m!160455))

(assert (=> bs!5647 m!160455))

(declare-fun m!160457 () Bool)

(assert (=> bs!5647 m!160457))

(assert (=> b!133695 d!41725))

(declare-fun d!41727 () Bool)

(assert (=> d!41727 (= (apply!116 (+!169 lt!69955 (tuple2!2565 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69957) (apply!116 lt!69955 lt!69957))))

(declare-fun lt!70578 () Unit!4141)

(assert (=> d!41727 (= lt!70578 (choose!828 lt!69955 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69957))))

(declare-fun e!87788 () Bool)

(assert (=> d!41727 e!87788))

(declare-fun res!64807 () Bool)

(assert (=> d!41727 (=> (not res!64807) (not e!87788))))

(assert (=> d!41727 (= res!64807 (contains!884 lt!69955 lt!69957))))

(assert (=> d!41727 (= (addApplyDifferent!92 lt!69955 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69957) lt!70578)))

(declare-fun b!134786 () Bool)

(assert (=> b!134786 (= e!87788 (not (= lt!69957 lt!69947)))))

(assert (= (and d!41727 res!64807) b!134786))

(assert (=> d!41727 m!158083))

(assert (=> d!41727 m!158097))

(assert (=> d!41727 m!158079))

(declare-fun m!160459 () Bool)

(assert (=> d!41727 m!160459))

(assert (=> d!41727 m!156393))

(declare-fun m!160461 () Bool)

(assert (=> d!41727 m!160461))

(assert (=> d!41727 m!158083))

(assert (=> b!133695 d!41727))

(declare-fun d!41729 () Bool)

(declare-fun e!87789 () Bool)

(assert (=> d!41729 e!87789))

(declare-fun res!64809 () Bool)

(assert (=> d!41729 (=> (not res!64809) (not e!87789))))

(declare-fun lt!70581 () ListLongMap!1653)

(assert (=> d!41729 (= res!64809 (contains!884 lt!70581 (_1!1293 (tuple2!2565 lt!69956 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70582 () List!1694)

(assert (=> d!41729 (= lt!70581 (ListLongMap!1654 lt!70582))))

(declare-fun lt!70579 () Unit!4141)

(declare-fun lt!70580 () Unit!4141)

(assert (=> d!41729 (= lt!70579 lt!70580)))

(assert (=> d!41729 (= (getValueByKey!173 lt!70582 (_1!1293 (tuple2!2565 lt!69956 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69956 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41729 (= lt!70580 (lemmaContainsTupThenGetReturnValue!88 lt!70582 (_1!1293 (tuple2!2565 lt!69956 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69956 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41729 (= lt!70582 (insertStrictlySorted!91 (toList!842 lt!69967) (_1!1293 (tuple2!2565 lt!69956 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69956 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41729 (= (+!169 lt!69967 (tuple2!2565 lt!69956 (zeroValue!2719 newMap!16))) lt!70581)))

(declare-fun b!134787 () Bool)

(declare-fun res!64808 () Bool)

(assert (=> b!134787 (=> (not res!64808) (not e!87789))))

(assert (=> b!134787 (= res!64808 (= (getValueByKey!173 (toList!842 lt!70581) (_1!1293 (tuple2!2565 lt!69956 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69956 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134788 () Bool)

(assert (=> b!134788 (= e!87789 (contains!886 (toList!842 lt!70581) (tuple2!2565 lt!69956 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41729 res!64809) b!134787))

(assert (= (and b!134787 res!64808) b!134788))

(declare-fun m!160463 () Bool)

(assert (=> d!41729 m!160463))

(declare-fun m!160465 () Bool)

(assert (=> d!41729 m!160465))

(declare-fun m!160467 () Bool)

(assert (=> d!41729 m!160467))

(declare-fun m!160469 () Bool)

(assert (=> d!41729 m!160469))

(declare-fun m!160471 () Bool)

(assert (=> b!134787 m!160471))

(declare-fun m!160473 () Bool)

(assert (=> b!134788 m!160473))

(assert (=> b!133695 d!41729))

(declare-fun d!41731 () Bool)

(declare-fun e!87790 () Bool)

(assert (=> d!41731 e!87790))

(declare-fun res!64811 () Bool)

(assert (=> d!41731 (=> (not res!64811) (not e!87790))))

(declare-fun lt!70585 () ListLongMap!1653)

(assert (=> d!41731 (= res!64811 (contains!884 lt!70585 (_1!1293 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70586 () List!1694)

(assert (=> d!41731 (= lt!70585 (ListLongMap!1654 lt!70586))))

(declare-fun lt!70583 () Unit!4141)

(declare-fun lt!70584 () Unit!4141)

(assert (=> d!41731 (= lt!70583 lt!70584)))

(assert (=> d!41731 (= (getValueByKey!173 lt!70586 (_1!1293 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41731 (= lt!70584 (lemmaContainsTupThenGetReturnValue!88 lt!70586 (_1!1293 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41731 (= lt!70586 (insertStrictlySorted!91 (toList!842 lt!69949) (_1!1293 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16)))))))

(assert (=> d!41731 (= (+!169 lt!69949 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16))) lt!70585)))

(declare-fun b!134789 () Bool)

(declare-fun res!64810 () Bool)

(assert (=> b!134789 (=> (not res!64810) (not e!87790))))

(assert (=> b!134789 (= res!64810 (= (getValueByKey!173 (toList!842 lt!70585) (_1!1293 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16))))))))

(declare-fun b!134790 () Bool)

(assert (=> b!134790 (= e!87790 (contains!886 (toList!842 lt!70585) (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41731 res!64811) b!134789))

(assert (= (and b!134789 res!64810) b!134790))

(declare-fun m!160475 () Bool)

(assert (=> d!41731 m!160475))

(declare-fun m!160477 () Bool)

(assert (=> d!41731 m!160477))

(declare-fun m!160479 () Bool)

(assert (=> d!41731 m!160479))

(declare-fun m!160481 () Bool)

(assert (=> d!41731 m!160481))

(declare-fun m!160483 () Bool)

(assert (=> b!134789 m!160483))

(declare-fun m!160485 () Bool)

(assert (=> b!134790 m!160485))

(assert (=> b!133695 d!41731))

(declare-fun d!41733 () Bool)

(assert (=> d!41733 (= (apply!116 lt!69967 lt!69952) (get!1492 (getValueByKey!173 (toList!842 lt!69967) lt!69952)))))

(declare-fun bs!5648 () Bool)

(assert (= bs!5648 d!41733))

(declare-fun m!160487 () Bool)

(assert (=> bs!5648 m!160487))

(assert (=> bs!5648 m!160487))

(declare-fun m!160489 () Bool)

(assert (=> bs!5648 m!160489))

(assert (=> b!133695 d!41733))

(declare-fun d!41735 () Bool)

(assert (=> d!41735 (contains!884 (+!169 lt!69949 (tuple2!2565 lt!69964 (zeroValue!2719 newMap!16))) lt!69948)))

(declare-fun lt!70587 () Unit!4141)

(assert (=> d!41735 (= lt!70587 (choose!829 lt!69949 lt!69964 (zeroValue!2719 newMap!16) lt!69948))))

(assert (=> d!41735 (contains!884 lt!69949 lt!69948)))

(assert (=> d!41735 (= (addStillContains!92 lt!69949 lt!69964 (zeroValue!2719 newMap!16) lt!69948) lt!70587)))

(declare-fun bs!5649 () Bool)

(assert (= bs!5649 d!41735))

(assert (=> bs!5649 m!158101))

(assert (=> bs!5649 m!158101))

(assert (=> bs!5649 m!158103))

(declare-fun m!160491 () Bool)

(assert (=> bs!5649 m!160491))

(declare-fun m!160493 () Bool)

(assert (=> bs!5649 m!160493))

(assert (=> b!133695 d!41735))

(declare-fun d!41737 () Bool)

(assert (=> d!41737 (= (apply!116 (+!169 lt!69953 (tuple2!2565 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69959) (apply!116 lt!69953 lt!69959))))

(declare-fun lt!70588 () Unit!4141)

(assert (=> d!41737 (= lt!70588 (choose!828 lt!69953 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69959))))

(declare-fun e!87791 () Bool)

(assert (=> d!41737 e!87791))

(declare-fun res!64812 () Bool)

(assert (=> d!41737 (=> (not res!64812) (not e!87791))))

(assert (=> d!41737 (= res!64812 (contains!884 lt!69953 lt!69959))))

(assert (=> d!41737 (= (addApplyDifferent!92 lt!69953 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69959) lt!70588)))

(declare-fun b!134791 () Bool)

(assert (=> b!134791 (= e!87791 (not (= lt!69959 lt!69951)))))

(assert (= (and d!41737 res!64812) b!134791))

(assert (=> d!41737 m!158089))

(assert (=> d!41737 m!158091))

(assert (=> d!41737 m!158075))

(declare-fun m!160495 () Bool)

(assert (=> d!41737 m!160495))

(assert (=> d!41737 m!156393))

(declare-fun m!160497 () Bool)

(assert (=> d!41737 m!160497))

(assert (=> d!41737 m!158089))

(assert (=> b!133695 d!41737))

(declare-fun d!41739 () Bool)

(assert (=> d!41739 (= (apply!116 (+!169 lt!69953 (tuple2!2565 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69959) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69953 (tuple2!2565 lt!69951 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69959)))))

(declare-fun bs!5650 () Bool)

(assert (= bs!5650 d!41739))

(declare-fun m!160499 () Bool)

(assert (=> bs!5650 m!160499))

(assert (=> bs!5650 m!160499))

(declare-fun m!160501 () Bool)

(assert (=> bs!5650 m!160501))

(assert (=> b!133695 d!41739))

(declare-fun d!41741 () Bool)

(declare-fun e!87792 () Bool)

(assert (=> d!41741 e!87792))

(declare-fun res!64814 () Bool)

(assert (=> d!41741 (=> (not res!64814) (not e!87792))))

(declare-fun lt!70591 () ListLongMap!1653)

(assert (=> d!41741 (= res!64814 (contains!884 lt!70591 (_1!1293 (tuple2!2565 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70592 () List!1694)

(assert (=> d!41741 (= lt!70591 (ListLongMap!1654 lt!70592))))

(declare-fun lt!70589 () Unit!4141)

(declare-fun lt!70590 () Unit!4141)

(assert (=> d!41741 (= lt!70589 lt!70590)))

(assert (=> d!41741 (= (getValueByKey!173 lt!70592 (_1!1293 (tuple2!2565 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41741 (= lt!70590 (lemmaContainsTupThenGetReturnValue!88 lt!70592 (_1!1293 (tuple2!2565 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41741 (= lt!70592 (insertStrictlySorted!91 (toList!842 lt!69955) (_1!1293 (tuple2!2565 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41741 (= (+!169 lt!69955 (tuple2!2565 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70591)))

(declare-fun b!134792 () Bool)

(declare-fun res!64813 () Bool)

(assert (=> b!134792 (=> (not res!64813) (not e!87792))))

(assert (=> b!134792 (= res!64813 (= (getValueByKey!173 (toList!842 lt!70591) (_1!1293 (tuple2!2565 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134793 () Bool)

(assert (=> b!134793 (= e!87792 (contains!886 (toList!842 lt!70591) (tuple2!2565 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41741 res!64814) b!134792))

(assert (= (and b!134792 res!64813) b!134793))

(declare-fun m!160503 () Bool)

(assert (=> d!41741 m!160503))

(declare-fun m!160505 () Bool)

(assert (=> d!41741 m!160505))

(declare-fun m!160507 () Bool)

(assert (=> d!41741 m!160507))

(declare-fun m!160509 () Bool)

(assert (=> d!41741 m!160509))

(declare-fun m!160511 () Bool)

(assert (=> b!134792 m!160511))

(declare-fun m!160513 () Bool)

(assert (=> b!134793 m!160513))

(assert (=> b!133695 d!41741))

(declare-fun d!41743 () Bool)

(assert (=> d!41743 (= (apply!116 (+!169 lt!69955 (tuple2!2565 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69957) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69955 (tuple2!2565 lt!69947 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69957)))))

(declare-fun bs!5651 () Bool)

(assert (= bs!5651 d!41743))

(declare-fun m!160515 () Bool)

(assert (=> bs!5651 m!160515))

(assert (=> bs!5651 m!160515))

(declare-fun m!160517 () Bool)

(assert (=> bs!5651 m!160517))

(assert (=> b!133695 d!41743))

(declare-fun b!134794 () Bool)

(assert (=> b!134794 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> b!134794 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (_values!2847 newMap!16))))))

(declare-fun e!87799 () Bool)

(declare-fun lt!70597 () ListLongMap!1653)

(assert (=> b!134794 (= e!87799 (= (apply!116 lt!70597 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!134795 () Bool)

(declare-fun res!64817 () Bool)

(declare-fun e!87797 () Bool)

(assert (=> b!134795 (=> (not res!64817) (not e!87797))))

(assert (=> b!134795 (= res!64817 (not (contains!884 lt!70597 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134796 () Bool)

(declare-fun e!87794 () Bool)

(assert (=> b!134796 (= e!87794 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134796 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!134797 () Bool)

(declare-fun e!87795 () Bool)

(declare-fun e!87796 () Bool)

(assert (=> b!134797 (= e!87795 e!87796)))

(declare-fun c!25111 () Bool)

(assert (=> b!134797 (= c!25111 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!134798 () Bool)

(assert (=> b!134798 (= e!87796 (= lt!70597 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69279 (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun bm!14827 () Bool)

(declare-fun call!14830 () ListLongMap!1653)

(assert (=> bm!14827 (= call!14830 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69279 (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!134799 () Bool)

(declare-fun e!87793 () ListLongMap!1653)

(assert (=> b!134799 (= e!87793 call!14830)))

(declare-fun b!134800 () Bool)

(declare-fun e!87798 () ListLongMap!1653)

(assert (=> b!134800 (= e!87798 e!87793)))

(declare-fun c!25108 () Bool)

(assert (=> b!134800 (= c!25108 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!41745 () Bool)

(assert (=> d!41745 e!87797))

(declare-fun res!64815 () Bool)

(assert (=> d!41745 (=> (not res!64815) (not e!87797))))

(assert (=> d!41745 (= res!64815 (not (contains!884 lt!70597 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41745 (= lt!70597 e!87798)))

(declare-fun c!25109 () Bool)

(assert (=> d!41745 (= c!25109 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!41745 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!41745 (= (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69279 (zeroValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!70597)))

(declare-fun b!134801 () Bool)

(assert (=> b!134801 (= e!87795 e!87799)))

(assert (=> b!134801 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!64816 () Bool)

(assert (=> b!134801 (= res!64816 (contains!884 lt!70597 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134801 (=> (not res!64816) (not e!87799))))

(declare-fun b!134802 () Bool)

(assert (=> b!134802 (= e!87798 (ListLongMap!1654 Nil!1691))))

(declare-fun b!134803 () Bool)

(assert (=> b!134803 (= e!87796 (isEmpty!415 lt!70597))))

(declare-fun b!134804 () Bool)

(declare-fun lt!70594 () Unit!4141)

(declare-fun lt!70598 () Unit!4141)

(assert (=> b!134804 (= lt!70594 lt!70598)))

(declare-fun lt!70595 () (_ BitVec 64))

(declare-fun lt!70599 () (_ BitVec 64))

(declare-fun lt!70593 () ListLongMap!1653)

(declare-fun lt!70596 () V!3481)

(assert (=> b!134804 (not (contains!884 (+!169 lt!70593 (tuple2!2565 lt!70595 lt!70596)) lt!70599))))

(assert (=> b!134804 (= lt!70598 (addStillNotContains!63 lt!70593 lt!70595 lt!70596 lt!70599))))

(assert (=> b!134804 (= lt!70599 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!134804 (= lt!70596 (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!134804 (= lt!70595 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!134804 (= lt!70593 call!14830)))

(assert (=> b!134804 (= e!87793 (+!169 call!14830 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134805 () Bool)

(assert (=> b!134805 (= e!87797 e!87795)))

(declare-fun c!25110 () Bool)

(assert (=> b!134805 (= c!25110 e!87794)))

(declare-fun res!64818 () Bool)

(assert (=> b!134805 (=> (not res!64818) (not e!87794))))

(assert (=> b!134805 (= res!64818 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (= (and d!41745 c!25109) b!134802))

(assert (= (and d!41745 (not c!25109)) b!134800))

(assert (= (and b!134800 c!25108) b!134804))

(assert (= (and b!134800 (not c!25108)) b!134799))

(assert (= (or b!134804 b!134799) bm!14827))

(assert (= (and d!41745 res!64815) b!134795))

(assert (= (and b!134795 res!64817) b!134805))

(assert (= (and b!134805 res!64818) b!134796))

(assert (= (and b!134805 c!25110) b!134801))

(assert (= (and b!134805 (not c!25110)) b!134797))

(assert (= (and b!134801 res!64816) b!134794))

(assert (= (and b!134797 c!25111) b!134798))

(assert (= (and b!134797 (not c!25111)) b!134803))

(declare-fun b_lambda!6029 () Bool)

(assert (=> (not b_lambda!6029) (not b!134794)))

(assert (=> b!134794 t!6147))

(declare-fun b_and!8369 () Bool)

(assert (= b_and!8365 (and (=> t!6147 result!3993) b_and!8369)))

(assert (=> b!134794 t!6149))

(declare-fun b_and!8371 () Bool)

(assert (= b_and!8367 (and (=> t!6149 result!3995) b_and!8371)))

(declare-fun b_lambda!6031 () Bool)

(assert (=> (not b_lambda!6031) (not b!134804)))

(assert (=> b!134804 t!6147))

(declare-fun b_and!8373 () Bool)

(assert (= b_and!8369 (and (=> t!6147 result!3993) b_and!8373)))

(assert (=> b!134804 t!6149))

(declare-fun b_and!8375 () Bool)

(assert (= b_and!8371 (and (=> t!6149 result!3995) b_and!8375)))

(declare-fun m!160519 () Bool)

(assert (=> b!134803 m!160519))

(assert (=> b!134800 m!156679))

(assert (=> b!134800 m!156679))

(assert (=> b!134800 m!156689))

(assert (=> b!134796 m!156679))

(assert (=> b!134796 m!156679))

(assert (=> b!134796 m!156689))

(assert (=> b!134798 m!156393))

(declare-fun m!160521 () Bool)

(assert (=> b!134798 m!160521))

(declare-fun m!160523 () Bool)

(assert (=> b!134795 m!160523))

(assert (=> b!134804 m!156881))

(assert (=> b!134804 m!156809))

(assert (=> b!134804 m!156883))

(declare-fun m!160525 () Bool)

(assert (=> b!134804 m!160525))

(declare-fun m!160527 () Bool)

(assert (=> b!134804 m!160527))

(assert (=> b!134804 m!156881))

(declare-fun m!160529 () Bool)

(assert (=> b!134804 m!160529))

(assert (=> b!134804 m!160525))

(declare-fun m!160531 () Bool)

(assert (=> b!134804 m!160531))

(assert (=> b!134804 m!156679))

(assert (=> b!134804 m!156809))

(assert (=> b!134801 m!156679))

(assert (=> b!134801 m!156679))

(declare-fun m!160533 () Bool)

(assert (=> b!134801 m!160533))

(declare-fun m!160535 () Bool)

(assert (=> d!41745 m!160535))

(assert (=> d!41745 m!156651))

(assert (=> bm!14827 m!156393))

(assert (=> bm!14827 m!160521))

(assert (=> b!134794 m!156881))

(assert (=> b!134794 m!156809))

(assert (=> b!134794 m!156883))

(assert (=> b!134794 m!156881))

(assert (=> b!134794 m!156679))

(declare-fun m!160537 () Bool)

(assert (=> b!134794 m!160537))

(assert (=> b!134794 m!156679))

(assert (=> b!134794 m!156809))

(assert (=> b!133695 d!41745))

(assert (=> d!40939 d!40635))

(assert (=> d!40939 d!40637))

(declare-fun d!41747 () Bool)

(assert (=> d!41747 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334))))

(assert (=> d!41747 true))

(declare-fun _$12!401 () Unit!4141)

(assert (=> d!41747 (= (choose!831 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334) _$12!401)))

(declare-fun bs!5652 () Bool)

(assert (= bs!5652 d!41747))

(assert (=> bs!5652 m!157097))

(assert (=> bs!5652 m!157097))

(assert (=> bs!5652 m!157099))

(assert (=> d!40939 d!41747))

(declare-fun d!41749 () Bool)

(declare-fun res!64819 () Bool)

(declare-fun e!87800 () Bool)

(assert (=> d!41749 (=> res!64819 e!87800)))

(assert (=> d!41749 (= res!64819 (or ((_ is Nil!1691) (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Nil!1691) (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))))

(assert (=> d!41749 (= (isStrictlySorted!309 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) e!87800)))

(declare-fun b!134806 () Bool)

(declare-fun e!87801 () Bool)

(assert (=> b!134806 (= e!87800 e!87801)))

(declare-fun res!64820 () Bool)

(assert (=> b!134806 (=> (not res!64820) (not e!87801))))

(assert (=> b!134806 (= res!64820 (bvslt (_1!1293 (h!2295 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (_1!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))))

(declare-fun b!134807 () Bool)

(assert (=> b!134807 (= e!87801 (isStrictlySorted!309 (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (= (and d!41749 (not res!64819)) b!134806))

(assert (= (and b!134806 res!64820) b!134807))

(declare-fun m!160539 () Bool)

(assert (=> b!134807 m!160539))

(assert (=> d!40939 d!41749))

(declare-fun d!41751 () Bool)

(assert (=> d!41751 (arrayContainsKey!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) lt!69760 #b00000000000000000000000000000000)))

(declare-fun lt!70600 () Unit!4141)

(assert (=> d!41751 (= lt!70600 (choose!13 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) lt!69760 #b00000000000000000000000000000000))))

(assert (=> d!41751 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!41751 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) lt!69760 #b00000000000000000000000000000000) lt!70600)))

(declare-fun bs!5653 () Bool)

(assert (= bs!5653 d!41751))

(assert (=> bs!5653 m!157543))

(declare-fun m!160541 () Bool)

(assert (=> bs!5653 m!160541))

(assert (=> b!133410 d!41751))

(declare-fun d!41753 () Bool)

(declare-fun res!64821 () Bool)

(declare-fun e!87802 () Bool)

(assert (=> d!41753 (=> res!64821 e!87802)))

(assert (=> d!41753 (= res!64821 (= (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000) lt!69760))))

(assert (=> d!41753 (= (arrayContainsKey!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) lt!69760 #b00000000000000000000000000000000) e!87802)))

(declare-fun b!134808 () Bool)

(declare-fun e!87803 () Bool)

(assert (=> b!134808 (= e!87802 e!87803)))

(declare-fun res!64822 () Bool)

(assert (=> b!134808 (=> (not res!64822) (not e!87803))))

(assert (=> b!134808 (= res!64822 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(declare-fun b!134809 () Bool)

(assert (=> b!134809 (= e!87803 (arrayContainsKey!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) lt!69760 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!41753 (not res!64821)) b!134808))

(assert (= (and b!134808 res!64822) b!134809))

(assert (=> d!41753 m!157539))

(declare-fun m!160543 () Bool)

(assert (=> b!134809 m!160543))

(assert (=> b!133410 d!41753))

(declare-fun b!134810 () Bool)

(declare-fun c!25112 () Bool)

(declare-fun lt!70602 () (_ BitVec 64))

(assert (=> b!134810 (= c!25112 (= lt!70602 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87805 () SeekEntryResult!269)

(declare-fun e!87806 () SeekEntryResult!269)

(assert (=> b!134810 (= e!87805 e!87806)))

(declare-fun d!41755 () Bool)

(declare-fun lt!70601 () SeekEntryResult!269)

(assert (=> d!41755 (and (or ((_ is Undefined!269) lt!70601) (not ((_ is Found!269) lt!70601)) (and (bvsge (index!3237 lt!70601) #b00000000000000000000000000000000) (bvslt (index!3237 lt!70601) (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))) (or ((_ is Undefined!269) lt!70601) ((_ is Found!269) lt!70601) (not ((_ is MissingZero!269) lt!70601)) (and (bvsge (index!3236 lt!70601) #b00000000000000000000000000000000) (bvslt (index!3236 lt!70601) (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))) (or ((_ is Undefined!269) lt!70601) ((_ is Found!269) lt!70601) ((_ is MissingZero!269) lt!70601) (not ((_ is MissingVacant!269) lt!70601)) (and (bvsge (index!3239 lt!70601) #b00000000000000000000000000000000) (bvslt (index!3239 lt!70601) (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))) (or ((_ is Undefined!269) lt!70601) (ite ((_ is Found!269) lt!70601) (= (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) (index!3237 lt!70601)) (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!269) lt!70601) (= (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) (index!3236 lt!70601)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!269) lt!70601) (= (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) (index!3239 lt!70601)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87804 () SeekEntryResult!269)

(assert (=> d!41755 (= lt!70601 e!87804)))

(declare-fun c!25114 () Bool)

(declare-fun lt!70603 () SeekEntryResult!269)

(assert (=> d!41755 (= c!25114 (and ((_ is Intermediate!269) lt!70603) (undefined!1081 lt!70603)))))

(assert (=> d!41755 (= lt!70603 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000) (mask!7164 newMap!16)) (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000) (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (mask!7164 newMap!16)))))

(assert (=> d!41755 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!41755 (= (seekEntryOrOpen!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000) (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (mask!7164 newMap!16)) lt!70601)))

(declare-fun b!134811 () Bool)

(assert (=> b!134811 (= e!87806 (seekKeyOrZeroReturnVacant!0 (x!15586 lt!70603) (index!3238 lt!70603) (index!3238 lt!70603) (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000) (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (mask!7164 newMap!16)))))

(declare-fun b!134812 () Bool)

(assert (=> b!134812 (= e!87806 (MissingZero!269 (index!3238 lt!70603)))))

(declare-fun b!134813 () Bool)

(assert (=> b!134813 (= e!87804 e!87805)))

(assert (=> b!134813 (= lt!70602 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) (index!3238 lt!70603)))))

(declare-fun c!25113 () Bool)

(assert (=> b!134813 (= c!25113 (= lt!70602 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!134814 () Bool)

(assert (=> b!134814 (= e!87805 (Found!269 (index!3238 lt!70603)))))

(declare-fun b!134815 () Bool)

(assert (=> b!134815 (= e!87804 Undefined!269)))

(assert (= (and d!41755 c!25114) b!134815))

(assert (= (and d!41755 (not c!25114)) b!134813))

(assert (= (and b!134813 c!25113) b!134814))

(assert (= (and b!134813 (not c!25113)) b!134810))

(assert (= (and b!134810 c!25112) b!134812))

(assert (= (and b!134810 (not c!25112)) b!134811))

(assert (=> d!41755 m!157539))

(declare-fun m!160545 () Bool)

(assert (=> d!41755 m!160545))

(assert (=> d!41755 m!156651))

(assert (=> d!41755 m!160545))

(assert (=> d!41755 m!157539))

(declare-fun m!160547 () Bool)

(assert (=> d!41755 m!160547))

(declare-fun m!160549 () Bool)

(assert (=> d!41755 m!160549))

(declare-fun m!160551 () Bool)

(assert (=> d!41755 m!160551))

(declare-fun m!160553 () Bool)

(assert (=> d!41755 m!160553))

(assert (=> b!134811 m!157539))

(declare-fun m!160555 () Bool)

(assert (=> b!134811 m!160555))

(declare-fun m!160557 () Bool)

(assert (=> b!134813 m!160557))

(assert (=> b!133410 d!41755))

(declare-fun d!41757 () Bool)

(declare-fun res!64823 () Bool)

(declare-fun e!87807 () Bool)

(assert (=> d!41757 (=> res!64823 e!87807)))

(assert (=> d!41757 (= res!64823 (and ((_ is Cons!1690) lt!69635) (= (_1!1293 (h!2295 lt!69635)) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41757 (= (containsKey!176 lt!69635 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87807)))

(declare-fun b!134816 () Bool)

(declare-fun e!87808 () Bool)

(assert (=> b!134816 (= e!87807 e!87808)))

(declare-fun res!64824 () Bool)

(assert (=> b!134816 (=> (not res!64824) (not e!87808))))

(assert (=> b!134816 (= res!64824 (and (or (not ((_ is Cons!1690) lt!69635)) (bvsle (_1!1293 (h!2295 lt!69635)) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Cons!1690) lt!69635) (bvslt (_1!1293 (h!2295 lt!69635)) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134817 () Bool)

(assert (=> b!134817 (= e!87808 (containsKey!176 (t!6137 lt!69635) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41757 (not res!64823)) b!134816))

(assert (= (and b!134816 res!64824) b!134817))

(declare-fun m!160559 () Bool)

(assert (=> b!134817 m!160559))

(assert (=> b!133722 d!41757))

(declare-fun d!41759 () Bool)

(declare-fun res!64825 () Bool)

(declare-fun e!87809 () Bool)

(assert (=> d!41759 (=> res!64825 e!87809)))

(assert (=> d!41759 (= res!64825 (or ((_ is Nil!1691) lt!69915) ((_ is Nil!1691) (t!6137 lt!69915))))))

(assert (=> d!41759 (= (isStrictlySorted!309 lt!69915) e!87809)))

(declare-fun b!134818 () Bool)

(declare-fun e!87810 () Bool)

(assert (=> b!134818 (= e!87809 e!87810)))

(declare-fun res!64826 () Bool)

(assert (=> b!134818 (=> (not res!64826) (not e!87810))))

(assert (=> b!134818 (= res!64826 (bvslt (_1!1293 (h!2295 lt!69915)) (_1!1293 (h!2295 (t!6137 lt!69915)))))))

(declare-fun b!134819 () Bool)

(assert (=> b!134819 (= e!87810 (isStrictlySorted!309 (t!6137 lt!69915)))))

(assert (= (and d!41759 (not res!64825)) b!134818))

(assert (= (and b!134818 res!64826) b!134819))

(declare-fun m!160561 () Bool)

(assert (=> b!134819 m!160561))

(assert (=> d!40801 d!41759))

(declare-fun d!41761 () Bool)

(declare-fun res!64827 () Bool)

(declare-fun e!87811 () Bool)

(assert (=> d!41761 (=> res!64827 e!87811)))

(assert (=> d!41761 (= res!64827 (or ((_ is Nil!1691) (toList!842 lt!69339)) ((_ is Nil!1691) (t!6137 (toList!842 lt!69339)))))))

(assert (=> d!41761 (= (isStrictlySorted!309 (toList!842 lt!69339)) e!87811)))

(declare-fun b!134820 () Bool)

(declare-fun e!87812 () Bool)

(assert (=> b!134820 (= e!87811 e!87812)))

(declare-fun res!64828 () Bool)

(assert (=> b!134820 (=> (not res!64828) (not e!87812))))

(assert (=> b!134820 (= res!64828 (bvslt (_1!1293 (h!2295 (toList!842 lt!69339))) (_1!1293 (h!2295 (t!6137 (toList!842 lt!69339))))))))

(declare-fun b!134821 () Bool)

(assert (=> b!134821 (= e!87812 (isStrictlySorted!309 (t!6137 (toList!842 lt!69339))))))

(assert (= (and d!41761 (not res!64827)) b!134820))

(assert (= (and b!134820 res!64828) b!134821))

(declare-fun m!160563 () Bool)

(assert (=> b!134821 m!160563))

(assert (=> d!40801 d!41761))

(declare-fun d!41763 () Bool)

(declare-fun c!25117 () Bool)

(assert (=> d!41763 (= c!25117 ((_ is Nil!1691) (toList!842 lt!69605)))))

(declare-fun e!87815 () (InoxSet tuple2!2564))

(assert (=> d!41763 (= (content!134 (toList!842 lt!69605)) e!87815)))

(declare-fun b!134826 () Bool)

(assert (=> b!134826 (= e!87815 ((as const (Array tuple2!2564 Bool)) false))))

(declare-fun b!134827 () Bool)

(assert (=> b!134827 (= e!87815 ((_ map or) (store ((as const (Array tuple2!2564 Bool)) false) (h!2295 (toList!842 lt!69605)) true) (content!134 (t!6137 (toList!842 lt!69605)))))))

(assert (= (and d!41763 c!25117) b!134826))

(assert (= (and d!41763 (not c!25117)) b!134827))

(declare-fun m!160565 () Bool)

(assert (=> b!134827 m!160565))

(assert (=> b!134827 m!159605))

(assert (=> d!40965 d!41763))

(declare-fun d!41765 () Bool)

(assert (=> d!41765 (= ($colon$colon!91 e!87313 (ite c!24901 (h!2295 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))) (tuple2!2565 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))) (Cons!1690 (ite c!24901 (h!2295 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))) (tuple2!2565 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) e!87313))))

(assert (=> bm!14778 d!41765))

(declare-fun d!41767 () Bool)

(assert (=> d!41767 (= (validKeyInArray!0 (select (arr!2252 lt!69456) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))) (and (not (= (select (arr!2252 lt!69456) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2252 lt!69456) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133485 d!41767))

(declare-fun d!41769 () Bool)

(declare-fun e!87817 () Bool)

(assert (=> d!41769 e!87817))

(declare-fun res!64829 () Bool)

(assert (=> d!41769 (=> res!64829 e!87817)))

(declare-fun lt!70604 () Bool)

(assert (=> d!41769 (= res!64829 (not lt!70604))))

(declare-fun lt!70605 () Bool)

(assert (=> d!41769 (= lt!70604 lt!70605)))

(declare-fun lt!70606 () Unit!4141)

(declare-fun e!87816 () Unit!4141)

(assert (=> d!41769 (= lt!70606 e!87816)))

(declare-fun c!25118 () Bool)

(assert (=> d!41769 (= c!25118 lt!70605)))

(assert (=> d!41769 (= lt!70605 (containsKey!176 (toList!842 lt!69707) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!41769 (= (contains!884 lt!69707 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70604)))

(declare-fun b!134828 () Bool)

(declare-fun lt!70607 () Unit!4141)

(assert (=> b!134828 (= e!87816 lt!70607)))

(assert (=> b!134828 (= lt!70607 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69707) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> b!134828 (isDefined!125 (getValueByKey!173 (toList!842 lt!69707) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!134829 () Bool)

(declare-fun Unit!4235 () Unit!4141)

(assert (=> b!134829 (= e!87816 Unit!4235)))

(declare-fun b!134830 () Bool)

(assert (=> b!134830 (= e!87817 (isDefined!125 (getValueByKey!173 (toList!842 lt!69707) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (= (and d!41769 c!25118) b!134828))

(assert (= (and d!41769 (not c!25118)) b!134829))

(assert (= (and d!41769 (not res!64829)) b!134830))

(declare-fun m!160567 () Bool)

(assert (=> d!41769 m!160567))

(declare-fun m!160569 () Bool)

(assert (=> b!134828 m!160569))

(assert (=> b!134828 m!157375))

(assert (=> b!134828 m!157375))

(declare-fun m!160571 () Bool)

(assert (=> b!134828 m!160571))

(assert (=> b!134830 m!157375))

(assert (=> b!134830 m!157375))

(assert (=> b!134830 m!160571))

(assert (=> d!40613 d!41769))

(declare-fun b!134832 () Bool)

(declare-fun e!87818 () Option!179)

(declare-fun e!87819 () Option!179)

(assert (=> b!134832 (= e!87818 e!87819)))

(declare-fun c!25120 () Bool)

(assert (=> b!134832 (= c!25120 (and ((_ is Cons!1690) lt!69708) (not (= (_1!1293 (h!2295 lt!69708)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!134831 () Bool)

(assert (=> b!134831 (= e!87818 (Some!178 (_2!1293 (h!2295 lt!69708))))))

(declare-fun c!25119 () Bool)

(declare-fun d!41771 () Bool)

(assert (=> d!41771 (= c!25119 (and ((_ is Cons!1690) lt!69708) (= (_1!1293 (h!2295 lt!69708)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!41771 (= (getValueByKey!173 lt!69708 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) e!87818)))

(declare-fun b!134834 () Bool)

(assert (=> b!134834 (= e!87819 None!177)))

(declare-fun b!134833 () Bool)

(assert (=> b!134833 (= e!87819 (getValueByKey!173 (t!6137 lt!69708) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (= (and d!41771 c!25119) b!134831))

(assert (= (and d!41771 (not c!25119)) b!134832))

(assert (= (and b!134832 c!25120) b!134833))

(assert (= (and b!134832 (not c!25120)) b!134834))

(declare-fun m!160573 () Bool)

(assert (=> b!134833 m!160573))

(assert (=> d!40613 d!41771))

(declare-fun d!41773 () Bool)

(assert (=> d!41773 (= (getValueByKey!173 lt!69708 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun lt!70608 () Unit!4141)

(assert (=> d!41773 (= lt!70608 (choose!833 lt!69708 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun e!87820 () Bool)

(assert (=> d!41773 e!87820))

(declare-fun res!64830 () Bool)

(assert (=> d!41773 (=> (not res!64830) (not e!87820))))

(assert (=> d!41773 (= res!64830 (isStrictlySorted!309 lt!69708))))

(assert (=> d!41773 (= (lemmaContainsTupThenGetReturnValue!88 lt!69708 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70608)))

(declare-fun b!134835 () Bool)

(declare-fun res!64831 () Bool)

(assert (=> b!134835 (=> (not res!64831) (not e!87820))))

(assert (=> b!134835 (= res!64831 (containsKey!176 lt!69708 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!134836 () Bool)

(assert (=> b!134836 (= e!87820 (contains!886 lt!69708 (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (= (and d!41773 res!64830) b!134835))

(assert (= (and b!134835 res!64831) b!134836))

(assert (=> d!41773 m!157369))

(declare-fun m!160575 () Bool)

(assert (=> d!41773 m!160575))

(declare-fun m!160577 () Bool)

(assert (=> d!41773 m!160577))

(declare-fun m!160579 () Bool)

(assert (=> b!134835 m!160579))

(declare-fun m!160581 () Bool)

(assert (=> b!134836 m!160581))

(assert (=> d!40613 d!41773))

(declare-fun b!134837 () Bool)

(declare-fun res!64832 () Bool)

(declare-fun e!87825 () Bool)

(assert (=> b!134837 (=> (not res!64832) (not e!87825))))

(declare-fun lt!70609 () List!1694)

(assert (=> b!134837 (= res!64832 (containsKey!176 lt!70609 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!134838 () Bool)

(declare-fun e!87823 () List!1694)

(declare-fun e!87824 () List!1694)

(assert (=> b!134838 (= e!87823 e!87824)))

(declare-fun c!25124 () Bool)

(assert (=> b!134838 (= c!25124 (and ((_ is Cons!1690) (toList!842 call!14665)) (= (_1!1293 (h!2295 (toList!842 call!14665))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun bm!14828 () Bool)

(declare-fun call!14832 () List!1694)

(declare-fun call!14831 () List!1694)

(assert (=> bm!14828 (= call!14832 call!14831)))

(declare-fun b!134839 () Bool)

(declare-fun e!87821 () List!1694)

(assert (=> b!134839 (= e!87821 call!14832)))

(declare-fun b!134840 () Bool)

(declare-fun c!25123 () Bool)

(assert (=> b!134840 (= c!25123 (and ((_ is Cons!1690) (toList!842 call!14665)) (bvsgt (_1!1293 (h!2295 (toList!842 call!14665))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> b!134840 (= e!87824 e!87821)))

(declare-fun b!134841 () Bool)

(assert (=> b!134841 (= e!87825 (contains!886 lt!70609 (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!134842 () Bool)

(assert (=> b!134842 (= e!87824 call!14831)))

(declare-fun d!41775 () Bool)

(assert (=> d!41775 e!87825))

(declare-fun res!64833 () Bool)

(assert (=> d!41775 (=> (not res!64833) (not e!87825))))

(assert (=> d!41775 (= res!64833 (isStrictlySorted!309 lt!70609))))

(assert (=> d!41775 (= lt!70609 e!87823)))

(declare-fun c!25122 () Bool)

(assert (=> d!41775 (= c!25122 (and ((_ is Cons!1690) (toList!842 call!14665)) (bvslt (_1!1293 (h!2295 (toList!842 call!14665))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!41775 (isStrictlySorted!309 (toList!842 call!14665))))

(assert (=> d!41775 (= (insertStrictlySorted!91 (toList!842 call!14665) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70609)))

(declare-fun b!134843 () Bool)

(declare-fun e!87822 () List!1694)

(assert (=> b!134843 (= e!87822 (ite c!25124 (t!6137 (toList!842 call!14665)) (ite c!25123 (Cons!1690 (h!2295 (toList!842 call!14665)) (t!6137 (toList!842 call!14665))) Nil!1691)))))

(declare-fun b!134844 () Bool)

(declare-fun call!14833 () List!1694)

(assert (=> b!134844 (= e!87823 call!14833)))

(declare-fun b!134845 () Bool)

(assert (=> b!134845 (= e!87821 call!14832)))

(declare-fun b!134846 () Bool)

(assert (=> b!134846 (= e!87822 (insertStrictlySorted!91 (t!6137 (toList!842 call!14665)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun bm!14829 () Bool)

(assert (=> bm!14829 (= call!14831 call!14833)))

(declare-fun bm!14830 () Bool)

(assert (=> bm!14830 (= call!14833 ($colon$colon!91 e!87822 (ite c!25122 (h!2295 (toList!842 call!14665)) (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun c!25121 () Bool)

(assert (=> bm!14830 (= c!25121 c!25122)))

(assert (= (and d!41775 c!25122) b!134844))

(assert (= (and d!41775 (not c!25122)) b!134838))

(assert (= (and b!134838 c!25124) b!134842))

(assert (= (and b!134838 (not c!25124)) b!134840))

(assert (= (and b!134840 c!25123) b!134845))

(assert (= (and b!134840 (not c!25123)) b!134839))

(assert (= (or b!134845 b!134839) bm!14828))

(assert (= (or b!134842 bm!14828) bm!14829))

(assert (= (or b!134844 bm!14829) bm!14830))

(assert (= (and bm!14830 c!25121) b!134846))

(assert (= (and bm!14830 (not c!25121)) b!134843))

(assert (= (and d!41775 res!64833) b!134837))

(assert (= (and b!134837 res!64832) b!134841))

(declare-fun m!160583 () Bool)

(assert (=> b!134841 m!160583))

(declare-fun m!160585 () Bool)

(assert (=> b!134846 m!160585))

(declare-fun m!160587 () Bool)

(assert (=> bm!14830 m!160587))

(declare-fun m!160589 () Bool)

(assert (=> b!134837 m!160589))

(declare-fun m!160591 () Bool)

(assert (=> d!41775 m!160591))

(declare-fun m!160593 () Bool)

(assert (=> d!41775 m!160593))

(assert (=> d!40613 d!41775))

(declare-fun d!41777 () Bool)

(assert (=> d!41777 (isDefined!125 (getValueByKey!173 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))

(declare-fun lt!70610 () Unit!4141)

(assert (=> d!41777 (= lt!70610 (choose!831 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))

(declare-fun e!87826 () Bool)

(assert (=> d!41777 e!87826))

(declare-fun res!64834 () Bool)

(assert (=> d!41777 (=> (not res!64834) (not e!87826))))

(assert (=> d!41777 (= res!64834 (isStrictlySorted!309 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))))

(assert (=> d!41777 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))) lt!70610)))

(declare-fun b!134847 () Bool)

(assert (=> b!134847 (= e!87826 (containsKey!176 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))

(assert (= (and d!41777 res!64834) b!134847))

(assert (=> d!41777 m!156557))

(assert (=> d!41777 m!158003))

(assert (=> d!41777 m!158003))

(assert (=> d!41777 m!158005))

(assert (=> d!41777 m!156557))

(declare-fun m!160595 () Bool)

(assert (=> d!41777 m!160595))

(declare-fun m!160597 () Bool)

(assert (=> d!41777 m!160597))

(assert (=> b!134847 m!156557))

(assert (=> b!134847 m!157999))

(assert (=> b!133668 d!41777))

(declare-fun d!41779 () Bool)

(assert (=> d!41779 (= (isDefined!125 (getValueByKey!173 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))) (not (isEmpty!416 (getValueByKey!173 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))))

(declare-fun bs!5654 () Bool)

(assert (= bs!5654 d!41779))

(assert (=> bs!5654 m!158003))

(declare-fun m!160599 () Bool)

(assert (=> bs!5654 m!160599))

(assert (=> b!133668 d!41779))

(declare-fun b!134849 () Bool)

(declare-fun e!87827 () Option!179)

(declare-fun e!87828 () Option!179)

(assert (=> b!134849 (= e!87827 e!87828)))

(declare-fun c!25126 () Bool)

(assert (=> b!134849 (= c!25126 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (not (= (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))))

(declare-fun b!134848 () Bool)

(assert (=> b!134848 (= e!87827 (Some!178 (_2!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))))))

(declare-fun d!41781 () Bool)

(declare-fun c!25125 () Bool)

(assert (=> d!41781 (= c!25125 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(assert (=> d!41781 (= (getValueByKey!173 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))) e!87827)))

(declare-fun b!134851 () Bool)

(assert (=> b!134851 (= e!87828 None!177)))

(declare-fun b!134850 () Bool)

(assert (=> b!134850 (= e!87828 (getValueByKey!173 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))

(assert (= (and d!41781 c!25125) b!134848))

(assert (= (and d!41781 (not c!25125)) b!134849))

(assert (= (and b!134849 c!25126) b!134850))

(assert (= (and b!134849 (not c!25126)) b!134851))

(assert (=> b!134850 m!156557))

(declare-fun m!160601 () Bool)

(assert (=> b!134850 m!160601))

(assert (=> b!133668 d!41781))

(assert (=> b!133798 d!40941))

(declare-fun d!41783 () Bool)

(declare-fun e!87830 () Bool)

(assert (=> d!41783 e!87830))

(declare-fun res!64835 () Bool)

(assert (=> d!41783 (=> res!64835 e!87830)))

(declare-fun lt!70611 () Bool)

(assert (=> d!41783 (= res!64835 (not lt!70611))))

(declare-fun lt!70612 () Bool)

(assert (=> d!41783 (= lt!70611 lt!70612)))

(declare-fun lt!70613 () Unit!4141)

(declare-fun e!87829 () Unit!4141)

(assert (=> d!41783 (= lt!70613 e!87829)))

(declare-fun c!25127 () Bool)

(assert (=> d!41783 (= c!25127 lt!70612)))

(assert (=> d!41783 (= lt!70612 (containsKey!176 (toList!842 lt!70012) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!41783 (= (contains!884 lt!70012 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) lt!70611)))

(declare-fun b!134852 () Bool)

(declare-fun lt!70614 () Unit!4141)

(assert (=> b!134852 (= e!87829 lt!70614)))

(assert (=> b!134852 (= lt!70614 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70012) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!134852 (isDefined!125 (getValueByKey!173 (toList!842 lt!70012) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!134853 () Bool)

(declare-fun Unit!4236 () Unit!4141)

(assert (=> b!134853 (= e!87829 Unit!4236)))

(declare-fun b!134854 () Bool)

(assert (=> b!134854 (= e!87830 (isDefined!125 (getValueByKey!173 (toList!842 lt!70012) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!41783 c!25127) b!134852))

(assert (= (and d!41783 (not c!25127)) b!134853))

(assert (= (and d!41783 (not res!64835)) b!134854))

(assert (=> d!41783 m!156679))

(declare-fun m!160603 () Bool)

(assert (=> d!41783 m!160603))

(assert (=> b!134852 m!156679))

(declare-fun m!160605 () Bool)

(assert (=> b!134852 m!160605))

(assert (=> b!134852 m!156679))

(declare-fun m!160607 () Bool)

(assert (=> b!134852 m!160607))

(assert (=> b!134852 m!160607))

(declare-fun m!160609 () Bool)

(assert (=> b!134852 m!160609))

(assert (=> b!134854 m!156679))

(assert (=> b!134854 m!160607))

(assert (=> b!134854 m!160607))

(assert (=> b!134854 m!160609))

(assert (=> b!133810 d!41783))

(declare-fun b!134856 () Bool)

(declare-fun e!87831 () Option!179)

(declare-fun e!87832 () Option!179)

(assert (=> b!134856 (= e!87831 e!87832)))

(declare-fun c!25129 () Bool)

(assert (=> b!134856 (= c!25129 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69625))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69625)))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!134855 () Bool)

(assert (=> b!134855 (= e!87831 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 lt!69625))))))))

(declare-fun d!41785 () Bool)

(declare-fun c!25128 () Bool)

(assert (=> d!41785 (= c!25128 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69625))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69625)))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41785 (= (getValueByKey!173 (t!6137 (toList!842 lt!69625)) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87831)))

(declare-fun b!134858 () Bool)

(assert (=> b!134858 (= e!87832 None!177)))

(declare-fun b!134857 () Bool)

(assert (=> b!134857 (= e!87832 (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69625))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41785 c!25128) b!134855))

(assert (= (and d!41785 (not c!25128)) b!134856))

(assert (= (and b!134856 c!25129) b!134857))

(assert (= (and b!134856 (not c!25129)) b!134858))

(declare-fun m!160611 () Bool)

(assert (=> b!134857 m!160611))

(assert (=> b!134088 d!41785))

(declare-fun d!41787 () Bool)

(declare-fun e!87834 () Bool)

(assert (=> d!41787 e!87834))

(declare-fun res!64836 () Bool)

(assert (=> d!41787 (=> res!64836 e!87834)))

(declare-fun lt!70615 () Bool)

(assert (=> d!41787 (= res!64836 (not lt!70615))))

(declare-fun lt!70616 () Bool)

(assert (=> d!41787 (= lt!70615 lt!70616)))

(declare-fun lt!70617 () Unit!4141)

(declare-fun e!87833 () Unit!4141)

(assert (=> d!41787 (= lt!70617 e!87833)))

(declare-fun c!25130 () Bool)

(assert (=> d!41787 (= c!25130 lt!70616)))

(assert (=> d!41787 (= lt!70616 (containsKey!176 (toList!842 lt!69738) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41787 (= (contains!884 lt!69738 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70615)))

(declare-fun b!134859 () Bool)

(declare-fun lt!70618 () Unit!4141)

(assert (=> b!134859 (= e!87833 lt!70618)))

(assert (=> b!134859 (= lt!70618 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69738) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134859 (isDefined!125 (getValueByKey!173 (toList!842 lt!69738) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134860 () Bool)

(declare-fun Unit!4237 () Unit!4141)

(assert (=> b!134860 (= e!87833 Unit!4237)))

(declare-fun b!134861 () Bool)

(assert (=> b!134861 (= e!87834 (isDefined!125 (getValueByKey!173 (toList!842 lt!69738) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41787 c!25130) b!134859))

(assert (= (and d!41787 (not c!25130)) b!134860))

(assert (= (and d!41787 (not res!64836)) b!134861))

(declare-fun m!160613 () Bool)

(assert (=> d!41787 m!160613))

(declare-fun m!160615 () Bool)

(assert (=> b!134859 m!160615))

(declare-fun m!160617 () Bool)

(assert (=> b!134859 m!160617))

(assert (=> b!134859 m!160617))

(declare-fun m!160619 () Bool)

(assert (=> b!134859 m!160619))

(assert (=> b!134861 m!160617))

(assert (=> b!134861 m!160617))

(assert (=> b!134861 m!160619))

(assert (=> bm!14702 d!41787))

(declare-fun b!134863 () Bool)

(declare-fun e!87835 () Option!179)

(declare-fun e!87836 () Option!179)

(assert (=> b!134863 (= e!87835 e!87836)))

(declare-fun c!25132 () Bool)

(assert (=> b!134863 (= c!25132 (and ((_ is Cons!1690) (toList!842 lt!70076)) (not (= (_1!1293 (h!2295 (toList!842 lt!70076))) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))))

(declare-fun b!134862 () Bool)

(assert (=> b!134862 (= e!87835 (Some!178 (_2!1293 (h!2295 (toList!842 lt!70076)))))))

(declare-fun c!25131 () Bool)

(declare-fun d!41789 () Bool)

(assert (=> d!41789 (= c!25131 (and ((_ is Cons!1690) (toList!842 lt!70076)) (= (_1!1293 (h!2295 (toList!842 lt!70076))) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))))))

(assert (=> d!41789 (= (getValueByKey!173 (toList!842 lt!70076) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))) e!87835)))

(declare-fun b!134865 () Bool)

(assert (=> b!134865 (= e!87836 None!177)))

(declare-fun b!134864 () Bool)

(assert (=> b!134864 (= e!87836 (getValueByKey!173 (t!6137 (toList!842 lt!70076)) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))

(assert (= (and d!41789 c!25131) b!134862))

(assert (= (and d!41789 (not c!25131)) b!134863))

(assert (= (and b!134863 c!25132) b!134864))

(assert (= (and b!134863 (not c!25132)) b!134865))

(declare-fun m!160621 () Bool)

(assert (=> b!134864 m!160621))

(assert (=> b!133889 d!41789))

(declare-fun d!41791 () Bool)

(declare-fun lt!70619 () Bool)

(assert (=> d!41791 (= lt!70619 (select (content!133 lt!69442) (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) lt!69467)))))

(declare-fun e!87838 () Bool)

(assert (=> d!41791 (= lt!70619 e!87838)))

(declare-fun res!64837 () Bool)

(assert (=> d!41791 (=> (not res!64837) (not e!87838))))

(assert (=> d!41791 (= res!64837 ((_ is Cons!1689) lt!69442))))

(assert (=> d!41791 (= (contains!885 lt!69442 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) lt!69467)) lt!70619)))

(declare-fun b!134866 () Bool)

(declare-fun e!87837 () Bool)

(assert (=> b!134866 (= e!87838 e!87837)))

(declare-fun res!64838 () Bool)

(assert (=> b!134866 (=> res!64838 e!87837)))

(assert (=> b!134866 (= res!64838 (= (h!2294 lt!69442) (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) lt!69467)))))

(declare-fun b!134867 () Bool)

(assert (=> b!134867 (= e!87837 (contains!885 (t!6136 lt!69442) (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) lt!69467)))))

(assert (= (and d!41791 res!64837) b!134866))

(assert (= (and b!134866 (not res!64838)) b!134867))

(declare-fun m!160623 () Bool)

(assert (=> d!41791 m!160623))

(assert (=> d!41791 m!157681))

(declare-fun m!160625 () Bool)

(assert (=> d!41791 m!160625))

(assert (=> b!134867 m!157681))

(declare-fun m!160627 () Bool)

(assert (=> b!134867 m!160627))

(assert (=> b!133471 d!41791))

(declare-fun d!41793 () Bool)

(assert (=> d!41793 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69577) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69577) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5655 () Bool)

(assert (= bs!5655 d!41793))

(assert (=> bs!5655 m!158643))

(declare-fun m!160629 () Bool)

(assert (=> bs!5655 m!160629))

(assert (=> b!133974 d!41793))

(assert (=> b!133974 d!41687))

(declare-fun d!41795 () Bool)

(assert (=> d!41795 (= (validKeyInArray!0 (select (arr!2252 lt!69441) #b00000000000000000000000000000000)) (and (not (= (select (arr!2252 lt!69441) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2252 lt!69441) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133461 d!41795))

(declare-fun d!41797 () Bool)

(assert (=> d!41797 (= (get!1492 (getValueByKey!173 (toList!842 lt!69499) lt!69505)) (v!3203 (getValueByKey!173 (toList!842 lt!69499) lt!69505)))))

(assert (=> d!40713 d!41797))

(declare-fun b!134869 () Bool)

(declare-fun e!87839 () Option!179)

(declare-fun e!87840 () Option!179)

(assert (=> b!134869 (= e!87839 e!87840)))

(declare-fun c!25134 () Bool)

(assert (=> b!134869 (= c!25134 (and ((_ is Cons!1690) (toList!842 lt!69499)) (not (= (_1!1293 (h!2295 (toList!842 lt!69499))) lt!69505))))))

(declare-fun b!134868 () Bool)

(assert (=> b!134868 (= e!87839 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69499)))))))

(declare-fun d!41799 () Bool)

(declare-fun c!25133 () Bool)

(assert (=> d!41799 (= c!25133 (and ((_ is Cons!1690) (toList!842 lt!69499)) (= (_1!1293 (h!2295 (toList!842 lt!69499))) lt!69505)))))

(assert (=> d!41799 (= (getValueByKey!173 (toList!842 lt!69499) lt!69505) e!87839)))

(declare-fun b!134871 () Bool)

(assert (=> b!134871 (= e!87840 None!177)))

(declare-fun b!134870 () Bool)

(assert (=> b!134870 (= e!87840 (getValueByKey!173 (t!6137 (toList!842 lt!69499)) lt!69505))))

(assert (= (and d!41799 c!25133) b!134868))

(assert (= (and d!41799 (not c!25133)) b!134869))

(assert (= (and b!134869 c!25134) b!134870))

(assert (= (and b!134869 (not c!25134)) b!134871))

(declare-fun m!160631 () Bool)

(assert (=> b!134870 m!160631))

(assert (=> d!40713 d!41799))

(assert (=> d!40843 d!40951))

(declare-fun d!41801 () Bool)

(assert (=> d!41801 (isDefined!125 (getValueByKey!173 (toList!842 lt!69504) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70620 () Unit!4141)

(assert (=> d!41801 (= lt!70620 (choose!831 (toList!842 lt!69504) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87841 () Bool)

(assert (=> d!41801 e!87841))

(declare-fun res!64839 () Bool)

(assert (=> d!41801 (=> (not res!64839) (not e!87841))))

(assert (=> d!41801 (= res!64839 (isStrictlySorted!309 (toList!842 lt!69504)))))

(assert (=> d!41801 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69504) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70620)))

(declare-fun b!134872 () Bool)

(assert (=> b!134872 (= e!87841 (containsKey!176 (toList!842 lt!69504) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41801 res!64839) b!134872))

(assert (=> d!41801 m!158873))

(assert (=> d!41801 m!158873))

(assert (=> d!41801 m!158889))

(declare-fun m!160633 () Bool)

(assert (=> d!41801 m!160633))

(assert (=> d!41801 m!160173))

(assert (=> b!134872 m!158885))

(assert (=> b!134083 d!41801))

(assert (=> b!134083 d!41549))

(assert (=> b!134083 d!41229))

(declare-fun b!134874 () Bool)

(declare-fun e!87842 () Option!179)

(declare-fun e!87843 () Option!179)

(assert (=> b!134874 (= e!87842 e!87843)))

(declare-fun c!25136 () Bool)

(assert (=> b!134874 (= c!25136 (and ((_ is Cons!1690) (toList!842 lt!70084)) (not (= (_1!1293 (h!2295 (toList!842 lt!70084))) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))))

(declare-fun b!134873 () Bool)

(assert (=> b!134873 (= e!87842 (Some!178 (_2!1293 (h!2295 (toList!842 lt!70084)))))))

(declare-fun c!25135 () Bool)

(declare-fun d!41803 () Bool)

(assert (=> d!41803 (= c!25135 (and ((_ is Cons!1690) (toList!842 lt!70084)) (= (_1!1293 (h!2295 (toList!842 lt!70084))) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))))))

(assert (=> d!41803 (= (getValueByKey!173 (toList!842 lt!70084) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))) e!87842)))

(declare-fun b!134876 () Bool)

(assert (=> b!134876 (= e!87843 None!177)))

(declare-fun b!134875 () Bool)

(assert (=> b!134875 (= e!87843 (getValueByKey!173 (t!6137 (toList!842 lt!70084)) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))

(assert (= (and d!41803 c!25135) b!134873))

(assert (= (and d!41803 (not c!25135)) b!134874))

(assert (= (and b!134874 c!25136) b!134875))

(assert (= (and b!134874 (not c!25136)) b!134876))

(declare-fun m!160635 () Bool)

(assert (=> b!134875 m!160635))

(assert (=> b!133893 d!41803))

(declare-fun d!41805 () Bool)

(assert (=> d!41805 (= (apply!116 lt!69680 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69680) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5656 () Bool)

(assert (= bs!5656 d!41805))

(assert (=> bs!5656 m!159365))

(assert (=> bs!5656 m!159365))

(declare-fun m!160637 () Bool)

(assert (=> bs!5656 m!160637))

(assert (=> b!133248 d!41805))

(declare-fun d!41807 () Bool)

(declare-fun e!87845 () Bool)

(assert (=> d!41807 e!87845))

(declare-fun res!64840 () Bool)

(assert (=> d!41807 (=> res!64840 e!87845)))

(declare-fun lt!70621 () Bool)

(assert (=> d!41807 (= res!64840 (not lt!70621))))

(declare-fun lt!70622 () Bool)

(assert (=> d!41807 (= lt!70621 lt!70622)))

(declare-fun lt!70623 () Unit!4141)

(declare-fun e!87844 () Unit!4141)

(assert (=> d!41807 (= lt!70623 e!87844)))

(declare-fun c!25137 () Bool)

(assert (=> d!41807 (= c!25137 lt!70622)))

(assert (=> d!41807 (= lt!70622 (containsKey!176 (toList!842 lt!70032) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41807 (= (contains!884 lt!70032 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70621)))

(declare-fun b!134877 () Bool)

(declare-fun lt!70624 () Unit!4141)

(assert (=> b!134877 (= e!87844 lt!70624)))

(assert (=> b!134877 (= lt!70624 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70032) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134877 (isDefined!125 (getValueByKey!173 (toList!842 lt!70032) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134878 () Bool)

(declare-fun Unit!4238 () Unit!4141)

(assert (=> b!134878 (= e!87844 Unit!4238)))

(declare-fun b!134879 () Bool)

(assert (=> b!134879 (= e!87845 (isDefined!125 (getValueByKey!173 (toList!842 lt!70032) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41807 c!25137) b!134877))

(assert (= (and d!41807 (not c!25137)) b!134878))

(assert (= (and d!41807 (not res!64840)) b!134879))

(declare-fun m!160639 () Bool)

(assert (=> d!41807 m!160639))

(declare-fun m!160641 () Bool)

(assert (=> b!134877 m!160641))

(declare-fun m!160643 () Bool)

(assert (=> b!134877 m!160643))

(assert (=> b!134877 m!160643))

(declare-fun m!160645 () Bool)

(assert (=> b!134877 m!160645))

(assert (=> b!134879 m!160643))

(assert (=> b!134879 m!160643))

(assert (=> b!134879 m!160645))

(assert (=> bm!14762 d!41807))

(declare-fun d!41809 () Bool)

(declare-fun e!87846 () Bool)

(assert (=> d!41809 e!87846))

(declare-fun res!64842 () Bool)

(assert (=> d!41809 (=> (not res!64842) (not e!87846))))

(declare-fun lt!70627 () ListLongMap!1653)

(assert (=> d!41809 (= res!64842 (contains!884 lt!70627 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70628 () List!1694)

(assert (=> d!41809 (= lt!70627 (ListLongMap!1654 lt!70628))))

(declare-fun lt!70625 () Unit!4141)

(declare-fun lt!70626 () Unit!4141)

(assert (=> d!41809 (= lt!70625 lt!70626)))

(assert (=> d!41809 (= (getValueByKey!173 lt!70628 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41809 (= lt!70626 (lemmaContainsTupThenGetReturnValue!88 lt!70628 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41809 (= lt!70628 (insertStrictlySorted!91 (toList!842 call!14748) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41809 (= (+!169 call!14748 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70627)))

(declare-fun b!134880 () Bool)

(declare-fun res!64841 () Bool)

(assert (=> b!134880 (=> (not res!64841) (not e!87846))))

(assert (=> b!134880 (= res!64841 (= (getValueByKey!173 (toList!842 lt!70627) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134881 () Bool)

(assert (=> b!134881 (= e!87846 (contains!886 (toList!842 lt!70627) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41809 res!64842) b!134880))

(assert (= (and b!134880 res!64841) b!134881))

(declare-fun m!160647 () Bool)

(assert (=> d!41809 m!160647))

(declare-fun m!160649 () Bool)

(assert (=> d!41809 m!160649))

(declare-fun m!160651 () Bool)

(assert (=> d!41809 m!160651))

(declare-fun m!160653 () Bool)

(assert (=> d!41809 m!160653))

(declare-fun m!160655 () Bool)

(assert (=> b!134880 m!160655))

(declare-fun m!160657 () Bool)

(assert (=> b!134881 m!160657))

(assert (=> b!133706 d!41809))

(declare-fun d!41811 () Bool)

(declare-fun res!64843 () Bool)

(declare-fun e!87847 () Bool)

(assert (=> d!41811 (=> res!64843 e!87847)))

(assert (=> d!41811 (= res!64843 (and ((_ is Cons!1690) (t!6137 (toList!842 e!86556))) (= (_1!1293 (h!2295 (t!6137 (toList!842 e!86556)))) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))))

(assert (=> d!41811 (= (containsKey!176 (t!6137 (toList!842 e!86556)) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))) e!87847)))

(declare-fun b!134882 () Bool)

(declare-fun e!87848 () Bool)

(assert (=> b!134882 (= e!87847 e!87848)))

(declare-fun res!64844 () Bool)

(assert (=> b!134882 (=> (not res!64844) (not e!87848))))

(assert (=> b!134882 (= res!64844 (and (or (not ((_ is Cons!1690) (t!6137 (toList!842 e!86556)))) (bvsle (_1!1293 (h!2295 (t!6137 (toList!842 e!86556)))) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))) ((_ is Cons!1690) (t!6137 (toList!842 e!86556))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 e!86556)))) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))))

(declare-fun b!134883 () Bool)

(assert (=> b!134883 (= e!87848 (containsKey!176 (t!6137 (t!6137 (toList!842 e!86556))) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(assert (= (and d!41811 (not res!64843)) b!134882))

(assert (= (and b!134882 res!64844) b!134883))

(declare-fun m!160659 () Bool)

(assert (=> b!134883 m!160659))

(assert (=> b!133903 d!41811))

(declare-fun d!41813 () Bool)

(assert (=> d!41813 (= (isEmpty!415 lt!69989) (isEmpty!417 (toList!842 lt!69989)))))

(declare-fun bs!5657 () Bool)

(assert (= bs!5657 d!41813))

(declare-fun m!160661 () Bool)

(assert (=> bs!5657 m!160661))

(assert (=> b!133784 d!41813))

(declare-fun b!134884 () Bool)

(declare-fun res!64845 () Bool)

(declare-fun e!87853 () Bool)

(assert (=> b!134884 (=> (not res!64845) (not e!87853))))

(declare-fun lt!70629 () List!1694)

(assert (=> b!134884 (= res!64845 (containsKey!176 lt!70629 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!134885 () Bool)

(declare-fun e!87851 () List!1694)

(declare-fun e!87852 () List!1694)

(assert (=> b!134885 (= e!87851 e!87852)))

(declare-fun c!25141 () Bool)

(assert (=> b!134885 (= c!25141 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69353))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69353)))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun bm!14831 () Bool)

(declare-fun call!14835 () List!1694)

(declare-fun call!14834 () List!1694)

(assert (=> bm!14831 (= call!14835 call!14834)))

(declare-fun b!134886 () Bool)

(declare-fun e!87849 () List!1694)

(assert (=> b!134886 (= e!87849 call!14835)))

(declare-fun b!134887 () Bool)

(declare-fun c!25140 () Bool)

(assert (=> b!134887 (= c!25140 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69353))) (bvsgt (_1!1293 (h!2295 (t!6137 (toList!842 lt!69353)))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> b!134887 (= e!87852 e!87849)))

(declare-fun b!134888 () Bool)

(assert (=> b!134888 (= e!87853 (contains!886 lt!70629 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134889 () Bool)

(assert (=> b!134889 (= e!87852 call!14834)))

(declare-fun d!41815 () Bool)

(assert (=> d!41815 e!87853))

(declare-fun res!64846 () Bool)

(assert (=> d!41815 (=> (not res!64846) (not e!87853))))

(assert (=> d!41815 (= res!64846 (isStrictlySorted!309 lt!70629))))

(assert (=> d!41815 (= lt!70629 e!87851)))

(declare-fun c!25139 () Bool)

(assert (=> d!41815 (= c!25139 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69353))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 lt!69353)))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41815 (isStrictlySorted!309 (t!6137 (toList!842 lt!69353)))))

(assert (=> d!41815 (= (insertStrictlySorted!91 (t!6137 (toList!842 lt!69353)) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70629)))

(declare-fun b!134890 () Bool)

(declare-fun e!87850 () List!1694)

(assert (=> b!134890 (= e!87850 (ite c!25141 (t!6137 (t!6137 (toList!842 lt!69353))) (ite c!25140 (Cons!1690 (h!2295 (t!6137 (toList!842 lt!69353))) (t!6137 (t!6137 (toList!842 lt!69353)))) Nil!1691)))))

(declare-fun b!134891 () Bool)

(declare-fun call!14836 () List!1694)

(assert (=> b!134891 (= e!87851 call!14836)))

(declare-fun b!134892 () Bool)

(assert (=> b!134892 (= e!87849 call!14835)))

(declare-fun b!134893 () Bool)

(assert (=> b!134893 (= e!87850 (insertStrictlySorted!91 (t!6137 (t!6137 (toList!842 lt!69353))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun bm!14832 () Bool)

(assert (=> bm!14832 (= call!14834 call!14836)))

(declare-fun bm!14833 () Bool)

(assert (=> bm!14833 (= call!14836 ($colon$colon!91 e!87850 (ite c!25139 (h!2295 (t!6137 (toList!842 lt!69353))) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun c!25138 () Bool)

(assert (=> bm!14833 (= c!25138 c!25139)))

(assert (= (and d!41815 c!25139) b!134891))

(assert (= (and d!41815 (not c!25139)) b!134885))

(assert (= (and b!134885 c!25141) b!134889))

(assert (= (and b!134885 (not c!25141)) b!134887))

(assert (= (and b!134887 c!25140) b!134892))

(assert (= (and b!134887 (not c!25140)) b!134886))

(assert (= (or b!134892 b!134886) bm!14831))

(assert (= (or b!134889 bm!14831) bm!14832))

(assert (= (or b!134891 bm!14832) bm!14833))

(assert (= (and bm!14833 c!25138) b!134893))

(assert (= (and bm!14833 (not c!25138)) b!134890))

(assert (= (and d!41815 res!64846) b!134884))

(assert (= (and b!134884 res!64845) b!134888))

(declare-fun m!160663 () Bool)

(assert (=> b!134888 m!160663))

(declare-fun m!160665 () Bool)

(assert (=> b!134893 m!160665))

(declare-fun m!160667 () Bool)

(assert (=> bm!14833 m!160667))

(declare-fun m!160669 () Bool)

(assert (=> b!134884 m!160669))

(declare-fun m!160671 () Bool)

(assert (=> d!41815 m!160671))

(declare-fun m!160673 () Bool)

(assert (=> d!41815 m!160673))

(assert (=> b!133733 d!41815))

(assert (=> b!133576 d!41593))

(assert (=> b!133576 d!41595))

(declare-fun d!41817 () Bool)

(declare-fun c!25142 () Bool)

(assert (=> d!41817 (= c!25142 ((_ is Nil!1691) (toList!842 lt!69373)))))

(declare-fun e!87854 () (InoxSet tuple2!2564))

(assert (=> d!41817 (= (content!134 (toList!842 lt!69373)) e!87854)))

(declare-fun b!134894 () Bool)

(assert (=> b!134894 (= e!87854 ((as const (Array tuple2!2564 Bool)) false))))

(declare-fun b!134895 () Bool)

(assert (=> b!134895 (= e!87854 ((_ map or) (store ((as const (Array tuple2!2564 Bool)) false) (h!2295 (toList!842 lt!69373)) true) (content!134 (t!6137 (toList!842 lt!69373)))))))

(assert (= (and d!41817 c!25142) b!134894))

(assert (= (and d!41817 (not c!25142)) b!134895))

(declare-fun m!160675 () Bool)

(assert (=> b!134895 m!160675))

(declare-fun m!160677 () Bool)

(assert (=> b!134895 m!160677))

(assert (=> d!41071 d!41817))

(assert (=> b!133453 d!41795))

(declare-fun d!41819 () Bool)

(assert (=> d!41819 (= (get!1491 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133310 d!41819))

(declare-fun d!41821 () Bool)

(declare-fun lt!70630 () Bool)

(assert (=> d!41821 (= lt!70630 (select (content!134 (toList!842 lt!70157)) (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))))

(declare-fun e!87856 () Bool)

(assert (=> d!41821 (= lt!70630 e!87856)))

(declare-fun res!64848 () Bool)

(assert (=> d!41821 (=> (not res!64848) (not e!87856))))

(assert (=> d!41821 (= res!64848 ((_ is Cons!1690) (toList!842 lt!70157)))))

(assert (=> d!41821 (= (contains!886 (toList!842 lt!70157) (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))) lt!70630)))

(declare-fun b!134896 () Bool)

(declare-fun e!87855 () Bool)

(assert (=> b!134896 (= e!87856 e!87855)))

(declare-fun res!64847 () Bool)

(assert (=> b!134896 (=> res!64847 e!87855)))

(assert (=> b!134896 (= res!64847 (= (h!2295 (toList!842 lt!70157)) (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))))

(declare-fun b!134897 () Bool)

(assert (=> b!134897 (= e!87855 (contains!886 (t!6137 (toList!842 lt!70157)) (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41821 res!64848) b!134896))

(assert (= (and b!134896 (not res!64847)) b!134897))

(declare-fun m!160679 () Bool)

(assert (=> d!41821 m!160679))

(declare-fun m!160681 () Bool)

(assert (=> d!41821 m!160681))

(declare-fun m!160683 () Bool)

(assert (=> b!134897 m!160683))

(assert (=> b!134021 d!41821))

(declare-fun d!41823 () Bool)

(declare-fun e!87858 () Bool)

(assert (=> d!41823 e!87858))

(declare-fun res!64849 () Bool)

(assert (=> d!41823 (=> res!64849 e!87858)))

(declare-fun lt!70631 () Bool)

(assert (=> d!41823 (= res!64849 (not lt!70631))))

(declare-fun lt!70632 () Bool)

(assert (=> d!41823 (= lt!70631 lt!70632)))

(declare-fun lt!70633 () Unit!4141)

(declare-fun e!87857 () Unit!4141)

(assert (=> d!41823 (= lt!70633 e!87857)))

(declare-fun c!25143 () Bool)

(assert (=> d!41823 (= c!25143 lt!70632)))

(assert (=> d!41823 (= lt!70632 (containsKey!176 (toList!842 lt!69754) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41823 (= (contains!884 lt!69754 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70631)))

(declare-fun b!134898 () Bool)

(declare-fun lt!70634 () Unit!4141)

(assert (=> b!134898 (= e!87857 lt!70634)))

(assert (=> b!134898 (= lt!70634 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69754) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!134898 (isDefined!125 (getValueByKey!173 (toList!842 lt!69754) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134899 () Bool)

(declare-fun Unit!4239 () Unit!4141)

(assert (=> b!134899 (= e!87857 Unit!4239)))

(declare-fun b!134900 () Bool)

(assert (=> b!134900 (= e!87858 (isDefined!125 (getValueByKey!173 (toList!842 lt!69754) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41823 c!25143) b!134898))

(assert (= (and d!41823 (not c!25143)) b!134899))

(assert (= (and d!41823 (not res!64849)) b!134900))

(declare-fun m!160685 () Bool)

(assert (=> d!41823 m!160685))

(declare-fun m!160687 () Bool)

(assert (=> b!134898 m!160687))

(assert (=> b!134898 m!157533))

(assert (=> b!134898 m!157533))

(declare-fun m!160689 () Bool)

(assert (=> b!134898 m!160689))

(assert (=> b!134900 m!157533))

(assert (=> b!134900 m!157533))

(assert (=> b!134900 m!160689))

(assert (=> d!40657 d!41823))

(declare-fun b!134902 () Bool)

(declare-fun e!87859 () Option!179)

(declare-fun e!87860 () Option!179)

(assert (=> b!134902 (= e!87859 e!87860)))

(declare-fun c!25145 () Bool)

(assert (=> b!134902 (= c!25145 (and ((_ is Cons!1690) lt!69755) (not (= (_1!1293 (h!2295 lt!69755)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!134901 () Bool)

(assert (=> b!134901 (= e!87859 (Some!178 (_2!1293 (h!2295 lt!69755))))))

(declare-fun c!25144 () Bool)

(declare-fun d!41825 () Bool)

(assert (=> d!41825 (= c!25144 (and ((_ is Cons!1690) lt!69755) (= (_1!1293 (h!2295 lt!69755)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41825 (= (getValueByKey!173 lt!69755 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87859)))

(declare-fun b!134904 () Bool)

(assert (=> b!134904 (= e!87860 None!177)))

(declare-fun b!134903 () Bool)

(assert (=> b!134903 (= e!87860 (getValueByKey!173 (t!6137 lt!69755) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41825 c!25144) b!134901))

(assert (= (and d!41825 (not c!25144)) b!134902))

(assert (= (and b!134902 c!25145) b!134903))

(assert (= (and b!134902 (not c!25145)) b!134904))

(declare-fun m!160691 () Bool)

(assert (=> b!134903 m!160691))

(assert (=> d!40657 d!41825))

(declare-fun d!41827 () Bool)

(assert (=> d!41827 (= (getValueByKey!173 lt!69755 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70635 () Unit!4141)

(assert (=> d!41827 (= lt!70635 (choose!833 lt!69755 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87861 () Bool)

(assert (=> d!41827 e!87861))

(declare-fun res!64850 () Bool)

(assert (=> d!41827 (=> (not res!64850) (not e!87861))))

(assert (=> d!41827 (= res!64850 (isStrictlySorted!309 lt!69755))))

(assert (=> d!41827 (= (lemmaContainsTupThenGetReturnValue!88 lt!69755 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70635)))

(declare-fun b!134905 () Bool)

(declare-fun res!64851 () Bool)

(assert (=> b!134905 (=> (not res!64851) (not e!87861))))

(assert (=> b!134905 (= res!64851 (containsKey!176 lt!69755 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134906 () Bool)

(assert (=> b!134906 (= e!87861 (contains!886 lt!69755 (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41827 res!64850) b!134905))

(assert (= (and b!134905 res!64851) b!134906))

(assert (=> d!41827 m!157527))

(declare-fun m!160693 () Bool)

(assert (=> d!41827 m!160693))

(declare-fun m!160695 () Bool)

(assert (=> d!41827 m!160695))

(declare-fun m!160697 () Bool)

(assert (=> b!134905 m!160697))

(declare-fun m!160699 () Bool)

(assert (=> b!134906 m!160699))

(assert (=> d!40657 d!41827))

(declare-fun b!134907 () Bool)

(declare-fun res!64852 () Bool)

(declare-fun e!87866 () Bool)

(assert (=> b!134907 (=> (not res!64852) (not e!87866))))

(declare-fun lt!70636 () List!1694)

(assert (=> b!134907 (= res!64852 (containsKey!176 lt!70636 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!134908 () Bool)

(declare-fun e!87864 () List!1694)

(declare-fun e!87865 () List!1694)

(assert (=> b!134908 (= e!87864 e!87865)))

(declare-fun c!25149 () Bool)

(assert (=> b!134908 (= c!25149 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14834 () Bool)

(declare-fun call!14838 () List!1694)

(declare-fun call!14837 () List!1694)

(assert (=> bm!14834 (= call!14838 call!14837)))

(declare-fun b!134909 () Bool)

(declare-fun e!87862 () List!1694)

(assert (=> b!134909 (= e!87862 call!14838)))

(declare-fun b!134910 () Bool)

(declare-fun c!25148 () Bool)

(assert (=> b!134910 (= c!25148 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvsgt (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!134910 (= e!87865 e!87862)))

(declare-fun b!134911 () Bool)

(assert (=> b!134911 (= e!87866 (contains!886 lt!70636 (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134912 () Bool)

(assert (=> b!134912 (= e!87865 call!14837)))

(declare-fun d!41829 () Bool)

(assert (=> d!41829 e!87866))

(declare-fun res!64853 () Bool)

(assert (=> d!41829 (=> (not res!64853) (not e!87866))))

(assert (=> d!41829 (= res!64853 (isStrictlySorted!309 lt!70636))))

(assert (=> d!41829 (= lt!70636 e!87864)))

(declare-fun c!25147 () Bool)

(assert (=> d!41829 (= c!25147 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvslt (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41829 (isStrictlySorted!309 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))

(assert (=> d!41829 (= (insertStrictlySorted!91 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70636)))

(declare-fun b!134913 () Bool)

(declare-fun e!87863 () List!1694)

(assert (=> b!134913 (= e!87863 (ite c!25149 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (ite c!25148 (Cons!1690 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) Nil!1691)))))

(declare-fun b!134914 () Bool)

(declare-fun call!14839 () List!1694)

(assert (=> b!134914 (= e!87864 call!14839)))

(declare-fun b!134915 () Bool)

(assert (=> b!134915 (= e!87862 call!14838)))

(declare-fun b!134916 () Bool)

(assert (=> b!134916 (= e!87863 (insertStrictlySorted!91 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14835 () Bool)

(assert (=> bm!14835 (= call!14837 call!14839)))

(declare-fun bm!14836 () Bool)

(assert (=> bm!14836 (= call!14839 ($colon$colon!91 e!87863 (ite c!25147 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25146 () Bool)

(assert (=> bm!14836 (= c!25146 c!25147)))

(assert (= (and d!41829 c!25147) b!134914))

(assert (= (and d!41829 (not c!25147)) b!134908))

(assert (= (and b!134908 c!25149) b!134912))

(assert (= (and b!134908 (not c!25149)) b!134910))

(assert (= (and b!134910 c!25148) b!134915))

(assert (= (and b!134910 (not c!25148)) b!134909))

(assert (= (or b!134915 b!134909) bm!14834))

(assert (= (or b!134912 bm!14834) bm!14835))

(assert (= (or b!134914 bm!14835) bm!14836))

(assert (= (and bm!14836 c!25146) b!134916))

(assert (= (and bm!14836 (not c!25146)) b!134913))

(assert (= (and d!41829 res!64853) b!134907))

(assert (= (and b!134907 res!64852) b!134911))

(declare-fun m!160701 () Bool)

(assert (=> b!134911 m!160701))

(declare-fun m!160703 () Bool)

(assert (=> b!134916 m!160703))

(declare-fun m!160705 () Bool)

(assert (=> bm!14836 m!160705))

(declare-fun m!160707 () Bool)

(assert (=> b!134907 m!160707))

(declare-fun m!160709 () Bool)

(assert (=> d!41829 m!160709))

(assert (=> d!41829 m!157341))

(assert (=> d!40657 d!41829))

(assert (=> b!133682 d!40621))

(declare-fun d!41831 () Bool)

(assert (=> d!41831 (= (isEmpty!416 (getValueByKey!173 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))) (not ((_ is Some!178) (getValueByKey!173 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))))

(assert (=> d!40791 d!41831))

(assert (=> b!134035 d!41567))

(assert (=> b!134035 d!41051))

(declare-fun d!41833 () Bool)

(assert (=> d!41833 (= (validKeyInArray!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) lt!69467)) (and (not (= (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) lt!69467) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) lt!69467) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133474 d!41833))

(declare-fun b!134918 () Bool)

(declare-fun e!87867 () Option!179)

(declare-fun e!87868 () Option!179)

(assert (=> b!134918 (= e!87867 e!87868)))

(declare-fun c!25151 () Bool)

(assert (=> b!134918 (= c!25151 (and ((_ is Cons!1690) (toList!842 lt!70143)) (not (= (_1!1293 (h!2295 (toList!842 lt!70143))) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!134917 () Bool)

(assert (=> b!134917 (= e!87867 (Some!178 (_2!1293 (h!2295 (toList!842 lt!70143)))))))

(declare-fun c!25150 () Bool)

(declare-fun d!41835 () Bool)

(assert (=> d!41835 (= c!25150 (and ((_ is Cons!1690) (toList!842 lt!70143)) (= (_1!1293 (h!2295 (toList!842 lt!70143))) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!41835 (= (getValueByKey!173 (toList!842 lt!70143) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) e!87867)))

(declare-fun b!134920 () Bool)

(assert (=> b!134920 (= e!87868 None!177)))

(declare-fun b!134919 () Bool)

(assert (=> b!134919 (= e!87868 (getValueByKey!173 (t!6137 (toList!842 lt!70143)) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (= (and d!41835 c!25150) b!134917))

(assert (= (and d!41835 (not c!25150)) b!134918))

(assert (= (and b!134918 c!25151) b!134919))

(assert (= (and b!134918 (not c!25151)) b!134920))

(declare-fun m!160711 () Bool)

(assert (=> b!134919 m!160711))

(assert (=> b!134012 d!41835))

(declare-fun b!134922 () Bool)

(declare-fun e!87869 () Option!179)

(declare-fun e!87870 () Option!179)

(assert (=> b!134922 (= e!87869 e!87870)))

(declare-fun c!25153 () Bool)

(assert (=> b!134922 (= c!25153 (and ((_ is Cons!1690) (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))) lt!69334))))))

(declare-fun b!134921 () Bool)

(assert (=> b!134921 (= e!87869 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))))

(declare-fun d!41837 () Bool)

(declare-fun c!25152 () Bool)

(assert (=> d!41837 (= c!25152 (and ((_ is Cons!1690) (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (= (_1!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))) lt!69334)))))

(assert (=> d!41837 (= (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!69334) e!87869)))

(declare-fun b!134924 () Bool)

(assert (=> b!134924 (= e!87870 None!177)))

(declare-fun b!134923 () Bool)

(assert (=> b!134923 (= e!87870 (getValueByKey!173 (t!6137 (t!6137 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69334))))

(assert (= (and d!41837 c!25152) b!134921))

(assert (= (and d!41837 (not c!25152)) b!134922))

(assert (= (and b!134922 c!25153) b!134923))

(assert (= (and b!134922 (not c!25153)) b!134924))

(declare-fun m!160713 () Bool)

(assert (=> b!134923 m!160713))

(assert (=> b!133356 d!41837))

(declare-fun d!41839 () Bool)

(declare-fun lt!70637 () Bool)

(assert (=> d!41839 (= lt!70637 (select (content!134 (toList!842 lt!69666)) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!87872 () Bool)

(assert (=> d!41839 (= lt!70637 e!87872)))

(declare-fun res!64855 () Bool)

(assert (=> d!41839 (=> (not res!64855) (not e!87872))))

(assert (=> d!41839 (= res!64855 ((_ is Cons!1690) (toList!842 lt!69666)))))

(assert (=> d!41839 (= (contains!886 (toList!842 lt!69666) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70637)))

(declare-fun b!134925 () Bool)

(declare-fun e!87871 () Bool)

(assert (=> b!134925 (= e!87872 e!87871)))

(declare-fun res!64854 () Bool)

(assert (=> b!134925 (=> res!64854 e!87871)))

(assert (=> b!134925 (= res!64854 (= (h!2295 (toList!842 lt!69666)) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!134926 () Bool)

(assert (=> b!134926 (= e!87871 (contains!886 (t!6137 (toList!842 lt!69666)) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41839 res!64855) b!134925))

(assert (= (and b!134925 (not res!64854)) b!134926))

(declare-fun m!160715 () Bool)

(assert (=> d!41839 m!160715))

(declare-fun m!160717 () Bool)

(assert (=> d!41839 m!160717))

(declare-fun m!160719 () Bool)

(assert (=> b!134926 m!160719))

(assert (=> b!133242 d!41839))

(declare-fun b!134927 () Bool)

(declare-fun e!87874 () SeekEntryResult!269)

(assert (=> b!134927 (= e!87874 (Found!269 (index!3238 lt!70062)))))

(declare-fun b!134928 () Bool)

(declare-fun e!87873 () SeekEntryResult!269)

(assert (=> b!134928 (= e!87873 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15586 lt!70062) #b00000000000000000000000000000001) (nextIndex!0 (index!3238 lt!70062) (bvadd (x!15586 lt!70062) #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!70062) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!134929 () Bool)

(declare-fun e!87875 () SeekEntryResult!269)

(assert (=> b!134929 (= e!87875 e!87874)))

(declare-fun c!25154 () Bool)

(declare-fun lt!70638 () (_ BitVec 64))

(assert (=> b!134929 (= c!25154 (= lt!70638 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!134930 () Bool)

(assert (=> b!134930 (= e!87873 (MissingVacant!269 (index!3238 lt!70062)))))

(declare-fun b!134931 () Bool)

(assert (=> b!134931 (= e!87875 Undefined!269)))

(declare-fun d!41841 () Bool)

(declare-fun lt!70639 () SeekEntryResult!269)

(assert (=> d!41841 (and (or ((_ is Undefined!269) lt!70639) (not ((_ is Found!269) lt!70639)) (and (bvsge (index!3237 lt!70639) #b00000000000000000000000000000000) (bvslt (index!3237 lt!70639) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))) (or ((_ is Undefined!269) lt!70639) ((_ is Found!269) lt!70639) (not ((_ is MissingVacant!269) lt!70639)) (not (= (index!3239 lt!70639) (index!3238 lt!70062))) (and (bvsge (index!3239 lt!70639) #b00000000000000000000000000000000) (bvslt (index!3239 lt!70639) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))) (or ((_ is Undefined!269) lt!70639) (ite ((_ is Found!269) lt!70639) (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3237 lt!70639)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (and ((_ is MissingVacant!269) lt!70639) (= (index!3239 lt!70639) (index!3238 lt!70062)) (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3239 lt!70639)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!41841 (= lt!70639 e!87875)))

(declare-fun c!25155 () Bool)

(assert (=> d!41841 (= c!25155 (bvsge (x!15586 lt!70062) #b01111111111111111111111111111110))))

(assert (=> d!41841 (= lt!70638 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!70062)))))

(assert (=> d!41841 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!41841 (= (seekKeyOrZeroReturnVacant!0 (x!15586 lt!70062) (index!3238 lt!70062) (index!3238 lt!70062) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) lt!70639)))

(declare-fun b!134932 () Bool)

(declare-fun c!25156 () Bool)

(assert (=> b!134932 (= c!25156 (= lt!70638 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134932 (= e!87874 e!87873)))

(assert (= (and d!41841 c!25155) b!134931))

(assert (= (and d!41841 (not c!25155)) b!134929))

(assert (= (and b!134929 c!25154) b!134927))

(assert (= (and b!134929 (not c!25154)) b!134932))

(assert (= (and b!134932 c!25156) b!134930))

(assert (= (and b!134932 (not c!25156)) b!134928))

(declare-fun m!160721 () Bool)

(assert (=> b!134928 m!160721))

(assert (=> b!134928 m!160721))

(assert (=> b!134928 m!157015))

(declare-fun m!160723 () Bool)

(assert (=> b!134928 m!160723))

(declare-fun m!160725 () Bool)

(assert (=> d!41841 m!160725))

(declare-fun m!160727 () Bool)

(assert (=> d!41841 m!160727))

(assert (=> d!41841 m!158419))

(assert (=> d!41841 m!156405))

(assert (=> b!133877 d!41841))

(declare-fun d!41843 () Bool)

(declare-fun lt!70640 () Bool)

(assert (=> d!41843 (= lt!70640 (select (content!134 (toList!842 lt!69883)) (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun e!87877 () Bool)

(assert (=> d!41843 (= lt!70640 e!87877)))

(declare-fun res!64857 () Bool)

(assert (=> d!41843 (=> (not res!64857) (not e!87877))))

(assert (=> d!41843 (= res!64857 ((_ is Cons!1690) (toList!842 lt!69883)))))

(assert (=> d!41843 (= (contains!886 (toList!842 lt!69883) (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70640)))

(declare-fun b!134933 () Bool)

(declare-fun e!87876 () Bool)

(assert (=> b!134933 (= e!87877 e!87876)))

(declare-fun res!64856 () Bool)

(assert (=> b!134933 (=> res!64856 e!87876)))

(assert (=> b!134933 (= res!64856 (= (h!2295 (toList!842 lt!69883)) (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!134934 () Bool)

(assert (=> b!134934 (= e!87876 (contains!886 (t!6137 (toList!842 lt!69883)) (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (= (and d!41843 res!64857) b!134933))

(assert (= (and b!134933 (not res!64856)) b!134934))

(declare-fun m!160729 () Bool)

(assert (=> d!41843 m!160729))

(declare-fun m!160731 () Bool)

(assert (=> d!41843 m!160731))

(declare-fun m!160733 () Bool)

(assert (=> b!134934 m!160733))

(assert (=> b!133570 d!41843))

(declare-fun lt!70641 () Bool)

(declare-fun d!41845 () Bool)

(assert (=> d!41845 (= lt!70641 (select (content!134 (toList!842 lt!70071)) (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))))

(declare-fun e!87879 () Bool)

(assert (=> d!41845 (= lt!70641 e!87879)))

(declare-fun res!64859 () Bool)

(assert (=> d!41845 (=> (not res!64859) (not e!87879))))

(assert (=> d!41845 (= res!64859 ((_ is Cons!1690) (toList!842 lt!70071)))))

(assert (=> d!41845 (= (contains!886 (toList!842 lt!70071) (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))) lt!70641)))

(declare-fun b!134935 () Bool)

(declare-fun e!87878 () Bool)

(assert (=> b!134935 (= e!87879 e!87878)))

(declare-fun res!64858 () Bool)

(assert (=> b!134935 (=> res!64858 e!87878)))

(assert (=> b!134935 (= res!64858 (= (h!2295 (toList!842 lt!70071)) (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))))

(declare-fun b!134936 () Bool)

(assert (=> b!134936 (= e!87878 (contains!886 (t!6137 (toList!842 lt!70071)) (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41845 res!64859) b!134935))

(assert (= (and b!134935 (not res!64858)) b!134936))

(declare-fun m!160735 () Bool)

(assert (=> d!41845 m!160735))

(declare-fun m!160737 () Bool)

(assert (=> d!41845 m!160737))

(declare-fun m!160739 () Bool)

(assert (=> b!134936 m!160739))

(assert (=> b!133888 d!41845))

(assert (=> b!133313 d!41575))

(assert (=> b!133313 d!40617))

(declare-fun d!41847 () Bool)

(declare-fun res!64860 () Bool)

(declare-fun e!87880 () Bool)

(assert (=> d!41847 (=> res!64860 e!87880)))

(assert (=> d!41847 (= res!64860 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69344))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!41847 (= (containsKey!176 (t!6137 (toList!842 lt!69344)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!87880)))

(declare-fun b!134937 () Bool)

(declare-fun e!87881 () Bool)

(assert (=> b!134937 (= e!87880 e!87881)))

(declare-fun res!64861 () Bool)

(assert (=> b!134937 (=> (not res!64861) (not e!87881))))

(assert (=> b!134937 (= res!64861 (and (or (not ((_ is Cons!1690) (t!6137 (toList!842 lt!69344)))) (bvsle (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1690) (t!6137 (toList!842 lt!69344))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!134938 () Bool)

(assert (=> b!134938 (= e!87881 (containsKey!176 (t!6137 (t!6137 (toList!842 lt!69344))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!41847 (not res!64860)) b!134937))

(assert (= (and b!134937 res!64861) b!134938))

(assert (=> b!134938 m!156581))

(declare-fun m!160741 () Bool)

(assert (=> b!134938 m!160741))

(assert (=> b!134082 d!41847))

(declare-fun d!41849 () Bool)

(declare-fun res!64862 () Bool)

(declare-fun e!87882 () Bool)

(assert (=> d!41849 (=> res!64862 e!87882)))

(assert (=> d!41849 (= res!64862 (and ((_ is Cons!1690) (toList!842 lt!69630)) (= (_1!1293 (h!2295 (toList!842 lt!69630))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41849 (= (containsKey!176 (toList!842 lt!69630) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87882)))

(declare-fun b!134939 () Bool)

(declare-fun e!87883 () Bool)

(assert (=> b!134939 (= e!87882 e!87883)))

(declare-fun res!64863 () Bool)

(assert (=> b!134939 (=> (not res!64863) (not e!87883))))

(assert (=> b!134939 (= res!64863 (and (or (not ((_ is Cons!1690) (toList!842 lt!69630))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69630))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Cons!1690) (toList!842 lt!69630)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69630))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!134940 () Bool)

(assert (=> b!134940 (= e!87883 (containsKey!176 (t!6137 (toList!842 lt!69630)) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41849 (not res!64862)) b!134939))

(assert (= (and b!134939 res!64863) b!134940))

(declare-fun m!160743 () Bool)

(assert (=> b!134940 m!160743))

(assert (=> d!40795 d!41849))

(assert (=> b!134032 d!41097))

(assert (=> d!40945 d!40947))

(declare-fun d!41851 () Bool)

(assert (=> d!41851 (arrayContainsKey!0 (_keys!4613 newMap!16) lt!69376 #b00000000000000000000000000000000)))

(assert (=> d!41851 true))

(declare-fun _$60!364 () Unit!4141)

(assert (=> d!41851 (= (choose!13 (_keys!4613 newMap!16) lt!69376 #b00000000000000000000000000000000) _$60!364)))

(declare-fun bs!5658 () Bool)

(assert (= bs!5658 d!41851))

(assert (=> bs!5658 m!156685))

(assert (=> d!40945 d!41851))

(declare-fun d!41853 () Bool)

(declare-fun e!87884 () Bool)

(assert (=> d!41853 e!87884))

(declare-fun res!64865 () Bool)

(assert (=> d!41853 (=> (not res!64865) (not e!87884))))

(declare-fun lt!70644 () ListLongMap!1653)

(assert (=> d!41853 (= res!64865 (contains!884 lt!70644 (_1!1293 (ite (or c!24790 c!24792) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!70645 () List!1694)

(assert (=> d!41853 (= lt!70644 (ListLongMap!1654 lt!70645))))

(declare-fun lt!70642 () Unit!4141)

(declare-fun lt!70643 () Unit!4141)

(assert (=> d!41853 (= lt!70642 lt!70643)))

(assert (=> d!41853 (= (getValueByKey!173 lt!70645 (_1!1293 (ite (or c!24790 c!24792) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24790 c!24792) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41853 (= lt!70643 (lemmaContainsTupThenGetReturnValue!88 lt!70645 (_1!1293 (ite (or c!24790 c!24792) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24790 c!24792) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41853 (= lt!70645 (insertStrictlySorted!91 (toList!842 (ite c!24790 call!14739 (ite c!24792 call!14740 call!14742))) (_1!1293 (ite (or c!24790 c!24792) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24790 c!24792) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41853 (= (+!169 (ite c!24790 call!14739 (ite c!24792 call!14740 call!14742)) (ite (or c!24790 c!24792) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70644)))

(declare-fun b!134941 () Bool)

(declare-fun res!64864 () Bool)

(assert (=> b!134941 (=> (not res!64864) (not e!87884))))

(assert (=> b!134941 (= res!64864 (= (getValueByKey!173 (toList!842 lt!70644) (_1!1293 (ite (or c!24790 c!24792) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24790 c!24792) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!134942 () Bool)

(assert (=> b!134942 (= e!87884 (contains!886 (toList!842 lt!70644) (ite (or c!24790 c!24792) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!41853 res!64865) b!134941))

(assert (= (and b!134941 res!64864) b!134942))

(declare-fun m!160745 () Bool)

(assert (=> d!41853 m!160745))

(declare-fun m!160747 () Bool)

(assert (=> d!41853 m!160747))

(declare-fun m!160749 () Bool)

(assert (=> d!41853 m!160749))

(declare-fun m!160751 () Bool)

(assert (=> d!41853 m!160751))

(declare-fun m!160753 () Bool)

(assert (=> b!134941 m!160753))

(declare-fun m!160755 () Bool)

(assert (=> b!134942 m!160755))

(assert (=> bm!14735 d!41853))

(declare-fun d!41855 () Bool)

(assert (=> d!41855 (arrayContainsKey!0 (_keys!4613 (_2!1294 lt!69280)) lt!70043 #b00000000000000000000000000000000)))

(declare-fun lt!70646 () Unit!4141)

(assert (=> d!41855 (= lt!70646 (choose!13 (_keys!4613 (_2!1294 lt!69280)) lt!70043 #b00000000000000000000000000000000))))

(assert (=> d!41855 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!41855 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 (_2!1294 lt!69280)) lt!70043 #b00000000000000000000000000000000) lt!70646)))

(declare-fun bs!5659 () Bool)

(assert (= bs!5659 d!41855))

(assert (=> bs!5659 m!158365))

(declare-fun m!160757 () Bool)

(assert (=> bs!5659 m!160757))

(assert (=> b!133843 d!41855))

(declare-fun d!41857 () Bool)

(declare-fun res!64866 () Bool)

(declare-fun e!87885 () Bool)

(assert (=> d!41857 (=> res!64866 e!87885)))

(assert (=> d!41857 (= res!64866 (= (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000) lt!70043))))

(assert (=> d!41857 (= (arrayContainsKey!0 (_keys!4613 (_2!1294 lt!69280)) lt!70043 #b00000000000000000000000000000000) e!87885)))

(declare-fun b!134943 () Bool)

(declare-fun e!87886 () Bool)

(assert (=> b!134943 (= e!87885 e!87886)))

(declare-fun res!64867 () Bool)

(assert (=> b!134943 (=> (not res!64867) (not e!87886))))

(assert (=> b!134943 (= res!64867 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(declare-fun b!134944 () Bool)

(assert (=> b!134944 (= e!87886 (arrayContainsKey!0 (_keys!4613 (_2!1294 lt!69280)) lt!70043 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!41857 (not res!64866)) b!134943))

(assert (= (and b!134943 res!64867) b!134944))

(assert (=> d!41857 m!157455))

(declare-fun m!160759 () Bool)

(assert (=> b!134944 m!160759))

(assert (=> b!133843 d!41857))

(declare-fun b!134945 () Bool)

(declare-fun c!25157 () Bool)

(declare-fun lt!70648 () (_ BitVec 64))

(assert (=> b!134945 (= c!25157 (= lt!70648 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!87888 () SeekEntryResult!269)

(declare-fun e!87889 () SeekEntryResult!269)

(assert (=> b!134945 (= e!87888 e!87889)))

(declare-fun d!41859 () Bool)

(declare-fun lt!70647 () SeekEntryResult!269)

(assert (=> d!41859 (and (or ((_ is Undefined!269) lt!70647) (not ((_ is Found!269) lt!70647)) (and (bvsge (index!3237 lt!70647) #b00000000000000000000000000000000) (bvslt (index!3237 lt!70647) (size!2521 (_keys!4613 (_2!1294 lt!69280)))))) (or ((_ is Undefined!269) lt!70647) ((_ is Found!269) lt!70647) (not ((_ is MissingZero!269) lt!70647)) (and (bvsge (index!3236 lt!70647) #b00000000000000000000000000000000) (bvslt (index!3236 lt!70647) (size!2521 (_keys!4613 (_2!1294 lt!69280)))))) (or ((_ is Undefined!269) lt!70647) ((_ is Found!269) lt!70647) ((_ is MissingZero!269) lt!70647) (not ((_ is MissingVacant!269) lt!70647)) (and (bvsge (index!3239 lt!70647) #b00000000000000000000000000000000) (bvslt (index!3239 lt!70647) (size!2521 (_keys!4613 (_2!1294 lt!69280)))))) (or ((_ is Undefined!269) lt!70647) (ite ((_ is Found!269) lt!70647) (= (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) (index!3237 lt!70647)) (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!269) lt!70647) (= (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) (index!3236 lt!70647)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!269) lt!70647) (= (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) (index!3239 lt!70647)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!87887 () SeekEntryResult!269)

(assert (=> d!41859 (= lt!70647 e!87887)))

(declare-fun c!25159 () Bool)

(declare-fun lt!70649 () SeekEntryResult!269)

(assert (=> d!41859 (= c!25159 (and ((_ is Intermediate!269) lt!70649) (undefined!1081 lt!70649)))))

(assert (=> d!41859 (= lt!70649 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000) (mask!7164 (_2!1294 lt!69280))) (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000) (_keys!4613 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280))))))

(assert (=> d!41859 (validMask!0 (mask!7164 (_2!1294 lt!69280)))))

(assert (=> d!41859 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000) (_keys!4613 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280))) lt!70647)))

(declare-fun b!134946 () Bool)

(assert (=> b!134946 (= e!87889 (seekKeyOrZeroReturnVacant!0 (x!15586 lt!70649) (index!3238 lt!70649) (index!3238 lt!70649) (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000) (_keys!4613 (_2!1294 lt!69280)) (mask!7164 (_2!1294 lt!69280))))))

(declare-fun b!134947 () Bool)

(assert (=> b!134947 (= e!87889 (MissingZero!269 (index!3238 lt!70649)))))

(declare-fun b!134948 () Bool)

(assert (=> b!134948 (= e!87887 e!87888)))

(assert (=> b!134948 (= lt!70648 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) (index!3238 lt!70649)))))

(declare-fun c!25158 () Bool)

(assert (=> b!134948 (= c!25158 (= lt!70648 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(declare-fun b!134949 () Bool)

(assert (=> b!134949 (= e!87888 (Found!269 (index!3238 lt!70649)))))

(declare-fun b!134950 () Bool)

(assert (=> b!134950 (= e!87887 Undefined!269)))

(assert (= (and d!41859 c!25159) b!134950))

(assert (= (and d!41859 (not c!25159)) b!134948))

(assert (= (and b!134948 c!25158) b!134949))

(assert (= (and b!134948 (not c!25158)) b!134945))

(assert (= (and b!134945 c!25157) b!134947))

(assert (= (and b!134945 (not c!25157)) b!134946))

(assert (=> d!41859 m!157455))

(declare-fun m!160761 () Bool)

(assert (=> d!41859 m!160761))

(assert (=> d!41859 m!157387))

(assert (=> d!41859 m!160761))

(assert (=> d!41859 m!157455))

(declare-fun m!160763 () Bool)

(assert (=> d!41859 m!160763))

(declare-fun m!160765 () Bool)

(assert (=> d!41859 m!160765))

(declare-fun m!160767 () Bool)

(assert (=> d!41859 m!160767))

(declare-fun m!160769 () Bool)

(assert (=> d!41859 m!160769))

(assert (=> b!134946 m!157455))

(declare-fun m!160771 () Bool)

(assert (=> b!134946 m!160771))

(declare-fun m!160773 () Bool)

(assert (=> b!134948 m!160773))

(assert (=> b!133843 d!41859))

(declare-fun d!41861 () Bool)

(assert (=> d!41861 (= (apply!116 lt!69702 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1492 (getValueByKey!173 (toList!842 lt!69702) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5660 () Bool)

(assert (= bs!5660 d!41861))

(assert (=> bs!5660 m!156679))

(declare-fun m!160775 () Bool)

(assert (=> bs!5660 m!160775))

(assert (=> bs!5660 m!160775))

(declare-fun m!160777 () Bool)

(assert (=> bs!5660 m!160777))

(assert (=> b!133287 d!41861))

(assert (=> b!133287 d!40625))

(declare-fun d!41863 () Bool)

(declare-fun e!87891 () Bool)

(assert (=> d!41863 e!87891))

(declare-fun res!64868 () Bool)

(assert (=> d!41863 (=> res!64868 e!87891)))

(declare-fun lt!70650 () Bool)

(assert (=> d!41863 (= res!64868 (not lt!70650))))

(declare-fun lt!70651 () Bool)

(assert (=> d!41863 (= lt!70650 lt!70651)))

(declare-fun lt!70652 () Unit!4141)

(declare-fun e!87890 () Unit!4141)

(assert (=> d!41863 (= lt!70652 e!87890)))

(declare-fun c!25160 () Bool)

(assert (=> d!41863 (= c!25160 lt!70651)))

(assert (=> d!41863 (= lt!70651 (containsKey!176 (toList!842 lt!69989) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41863 (= (contains!884 lt!69989 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70650)))

(declare-fun b!134951 () Bool)

(declare-fun lt!70653 () Unit!4141)

(assert (=> b!134951 (= e!87890 lt!70653)))

(assert (=> b!134951 (= lt!70653 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69989) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134951 (isDefined!125 (getValueByKey!173 (toList!842 lt!69989) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134952 () Bool)

(declare-fun Unit!4240 () Unit!4141)

(assert (=> b!134952 (= e!87890 Unit!4240)))

(declare-fun b!134953 () Bool)

(assert (=> b!134953 (= e!87891 (isDefined!125 (getValueByKey!173 (toList!842 lt!69989) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41863 c!25160) b!134951))

(assert (= (and d!41863 (not c!25160)) b!134952))

(assert (= (and d!41863 (not res!64868)) b!134953))

(declare-fun m!160779 () Bool)

(assert (=> d!41863 m!160779))

(declare-fun m!160781 () Bool)

(assert (=> b!134951 m!160781))

(declare-fun m!160783 () Bool)

(assert (=> b!134951 m!160783))

(assert (=> b!134951 m!160783))

(declare-fun m!160785 () Bool)

(assert (=> b!134951 m!160785))

(assert (=> b!134953 m!160783))

(assert (=> b!134953 m!160783))

(assert (=> b!134953 m!160785))

(assert (=> d!40859 d!41863))

(assert (=> d!40859 d!40591))

(declare-fun d!41865 () Bool)

(assert (=> d!41865 (= (apply!116 lt!69738 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)) (get!1492 (getValueByKey!173 (toList!842 lt!69738) (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000))))))

(declare-fun bs!5661 () Bool)

(assert (= bs!5661 d!41865))

(assert (=> bs!5661 m!157455))

(assert (=> bs!5661 m!159837))

(assert (=> bs!5661 m!159837))

(declare-fun m!160787 () Bool)

(assert (=> bs!5661 m!160787))

(assert (=> b!133382 d!41865))

(declare-fun d!41867 () Bool)

(declare-fun c!25161 () Bool)

(assert (=> d!41867 (= c!25161 ((_ is ValueCellFull!1094) (select (arr!2253 (_values!2847 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(declare-fun e!87892 () V!3481)

(assert (=> d!41867 (= (get!1489 (select (arr!2253 (_values!2847 (_2!1294 lt!69280))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 (_2!1294 lt!69280)) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87892)))

(declare-fun b!134954 () Bool)

(assert (=> b!134954 (= e!87892 (get!1490 (select (arr!2253 (_values!2847 (_2!1294 lt!69280))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 (_2!1294 lt!69280)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134955 () Bool)

(assert (=> b!134955 (= e!87892 (get!1491 (select (arr!2253 (_values!2847 (_2!1294 lt!69280))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 (_2!1294 lt!69280)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41867 c!25161) b!134954))

(assert (= (and d!41867 (not c!25161)) b!134955))

(assert (=> b!134954 m!157491))

(assert (=> b!134954 m!157493))

(declare-fun m!160789 () Bool)

(assert (=> b!134954 m!160789))

(assert (=> b!134955 m!157491))

(assert (=> b!134955 m!157493))

(declare-fun m!160791 () Bool)

(assert (=> b!134955 m!160791))

(assert (=> b!133382 d!41867))

(declare-fun d!41869 () Bool)

(declare-fun c!25162 () Bool)

(assert (=> d!41869 (= c!25162 ((_ is Nil!1691) (toList!842 lt!69639)))))

(declare-fun e!87893 () (InoxSet tuple2!2564))

(assert (=> d!41869 (= (content!134 (toList!842 lt!69639)) e!87893)))

(declare-fun b!134956 () Bool)

(assert (=> b!134956 (= e!87893 ((as const (Array tuple2!2564 Bool)) false))))

(declare-fun b!134957 () Bool)

(assert (=> b!134957 (= e!87893 ((_ map or) (store ((as const (Array tuple2!2564 Bool)) false) (h!2295 (toList!842 lt!69639)) true) (content!134 (t!6137 (toList!842 lt!69639)))))))

(assert (= (and d!41869 c!25162) b!134956))

(assert (= (and d!41869 (not c!25162)) b!134957))

(declare-fun m!160793 () Bool)

(assert (=> b!134957 m!160793))

(declare-fun m!160795 () Bool)

(assert (=> b!134957 m!160795))

(assert (=> d!40695 d!41869))

(declare-fun d!41871 () Bool)

(assert (=> d!41871 (isDefined!125 (getValueByKey!173 (toList!842 (map!1398 (_2!1294 lt!69445))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun lt!70654 () Unit!4141)

(assert (=> d!41871 (= lt!70654 (choose!831 (toList!842 (map!1398 (_2!1294 lt!69445))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun e!87894 () Bool)

(assert (=> d!41871 e!87894))

(declare-fun res!64869 () Bool)

(assert (=> d!41871 (=> (not res!64869) (not e!87894))))

(assert (=> d!41871 (= res!64869 (isStrictlySorted!309 (toList!842 (map!1398 (_2!1294 lt!69445)))))))

(assert (=> d!41871 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (map!1398 (_2!1294 lt!69445))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) lt!70654)))

(declare-fun b!134958 () Bool)

(assert (=> b!134958 (= e!87894 (containsKey!176 (toList!842 (map!1398 (_2!1294 lt!69445))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!41871 res!64869) b!134958))

(assert (=> d!41871 m!156395))

(assert (=> d!41871 m!158391))

(assert (=> d!41871 m!158391))

(assert (=> d!41871 m!158393))

(assert (=> d!41871 m!156395))

(declare-fun m!160797 () Bool)

(assert (=> d!41871 m!160797))

(declare-fun m!160799 () Bool)

(assert (=> d!41871 m!160799))

(assert (=> b!134958 m!156395))

(assert (=> b!134958 m!158387))

(assert (=> b!133853 d!41871))

(assert (=> b!133853 d!41165))

(assert (=> b!133853 d!41167))

(declare-fun d!41873 () Bool)

(declare-fun res!64870 () Bool)

(declare-fun e!87895 () Bool)

(assert (=> d!41873 (=> res!64870 e!87895)))

(assert (=> d!41873 (= res!64870 (and ((_ is Cons!1690) lt!69546) (= (_1!1293 (h!2295 lt!69546)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41873 (= (containsKey!176 lt!69546 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87895)))

(declare-fun b!134959 () Bool)

(declare-fun e!87896 () Bool)

(assert (=> b!134959 (= e!87895 e!87896)))

(declare-fun res!64871 () Bool)

(assert (=> b!134959 (=> (not res!64871) (not e!87896))))

(assert (=> b!134959 (= res!64871 (and (or (not ((_ is Cons!1690) lt!69546)) (bvsle (_1!1293 (h!2295 lt!69546)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1690) lt!69546) (bvslt (_1!1293 (h!2295 lt!69546)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134960 () Bool)

(assert (=> b!134960 (= e!87896 (containsKey!176 (t!6137 lt!69546) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41873 (not res!64870)) b!134959))

(assert (= (and b!134959 res!64871) b!134960))

(declare-fun m!160801 () Bool)

(assert (=> b!134960 m!160801))

(assert (=> b!133759 d!41873))

(declare-fun b!134962 () Bool)

(declare-fun e!87897 () Option!179)

(declare-fun e!87898 () Option!179)

(assert (=> b!134962 (= e!87897 e!87898)))

(declare-fun c!25164 () Bool)

(assert (=> b!134962 (= c!25164 (and ((_ is Cons!1690) (toList!842 lt!70157)) (not (= (_1!1293 (h!2295 (toList!842 lt!70157))) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!134961 () Bool)

(assert (=> b!134961 (= e!87897 (Some!178 (_2!1293 (h!2295 (toList!842 lt!70157)))))))

(declare-fun c!25163 () Bool)

(declare-fun d!41875 () Bool)

(assert (=> d!41875 (= c!25163 (and ((_ is Cons!1690) (toList!842 lt!70157)) (= (_1!1293 (h!2295 (toList!842 lt!70157))) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))))))

(assert (=> d!41875 (= (getValueByKey!173 (toList!842 lt!70157) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) e!87897)))

(declare-fun b!134964 () Bool)

(assert (=> b!134964 (= e!87898 None!177)))

(declare-fun b!134963 () Bool)

(assert (=> b!134963 (= e!87898 (getValueByKey!173 (t!6137 (toList!842 lt!70157)) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))

(assert (= (and d!41875 c!25163) b!134961))

(assert (= (and d!41875 (not c!25163)) b!134962))

(assert (= (and b!134962 c!25164) b!134963))

(assert (= (and b!134962 (not c!25164)) b!134964))

(declare-fun m!160803 () Bool)

(assert (=> b!134963 m!160803))

(assert (=> b!134020 d!41875))

(assert (=> b!133494 d!41767))

(declare-fun d!41877 () Bool)

(assert (=> d!41877 (= (apply!116 lt!70032 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1492 (getValueByKey!173 (toList!842 lt!70032) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5662 () Bool)

(assert (= bs!5662 d!41877))

(assert (=> bs!5662 m!156679))

(assert (=> bs!5662 m!159785))

(assert (=> bs!5662 m!159785))

(declare-fun m!160805 () Bool)

(assert (=> bs!5662 m!160805))

(assert (=> b!133828 d!41877))

(declare-fun d!41879 () Bool)

(declare-fun c!25165 () Bool)

(assert (=> d!41879 (= c!25165 ((_ is ValueCellFull!1094) (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!87899 () V!3481)

(assert (=> d!41879 (= (get!1489 (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!87899)))

(declare-fun b!134965 () Bool)

(assert (=> b!134965 (= e!87899 (get!1490 (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134966 () Bool)

(assert (=> b!134966 (= e!87899 (get!1491 (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41879 c!25165) b!134965))

(assert (= (and d!41879 (not c!25165)) b!134966))

(assert (=> b!134965 m!158335))

(assert (=> b!134965 m!156809))

(declare-fun m!160807 () Bool)

(assert (=> b!134965 m!160807))

(assert (=> b!134966 m!158335))

(assert (=> b!134966 m!156809))

(declare-fun m!160809 () Bool)

(assert (=> b!134966 m!160809))

(assert (=> b!133828 d!41879))

(declare-fun d!41881 () Bool)

(assert (=> d!41881 (= (isEmpty!416 (getValueByKey!173 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not ((_ is Some!178) (getValueByKey!173 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (=> d!40775 d!41881))

(declare-fun d!41883 () Bool)

(declare-fun lt!70655 () (_ BitVec 32))

(assert (=> d!41883 (and (bvsge lt!70655 #b00000000000000000000000000000000) (bvsle lt!70655 (bvsub (size!2521 (_keys!4613 (_2!1294 lt!69280))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!87900 () (_ BitVec 32))

(assert (=> d!41883 (= lt!70655 e!87900)))

(declare-fun c!25166 () Bool)

(assert (=> d!41883 (= c!25166 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(assert (=> d!41883 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (_2!1294 lt!69280)))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2521 (_keys!4613 (_2!1294 lt!69280))) (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(assert (=> d!41883 (= (arrayCountValidKeys!0 (_keys!4613 (_2!1294 lt!69280)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (_2!1294 lt!69280)))) lt!70655)))

(declare-fun b!134967 () Bool)

(declare-fun e!87901 () (_ BitVec 32))

(declare-fun call!14840 () (_ BitVec 32))

(assert (=> b!134967 (= e!87901 (bvadd #b00000000000000000000000000000001 call!14840))))

(declare-fun b!134968 () Bool)

(assert (=> b!134968 (= e!87901 call!14840)))

(declare-fun b!134969 () Bool)

(assert (=> b!134969 (= e!87900 e!87901)))

(declare-fun c!25167 () Bool)

(assert (=> b!134969 (= c!25167 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!14837 () Bool)

(assert (=> bm!14837 (= call!14840 (arrayCountValidKeys!0 (_keys!4613 (_2!1294 lt!69280)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(declare-fun b!134970 () Bool)

(assert (=> b!134970 (= e!87900 #b00000000000000000000000000000000)))

(assert (= (and d!41883 c!25166) b!134970))

(assert (= (and d!41883 (not c!25166)) b!134969))

(assert (= (and b!134969 c!25167) b!134967))

(assert (= (and b!134969 (not c!25167)) b!134968))

(assert (= (or b!134967 b!134968) bm!14837))

(assert (=> b!134969 m!159245))

(assert (=> b!134969 m!159245))

(assert (=> b!134969 m!159253))

(declare-fun m!160811 () Bool)

(assert (=> bm!14837 m!160811))

(assert (=> bm!14775 d!41883))

(declare-fun d!41885 () Bool)

(declare-fun e!87903 () Bool)

(assert (=> d!41885 e!87903))

(declare-fun res!64872 () Bool)

(assert (=> d!41885 (=> res!64872 e!87903)))

(declare-fun lt!70656 () Bool)

(assert (=> d!41885 (= res!64872 (not lt!70656))))

(declare-fun lt!70657 () Bool)

(assert (=> d!41885 (= lt!70656 lt!70657)))

(declare-fun lt!70658 () Unit!4141)

(declare-fun e!87902 () Unit!4141)

(assert (=> d!41885 (= lt!70658 e!87902)))

(declare-fun c!25168 () Bool)

(assert (=> d!41885 (= c!25168 lt!70657)))

(assert (=> d!41885 (= lt!70657 (containsKey!176 (toList!842 lt!69779) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41885 (= (contains!884 lt!69779 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70656)))

(declare-fun b!134971 () Bool)

(declare-fun lt!70659 () Unit!4141)

(assert (=> b!134971 (= e!87902 lt!70659)))

(assert (=> b!134971 (= lt!70659 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69779) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134971 (isDefined!125 (getValueByKey!173 (toList!842 lt!69779) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!134972 () Bool)

(declare-fun Unit!4241 () Unit!4141)

(assert (=> b!134972 (= e!87902 Unit!4241)))

(declare-fun b!134973 () Bool)

(assert (=> b!134973 (= e!87903 (isDefined!125 (getValueByKey!173 (toList!842 lt!69779) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41885 c!25168) b!134971))

(assert (= (and d!41885 (not c!25168)) b!134972))

(assert (= (and d!41885 (not res!64872)) b!134973))

(declare-fun m!160813 () Bool)

(assert (=> d!41885 m!160813))

(declare-fun m!160815 () Bool)

(assert (=> b!134971 m!160815))

(declare-fun m!160817 () Bool)

(assert (=> b!134971 m!160817))

(assert (=> b!134971 m!160817))

(declare-fun m!160819 () Bool)

(assert (=> b!134971 m!160819))

(assert (=> b!134973 m!160817))

(assert (=> b!134973 m!160817))

(assert (=> b!134973 m!160819))

(assert (=> bm!14710 d!41885))

(declare-fun d!41887 () Bool)

(assert (=> d!41887 (not (contains!884 (+!169 lt!70008 (tuple2!2565 lt!70010 lt!70011)) lt!70014))))

(declare-fun lt!70660 () Unit!4141)

(assert (=> d!41887 (= lt!70660 (choose!836 lt!70008 lt!70010 lt!70011 lt!70014))))

(declare-fun e!87904 () Bool)

(assert (=> d!41887 e!87904))

(declare-fun res!64873 () Bool)

(assert (=> d!41887 (=> (not res!64873) (not e!87904))))

(assert (=> d!41887 (= res!64873 (not (contains!884 lt!70008 lt!70014)))))

(assert (=> d!41887 (= (addStillNotContains!63 lt!70008 lt!70010 lt!70011 lt!70014) lt!70660)))

(declare-fun b!134974 () Bool)

(assert (=> b!134974 (= e!87904 (not (= lt!70010 lt!70014)))))

(assert (= (and d!41887 res!64873) b!134974))

(assert (=> d!41887 m!158269))

(assert (=> d!41887 m!158269))

(assert (=> d!41887 m!158275))

(declare-fun m!160821 () Bool)

(assert (=> d!41887 m!160821))

(declare-fun m!160823 () Bool)

(assert (=> d!41887 m!160823))

(assert (=> b!133813 d!41887))

(declare-fun d!41889 () Bool)

(declare-fun e!87905 () Bool)

(assert (=> d!41889 e!87905))

(declare-fun res!64875 () Bool)

(assert (=> d!41889 (=> (not res!64875) (not e!87905))))

(declare-fun lt!70663 () ListLongMap!1653)

(assert (=> d!41889 (= res!64875 (contains!884 lt!70663 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70664 () List!1694)

(assert (=> d!41889 (= lt!70663 (ListLongMap!1654 lt!70664))))

(declare-fun lt!70661 () Unit!4141)

(declare-fun lt!70662 () Unit!4141)

(assert (=> d!41889 (= lt!70661 lt!70662)))

(assert (=> d!41889 (= (getValueByKey!173 lt!70664 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41889 (= lt!70662 (lemmaContainsTupThenGetReturnValue!88 lt!70664 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41889 (= lt!70664 (insertStrictlySorted!91 (toList!842 call!14760) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41889 (= (+!169 call!14760 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70663)))

(declare-fun b!134975 () Bool)

(declare-fun res!64874 () Bool)

(assert (=> b!134975 (=> (not res!64874) (not e!87905))))

(assert (=> b!134975 (= res!64874 (= (getValueByKey!173 (toList!842 lt!70663) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!134976 () Bool)

(assert (=> b!134976 (= e!87905 (contains!886 (toList!842 lt!70663) (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41889 res!64875) b!134975))

(assert (= (and b!134975 res!64874) b!134976))

(declare-fun m!160825 () Bool)

(assert (=> d!41889 m!160825))

(declare-fun m!160827 () Bool)

(assert (=> d!41889 m!160827))

(declare-fun m!160829 () Bool)

(assert (=> d!41889 m!160829))

(declare-fun m!160831 () Bool)

(assert (=> d!41889 m!160831))

(declare-fun m!160833 () Bool)

(assert (=> b!134975 m!160833))

(declare-fun m!160835 () Bool)

(assert (=> b!134976 m!160835))

(assert (=> b!133813 d!41889))

(declare-fun d!41891 () Bool)

(declare-fun e!87906 () Bool)

(assert (=> d!41891 e!87906))

(declare-fun res!64877 () Bool)

(assert (=> d!41891 (=> (not res!64877) (not e!87906))))

(declare-fun lt!70667 () ListLongMap!1653)

(assert (=> d!41891 (= res!64877 (contains!884 lt!70667 (_1!1293 (tuple2!2565 lt!70010 lt!70011))))))

(declare-fun lt!70668 () List!1694)

(assert (=> d!41891 (= lt!70667 (ListLongMap!1654 lt!70668))))

(declare-fun lt!70665 () Unit!4141)

(declare-fun lt!70666 () Unit!4141)

(assert (=> d!41891 (= lt!70665 lt!70666)))

(assert (=> d!41891 (= (getValueByKey!173 lt!70668 (_1!1293 (tuple2!2565 lt!70010 lt!70011))) (Some!178 (_2!1293 (tuple2!2565 lt!70010 lt!70011))))))

(assert (=> d!41891 (= lt!70666 (lemmaContainsTupThenGetReturnValue!88 lt!70668 (_1!1293 (tuple2!2565 lt!70010 lt!70011)) (_2!1293 (tuple2!2565 lt!70010 lt!70011))))))

(assert (=> d!41891 (= lt!70668 (insertStrictlySorted!91 (toList!842 lt!70008) (_1!1293 (tuple2!2565 lt!70010 lt!70011)) (_2!1293 (tuple2!2565 lt!70010 lt!70011))))))

(assert (=> d!41891 (= (+!169 lt!70008 (tuple2!2565 lt!70010 lt!70011)) lt!70667)))

(declare-fun b!134977 () Bool)

(declare-fun res!64876 () Bool)

(assert (=> b!134977 (=> (not res!64876) (not e!87906))))

(assert (=> b!134977 (= res!64876 (= (getValueByKey!173 (toList!842 lt!70667) (_1!1293 (tuple2!2565 lt!70010 lt!70011))) (Some!178 (_2!1293 (tuple2!2565 lt!70010 lt!70011)))))))

(declare-fun b!134978 () Bool)

(assert (=> b!134978 (= e!87906 (contains!886 (toList!842 lt!70667) (tuple2!2565 lt!70010 lt!70011)))))

(assert (= (and d!41891 res!64877) b!134977))

(assert (= (and b!134977 res!64876) b!134978))

(declare-fun m!160837 () Bool)

(assert (=> d!41891 m!160837))

(declare-fun m!160839 () Bool)

(assert (=> d!41891 m!160839))

(declare-fun m!160841 () Bool)

(assert (=> d!41891 m!160841))

(declare-fun m!160843 () Bool)

(assert (=> d!41891 m!160843))

(declare-fun m!160845 () Bool)

(assert (=> b!134977 m!160845))

(declare-fun m!160847 () Bool)

(assert (=> b!134978 m!160847))

(assert (=> b!133813 d!41891))

(assert (=> b!133813 d!41055))

(declare-fun d!41893 () Bool)

(declare-fun e!87908 () Bool)

(assert (=> d!41893 e!87908))

(declare-fun res!64878 () Bool)

(assert (=> d!41893 (=> res!64878 e!87908)))

(declare-fun lt!70669 () Bool)

(assert (=> d!41893 (= res!64878 (not lt!70669))))

(declare-fun lt!70670 () Bool)

(assert (=> d!41893 (= lt!70669 lt!70670)))

(declare-fun lt!70671 () Unit!4141)

(declare-fun e!87907 () Unit!4141)

(assert (=> d!41893 (= lt!70671 e!87907)))

(declare-fun c!25169 () Bool)

(assert (=> d!41893 (= c!25169 lt!70670)))

(assert (=> d!41893 (= lt!70670 (containsKey!176 (toList!842 (+!169 lt!70008 (tuple2!2565 lt!70010 lt!70011))) lt!70014))))

(assert (=> d!41893 (= (contains!884 (+!169 lt!70008 (tuple2!2565 lt!70010 lt!70011)) lt!70014) lt!70669)))

(declare-fun b!134979 () Bool)

(declare-fun lt!70672 () Unit!4141)

(assert (=> b!134979 (= e!87907 lt!70672)))

(assert (=> b!134979 (= lt!70672 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!70008 (tuple2!2565 lt!70010 lt!70011))) lt!70014))))

(assert (=> b!134979 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!70008 (tuple2!2565 lt!70010 lt!70011))) lt!70014))))

(declare-fun b!134980 () Bool)

(declare-fun Unit!4242 () Unit!4141)

(assert (=> b!134980 (= e!87907 Unit!4242)))

(declare-fun b!134981 () Bool)

(assert (=> b!134981 (= e!87908 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!70008 (tuple2!2565 lt!70010 lt!70011))) lt!70014)))))

(assert (= (and d!41893 c!25169) b!134979))

(assert (= (and d!41893 (not c!25169)) b!134980))

(assert (= (and d!41893 (not res!64878)) b!134981))

(declare-fun m!160849 () Bool)

(assert (=> d!41893 m!160849))

(declare-fun m!160851 () Bool)

(assert (=> b!134979 m!160851))

(declare-fun m!160853 () Bool)

(assert (=> b!134979 m!160853))

(assert (=> b!134979 m!160853))

(declare-fun m!160855 () Bool)

(assert (=> b!134979 m!160855))

(assert (=> b!134981 m!160853))

(assert (=> b!134981 m!160853))

(assert (=> b!134981 m!160855))

(assert (=> b!133813 d!41893))

(assert (=> b!133958 d!41677))

(assert (=> b!133958 d!40743))

(declare-fun b!134983 () Bool)

(declare-fun e!87909 () Option!179)

(declare-fun e!87910 () Option!179)

(assert (=> b!134983 (= e!87909 e!87910)))

(declare-fun c!25171 () Bool)

(assert (=> b!134983 (= c!25171 (and ((_ is Cons!1690) (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun b!134982 () Bool)

(assert (=> b!134982 (= e!87909 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))))))

(declare-fun c!25170 () Bool)

(declare-fun d!41895 () Bool)

(assert (=> d!41895 (= c!25170 (and ((_ is Cons!1690) (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (= (_1!1293 (h!2295 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!41895 (= (getValueByKey!173 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!87909)))

(declare-fun b!134985 () Bool)

(assert (=> b!134985 (= e!87910 None!177)))

(declare-fun b!134984 () Bool)

(assert (=> b!134984 (= e!87910 (getValueByKey!173 (t!6137 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!41895 c!25170) b!134982))

(assert (= (and d!41895 (not c!25170)) b!134983))

(assert (= (and b!134983 c!25171) b!134984))

(assert (= (and b!134983 (not c!25171)) b!134985))

(assert (=> b!134984 m!156395))

(declare-fun m!160857 () Bool)

(assert (=> b!134984 m!160857))

(assert (=> b!133285 d!41895))

(declare-fun d!41897 () Bool)

(assert (=> d!41897 (= (apply!116 lt!69804 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69804) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5663 () Bool)

(assert (= bs!5663 d!41897))

(assert (=> bs!5663 m!158925))

(assert (=> bs!5663 m!158925))

(declare-fun m!160859 () Bool)

(assert (=> bs!5663 m!160859))

(assert (=> b!133452 d!41897))

(declare-fun b!134987 () Bool)

(declare-fun e!87911 () Option!179)

(declare-fun e!87912 () Option!179)

(assert (=> b!134987 (= e!87911 e!87912)))

(declare-fun c!25173 () Bool)

(assert (=> b!134987 (= c!25173 (and ((_ is Cons!1690) (toList!842 lt!70071)) (not (= (_1!1293 (h!2295 (toList!842 lt!70071))) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!134986 () Bool)

(assert (=> b!134986 (= e!87911 (Some!178 (_2!1293 (h!2295 (toList!842 lt!70071)))))))

(declare-fun c!25172 () Bool)

(declare-fun d!41899 () Bool)

(assert (=> d!41899 (= c!25172 (and ((_ is Cons!1690) (toList!842 lt!70071)) (= (_1!1293 (h!2295 (toList!842 lt!70071))) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))))))

(assert (=> d!41899 (= (getValueByKey!173 (toList!842 lt!70071) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))) e!87911)))

(declare-fun b!134989 () Bool)

(assert (=> b!134989 (= e!87912 None!177)))

(declare-fun b!134988 () Bool)

(assert (=> b!134988 (= e!87912 (getValueByKey!173 (t!6137 (toList!842 lt!70071)) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))

(assert (= (and d!41899 c!25172) b!134986))

(assert (= (and d!41899 (not c!25172)) b!134987))

(assert (= (and b!134987 c!25173) b!134988))

(assert (= (and b!134987 (not c!25173)) b!134989))

(declare-fun m!160861 () Bool)

(assert (=> b!134988 m!160861))

(assert (=> b!133887 d!41899))

(declare-fun d!41901 () Bool)

(declare-fun lt!70673 () Bool)

(assert (=> d!41901 (= lt!70673 (select (content!134 (toList!842 lt!69854)) (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))))

(declare-fun e!87914 () Bool)

(assert (=> d!41901 (= lt!70673 e!87914)))

(declare-fun res!64880 () Bool)

(assert (=> d!41901 (=> (not res!64880) (not e!87914))))

(assert (=> d!41901 (= res!64880 ((_ is Cons!1690) (toList!842 lt!69854)))))

(assert (=> d!41901 (= (contains!886 (toList!842 lt!69854) (tuple2!2565 lt!69493 (minValue!2719 newMap!16))) lt!70673)))

(declare-fun b!134990 () Bool)

(declare-fun e!87913 () Bool)

(assert (=> b!134990 (= e!87914 e!87913)))

(declare-fun res!64879 () Bool)

(assert (=> b!134990 (=> res!64879 e!87913)))

(assert (=> b!134990 (= res!64879 (= (h!2295 (toList!842 lt!69854)) (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))))

(declare-fun b!134991 () Bool)

(assert (=> b!134991 (= e!87913 (contains!886 (t!6137 (toList!842 lt!69854)) (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))))

(assert (= (and d!41901 res!64880) b!134990))

(assert (= (and b!134990 (not res!64879)) b!134991))

(declare-fun m!160863 () Bool)

(assert (=> d!41901 m!160863))

(declare-fun m!160865 () Bool)

(assert (=> d!41901 m!160865))

(declare-fun m!160867 () Bool)

(assert (=> b!134991 m!160867))

(assert (=> b!133546 d!41901))

(assert (=> d!40679 d!40687))

(declare-fun d!41903 () Bool)

(assert (=> d!41903 (arrayContainsKey!0 lt!69460 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!41903 true))

(declare-fun _$60!365 () Unit!4141)

(assert (=> d!41903 (= (choose!13 lt!69460 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))) _$60!365)))

(declare-fun bs!5664 () Bool)

(assert (= bs!5664 d!41903))

(assert (=> bs!5664 m!156395))

(assert (=> bs!5664 m!156727))

(assert (=> d!40679 d!41903))

(declare-fun d!41905 () Bool)

(assert (=> d!41905 (isDefined!125 (getValueByKey!173 (toList!842 lt!69335) lt!69334))))

(declare-fun lt!70674 () Unit!4141)

(assert (=> d!41905 (= lt!70674 (choose!831 (toList!842 lt!69335) lt!69334))))

(declare-fun e!87915 () Bool)

(assert (=> d!41905 e!87915))

(declare-fun res!64881 () Bool)

(assert (=> d!41905 (=> (not res!64881) (not e!87915))))

(assert (=> d!41905 (= res!64881 (isStrictlySorted!309 (toList!842 lt!69335)))))

(assert (=> d!41905 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69335) lt!69334) lt!70674)))

(declare-fun b!134992 () Bool)

(assert (=> b!134992 (= e!87915 (containsKey!176 (toList!842 lt!69335) lt!69334))))

(assert (= (and d!41905 res!64881) b!134992))

(assert (=> d!41905 m!158603))

(assert (=> d!41905 m!158603))

(assert (=> d!41905 m!158605))

(declare-fun m!160869 () Bool)

(assert (=> d!41905 m!160869))

(assert (=> d!41905 m!157953))

(assert (=> b!134992 m!158599))

(assert (=> b!133937 d!41905))

(assert (=> b!133937 d!41233))

(assert (=> b!133937 d!41235))

(declare-fun d!41907 () Bool)

(assert (=> d!41907 (= (get!1490 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3197 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000)))))

(assert (=> b!133309 d!41907))

(assert (=> b!133697 d!40621))

(declare-fun d!41909 () Bool)

(declare-fun res!64882 () Bool)

(declare-fun e!87916 () Bool)

(assert (=> d!41909 (=> res!64882 e!87916)))

(assert (=> d!41909 (= res!64882 (and ((_ is Cons!1690) (toList!842 lt!69529)) (= (_1!1293 (h!2295 (toList!842 lt!69529))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41909 (= (containsKey!176 (toList!842 lt!69529) #b1000000000000000000000000000000000000000000000000000000000000000) e!87916)))

(declare-fun b!134993 () Bool)

(declare-fun e!87917 () Bool)

(assert (=> b!134993 (= e!87916 e!87917)))

(declare-fun res!64883 () Bool)

(assert (=> b!134993 (=> (not res!64883) (not e!87917))))

(assert (=> b!134993 (= res!64883 (and (or (not ((_ is Cons!1690) (toList!842 lt!69529))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69529))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1690) (toList!842 lt!69529)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69529))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!134994 () Bool)

(assert (=> b!134994 (= e!87917 (containsKey!176 (t!6137 (toList!842 lt!69529)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41909 (not res!64882)) b!134993))

(assert (= (and b!134993 res!64883) b!134994))

(declare-fun m!160871 () Bool)

(assert (=> b!134994 m!160871))

(assert (=> d!40953 d!41909))

(assert (=> b!133851 d!41661))

(declare-fun e!87920 () Bool)

(declare-fun b!134995 () Bool)

(assert (=> b!134995 (= e!87920 (contains!885 (ite c!24735 (Cons!1689 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) lt!69467) lt!69442) lt!69442) (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) (bvadd lt!69467 #b00000000000000000000000000000001))))))

(declare-fun b!134996 () Bool)

(declare-fun e!87918 () Bool)

(declare-fun call!14841 () Bool)

(assert (=> b!134996 (= e!87918 call!14841)))

(declare-fun b!134997 () Bool)

(declare-fun e!87921 () Bool)

(declare-fun e!87919 () Bool)

(assert (=> b!134997 (= e!87921 e!87919)))

(declare-fun res!64885 () Bool)

(assert (=> b!134997 (=> (not res!64885) (not e!87919))))

(assert (=> b!134997 (= res!64885 (not e!87920))))

(declare-fun res!64886 () Bool)

(assert (=> b!134997 (=> (not res!64886) (not e!87920))))

(assert (=> b!134997 (= res!64886 (validKeyInArray!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) (bvadd lt!69467 #b00000000000000000000000000000001))))))

(declare-fun c!25174 () Bool)

(declare-fun bm!14838 () Bool)

(assert (=> bm!14838 (= call!14841 (arrayNoDuplicates!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (bvadd lt!69467 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!25174 (Cons!1689 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) (bvadd lt!69467 #b00000000000000000000000000000001)) (ite c!24735 (Cons!1689 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) lt!69467) lt!69442) lt!69442)) (ite c!24735 (Cons!1689 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) lt!69467) lt!69442) lt!69442))))))

(declare-fun d!41911 () Bool)

(declare-fun res!64884 () Bool)

(assert (=> d!41911 (=> res!64884 e!87921)))

(assert (=> d!41911 (= res!64884 (bvsge (bvadd lt!69467 #b00000000000000000000000000000001) (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(assert (=> d!41911 (= (arrayNoDuplicates!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (bvadd lt!69467 #b00000000000000000000000000000001) (ite c!24735 (Cons!1689 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) lt!69467) lt!69442) lt!69442)) e!87921)))

(declare-fun b!134998 () Bool)

(assert (=> b!134998 (= e!87919 e!87918)))

(assert (=> b!134998 (= c!25174 (validKeyInArray!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) (bvadd lt!69467 #b00000000000000000000000000000001))))))

(declare-fun b!134999 () Bool)

(assert (=> b!134999 (= e!87918 call!14841)))

(assert (= (and d!41911 (not res!64884)) b!134997))

(assert (= (and b!134997 res!64886) b!134995))

(assert (= (and b!134997 res!64885) b!134998))

(assert (= (and b!134998 c!25174) b!134996))

(assert (= (and b!134998 (not c!25174)) b!134999))

(assert (= (or b!134996 b!134999) bm!14838))

(declare-fun m!160873 () Bool)

(assert (=> b!134995 m!160873))

(assert (=> b!134995 m!160873))

(declare-fun m!160875 () Bool)

(assert (=> b!134995 m!160875))

(assert (=> b!134997 m!160873))

(assert (=> b!134997 m!160873))

(declare-fun m!160877 () Bool)

(assert (=> b!134997 m!160877))

(assert (=> bm!14838 m!160873))

(declare-fun m!160879 () Bool)

(assert (=> bm!14838 m!160879))

(assert (=> b!134998 m!160873))

(assert (=> b!134998 m!160873))

(assert (=> b!134998 m!160877))

(assert (=> bm!14720 d!41911))

(assert (=> b!133670 d!41779))

(assert (=> b!133670 d!41781))

(declare-fun b!135000 () Bool)

(declare-fun lt!70675 () SeekEntryResult!269)

(assert (=> b!135000 (and (bvsge (index!3238 lt!70675) #b00000000000000000000000000000000) (bvslt (index!3238 lt!70675) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun e!87922 () Bool)

(assert (=> b!135000 (= e!87922 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3238 lt!70675)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135001 () Bool)

(declare-fun e!87923 () SeekEntryResult!269)

(assert (=> b!135001 (= e!87923 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (mask!7164 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 newMap!16)) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(declare-fun b!135002 () Bool)

(declare-fun e!87924 () SeekEntryResult!269)

(assert (=> b!135002 (= e!87924 (Intermediate!269 true (toIndex!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (mask!7164 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!135003 () Bool)

(assert (=> b!135003 (= e!87923 (Intermediate!269 false (toIndex!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (mask!7164 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!135004 () Bool)

(assert (=> b!135004 (= e!87924 e!87923)))

(declare-fun c!25177 () Bool)

(declare-fun lt!70676 () (_ BitVec 64))

(assert (=> b!135004 (= c!25177 (or (= lt!70676 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (= (bvadd lt!70676 lt!70676) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135006 () Bool)

(assert (=> b!135006 (and (bvsge (index!3238 lt!70675) #b00000000000000000000000000000000) (bvslt (index!3238 lt!70675) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!64887 () Bool)

(assert (=> b!135006 (= res!64887 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3238 lt!70675)) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135006 (=> res!64887 e!87922)))

(declare-fun e!87925 () Bool)

(assert (=> b!135006 (= e!87925 e!87922)))

(declare-fun b!135007 () Bool)

(declare-fun e!87926 () Bool)

(assert (=> b!135007 (= e!87926 e!87925)))

(declare-fun res!64889 () Bool)

(assert (=> b!135007 (= res!64889 (and ((_ is Intermediate!269) lt!70675) (not (undefined!1081 lt!70675)) (bvslt (x!15586 lt!70675) #b01111111111111111111111111111110) (bvsge (x!15586 lt!70675) #b00000000000000000000000000000000) (bvsge (x!15586 lt!70675) #b00000000000000000000000000000000)))))

(assert (=> b!135007 (=> (not res!64889) (not e!87925))))

(declare-fun b!135008 () Bool)

(assert (=> b!135008 (and (bvsge (index!3238 lt!70675) #b00000000000000000000000000000000) (bvslt (index!3238 lt!70675) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!64888 () Bool)

(assert (=> b!135008 (= res!64888 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3238 lt!70675)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135008 (=> res!64888 e!87922)))

(declare-fun d!41913 () Bool)

(assert (=> d!41913 e!87926))

(declare-fun c!25175 () Bool)

(assert (=> d!41913 (= c!25175 (and ((_ is Intermediate!269) lt!70675) (undefined!1081 lt!70675)))))

(assert (=> d!41913 (= lt!70675 e!87924)))

(declare-fun c!25176 () Bool)

(assert (=> d!41913 (= c!25176 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!41913 (= lt!70676 (select (arr!2252 (_keys!4613 newMap!16)) (toIndex!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (mask!7164 newMap!16))))))

(assert (=> d!41913 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!41913 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (mask!7164 newMap!16)) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (_keys!4613 newMap!16) (mask!7164 newMap!16)) lt!70675)))

(declare-fun b!135005 () Bool)

(assert (=> b!135005 (= e!87926 (bvsge (x!15586 lt!70675) #b01111111111111111111111111111110))))

(assert (= (and d!41913 c!25176) b!135002))

(assert (= (and d!41913 (not c!25176)) b!135004))

(assert (= (and b!135004 c!25177) b!135003))

(assert (= (and b!135004 (not c!25177)) b!135001))

(assert (= (and d!41913 c!25175) b!135005))

(assert (= (and d!41913 (not c!25175)) b!135007))

(assert (= (and b!135007 res!64889) b!135006))

(assert (= (and b!135006 (not res!64887)) b!135008))

(assert (= (and b!135008 (not res!64888)) b!135000))

(declare-fun m!160881 () Bool)

(assert (=> b!135000 m!160881))

(assert (=> d!41913 m!158541))

(declare-fun m!160883 () Bool)

(assert (=> d!41913 m!160883))

(assert (=> d!41913 m!156651))

(assert (=> b!135008 m!160881))

(assert (=> b!135001 m!158541))

(declare-fun m!160885 () Bool)

(assert (=> b!135001 m!160885))

(assert (=> b!135001 m!160885))

(assert (=> b!135001 m!156679))

(declare-fun m!160887 () Bool)

(assert (=> b!135001 m!160887))

(assert (=> b!135006 m!160881))

(assert (=> d!40949 d!41913))

(declare-fun d!41915 () Bool)

(declare-fun lt!70678 () (_ BitVec 32))

(declare-fun lt!70677 () (_ BitVec 32))

(assert (=> d!41915 (= lt!70678 (bvmul (bvxor lt!70677 (bvlshr lt!70677 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!41915 (= lt!70677 ((_ extract 31 0) (bvand (bvxor (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!41915 (and (bvsge (mask!7164 newMap!16) #b00000000000000000000000000000000) (let ((res!64278 (let ((h!2296 ((_ extract 31 0) (bvand (bvxor (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (bvlshr (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15689 (bvmul (bvxor h!2296 (bvlshr h!2296 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15689 (bvlshr x!15689 #b00000000000000000000000000001101)) (mask!7164 newMap!16)))))) (and (bvslt res!64278 (bvadd (mask!7164 newMap!16) #b00000000000000000000000000000001)) (bvsge res!64278 #b00000000000000000000000000000000))))))

(assert (=> d!41915 (= (toIndex!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (mask!7164 newMap!16)) (bvand (bvxor lt!70678 (bvlshr lt!70678 #b00000000000000000000000000001101)) (mask!7164 newMap!16)))))

(assert (=> d!40949 d!41915))

(assert (=> d!40949 d!40591))

(assert (=> bm!14719 d!41621))

(declare-fun b!135010 () Bool)

(declare-fun e!87927 () Option!179)

(declare-fun e!87928 () Option!179)

(assert (=> b!135010 (= e!87927 e!87928)))

(declare-fun c!25179 () Bool)

(assert (=> b!135010 (= c!25179 (and ((_ is Cons!1690) (toList!842 lt!69666)) (not (= (_1!1293 (h!2295 (toList!842 lt!69666))) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135009 () Bool)

(assert (=> b!135009 (= e!87927 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69666)))))))

(declare-fun c!25178 () Bool)

(declare-fun d!41917 () Bool)

(assert (=> d!41917 (= c!25178 (and ((_ is Cons!1690) (toList!842 lt!69666)) (= (_1!1293 (h!2295 (toList!842 lt!69666))) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!41917 (= (getValueByKey!173 (toList!842 lt!69666) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!87927)))

(declare-fun b!135012 () Bool)

(assert (=> b!135012 (= e!87928 None!177)))

(declare-fun b!135011 () Bool)

(assert (=> b!135011 (= e!87928 (getValueByKey!173 (t!6137 (toList!842 lt!69666)) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!41917 c!25178) b!135009))

(assert (= (and d!41917 (not c!25178)) b!135010))

(assert (= (and b!135010 c!25179) b!135011))

(assert (= (and b!135010 (not c!25179)) b!135012))

(declare-fun m!160889 () Bool)

(assert (=> b!135011 m!160889))

(assert (=> b!133241 d!41917))

(declare-fun b!135013 () Bool)

(declare-fun e!87931 () Bool)

(declare-fun call!14842 () Bool)

(assert (=> b!135013 (= e!87931 call!14842)))

(declare-fun b!135014 () Bool)

(declare-fun e!87929 () Bool)

(assert (=> b!135014 (= e!87931 e!87929)))

(declare-fun lt!70680 () (_ BitVec 64))

(assert (=> b!135014 (= lt!70680 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!70679 () Unit!4141)

(assert (=> b!135014 (= lt!70679 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) lt!70680 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!135014 (arrayContainsKey!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) lt!70680 #b00000000000000000000000000000000)))

(declare-fun lt!70681 () Unit!4141)

(assert (=> b!135014 (= lt!70681 lt!70679)))

(declare-fun res!64890 () Bool)

(assert (=> b!135014 (= res!64890 (= (seekEntryOrOpen!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (mask!7164 newMap!16)) (Found!269 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135014 (=> (not res!64890) (not e!87929))))

(declare-fun b!135015 () Bool)

(declare-fun e!87930 () Bool)

(assert (=> b!135015 (= e!87930 e!87931)))

(declare-fun c!25180 () Bool)

(assert (=> b!135015 (= c!25180 (validKeyInArray!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135016 () Bool)

(assert (=> b!135016 (= e!87929 call!14842)))

(declare-fun d!41919 () Bool)

(declare-fun res!64891 () Bool)

(assert (=> d!41919 (=> res!64891 e!87930)))

(assert (=> d!41919 (= res!64891 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(assert (=> d!41919 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (mask!7164 newMap!16)) e!87930)))

(declare-fun bm!14839 () Bool)

(assert (=> bm!14839 (= call!14842 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (mask!7164 newMap!16)))))

(assert (= (and d!41919 (not res!64891)) b!135015))

(assert (= (and b!135015 c!25180) b!135014))

(assert (= (and b!135015 (not c!25180)) b!135013))

(assert (= (and b!135014 res!64890) b!135016))

(assert (= (or b!135016 b!135013) bm!14839))

(declare-fun m!160891 () Bool)

(assert (=> b!135014 m!160891))

(declare-fun m!160893 () Bool)

(assert (=> b!135014 m!160893))

(declare-fun m!160895 () Bool)

(assert (=> b!135014 m!160895))

(assert (=> b!135014 m!160891))

(declare-fun m!160897 () Bool)

(assert (=> b!135014 m!160897))

(assert (=> b!135015 m!160891))

(assert (=> b!135015 m!160891))

(declare-fun m!160899 () Bool)

(assert (=> b!135015 m!160899))

(declare-fun m!160901 () Bool)

(assert (=> bm!14839 m!160901))

(assert (=> bm!14705 d!41919))

(declare-fun b!135018 () Bool)

(declare-fun e!87932 () Option!179)

(declare-fun e!87933 () Option!179)

(assert (=> b!135018 (= e!87932 e!87933)))

(declare-fun c!25182 () Bool)

(assert (=> b!135018 (= c!25182 (and ((_ is Cons!1690) (toList!842 lt!69883)) (not (= (_1!1293 (h!2295 (toList!842 lt!69883))) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))))

(declare-fun b!135017 () Bool)

(assert (=> b!135017 (= e!87932 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69883)))))))

(declare-fun c!25181 () Bool)

(declare-fun d!41921 () Bool)

(assert (=> d!41921 (= c!25181 (and ((_ is Cons!1690) (toList!842 lt!69883)) (= (_1!1293 (h!2295 (toList!842 lt!69883))) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(assert (=> d!41921 (= (getValueByKey!173 (toList!842 lt!69883) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) e!87932)))

(declare-fun b!135020 () Bool)

(assert (=> b!135020 (= e!87933 None!177)))

(declare-fun b!135019 () Bool)

(assert (=> b!135019 (= e!87933 (getValueByKey!173 (t!6137 (toList!842 lt!69883)) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (= (and d!41921 c!25181) b!135017))

(assert (= (and d!41921 (not c!25181)) b!135018))

(assert (= (and b!135018 c!25182) b!135019))

(assert (= (and b!135018 (not c!25182)) b!135020))

(declare-fun m!160903 () Bool)

(assert (=> b!135019 m!160903))

(assert (=> b!133569 d!41921))

(assert (=> d!40959 d!40957))

(declare-fun d!41923 () Bool)

(assert (=> d!41923 (= (getValueByKey!173 lt!69650 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!41923 true))

(declare-fun _$22!487 () Unit!4141)

(assert (=> d!41923 (= (choose!833 lt!69650 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) _$22!487)))

(declare-fun bs!5665 () Bool)

(assert (= bs!5665 d!41923))

(assert (=> bs!5665 m!157193))

(assert (=> d!40959 d!41923))

(declare-fun d!41925 () Bool)

(declare-fun res!64892 () Bool)

(declare-fun e!87934 () Bool)

(assert (=> d!41925 (=> res!64892 e!87934)))

(assert (=> d!41925 (= res!64892 (or ((_ is Nil!1691) lt!69650) ((_ is Nil!1691) (t!6137 lt!69650))))))

(assert (=> d!41925 (= (isStrictlySorted!309 lt!69650) e!87934)))

(declare-fun b!135021 () Bool)

(declare-fun e!87935 () Bool)

(assert (=> b!135021 (= e!87934 e!87935)))

(declare-fun res!64893 () Bool)

(assert (=> b!135021 (=> (not res!64893) (not e!87935))))

(assert (=> b!135021 (= res!64893 (bvslt (_1!1293 (h!2295 lt!69650)) (_1!1293 (h!2295 (t!6137 lt!69650)))))))

(declare-fun b!135022 () Bool)

(assert (=> b!135022 (= e!87935 (isStrictlySorted!309 (t!6137 lt!69650)))))

(assert (= (and d!41925 (not res!64892)) b!135021))

(assert (= (and b!135021 res!64893) b!135022))

(declare-fun m!160905 () Bool)

(assert (=> b!135022 m!160905))

(assert (=> d!40959 d!41925))

(declare-fun d!41927 () Bool)

(declare-fun c!25183 () Bool)

(assert (=> d!41927 (= c!25183 ((_ is Nil!1691) (toList!842 lt!69625)))))

(declare-fun e!87936 () (InoxSet tuple2!2564))

(assert (=> d!41927 (= (content!134 (toList!842 lt!69625)) e!87936)))

(declare-fun b!135023 () Bool)

(assert (=> b!135023 (= e!87936 ((as const (Array tuple2!2564 Bool)) false))))

(declare-fun b!135024 () Bool)

(assert (=> b!135024 (= e!87936 ((_ map or) (store ((as const (Array tuple2!2564 Bool)) false) (h!2295 (toList!842 lt!69625)) true) (content!134 (t!6137 (toList!842 lt!69625)))))))

(assert (= (and d!41927 c!25183) b!135023))

(assert (= (and d!41927 (not c!25183)) b!135024))

(declare-fun m!160907 () Bool)

(assert (=> b!135024 m!160907))

(declare-fun m!160909 () Bool)

(assert (=> b!135024 m!160909))

(assert (=> d!40937 d!41927))

(assert (=> d!40785 d!40783))

(declare-fun d!41929 () Bool)

(assert (=> d!41929 (= (getValueByKey!173 lt!69640 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!41929 true))

(declare-fun _$22!488 () Unit!4141)

(assert (=> d!41929 (= (choose!833 lt!69640 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) _$22!488)))

(declare-fun bs!5666 () Bool)

(assert (= bs!5666 d!41929))

(assert (=> bs!5666 m!157167))

(assert (=> d!40785 d!41929))

(declare-fun d!41931 () Bool)

(declare-fun res!64894 () Bool)

(declare-fun e!87937 () Bool)

(assert (=> d!41931 (=> res!64894 e!87937)))

(assert (=> d!41931 (= res!64894 (or ((_ is Nil!1691) lt!69640) ((_ is Nil!1691) (t!6137 lt!69640))))))

(assert (=> d!41931 (= (isStrictlySorted!309 lt!69640) e!87937)))

(declare-fun b!135025 () Bool)

(declare-fun e!87938 () Bool)

(assert (=> b!135025 (= e!87937 e!87938)))

(declare-fun res!64895 () Bool)

(assert (=> b!135025 (=> (not res!64895) (not e!87938))))

(assert (=> b!135025 (= res!64895 (bvslt (_1!1293 (h!2295 lt!69640)) (_1!1293 (h!2295 (t!6137 lt!69640)))))))

(declare-fun b!135026 () Bool)

(assert (=> b!135026 (= e!87938 (isStrictlySorted!309 (t!6137 lt!69640)))))

(assert (= (and d!41931 (not res!64894)) b!135025))

(assert (= (and b!135025 res!64895) b!135026))

(declare-fun m!160911 () Bool)

(assert (=> b!135026 m!160911))

(assert (=> d!40785 d!41931))

(declare-fun d!41933 () Bool)

(assert (=> d!41933 (= (isEmpty!416 (getValueByKey!173 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!178) (getValueByKey!173 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!40641 d!41933))

(assert (=> d!41009 d!41007))

(declare-fun d!41935 () Bool)

(assert (=> d!41935 (= (getValueByKey!173 lt!69626 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!41935 true))

(declare-fun _$22!489 () Unit!4141)

(assert (=> d!41935 (= (choose!833 lt!69626 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) _$22!489)))

(declare-fun bs!5667 () Bool)

(assert (= bs!5667 d!41935))

(assert (=> bs!5667 m!157103))

(assert (=> d!41009 d!41935))

(declare-fun d!41937 () Bool)

(declare-fun res!64896 () Bool)

(declare-fun e!87939 () Bool)

(assert (=> d!41937 (=> res!64896 e!87939)))

(assert (=> d!41937 (= res!64896 (or ((_ is Nil!1691) lt!69626) ((_ is Nil!1691) (t!6137 lt!69626))))))

(assert (=> d!41937 (= (isStrictlySorted!309 lt!69626) e!87939)))

(declare-fun b!135027 () Bool)

(declare-fun e!87940 () Bool)

(assert (=> b!135027 (= e!87939 e!87940)))

(declare-fun res!64897 () Bool)

(assert (=> b!135027 (=> (not res!64897) (not e!87940))))

(assert (=> b!135027 (= res!64897 (bvslt (_1!1293 (h!2295 lt!69626)) (_1!1293 (h!2295 (t!6137 lt!69626)))))))

(declare-fun b!135028 () Bool)

(assert (=> b!135028 (= e!87940 (isStrictlySorted!309 (t!6137 lt!69626)))))

(assert (= (and d!41937 (not res!64896)) b!135027))

(assert (= (and b!135027 res!64897) b!135028))

(declare-fun m!160913 () Bool)

(assert (=> b!135028 m!160913))

(assert (=> d!41009 d!41937))

(declare-fun b!135030 () Bool)

(declare-fun e!87941 () Option!179)

(declare-fun e!87942 () Option!179)

(assert (=> b!135030 (= e!87941 e!87942)))

(declare-fun c!25185 () Bool)

(assert (=> b!135030 (= c!25185 (and ((_ is Cons!1690) (t!6137 lt!69374)) (not (= (_1!1293 (h!2295 (t!6137 lt!69374))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!135029 () Bool)

(assert (=> b!135029 (= e!87941 (Some!178 (_2!1293 (h!2295 (t!6137 lt!69374)))))))

(declare-fun c!25184 () Bool)

(declare-fun d!41939 () Bool)

(assert (=> d!41939 (= c!25184 (and ((_ is Cons!1690) (t!6137 lt!69374)) (= (_1!1293 (h!2295 (t!6137 lt!69374))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!41939 (= (getValueByKey!173 (t!6137 lt!69374) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!87941)))

(declare-fun b!135032 () Bool)

(assert (=> b!135032 (= e!87942 None!177)))

(declare-fun b!135031 () Bool)

(assert (=> b!135031 (= e!87942 (getValueByKey!173 (t!6137 (t!6137 lt!69374)) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!41939 c!25184) b!135029))

(assert (= (and d!41939 (not c!25184)) b!135030))

(assert (= (and b!135030 c!25185) b!135031))

(assert (= (and b!135030 (not c!25185)) b!135032))

(declare-fun m!160915 () Bool)

(assert (=> b!135031 m!160915))

(assert (=> b!133316 d!41939))

(assert (=> b!133473 d!41833))

(declare-fun e!87945 () Bool)

(declare-fun b!135033 () Bool)

(assert (=> b!135033 (= e!87945 (contains!885 (ite c!24840 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))) (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!135034 () Bool)

(declare-fun e!87943 () Bool)

(declare-fun call!14843 () Bool)

(assert (=> b!135034 (= e!87943 call!14843)))

(declare-fun b!135035 () Bool)

(declare-fun e!87946 () Bool)

(declare-fun e!87944 () Bool)

(assert (=> b!135035 (= e!87946 e!87944)))

(declare-fun res!64899 () Bool)

(assert (=> b!135035 (=> (not res!64899) (not e!87944))))

(assert (=> b!135035 (= res!64899 (not e!87945))))

(declare-fun res!64900 () Bool)

(assert (=> b!135035 (=> (not res!64900) (not e!87945))))

(assert (=> b!135035 (= res!64900 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun c!25186 () Bool)

(declare-fun bm!14840 () Bool)

(assert (=> bm!14840 (= call!14843 (arrayNoDuplicates!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!25186 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24840 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))) (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)))) (ite c!24840 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))) (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))))))))

(declare-fun d!41941 () Bool)

(declare-fun res!64898 () Bool)

(assert (=> d!41941 (=> res!64898 e!87946)))

(assert (=> d!41941 (= res!64898 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!41941 (= (arrayNoDuplicates!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!24840 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))) (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)))) e!87946)))

(declare-fun b!135036 () Bool)

(assert (=> b!135036 (= e!87944 e!87943)))

(assert (=> b!135036 (= c!25186 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!135037 () Bool)

(assert (=> b!135037 (= e!87943 call!14843)))

(assert (= (and d!41941 (not res!64898)) b!135035))

(assert (= (and b!135035 res!64900) b!135033))

(assert (= (and b!135035 res!64899) b!135036))

(assert (= (and b!135036 c!25186) b!135034))

(assert (= (and b!135036 (not c!25186)) b!135037))

(assert (= (or b!135034 b!135037) bm!14840))

(declare-fun m!160917 () Bool)

(assert (=> b!135033 m!160917))

(assert (=> b!135033 m!160917))

(declare-fun m!160919 () Bool)

(assert (=> b!135033 m!160919))

(assert (=> b!135035 m!160917))

(assert (=> b!135035 m!160917))

(declare-fun m!160921 () Bool)

(assert (=> b!135035 m!160921))

(assert (=> bm!14840 m!160917))

(declare-fun m!160923 () Bool)

(assert (=> bm!14840 m!160923))

(assert (=> b!135036 m!160917))

(assert (=> b!135036 m!160917))

(assert (=> b!135036 m!160921))

(assert (=> bm!14766 d!41941))

(assert (=> b!133266 d!41313))

(declare-fun d!41943 () Bool)

(assert (=> d!41943 (= (get!1492 (getValueByKey!173 (toList!842 lt!69572) lt!69578)) (v!3203 (getValueByKey!173 (toList!842 lt!69572) lt!69578)))))

(assert (=> d!41025 d!41943))

(declare-fun b!135039 () Bool)

(declare-fun e!87947 () Option!179)

(declare-fun e!87948 () Option!179)

(assert (=> b!135039 (= e!87947 e!87948)))

(declare-fun c!25188 () Bool)

(assert (=> b!135039 (= c!25188 (and ((_ is Cons!1690) (toList!842 lt!69572)) (not (= (_1!1293 (h!2295 (toList!842 lt!69572))) lt!69578))))))

(declare-fun b!135038 () Bool)

(assert (=> b!135038 (= e!87947 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69572)))))))

(declare-fun d!41945 () Bool)

(declare-fun c!25187 () Bool)

(assert (=> d!41945 (= c!25187 (and ((_ is Cons!1690) (toList!842 lt!69572)) (= (_1!1293 (h!2295 (toList!842 lt!69572))) lt!69578)))))

(assert (=> d!41945 (= (getValueByKey!173 (toList!842 lt!69572) lt!69578) e!87947)))

(declare-fun b!135041 () Bool)

(assert (=> b!135041 (= e!87948 None!177)))

(declare-fun b!135040 () Bool)

(assert (=> b!135040 (= e!87948 (getValueByKey!173 (t!6137 (toList!842 lt!69572)) lt!69578))))

(assert (= (and d!41945 c!25187) b!135038))

(assert (= (and d!41945 (not c!25187)) b!135039))

(assert (= (and b!135039 c!25188) b!135040))

(assert (= (and b!135039 (not c!25188)) b!135041))

(declare-fun m!160925 () Bool)

(assert (=> b!135040 m!160925))

(assert (=> d!41025 d!41945))

(declare-fun d!41947 () Bool)

(declare-fun c!25189 () Bool)

(assert (=> d!41947 (= c!25189 ((_ is Nil!1691) (toList!842 lt!69545)))))

(declare-fun e!87949 () (InoxSet tuple2!2564))

(assert (=> d!41947 (= (content!134 (toList!842 lt!69545)) e!87949)))

(declare-fun b!135042 () Bool)

(assert (=> b!135042 (= e!87949 ((as const (Array tuple2!2564 Bool)) false))))

(declare-fun b!135043 () Bool)

(assert (=> b!135043 (= e!87949 ((_ map or) (store ((as const (Array tuple2!2564 Bool)) false) (h!2295 (toList!842 lt!69545)) true) (content!134 (t!6137 (toList!842 lt!69545)))))))

(assert (= (and d!41947 c!25189) b!135042))

(assert (= (and d!41947 (not c!25189)) b!135043))

(declare-fun m!160927 () Bool)

(assert (=> b!135043 m!160927))

(declare-fun m!160929 () Bool)

(assert (=> b!135043 m!160929))

(assert (=> d!40645 d!41947))

(declare-fun d!41949 () Bool)

(declare-fun e!87951 () Bool)

(assert (=> d!41949 e!87951))

(declare-fun res!64901 () Bool)

(assert (=> d!41949 (=> res!64901 e!87951)))

(declare-fun lt!70682 () Bool)

(assert (=> d!41949 (= res!64901 (not lt!70682))))

(declare-fun lt!70683 () Bool)

(assert (=> d!41949 (= lt!70682 lt!70683)))

(declare-fun lt!70684 () Unit!4141)

(declare-fun e!87950 () Unit!4141)

(assert (=> d!41949 (= lt!70684 e!87950)))

(declare-fun c!25190 () Bool)

(assert (=> d!41949 (= c!25190 lt!70683)))

(assert (=> d!41949 (= lt!70683 (containsKey!176 (toList!842 lt!69872) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> d!41949 (= (contains!884 lt!69872 (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!70682)))

(declare-fun b!135044 () Bool)

(declare-fun lt!70685 () Unit!4141)

(assert (=> b!135044 (= e!87950 lt!70685)))

(assert (=> b!135044 (= lt!70685 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69872) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (=> b!135044 (isDefined!125 (getValueByKey!173 (toList!842 lt!69872) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!135045 () Bool)

(declare-fun Unit!4243 () Unit!4141)

(assert (=> b!135045 (= e!87950 Unit!4243)))

(declare-fun b!135046 () Bool)

(assert (=> b!135046 (= e!87951 (isDefined!125 (getValueByKey!173 (toList!842 lt!69872) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (= (and d!41949 c!25190) b!135044))

(assert (= (and d!41949 (not c!25190)) b!135045))

(assert (= (and d!41949 (not res!64901)) b!135046))

(declare-fun m!160931 () Bool)

(assert (=> d!41949 m!160931))

(declare-fun m!160933 () Bool)

(assert (=> b!135044 m!160933))

(assert (=> b!135044 m!157841))

(assert (=> b!135044 m!157841))

(declare-fun m!160935 () Bool)

(assert (=> b!135044 m!160935))

(assert (=> b!135046 m!157841))

(assert (=> b!135046 m!157841))

(assert (=> b!135046 m!160935))

(assert (=> d!40733 d!41949))

(declare-fun b!135048 () Bool)

(declare-fun e!87952 () Option!179)

(declare-fun e!87953 () Option!179)

(assert (=> b!135048 (= e!87952 e!87953)))

(declare-fun c!25192 () Bool)

(assert (=> b!135048 (= c!25192 (and ((_ is Cons!1690) lt!69873) (not (= (_1!1293 (h!2295 lt!69873)) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))))

(declare-fun b!135047 () Bool)

(assert (=> b!135047 (= e!87952 (Some!178 (_2!1293 (h!2295 lt!69873))))))

(declare-fun d!41951 () Bool)

(declare-fun c!25191 () Bool)

(assert (=> d!41951 (= c!25191 (and ((_ is Cons!1690) lt!69873) (= (_1!1293 (h!2295 lt!69873)) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (=> d!41951 (= (getValueByKey!173 lt!69873 (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) e!87952)))

(declare-fun b!135050 () Bool)

(assert (=> b!135050 (= e!87953 None!177)))

(declare-fun b!135049 () Bool)

(assert (=> b!135049 (= e!87953 (getValueByKey!173 (t!6137 lt!69873) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (= (and d!41951 c!25191) b!135047))

(assert (= (and d!41951 (not c!25191)) b!135048))

(assert (= (and b!135048 c!25192) b!135049))

(assert (= (and b!135048 (not c!25192)) b!135050))

(declare-fun m!160937 () Bool)

(assert (=> b!135049 m!160937))

(assert (=> d!40733 d!41951))

(declare-fun d!41953 () Bool)

(assert (=> d!41953 (= (getValueByKey!173 lt!69873 (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) (Some!178 (_2!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun lt!70686 () Unit!4141)

(assert (=> d!41953 (= lt!70686 (choose!833 lt!69873 (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun e!87954 () Bool)

(assert (=> d!41953 e!87954))

(declare-fun res!64902 () Bool)

(assert (=> d!41953 (=> (not res!64902) (not e!87954))))

(assert (=> d!41953 (= res!64902 (isStrictlySorted!309 lt!69873))))

(assert (=> d!41953 (= (lemmaContainsTupThenGetReturnValue!88 lt!69873 (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!70686)))

(declare-fun b!135051 () Bool)

(declare-fun res!64903 () Bool)

(assert (=> b!135051 (=> (not res!64903) (not e!87954))))

(assert (=> b!135051 (= res!64903 (containsKey!176 lt!69873 (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!135052 () Bool)

(assert (=> b!135052 (= e!87954 (contains!886 lt!69873 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (= (and d!41953 res!64902) b!135051))

(assert (= (and b!135051 res!64903) b!135052))

(assert (=> d!41953 m!157835))

(declare-fun m!160939 () Bool)

(assert (=> d!41953 m!160939))

(declare-fun m!160941 () Bool)

(assert (=> d!41953 m!160941))

(declare-fun m!160943 () Bool)

(assert (=> b!135051 m!160943))

(declare-fun m!160945 () Bool)

(assert (=> b!135052 m!160945))

(assert (=> d!40733 d!41953))

(declare-fun b!135053 () Bool)

(declare-fun res!64904 () Bool)

(declare-fun e!87959 () Bool)

(assert (=> b!135053 (=> (not res!64904) (not e!87959))))

(declare-fun lt!70687 () List!1694)

(assert (=> b!135053 (= res!64904 (containsKey!176 lt!70687 (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun b!135054 () Bool)

(declare-fun e!87957 () List!1694)

(declare-fun e!87958 () List!1694)

(assert (=> b!135054 (= e!87957 e!87958)))

(declare-fun c!25196 () Bool)

(assert (=> b!135054 (= c!25196 (and ((_ is Cons!1690) (toList!842 lt!69513)) (= (_1!1293 (h!2295 (toList!842 lt!69513))) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun bm!14841 () Bool)

(declare-fun call!14845 () List!1694)

(declare-fun call!14844 () List!1694)

(assert (=> bm!14841 (= call!14845 call!14844)))

(declare-fun b!135055 () Bool)

(declare-fun e!87955 () List!1694)

(assert (=> b!135055 (= e!87955 call!14845)))

(declare-fun c!25195 () Bool)

(declare-fun b!135056 () Bool)

(assert (=> b!135056 (= c!25195 (and ((_ is Cons!1690) (toList!842 lt!69513)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69513))) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (=> b!135056 (= e!87958 e!87955)))

(declare-fun b!135057 () Bool)

(assert (=> b!135057 (= e!87959 (contains!886 lt!70687 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(declare-fun b!135058 () Bool)

(assert (=> b!135058 (= e!87958 call!14844)))

(declare-fun d!41955 () Bool)

(assert (=> d!41955 e!87959))

(declare-fun res!64905 () Bool)

(assert (=> d!41955 (=> (not res!64905) (not e!87959))))

(assert (=> d!41955 (= res!64905 (isStrictlySorted!309 lt!70687))))

(assert (=> d!41955 (= lt!70687 e!87957)))

(declare-fun c!25194 () Bool)

(assert (=> d!41955 (= c!25194 (and ((_ is Cons!1690) (toList!842 lt!69513)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69513))) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (=> d!41955 (isStrictlySorted!309 (toList!842 lt!69513))))

(assert (=> d!41955 (= (insertStrictlySorted!91 (toList!842 lt!69513) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!70687)))

(declare-fun e!87956 () List!1694)

(declare-fun b!135059 () Bool)

(assert (=> b!135059 (= e!87956 (ite c!25196 (t!6137 (toList!842 lt!69513)) (ite c!25195 (Cons!1690 (h!2295 (toList!842 lt!69513)) (t!6137 (toList!842 lt!69513))) Nil!1691)))))

(declare-fun b!135060 () Bool)

(declare-fun call!14846 () List!1694)

(assert (=> b!135060 (= e!87957 call!14846)))

(declare-fun b!135061 () Bool)

(assert (=> b!135061 (= e!87955 call!14845)))

(declare-fun b!135062 () Bool)

(assert (=> b!135062 (= e!87956 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69513)) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(declare-fun bm!14842 () Bool)

(assert (=> bm!14842 (= call!14844 call!14846)))

(declare-fun bm!14843 () Bool)

(assert (=> bm!14843 (= call!14846 ($colon$colon!91 e!87956 (ite c!25194 (h!2295 (toList!842 lt!69513)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))))

(declare-fun c!25193 () Bool)

(assert (=> bm!14843 (= c!25193 c!25194)))

(assert (= (and d!41955 c!25194) b!135060))

(assert (= (and d!41955 (not c!25194)) b!135054))

(assert (= (and b!135054 c!25196) b!135058))

(assert (= (and b!135054 (not c!25196)) b!135056))

(assert (= (and b!135056 c!25195) b!135061))

(assert (= (and b!135056 (not c!25195)) b!135055))

(assert (= (or b!135061 b!135055) bm!14841))

(assert (= (or b!135058 bm!14841) bm!14842))

(assert (= (or b!135060 bm!14842) bm!14843))

(assert (= (and bm!14843 c!25193) b!135062))

(assert (= (and bm!14843 (not c!25193)) b!135059))

(assert (= (and d!41955 res!64905) b!135053))

(assert (= (and b!135053 res!64904) b!135057))

(declare-fun m!160947 () Bool)

(assert (=> b!135057 m!160947))

(declare-fun m!160949 () Bool)

(assert (=> b!135062 m!160949))

(declare-fun m!160951 () Bool)

(assert (=> bm!14843 m!160951))

(declare-fun m!160953 () Bool)

(assert (=> b!135053 m!160953))

(declare-fun m!160955 () Bool)

(assert (=> d!41955 m!160955))

(declare-fun m!160957 () Bool)

(assert (=> d!41955 m!160957))

(assert (=> d!40733 d!41955))

(assert (=> b!134005 d!41183))

(assert (=> bm!14748 d!41745))

(declare-fun d!41957 () Bool)

(assert (=> d!41957 (= (isEmpty!415 lt!70012) (isEmpty!417 (toList!842 lt!70012)))))

(declare-fun bs!5668 () Bool)

(assert (= bs!5668 d!41957))

(declare-fun m!160959 () Bool)

(assert (=> bs!5668 m!160959))

(assert (=> b!133812 d!41957))

(declare-fun d!41959 () Bool)

(assert (=> d!41959 (= (get!1491 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!133841 d!41959))

(declare-fun d!41961 () Bool)

(declare-fun res!64906 () Bool)

(declare-fun e!87960 () Bool)

(assert (=> d!41961 (=> res!64906 e!87960)))

(assert (=> d!41961 (= res!64906 (and ((_ is Cons!1690) (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (= (_1!1293 (h!2295 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!41961 (= (containsKey!176 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!87960)))

(declare-fun b!135063 () Bool)

(declare-fun e!87961 () Bool)

(assert (=> b!135063 (= e!87960 e!87961)))

(declare-fun res!64907 () Bool)

(assert (=> b!135063 (=> (not res!64907) (not e!87961))))

(assert (=> b!135063 (= res!64907 (and (or (not ((_ is Cons!1690) (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))) (bvsle (_1!1293 (h!2295 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1690) (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!135064 () Bool)

(assert (=> b!135064 (= e!87961 (containsKey!176 (t!6137 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!41961 (not res!64906)) b!135063))

(assert (= (and b!135063 res!64907) b!135064))

(assert (=> b!135064 m!156395))

(declare-fun m!160961 () Bool)

(assert (=> b!135064 m!160961))

(assert (=> b!133541 d!41961))

(declare-fun d!41963 () Bool)

(assert (=> d!41963 (isDefined!125 (getValueByKey!173 (toList!842 lt!69639) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun lt!70688 () Unit!4141)

(assert (=> d!41963 (= lt!70688 (choose!831 (toList!842 lt!69639) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun e!87962 () Bool)

(assert (=> d!41963 e!87962))

(declare-fun res!64908 () Bool)

(assert (=> d!41963 (=> (not res!64908) (not e!87962))))

(assert (=> d!41963 (= res!64908 (isStrictlySorted!309 (toList!842 lt!69639)))))

(assert (=> d!41963 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69639) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70688)))

(declare-fun b!135065 () Bool)

(assert (=> b!135065 (= e!87962 (containsKey!176 (toList!842 lt!69639) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41963 res!64908) b!135065))

(assert (=> d!41963 m!157173))

(assert (=> d!41963 m!157173))

(assert (=> d!41963 m!157931))

(declare-fun m!160963 () Bool)

(assert (=> d!41963 m!160963))

(declare-fun m!160965 () Bool)

(assert (=> d!41963 m!160965))

(assert (=> b!135065 m!157927))

(assert (=> b!133619 d!41963))

(declare-fun d!41965 () Bool)

(assert (=> d!41965 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69639) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69639) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun bs!5669 () Bool)

(assert (= bs!5669 d!41965))

(assert (=> bs!5669 m!157173))

(declare-fun m!160967 () Bool)

(assert (=> bs!5669 m!160967))

(assert (=> b!133619 d!41965))

(assert (=> b!133619 d!40841))

(declare-fun d!41967 () Bool)

(declare-fun res!64909 () Bool)

(declare-fun e!87963 () Bool)

(assert (=> d!41967 (=> res!64909 e!87963)))

(assert (=> d!41967 (= res!64909 (and ((_ is Cons!1690) (toList!842 lt!69341)) (= (_1!1293 (h!2295 (toList!842 lt!69341))) lt!69343)))))

(assert (=> d!41967 (= (containsKey!176 (toList!842 lt!69341) lt!69343) e!87963)))

(declare-fun b!135066 () Bool)

(declare-fun e!87964 () Bool)

(assert (=> b!135066 (= e!87963 e!87964)))

(declare-fun res!64910 () Bool)

(assert (=> b!135066 (=> (not res!64910) (not e!87964))))

(assert (=> b!135066 (= res!64910 (and (or (not ((_ is Cons!1690) (toList!842 lt!69341))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69341))) lt!69343)) ((_ is Cons!1690) (toList!842 lt!69341)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69341))) lt!69343)))))

(declare-fun b!135067 () Bool)

(assert (=> b!135067 (= e!87964 (containsKey!176 (t!6137 (toList!842 lt!69341)) lt!69343))))

(assert (= (and d!41967 (not res!64909)) b!135066))

(assert (= (and b!135066 res!64910) b!135067))

(declare-fun m!160969 () Bool)

(assert (=> b!135067 m!160969))

(assert (=> d!40747 d!41967))

(declare-fun b!135069 () Bool)

(declare-fun e!87965 () Option!179)

(declare-fun e!87966 () Option!179)

(assert (=> b!135069 (= e!87965 e!87966)))

(declare-fun c!25198 () Bool)

(assert (=> b!135069 (= c!25198 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69344))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344)))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!135068 () Bool)

(assert (=> b!135068 (= e!87965 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 lt!69344))))))))

(declare-fun d!41969 () Bool)

(declare-fun c!25197 () Bool)

(assert (=> d!41969 (= c!25197 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69344))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!41969 (= (getValueByKey!173 (t!6137 (toList!842 lt!69344)) #b1000000000000000000000000000000000000000000000000000000000000000) e!87965)))

(declare-fun b!135071 () Bool)

(assert (=> b!135071 (= e!87966 None!177)))

(declare-fun b!135070 () Bool)

(assert (=> b!135070 (= e!87966 (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69344))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!41969 c!25197) b!135068))

(assert (= (and d!41969 (not c!25197)) b!135069))

(assert (= (and b!135069 c!25198) b!135070))

(assert (= (and b!135069 (not c!25198)) b!135071))

(declare-fun m!160971 () Bool)

(assert (=> b!135070 m!160971))

(assert (=> b!133361 d!41969))

(assert (=> b!133638 d!40803))

(declare-fun b!135073 () Bool)

(declare-fun e!87967 () Option!179)

(declare-fun e!87968 () Option!179)

(assert (=> b!135073 (= e!87967 e!87968)))

(declare-fun c!25200 () Bool)

(assert (=> b!135073 (= c!25200 (and ((_ is Cons!1690) (t!6137 lt!69650)) (not (= (_1!1293 (h!2295 (t!6137 lt!69650))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!135072 () Bool)

(assert (=> b!135072 (= e!87967 (Some!178 (_2!1293 (h!2295 (t!6137 lt!69650)))))))

(declare-fun d!41971 () Bool)

(declare-fun c!25199 () Bool)

(assert (=> d!41971 (= c!25199 (and ((_ is Cons!1690) (t!6137 lt!69650)) (= (_1!1293 (h!2295 (t!6137 lt!69650))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41971 (= (getValueByKey!173 (t!6137 lt!69650) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87967)))

(declare-fun b!135075 () Bool)

(assert (=> b!135075 (= e!87968 None!177)))

(declare-fun b!135074 () Bool)

(assert (=> b!135074 (= e!87968 (getValueByKey!173 (t!6137 (t!6137 lt!69650)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41971 c!25199) b!135072))

(assert (= (and d!41971 (not c!25199)) b!135073))

(assert (= (and b!135073 c!25200) b!135074))

(assert (= (and b!135073 (not c!25200)) b!135075))

(declare-fun m!160973 () Bool)

(assert (=> b!135074 m!160973))

(assert (=> b!133920 d!41971))

(declare-fun d!41973 () Bool)

(declare-fun e!87970 () Bool)

(assert (=> d!41973 e!87970))

(declare-fun res!64911 () Bool)

(assert (=> d!41973 (=> res!64911 e!87970)))

(declare-fun lt!70689 () Bool)

(assert (=> d!41973 (= res!64911 (not lt!70689))))

(declare-fun lt!70690 () Bool)

(assert (=> d!41973 (= lt!70689 lt!70690)))

(declare-fun lt!70691 () Unit!4141)

(declare-fun e!87969 () Unit!4141)

(assert (=> d!41973 (= lt!70691 e!87969)))

(declare-fun c!25201 () Bool)

(assert (=> d!41973 (= c!25201 lt!70690)))

(assert (=> d!41973 (= lt!70690 (containsKey!176 (toList!842 lt!70174) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!41973 (= (contains!884 lt!70174 (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) lt!70689)))

(declare-fun b!135076 () Bool)

(declare-fun lt!70692 () Unit!4141)

(assert (=> b!135076 (= e!87969 lt!70692)))

(assert (=> b!135076 (= lt!70692 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70174) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> b!135076 (isDefined!125 (getValueByKey!173 (toList!842 lt!70174) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135077 () Bool)

(declare-fun Unit!4244 () Unit!4141)

(assert (=> b!135077 (= e!87969 Unit!4244)))

(declare-fun b!135078 () Bool)

(assert (=> b!135078 (= e!87970 (isDefined!125 (getValueByKey!173 (toList!842 lt!70174) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (= (and d!41973 c!25201) b!135076))

(assert (= (and d!41973 (not c!25201)) b!135077))

(assert (= (and d!41973 (not res!64911)) b!135078))

(declare-fun m!160975 () Bool)

(assert (=> d!41973 m!160975))

(declare-fun m!160977 () Bool)

(assert (=> b!135076 m!160977))

(assert (=> b!135076 m!158835))

(assert (=> b!135076 m!158835))

(declare-fun m!160979 () Bool)

(assert (=> b!135076 m!160979))

(assert (=> b!135078 m!158835))

(assert (=> b!135078 m!158835))

(assert (=> b!135078 m!160979))

(assert (=> d!41069 d!41973))

(declare-fun b!135080 () Bool)

(declare-fun e!87971 () Option!179)

(declare-fun e!87972 () Option!179)

(assert (=> b!135080 (= e!87971 e!87972)))

(declare-fun c!25203 () Bool)

(assert (=> b!135080 (= c!25203 (and ((_ is Cons!1690) lt!70175) (not (= (_1!1293 (h!2295 lt!70175)) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))))

(declare-fun b!135079 () Bool)

(assert (=> b!135079 (= e!87971 (Some!178 (_2!1293 (h!2295 lt!70175))))))

(declare-fun d!41975 () Bool)

(declare-fun c!25202 () Bool)

(assert (=> d!41975 (= c!25202 (and ((_ is Cons!1690) lt!70175) (= (_1!1293 (h!2295 lt!70175)) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (=> d!41975 (= (getValueByKey!173 lt!70175 (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) e!87971)))

(declare-fun b!135082 () Bool)

(assert (=> b!135082 (= e!87972 None!177)))

(declare-fun b!135081 () Bool)

(assert (=> b!135081 (= e!87972 (getValueByKey!173 (t!6137 lt!70175) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (= (and d!41975 c!25202) b!135079))

(assert (= (and d!41975 (not c!25202)) b!135080))

(assert (= (and b!135080 c!25203) b!135081))

(assert (= (and b!135080 (not c!25203)) b!135082))

(declare-fun m!160981 () Bool)

(assert (=> b!135081 m!160981))

(assert (=> d!41069 d!41975))

(declare-fun d!41977 () Bool)

(assert (=> d!41977 (= (getValueByKey!173 lt!70175 (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!70693 () Unit!4141)

(assert (=> d!41977 (= lt!70693 (choose!833 lt!70175 (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun e!87973 () Bool)

(assert (=> d!41977 e!87973))

(declare-fun res!64912 () Bool)

(assert (=> d!41977 (=> (not res!64912) (not e!87973))))

(assert (=> d!41977 (= res!64912 (isStrictlySorted!309 lt!70175))))

(assert (=> d!41977 (= (lemmaContainsTupThenGetReturnValue!88 lt!70175 (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) lt!70693)))

(declare-fun b!135083 () Bool)

(declare-fun res!64913 () Bool)

(assert (=> b!135083 (=> (not res!64913) (not e!87973))))

(assert (=> b!135083 (= res!64913 (containsKey!176 lt!70175 (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135084 () Bool)

(assert (=> b!135084 (= e!87973 (contains!886 lt!70175 (tuple2!2565 (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (= (and d!41977 res!64912) b!135083))

(assert (= (and b!135083 res!64913) b!135084))

(assert (=> d!41977 m!158829))

(declare-fun m!160983 () Bool)

(assert (=> d!41977 m!160983))

(declare-fun m!160985 () Bool)

(assert (=> d!41977 m!160985))

(declare-fun m!160987 () Bool)

(assert (=> b!135083 m!160987))

(declare-fun m!160989 () Bool)

(assert (=> b!135084 m!160989))

(assert (=> d!41069 d!41977))

(declare-fun b!135085 () Bool)

(declare-fun res!64914 () Bool)

(declare-fun e!87978 () Bool)

(assert (=> b!135085 (=> (not res!64914) (not e!87978))))

(declare-fun lt!70694 () List!1694)

(assert (=> b!135085 (= res!64914 (containsKey!176 lt!70694 (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135086 () Bool)

(declare-fun e!87976 () List!1694)

(declare-fun e!87977 () List!1694)

(assert (=> b!135086 (= e!87976 e!87977)))

(declare-fun c!25207 () Bool)

(assert (=> b!135086 (= c!25207 (and ((_ is Cons!1690) (toList!842 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652)))) (= (_1!1293 (h!2295 (toList!842 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652))))) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun bm!14844 () Bool)

(declare-fun call!14848 () List!1694)

(declare-fun call!14847 () List!1694)

(assert (=> bm!14844 (= call!14848 call!14847)))

(declare-fun b!135087 () Bool)

(declare-fun e!87974 () List!1694)

(assert (=> b!135087 (= e!87974 call!14848)))

(declare-fun c!25206 () Bool)

(declare-fun b!135088 () Bool)

(assert (=> b!135088 (= c!25206 (and ((_ is Cons!1690) (toList!842 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652)))) (bvsgt (_1!1293 (h!2295 (toList!842 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652))))) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (=> b!135088 (= e!87977 e!87974)))

(declare-fun b!135089 () Bool)

(assert (=> b!135089 (= e!87978 (contains!886 lt!70694 (tuple2!2565 (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!135090 () Bool)

(assert (=> b!135090 (= e!87977 call!14847)))

(declare-fun d!41979 () Bool)

(assert (=> d!41979 e!87978))

(declare-fun res!64915 () Bool)

(assert (=> d!41979 (=> (not res!64915) (not e!87978))))

(assert (=> d!41979 (= res!64915 (isStrictlySorted!309 lt!70694))))

(assert (=> d!41979 (= lt!70694 e!87976)))

(declare-fun c!25205 () Bool)

(assert (=> d!41979 (= c!25205 (and ((_ is Cons!1690) (toList!842 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652)))) (bvslt (_1!1293 (h!2295 (toList!842 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652))))) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (=> d!41979 (isStrictlySorted!309 (toList!842 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652))))))

(assert (=> d!41979 (= (insertStrictlySorted!91 (toList!842 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652))) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) lt!70694)))

(declare-fun e!87975 () List!1694)

(declare-fun b!135091 () Bool)

(assert (=> b!135091 (= e!87975 (ite c!25207 (t!6137 (toList!842 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652)))) (ite c!25206 (Cons!1690 (h!2295 (toList!842 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652)))) (t!6137 (toList!842 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652))))) Nil!1691)))))

(declare-fun b!135092 () Bool)

(declare-fun call!14849 () List!1694)

(assert (=> b!135092 (= e!87976 call!14849)))

(declare-fun b!135093 () Bool)

(assert (=> b!135093 (= e!87974 call!14848)))

(declare-fun b!135094 () Bool)

(assert (=> b!135094 (= e!87975 (insertStrictlySorted!91 (t!6137 (toList!842 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652)))) (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun bm!14845 () Bool)

(assert (=> bm!14845 (= call!14847 call!14849)))

(declare-fun bm!14846 () Bool)

(assert (=> bm!14846 (= call!14849 ($colon$colon!91 e!87975 (ite c!25205 (h!2295 (toList!842 (ite c!24624 call!14649 (ite c!24626 call!14650 call!14652)))) (tuple2!2565 (_1!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24624 c!24626) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))))

(declare-fun c!25204 () Bool)

(assert (=> bm!14846 (= c!25204 c!25205)))

(assert (= (and d!41979 c!25205) b!135092))

(assert (= (and d!41979 (not c!25205)) b!135086))

(assert (= (and b!135086 c!25207) b!135090))

(assert (= (and b!135086 (not c!25207)) b!135088))

(assert (= (and b!135088 c!25206) b!135093))

(assert (= (and b!135088 (not c!25206)) b!135087))

(assert (= (or b!135093 b!135087) bm!14844))

(assert (= (or b!135090 bm!14844) bm!14845))

(assert (= (or b!135092 bm!14845) bm!14846))

(assert (= (and bm!14846 c!25204) b!135094))

(assert (= (and bm!14846 (not c!25204)) b!135091))

(assert (= (and d!41979 res!64915) b!135085))

(assert (= (and b!135085 res!64914) b!135089))

(declare-fun m!160991 () Bool)

(assert (=> b!135089 m!160991))

(declare-fun m!160993 () Bool)

(assert (=> b!135094 m!160993))

(declare-fun m!160995 () Bool)

(assert (=> bm!14846 m!160995))

(declare-fun m!160997 () Bool)

(assert (=> b!135085 m!160997))

(declare-fun m!160999 () Bool)

(assert (=> d!41979 m!160999))

(declare-fun m!161001 () Bool)

(assert (=> d!41979 m!161001))

(assert (=> d!41069 d!41979))

(declare-fun b!135095 () Bool)

(declare-fun e!87981 () Bool)

(assert (=> b!135095 (= e!87981 (contains!885 Nil!1690 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000)))))

(declare-fun b!135096 () Bool)

(declare-fun e!87979 () Bool)

(declare-fun call!14850 () Bool)

(assert (=> b!135096 (= e!87979 call!14850)))

(declare-fun b!135097 () Bool)

(declare-fun e!87982 () Bool)

(declare-fun e!87980 () Bool)

(assert (=> b!135097 (= e!87982 e!87980)))

(declare-fun res!64917 () Bool)

(assert (=> b!135097 (=> (not res!64917) (not e!87980))))

(assert (=> b!135097 (= res!64917 (not e!87981))))

(declare-fun res!64918 () Bool)

(assert (=> b!135097 (=> (not res!64918) (not e!87981))))

(assert (=> b!135097 (= res!64918 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000)))))

(declare-fun bm!14847 () Bool)

(declare-fun c!25208 () Bool)

(assert (=> bm!14847 (= call!14850 (arrayNoDuplicates!0 (_keys!4613 (_2!1294 lt!69445)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!25208 (Cons!1689 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)))))

(declare-fun d!41981 () Bool)

(declare-fun res!64916 () Bool)

(assert (=> d!41981 (=> res!64916 e!87982)))

(assert (=> d!41981 (= res!64916 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69445)))))))

(assert (=> d!41981 (= (arrayNoDuplicates!0 (_keys!4613 (_2!1294 lt!69445)) #b00000000000000000000000000000000 Nil!1690) e!87982)))

(declare-fun b!135098 () Bool)

(assert (=> b!135098 (= e!87980 e!87979)))

(assert (=> b!135098 (= c!25208 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000)))))

(declare-fun b!135099 () Bool)

(assert (=> b!135099 (= e!87979 call!14850)))

(assert (= (and d!41981 (not res!64916)) b!135097))

(assert (= (and b!135097 res!64918) b!135095))

(assert (= (and b!135097 res!64917) b!135098))

(assert (= (and b!135098 c!25208) b!135096))

(assert (= (and b!135098 (not c!25208)) b!135099))

(assert (= (or b!135096 b!135099) bm!14847))

(assert (=> b!135095 m!159403))

(assert (=> b!135095 m!159403))

(declare-fun m!161003 () Bool)

(assert (=> b!135095 m!161003))

(assert (=> b!135097 m!159403))

(assert (=> b!135097 m!159403))

(assert (=> b!135097 m!159405))

(assert (=> bm!14847 m!159403))

(declare-fun m!161005 () Bool)

(assert (=> bm!14847 m!161005))

(assert (=> b!135098 m!159403))

(assert (=> b!135098 m!159403))

(assert (=> b!135098 m!159405))

(assert (=> b!133584 d!41981))

(declare-fun d!41983 () Bool)

(declare-fun e!87984 () Bool)

(assert (=> d!41983 e!87984))

(declare-fun res!64919 () Bool)

(assert (=> d!41983 (=> res!64919 e!87984)))

(declare-fun lt!70695 () Bool)

(assert (=> d!41983 (= res!64919 (not lt!70695))))

(declare-fun lt!70696 () Bool)

(assert (=> d!41983 (= lt!70695 lt!70696)))

(declare-fun lt!70697 () Unit!4141)

(declare-fun e!87983 () Unit!4141)

(assert (=> d!41983 (= lt!70697 e!87983)))

(declare-fun c!25209 () Bool)

(assert (=> d!41983 (= c!25209 lt!70696)))

(assert (=> d!41983 (= lt!70696 (containsKey!176 (toList!842 lt!69779) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!41983 (= (contains!884 lt!69779 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70695)))

(declare-fun b!135100 () Bool)

(declare-fun lt!70698 () Unit!4141)

(assert (=> b!135100 (= e!87983 lt!70698)))

(assert (=> b!135100 (= lt!70698 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69779) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135100 (isDefined!125 (getValueByKey!173 (toList!842 lt!69779) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135101 () Bool)

(declare-fun Unit!4245 () Unit!4141)

(assert (=> b!135101 (= e!87983 Unit!4245)))

(declare-fun b!135102 () Bool)

(assert (=> b!135102 (= e!87984 (isDefined!125 (getValueByKey!173 (toList!842 lt!69779) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!41983 c!25209) b!135100))

(assert (= (and d!41983 (not c!25209)) b!135101))

(assert (= (and d!41983 (not res!64919)) b!135102))

(declare-fun m!161007 () Bool)

(assert (=> d!41983 m!161007))

(declare-fun m!161009 () Bool)

(assert (=> b!135100 m!161009))

(declare-fun m!161011 () Bool)

(assert (=> b!135100 m!161011))

(assert (=> b!135100 m!161011))

(declare-fun m!161013 () Bool)

(assert (=> b!135100 m!161013))

(assert (=> b!135102 m!161011))

(assert (=> b!135102 m!161011))

(assert (=> b!135102 m!161013))

(assert (=> bm!14708 d!41983))

(declare-fun d!41985 () Bool)

(declare-fun lt!70699 () Bool)

(assert (=> d!41985 (= lt!70699 (select (content!134 (toList!842 lt!70080)) (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))))

(declare-fun e!87986 () Bool)

(assert (=> d!41985 (= lt!70699 e!87986)))

(declare-fun res!64921 () Bool)

(assert (=> d!41985 (=> (not res!64921) (not e!87986))))

(assert (=> d!41985 (= res!64921 ((_ is Cons!1690) (toList!842 lt!70080)))))

(assert (=> d!41985 (= (contains!886 (toList!842 lt!70080) (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))) lt!70699)))

(declare-fun b!135103 () Bool)

(declare-fun e!87985 () Bool)

(assert (=> b!135103 (= e!87986 e!87985)))

(declare-fun res!64920 () Bool)

(assert (=> b!135103 (=> res!64920 e!87985)))

(assert (=> b!135103 (= res!64920 (= (h!2295 (toList!842 lt!70080)) (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))))

(declare-fun b!135104 () Bool)

(assert (=> b!135104 (= e!87985 (contains!886 (t!6137 (toList!842 lt!70080)) (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))))

(assert (= (and d!41985 res!64921) b!135103))

(assert (= (and b!135103 (not res!64920)) b!135104))

(declare-fun m!161015 () Bool)

(assert (=> d!41985 m!161015))

(declare-fun m!161017 () Bool)

(assert (=> d!41985 m!161017))

(declare-fun m!161019 () Bool)

(assert (=> b!135104 m!161019))

(assert (=> b!133892 d!41985))

(declare-fun d!41987 () Bool)

(declare-fun e!87988 () Bool)

(assert (=> d!41987 e!87988))

(declare-fun res!64922 () Bool)

(assert (=> d!41987 (=> res!64922 e!87988)))

(declare-fun lt!70700 () Bool)

(assert (=> d!41987 (= res!64922 (not lt!70700))))

(declare-fun lt!70701 () Bool)

(assert (=> d!41987 (= lt!70700 lt!70701)))

(declare-fun lt!70702 () Unit!4141)

(declare-fun e!87987 () Unit!4141)

(assert (=> d!41987 (= lt!70702 e!87987)))

(declare-fun c!25210 () Bool)

(assert (=> d!41987 (= c!25210 lt!70701)))

(assert (=> d!41987 (= lt!70701 (containsKey!176 (toList!842 (+!169 lt!69698 (tuple2!2565 lt!69700 lt!69701))) lt!69704))))

(assert (=> d!41987 (= (contains!884 (+!169 lt!69698 (tuple2!2565 lt!69700 lt!69701)) lt!69704) lt!70700)))

(declare-fun b!135105 () Bool)

(declare-fun lt!70703 () Unit!4141)

(assert (=> b!135105 (= e!87987 lt!70703)))

(assert (=> b!135105 (= lt!70703 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69698 (tuple2!2565 lt!69700 lt!69701))) lt!69704))))

(assert (=> b!135105 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69698 (tuple2!2565 lt!69700 lt!69701))) lt!69704))))

(declare-fun b!135106 () Bool)

(declare-fun Unit!4246 () Unit!4141)

(assert (=> b!135106 (= e!87987 Unit!4246)))

(declare-fun b!135107 () Bool)

(assert (=> b!135107 (= e!87988 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69698 (tuple2!2565 lt!69700 lt!69701))) lt!69704)))))

(assert (= (and d!41987 c!25210) b!135105))

(assert (= (and d!41987 (not c!25210)) b!135106))

(assert (= (and d!41987 (not res!64922)) b!135107))

(declare-fun m!161021 () Bool)

(assert (=> d!41987 m!161021))

(declare-fun m!161023 () Bool)

(assert (=> b!135105 m!161023))

(declare-fun m!161025 () Bool)

(assert (=> b!135105 m!161025))

(assert (=> b!135105 m!161025))

(declare-fun m!161027 () Bool)

(assert (=> b!135105 m!161027))

(assert (=> b!135107 m!161025))

(assert (=> b!135107 m!161025))

(assert (=> b!135107 m!161027))

(assert (=> b!133297 d!41987))

(assert (=> b!133297 d!40625))

(declare-fun d!41989 () Bool)

(declare-fun e!87989 () Bool)

(assert (=> d!41989 e!87989))

(declare-fun res!64924 () Bool)

(assert (=> d!41989 (=> (not res!64924) (not e!87989))))

(declare-fun lt!70706 () ListLongMap!1653)

(assert (=> d!41989 (= res!64924 (contains!884 lt!70706 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70707 () List!1694)

(assert (=> d!41989 (= lt!70706 (ListLongMap!1654 lt!70707))))

(declare-fun lt!70704 () Unit!4141)

(declare-fun lt!70705 () Unit!4141)

(assert (=> d!41989 (= lt!70704 lt!70705)))

(assert (=> d!41989 (= (getValueByKey!173 lt!70707 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41989 (= lt!70705 (lemmaContainsTupThenGetReturnValue!88 lt!70707 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41989 (= lt!70707 (insertStrictlySorted!91 (toList!842 call!14690) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!41989 (= (+!169 call!14690 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70706)))

(declare-fun b!135108 () Bool)

(declare-fun res!64923 () Bool)

(assert (=> b!135108 (=> (not res!64923) (not e!87989))))

(assert (=> b!135108 (= res!64923 (= (getValueByKey!173 (toList!842 lt!70706) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135109 () Bool)

(assert (=> b!135109 (= e!87989 (contains!886 (toList!842 lt!70706) (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (ite c!24553 (_values!2847 newMap!16) lt!69268)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!41989 res!64924) b!135108))

(assert (= (and b!135108 res!64923) b!135109))

(declare-fun m!161029 () Bool)

(assert (=> d!41989 m!161029))

(declare-fun m!161031 () Bool)

(assert (=> d!41989 m!161031))

(declare-fun m!161033 () Bool)

(assert (=> d!41989 m!161033))

(declare-fun m!161035 () Bool)

(assert (=> d!41989 m!161035))

(declare-fun m!161037 () Bool)

(assert (=> b!135108 m!161037))

(declare-fun m!161039 () Bool)

(assert (=> b!135109 m!161039))

(assert (=> b!133297 d!41989))

(declare-fun d!41991 () Bool)

(assert (=> d!41991 (not (contains!884 (+!169 lt!69698 (tuple2!2565 lt!69700 lt!69701)) lt!69704))))

(declare-fun lt!70708 () Unit!4141)

(assert (=> d!41991 (= lt!70708 (choose!836 lt!69698 lt!69700 lt!69701 lt!69704))))

(declare-fun e!87990 () Bool)

(assert (=> d!41991 e!87990))

(declare-fun res!64925 () Bool)

(assert (=> d!41991 (=> (not res!64925) (not e!87990))))

(assert (=> d!41991 (= res!64925 (not (contains!884 lt!69698 lt!69704)))))

(assert (=> d!41991 (= (addStillNotContains!63 lt!69698 lt!69700 lt!69701 lt!69704) lt!70708)))

(declare-fun b!135110 () Bool)

(assert (=> b!135110 (= e!87990 (not (= lt!69700 lt!69704)))))

(assert (= (and d!41991 res!64925) b!135110))

(assert (=> d!41991 m!157353))

(assert (=> d!41991 m!157353))

(assert (=> d!41991 m!157359))

(declare-fun m!161041 () Bool)

(assert (=> d!41991 m!161041))

(declare-fun m!161043 () Bool)

(assert (=> d!41991 m!161043))

(assert (=> b!133297 d!41991))

(declare-fun d!41993 () Bool)

(declare-fun e!87991 () Bool)

(assert (=> d!41993 e!87991))

(declare-fun res!64927 () Bool)

(assert (=> d!41993 (=> (not res!64927) (not e!87991))))

(declare-fun lt!70711 () ListLongMap!1653)

(assert (=> d!41993 (= res!64927 (contains!884 lt!70711 (_1!1293 (tuple2!2565 lt!69700 lt!69701))))))

(declare-fun lt!70712 () List!1694)

(assert (=> d!41993 (= lt!70711 (ListLongMap!1654 lt!70712))))

(declare-fun lt!70709 () Unit!4141)

(declare-fun lt!70710 () Unit!4141)

(assert (=> d!41993 (= lt!70709 lt!70710)))

(assert (=> d!41993 (= (getValueByKey!173 lt!70712 (_1!1293 (tuple2!2565 lt!69700 lt!69701))) (Some!178 (_2!1293 (tuple2!2565 lt!69700 lt!69701))))))

(assert (=> d!41993 (= lt!70710 (lemmaContainsTupThenGetReturnValue!88 lt!70712 (_1!1293 (tuple2!2565 lt!69700 lt!69701)) (_2!1293 (tuple2!2565 lt!69700 lt!69701))))))

(assert (=> d!41993 (= lt!70712 (insertStrictlySorted!91 (toList!842 lt!69698) (_1!1293 (tuple2!2565 lt!69700 lt!69701)) (_2!1293 (tuple2!2565 lt!69700 lt!69701))))))

(assert (=> d!41993 (= (+!169 lt!69698 (tuple2!2565 lt!69700 lt!69701)) lt!70711)))

(declare-fun b!135111 () Bool)

(declare-fun res!64926 () Bool)

(assert (=> b!135111 (=> (not res!64926) (not e!87991))))

(assert (=> b!135111 (= res!64926 (= (getValueByKey!173 (toList!842 lt!70711) (_1!1293 (tuple2!2565 lt!69700 lt!69701))) (Some!178 (_2!1293 (tuple2!2565 lt!69700 lt!69701)))))))

(declare-fun b!135112 () Bool)

(assert (=> b!135112 (= e!87991 (contains!886 (toList!842 lt!70711) (tuple2!2565 lt!69700 lt!69701)))))

(assert (= (and d!41993 res!64927) b!135111))

(assert (= (and b!135111 res!64926) b!135112))

(declare-fun m!161045 () Bool)

(assert (=> d!41993 m!161045))

(declare-fun m!161047 () Bool)

(assert (=> d!41993 m!161047))

(declare-fun m!161049 () Bool)

(assert (=> d!41993 m!161049))

(declare-fun m!161051 () Bool)

(assert (=> d!41993 m!161051))

(declare-fun m!161053 () Bool)

(assert (=> b!135111 m!161053))

(declare-fun m!161055 () Bool)

(assert (=> b!135112 m!161055))

(assert (=> b!133297 d!41993))

(assert (=> b!133744 d!41183))

(declare-fun d!41995 () Bool)

(assert (=> d!41995 (isDefined!125 (getValueByKey!173 (toList!842 lt!69339) lt!69345))))

(declare-fun lt!70713 () Unit!4141)

(assert (=> d!41995 (= lt!70713 (choose!831 (toList!842 lt!69339) lt!69345))))

(declare-fun e!87992 () Bool)

(assert (=> d!41995 e!87992))

(declare-fun res!64928 () Bool)

(assert (=> d!41995 (=> (not res!64928) (not e!87992))))

(assert (=> d!41995 (= res!64928 (isStrictlySorted!309 (toList!842 lt!69339)))))

(assert (=> d!41995 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69339) lt!69345) lt!70713)))

(declare-fun b!135113 () Bool)

(assert (=> b!135113 (= e!87992 (containsKey!176 (toList!842 lt!69339) lt!69345))))

(assert (= (and d!41995 res!64928) b!135113))

(assert (=> d!41995 m!157117))

(assert (=> d!41995 m!157117))

(assert (=> d!41995 m!157887))

(declare-fun m!161057 () Bool)

(assert (=> d!41995 m!161057))

(assert (=> d!41995 m!157989))

(assert (=> b!135113 m!157883))

(assert (=> b!133571 d!41995))

(declare-fun d!41997 () Bool)

(assert (=> d!41997 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69339) lt!69345)) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69339) lt!69345))))))

(declare-fun bs!5670 () Bool)

(assert (= bs!5670 d!41997))

(assert (=> bs!5670 m!157117))

(declare-fun m!161059 () Bool)

(assert (=> bs!5670 m!161059))

(assert (=> b!133571 d!41997))

(assert (=> b!133571 d!41087))

(declare-fun b!135115 () Bool)

(declare-fun e!87993 () Option!179)

(declare-fun e!87994 () Option!179)

(assert (=> b!135115 (= e!87993 e!87994)))

(declare-fun c!25212 () Bool)

(assert (=> b!135115 (= c!25212 (and ((_ is Cons!1690) (t!6137 lt!69640)) (not (= (_1!1293 (h!2295 (t!6137 lt!69640))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!135114 () Bool)

(assert (=> b!135114 (= e!87993 (Some!178 (_2!1293 (h!2295 (t!6137 lt!69640)))))))

(declare-fun d!41999 () Bool)

(declare-fun c!25211 () Bool)

(assert (=> d!41999 (= c!25211 (and ((_ is Cons!1690) (t!6137 lt!69640)) (= (_1!1293 (h!2295 (t!6137 lt!69640))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!41999 (= (getValueByKey!173 (t!6137 lt!69640) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87993)))

(declare-fun b!135117 () Bool)

(assert (=> b!135117 (= e!87994 None!177)))

(declare-fun b!135116 () Bool)

(assert (=> b!135116 (= e!87994 (getValueByKey!173 (t!6137 (t!6137 lt!69640)) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!41999 c!25211) b!135114))

(assert (= (and d!41999 (not c!25211)) b!135115))

(assert (= (and b!135115 c!25212) b!135116))

(assert (= (and b!135115 (not c!25212)) b!135117))

(declare-fun m!161061 () Bool)

(assert (=> b!135116 m!161061))

(assert (=> b!133624 d!41999))

(declare-fun d!42001 () Bool)

(declare-fun res!64929 () Bool)

(declare-fun e!87995 () Bool)

(assert (=> d!42001 (=> res!64929 e!87995)))

(assert (=> d!42001 (= res!64929 (or ((_ is Nil!1691) lt!69984) ((_ is Nil!1691) (t!6137 lt!69984))))))

(assert (=> d!42001 (= (isStrictlySorted!309 lt!69984) e!87995)))

(declare-fun b!135118 () Bool)

(declare-fun e!87996 () Bool)

(assert (=> b!135118 (= e!87995 e!87996)))

(declare-fun res!64930 () Bool)

(assert (=> b!135118 (=> (not res!64930) (not e!87996))))

(assert (=> b!135118 (= res!64930 (bvslt (_1!1293 (h!2295 lt!69984)) (_1!1293 (h!2295 (t!6137 lt!69984)))))))

(declare-fun b!135119 () Bool)

(assert (=> b!135119 (= e!87996 (isStrictlySorted!309 (t!6137 lt!69984)))))

(assert (= (and d!42001 (not res!64929)) b!135118))

(assert (= (and b!135118 res!64930) b!135119))

(declare-fun m!161063 () Bool)

(assert (=> b!135119 m!161063))

(assert (=> d!40853 d!42001))

(declare-fun d!42003 () Bool)

(declare-fun res!64931 () Bool)

(declare-fun e!87997 () Bool)

(assert (=> d!42003 (=> res!64931 e!87997)))

(assert (=> d!42003 (= res!64931 (or ((_ is Nil!1691) (toList!842 call!14604)) ((_ is Nil!1691) (t!6137 (toList!842 call!14604)))))))

(assert (=> d!42003 (= (isStrictlySorted!309 (toList!842 call!14604)) e!87997)))

(declare-fun b!135120 () Bool)

(declare-fun e!87998 () Bool)

(assert (=> b!135120 (= e!87997 e!87998)))

(declare-fun res!64932 () Bool)

(assert (=> b!135120 (=> (not res!64932) (not e!87998))))

(assert (=> b!135120 (= res!64932 (bvslt (_1!1293 (h!2295 (toList!842 call!14604))) (_1!1293 (h!2295 (t!6137 (toList!842 call!14604))))))))

(declare-fun b!135121 () Bool)

(assert (=> b!135121 (= e!87998 (isStrictlySorted!309 (t!6137 (toList!842 call!14604))))))

(assert (= (and d!42003 (not res!64931)) b!135120))

(assert (= (and b!135120 res!64932) b!135121))

(assert (=> b!135121 m!159621))

(assert (=> d!40853 d!42003))

(declare-fun d!42005 () Bool)

(assert (=> d!42005 (= (validMask!0 (mask!7164 (_2!1294 lt!69280))) (and (or (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000000000000000000111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000000000000000001111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000000000000000011111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000000000000000111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000000000000001111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000000000000011111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000000000000111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000000000001111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000000000011111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000000000111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000000001111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000000011111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000000111111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000001111111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000011111111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000000111111111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000001111111111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000011111111111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000000111111111111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000001111111111111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000011111111111111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000000111111111111111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000001111111111111111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000011111111111111111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00000111111111111111111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00001111111111111111111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00011111111111111111111111111111) (= (mask!7164 (_2!1294 lt!69280)) #b00111111111111111111111111111111)) (bvsle (mask!7164 (_2!1294 lt!69280)) #b00111111111111111111111111111111)))))

(assert (=> d!40649 d!42005))

(declare-fun b!135123 () Bool)

(declare-fun e!87999 () Option!179)

(declare-fun e!88000 () Option!179)

(assert (=> b!135123 (= e!87999 e!88000)))

(declare-fun c!25214 () Bool)

(assert (=> b!135123 (= c!25214 (and ((_ is Cons!1690) (t!6137 lt!69626)) (not (= (_1!1293 (h!2295 (t!6137 lt!69626))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!135122 () Bool)

(assert (=> b!135122 (= e!87999 (Some!178 (_2!1293 (h!2295 (t!6137 lt!69626)))))))

(declare-fun c!25213 () Bool)

(declare-fun d!42007 () Bool)

(assert (=> d!42007 (= c!25213 (and ((_ is Cons!1690) (t!6137 lt!69626)) (= (_1!1293 (h!2295 (t!6137 lt!69626))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!42007 (= (getValueByKey!173 (t!6137 lt!69626) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!87999)))

(declare-fun b!135125 () Bool)

(assert (=> b!135125 (= e!88000 None!177)))

(declare-fun b!135124 () Bool)

(assert (=> b!135124 (= e!88000 (getValueByKey!173 (t!6137 (t!6137 lt!69626)) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!42007 c!25213) b!135122))

(assert (= (and d!42007 (not c!25213)) b!135123))

(assert (= (and b!135123 c!25214) b!135124))

(assert (= (and b!135123 (not c!25214)) b!135125))

(declare-fun m!161065 () Bool)

(assert (=> b!135124 m!161065))

(assert (=> b!133989 d!42007))

(declare-fun d!42009 () Bool)

(declare-fun res!64933 () Bool)

(declare-fun e!88001 () Bool)

(assert (=> d!42009 (=> res!64933 e!88001)))

(assert (=> d!42009 (= res!64933 (= (select (arr!2252 lt!69460) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!42009 (= (arrayContainsKey!0 lt!69460 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!88001)))

(declare-fun b!135126 () Bool)

(declare-fun e!88002 () Bool)

(assert (=> b!135126 (= e!88001 e!88002)))

(declare-fun res!64934 () Bool)

(assert (=> b!135126 (=> (not res!64934) (not e!88002))))

(assert (=> b!135126 (= res!64934 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 lt!69460)))))

(declare-fun b!135127 () Bool)

(assert (=> b!135127 (= e!88002 (arrayContainsKey!0 lt!69460 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!42009 (not res!64933)) b!135126))

(assert (= (and b!135126 res!64934) b!135127))

(declare-fun m!161067 () Bool)

(assert (=> d!42009 m!161067))

(assert (=> b!135127 m!156395))

(declare-fun m!161069 () Bool)

(assert (=> b!135127 m!161069))

(assert (=> b!133497 d!42009))

(declare-fun lt!70714 () (_ BitVec 32))

(declare-fun d!42011 () Bool)

(assert (=> d!42011 (and (bvsge lt!70714 #b00000000000000000000000000000000) (bvsle lt!70714 (bvsub (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!88003 () (_ BitVec 32))

(assert (=> d!42011 (= lt!70714 e!88003)))

(declare-fun c!25215 () Bool)

(assert (=> d!42011 (= c!25215 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!42011 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2521 (_keys!4613 newMap!16)) (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(assert (=> d!42011 (= (arrayCountValidKeys!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))) lt!70714)))

(declare-fun b!135128 () Bool)

(declare-fun e!88004 () (_ BitVec 32))

(declare-fun call!14851 () (_ BitVec 32))

(assert (=> b!135128 (= e!88004 (bvadd #b00000000000000000000000000000001 call!14851))))

(declare-fun b!135129 () Bool)

(assert (=> b!135129 (= e!88004 call!14851)))

(declare-fun b!135130 () Bool)

(assert (=> b!135130 (= e!88003 e!88004)))

(declare-fun c!25216 () Bool)

(assert (=> b!135130 (= c!25216 (validKeyInArray!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!14848 () Bool)

(assert (=> bm!14848 (= call!14851 (arrayCountValidKeys!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!135131 () Bool)

(assert (=> b!135131 (= e!88003 #b00000000000000000000000000000000)))

(assert (= (and d!42011 c!25215) b!135131))

(assert (= (and d!42011 (not c!25215)) b!135130))

(assert (= (and b!135130 c!25216) b!135128))

(assert (= (and b!135130 (not c!25216)) b!135129))

(assert (= (or b!135128 b!135129) bm!14848))

(assert (=> b!135130 m!160891))

(assert (=> b!135130 m!160891))

(assert (=> b!135130 m!160899))

(declare-fun m!161071 () Bool)

(assert (=> bm!14848 m!161071))

(assert (=> bm!14721 d!42011))

(declare-fun b!135133 () Bool)

(declare-fun e!88005 () Option!179)

(declare-fun e!88006 () Option!179)

(assert (=> b!135133 (= e!88005 e!88006)))

(declare-fun c!25218 () Bool)

(assert (=> b!135133 (= c!25218 (and ((_ is Cons!1690) (toList!842 lt!70148)) (not (= (_1!1293 (h!2295 (toList!842 lt!70148))) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!135132 () Bool)

(assert (=> b!135132 (= e!88005 (Some!178 (_2!1293 (h!2295 (toList!842 lt!70148)))))))

(declare-fun c!25217 () Bool)

(declare-fun d!42013 () Bool)

(assert (=> d!42013 (= c!25217 (and ((_ is Cons!1690) (toList!842 lt!70148)) (= (_1!1293 (h!2295 (toList!842 lt!70148))) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))))))

(assert (=> d!42013 (= (getValueByKey!173 (toList!842 lt!70148) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))) e!88005)))

(declare-fun b!135135 () Bool)

(assert (=> b!135135 (= e!88006 None!177)))

(declare-fun b!135134 () Bool)

(assert (=> b!135134 (= e!88006 (getValueByKey!173 (t!6137 (toList!842 lt!70148)) (_1!1293 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))))

(assert (= (and d!42013 c!25217) b!135132))

(assert (= (and d!42013 (not c!25217)) b!135133))

(assert (= (and b!135133 c!25218) b!135134))

(assert (= (and b!135133 (not c!25218)) b!135135))

(declare-fun m!161073 () Bool)

(assert (=> b!135134 m!161073))

(assert (=> b!134015 d!42013))

(declare-fun d!42015 () Bool)

(assert (=> d!42015 (isDefined!125 (getValueByKey!173 (toList!842 lt!69649) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun lt!70715 () Unit!4141)

(assert (=> d!42015 (= lt!70715 (choose!831 (toList!842 lt!69649) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun e!88007 () Bool)

(assert (=> d!42015 e!88007))

(declare-fun res!64935 () Bool)

(assert (=> d!42015 (=> (not res!64935) (not e!88007))))

(assert (=> d!42015 (= res!64935 (isStrictlySorted!309 (toList!842 lt!69649)))))

(assert (=> d!42015 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69649) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70715)))

(declare-fun b!135136 () Bool)

(assert (=> b!135136 (= e!88007 (containsKey!176 (toList!842 lt!69649) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!42015 res!64935) b!135136))

(assert (=> d!42015 m!157199))

(assert (=> d!42015 m!157199))

(assert (=> d!42015 m!158565))

(declare-fun m!161075 () Bool)

(assert (=> d!42015 m!161075))

(declare-fun m!161077 () Bool)

(assert (=> d!42015 m!161077))

(assert (=> b!135136 m!158561))

(assert (=> b!133915 d!42015))

(declare-fun d!42017 () Bool)

(assert (=> d!42017 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69649) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69649) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun bs!5671 () Bool)

(assert (= bs!5671 d!42017))

(assert (=> bs!5671 m!157199))

(declare-fun m!161079 () Bool)

(assert (=> bs!5671 m!161079))

(assert (=> b!133915 d!42017))

(assert (=> b!133915 d!41003))

(declare-fun d!42019 () Bool)

(assert (=> d!42019 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) lt!69519))))

(declare-fun lt!70716 () Unit!4141)

(assert (=> d!42019 (= lt!70716 (choose!831 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) lt!69519))))

(declare-fun e!88008 () Bool)

(assert (=> d!42019 e!88008))

(declare-fun res!64936 () Bool)

(assert (=> d!42019 (=> (not res!64936) (not e!88008))))

(assert (=> d!42019 (= res!64936 (isStrictlySorted!309 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))))))

(assert (=> d!42019 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) lt!69519) lt!70716)))

(declare-fun b!135137 () Bool)

(assert (=> b!135137 (= e!88008 (containsKey!176 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) lt!69519))))

(assert (= (and d!42019 res!64936) b!135137))

(assert (=> d!42019 m!158517))

(assert (=> d!42019 m!158517))

(assert (=> d!42019 m!158519))

(declare-fun m!161081 () Bool)

(assert (=> d!42019 m!161081))

(declare-fun m!161083 () Bool)

(assert (=> d!42019 m!161083))

(assert (=> b!135137 m!158513))

(assert (=> b!133895 d!42019))

(declare-fun d!42021 () Bool)

(assert (=> d!42021 (= (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) lt!69519)) (not (isEmpty!416 (getValueByKey!173 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) lt!69519))))))

(declare-fun bs!5672 () Bool)

(assert (= bs!5672 d!42021))

(assert (=> bs!5672 m!158517))

(declare-fun m!161085 () Bool)

(assert (=> bs!5672 m!161085))

(assert (=> b!133895 d!42021))

(declare-fun b!135139 () Bool)

(declare-fun e!88009 () Option!179)

(declare-fun e!88010 () Option!179)

(assert (=> b!135139 (= e!88009 e!88010)))

(declare-fun c!25220 () Bool)

(assert (=> b!135139 (= c!25220 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))) lt!69519))))))

(declare-fun b!135138 () Bool)

(assert (=> b!135138 (= e!88009 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))))))))

(declare-fun c!25219 () Bool)

(declare-fun d!42023 () Bool)

(assert (=> d!42023 (= c!25219 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))) lt!69519)))))

(assert (=> d!42023 (= (getValueByKey!173 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) lt!69519) e!88009)))

(declare-fun b!135141 () Bool)

(assert (=> b!135141 (= e!88010 None!177)))

(declare-fun b!135140 () Bool)

(assert (=> b!135140 (= e!88010 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69520 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))) lt!69519))))

(assert (= (and d!42023 c!25219) b!135138))

(assert (= (and d!42023 (not c!25219)) b!135139))

(assert (= (and b!135139 c!25220) b!135140))

(assert (= (and b!135139 (not c!25220)) b!135141))

(declare-fun m!161087 () Bool)

(assert (=> b!135140 m!161087))

(assert (=> b!133895 d!42023))

(assert (=> d!40601 d!40603))

(assert (=> d!40601 d!40605))

(declare-fun d!42025 () Bool)

(assert (=> d!42025 (isDefined!125 (getValueByKey!173 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!42025 true))

(declare-fun _$12!402 () Unit!4141)

(assert (=> d!42025 (= (choose!831 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) _$12!402)))

(declare-fun bs!5673 () Bool)

(assert (= bs!5673 d!42025))

(assert (=> bs!5673 m!156395))

(assert (=> bs!5673 m!156959))

(assert (=> bs!5673 m!156959))

(assert (=> bs!5673 m!156961))

(assert (=> d!40601 d!42025))

(declare-fun d!42027 () Bool)

(declare-fun res!64937 () Bool)

(declare-fun e!88011 () Bool)

(assert (=> d!42027 (=> res!64937 e!88011)))

(assert (=> d!42027 (= res!64937 (or ((_ is Nil!1691) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) ((_ is Nil!1691) (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))))))

(assert (=> d!42027 (= (isStrictlySorted!309 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) e!88011)))

(declare-fun b!135142 () Bool)

(declare-fun e!88012 () Bool)

(assert (=> b!135142 (= e!88011 e!88012)))

(declare-fun res!64938 () Bool)

(assert (=> b!135142 (=> (not res!64938) (not e!88012))))

(assert (=> b!135142 (= res!64938 (bvslt (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1293 (h!2295 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))))))

(declare-fun b!135143 () Bool)

(assert (=> b!135143 (= e!88012 (isStrictlySorted!309 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))))

(assert (= (and d!42027 (not res!64937)) b!135142))

(assert (= (and b!135142 res!64938) b!135143))

(declare-fun m!161089 () Bool)

(assert (=> b!135143 m!161089))

(assert (=> d!40601 d!42027))

(assert (=> d!40773 d!40455))

(declare-fun d!42029 () Bool)

(assert (=> d!42029 (= (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (and (not (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133447 d!42029))

(declare-fun d!42031 () Bool)

(assert (=> d!42031 (isDefined!125 (getValueByKey!173 (toList!842 lt!69625) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun lt!70717 () Unit!4141)

(assert (=> d!42031 (= lt!70717 (choose!831 (toList!842 lt!69625) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun e!88013 () Bool)

(assert (=> d!42031 e!88013))

(declare-fun res!64939 () Bool)

(assert (=> d!42031 (=> (not res!64939) (not e!88013))))

(assert (=> d!42031 (= res!64939 (isStrictlySorted!309 (toList!842 lt!69625)))))

(assert (=> d!42031 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69625) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70717)))

(declare-fun b!135144 () Bool)

(assert (=> b!135144 (= e!88013 (containsKey!176 (toList!842 lt!69625) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!42031 res!64939) b!135144))

(assert (=> d!42031 m!157109))

(assert (=> d!42031 m!157109))

(assert (=> d!42031 m!158663))

(declare-fun m!161091 () Bool)

(assert (=> d!42031 m!161091))

(declare-fun m!161093 () Bool)

(assert (=> d!42031 m!161093))

(assert (=> b!135144 m!158659))

(assert (=> b!133984 d!42031))

(declare-fun d!42033 () Bool)

(assert (=> d!42033 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69625) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69625) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun bs!5674 () Bool)

(assert (= bs!5674 d!42033))

(assert (=> bs!5674 m!157109))

(declare-fun m!161095 () Bool)

(assert (=> bs!5674 m!161095))

(assert (=> b!133984 d!42033))

(assert (=> b!133984 d!41101))

(declare-fun d!42035 () Bool)

(assert (=> d!42035 (= (apply!116 lt!69958 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1492 (getValueByKey!173 (toList!842 lt!69958) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5675 () Bool)

(assert (= bs!5675 d!42035))

(assert (=> bs!5675 m!156679))

(assert (=> bs!5675 m!160359))

(assert (=> bs!5675 m!160359))

(declare-fun m!161097 () Bool)

(assert (=> bs!5675 m!161097))

(assert (=> b!133703 d!42035))

(assert (=> b!133703 d!40885))

(declare-fun d!42037 () Bool)

(assert (=> d!42037 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69529) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69529) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5676 () Bool)

(assert (= bs!5676 d!42037))

(assert (=> bs!5676 m!158059))

(declare-fun m!161099 () Bool)

(assert (=> bs!5676 m!161099))

(assert (=> b!133914 d!42037))

(assert (=> b!133914 d!41511))

(declare-fun b!135145 () Bool)

(assert (=> b!135145 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> b!135145 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2522 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))))))))

(declare-fun lt!70722 () ListLongMap!1653)

(declare-fun e!88020 () Bool)

(assert (=> b!135145 (= e!88020 (= (apply!116 lt!70722 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!135146 () Bool)

(declare-fun res!64942 () Bool)

(declare-fun e!88018 () Bool)

(assert (=> b!135146 (=> (not res!64942) (not e!88018))))

(assert (=> b!135146 (= res!64942 (not (contains!884 lt!70722 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135147 () Bool)

(declare-fun e!88015 () Bool)

(assert (=> b!135147 (= e!88015 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135147 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!135148 () Bool)

(declare-fun e!88016 () Bool)

(declare-fun e!88017 () Bool)

(assert (=> b!135148 (= e!88016 e!88017)))

(declare-fun c!25224 () Bool)

(assert (=> b!135148 (= c!25224 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!135149 () Bool)

(assert (=> b!135149 (= e!88017 (= lt!70722 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) (mask!7164 newMap!16) (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) (zeroValue!2719 newMap!16) (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun bm!14849 () Bool)

(declare-fun call!14852 () ListLongMap!1653)

(assert (=> bm!14849 (= call!14852 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) (mask!7164 newMap!16) (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) (zeroValue!2719 newMap!16) (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!135150 () Bool)

(declare-fun e!88014 () ListLongMap!1653)

(assert (=> b!135150 (= e!88014 call!14852)))

(declare-fun b!135151 () Bool)

(declare-fun e!88019 () ListLongMap!1653)

(assert (=> b!135151 (= e!88019 e!88014)))

(declare-fun c!25221 () Bool)

(assert (=> b!135151 (= c!25221 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!42039 () Bool)

(assert (=> d!42039 e!88018))

(declare-fun res!64940 () Bool)

(assert (=> d!42039 (=> (not res!64940) (not e!88018))))

(assert (=> d!42039 (= res!64940 (not (contains!884 lt!70722 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42039 (= lt!70722 e!88019)))

(declare-fun c!25222 () Bool)

(assert (=> d!42039 (= c!25222 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!42039 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!42039 (= (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) (mask!7164 newMap!16) (ite c!24553 (ite c!24565 (extraKeys!2629 newMap!16) lt!69279) (extraKeys!2629 newMap!16)) (zeroValue!2719 newMap!16) (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)) lt!70722)))

(declare-fun b!135152 () Bool)

(assert (=> b!135152 (= e!88016 e!88020)))

(assert (=> b!135152 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!64941 () Bool)

(assert (=> b!135152 (= res!64941 (contains!884 lt!70722 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135152 (=> (not res!64941) (not e!88020))))

(declare-fun b!135153 () Bool)

(assert (=> b!135153 (= e!88019 (ListLongMap!1654 Nil!1691))))

(declare-fun b!135154 () Bool)

(assert (=> b!135154 (= e!88017 (isEmpty!415 lt!70722))))

(declare-fun b!135155 () Bool)

(declare-fun lt!70719 () Unit!4141)

(declare-fun lt!70723 () Unit!4141)

(assert (=> b!135155 (= lt!70719 lt!70723)))

(declare-fun lt!70721 () V!3481)

(declare-fun lt!70724 () (_ BitVec 64))

(declare-fun lt!70720 () (_ BitVec 64))

(declare-fun lt!70718 () ListLongMap!1653)

(assert (=> b!135155 (not (contains!884 (+!169 lt!70718 (tuple2!2565 lt!70720 lt!70721)) lt!70724))))

(assert (=> b!135155 (= lt!70723 (addStillNotContains!63 lt!70718 lt!70720 lt!70721 lt!70724))))

(assert (=> b!135155 (= lt!70724 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!135155 (= lt!70721 (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!135155 (= lt!70720 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!135155 (= lt!70718 call!14852)))

(assert (=> b!135155 (= e!88014 (+!169 call!14852 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135156 () Bool)

(assert (=> b!135156 (= e!88018 e!88016)))

(declare-fun c!25223 () Bool)

(assert (=> b!135156 (= c!25223 e!88015)))

(declare-fun res!64943 () Bool)

(assert (=> b!135156 (=> (not res!64943) (not e!88015))))

(assert (=> b!135156 (= res!64943 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (= (and d!42039 c!25222) b!135153))

(assert (= (and d!42039 (not c!25222)) b!135151))

(assert (= (and b!135151 c!25221) b!135155))

(assert (= (and b!135151 (not c!25221)) b!135150))

(assert (= (or b!135155 b!135150) bm!14849))

(assert (= (and d!42039 res!64940) b!135146))

(assert (= (and b!135146 res!64942) b!135156))

(assert (= (and b!135156 res!64943) b!135147))

(assert (= (and b!135156 c!25223) b!135152))

(assert (= (and b!135156 (not c!25223)) b!135148))

(assert (= (and b!135152 res!64941) b!135145))

(assert (= (and b!135148 c!25224) b!135149))

(assert (= (and b!135148 (not c!25224)) b!135154))

(declare-fun b_lambda!6033 () Bool)

(assert (=> (not b_lambda!6033) (not b!135145)))

(assert (=> b!135145 t!6147))

(declare-fun b_and!8377 () Bool)

(assert (= b_and!8373 (and (=> t!6147 result!3993) b_and!8377)))

(assert (=> b!135145 t!6149))

(declare-fun b_and!8379 () Bool)

(assert (= b_and!8375 (and (=> t!6149 result!3995) b_and!8379)))

(declare-fun b_lambda!6035 () Bool)

(assert (=> (not b_lambda!6035) (not b!135155)))

(assert (=> b!135155 t!6147))

(declare-fun b_and!8381 () Bool)

(assert (= b_and!8377 (and (=> t!6147 result!3993) b_and!8381)))

(assert (=> b!135155 t!6149))

(declare-fun b_and!8383 () Bool)

(assert (= b_and!8379 (and (=> t!6149 result!3995) b_and!8383)))

(declare-fun m!161101 () Bool)

(assert (=> b!135154 m!161101))

(assert (=> b!135151 m!157443))

(assert (=> b!135151 m!157443))

(assert (=> b!135151 m!157451))

(assert (=> b!135147 m!157443))

(assert (=> b!135147 m!157443))

(assert (=> b!135147 m!157451))

(declare-fun m!161103 () Bool)

(assert (=> b!135149 m!161103))

(declare-fun m!161105 () Bool)

(assert (=> b!135146 m!161105))

(declare-fun m!161107 () Bool)

(assert (=> b!135155 m!161107))

(assert (=> b!135155 m!156809))

(declare-fun m!161109 () Bool)

(assert (=> b!135155 m!161109))

(declare-fun m!161111 () Bool)

(assert (=> b!135155 m!161111))

(declare-fun m!161113 () Bool)

(assert (=> b!135155 m!161113))

(assert (=> b!135155 m!161107))

(declare-fun m!161115 () Bool)

(assert (=> b!135155 m!161115))

(assert (=> b!135155 m!161111))

(declare-fun m!161117 () Bool)

(assert (=> b!135155 m!161117))

(assert (=> b!135155 m!157443))

(assert (=> b!135155 m!156809))

(assert (=> b!135152 m!157443))

(assert (=> b!135152 m!157443))

(declare-fun m!161119 () Bool)

(assert (=> b!135152 m!161119))

(declare-fun m!161121 () Bool)

(assert (=> d!42039 m!161121))

(assert (=> d!42039 m!156651))

(assert (=> bm!14849 m!161103))

(assert (=> b!135145 m!161107))

(assert (=> b!135145 m!156809))

(assert (=> b!135145 m!161109))

(assert (=> b!135145 m!161107))

(assert (=> b!135145 m!157443))

(declare-fun m!161123 () Bool)

(assert (=> b!135145 m!161123))

(assert (=> b!135145 m!157443))

(assert (=> b!135145 m!156809))

(assert (=> bm!14757 d!42039))

(assert (=> d!40881 d!40591))

(declare-fun b!135157 () Bool)

(declare-fun e!88022 () SeekEntryResult!269)

(assert (=> b!135157 (= e!88022 (Found!269 (index!3238 lt!70096)))))

(declare-fun b!135158 () Bool)

(declare-fun e!88021 () SeekEntryResult!269)

(assert (=> b!135158 (= e!88021 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15586 lt!70096) #b00000000000000000000000000000001) (nextIndex!0 (index!3238 lt!70096) (bvadd (x!15586 lt!70096) #b00000000000000000000000000000001) (mask!7164 newMap!16)) (index!3238 lt!70096) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(declare-fun b!135159 () Bool)

(declare-fun e!88023 () SeekEntryResult!269)

(assert (=> b!135159 (= e!88023 e!88022)))

(declare-fun c!25225 () Bool)

(declare-fun lt!70725 () (_ BitVec 64))

(assert (=> b!135159 (= c!25225 (= lt!70725 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135160 () Bool)

(assert (=> b!135160 (= e!88021 (MissingVacant!269 (index!3238 lt!70096)))))

(declare-fun b!135161 () Bool)

(assert (=> b!135161 (= e!88023 Undefined!269)))

(declare-fun d!42041 () Bool)

(declare-fun lt!70726 () SeekEntryResult!269)

(assert (=> d!42041 (and (or ((_ is Undefined!269) lt!70726) (not ((_ is Found!269) lt!70726)) (and (bvsge (index!3237 lt!70726) #b00000000000000000000000000000000) (bvslt (index!3237 lt!70726) (size!2521 (_keys!4613 newMap!16))))) (or ((_ is Undefined!269) lt!70726) ((_ is Found!269) lt!70726) (not ((_ is MissingVacant!269) lt!70726)) (not (= (index!3239 lt!70726) (index!3238 lt!70096))) (and (bvsge (index!3239 lt!70726) #b00000000000000000000000000000000) (bvslt (index!3239 lt!70726) (size!2521 (_keys!4613 newMap!16))))) (or ((_ is Undefined!269) lt!70726) (ite ((_ is Found!269) lt!70726) (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!70726)) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!269) lt!70726) (= (index!3239 lt!70726) (index!3238 lt!70096)) (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3239 lt!70726)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!42041 (= lt!70726 e!88023)))

(declare-fun c!25226 () Bool)

(assert (=> d!42041 (= c!25226 (bvsge (x!15586 lt!70096) #b01111111111111111111111111111110))))

(assert (=> d!42041 (= lt!70725 (select (arr!2252 (_keys!4613 newMap!16)) (index!3238 lt!70096)))))

(assert (=> d!42041 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!42041 (= (seekKeyOrZeroReturnVacant!0 (x!15586 lt!70096) (index!3238 lt!70096) (index!3238 lt!70096) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (_keys!4613 newMap!16) (mask!7164 newMap!16)) lt!70726)))

(declare-fun b!135162 () Bool)

(declare-fun c!25227 () Bool)

(assert (=> b!135162 (= c!25227 (= lt!70725 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135162 (= e!88022 e!88021)))

(assert (= (and d!42041 c!25226) b!135161))

(assert (= (and d!42041 (not c!25226)) b!135159))

(assert (= (and b!135159 c!25225) b!135157))

(assert (= (and b!135159 (not c!25225)) b!135162))

(assert (= (and b!135162 c!25227) b!135160))

(assert (= (and b!135162 (not c!25227)) b!135158))

(declare-fun m!161125 () Bool)

(assert (=> b!135158 m!161125))

(assert (=> b!135158 m!161125))

(assert (=> b!135158 m!156679))

(declare-fun m!161127 () Bool)

(assert (=> b!135158 m!161127))

(declare-fun m!161129 () Bool)

(assert (=> d!42041 m!161129))

(declare-fun m!161131 () Bool)

(assert (=> d!42041 m!161131))

(assert (=> d!42041 m!158553))

(assert (=> d!42041 m!156651))

(assert (=> b!133907 d!42041))

(declare-fun b!135164 () Bool)

(declare-fun e!88024 () Option!179)

(declare-fun e!88025 () Option!179)

(assert (=> b!135164 (= e!88024 e!88025)))

(declare-fun c!25229 () Bool)

(assert (=> b!135164 (= c!25229 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69634))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69634)))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!135163 () Bool)

(assert (=> b!135163 (= e!88024 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 lt!69634))))))))

(declare-fun c!25228 () Bool)

(declare-fun d!42043 () Bool)

(assert (=> d!42043 (= c!25228 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69634))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69634)))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!42043 (= (getValueByKey!173 (t!6137 (toList!842 lt!69634)) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!88024)))

(declare-fun b!135166 () Bool)

(assert (=> b!135166 (= e!88025 None!177)))

(declare-fun b!135165 () Bool)

(assert (=> b!135165 (= e!88025 (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69634))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!42043 c!25228) b!135163))

(assert (= (and d!42043 (not c!25228)) b!135164))

(assert (= (and b!135164 c!25229) b!135165))

(assert (= (and b!135164 (not c!25229)) b!135166))

(declare-fun m!161133 () Bool)

(assert (=> b!135165 m!161133))

(assert (=> b!133801 d!42043))

(declare-fun b!135167 () Bool)

(declare-fun lt!70727 () SeekEntryResult!269)

(assert (=> b!135167 (and (bvsge (index!3238 lt!70727) #b00000000000000000000000000000000) (bvslt (index!3238 lt!70727) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun e!88026 () Bool)

(assert (=> b!135167 (= e!88026 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3238 lt!70727)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135168 () Bool)

(declare-fun e!88027 () SeekEntryResult!269)

(assert (=> b!135168 (= e!88027 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (mask!7164 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (mask!7164 newMap!16)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(declare-fun b!135169 () Bool)

(declare-fun e!88028 () SeekEntryResult!269)

(assert (=> b!135169 (= e!88028 (Intermediate!269 true (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (mask!7164 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!135170 () Bool)

(assert (=> b!135170 (= e!88027 (Intermediate!269 false (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (mask!7164 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!135171 () Bool)

(assert (=> b!135171 (= e!88028 e!88027)))

(declare-fun lt!70728 () (_ BitVec 64))

(declare-fun c!25232 () Bool)

(assert (=> b!135171 (= c!25232 (or (= lt!70728 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (= (bvadd lt!70728 lt!70728) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135173 () Bool)

(assert (=> b!135173 (and (bvsge (index!3238 lt!70727) #b00000000000000000000000000000000) (bvslt (index!3238 lt!70727) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!64944 () Bool)

(assert (=> b!135173 (= res!64944 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3238 lt!70727)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> b!135173 (=> res!64944 e!88026)))

(declare-fun e!88029 () Bool)

(assert (=> b!135173 (= e!88029 e!88026)))

(declare-fun b!135174 () Bool)

(declare-fun e!88030 () Bool)

(assert (=> b!135174 (= e!88030 e!88029)))

(declare-fun res!64946 () Bool)

(assert (=> b!135174 (= res!64946 (and ((_ is Intermediate!269) lt!70727) (not (undefined!1081 lt!70727)) (bvslt (x!15586 lt!70727) #b01111111111111111111111111111110) (bvsge (x!15586 lt!70727) #b00000000000000000000000000000000) (bvsge (x!15586 lt!70727) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135174 (=> (not res!64946) (not e!88029))))

(declare-fun b!135175 () Bool)

(assert (=> b!135175 (and (bvsge (index!3238 lt!70727) #b00000000000000000000000000000000) (bvslt (index!3238 lt!70727) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!64945 () Bool)

(assert (=> b!135175 (= res!64945 (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3238 lt!70727)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135175 (=> res!64945 e!88026)))

(declare-fun d!42045 () Bool)

(assert (=> d!42045 e!88030))

(declare-fun c!25230 () Bool)

(assert (=> d!42045 (= c!25230 (and ((_ is Intermediate!269) lt!70727) (undefined!1081 lt!70727)))))

(assert (=> d!42045 (= lt!70727 e!88028)))

(declare-fun c!25231 () Bool)

(assert (=> d!42045 (= c!25231 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(assert (=> d!42045 (= lt!70728 (select (arr!2252 (_keys!4613 newMap!16)) (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (mask!7164 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 newMap!16))))))

(assert (=> d!42045 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!42045 (= (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (mask!7164 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 newMap!16)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)) lt!70727)))

(declare-fun b!135172 () Bool)

(assert (=> b!135172 (= e!88030 (bvsge (x!15586 lt!70727) #b01111111111111111111111111111110))))

(assert (= (and d!42045 c!25231) b!135169))

(assert (= (and d!42045 (not c!25231)) b!135171))

(assert (= (and b!135171 c!25232) b!135170))

(assert (= (and b!135171 (not c!25232)) b!135168))

(assert (= (and d!42045 c!25230) b!135172))

(assert (= (and d!42045 (not c!25230)) b!135174))

(assert (= (and b!135174 res!64946) b!135173))

(assert (= (and b!135173 (not res!64944)) b!135175))

(assert (= (and b!135175 (not res!64945)) b!135167))

(declare-fun m!161135 () Bool)

(assert (=> b!135167 m!161135))

(assert (=> d!42045 m!158619))

(declare-fun m!161137 () Bool)

(assert (=> d!42045 m!161137))

(assert (=> d!42045 m!156651))

(assert (=> b!135175 m!161135))

(assert (=> b!135168 m!158619))

(declare-fun m!161139 () Bool)

(assert (=> b!135168 m!161139))

(assert (=> b!135168 m!161139))

(assert (=> b!135168 m!156395))

(declare-fun m!161141 () Bool)

(assert (=> b!135168 m!161141))

(assert (=> b!135173 m!161135))

(assert (=> b!133948 d!42045))

(declare-fun d!42047 () Bool)

(declare-fun lt!70731 () (_ BitVec 32))

(assert (=> d!42047 (and (bvsge lt!70731 #b00000000000000000000000000000000) (bvslt lt!70731 (bvadd (mask!7164 newMap!16) #b00000000000000000000000000000001)))))

(declare-fun choose!52 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!42047 (= lt!70731 (choose!52 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (mask!7164 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 newMap!16)))))

(assert (=> d!42047 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!42047 (= (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (mask!7164 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 newMap!16)) lt!70731)))

(declare-fun bs!5677 () Bool)

(assert (= bs!5677 d!42047))

(assert (=> bs!5677 m!156653))

(declare-fun m!161143 () Bool)

(assert (=> bs!5677 m!161143))

(assert (=> bs!5677 m!156651))

(assert (=> b!133948 d!42047))

(declare-fun b!135177 () Bool)

(declare-fun e!88031 () Option!179)

(declare-fun e!88032 () Option!179)

(assert (=> b!135177 (= e!88031 e!88032)))

(declare-fun c!25234 () Bool)

(assert (=> b!135177 (= c!25234 (and ((_ is Cons!1690) (toList!842 lt!69868)) (not (= (_1!1293 (h!2295 (toList!842 lt!69868))) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))))

(declare-fun b!135176 () Bool)

(assert (=> b!135176 (= e!88031 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69868)))))))

(declare-fun d!42049 () Bool)

(declare-fun c!25233 () Bool)

(assert (=> d!42049 (= c!25233 (and ((_ is Cons!1690) (toList!842 lt!69868)) (= (_1!1293 (h!2295 (toList!842 lt!69868))) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))))))

(assert (=> d!42049 (= (getValueByKey!173 (toList!842 lt!69868) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))) e!88031)))

(declare-fun b!135179 () Bool)

(assert (=> b!135179 (= e!88032 None!177)))

(declare-fun b!135178 () Bool)

(assert (=> b!135178 (= e!88032 (getValueByKey!173 (t!6137 (toList!842 lt!69868)) (_1!1293 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))))

(assert (= (and d!42049 c!25233) b!135176))

(assert (= (and d!42049 (not c!25233)) b!135177))

(assert (= (and b!135177 c!25234) b!135178))

(assert (= (and b!135177 (not c!25234)) b!135179))

(declare-fun m!161145 () Bool)

(assert (=> b!135178 m!161145))

(assert (=> b!133553 d!42049))

(declare-fun d!42051 () Bool)

(assert (=> d!42051 (isDefined!125 (getValueByKey!173 (toList!842 lt!69504) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!70732 () Unit!4141)

(assert (=> d!42051 (= lt!70732 (choose!831 (toList!842 lt!69504) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!88033 () Bool)

(assert (=> d!42051 e!88033))

(declare-fun res!64947 () Bool)

(assert (=> d!42051 (=> (not res!64947) (not e!88033))))

(assert (=> d!42051 (= res!64947 (isStrictlySorted!309 (toList!842 lt!69504)))))

(assert (=> d!42051 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69504) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) lt!70732)))

(declare-fun b!135180 () Bool)

(assert (=> b!135180 (= e!88033 (containsKey!176 (toList!842 lt!69504) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!42051 res!64947) b!135180))

(assert (=> d!42051 m!156679))

(assert (=> d!42051 m!157389))

(assert (=> d!42051 m!157389))

(assert (=> d!42051 m!157903))

(assert (=> d!42051 m!156679))

(declare-fun m!161147 () Bool)

(assert (=> d!42051 m!161147))

(assert (=> d!42051 m!160173))

(assert (=> b!135180 m!156679))

(assert (=> b!135180 m!157899))

(assert (=> b!133579 d!42051))

(declare-fun d!42053 () Bool)

(assert (=> d!42053 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69504) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69504) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun bs!5678 () Bool)

(assert (= bs!5678 d!42053))

(assert (=> bs!5678 m!157389))

(declare-fun m!161149 () Bool)

(assert (=> bs!5678 m!161149))

(assert (=> b!133579 d!42053))

(declare-fun b!135182 () Bool)

(declare-fun e!88034 () Option!179)

(declare-fun e!88035 () Option!179)

(assert (=> b!135182 (= e!88034 e!88035)))

(declare-fun c!25236 () Bool)

(assert (=> b!135182 (= c!25236 (and ((_ is Cons!1690) (toList!842 lt!69504)) (not (= (_1!1293 (h!2295 (toList!842 lt!69504))) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))))

(declare-fun b!135181 () Bool)

(assert (=> b!135181 (= e!88034 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69504)))))))

(declare-fun d!42055 () Bool)

(declare-fun c!25235 () Bool)

(assert (=> d!42055 (= c!25235 (and ((_ is Cons!1690) (toList!842 lt!69504)) (= (_1!1293 (h!2295 (toList!842 lt!69504))) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!42055 (= (getValueByKey!173 (toList!842 lt!69504) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) e!88034)))

(declare-fun b!135184 () Bool)

(assert (=> b!135184 (= e!88035 None!177)))

(declare-fun b!135183 () Bool)

(assert (=> b!135183 (= e!88035 (getValueByKey!173 (t!6137 (toList!842 lt!69504)) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!42055 c!25235) b!135181))

(assert (= (and d!42055 (not c!25235)) b!135182))

(assert (= (and b!135182 c!25236) b!135183))

(assert (= (and b!135182 (not c!25236)) b!135184))

(assert (=> b!135183 m!156679))

(declare-fun m!161151 () Bool)

(assert (=> b!135183 m!161151))

(assert (=> b!133579 d!42055))

(declare-fun b!135186 () Bool)

(declare-fun e!88036 () Option!179)

(declare-fun e!88037 () Option!179)

(assert (=> b!135186 (= e!88036 e!88037)))

(declare-fun c!25238 () Bool)

(assert (=> b!135186 (= c!25238 (and ((_ is Cons!1690) (toList!842 lt!70153)) (not (= (_1!1293 (h!2295 (toList!842 lt!70153))) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!135185 () Bool)

(assert (=> b!135185 (= e!88036 (Some!178 (_2!1293 (h!2295 (toList!842 lt!70153)))))))

(declare-fun d!42057 () Bool)

(declare-fun c!25237 () Bool)

(assert (=> d!42057 (= c!25237 (and ((_ is Cons!1690) (toList!842 lt!70153)) (= (_1!1293 (h!2295 (toList!842 lt!70153))) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!42057 (= (getValueByKey!173 (toList!842 lt!70153) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) e!88036)))

(declare-fun b!135188 () Bool)

(assert (=> b!135188 (= e!88037 None!177)))

(declare-fun b!135187 () Bool)

(assert (=> b!135187 (= e!88037 (getValueByKey!173 (t!6137 (toList!842 lt!70153)) (_1!1293 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (= (and d!42057 c!25237) b!135185))

(assert (= (and d!42057 (not c!25237)) b!135186))

(assert (= (and b!135186 c!25238) b!135187))

(assert (= (and b!135186 (not c!25238)) b!135188))

(declare-fun m!161153 () Bool)

(assert (=> b!135187 m!161153))

(assert (=> b!134018 d!42057))

(declare-fun d!42059 () Bool)

(assert (=> d!42059 (arrayContainsKey!0 (_keys!4613 newMap!16) lt!69724 #b00000000000000000000000000000000)))

(declare-fun lt!70733 () Unit!4141)

(assert (=> d!42059 (= lt!70733 (choose!13 (_keys!4613 newMap!16) lt!69724 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> d!42059 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!42059 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 newMap!16) lt!69724 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!70733)))

(declare-fun bs!5679 () Bool)

(assert (= bs!5679 d!42059))

(assert (=> bs!5679 m!157447))

(declare-fun m!161155 () Bool)

(assert (=> bs!5679 m!161155))

(assert (=> b!133370 d!42059))

(declare-fun d!42061 () Bool)

(declare-fun res!64948 () Bool)

(declare-fun e!88038 () Bool)

(assert (=> d!42061 (=> res!64948 e!88038)))

(assert (=> d!42061 (= res!64948 (= (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) lt!69724))))

(assert (=> d!42061 (= (arrayContainsKey!0 (_keys!4613 newMap!16) lt!69724 #b00000000000000000000000000000000) e!88038)))

(declare-fun b!135189 () Bool)

(declare-fun e!88039 () Bool)

(assert (=> b!135189 (= e!88038 e!88039)))

(declare-fun res!64949 () Bool)

(assert (=> b!135189 (=> (not res!64949) (not e!88039))))

(assert (=> b!135189 (= res!64949 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!135190 () Bool)

(assert (=> b!135190 (= e!88039 (arrayContainsKey!0 (_keys!4613 newMap!16) lt!69724 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!42061 (not res!64948)) b!135189))

(assert (= (and b!135189 res!64949) b!135190))

(assert (=> d!42061 m!156679))

(declare-fun m!161157 () Bool)

(assert (=> b!135190 m!161157))

(assert (=> b!133370 d!42061))

(declare-fun b!135191 () Bool)

(declare-fun c!25239 () Bool)

(declare-fun lt!70735 () (_ BitVec 64))

(assert (=> b!135191 (= c!25239 (= lt!70735 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88041 () SeekEntryResult!269)

(declare-fun e!88042 () SeekEntryResult!269)

(assert (=> b!135191 (= e!88041 e!88042)))

(declare-fun d!42063 () Bool)

(declare-fun lt!70734 () SeekEntryResult!269)

(assert (=> d!42063 (and (or ((_ is Undefined!269) lt!70734) (not ((_ is Found!269) lt!70734)) (and (bvsge (index!3237 lt!70734) #b00000000000000000000000000000000) (bvslt (index!3237 lt!70734) (size!2521 (_keys!4613 newMap!16))))) (or ((_ is Undefined!269) lt!70734) ((_ is Found!269) lt!70734) (not ((_ is MissingZero!269) lt!70734)) (and (bvsge (index!3236 lt!70734) #b00000000000000000000000000000000) (bvslt (index!3236 lt!70734) (size!2521 (_keys!4613 newMap!16))))) (or ((_ is Undefined!269) lt!70734) ((_ is Found!269) lt!70734) ((_ is MissingZero!269) lt!70734) (not ((_ is MissingVacant!269) lt!70734)) (and (bvsge (index!3239 lt!70734) #b00000000000000000000000000000000) (bvslt (index!3239 lt!70734) (size!2521 (_keys!4613 newMap!16))))) (or ((_ is Undefined!269) lt!70734) (ite ((_ is Found!269) lt!70734) (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!70734)) (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!269) lt!70734) (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3236 lt!70734)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!269) lt!70734) (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3239 lt!70734)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88040 () SeekEntryResult!269)

(assert (=> d!42063 (= lt!70734 e!88040)))

(declare-fun c!25241 () Bool)

(declare-fun lt!70736 () SeekEntryResult!269)

(assert (=> d!42063 (= c!25241 (and ((_ is Intermediate!269) lt!70736) (undefined!1081 lt!70736)))))

(assert (=> d!42063 (= lt!70736 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7164 newMap!16)) (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(assert (=> d!42063 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!42063 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4613 newMap!16) (mask!7164 newMap!16)) lt!70734)))

(declare-fun b!135192 () Bool)

(assert (=> b!135192 (= e!88042 (seekKeyOrZeroReturnVacant!0 (x!15586 lt!70736) (index!3238 lt!70736) (index!3238 lt!70736) (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(declare-fun b!135193 () Bool)

(assert (=> b!135193 (= e!88042 (MissingZero!269 (index!3238 lt!70736)))))

(declare-fun b!135194 () Bool)

(assert (=> b!135194 (= e!88040 e!88041)))

(assert (=> b!135194 (= lt!70735 (select (arr!2252 (_keys!4613 newMap!16)) (index!3238 lt!70736)))))

(declare-fun c!25240 () Bool)

(assert (=> b!135194 (= c!25240 (= lt!70735 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135195 () Bool)

(assert (=> b!135195 (= e!88041 (Found!269 (index!3238 lt!70736)))))

(declare-fun b!135196 () Bool)

(assert (=> b!135196 (= e!88040 Undefined!269)))

(assert (= (and d!42063 c!25241) b!135196))

(assert (= (and d!42063 (not c!25241)) b!135194))

(assert (= (and b!135194 c!25240) b!135195))

(assert (= (and b!135194 (not c!25240)) b!135191))

(assert (= (and b!135191 c!25239) b!135193))

(assert (= (and b!135191 (not c!25239)) b!135192))

(assert (=> d!42063 m!157443))

(declare-fun m!161159 () Bool)

(assert (=> d!42063 m!161159))

(assert (=> d!42063 m!156651))

(assert (=> d!42063 m!161159))

(assert (=> d!42063 m!157443))

(declare-fun m!161161 () Bool)

(assert (=> d!42063 m!161161))

(declare-fun m!161163 () Bool)

(assert (=> d!42063 m!161163))

(declare-fun m!161165 () Bool)

(assert (=> d!42063 m!161165))

(declare-fun m!161167 () Bool)

(assert (=> d!42063 m!161167))

(assert (=> b!135192 m!157443))

(declare-fun m!161169 () Bool)

(assert (=> b!135192 m!161169))

(declare-fun m!161171 () Bool)

(assert (=> b!135194 m!161171))

(assert (=> b!133370 d!42063))

(declare-fun d!42065 () Bool)

(assert (=> d!42065 (= (inRange!0 (index!3237 lt!69751) (mask!7164 newMap!16)) (and (bvsge (index!3237 lt!69751) #b00000000000000000000000000000000) (bvslt (index!3237 lt!69751) (bvadd (mask!7164 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!133402 d!42065))

(declare-fun d!42067 () Bool)

(declare-fun res!64950 () Bool)

(declare-fun e!88043 () Bool)

(assert (=> d!42067 (=> res!64950 e!88043)))

(assert (=> d!42067 (= res!64950 (and ((_ is Cons!1690) lt!69984) (= (_1!1293 (h!2295 lt!69984)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42067 (= (containsKey!176 lt!69984 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88043)))

(declare-fun b!135197 () Bool)

(declare-fun e!88044 () Bool)

(assert (=> b!135197 (= e!88043 e!88044)))

(declare-fun res!64951 () Bool)

(assert (=> b!135197 (=> (not res!64951) (not e!88044))))

(assert (=> b!135197 (= res!64951 (and (or (not ((_ is Cons!1690) lt!69984)) (bvsle (_1!1293 (h!2295 lt!69984)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) ((_ is Cons!1690) lt!69984) (bvslt (_1!1293 (h!2295 lt!69984)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135198 () Bool)

(assert (=> b!135198 (= e!88044 (containsKey!176 (t!6137 lt!69984) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42067 (not res!64950)) b!135197))

(assert (= (and b!135197 res!64951) b!135198))

(declare-fun m!161173 () Bool)

(assert (=> b!135198 m!161173))

(assert (=> b!133761 d!42067))

(assert (=> d!40869 d!40581))

(assert (=> d!40869 d!40583))

(declare-fun d!42069 () Bool)

(assert (=> d!42069 (isDefined!125 (getValueByKey!173 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(assert (=> d!42069 true))

(declare-fun _$12!403 () Unit!4141)

(assert (=> d!42069 (= (choose!831 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))) _$12!403)))

(declare-fun bs!5680 () Bool)

(assert (= bs!5680 d!42069))

(assert (=> bs!5680 m!156941))

(assert (=> bs!5680 m!156941))

(assert (=> bs!5680 m!156943))

(assert (=> d!40869 d!42069))

(declare-fun d!42071 () Bool)

(declare-fun res!64952 () Bool)

(declare-fun e!88045 () Bool)

(assert (=> d!42071 (=> res!64952 e!88045)))

(assert (=> d!42071 (= res!64952 (or ((_ is Nil!1691) (toList!842 e!86556)) ((_ is Nil!1691) (t!6137 (toList!842 e!86556)))))))

(assert (=> d!42071 (= (isStrictlySorted!309 (toList!842 e!86556)) e!88045)))

(declare-fun b!135199 () Bool)

(declare-fun e!88046 () Bool)

(assert (=> b!135199 (= e!88045 e!88046)))

(declare-fun res!64953 () Bool)

(assert (=> b!135199 (=> (not res!64953) (not e!88046))))

(assert (=> b!135199 (= res!64953 (bvslt (_1!1293 (h!2295 (toList!842 e!86556))) (_1!1293 (h!2295 (t!6137 (toList!842 e!86556))))))))

(declare-fun b!135200 () Bool)

(assert (=> b!135200 (= e!88046 (isStrictlySorted!309 (t!6137 (toList!842 e!86556))))))

(assert (= (and d!42071 (not res!64952)) b!135199))

(assert (= (and b!135199 res!64953) b!135200))

(declare-fun m!161175 () Bool)

(assert (=> b!135200 m!161175))

(assert (=> d!40869 d!42071))

(declare-fun d!42073 () Bool)

(assert (=> d!42073 (= (isEmpty!415 lt!69702) (isEmpty!417 (toList!842 lt!69702)))))

(declare-fun bs!5681 () Bool)

(assert (= bs!5681 d!42073))

(declare-fun m!161177 () Bool)

(assert (=> bs!5681 m!161177))

(assert (=> b!133296 d!42073))

(declare-fun b!135201 () Bool)

(declare-fun e!88049 () Bool)

(declare-fun call!14853 () Bool)

(assert (=> b!135201 (= e!88049 call!14853)))

(declare-fun b!135202 () Bool)

(declare-fun e!88047 () Bool)

(assert (=> b!135202 (= e!88049 e!88047)))

(declare-fun lt!70738 () (_ BitVec 64))

(assert (=> b!135202 (= lt!70738 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000))))

(declare-fun lt!70737 () Unit!4141)

(assert (=> b!135202 (= lt!70737 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 (_2!1294 lt!69445)) lt!70738 #b00000000000000000000000000000000))))

(assert (=> b!135202 (arrayContainsKey!0 (_keys!4613 (_2!1294 lt!69445)) lt!70738 #b00000000000000000000000000000000)))

(declare-fun lt!70739 () Unit!4141)

(assert (=> b!135202 (= lt!70739 lt!70737)))

(declare-fun res!64954 () Bool)

(assert (=> b!135202 (= res!64954 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000) (_keys!4613 (_2!1294 lt!69445)) (mask!7164 (_2!1294 lt!69445))) (Found!269 #b00000000000000000000000000000000)))))

(assert (=> b!135202 (=> (not res!64954) (not e!88047))))

(declare-fun b!135203 () Bool)

(declare-fun e!88048 () Bool)

(assert (=> b!135203 (= e!88048 e!88049)))

(declare-fun c!25242 () Bool)

(assert (=> b!135203 (= c!25242 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000)))))

(declare-fun b!135204 () Bool)

(assert (=> b!135204 (= e!88047 call!14853)))

(declare-fun d!42075 () Bool)

(declare-fun res!64955 () Bool)

(assert (=> d!42075 (=> res!64955 e!88048)))

(assert (=> d!42075 (= res!64955 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69445)))))))

(assert (=> d!42075 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4613 (_2!1294 lt!69445)) (mask!7164 (_2!1294 lt!69445))) e!88048)))

(declare-fun bm!14850 () Bool)

(assert (=> bm!14850 (= call!14853 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4613 (_2!1294 lt!69445)) (mask!7164 (_2!1294 lt!69445))))))

(assert (= (and d!42075 (not res!64955)) b!135203))

(assert (= (and b!135203 c!25242) b!135202))

(assert (= (and b!135203 (not c!25242)) b!135201))

(assert (= (and b!135202 res!64954) b!135204))

(assert (= (or b!135204 b!135201) bm!14850))

(assert (=> b!135202 m!159403))

(declare-fun m!161179 () Bool)

(assert (=> b!135202 m!161179))

(declare-fun m!161181 () Bool)

(assert (=> b!135202 m!161181))

(assert (=> b!135202 m!159403))

(declare-fun m!161183 () Bool)

(assert (=> b!135202 m!161183))

(assert (=> b!135203 m!159403))

(assert (=> b!135203 m!159403))

(assert (=> b!135203 m!159405))

(declare-fun m!161185 () Bool)

(assert (=> bm!14850 m!161185))

(assert (=> b!133583 d!42075))

(declare-fun d!42077 () Bool)

(declare-fun res!64956 () Bool)

(declare-fun e!88050 () Bool)

(assert (=> d!42077 (=> res!64956 e!88050)))

(assert (=> d!42077 (= res!64956 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) lt!69494)))))

(assert (=> d!42077 (= (containsKey!176 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69494) e!88050)))

(declare-fun b!135205 () Bool)

(declare-fun e!88051 () Bool)

(assert (=> b!135205 (= e!88050 e!88051)))

(declare-fun res!64957 () Bool)

(assert (=> b!135205 (=> (not res!64957) (not e!88051))))

(assert (=> b!135205 (= res!64957 (and (or (not ((_ is Cons!1690) (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) (bvsle (_1!1293 (h!2295 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) lt!69494)) ((_ is Cons!1690) (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) (bvslt (_1!1293 (h!2295 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) lt!69494)))))

(declare-fun b!135206 () Bool)

(assert (=> b!135206 (= e!88051 (containsKey!176 (t!6137 (toList!842 (+!169 lt!69495 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) lt!69494))))

(assert (= (and d!42077 (not res!64956)) b!135205))

(assert (= (and b!135205 res!64957) b!135206))

(declare-fun m!161187 () Bool)

(assert (=> b!135206 m!161187))

(assert (=> d!40717 d!42077))

(declare-fun b!135208 () Bool)

(declare-fun e!88052 () Option!179)

(declare-fun e!88053 () Option!179)

(assert (=> b!135208 (= e!88052 e!88053)))

(declare-fun c!25244 () Bool)

(assert (=> b!135208 (= c!25244 (and ((_ is Cons!1690) (toList!842 lt!70080)) (not (= (_1!1293 (h!2295 (toList!842 lt!70080))) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!135207 () Bool)

(assert (=> b!135207 (= e!88052 (Some!178 (_2!1293 (h!2295 (toList!842 lt!70080)))))))

(declare-fun d!42079 () Bool)

(declare-fun c!25243 () Bool)

(assert (=> d!42079 (= c!25243 (and ((_ is Cons!1690) (toList!842 lt!70080)) (= (_1!1293 (h!2295 (toList!842 lt!70080))) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16))))))))

(assert (=> d!42079 (= (getValueByKey!173 (toList!842 lt!70080) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))) e!88052)))

(declare-fun b!135210 () Bool)

(assert (=> b!135210 (= e!88053 None!177)))

(declare-fun b!135209 () Bool)

(assert (=> b!135209 (= e!88053 (getValueByKey!173 (t!6137 (toList!842 lt!70080)) (_1!1293 (tuple2!2565 lt!69535 (zeroValue!2719 newMap!16)))))))

(assert (= (and d!42079 c!25243) b!135207))

(assert (= (and d!42079 (not c!25243)) b!135208))

(assert (= (and b!135208 c!25244) b!135209))

(assert (= (and b!135208 (not c!25244)) b!135210))

(declare-fun m!161189 () Bool)

(assert (=> b!135209 m!161189))

(assert (=> b!133891 d!42079))

(declare-fun d!42081 () Bool)

(declare-fun res!64958 () Bool)

(declare-fun e!88054 () Bool)

(assert (=> d!42081 (=> res!64958 e!88054)))

(assert (=> d!42081 (= res!64958 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))))))))

(assert (=> d!42081 (= (containsKey!176 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))) e!88054)))

(declare-fun b!135211 () Bool)

(declare-fun e!88055 () Bool)

(assert (=> b!135211 (= e!88054 e!88055)))

(declare-fun res!64959 () Bool)

(assert (=> b!135211 (=> (not res!64959) (not e!88055))))

(assert (=> b!135211 (= res!64959 (and (or (not ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (bvsle (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))))) ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvslt (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))))))))

(declare-fun b!135212 () Bool)

(assert (=> b!135212 (= e!88055 (containsKey!176 (t!6137 (toList!842 (getCurrentListMap!518 lt!69441 lt!69466 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))))))

(assert (= (and d!42081 (not res!64958)) b!135211))

(assert (= (and b!135211 res!64959) b!135212))

(assert (=> b!135212 m!156725))

(declare-fun m!161191 () Bool)

(assert (=> b!135212 m!161191))

(assert (=> d!40665 d!42081))

(declare-fun d!42083 () Bool)

(declare-fun lt!70740 () Bool)

(assert (=> d!42083 (= lt!70740 (select (content!134 (toList!842 lt!69754)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!88057 () Bool)

(assert (=> d!42083 (= lt!70740 e!88057)))

(declare-fun res!64961 () Bool)

(assert (=> d!42083 (=> (not res!64961) (not e!88057))))

(assert (=> d!42083 (= res!64961 ((_ is Cons!1690) (toList!842 lt!69754)))))

(assert (=> d!42083 (= (contains!886 (toList!842 lt!69754) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70740)))

(declare-fun b!135213 () Bool)

(declare-fun e!88056 () Bool)

(assert (=> b!135213 (= e!88057 e!88056)))

(declare-fun res!64960 () Bool)

(assert (=> b!135213 (=> res!64960 e!88056)))

(assert (=> b!135213 (= res!64960 (= (h!2295 (toList!842 lt!69754)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135214 () Bool)

(assert (=> b!135214 (= e!88056 (contains!886 (t!6137 (toList!842 lt!69754)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42083 res!64961) b!135213))

(assert (= (and b!135213 (not res!64960)) b!135214))

(declare-fun m!161193 () Bool)

(assert (=> d!42083 m!161193))

(declare-fun m!161195 () Bool)

(assert (=> d!42083 m!161195))

(declare-fun m!161197 () Bool)

(assert (=> b!135214 m!161197))

(assert (=> b!133405 d!42083))

(declare-fun b!135215 () Bool)

(declare-fun e!88060 () Bool)

(assert (=> b!135215 (= e!88060 (contains!885 (ite c!24809 (Cons!1689 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000) Nil!1690) Nil!1690) (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135216 () Bool)

(declare-fun e!88058 () Bool)

(declare-fun call!14854 () Bool)

(assert (=> b!135216 (= e!88058 call!14854)))

(declare-fun b!135217 () Bool)

(declare-fun e!88061 () Bool)

(declare-fun e!88059 () Bool)

(assert (=> b!135217 (= e!88061 e!88059)))

(declare-fun res!64963 () Bool)

(assert (=> b!135217 (=> (not res!64963) (not e!88059))))

(assert (=> b!135217 (= res!64963 (not e!88060))))

(declare-fun res!64964 () Bool)

(assert (=> b!135217 (=> (not res!64964) (not e!88060))))

(assert (=> b!135217 (= res!64964 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun c!25245 () Bool)

(declare-fun bm!14851 () Bool)

(assert (=> bm!14851 (= call!14854 (arrayNoDuplicates!0 (_keys!4613 (_2!1294 lt!69280)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!25245 (Cons!1689 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24809 (Cons!1689 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24809 (Cons!1689 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))))))

(declare-fun d!42085 () Bool)

(declare-fun res!64962 () Bool)

(assert (=> d!42085 (=> res!64962 e!88061)))

(assert (=> d!42085 (= res!64962 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (_2!1294 lt!69280)))))))

(assert (=> d!42085 (= (arrayNoDuplicates!0 (_keys!4613 (_2!1294 lt!69280)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!24809 (Cons!1689 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) e!88061)))

(declare-fun b!135218 () Bool)

(assert (=> b!135218 (= e!88059 e!88058)))

(assert (=> b!135218 (= c!25245 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135219 () Bool)

(assert (=> b!135219 (= e!88058 call!14854)))

(assert (= (and d!42085 (not res!64962)) b!135217))

(assert (= (and b!135217 res!64964) b!135215))

(assert (= (and b!135217 res!64963) b!135218))

(assert (= (and b!135218 c!25245) b!135216))

(assert (= (and b!135218 (not c!25245)) b!135219))

(assert (= (or b!135216 b!135219) bm!14851))

(assert (=> b!135215 m!159245))

(assert (=> b!135215 m!159245))

(declare-fun m!161199 () Bool)

(assert (=> b!135215 m!161199))

(assert (=> b!135217 m!159245))

(assert (=> b!135217 m!159245))

(assert (=> b!135217 m!159253))

(assert (=> bm!14851 m!159245))

(declare-fun m!161201 () Bool)

(assert (=> bm!14851 m!161201))

(assert (=> b!135218 m!159245))

(assert (=> b!135218 m!159245))

(assert (=> b!135218 m!159253))

(assert (=> bm!14752 d!42085))

(declare-fun d!42087 () Bool)

(declare-fun res!64965 () Bool)

(declare-fun e!88062 () Bool)

(assert (=> d!42087 (=> res!64965 e!88062)))

(assert (=> d!42087 (= res!64965 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485)))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))))) lt!69488)))))

(assert (=> d!42087 (= (containsKey!176 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))) lt!69488) e!88062)))

(declare-fun b!135220 () Bool)

(declare-fun e!88063 () Bool)

(assert (=> b!135220 (= e!88062 e!88063)))

(declare-fun res!64966 () Bool)

(assert (=> b!135220 (=> (not res!64966) (not e!88063))))

(assert (=> b!135220 (= res!64966 (and (or (not ((_ is Cons!1690) (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))))) (bvsle (_1!1293 (h!2295 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))))) lt!69488)) ((_ is Cons!1690) (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485)))) (bvslt (_1!1293 (h!2295 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485))))) lt!69488)))))

(declare-fun b!135221 () Bool)

(assert (=> b!135221 (= e!88063 (containsKey!176 (t!6137 (toList!842 (+!169 lt!69482 (tuple2!2565 lt!69484 lt!69485)))) lt!69488))))

(assert (= (and d!42087 (not res!64965)) b!135220))

(assert (= (and b!135220 res!64966) b!135221))

(declare-fun m!161203 () Bool)

(assert (=> b!135221 m!161203))

(assert (=> d!40863 d!42087))

(assert (=> b!133358 d!40761))

(declare-fun b!135223 () Bool)

(declare-fun e!88064 () Option!179)

(declare-fun e!88065 () Option!179)

(assert (=> b!135223 (= e!88064 e!88065)))

(declare-fun c!25247 () Bool)

(assert (=> b!135223 (= c!25247 (and ((_ is Cons!1690) (t!6137 lt!69631)) (not (= (_1!1293 (h!2295 (t!6137 lt!69631))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!135222 () Bool)

(assert (=> b!135222 (= e!88064 (Some!178 (_2!1293 (h!2295 (t!6137 lt!69631)))))))

(declare-fun d!42089 () Bool)

(declare-fun c!25246 () Bool)

(assert (=> d!42089 (= c!25246 (and ((_ is Cons!1690) (t!6137 lt!69631)) (= (_1!1293 (h!2295 (t!6137 lt!69631))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!42089 (= (getValueByKey!173 (t!6137 lt!69631) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!88064)))

(declare-fun b!135225 () Bool)

(assert (=> b!135225 (= e!88065 None!177)))

(declare-fun b!135224 () Bool)

(assert (=> b!135224 (= e!88065 (getValueByKey!173 (t!6137 (t!6137 lt!69631)) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!42089 c!25246) b!135222))

(assert (= (and d!42089 (not c!25246)) b!135223))

(assert (= (and b!135223 c!25247) b!135224))

(assert (= (and b!135223 (not c!25247)) b!135225))

(declare-fun m!161205 () Bool)

(assert (=> b!135224 m!161205))

(assert (=> b!133648 d!42089))

(declare-fun d!42091 () Bool)

(assert (=> d!42091 (= ($colon$colon!91 e!87245 (ite c!24864 (h!2295 (toList!842 call!14628)) (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (Cons!1690 (ite c!24864 (h!2295 (toList!842 call!14628)) (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) e!87245))))

(assert (=> bm!14769 d!42091))

(assert (=> b!133481 d!41569))

(declare-fun b!135226 () Bool)

(declare-fun e!88067 () SeekEntryResult!269)

(assert (=> b!135226 (= e!88067 (Found!269 (nextIndex!0 (index!3238 lt!69592) (bvadd (x!15586 lt!69592) #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!135227 () Bool)

(declare-fun e!88066 () SeekEntryResult!269)

(assert (=> b!135227 (= e!88066 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15586 lt!69592) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (index!3238 lt!69592) (bvadd (x!15586 lt!69592) #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (bvadd (x!15586 lt!69592) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!69592) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!135228 () Bool)

(declare-fun e!88068 () SeekEntryResult!269)

(assert (=> b!135228 (= e!88068 e!88067)))

(declare-fun c!25248 () Bool)

(declare-fun lt!70741 () (_ BitVec 64))

(assert (=> b!135228 (= c!25248 (= lt!70741 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!135229 () Bool)

(assert (=> b!135229 (= e!88066 (MissingVacant!269 (index!3238 lt!69592)))))

(declare-fun b!135230 () Bool)

(assert (=> b!135230 (= e!88068 Undefined!269)))

(declare-fun d!42093 () Bool)

(declare-fun lt!70742 () SeekEntryResult!269)

(assert (=> d!42093 (and (or ((_ is Undefined!269) lt!70742) (not ((_ is Found!269) lt!70742)) (and (bvsge (index!3237 lt!70742) #b00000000000000000000000000000000) (bvslt (index!3237 lt!70742) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))) (or ((_ is Undefined!269) lt!70742) ((_ is Found!269) lt!70742) (not ((_ is MissingVacant!269) lt!70742)) (not (= (index!3239 lt!70742) (index!3238 lt!69592))) (and (bvsge (index!3239 lt!70742) #b00000000000000000000000000000000) (bvslt (index!3239 lt!70742) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))) (or ((_ is Undefined!269) lt!70742) (ite ((_ is Found!269) lt!70742) (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3237 lt!70742)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)) (and ((_ is MissingVacant!269) lt!70742) (= (index!3239 lt!70742) (index!3238 lt!69592)) (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3239 lt!70742)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!42093 (= lt!70742 e!88068)))

(declare-fun c!25249 () Bool)

(assert (=> d!42093 (= c!25249 (bvsge (bvadd (x!15586 lt!69592) #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(assert (=> d!42093 (= lt!70741 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (nextIndex!0 (index!3238 lt!69592) (bvadd (x!15586 lt!69592) #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!42093 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!42093 (= (seekKeyOrZeroReturnVacant!0 (bvadd (x!15586 lt!69592) #b00000000000000000000000000000001) (nextIndex!0 (index!3238 lt!69592) (bvadd (x!15586 lt!69592) #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!69592) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) lt!70742)))

(declare-fun b!135231 () Bool)

(declare-fun c!25250 () Bool)

(assert (=> b!135231 (= c!25250 (= lt!70741 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135231 (= e!88067 e!88066)))

(assert (= (and d!42093 c!25249) b!135230))

(assert (= (and d!42093 (not c!25249)) b!135228))

(assert (= (and b!135228 c!25248) b!135226))

(assert (= (and b!135228 (not c!25248)) b!135231))

(assert (= (and b!135231 c!25250) b!135229))

(assert (= (and b!135231 (not c!25250)) b!135227))

(assert (=> b!135227 m!158395))

(declare-fun m!161207 () Bool)

(assert (=> b!135227 m!161207))

(assert (=> b!135227 m!161207))

(assert (=> b!135227 m!156495))

(declare-fun m!161209 () Bool)

(assert (=> b!135227 m!161209))

(declare-fun m!161211 () Bool)

(assert (=> d!42093 m!161211))

(declare-fun m!161213 () Bool)

(assert (=> d!42093 m!161213))

(assert (=> d!42093 m!158395))

(declare-fun m!161215 () Bool)

(assert (=> d!42093 m!161215))

(assert (=> d!42093 m!156405))

(assert (=> b!133869 d!42093))

(declare-fun d!42095 () Bool)

(declare-fun lt!70743 () (_ BitVec 32))

(assert (=> d!42095 (and (bvsge lt!70743 #b00000000000000000000000000000000) (bvslt lt!70743 (bvadd (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000001)))))

(assert (=> d!42095 (= lt!70743 (choose!52 (index!3238 lt!69592) (bvadd (x!15586 lt!69592) #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(assert (=> d!42095 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!42095 (= (nextIndex!0 (index!3238 lt!69592) (bvadd (x!15586 lt!69592) #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))) lt!70743)))

(declare-fun bs!5682 () Bool)

(assert (= bs!5682 d!42095))

(declare-fun m!161217 () Bool)

(assert (=> bs!5682 m!161217))

(assert (=> bs!5682 m!156405))

(assert (=> b!133869 d!42095))

(declare-fun d!42097 () Bool)

(declare-fun res!64967 () Bool)

(declare-fun e!88069 () Bool)

(assert (=> d!42097 (=> res!64967 e!88069)))

(assert (=> d!42097 (= res!64967 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) lt!69193))))

(assert (=> d!42097 (= (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69193 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!88069)))

(declare-fun b!135232 () Bool)

(declare-fun e!88070 () Bool)

(assert (=> b!135232 (= e!88069 e!88070)))

(declare-fun res!64968 () Bool)

(assert (=> b!135232 (=> (not res!64968) (not e!88070))))

(assert (=> b!135232 (= res!64968 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!135233 () Bool)

(assert (=> b!135233 (= e!88070 (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69193 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!42097 (not res!64967)) b!135232))

(assert (= (and b!135232 res!64968) b!135233))

(assert (=> d!42097 m!157231))

(declare-fun m!161219 () Bool)

(assert (=> b!135233 m!161219))

(assert (=> b!133397 d!42097))

(declare-fun d!42099 () Bool)

(assert (=> d!42099 (= ($colon$colon!91 e!87067 (ite c!24772 (h!2295 (toList!842 lt!69335)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (Cons!1690 (ite c!24772 (h!2295 (toList!842 lt!69335)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) e!87067))))

(assert (=> bm!14731 d!42099))

(declare-fun b!135235 () Bool)

(declare-fun e!88071 () Option!179)

(declare-fun e!88072 () Option!179)

(assert (=> b!135235 (= e!88071 e!88072)))

(declare-fun c!25252 () Bool)

(assert (=> b!135235 (= c!25252 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69630))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69630)))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!135234 () Bool)

(assert (=> b!135234 (= e!88071 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 lt!69630))))))))

(declare-fun d!42101 () Bool)

(declare-fun c!25251 () Bool)

(assert (=> d!42101 (= c!25251 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69630))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69630)))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!42101 (= (getValueByKey!173 (t!6137 (toList!842 lt!69630)) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!88071)))

(declare-fun b!135237 () Bool)

(assert (=> b!135237 (= e!88072 None!177)))

(declare-fun b!135236 () Bool)

(assert (=> b!135236 (= e!88072 (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69630))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!42101 c!25251) b!135234))

(assert (= (and d!42101 (not c!25251)) b!135235))

(assert (= (and b!135235 c!25252) b!135236))

(assert (= (and b!135235 (not c!25252)) b!135237))

(declare-fun m!161221 () Bool)

(assert (=> b!135236 m!161221))

(assert (=> b!133773 d!42101))

(declare-fun lt!70744 () Bool)

(declare-fun d!42103 () Bool)

(assert (=> d!42103 (= lt!70744 (select (content!134 lt!69374) (tuple2!2565 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!88074 () Bool)

(assert (=> d!42103 (= lt!70744 e!88074)))

(declare-fun res!64970 () Bool)

(assert (=> d!42103 (=> (not res!64970) (not e!88074))))

(assert (=> d!42103 (= res!64970 ((_ is Cons!1690) lt!69374))))

(assert (=> d!42103 (= (contains!886 lt!69374 (tuple2!2565 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) lt!70744)))

(declare-fun b!135238 () Bool)

(declare-fun e!88073 () Bool)

(assert (=> b!135238 (= e!88074 e!88073)))

(declare-fun res!64969 () Bool)

(assert (=> b!135238 (=> res!64969 e!88073)))

(assert (=> b!135238 (= res!64969 (= (h!2295 lt!69374) (tuple2!2565 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135239 () Bool)

(assert (=> b!135239 (= e!88073 (contains!886 (t!6137 lt!69374) (tuple2!2565 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!42103 res!64970) b!135238))

(assert (= (and b!135238 (not res!64969)) b!135239))

(declare-fun m!161223 () Bool)

(assert (=> d!42103 m!161223))

(declare-fun m!161225 () Bool)

(assert (=> d!42103 m!161225))

(declare-fun m!161227 () Bool)

(assert (=> b!135239 m!161227))

(assert (=> b!133323 d!42103))

(declare-fun b!135240 () Bool)

(declare-fun e!88077 () Bool)

(declare-fun call!14855 () Bool)

(assert (=> b!135240 (= e!88077 call!14855)))

(declare-fun b!135241 () Bool)

(declare-fun e!88075 () Bool)

(assert (=> b!135241 (= e!88077 e!88075)))

(declare-fun lt!70746 () (_ BitVec 64))

(assert (=> b!135241 (= lt!70746 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!70745 () Unit!4141)

(assert (=> b!135241 (= lt!70745 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!70746 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!135241 (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!70746 #b00000000000000000000000000000000)))

(declare-fun lt!70747 () Unit!4141)

(assert (=> b!135241 (= lt!70747 lt!70745)))

(declare-fun res!64971 () Bool)

(assert (=> b!135241 (= res!64971 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (Found!269 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!135241 (=> (not res!64971) (not e!88075))))

(declare-fun b!135242 () Bool)

(declare-fun e!88076 () Bool)

(assert (=> b!135242 (= e!88076 e!88077)))

(declare-fun c!25253 () Bool)

(assert (=> b!135242 (= c!25253 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!135243 () Bool)

(assert (=> b!135243 (= e!88075 call!14855)))

(declare-fun d!42105 () Bool)

(declare-fun res!64972 () Bool)

(assert (=> d!42105 (=> res!64972 e!88076)))

(assert (=> d!42105 (= res!64972 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!42105 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) e!88076)))

(declare-fun bm!14852 () Bool)

(assert (=> bm!14852 (= call!14855 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(assert (= (and d!42105 (not res!64972)) b!135242))

(assert (= (and b!135242 c!25253) b!135241))

(assert (= (and b!135242 (not c!25253)) b!135240))

(assert (= (and b!135241 res!64971) b!135243))

(assert (= (or b!135243 b!135240) bm!14852))

(assert (=> b!135241 m!160917))

(declare-fun m!161229 () Bool)

(assert (=> b!135241 m!161229))

(declare-fun m!161231 () Bool)

(assert (=> b!135241 m!161231))

(assert (=> b!135241 m!160917))

(declare-fun m!161233 () Bool)

(assert (=> b!135241 m!161233))

(assert (=> b!135242 m!160917))

(assert (=> b!135242 m!160917))

(assert (=> b!135242 m!160921))

(declare-fun m!161235 () Bool)

(assert (=> bm!14852 m!161235))

(assert (=> bm!14678 d!42105))

(declare-fun b!135245 () Bool)

(declare-fun e!88078 () Option!179)

(declare-fun e!88079 () Option!179)

(assert (=> b!135245 (= e!88078 e!88079)))

(declare-fun c!25255 () Bool)

(assert (=> b!135245 (= c!25255 (and ((_ is Cons!1690) (t!6137 (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))) lt!69345))))))

(declare-fun b!135244 () Bool)

(assert (=> b!135244 (= e!88078 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))))

(declare-fun d!42107 () Bool)

(declare-fun c!25254 () Bool)

(assert (=> d!42107 (= c!25254 (and ((_ is Cons!1690) (t!6137 (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (= (_1!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))) lt!69345)))))

(assert (=> d!42107 (= (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!69345) e!88078)))

(declare-fun b!135247 () Bool)

(assert (=> b!135247 (= e!88079 None!177)))

(declare-fun b!135246 () Bool)

(assert (=> b!135246 (= e!88079 (getValueByKey!173 (t!6137 (t!6137 (toList!842 (+!169 lt!69339 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69345))))

(assert (= (and d!42107 c!25254) b!135244))

(assert (= (and d!42107 (not c!25254)) b!135245))

(assert (= (and b!135245 c!25255) b!135246))

(assert (= (and b!135245 (not c!25255)) b!135247))

(declare-fun m!161237 () Bool)

(assert (=> b!135246 m!161237))

(assert (=> b!133500 d!42107))

(declare-fun lt!70748 () Bool)

(declare-fun d!42109 () Bool)

(assert (=> d!42109 (= lt!70748 (select (content!134 lt!69606) (tuple2!2565 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun e!88081 () Bool)

(assert (=> d!42109 (= lt!70748 e!88081)))

(declare-fun res!64974 () Bool)

(assert (=> d!42109 (=> (not res!64974) (not e!88081))))

(assert (=> d!42109 (= res!64974 ((_ is Cons!1690) lt!69606))))

(assert (=> d!42109 (= (contains!886 lt!69606 (tuple2!2565 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!70748)))

(declare-fun b!135248 () Bool)

(declare-fun e!88080 () Bool)

(assert (=> b!135248 (= e!88081 e!88080)))

(declare-fun res!64973 () Bool)

(assert (=> b!135248 (=> res!64973 e!88080)))

(assert (=> b!135248 (= res!64973 (= (h!2295 lt!69606) (tuple2!2565 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!135249 () Bool)

(assert (=> b!135249 (= e!88080 (contains!886 (t!6137 lt!69606) (tuple2!2565 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (= (and d!42109 res!64974) b!135248))

(assert (= (and b!135248 (not res!64973)) b!135249))

(declare-fun m!161239 () Bool)

(assert (=> d!42109 m!161239))

(declare-fun m!161241 () Bool)

(assert (=> d!42109 m!161241))

(declare-fun m!161243 () Bool)

(assert (=> b!135249 m!161243))

(assert (=> b!134041 d!42109))

(declare-fun d!42111 () Bool)

(assert (=> d!42111 (= (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)))) (and (not (= (select (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!133446 d!42111))

(declare-fun d!42113 () Bool)

(assert (=> d!42113 (isDefined!125 (getValueByKey!173 (toList!842 lt!69630) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun lt!70749 () Unit!4141)

(assert (=> d!42113 (= lt!70749 (choose!831 (toList!842 lt!69630) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun e!88082 () Bool)

(assert (=> d!42113 e!88082))

(declare-fun res!64975 () Bool)

(assert (=> d!42113 (=> (not res!64975) (not e!88082))))

(assert (=> d!42113 (= res!64975 (isStrictlySorted!309 (toList!842 lt!69630)))))

(assert (=> d!42113 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69630) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70749)))

(declare-fun b!135250 () Bool)

(assert (=> b!135250 (= e!88082 (containsKey!176 (toList!842 lt!69630) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!42113 res!64975) b!135250))

(assert (=> d!42113 m!157129))

(assert (=> d!42113 m!157129))

(assert (=> d!42113 m!157967))

(declare-fun m!161245 () Bool)

(assert (=> d!42113 m!161245))

(declare-fun m!161247 () Bool)

(assert (=> d!42113 m!161247))

(assert (=> b!135250 m!157963))

(assert (=> b!133643 d!42113))

(declare-fun d!42115 () Bool)

(assert (=> d!42115 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69630) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69630) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun bs!5683 () Bool)

(assert (= bs!5683 d!42115))

(assert (=> bs!5683 m!157129))

(declare-fun m!161249 () Bool)

(assert (=> bs!5683 m!161249))

(assert (=> b!133643 d!42115))

(assert (=> b!133643 d!40855))

(declare-fun d!42117 () Bool)

(assert (=> d!42117 (= (apply!116 lt!70032 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!70032) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5684 () Bool)

(assert (= bs!5684 d!42117))

(assert (=> bs!5684 m!160643))

(assert (=> bs!5684 m!160643))

(declare-fun m!161251 () Bool)

(assert (=> bs!5684 m!161251))

(assert (=> b!133824 d!42117))

(declare-fun b!135252 () Bool)

(declare-fun e!88083 () Option!179)

(declare-fun e!88084 () Option!179)

(assert (=> b!135252 (= e!88083 e!88084)))

(declare-fun c!25257 () Bool)

(assert (=> b!135252 (= c!25257 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69605))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69605)))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))))

(declare-fun b!135251 () Bool)

(assert (=> b!135251 (= e!88083 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 lt!69605))))))))

(declare-fun d!42119 () Bool)

(declare-fun c!25256 () Bool)

(assert (=> d!42119 (= c!25256 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69605))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69605)))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (=> d!42119 (= (getValueByKey!173 (t!6137 (toList!842 lt!69605)) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) e!88083)))

(declare-fun b!135254 () Bool)

(assert (=> b!135254 (= e!88084 None!177)))

(declare-fun b!135253 () Bool)

(assert (=> b!135253 (= e!88084 (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69605))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!42119 c!25256) b!135251))

(assert (= (and d!42119 (not c!25256)) b!135252))

(assert (= (and b!135252 c!25257) b!135253))

(assert (= (and b!135252 (not c!25257)) b!135254))

(declare-fun m!161253 () Bool)

(assert (=> b!135253 m!161253))

(assert (=> b!134028 d!42119))

(declare-fun d!42121 () Bool)

(assert (=> d!42121 (= (isEmpty!416 (getValueByKey!173 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000)) (not ((_ is Some!178) (getValueByKey!173 (toList!842 lt!69344) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!40845 d!42121))

(assert (=> b!133807 d!42039))

(assert (=> b!133246 d!40621))

(assert (=> b!133743 d!41183))

(assert (=> d!40815 d!40591))

(declare-fun d!42123 () Bool)

(assert (=> d!42123 (= (apply!116 lt!69738 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69738) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5685 () Bool)

(assert (= bs!5685 d!42123))

(assert (=> bs!5685 m!160617))

(assert (=> bs!5685 m!160617))

(declare-fun m!161255 () Bool)

(assert (=> bs!5685 m!161255))

(assert (=> b!133378 d!42123))

(assert (=> b!133777 d!40621))

(declare-fun d!42125 () Bool)

(assert (=> d!42125 (= ($colon$colon!91 e!87286 (ite c!24888 (h!2295 (toList!842 lt!69341)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (Cons!1690 (ite c!24888 (h!2295 (toList!842 lt!69341)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) e!87286))))

(assert (=> bm!14774 d!42125))

(declare-fun d!42127 () Bool)

(declare-fun e!88086 () Bool)

(assert (=> d!42127 e!88086))

(declare-fun res!64976 () Bool)

(assert (=> d!42127 (=> res!64976 e!88086)))

(declare-fun lt!70750 () Bool)

(assert (=> d!42127 (= res!64976 (not lt!70750))))

(declare-fun lt!70751 () Bool)

(assert (=> d!42127 (= lt!70750 lt!70751)))

(declare-fun lt!70752 () Unit!4141)

(declare-fun e!88085 () Unit!4141)

(assert (=> d!42127 (= lt!70752 e!88085)))

(declare-fun c!25258 () Bool)

(assert (=> d!42127 (= c!25258 lt!70751)))

(assert (=> d!42127 (= lt!70751 (containsKey!176 (toList!842 lt!69702) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42127 (= (contains!884 lt!69702 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70750)))

(declare-fun b!135255 () Bool)

(declare-fun lt!70753 () Unit!4141)

(assert (=> b!135255 (= e!88085 lt!70753)))

(assert (=> b!135255 (= lt!70753 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69702) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135255 (isDefined!125 (getValueByKey!173 (toList!842 lt!69702) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135256 () Bool)

(declare-fun Unit!4247 () Unit!4141)

(assert (=> b!135256 (= e!88085 Unit!4247)))

(declare-fun b!135257 () Bool)

(assert (=> b!135257 (= e!88086 (isDefined!125 (getValueByKey!173 (toList!842 lt!69702) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42127 c!25258) b!135255))

(assert (= (and d!42127 (not c!25258)) b!135256))

(assert (= (and d!42127 (not res!64976)) b!135257))

(declare-fun m!161257 () Bool)

(assert (=> d!42127 m!161257))

(declare-fun m!161259 () Bool)

(assert (=> b!135255 m!161259))

(declare-fun m!161261 () Bool)

(assert (=> b!135255 m!161261))

(assert (=> b!135255 m!161261))

(declare-fun m!161263 () Bool)

(assert (=> b!135255 m!161263))

(assert (=> b!135257 m!161261))

(assert (=> b!135257 m!161261))

(assert (=> b!135257 m!161263))

(assert (=> d!40609 d!42127))

(assert (=> d!40609 d!40591))

(declare-fun d!42129 () Bool)

(declare-fun res!64977 () Bool)

(declare-fun e!88087 () Bool)

(assert (=> d!42129 (=> res!64977 e!88087)))

(assert (=> d!42129 (= res!64977 (= (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!42129 (= (arrayContainsKey!0 (_keys!4613 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!88087)))

(declare-fun b!135258 () Bool)

(declare-fun e!88088 () Bool)

(assert (=> b!135258 (= e!88087 e!88088)))

(declare-fun res!64978 () Bool)

(assert (=> b!135258 (=> (not res!64978) (not e!88088))))

(assert (=> b!135258 (= res!64978 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!135259 () Bool)

(assert (=> b!135259 (= e!88088 (arrayContainsKey!0 (_keys!4613 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!42129 (not res!64977)) b!135258))

(assert (= (and b!135258 res!64978) b!135259))

(assert (=> d!42129 m!160165))

(assert (=> b!135259 m!156395))

(declare-fun m!161265 () Bool)

(assert (=> b!135259 m!161265))

(assert (=> b!134071 d!42129))

(declare-fun d!42131 () Bool)

(declare-fun res!64979 () Bool)

(declare-fun e!88089 () Bool)

(assert (=> d!42131 (=> res!64979 e!88089)))

(assert (=> d!42131 (= res!64979 (and ((_ is Cons!1690) lt!69915) (= (_1!1293 (h!2295 lt!69915)) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!42131 (= (containsKey!176 lt!69915 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!88089)))

(declare-fun b!135260 () Bool)

(declare-fun e!88090 () Bool)

(assert (=> b!135260 (= e!88089 e!88090)))

(declare-fun res!64980 () Bool)

(assert (=> b!135260 (=> (not res!64980) (not e!88090))))

(assert (=> b!135260 (= res!64980 (and (or (not ((_ is Cons!1690) lt!69915)) (bvsle (_1!1293 (h!2295 lt!69915)) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Cons!1690) lt!69915) (bvslt (_1!1293 (h!2295 lt!69915)) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!135261 () Bool)

(assert (=> b!135261 (= e!88090 (containsKey!176 (t!6137 lt!69915) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!42131 (not res!64979)) b!135260))

(assert (= (and b!135260 res!64980) b!135261))

(declare-fun m!161267 () Bool)

(assert (=> b!135261 m!161267))

(assert (=> b!133652 d!42131))

(declare-fun d!42133 () Bool)

(declare-fun res!64981 () Bool)

(declare-fun e!88091 () Bool)

(assert (=> d!42133 (=> res!64981 e!88091)))

(assert (=> d!42133 (= res!64981 (and ((_ is Cons!1690) lt!69718) (= (_1!1293 (h!2295 lt!69718)) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!42133 (= (containsKey!176 lt!69718 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!88091)))

(declare-fun b!135262 () Bool)

(declare-fun e!88092 () Bool)

(assert (=> b!135262 (= e!88091 e!88092)))

(declare-fun res!64982 () Bool)

(assert (=> b!135262 (=> (not res!64982) (not e!88092))))

(assert (=> b!135262 (= res!64982 (and (or (not ((_ is Cons!1690) lt!69718)) (bvsle (_1!1293 (h!2295 lt!69718)) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1690) lt!69718) (bvslt (_1!1293 (h!2295 lt!69718)) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135263 () Bool)

(assert (=> b!135263 (= e!88092 (containsKey!176 (t!6137 lt!69718) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42133 (not res!64981)) b!135262))

(assert (= (and b!135262 res!64982) b!135263))

(declare-fun m!161269 () Bool)

(assert (=> b!135263 m!161269))

(assert (=> b!133344 d!42133))

(declare-fun d!42135 () Bool)

(declare-fun res!64983 () Bool)

(declare-fun e!88093 () Bool)

(assert (=> d!42135 (=> res!64983 e!88093)))

(assert (=> d!42135 (= res!64983 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))) lt!69567)))))

(assert (=> d!42135 (= (containsKey!176 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) lt!69567) e!88093)))

(declare-fun b!135264 () Bool)

(declare-fun e!88094 () Bool)

(assert (=> b!135264 (= e!88093 e!88094)))

(declare-fun res!64984 () Bool)

(assert (=> b!135264 (=> (not res!64984) (not e!88094))))

(assert (=> b!135264 (= res!64984 (and (or (not ((_ is Cons!1690) (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))) (bvsle (_1!1293 (h!2295 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))) lt!69567)) ((_ is Cons!1690) (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))) (bvslt (_1!1293 (h!2295 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))) lt!69567)))))

(declare-fun b!135265 () Bool)

(assert (=> b!135265 (= e!88094 (containsKey!176 (t!6137 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))) lt!69567))))

(assert (= (and d!42135 (not res!64983)) b!135264))

(assert (= (and b!135264 res!64984) b!135265))

(declare-fun m!161271 () Bool)

(assert (=> b!135265 m!161271))

(assert (=> d!41047 d!42135))

(assert (=> b!133965 d!41535))

(assert (=> b!133306 d!41701))

(declare-fun d!42137 () Bool)

(declare-fun lt!70754 () Bool)

(assert (=> d!42137 (= lt!70754 (select (content!133 (t!6136 (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!88096 () Bool)

(assert (=> d!42137 (= lt!70754 e!88096)))

(declare-fun res!64985 () Bool)

(assert (=> d!42137 (=> (not res!64985) (not e!88096))))

(assert (=> d!42137 (= res!64985 ((_ is Cons!1689) (t!6136 (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))))))

(assert (=> d!42137 (= (contains!885 (t!6136 (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!70754)))

(declare-fun b!135266 () Bool)

(declare-fun e!88095 () Bool)

(assert (=> b!135266 (= e!88096 e!88095)))

(declare-fun res!64986 () Bool)

(assert (=> b!135266 (=> res!64986 e!88095)))

(assert (=> b!135266 (= res!64986 (= (h!2294 (t!6136 (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135267 () Bool)

(assert (=> b!135267 (= e!88095 (contains!885 (t!6136 (t!6136 (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!42137 res!64985) b!135266))

(assert (= (and b!135266 (not res!64986)) b!135267))

(declare-fun m!161273 () Bool)

(assert (=> d!42137 m!161273))

(assert (=> d!42137 m!157015))

(declare-fun m!161275 () Bool)

(assert (=> d!42137 m!161275))

(assert (=> b!135267 m!157015))

(declare-fun m!161277 () Bool)

(assert (=> b!135267 m!161277))

(assert (=> b!133395 d!42137))

(declare-fun d!42139 () Bool)

(assert (=> d!42139 (= (apply!116 lt!69779 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69779) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5686 () Bool)

(assert (= bs!5686 d!42139))

(assert (=> bs!5686 m!160817))

(assert (=> bs!5686 m!160817))

(declare-fun m!161279 () Bool)

(assert (=> bs!5686 m!161279))

(assert (=> b!133422 d!42139))

(declare-fun b!135269 () Bool)

(declare-fun e!88097 () Option!179)

(declare-fun e!88098 () Option!179)

(assert (=> b!135269 (= e!88097 e!88098)))

(declare-fun c!25260 () Bool)

(assert (=> b!135269 (= c!25260 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69649))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69649)))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!135268 () Bool)

(assert (=> b!135268 (= e!88097 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 lt!69649))))))))

(declare-fun d!42141 () Bool)

(declare-fun c!25259 () Bool)

(assert (=> d!42141 (= c!25259 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69649))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69649)))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!42141 (= (getValueByKey!173 (t!6137 (toList!842 lt!69649)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!88097)))

(declare-fun b!135271 () Bool)

(assert (=> b!135271 (= e!88098 None!177)))

(declare-fun b!135270 () Bool)

(assert (=> b!135270 (= e!88098 (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69649))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!42141 c!25259) b!135268))

(assert (= (and d!42141 (not c!25259)) b!135269))

(assert (= (and b!135269 c!25260) b!135270))

(assert (= (and b!135269 (not c!25260)) b!135271))

(declare-fun m!161281 () Bool)

(assert (=> b!135270 m!161281))

(assert (=> b!133982 d!42141))

(declare-fun d!42143 () Bool)

(assert (=> d!42143 (= (size!2527 (v!3198 (underlying!454 thiss!992))) (bvadd (_size!597 (v!3198 (underlying!454 thiss!992))) (bvsdiv (bvadd (extraKeys!2629 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!134009 d!42143))

(assert (=> b!133917 d!42017))

(assert (=> b!133917 d!41003))

(assert (=> b!133897 d!42021))

(assert (=> b!133897 d!42023))

(declare-fun d!42145 () Bool)

(declare-fun e!88099 () Bool)

(assert (=> d!42145 e!88099))

(declare-fun res!64988 () Bool)

(assert (=> d!42145 (=> (not res!64988) (not e!88099))))

(declare-fun lt!70757 () ListLongMap!1653)

(assert (=> d!42145 (= res!64988 (contains!884 lt!70757 (_1!1293 (ite (or c!24732 c!24734) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!70758 () List!1694)

(assert (=> d!42145 (= lt!70757 (ListLongMap!1654 lt!70758))))

(declare-fun lt!70755 () Unit!4141)

(declare-fun lt!70756 () Unit!4141)

(assert (=> d!42145 (= lt!70755 lt!70756)))

(assert (=> d!42145 (= (getValueByKey!173 lt!70758 (_1!1293 (ite (or c!24732 c!24734) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24732 c!24734) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42145 (= lt!70756 (lemmaContainsTupThenGetReturnValue!88 lt!70758 (_1!1293 (ite (or c!24732 c!24734) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24732 c!24734) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42145 (= lt!70758 (insertStrictlySorted!91 (toList!842 (ite c!24732 call!14717 (ite c!24734 call!14718 call!14720))) (_1!1293 (ite (or c!24732 c!24734) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24732 c!24734) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42145 (= (+!169 (ite c!24732 call!14717 (ite c!24734 call!14718 call!14720)) (ite (or c!24732 c!24734) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70757)))

(declare-fun b!135272 () Bool)

(declare-fun res!64987 () Bool)

(assert (=> b!135272 (=> (not res!64987) (not e!88099))))

(assert (=> b!135272 (= res!64987 (= (getValueByKey!173 (toList!842 lt!70757) (_1!1293 (ite (or c!24732 c!24734) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24732 c!24734) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!135273 () Bool)

(assert (=> b!135273 (= e!88099 (contains!886 (toList!842 lt!70757) (ite (or c!24732 c!24734) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!42145 res!64988) b!135272))

(assert (= (and b!135272 res!64987) b!135273))

(declare-fun m!161283 () Bool)

(assert (=> d!42145 m!161283))

(declare-fun m!161285 () Bool)

(assert (=> d!42145 m!161285))

(declare-fun m!161287 () Bool)

(assert (=> d!42145 m!161287))

(declare-fun m!161289 () Bool)

(assert (=> d!42145 m!161289))

(declare-fun m!161291 () Bool)

(assert (=> b!135272 m!161291))

(declare-fun m!161293 () Bool)

(assert (=> b!135273 m!161293))

(assert (=> bm!14713 d!42145))

(assert (=> b!133621 d!41965))

(assert (=> b!133621 d!40841))

(assert (=> d!41043 d!41035))

(assert (=> d!41043 d!41025))

(declare-fun d!42147 () Bool)

(declare-fun e!88101 () Bool)

(assert (=> d!42147 e!88101))

(declare-fun res!64989 () Bool)

(assert (=> d!42147 (=> res!64989 e!88101)))

(declare-fun lt!70759 () Bool)

(assert (=> d!42147 (= res!64989 (not lt!70759))))

(declare-fun lt!70760 () Bool)

(assert (=> d!42147 (= lt!70759 lt!70760)))

(declare-fun lt!70761 () Unit!4141)

(declare-fun e!88100 () Unit!4141)

(assert (=> d!42147 (= lt!70761 e!88100)))

(declare-fun c!25261 () Bool)

(assert (=> d!42147 (= c!25261 lt!70760)))

(assert (=> d!42147 (= lt!70760 (containsKey!176 (toList!842 lt!69572) lt!69578))))

(assert (=> d!42147 (= (contains!884 lt!69572 lt!69578) lt!70759)))

(declare-fun b!135274 () Bool)

(declare-fun lt!70762 () Unit!4141)

(assert (=> b!135274 (= e!88100 lt!70762)))

(assert (=> b!135274 (= lt!70762 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69572) lt!69578))))

(assert (=> b!135274 (isDefined!125 (getValueByKey!173 (toList!842 lt!69572) lt!69578))))

(declare-fun b!135275 () Bool)

(declare-fun Unit!4248 () Unit!4141)

(assert (=> b!135275 (= e!88100 Unit!4248)))

(declare-fun b!135276 () Bool)

(assert (=> b!135276 (= e!88101 (isDefined!125 (getValueByKey!173 (toList!842 lt!69572) lt!69578)))))

(assert (= (and d!42147 c!25261) b!135274))

(assert (= (and d!42147 (not c!25261)) b!135275))

(assert (= (and d!42147 (not res!64989)) b!135276))

(declare-fun m!161295 () Bool)

(assert (=> d!42147 m!161295))

(declare-fun m!161297 () Bool)

(assert (=> b!135274 m!161297))

(assert (=> b!135274 m!158713))

(assert (=> b!135274 m!158713))

(declare-fun m!161299 () Bool)

(assert (=> b!135274 m!161299))

(assert (=> b!135276 m!158713))

(assert (=> b!135276 m!158713))

(assert (=> b!135276 m!161299))

(assert (=> d!41043 d!42147))

(assert (=> d!41043 d!41045))

(declare-fun d!42149 () Bool)

(assert (=> d!42149 (= (apply!116 (+!169 lt!69572 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69578) (apply!116 lt!69572 lt!69578))))

(assert (=> d!42149 true))

(declare-fun _$34!984 () Unit!4141)

(assert (=> d!42149 (= (choose!828 lt!69572 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69578) _$34!984)))

(declare-fun bs!5687 () Bool)

(assert (= bs!5687 d!42149))

(assert (=> bs!5687 m!156977))

(assert (=> bs!5687 m!156977))

(assert (=> bs!5687 m!156979))

(assert (=> bs!5687 m!156963))

(assert (=> d!41043 d!42149))

(assert (=> d!40749 d!40545))

(assert (=> d!40749 d!40537))

(assert (=> d!40749 d!40551))

(declare-fun d!42151 () Bool)

(declare-fun e!88103 () Bool)

(assert (=> d!42151 e!88103))

(declare-fun res!64990 () Bool)

(assert (=> d!42151 (=> res!64990 e!88103)))

(declare-fun lt!70763 () Bool)

(assert (=> d!42151 (= res!64990 (not lt!70763))))

(declare-fun lt!70764 () Bool)

(assert (=> d!42151 (= lt!70763 lt!70764)))

(declare-fun lt!70765 () Unit!4141)

(declare-fun e!88102 () Unit!4141)

(assert (=> d!42151 (= lt!70765 e!88102)))

(declare-fun c!25262 () Bool)

(assert (=> d!42151 (= c!25262 lt!70764)))

(assert (=> d!42151 (= lt!70764 (containsKey!176 (toList!842 lt!70047) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!42151 (= (contains!884 lt!70047 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70763)))

(declare-fun b!135277 () Bool)

(declare-fun lt!70766 () Unit!4141)

(assert (=> b!135277 (= e!88102 lt!70766)))

(assert (=> b!135277 (= lt!70766 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70047) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> b!135277 (isDefined!125 (getValueByKey!173 (toList!842 lt!70047) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!135278 () Bool)

(declare-fun Unit!4249 () Unit!4141)

(assert (=> b!135278 (= e!88102 Unit!4249)))

(declare-fun b!135279 () Bool)

(assert (=> b!135279 (= e!88103 (isDefined!125 (getValueByKey!173 (toList!842 lt!70047) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (= (and d!42151 c!25262) b!135277))

(assert (= (and d!42151 (not c!25262)) b!135278))

(assert (= (and d!42151 (not res!64990)) b!135279))

(declare-fun m!161301 () Bool)

(assert (=> d!42151 m!161301))

(declare-fun m!161303 () Bool)

(assert (=> b!135277 m!161303))

(assert (=> b!135277 m!158379))

(assert (=> b!135277 m!158379))

(declare-fun m!161305 () Bool)

(assert (=> b!135277 m!161305))

(assert (=> b!135279 m!158379))

(assert (=> b!135279 m!158379))

(assert (=> b!135279 m!161305))

(assert (=> d!40889 d!42151))

(declare-fun b!135281 () Bool)

(declare-fun e!88104 () Option!179)

(declare-fun e!88105 () Option!179)

(assert (=> b!135281 (= e!88104 e!88105)))

(declare-fun c!25264 () Bool)

(assert (=> b!135281 (= c!25264 (and ((_ is Cons!1690) lt!70048) (not (= (_1!1293 (h!2295 lt!70048)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!135280 () Bool)

(assert (=> b!135280 (= e!88104 (Some!178 (_2!1293 (h!2295 lt!70048))))))

(declare-fun d!42153 () Bool)

(declare-fun c!25263 () Bool)

(assert (=> d!42153 (= c!25263 (and ((_ is Cons!1690) lt!70048) (= (_1!1293 (h!2295 lt!70048)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42153 (= (getValueByKey!173 lt!70048 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) e!88104)))

(declare-fun b!135283 () Bool)

(assert (=> b!135283 (= e!88105 None!177)))

(declare-fun b!135282 () Bool)

(assert (=> b!135282 (= e!88105 (getValueByKey!173 (t!6137 lt!70048) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!42153 c!25263) b!135280))

(assert (= (and d!42153 (not c!25263)) b!135281))

(assert (= (and b!135281 c!25264) b!135282))

(assert (= (and b!135281 (not c!25264)) b!135283))

(declare-fun m!161307 () Bool)

(assert (=> b!135282 m!161307))

(assert (=> d!40889 d!42153))

(declare-fun d!42155 () Bool)

(assert (=> d!42155 (= (getValueByKey!173 lt!70048 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70767 () Unit!4141)

(assert (=> d!42155 (= lt!70767 (choose!833 lt!70048 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun e!88106 () Bool)

(assert (=> d!42155 e!88106))

(declare-fun res!64991 () Bool)

(assert (=> d!42155 (=> (not res!64991) (not e!88106))))

(assert (=> d!42155 (= res!64991 (isStrictlySorted!309 lt!70048))))

(assert (=> d!42155 (= (lemmaContainsTupThenGetReturnValue!88 lt!70048 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70767)))

(declare-fun b!135284 () Bool)

(declare-fun res!64992 () Bool)

(assert (=> b!135284 (=> (not res!64992) (not e!88106))))

(assert (=> b!135284 (= res!64992 (containsKey!176 lt!70048 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!135285 () Bool)

(assert (=> b!135285 (= e!88106 (contains!886 lt!70048 (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (= (and d!42155 res!64991) b!135284))

(assert (= (and b!135284 res!64992) b!135285))

(assert (=> d!42155 m!158373))

(declare-fun m!161309 () Bool)

(assert (=> d!42155 m!161309))

(declare-fun m!161311 () Bool)

(assert (=> d!42155 m!161311))

(declare-fun m!161313 () Bool)

(assert (=> b!135284 m!161313))

(declare-fun m!161315 () Bool)

(assert (=> b!135285 m!161315))

(assert (=> d!40889 d!42155))

(declare-fun b!135286 () Bool)

(declare-fun res!64993 () Bool)

(declare-fun e!88111 () Bool)

(assert (=> b!135286 (=> (not res!64993) (not e!88111))))

(declare-fun lt!70768 () List!1694)

(assert (=> b!135286 (= res!64993 (containsKey!176 lt!70768 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!135287 () Bool)

(declare-fun e!88109 () List!1694)

(declare-fun e!88110 () List!1694)

(assert (=> b!135287 (= e!88109 e!88110)))

(declare-fun c!25268 () Bool)

(assert (=> b!135287 (= c!25268 (and ((_ is Cons!1690) (toList!842 call!14651)) (= (_1!1293 (h!2295 (toList!842 call!14651))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun bm!14853 () Bool)

(declare-fun call!14857 () List!1694)

(declare-fun call!14856 () List!1694)

(assert (=> bm!14853 (= call!14857 call!14856)))

(declare-fun b!135288 () Bool)

(declare-fun e!88107 () List!1694)

(assert (=> b!135288 (= e!88107 call!14857)))

(declare-fun b!135289 () Bool)

(declare-fun c!25267 () Bool)

(assert (=> b!135289 (= c!25267 (and ((_ is Cons!1690) (toList!842 call!14651)) (bvsgt (_1!1293 (h!2295 (toList!842 call!14651))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> b!135289 (= e!88110 e!88107)))

(declare-fun b!135290 () Bool)

(assert (=> b!135290 (= e!88111 (contains!886 lt!70768 (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135291 () Bool)

(assert (=> b!135291 (= e!88110 call!14856)))

(declare-fun d!42157 () Bool)

(assert (=> d!42157 e!88111))

(declare-fun res!64994 () Bool)

(assert (=> d!42157 (=> (not res!64994) (not e!88111))))

(assert (=> d!42157 (= res!64994 (isStrictlySorted!309 lt!70768))))

(assert (=> d!42157 (= lt!70768 e!88109)))

(declare-fun c!25266 () Bool)

(assert (=> d!42157 (= c!25266 (and ((_ is Cons!1690) (toList!842 call!14651)) (bvslt (_1!1293 (h!2295 (toList!842 call!14651))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42157 (isStrictlySorted!309 (toList!842 call!14651))))

(assert (=> d!42157 (= (insertStrictlySorted!91 (toList!842 call!14651) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70768)))

(declare-fun b!135292 () Bool)

(declare-fun e!88108 () List!1694)

(assert (=> b!135292 (= e!88108 (ite c!25268 (t!6137 (toList!842 call!14651)) (ite c!25267 (Cons!1690 (h!2295 (toList!842 call!14651)) (t!6137 (toList!842 call!14651))) Nil!1691)))))

(declare-fun b!135293 () Bool)

(declare-fun call!14858 () List!1694)

(assert (=> b!135293 (= e!88109 call!14858)))

(declare-fun b!135294 () Bool)

(assert (=> b!135294 (= e!88107 call!14857)))

(declare-fun b!135295 () Bool)

(assert (=> b!135295 (= e!88108 (insertStrictlySorted!91 (t!6137 (toList!842 call!14651)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun bm!14854 () Bool)

(assert (=> bm!14854 (= call!14856 call!14858)))

(declare-fun bm!14855 () Bool)

(assert (=> bm!14855 (= call!14858 ($colon$colon!91 e!88108 (ite c!25266 (h!2295 (toList!842 call!14651)) (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun c!25265 () Bool)

(assert (=> bm!14855 (= c!25265 c!25266)))

(assert (= (and d!42157 c!25266) b!135293))

(assert (= (and d!42157 (not c!25266)) b!135287))

(assert (= (and b!135287 c!25268) b!135291))

(assert (= (and b!135287 (not c!25268)) b!135289))

(assert (= (and b!135289 c!25267) b!135294))

(assert (= (and b!135289 (not c!25267)) b!135288))

(assert (= (or b!135294 b!135288) bm!14853))

(assert (= (or b!135291 bm!14853) bm!14854))

(assert (= (or b!135293 bm!14854) bm!14855))

(assert (= (and bm!14855 c!25265) b!135295))

(assert (= (and bm!14855 (not c!25265)) b!135292))

(assert (= (and d!42157 res!64994) b!135286))

(assert (= (and b!135286 res!64993) b!135290))

(declare-fun m!161317 () Bool)

(assert (=> b!135290 m!161317))

(declare-fun m!161319 () Bool)

(assert (=> b!135295 m!161319))

(declare-fun m!161321 () Bool)

(assert (=> bm!14855 m!161321))

(declare-fun m!161323 () Bool)

(assert (=> b!135286 m!161323))

(declare-fun m!161325 () Bool)

(assert (=> d!42157 m!161325))

(declare-fun m!161327 () Bool)

(assert (=> d!42157 m!161327))

(assert (=> d!40889 d!42157))

(declare-fun b!135297 () Bool)

(declare-fun e!88112 () Option!179)

(declare-fun e!88113 () Option!179)

(assert (=> b!135297 (= e!88112 e!88113)))

(declare-fun c!25270 () Bool)

(assert (=> b!135297 (= c!25270 (and ((_ is Cons!1690) (t!6137 (t!6137 (toList!842 lt!69167)))) (not (= (_1!1293 (h!2295 (t!6137 (t!6137 (toList!842 lt!69167))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun b!135296 () Bool)

(assert (=> b!135296 (= e!88112 (Some!178 (_2!1293 (h!2295 (t!6137 (t!6137 (toList!842 lt!69167)))))))))

(declare-fun d!42159 () Bool)

(declare-fun c!25269 () Bool)

(assert (=> d!42159 (= c!25269 (and ((_ is Cons!1690) (t!6137 (t!6137 (toList!842 lt!69167)))) (= (_1!1293 (h!2295 (t!6137 (t!6137 (toList!842 lt!69167))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!42159 (= (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69167))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!88112)))

(declare-fun b!135299 () Bool)

(assert (=> b!135299 (= e!88113 None!177)))

(declare-fun b!135298 () Bool)

(assert (=> b!135298 (= e!88113 (getValueByKey!173 (t!6137 (t!6137 (t!6137 (toList!842 lt!69167)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!42159 c!25269) b!135296))

(assert (= (and d!42159 (not c!25269)) b!135297))

(assert (= (and b!135297 c!25270) b!135298))

(assert (= (and b!135297 (not c!25270)) b!135299))

(assert (=> b!135298 m!156395))

(declare-fun m!161329 () Bool)

(assert (=> b!135298 m!161329))

(assert (=> b!133961 d!42159))

(declare-fun b!135300 () Bool)

(declare-fun e!88116 () Bool)

(declare-fun call!14859 () Bool)

(assert (=> b!135300 (= e!88116 call!14859)))

(declare-fun b!135301 () Bool)

(declare-fun e!88114 () Bool)

(assert (=> b!135301 (= e!88116 e!88114)))

(declare-fun lt!70770 () (_ BitVec 64))

(assert (=> b!135301 (= lt!70770 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun lt!70769 () Unit!4141)

(assert (=> b!135301 (= lt!70769 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 newMap!16) lt!70770 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!135301 (arrayContainsKey!0 (_keys!4613 newMap!16) lt!70770 #b00000000000000000000000000000000)))

(declare-fun lt!70771 () Unit!4141)

(assert (=> b!135301 (= lt!70771 lt!70769)))

(declare-fun res!64995 () Bool)

(assert (=> b!135301 (= res!64995 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4613 newMap!16) (mask!7164 newMap!16)) (Found!269 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!135301 (=> (not res!64995) (not e!88114))))

(declare-fun b!135302 () Bool)

(declare-fun e!88115 () Bool)

(assert (=> b!135302 (= e!88115 e!88116)))

(declare-fun c!25271 () Bool)

(assert (=> b!135302 (= c!25271 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!135303 () Bool)

(assert (=> b!135303 (= e!88114 call!14859)))

(declare-fun d!42161 () Bool)

(declare-fun res!64996 () Bool)

(assert (=> d!42161 (=> res!64996 e!88115)))

(assert (=> d!42161 (= res!64996 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!42161 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4613 newMap!16) (mask!7164 newMap!16)) e!88115)))

(declare-fun bm!14856 () Bool)

(assert (=> bm!14856 (= call!14859 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(assert (= (and d!42161 (not res!64996)) b!135302))

(assert (= (and b!135302 c!25271) b!135301))

(assert (= (and b!135302 (not c!25271)) b!135300))

(assert (= (and b!135301 res!64995) b!135303))

(assert (= (or b!135303 b!135300) bm!14856))

(assert (=> b!135301 m!160165))

(declare-fun m!161331 () Bool)

(assert (=> b!135301 m!161331))

(declare-fun m!161333 () Bool)

(assert (=> b!135301 m!161333))

(assert (=> b!135301 m!160165))

(declare-fun m!161335 () Bool)

(assert (=> b!135301 m!161335))

(assert (=> b!135302 m!160165))

(assert (=> b!135302 m!160165))

(assert (=> b!135302 m!160167))

(declare-fun m!161337 () Bool)

(assert (=> bm!14856 m!161337))

(assert (=> bm!14697 d!42161))

(declare-fun d!42163 () Bool)

(declare-fun lt!70772 () Bool)

(assert (=> d!42163 (= lt!70772 (select (content!134 (toList!842 lt!69846)) (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun e!88118 () Bool)

(assert (=> d!42163 (= lt!70772 e!88118)))

(declare-fun res!64998 () Bool)

(assert (=> d!42163 (=> (not res!64998) (not e!88118))))

(assert (=> d!42163 (= res!64998 ((_ is Cons!1690) (toList!842 lt!69846)))))

(assert (=> d!42163 (= (contains!886 (toList!842 lt!69846) (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70772)))

(declare-fun b!135304 () Bool)

(declare-fun e!88117 () Bool)

(assert (=> b!135304 (= e!88118 e!88117)))

(declare-fun res!64997 () Bool)

(assert (=> b!135304 (=> res!64997 e!88117)))

(assert (=> b!135304 (= res!64997 (= (h!2295 (toList!842 lt!69846)) (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!135305 () Bool)

(assert (=> b!135305 (= e!88117 (contains!886 (t!6137 (toList!842 lt!69846)) (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!42163 res!64998) b!135304))

(assert (= (and b!135304 (not res!64997)) b!135305))

(declare-fun m!161339 () Bool)

(assert (=> d!42163 m!161339))

(declare-fun m!161341 () Bool)

(assert (=> d!42163 m!161341))

(declare-fun m!161343 () Bool)

(assert (=> b!135305 m!161343))

(assert (=> b!133539 d!42163))

(assert (=> b!133705 d!40621))

(declare-fun d!42165 () Bool)

(assert (=> d!42165 (isDefined!125 (getValueByKey!173 (toList!842 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70773 () Unit!4141)

(assert (=> d!42165 (= lt!70773 (choose!831 (toList!842 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88119 () Bool)

(assert (=> d!42165 e!88119))

(declare-fun res!64999 () Bool)

(assert (=> d!42165 (=> (not res!64999) (not e!88119))))

(assert (=> d!42165 (= res!64999 (isStrictlySorted!309 (toList!842 lt!69486)))))

(assert (=> d!42165 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70773)))

(declare-fun b!135306 () Bool)

(assert (=> b!135306 (= e!88119 (containsKey!176 (toList!842 lt!69486) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42165 res!64999) b!135306))

(assert (=> d!42165 m!158425))

(assert (=> d!42165 m!158425))

(assert (=> d!42165 m!158427))

(declare-fun m!161345 () Bool)

(assert (=> d!42165 m!161345))

(assert (=> d!42165 m!159353))

(assert (=> b!135306 m!158421))

(assert (=> b!133882 d!42165))

(assert (=> b!133882 d!41679))

(assert (=> b!133882 d!41681))

(declare-fun d!42167 () Bool)

(declare-fun e!88121 () Bool)

(assert (=> d!42167 e!88121))

(declare-fun res!65000 () Bool)

(assert (=> d!42167 (=> res!65000 e!88121)))

(declare-fun lt!70774 () Bool)

(assert (=> d!42167 (= res!65000 (not lt!70774))))

(declare-fun lt!70775 () Bool)

(assert (=> d!42167 (= lt!70774 lt!70775)))

(declare-fun lt!70776 () Unit!4141)

(declare-fun e!88120 () Unit!4141)

(assert (=> d!42167 (= lt!70776 e!88120)))

(declare-fun c!25272 () Bool)

(assert (=> d!42167 (= c!25272 lt!70775)))

(assert (=> d!42167 (= lt!70775 (containsKey!176 (toList!842 lt!70182) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!42167 (= (contains!884 lt!70182 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70774)))

(declare-fun b!135307 () Bool)

(declare-fun lt!70777 () Unit!4141)

(assert (=> b!135307 (= e!88120 lt!70777)))

(assert (=> b!135307 (= lt!70777 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70182) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> b!135307 (isDefined!125 (getValueByKey!173 (toList!842 lt!70182) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!135308 () Bool)

(declare-fun Unit!4250 () Unit!4141)

(assert (=> b!135308 (= e!88120 Unit!4250)))

(declare-fun b!135309 () Bool)

(assert (=> b!135309 (= e!88121 (isDefined!125 (getValueByKey!173 (toList!842 lt!70182) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (= (and d!42167 c!25272) b!135307))

(assert (= (and d!42167 (not c!25272)) b!135308))

(assert (= (and d!42167 (not res!65000)) b!135309))

(declare-fun m!161347 () Bool)

(assert (=> d!42167 m!161347))

(declare-fun m!161349 () Bool)

(assert (=> b!135307 m!161349))

(assert (=> b!135307 m!158869))

(assert (=> b!135307 m!158869))

(declare-fun m!161351 () Bool)

(assert (=> b!135307 m!161351))

(assert (=> b!135309 m!158869))

(assert (=> b!135309 m!158869))

(assert (=> b!135309 m!161351))

(assert (=> d!41091 d!42167))

(declare-fun b!135311 () Bool)

(declare-fun e!88122 () Option!179)

(declare-fun e!88123 () Option!179)

(assert (=> b!135311 (= e!88122 e!88123)))

(declare-fun c!25274 () Bool)

(assert (=> b!135311 (= c!25274 (and ((_ is Cons!1690) lt!70183) (not (= (_1!1293 (h!2295 lt!70183)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!135310 () Bool)

(assert (=> b!135310 (= e!88122 (Some!178 (_2!1293 (h!2295 lt!70183))))))

(declare-fun d!42169 () Bool)

(declare-fun c!25273 () Bool)

(assert (=> d!42169 (= c!25273 (and ((_ is Cons!1690) lt!70183) (= (_1!1293 (h!2295 lt!70183)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42169 (= (getValueByKey!173 lt!70183 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) e!88122)))

(declare-fun b!135313 () Bool)

(assert (=> b!135313 (= e!88123 None!177)))

(declare-fun b!135312 () Bool)

(assert (=> b!135312 (= e!88123 (getValueByKey!173 (t!6137 lt!70183) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!42169 c!25273) b!135310))

(assert (= (and d!42169 (not c!25273)) b!135311))

(assert (= (and b!135311 c!25274) b!135312))

(assert (= (and b!135311 (not c!25274)) b!135313))

(declare-fun m!161353 () Bool)

(assert (=> b!135312 m!161353))

(assert (=> d!41091 d!42169))

(declare-fun d!42171 () Bool)

(assert (=> d!42171 (= (getValueByKey!173 lt!70183 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70778 () Unit!4141)

(assert (=> d!42171 (= lt!70778 (choose!833 lt!70183 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun e!88124 () Bool)

(assert (=> d!42171 e!88124))

(declare-fun res!65001 () Bool)

(assert (=> d!42171 (=> (not res!65001) (not e!88124))))

(assert (=> d!42171 (= res!65001 (isStrictlySorted!309 lt!70183))))

(assert (=> d!42171 (= (lemmaContainsTupThenGetReturnValue!88 lt!70183 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70778)))

(declare-fun b!135314 () Bool)

(declare-fun res!65002 () Bool)

(assert (=> b!135314 (=> (not res!65002) (not e!88124))))

(assert (=> b!135314 (= res!65002 (containsKey!176 lt!70183 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!135315 () Bool)

(assert (=> b!135315 (= e!88124 (contains!886 lt!70183 (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (= (and d!42171 res!65001) b!135314))

(assert (= (and b!135314 res!65002) b!135315))

(assert (=> d!42171 m!158863))

(declare-fun m!161355 () Bool)

(assert (=> d!42171 m!161355))

(declare-fun m!161357 () Bool)

(assert (=> d!42171 m!161357))

(declare-fun m!161359 () Bool)

(assert (=> b!135314 m!161359))

(declare-fun m!161361 () Bool)

(assert (=> b!135315 m!161361))

(assert (=> d!41091 d!42171))

(declare-fun b!135316 () Bool)

(declare-fun res!65003 () Bool)

(declare-fun e!88129 () Bool)

(assert (=> b!135316 (=> (not res!65003) (not e!88129))))

(declare-fun lt!70779 () List!1694)

(assert (=> b!135316 (= res!65003 (containsKey!176 lt!70779 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun b!135317 () Bool)

(declare-fun e!88127 () List!1694)

(declare-fun e!88128 () List!1694)

(assert (=> b!135317 (= e!88127 e!88128)))

(declare-fun c!25278 () Bool)

(assert (=> b!135317 (= c!25278 (and ((_ is Cons!1690) (toList!842 call!14658)) (= (_1!1293 (h!2295 (toList!842 call!14658))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun bm!14857 () Bool)

(declare-fun call!14861 () List!1694)

(declare-fun call!14860 () List!1694)

(assert (=> bm!14857 (= call!14861 call!14860)))

(declare-fun b!135318 () Bool)

(declare-fun e!88125 () List!1694)

(assert (=> b!135318 (= e!88125 call!14861)))

(declare-fun b!135319 () Bool)

(declare-fun c!25277 () Bool)

(assert (=> b!135319 (= c!25277 (and ((_ is Cons!1690) (toList!842 call!14658)) (bvsgt (_1!1293 (h!2295 (toList!842 call!14658))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> b!135319 (= e!88128 e!88125)))

(declare-fun b!135320 () Bool)

(assert (=> b!135320 (= e!88129 (contains!886 lt!70779 (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135321 () Bool)

(assert (=> b!135321 (= e!88128 call!14860)))

(declare-fun d!42173 () Bool)

(assert (=> d!42173 e!88129))

(declare-fun res!65004 () Bool)

(assert (=> d!42173 (=> (not res!65004) (not e!88129))))

(assert (=> d!42173 (= res!65004 (isStrictlySorted!309 lt!70779))))

(assert (=> d!42173 (= lt!70779 e!88127)))

(declare-fun c!25276 () Bool)

(assert (=> d!42173 (= c!25276 (and ((_ is Cons!1690) (toList!842 call!14658)) (bvslt (_1!1293 (h!2295 (toList!842 call!14658))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42173 (isStrictlySorted!309 (toList!842 call!14658))))

(assert (=> d!42173 (= (insertStrictlySorted!91 (toList!842 call!14658) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70779)))

(declare-fun e!88126 () List!1694)

(declare-fun b!135322 () Bool)

(assert (=> b!135322 (= e!88126 (ite c!25278 (t!6137 (toList!842 call!14658)) (ite c!25277 (Cons!1690 (h!2295 (toList!842 call!14658)) (t!6137 (toList!842 call!14658))) Nil!1691)))))

(declare-fun b!135323 () Bool)

(declare-fun call!14862 () List!1694)

(assert (=> b!135323 (= e!88127 call!14862)))

(declare-fun b!135324 () Bool)

(assert (=> b!135324 (= e!88125 call!14861)))

(declare-fun b!135325 () Bool)

(assert (=> b!135325 (= e!88126 (insertStrictlySorted!91 (t!6137 (toList!842 call!14658)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun bm!14858 () Bool)

(assert (=> bm!14858 (= call!14860 call!14862)))

(declare-fun bm!14859 () Bool)

(assert (=> bm!14859 (= call!14862 ($colon$colon!91 e!88126 (ite c!25276 (h!2295 (toList!842 call!14658)) (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun c!25275 () Bool)

(assert (=> bm!14859 (= c!25275 c!25276)))

(assert (= (and d!42173 c!25276) b!135323))

(assert (= (and d!42173 (not c!25276)) b!135317))

(assert (= (and b!135317 c!25278) b!135321))

(assert (= (and b!135317 (not c!25278)) b!135319))

(assert (= (and b!135319 c!25277) b!135324))

(assert (= (and b!135319 (not c!25277)) b!135318))

(assert (= (or b!135324 b!135318) bm!14857))

(assert (= (or b!135321 bm!14857) bm!14858))

(assert (= (or b!135323 bm!14858) bm!14859))

(assert (= (and bm!14859 c!25275) b!135325))

(assert (= (and bm!14859 (not c!25275)) b!135322))

(assert (= (and d!42173 res!65004) b!135316))

(assert (= (and b!135316 res!65003) b!135320))

(declare-fun m!161363 () Bool)

(assert (=> b!135320 m!161363))

(declare-fun m!161365 () Bool)

(assert (=> b!135325 m!161365))

(declare-fun m!161367 () Bool)

(assert (=> bm!14859 m!161367))

(declare-fun m!161369 () Bool)

(assert (=> b!135316 m!161369))

(declare-fun m!161371 () Bool)

(assert (=> d!42173 m!161371))

(declare-fun m!161373 () Bool)

(assert (=> d!42173 m!161373))

(assert (=> d!41091 d!42173))

(assert (=> b!133809 d!40621))

(declare-fun d!42175 () Bool)

(assert (=> d!42175 (= (get!1492 (getValueByKey!173 (toList!842 lt!69574) lt!69576)) (v!3203 (getValueByKey!173 (toList!842 lt!69574) lt!69576)))))

(assert (=> d!41029 d!42175))

(declare-fun b!135327 () Bool)

(declare-fun e!88130 () Option!179)

(declare-fun e!88131 () Option!179)

(assert (=> b!135327 (= e!88130 e!88131)))

(declare-fun c!25280 () Bool)

(assert (=> b!135327 (= c!25280 (and ((_ is Cons!1690) (toList!842 lt!69574)) (not (= (_1!1293 (h!2295 (toList!842 lt!69574))) lt!69576))))))

(declare-fun b!135326 () Bool)

(assert (=> b!135326 (= e!88130 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69574)))))))

(declare-fun d!42177 () Bool)

(declare-fun c!25279 () Bool)

(assert (=> d!42177 (= c!25279 (and ((_ is Cons!1690) (toList!842 lt!69574)) (= (_1!1293 (h!2295 (toList!842 lt!69574))) lt!69576)))))

(assert (=> d!42177 (= (getValueByKey!173 (toList!842 lt!69574) lt!69576) e!88130)))

(declare-fun b!135329 () Bool)

(assert (=> b!135329 (= e!88131 None!177)))

(declare-fun b!135328 () Bool)

(assert (=> b!135328 (= e!88131 (getValueByKey!173 (t!6137 (toList!842 lt!69574)) lt!69576))))

(assert (= (and d!42177 c!25279) b!135326))

(assert (= (and d!42177 (not c!25279)) b!135327))

(assert (= (and b!135327 c!25280) b!135328))

(assert (= (and b!135327 (not c!25280)) b!135329))

(declare-fun m!161375 () Bool)

(assert (=> b!135328 m!161375))

(assert (=> d!41029 d!42177))

(declare-fun d!42179 () Bool)

(assert (=> d!42179 (= (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69501 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))) lt!69503)) (v!3203 (getValueByKey!173 (toList!842 (+!169 lt!69501 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))) lt!69503)))))

(assert (=> d!40727 d!42179))

(declare-fun b!135331 () Bool)

(declare-fun e!88132 () Option!179)

(declare-fun e!88133 () Option!179)

(assert (=> b!135331 (= e!88132 e!88133)))

(declare-fun c!25282 () Bool)

(assert (=> b!135331 (= c!25282 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69501 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69501 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))) lt!69503))))))

(declare-fun b!135330 () Bool)

(assert (=> b!135330 (= e!88132 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69501 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))))))))

(declare-fun d!42181 () Bool)

(declare-fun c!25281 () Bool)

(assert (=> d!42181 (= c!25281 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69501 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69501 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))) lt!69503)))))

(assert (=> d!42181 (= (getValueByKey!173 (toList!842 (+!169 lt!69501 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))) lt!69503) e!88132)))

(declare-fun b!135333 () Bool)

(assert (=> b!135333 (= e!88133 None!177)))

(declare-fun b!135332 () Bool)

(assert (=> b!135332 (= e!88133 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69501 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))) lt!69503))))

(assert (= (and d!42181 c!25281) b!135330))

(assert (= (and d!42181 (not c!25281)) b!135331))

(assert (= (and b!135331 c!25282) b!135332))

(assert (= (and b!135331 (not c!25282)) b!135333))

(declare-fun m!161377 () Bool)

(assert (=> b!135332 m!161377))

(assert (=> d!40727 d!42181))

(assert (=> d!41077 d!40591))

(assert (=> b!133449 d!40677))

(assert (=> b!133449 d!40525))

(declare-fun lt!70780 () Bool)

(declare-fun d!42183 () Bool)

(assert (=> d!42183 (= lt!70780 (select (content!134 (toList!842 lt!70005)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!88135 () Bool)

(assert (=> d!42183 (= lt!70780 e!88135)))

(declare-fun res!65006 () Bool)

(assert (=> d!42183 (=> (not res!65006) (not e!88135))))

(assert (=> d!42183 (= res!65006 ((_ is Cons!1690) (toList!842 lt!70005)))))

(assert (=> d!42183 (= (contains!886 (toList!842 lt!70005) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70780)))

(declare-fun b!135334 () Bool)

(declare-fun e!88134 () Bool)

(assert (=> b!135334 (= e!88135 e!88134)))

(declare-fun res!65005 () Bool)

(assert (=> b!135334 (=> res!65005 e!88134)))

(assert (=> b!135334 (= res!65005 (= (h!2295 (toList!842 lt!70005)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135335 () Bool)

(assert (=> b!135335 (= e!88134 (contains!886 (t!6137 (toList!842 lt!70005)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42183 res!65006) b!135334))

(assert (= (and b!135334 (not res!65005)) b!135335))

(declare-fun m!161379 () Bool)

(assert (=> d!42183 m!161379))

(declare-fun m!161381 () Bool)

(assert (=> d!42183 m!161381))

(declare-fun m!161383 () Bool)

(assert (=> b!135335 m!161383))

(assert (=> b!133797 d!42183))

(assert (=> d!41057 d!40775))

(assert (=> d!41057 d!40777))

(declare-fun d!42185 () Bool)

(assert (=> d!42185 (isDefined!125 (getValueByKey!173 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!42185 true))

(declare-fun _$12!404 () Unit!4141)

(assert (=> d!42185 (= (choose!831 (toList!842 lt!69344) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) _$12!404)))

(declare-fun bs!5688 () Bool)

(assert (= bs!5688 d!42185))

(assert (=> bs!5688 m!156581))

(assert (=> bs!5688 m!156909))

(assert (=> bs!5688 m!156909))

(assert (=> bs!5688 m!156933))

(assert (=> d!41057 d!42185))

(assert (=> d!41057 d!41263))

(declare-fun lt!70781 () Bool)

(declare-fun d!42187 () Bool)

(assert (=> d!42187 (= lt!70781 (select (content!134 lt!69973) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun e!88137 () Bool)

(assert (=> d!42187 (= lt!70781 e!88137)))

(declare-fun res!65008 () Bool)

(assert (=> d!42187 (=> (not res!65008) (not e!88137))))

(assert (=> d!42187 (= res!65008 ((_ is Cons!1690) lt!69973))))

(assert (=> d!42187 (= (contains!886 lt!69973 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!70781)))

(declare-fun b!135336 () Bool)

(declare-fun e!88136 () Bool)

(assert (=> b!135336 (= e!88137 e!88136)))

(declare-fun res!65007 () Bool)

(assert (=> b!135336 (=> res!65007 e!88136)))

(assert (=> b!135336 (= res!65007 (= (h!2295 lt!69973) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!135337 () Bool)

(assert (=> b!135337 (= e!88136 (contains!886 (t!6137 lt!69973) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!42187 res!65008) b!135336))

(assert (= (and b!135336 (not res!65007)) b!135337))

(declare-fun m!161385 () Bool)

(assert (=> d!42187 m!161385))

(declare-fun m!161387 () Bool)

(assert (=> d!42187 m!161387))

(declare-fun m!161389 () Bool)

(assert (=> b!135337 m!161389))

(assert (=> b!133728 d!42187))

(assert (=> b!133573 d!41997))

(assert (=> b!133573 d!41087))

(assert (=> d!40685 d!40681))

(declare-fun d!42189 () Bool)

(assert (=> d!42189 (= (arrayCountValidKeys!0 lt!69456 (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (bvadd (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(assert (=> d!42189 true))

(declare-fun _$85!12 () Unit!4141)

(assert (=> d!42189 (= (choose!2 lt!69456 (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284))) _$85!12)))

(declare-fun bs!5689 () Bool)

(assert (= bs!5689 d!42189))

(assert (=> bs!5689 m!156711))

(assert (=> d!40685 d!42189))

(declare-fun d!42191 () Bool)

(declare-fun c!25283 () Bool)

(assert (=> d!42191 (= c!25283 ((_ is Nil!1691) (toList!842 lt!69634)))))

(declare-fun e!88138 () (InoxSet tuple2!2564))

(assert (=> d!42191 (= (content!134 (toList!842 lt!69634)) e!88138)))

(declare-fun b!135338 () Bool)

(assert (=> b!135338 (= e!88138 ((as const (Array tuple2!2564 Bool)) false))))

(declare-fun b!135339 () Bool)

(assert (=> b!135339 (= e!88138 ((_ map or) (store ((as const (Array tuple2!2564 Bool)) false) (h!2295 (toList!842 lt!69634)) true) (content!134 (t!6137 (toList!842 lt!69634)))))))

(assert (= (and d!42191 c!25283) b!135338))

(assert (= (and d!42191 (not c!25283)) b!135339))

(declare-fun m!161391 () Bool)

(assert (=> b!135339 m!161391))

(assert (=> b!135339 m!159965))

(assert (=> d!40745 d!42191))

(declare-fun d!42193 () Bool)

(declare-fun e!88139 () Bool)

(assert (=> d!42193 e!88139))

(declare-fun res!65010 () Bool)

(assert (=> d!42193 (=> (not res!65010) (not e!88139))))

(declare-fun lt!70784 () ListLongMap!1653)

(assert (=> d!42193 (= res!65010 (contains!884 lt!70784 (_1!1293 (ite (or c!24796 c!24798) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!70785 () List!1694)

(assert (=> d!42193 (= lt!70784 (ListLongMap!1654 lt!70785))))

(declare-fun lt!70782 () Unit!4141)

(declare-fun lt!70783 () Unit!4141)

(assert (=> d!42193 (= lt!70782 lt!70783)))

(assert (=> d!42193 (= (getValueByKey!173 lt!70785 (_1!1293 (ite (or c!24796 c!24798) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!178 (_2!1293 (ite (or c!24796 c!24798) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42193 (= lt!70783 (lemmaContainsTupThenGetReturnValue!88 lt!70785 (_1!1293 (ite (or c!24796 c!24798) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite (or c!24796 c!24798) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42193 (= lt!70785 (insertStrictlySorted!91 (toList!842 (ite c!24796 call!14746 (ite c!24798 call!14747 call!14749))) (_1!1293 (ite (or c!24796 c!24798) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite (or c!24796 c!24798) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42193 (= (+!169 (ite c!24796 call!14746 (ite c!24798 call!14747 call!14749)) (ite (or c!24796 c!24798) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70784)))

(declare-fun b!135340 () Bool)

(declare-fun res!65009 () Bool)

(assert (=> b!135340 (=> (not res!65009) (not e!88139))))

(assert (=> b!135340 (= res!65009 (= (getValueByKey!173 (toList!842 lt!70784) (_1!1293 (ite (or c!24796 c!24798) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!178 (_2!1293 (ite (or c!24796 c!24798) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135341 () Bool)

(assert (=> b!135341 (= e!88139 (contains!886 (toList!842 lt!70784) (ite (or c!24796 c!24798) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42193 res!65010) b!135340))

(assert (= (and b!135340 res!65009) b!135341))

(declare-fun m!161393 () Bool)

(assert (=> d!42193 m!161393))

(declare-fun m!161395 () Bool)

(assert (=> d!42193 m!161395))

(declare-fun m!161397 () Bool)

(assert (=> d!42193 m!161397))

(declare-fun m!161399 () Bool)

(assert (=> d!42193 m!161399))

(declare-fun m!161401 () Bool)

(assert (=> b!135340 m!161401))

(declare-fun m!161403 () Bool)

(assert (=> b!135341 m!161403))

(assert (=> bm!14742 d!42193))

(assert (=> b!133581 d!42053))

(assert (=> b!133581 d!42055))

(declare-fun d!42195 () Bool)

(declare-fun c!25284 () Bool)

(assert (=> d!42195 (= c!25284 ((_ is Nil!1691) (toList!842 lt!69649)))))

(declare-fun e!88140 () (InoxSet tuple2!2564))

(assert (=> d!42195 (= (content!134 (toList!842 lt!69649)) e!88140)))

(declare-fun b!135342 () Bool)

(assert (=> b!135342 (= e!88140 ((as const (Array tuple2!2564 Bool)) false))))

(declare-fun b!135343 () Bool)

(assert (=> b!135343 (= e!88140 ((_ map or) (store ((as const (Array tuple2!2564 Bool)) false) (h!2295 (toList!842 lt!69649)) true) (content!134 (t!6137 (toList!842 lt!69649)))))))

(assert (= (and d!42195 c!25284) b!135342))

(assert (= (and d!42195 (not c!25284)) b!135343))

(declare-fun m!161405 () Bool)

(assert (=> b!135343 m!161405))

(assert (=> b!135343 m!158909))

(assert (=> d!40879 d!42195))

(declare-fun d!42197 () Bool)

(declare-fun lt!70786 () Bool)

(assert (=> d!42197 (= lt!70786 (select (content!133 (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun e!88142 () Bool)

(assert (=> d!42197 (= lt!70786 e!88142)))

(declare-fun res!65011 () Bool)

(assert (=> d!42197 (=> (not res!65011) (not e!88142))))

(assert (=> d!42197 (= res!65011 ((_ is Cons!1689) (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))))))

(assert (=> d!42197 (= (contains!885 (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) lt!70786)))

(declare-fun b!135344 () Bool)

(declare-fun e!88141 () Bool)

(assert (=> b!135344 (= e!88142 e!88141)))

(declare-fun res!65012 () Bool)

(assert (=> b!135344 (=> res!65012 e!88141)))

(assert (=> b!135344 (= res!65012 (= (h!2294 (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!135345 () Bool)

(assert (=> b!135345 (= e!88141 (contains!885 (t!6136 (ite c!24644 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!42197 res!65011) b!135344))

(assert (= (and b!135344 (not res!65012)) b!135345))

(declare-fun m!161407 () Bool)

(assert (=> d!42197 m!161407))

(assert (=> d!42197 m!157231))

(declare-fun m!161409 () Bool)

(assert (=> d!42197 m!161409))

(assert (=> b!135345 m!157231))

(declare-fun m!161411 () Bool)

(assert (=> b!135345 m!161411))

(assert (=> b!133848 d!42197))

(declare-fun d!42199 () Bool)

(declare-fun lt!70787 () Bool)

(assert (=> d!42199 (= lt!70787 (select (content!134 (toList!842 lt!69858)) (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(declare-fun e!88144 () Bool)

(assert (=> d!42199 (= lt!70787 e!88144)))

(declare-fun res!65014 () Bool)

(assert (=> d!42199 (=> (not res!65014) (not e!88144))))

(assert (=> d!42199 (= res!65014 ((_ is Cons!1690) (toList!842 lt!69858)))))

(assert (=> d!42199 (= (contains!886 (toList!842 lt!69858) (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!70787)))

(declare-fun b!135346 () Bool)

(declare-fun e!88143 () Bool)

(assert (=> b!135346 (= e!88144 e!88143)))

(declare-fun res!65013 () Bool)

(assert (=> b!135346 (=> res!65013 e!88143)))

(assert (=> b!135346 (= res!65013 (= (h!2295 (toList!842 lt!69858)) (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(declare-fun b!135347 () Bool)

(assert (=> b!135347 (= e!88143 (contains!886 (t!6137 (toList!842 lt!69858)) (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(assert (= (and d!42199 res!65014) b!135346))

(assert (= (and b!135346 (not res!65013)) b!135347))

(declare-fun m!161413 () Bool)

(assert (=> d!42199 m!161413))

(declare-fun m!161415 () Bool)

(assert (=> d!42199 m!161415))

(declare-fun m!161417 () Bool)

(assert (=> b!135347 m!161417))

(assert (=> b!133548 d!42199))

(assert (=> b!133986 d!42033))

(assert (=> b!133986 d!41101))

(declare-fun d!42201 () Bool)

(declare-fun e!88146 () Bool)

(assert (=> d!42201 e!88146))

(declare-fun res!65015 () Bool)

(assert (=> d!42201 (=> res!65015 e!88146)))

(declare-fun lt!70788 () Bool)

(assert (=> d!42201 (= res!65015 (not lt!70788))))

(declare-fun lt!70789 () Bool)

(assert (=> d!42201 (= lt!70788 lt!70789)))

(declare-fun lt!70790 () Unit!4141)

(declare-fun e!88145 () Unit!4141)

(assert (=> d!42201 (= lt!70790 e!88145)))

(declare-fun c!25285 () Bool)

(assert (=> d!42201 (= c!25285 lt!70789)))

(assert (=> d!42201 (= lt!70789 (containsKey!176 (toList!842 lt!69932) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42201 (= (contains!884 lt!69932 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70788)))

(declare-fun b!135348 () Bool)

(declare-fun lt!70791 () Unit!4141)

(assert (=> b!135348 (= e!88145 lt!70791)))

(assert (=> b!135348 (= lt!70791 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69932) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135348 (isDefined!125 (getValueByKey!173 (toList!842 lt!69932) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135349 () Bool)

(declare-fun Unit!4251 () Unit!4141)

(assert (=> b!135349 (= e!88145 Unit!4251)))

(declare-fun b!135350 () Bool)

(assert (=> b!135350 (= e!88146 (isDefined!125 (getValueByKey!173 (toList!842 lt!69932) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42201 c!25285) b!135348))

(assert (= (and d!42201 (not c!25285)) b!135349))

(assert (= (and d!42201 (not res!65015)) b!135350))

(declare-fun m!161419 () Bool)

(assert (=> d!42201 m!161419))

(declare-fun m!161421 () Bool)

(assert (=> b!135348 m!161421))

(declare-fun m!161423 () Bool)

(assert (=> b!135348 m!161423))

(assert (=> b!135348 m!161423))

(declare-fun m!161425 () Bool)

(assert (=> b!135348 m!161425))

(assert (=> b!135350 m!161423))

(assert (=> b!135350 m!161423))

(assert (=> b!135350 m!161425))

(assert (=> bm!14739 d!42201))

(declare-fun d!42203 () Bool)

(assert (=> d!42203 (isDefined!125 (getValueByKey!173 (toList!842 lt!69529) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70792 () Unit!4141)

(assert (=> d!42203 (= lt!70792 (choose!831 (toList!842 lt!69529) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88147 () Bool)

(assert (=> d!42203 e!88147))

(declare-fun res!65016 () Bool)

(assert (=> d!42203 (=> (not res!65016) (not e!88147))))

(assert (=> d!42203 (= res!65016 (isStrictlySorted!309 (toList!842 lt!69529)))))

(assert (=> d!42203 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69529) #b0000000000000000000000000000000000000000000000000000000000000000) lt!70792)))

(declare-fun b!135351 () Bool)

(assert (=> b!135351 (= e!88147 (containsKey!176 (toList!842 lt!69529) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42203 res!65016) b!135351))

(assert (=> d!42203 m!157757))

(assert (=> d!42203 m!157757))

(assert (=> d!42203 m!157759))

(declare-fun m!161427 () Bool)

(assert (=> d!42203 m!161427))

(assert (=> d!42203 m!159819))

(assert (=> b!135351 m!157753))

(assert (=> b!133542 d!42203))

(assert (=> b!133542 d!41697))

(assert (=> b!133542 d!41319))

(assert (=> d!40897 d!40431))

(assert (=> d!40967 d!40535))

(assert (=> d!40967 d!40557))

(declare-fun b!135353 () Bool)

(declare-fun e!88148 () Option!179)

(declare-fun e!88149 () Option!179)

(assert (=> b!135353 (= e!88148 e!88149)))

(declare-fun c!25287 () Bool)

(assert (=> b!135353 (= c!25287 (and ((_ is Cons!1690) (t!6137 (toList!842 call!14589))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 call!14589)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))))

(declare-fun b!135352 () Bool)

(assert (=> b!135352 (= e!88148 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 call!14589))))))))

(declare-fun d!42205 () Bool)

(declare-fun c!25286 () Bool)

(assert (=> d!42205 (= c!25286 (and ((_ is Cons!1690) (t!6137 (toList!842 call!14589))) (= (_1!1293 (h!2295 (t!6137 (toList!842 call!14589)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!42205 (= (getValueByKey!173 (t!6137 (toList!842 call!14589)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!88148)))

(declare-fun b!135355 () Bool)

(assert (=> b!135355 (= e!88149 None!177)))

(declare-fun b!135354 () Bool)

(assert (=> b!135354 (= e!88149 (getValueByKey!173 (t!6137 (t!6137 (toList!842 call!14589))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!42205 c!25286) b!135352))

(assert (= (and d!42205 (not c!25286)) b!135353))

(assert (= (and b!135353 c!25287) b!135354))

(assert (= (and b!135353 (not c!25287)) b!135355))

(assert (=> b!135354 m!156395))

(declare-fun m!161429 () Bool)

(assert (=> b!135354 m!161429))

(assert (=> b!133641 d!42205))

(declare-fun b!135356 () Bool)

(assert (=> b!135356 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> b!135356 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2522 (_values!2847 newMap!16))))))

(declare-fun e!88156 () Bool)

(declare-fun lt!70797 () ListLongMap!1653)

(assert (=> b!135356 (= e!88156 (= (apply!116 lt!70797 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!135357 () Bool)

(declare-fun res!65019 () Bool)

(declare-fun e!88154 () Bool)

(assert (=> b!135357 (=> (not res!65019) (not e!88154))))

(assert (=> b!135357 (= res!65019 (not (contains!884 lt!70797 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135358 () Bool)

(declare-fun e!88151 () Bool)

(assert (=> b!135358 (= e!88151 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135358 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!135359 () Bool)

(declare-fun e!88152 () Bool)

(declare-fun e!88153 () Bool)

(assert (=> b!135359 (= e!88152 e!88153)))

(declare-fun c!25291 () Bool)

(assert (=> b!135359 (= c!25291 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!135360 () Bool)

(assert (=> b!135360 (= e!88153 (= lt!70797 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun bm!14860 () Bool)

(declare-fun call!14863 () ListLongMap!1653)

(assert (=> bm!14860 (= call!14863 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!135361 () Bool)

(declare-fun e!88150 () ListLongMap!1653)

(assert (=> b!135361 (= e!88150 call!14863)))

(declare-fun b!135362 () Bool)

(declare-fun e!88155 () ListLongMap!1653)

(assert (=> b!135362 (= e!88155 e!88150)))

(declare-fun c!25288 () Bool)

(assert (=> b!135362 (= c!25288 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!42207 () Bool)

(assert (=> d!42207 e!88154))

(declare-fun res!65017 () Bool)

(assert (=> d!42207 (=> (not res!65017) (not e!88154))))

(assert (=> d!42207 (= res!65017 (not (contains!884 lt!70797 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42207 (= lt!70797 e!88155)))

(declare-fun c!25289 () Bool)

(assert (=> d!42207 (= c!25289 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!42207 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!42207 (= (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)) lt!70797)))

(declare-fun b!135363 () Bool)

(assert (=> b!135363 (= e!88152 e!88156)))

(assert (=> b!135363 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!65018 () Bool)

(assert (=> b!135363 (= res!65018 (contains!884 lt!70797 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135363 (=> (not res!65018) (not e!88156))))

(declare-fun b!135364 () Bool)

(assert (=> b!135364 (= e!88155 (ListLongMap!1654 Nil!1691))))

(declare-fun b!135365 () Bool)

(assert (=> b!135365 (= e!88153 (isEmpty!415 lt!70797))))

(declare-fun b!135366 () Bool)

(declare-fun lt!70794 () Unit!4141)

(declare-fun lt!70798 () Unit!4141)

(assert (=> b!135366 (= lt!70794 lt!70798)))

(declare-fun lt!70799 () (_ BitVec 64))

(declare-fun lt!70796 () V!3481)

(declare-fun lt!70793 () ListLongMap!1653)

(declare-fun lt!70795 () (_ BitVec 64))

(assert (=> b!135366 (not (contains!884 (+!169 lt!70793 (tuple2!2565 lt!70795 lt!70796)) lt!70799))))

(assert (=> b!135366 (= lt!70798 (addStillNotContains!63 lt!70793 lt!70795 lt!70796 lt!70799))))

(assert (=> b!135366 (= lt!70799 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!135366 (= lt!70796 (get!1489 (select (arr!2253 (_values!2847 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!135366 (= lt!70795 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!135366 (= lt!70793 call!14863)))

(assert (=> b!135366 (= e!88150 (+!169 call!14863 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135367 () Bool)

(assert (=> b!135367 (= e!88154 e!88152)))

(declare-fun c!25290 () Bool)

(assert (=> b!135367 (= c!25290 e!88151)))

(declare-fun res!65020 () Bool)

(assert (=> b!135367 (=> (not res!65020) (not e!88151))))

(assert (=> b!135367 (= res!65020 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(assert (= (and d!42207 c!25289) b!135364))

(assert (= (and d!42207 (not c!25289)) b!135362))

(assert (= (and b!135362 c!25288) b!135366))

(assert (= (and b!135362 (not c!25288)) b!135361))

(assert (= (or b!135366 b!135361) bm!14860))

(assert (= (and d!42207 res!65017) b!135357))

(assert (= (and b!135357 res!65019) b!135367))

(assert (= (and b!135367 res!65020) b!135358))

(assert (= (and b!135367 c!25290) b!135363))

(assert (= (and b!135367 (not c!25290)) b!135359))

(assert (= (and b!135363 res!65018) b!135356))

(assert (= (and b!135359 c!25291) b!135360))

(assert (= (and b!135359 (not c!25291)) b!135365))

(declare-fun b_lambda!6037 () Bool)

(assert (=> (not b_lambda!6037) (not b!135356)))

(assert (=> b!135356 t!6147))

(declare-fun b_and!8385 () Bool)

(assert (= b_and!8381 (and (=> t!6147 result!3993) b_and!8385)))

(assert (=> b!135356 t!6149))

(declare-fun b_and!8387 () Bool)

(assert (= b_and!8383 (and (=> t!6149 result!3995) b_and!8387)))

(declare-fun b_lambda!6039 () Bool)

(assert (=> (not b_lambda!6039) (not b!135366)))

(assert (=> b!135366 t!6147))

(declare-fun b_and!8389 () Bool)

(assert (= b_and!8385 (and (=> t!6147 result!3993) b_and!8389)))

(assert (=> b!135366 t!6149))

(declare-fun b_and!8391 () Bool)

(assert (= b_and!8387 (and (=> t!6149 result!3995) b_and!8391)))

(declare-fun m!161431 () Bool)

(assert (=> b!135365 m!161431))

(assert (=> b!135362 m!157443))

(assert (=> b!135362 m!157443))

(assert (=> b!135362 m!157451))

(assert (=> b!135358 m!157443))

(assert (=> b!135358 m!157443))

(assert (=> b!135358 m!157451))

(declare-fun m!161433 () Bool)

(assert (=> b!135360 m!161433))

(declare-fun m!161435 () Bool)

(assert (=> b!135357 m!161435))

(declare-fun m!161437 () Bool)

(assert (=> b!135366 m!161437))

(assert (=> b!135366 m!156809))

(declare-fun m!161439 () Bool)

(assert (=> b!135366 m!161439))

(declare-fun m!161441 () Bool)

(assert (=> b!135366 m!161441))

(declare-fun m!161443 () Bool)

(assert (=> b!135366 m!161443))

(assert (=> b!135366 m!161437))

(declare-fun m!161445 () Bool)

(assert (=> b!135366 m!161445))

(assert (=> b!135366 m!161441))

(declare-fun m!161447 () Bool)

(assert (=> b!135366 m!161447))

(assert (=> b!135366 m!157443))

(assert (=> b!135366 m!156809))

(assert (=> b!135363 m!157443))

(assert (=> b!135363 m!157443))

(declare-fun m!161449 () Bool)

(assert (=> b!135363 m!161449))

(declare-fun m!161451 () Bool)

(assert (=> d!42207 m!161451))

(assert (=> d!42207 m!156651))

(assert (=> bm!14860 m!161433))

(assert (=> b!135356 m!161437))

(assert (=> b!135356 m!156809))

(assert (=> b!135356 m!161439))

(assert (=> b!135356 m!161437))

(assert (=> b!135356 m!157443))

(declare-fun m!161453 () Bool)

(assert (=> b!135356 m!161453))

(assert (=> b!135356 m!157443))

(assert (=> b!135356 m!156809))

(assert (=> bm!14756 d!42207))

(declare-fun b!135369 () Bool)

(declare-fun e!88157 () Option!179)

(declare-fun e!88158 () Option!179)

(assert (=> b!135369 (= e!88157 e!88158)))

(declare-fun c!25293 () Bool)

(assert (=> b!135369 (= c!25293 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69344))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!135368 () Bool)

(assert (=> b!135368 (= e!88157 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 lt!69344))))))))

(declare-fun c!25292 () Bool)

(declare-fun d!42209 () Bool)

(assert (=> d!42209 (= c!25292 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69344))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!42209 (= (getValueByKey!173 (t!6137 (toList!842 lt!69344)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!88157)))

(declare-fun b!135371 () Bool)

(assert (=> b!135371 (= e!88158 None!177)))

(declare-fun b!135370 () Bool)

(assert (=> b!135370 (= e!88158 (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69344))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!42209 c!25292) b!135368))

(assert (= (and d!42209 (not c!25292)) b!135369))

(assert (= (and b!135369 c!25293) b!135370))

(assert (= (and b!135369 (not c!25293)) b!135371))

(assert (=> b!135370 m!156581))

(declare-fun m!161455 () Bool)

(assert (=> b!135370 m!161455))

(assert (=> b!133617 d!42209))

(declare-fun b!135373 () Bool)

(declare-fun e!88159 () Option!179)

(declare-fun e!88160 () Option!179)

(assert (=> b!135373 (= e!88159 e!88160)))

(declare-fun c!25295 () Bool)

(assert (=> b!135373 (= c!25295 (and ((_ is Cons!1690) (toList!842 lt!70005)) (not (= (_1!1293 (h!2295 (toList!842 lt!70005))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135372 () Bool)

(assert (=> b!135372 (= e!88159 (Some!178 (_2!1293 (h!2295 (toList!842 lt!70005)))))))

(declare-fun c!25294 () Bool)

(declare-fun d!42211 () Bool)

(assert (=> d!42211 (= c!25294 (and ((_ is Cons!1690) (toList!842 lt!70005)) (= (_1!1293 (h!2295 (toList!842 lt!70005))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42211 (= (getValueByKey!173 (toList!842 lt!70005) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88159)))

(declare-fun b!135375 () Bool)

(assert (=> b!135375 (= e!88160 None!177)))

(declare-fun b!135374 () Bool)

(assert (=> b!135374 (= e!88160 (getValueByKey!173 (t!6137 (toList!842 lt!70005)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42211 c!25294) b!135372))

(assert (= (and d!42211 (not c!25294)) b!135373))

(assert (= (and b!135373 c!25295) b!135374))

(assert (= (and b!135373 (not c!25295)) b!135375))

(declare-fun m!161457 () Bool)

(assert (=> b!135374 m!161457))

(assert (=> b!133796 d!42211))

(assert (=> b!134008 d!42143))

(declare-fun d!42213 () Bool)

(assert (=> d!42213 (= (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69499 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))) lt!69505)) (v!3203 (getValueByKey!173 (toList!842 (+!169 lt!69499 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))) lt!69505)))))

(assert (=> d!40723 d!42213))

(declare-fun b!135377 () Bool)

(declare-fun e!88161 () Option!179)

(declare-fun e!88162 () Option!179)

(assert (=> b!135377 (= e!88161 e!88162)))

(declare-fun c!25297 () Bool)

(assert (=> b!135377 (= c!25297 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69499 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69499 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))) lt!69505))))))

(declare-fun b!135376 () Bool)

(assert (=> b!135376 (= e!88161 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69499 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))))))))

(declare-fun c!25296 () Bool)

(declare-fun d!42215 () Bool)

(assert (=> d!42215 (= c!25296 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69499 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69499 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))))) lt!69505)))))

(assert (=> d!42215 (= (getValueByKey!173 (toList!842 (+!169 lt!69499 (tuple2!2565 lt!69497 (minValue!2719 newMap!16)))) lt!69505) e!88161)))

(declare-fun b!135379 () Bool)

(assert (=> b!135379 (= e!88162 None!177)))

(declare-fun b!135378 () Bool)

(assert (=> b!135378 (= e!88162 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69499 (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))) lt!69505))))

(assert (= (and d!42215 c!25296) b!135376))

(assert (= (and d!42215 (not c!25296)) b!135377))

(assert (= (and b!135377 c!25297) b!135378))

(assert (= (and b!135377 (not c!25297)) b!135379))

(declare-fun m!161459 () Bool)

(assert (=> b!135378 m!161459))

(assert (=> d!40723 d!42215))

(declare-fun b!135380 () Bool)

(declare-fun res!65021 () Bool)

(declare-fun e!88167 () Bool)

(assert (=> b!135380 (=> (not res!65021) (not e!88167))))

(declare-fun lt!70800 () List!1694)

(assert (=> b!135380 (= res!65021 (containsKey!176 lt!70800 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!135381 () Bool)

(declare-fun e!88165 () List!1694)

(declare-fun e!88166 () List!1694)

(assert (=> b!135381 (= e!88165 e!88166)))

(declare-fun c!25301 () Bool)

(assert (=> b!135381 (= c!25301 (and ((_ is Cons!1690) (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))))) (= (_1!1293 (h!2295 (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun bm!14861 () Bool)

(declare-fun call!14865 () List!1694)

(declare-fun call!14864 () List!1694)

(assert (=> bm!14861 (= call!14865 call!14864)))

(declare-fun b!135382 () Bool)

(declare-fun e!88163 () List!1694)

(assert (=> b!135382 (= e!88163 call!14865)))

(declare-fun c!25300 () Bool)

(declare-fun b!135383 () Bool)

(assert (=> b!135383 (= c!25300 (and ((_ is Cons!1690) (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))))) (bvsgt (_1!1293 (h!2295 (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (=> b!135383 (= e!88166 e!88163)))

(declare-fun b!135384 () Bool)

(assert (=> b!135384 (= e!88167 (contains!886 lt!70800 (tuple2!2565 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!135385 () Bool)

(assert (=> b!135385 (= e!88166 call!14864)))

(declare-fun d!42217 () Bool)

(assert (=> d!42217 e!88167))

(declare-fun res!65022 () Bool)

(assert (=> d!42217 (=> (not res!65022) (not e!88167))))

(assert (=> d!42217 (= res!65022 (isStrictlySorted!309 lt!70800))))

(assert (=> d!42217 (= lt!70800 e!88165)))

(declare-fun c!25299 () Bool)

(assert (=> d!42217 (= c!25299 (and ((_ is Cons!1690) (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (=> d!42217 (isStrictlySorted!309 (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))))))

(assert (=> d!42217 (= (insertStrictlySorted!91 (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!70800)))

(declare-fun e!88164 () List!1694)

(declare-fun b!135386 () Bool)

(assert (=> b!135386 (= e!88164 (ite c!25301 (t!6137 (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))))) (ite c!25300 (Cons!1690 (h!2295 (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))))) (t!6137 (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629)))))) Nil!1691)))))

(declare-fun b!135387 () Bool)

(declare-fun call!14866 () List!1694)

(assert (=> b!135387 (= e!88165 call!14866)))

(declare-fun b!135388 () Bool)

(assert (=> b!135388 (= e!88163 call!14865)))

(declare-fun b!135389 () Bool)

(assert (=> b!135389 (= e!88164 (insertStrictlySorted!91 (t!6137 (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun bm!14862 () Bool)

(assert (=> bm!14862 (= call!14864 call!14866)))

(declare-fun bm!14863 () Bool)

(assert (=> bm!14863 (= call!14866 ($colon$colon!91 e!88164 (ite c!25299 (h!2295 (t!6137 (toList!842 (ite c!24584 call!14626 (ite c!24586 call!14627 call!14629))))) (tuple2!2565 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))))

(declare-fun c!25298 () Bool)

(assert (=> bm!14863 (= c!25298 c!25299)))

(assert (= (and d!42217 c!25299) b!135387))

(assert (= (and d!42217 (not c!25299)) b!135381))

(assert (= (and b!135381 c!25301) b!135385))

(assert (= (and b!135381 (not c!25301)) b!135383))

(assert (= (and b!135383 c!25300) b!135388))

(assert (= (and b!135383 (not c!25300)) b!135382))

(assert (= (or b!135388 b!135382) bm!14861))

(assert (= (or b!135385 bm!14861) bm!14862))

(assert (= (or b!135387 bm!14862) bm!14863))

(assert (= (and bm!14863 c!25298) b!135389))

(assert (= (and bm!14863 (not c!25298)) b!135386))

(assert (= (and d!42217 res!65022) b!135380))

(assert (= (and b!135380 res!65021) b!135384))

(declare-fun m!161461 () Bool)

(assert (=> b!135384 m!161461))

(declare-fun m!161463 () Bool)

(assert (=> b!135389 m!161463))

(declare-fun m!161465 () Bool)

(assert (=> bm!14863 m!161465))

(declare-fun m!161467 () Bool)

(assert (=> b!135380 m!161467))

(declare-fun m!161469 () Bool)

(assert (=> d!42217 m!161469))

(assert (=> d!42217 m!158907))

(assert (=> b!134051 d!42217))

(declare-fun lt!70801 () Bool)

(declare-fun d!42219 () Bool)

(assert (=> d!42219 (= lt!70801 (select (content!134 (toList!842 lt!70148)) (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))))

(declare-fun e!88169 () Bool)

(assert (=> d!42219 (= lt!70801 e!88169)))

(declare-fun res!65024 () Bool)

(assert (=> d!42219 (=> (not res!65024) (not e!88169))))

(assert (=> d!42219 (= res!65024 ((_ is Cons!1690) (toList!842 lt!70148)))))

(assert (=> d!42219 (= (contains!886 (toList!842 lt!70148) (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))) lt!70801)))

(declare-fun b!135390 () Bool)

(declare-fun e!88168 () Bool)

(assert (=> b!135390 (= e!88169 e!88168)))

(declare-fun res!65023 () Bool)

(assert (=> b!135390 (=> res!65023 e!88168)))

(assert (=> b!135390 (= res!65023 (= (h!2295 (toList!842 lt!70148)) (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))))

(declare-fun b!135391 () Bool)

(assert (=> b!135391 (= e!88168 (contains!886 (t!6137 (toList!842 lt!70148)) (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))))

(assert (= (and d!42219 res!65024) b!135390))

(assert (= (and b!135390 (not res!65023)) b!135391))

(declare-fun m!161471 () Bool)

(assert (=> d!42219 m!161471))

(declare-fun m!161473 () Bool)

(assert (=> d!42219 m!161473))

(declare-fun m!161475 () Bool)

(assert (=> b!135391 m!161475))

(assert (=> b!134016 d!42219))

(assert (=> d!40985 d!40509))

(declare-fun d!42221 () Bool)

(assert (=> d!42221 (= (get!1492 (getValueByKey!173 (toList!842 lt!69526) lt!69528)) (v!3203 (getValueByKey!173 (toList!842 lt!69526) lt!69528)))))

(assert (=> d!40921 d!42221))

(declare-fun b!135393 () Bool)

(declare-fun e!88170 () Option!179)

(declare-fun e!88171 () Option!179)

(assert (=> b!135393 (= e!88170 e!88171)))

(declare-fun c!25303 () Bool)

(assert (=> b!135393 (= c!25303 (and ((_ is Cons!1690) (toList!842 lt!69526)) (not (= (_1!1293 (h!2295 (toList!842 lt!69526))) lt!69528))))))

(declare-fun b!135392 () Bool)

(assert (=> b!135392 (= e!88170 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69526)))))))

(declare-fun d!42223 () Bool)

(declare-fun c!25302 () Bool)

(assert (=> d!42223 (= c!25302 (and ((_ is Cons!1690) (toList!842 lt!69526)) (= (_1!1293 (h!2295 (toList!842 lt!69526))) lt!69528)))))

(assert (=> d!42223 (= (getValueByKey!173 (toList!842 lt!69526) lt!69528) e!88170)))

(declare-fun b!135395 () Bool)

(assert (=> b!135395 (= e!88171 None!177)))

(declare-fun b!135394 () Bool)

(assert (=> b!135394 (= e!88171 (getValueByKey!173 (t!6137 (toList!842 lt!69526)) lt!69528))))

(assert (= (and d!42223 c!25302) b!135392))

(assert (= (and d!42223 (not c!25302)) b!135393))

(assert (= (and b!135393 c!25303) b!135394))

(assert (= (and b!135393 (not c!25303)) b!135395))

(declare-fun m!161477 () Bool)

(assert (=> b!135394 m!161477))

(assert (=> d!40921 d!42223))

(assert (=> d!40851 d!40849))

(declare-fun d!42225 () Bool)

(assert (=> d!42225 (= (getValueByKey!173 lt!69546 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42225 true))

(declare-fun _$22!490 () Unit!4141)

(assert (=> d!42225 (= (choose!833 lt!69546 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) _$22!490)))

(declare-fun bs!5690 () Bool)

(assert (= bs!5690 d!42225))

(assert (=> bs!5690 m!156919))

(assert (=> d!40851 d!42225))

(declare-fun d!42227 () Bool)

(declare-fun res!65025 () Bool)

(declare-fun e!88172 () Bool)

(assert (=> d!42227 (=> res!65025 e!88172)))

(assert (=> d!42227 (= res!65025 (or ((_ is Nil!1691) lt!69546) ((_ is Nil!1691) (t!6137 lt!69546))))))

(assert (=> d!42227 (= (isStrictlySorted!309 lt!69546) e!88172)))

(declare-fun b!135396 () Bool)

(declare-fun e!88173 () Bool)

(assert (=> b!135396 (= e!88172 e!88173)))

(declare-fun res!65026 () Bool)

(assert (=> b!135396 (=> (not res!65026) (not e!88173))))

(assert (=> b!135396 (= res!65026 (bvslt (_1!1293 (h!2295 lt!69546)) (_1!1293 (h!2295 (t!6137 lt!69546)))))))

(declare-fun b!135397 () Bool)

(assert (=> b!135397 (= e!88173 (isStrictlySorted!309 (t!6137 lt!69546)))))

(assert (= (and d!42227 (not res!65025)) b!135396))

(assert (= (and b!135396 res!65026) b!135397))

(declare-fun m!161479 () Bool)

(assert (=> b!135397 m!161479))

(assert (=> d!40851 d!42227))

(declare-fun d!42229 () Bool)

(declare-fun res!65027 () Bool)

(declare-fun e!88174 () Bool)

(assert (=> d!42229 (=> res!65027 e!88174)))

(assert (=> d!42229 (= res!65027 (= (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!69376))))

(assert (=> d!42229 (= (arrayContainsKey!0 (_keys!4613 newMap!16) lt!69376 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!88174)))

(declare-fun b!135398 () Bool)

(declare-fun e!88175 () Bool)

(assert (=> b!135398 (= e!88174 e!88175)))

(declare-fun res!65028 () Bool)

(assert (=> b!135398 (=> (not res!65028) (not e!88175))))

(assert (=> b!135398 (= res!65028 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!135399 () Bool)

(assert (=> b!135399 (= e!88175 (arrayContainsKey!0 (_keys!4613 newMap!16) lt!69376 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!42229 (not res!65027)) b!135398))

(assert (= (and b!135398 res!65028) b!135399))

(assert (=> d!42229 m!157443))

(declare-fun m!161481 () Bool)

(assert (=> b!135399 m!161481))

(assert (=> b!133905 d!42229))

(assert (=> d!40975 d!40591))

(declare-fun d!42231 () Bool)

(declare-fun res!65029 () Bool)

(declare-fun e!88176 () Bool)

(assert (=> d!42231 (=> res!65029 e!88176)))

(assert (=> d!42231 (= res!65029 (and ((_ is Cons!1690) (toList!842 lt!69529)) (= (_1!1293 (h!2295 (toList!842 lt!69529))) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!42231 (= (containsKey!176 (toList!842 lt!69529) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) e!88176)))

(declare-fun b!135400 () Bool)

(declare-fun e!88177 () Bool)

(assert (=> b!135400 (= e!88176 e!88177)))

(declare-fun res!65030 () Bool)

(assert (=> b!135400 (=> (not res!65030) (not e!88177))))

(assert (=> b!135400 (= res!65030 (and (or (not ((_ is Cons!1690) (toList!842 lt!69529))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69529))) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))) ((_ is Cons!1690) (toList!842 lt!69529)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69529))) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun b!135401 () Bool)

(assert (=> b!135401 (= e!88177 (containsKey!176 (t!6137 (toList!842 lt!69529)) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!42231 (not res!65029)) b!135400))

(assert (= (and b!135400 res!65030) b!135401))

(assert (=> b!135401 m!156679))

(declare-fun m!161483 () Bool)

(assert (=> b!135401 m!161483))

(assert (=> d!40971 d!42231))

(declare-fun d!42233 () Bool)

(declare-fun res!65031 () Bool)

(declare-fun e!88178 () Bool)

(assert (=> d!42233 (=> res!65031 e!88178)))

(assert (=> d!42233 (= res!65031 (and ((_ is Cons!1690) (t!6137 (toList!842 call!14589))) (= (_1!1293 (h!2295 (t!6137 (toList!842 call!14589)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!42233 (= (containsKey!176 (t!6137 (toList!842 call!14589)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!88178)))

(declare-fun b!135402 () Bool)

(declare-fun e!88179 () Bool)

(assert (=> b!135402 (= e!88178 e!88179)))

(declare-fun res!65032 () Bool)

(assert (=> b!135402 (=> (not res!65032) (not e!88179))))

(assert (=> b!135402 (= res!65032 (and (or (not ((_ is Cons!1690) (t!6137 (toList!842 call!14589)))) (bvsle (_1!1293 (h!2295 (t!6137 (toList!842 call!14589)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1690) (t!6137 (toList!842 call!14589))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 call!14589)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!135403 () Bool)

(assert (=> b!135403 (= e!88179 (containsKey!176 (t!6137 (t!6137 (toList!842 call!14589))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!42233 (not res!65031)) b!135402))

(assert (= (and b!135402 res!65032) b!135403))

(assert (=> b!135403 m!156395))

(declare-fun m!161485 () Bool)

(assert (=> b!135403 m!161485))

(assert (=> b!133663 d!42233))

(declare-fun d!42235 () Bool)

(assert (=> d!42235 (= (apply!116 lt!69804 (select (arr!2252 lt!69441) #b00000000000000000000000000000000)) (get!1492 (getValueByKey!173 (toList!842 lt!69804) (select (arr!2252 lt!69441) #b00000000000000000000000000000000))))))

(declare-fun bs!5691 () Bool)

(assert (= bs!5691 d!42235))

(assert (=> bs!5691 m!157625))

(assert (=> bs!5691 m!160121))

(assert (=> bs!5691 m!160121))

(declare-fun m!161487 () Bool)

(assert (=> bs!5691 m!161487))

(assert (=> b!133459 d!42235))

(declare-fun d!42237 () Bool)

(declare-fun c!25304 () Bool)

(assert (=> d!42237 (= c!25304 ((_ is ValueCellFull!1094) (select (arr!2253 lt!69466) #b00000000000000000000000000000000)))))

(declare-fun e!88180 () V!3481)

(assert (=> d!42237 (= (get!1489 (select (arr!2253 lt!69466) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!88180)))

(declare-fun b!135404 () Bool)

(assert (=> b!135404 (= e!88180 (get!1490 (select (arr!2253 lt!69466) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135405 () Bool)

(assert (=> b!135405 (= e!88180 (get!1491 (select (arr!2253 lt!69466) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42237 c!25304) b!135404))

(assert (= (and d!42237 (not c!25304)) b!135405))

(assert (=> b!135404 m!157661))

(assert (=> b!135404 m!156809))

(declare-fun m!161489 () Bool)

(assert (=> b!135404 m!161489))

(assert (=> b!135405 m!157661))

(assert (=> b!135405 m!156809))

(declare-fun m!161491 () Bool)

(assert (=> b!135405 m!161491))

(assert (=> b!133459 d!42237))

(declare-fun d!42239 () Bool)

(assert (=> d!42239 (isDefined!125 (getValueByKey!173 (toList!842 lt!69577) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!70802 () Unit!4141)

(assert (=> d!42239 (= lt!70802 (choose!831 (toList!842 lt!69577) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!88181 () Bool)

(assert (=> d!42239 e!88181))

(declare-fun res!65033 () Bool)

(assert (=> d!42239 (=> (not res!65033) (not e!88181))))

(assert (=> d!42239 (= res!65033 (isStrictlySorted!309 (toList!842 lt!69577)))))

(assert (=> d!42239 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69577) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) lt!70802)))

(declare-fun b!135406 () Bool)

(assert (=> b!135406 (= e!88181 (containsKey!176 (toList!842 lt!69577) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!42239 res!65033) b!135406))

(assert (=> d!42239 m!156679))

(assert (=> d!42239 m!158643))

(assert (=> d!42239 m!158643))

(assert (=> d!42239 m!158645))

(assert (=> d!42239 m!156679))

(declare-fun m!161493 () Bool)

(assert (=> d!42239 m!161493))

(assert (=> d!42239 m!159463))

(assert (=> b!135406 m!156679))

(assert (=> b!135406 m!158639))

(assert (=> b!133972 d!42239))

(assert (=> b!133972 d!41793))

(assert (=> b!133972 d!41687))

(declare-fun d!42241 () Bool)

(assert (=> d!42241 (= (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69526 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))) lt!69528)) (v!3203 (getValueByKey!173 (toList!842 (+!169 lt!69526 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))) lt!69528)))))

(assert (=> d!40931 d!42241))

(declare-fun b!135408 () Bool)

(declare-fun e!88182 () Option!179)

(declare-fun e!88183 () Option!179)

(assert (=> b!135408 (= e!88182 e!88183)))

(declare-fun c!25306 () Bool)

(assert (=> b!135408 (= c!25306 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69526 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69526 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))) lt!69528))))))

(declare-fun b!135407 () Bool)

(assert (=> b!135407 (= e!88182 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69526 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))))))))

(declare-fun d!42243 () Bool)

(declare-fun c!25305 () Bool)

(assert (=> d!42243 (= c!25305 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69526 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69526 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))) lt!69528)))))

(assert (=> d!42243 (= (getValueByKey!173 (toList!842 (+!169 lt!69526 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))) lt!69528) e!88182)))

(declare-fun b!135410 () Bool)

(assert (=> b!135410 (= e!88183 None!177)))

(declare-fun b!135409 () Bool)

(assert (=> b!135409 (= e!88183 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69526 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))) lt!69528))))

(assert (= (and d!42243 c!25305) b!135407))

(assert (= (and d!42243 (not c!25305)) b!135408))

(assert (= (and b!135408 c!25306) b!135409))

(assert (= (and b!135408 (not c!25306)) b!135410))

(declare-fun m!161495 () Bool)

(assert (=> b!135409 m!161495))

(assert (=> d!40931 d!42243))

(declare-fun d!42245 () Bool)

(declare-fun res!65034 () Bool)

(declare-fun e!88184 () Bool)

(assert (=> d!42245 (=> res!65034 e!88184)))

(assert (=> d!42245 (= res!65034 (and ((_ is Cons!1690) (toList!842 lt!69577)) (= (_1!1293 (h!2295 (toList!842 lt!69577))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42245 (= (containsKey!176 (toList!842 lt!69577) #b0000000000000000000000000000000000000000000000000000000000000000) e!88184)))

(declare-fun b!135411 () Bool)

(declare-fun e!88185 () Bool)

(assert (=> b!135411 (= e!88184 e!88185)))

(declare-fun res!65035 () Bool)

(assert (=> b!135411 (=> (not res!65035) (not e!88185))))

(assert (=> b!135411 (= res!65035 (and (or (not ((_ is Cons!1690) (toList!842 lt!69577))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69577))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1690) (toList!842 lt!69577)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69577))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135412 () Bool)

(assert (=> b!135412 (= e!88185 (containsKey!176 (t!6137 (toList!842 lt!69577)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42245 (not res!65034)) b!135411))

(assert (= (and b!135411 res!65035) b!135412))

(declare-fun m!161497 () Bool)

(assert (=> b!135412 m!161497))

(assert (=> d!40837 d!42245))

(assert (=> b!133779 d!42207))

(declare-fun d!42247 () Bool)

(declare-fun lt!70803 () Bool)

(assert (=> d!42247 (= lt!70803 (select (content!133 (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!88187 () Bool)

(assert (=> d!42247 (= lt!70803 e!88187)))

(declare-fun res!65036 () Bool)

(assert (=> d!42247 (=> (not res!65036) (not e!88187))))

(assert (=> d!42247 (= res!65036 ((_ is Cons!1689) (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690)))))

(assert (=> d!42247 (= (contains!885 (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690) (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) lt!70803)))

(declare-fun b!135413 () Bool)

(declare-fun e!88186 () Bool)

(assert (=> b!135413 (= e!88187 e!88186)))

(declare-fun res!65037 () Bool)

(assert (=> b!135413 (=> res!65037 e!88186)))

(assert (=> b!135413 (= res!65037 (= (h!2294 (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!135414 () Bool)

(assert (=> b!135414 (= e!88186 (contains!885 (t!6136 (ite c!24650 (Cons!1689 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) (select (arr!2252 (_keys!4613 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!42247 res!65036) b!135413))

(assert (= (and b!135413 (not res!65037)) b!135414))

(declare-fun m!161499 () Bool)

(assert (=> d!42247 m!161499))

(assert (=> d!42247 m!157443))

(declare-fun m!161501 () Bool)

(assert (=> d!42247 m!161501))

(assert (=> b!135414 m!157443))

(declare-fun m!161503 () Bool)

(assert (=> b!135414 m!161503))

(assert (=> b!133963 d!42247))

(declare-fun d!42249 () Bool)

(assert (=> d!42249 (arrayNoDuplicates!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) lt!69467 lt!69442)))

(assert (=> d!42249 true))

(declare-fun _$65!62 () Unit!4141)

(assert (=> d!42249 (= (choose!41 (_keys!4613 newMap!16) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) lt!69467 lt!69442) _$65!62)))

(declare-fun bs!5692 () Bool)

(assert (= bs!5692 d!42249))

(assert (=> bs!5692 m!156719))

(assert (=> bs!5692 m!156723))

(assert (=> d!40675 d!42249))

(declare-fun d!42251 () Bool)

(declare-fun e!88189 () Bool)

(assert (=> d!42251 e!88189))

(declare-fun res!65038 () Bool)

(assert (=> d!42251 (=> res!65038 e!88189)))

(declare-fun lt!70804 () Bool)

(assert (=> d!42251 (= res!65038 (not lt!70804))))

(declare-fun lt!70805 () Bool)

(assert (=> d!42251 (= lt!70804 lt!70805)))

(declare-fun lt!70806 () Unit!4141)

(declare-fun e!88188 () Unit!4141)

(assert (=> d!42251 (= lt!70806 e!88188)))

(declare-fun c!25307 () Bool)

(assert (=> d!42251 (= c!25307 lt!70805)))

(assert (=> d!42251 (= lt!70805 (containsKey!176 (toList!842 lt!69680) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42251 (= (contains!884 lt!69680 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70804)))

(declare-fun b!135415 () Bool)

(declare-fun lt!70807 () Unit!4141)

(assert (=> b!135415 (= e!88188 lt!70807)))

(assert (=> b!135415 (= lt!70807 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69680) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135415 (isDefined!125 (getValueByKey!173 (toList!842 lt!69680) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135416 () Bool)

(declare-fun Unit!4252 () Unit!4141)

(assert (=> b!135416 (= e!88188 Unit!4252)))

(declare-fun b!135417 () Bool)

(assert (=> b!135417 (= e!88189 (isDefined!125 (getValueByKey!173 (toList!842 lt!69680) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42251 c!25307) b!135415))

(assert (= (and d!42251 (not c!25307)) b!135416))

(assert (= (and d!42251 (not res!65038)) b!135417))

(declare-fun m!161505 () Bool)

(assert (=> d!42251 m!161505))

(declare-fun m!161507 () Bool)

(assert (=> b!135415 m!161507))

(declare-fun m!161509 () Bool)

(assert (=> b!135415 m!161509))

(assert (=> b!135415 m!161509))

(declare-fun m!161511 () Bool)

(assert (=> b!135415 m!161511))

(assert (=> b!135417 m!161509))

(assert (=> b!135417 m!161509))

(assert (=> b!135417 m!161511))

(assert (=> bm!14681 d!42251))

(declare-fun d!42253 () Bool)

(declare-fun lt!70808 () Bool)

(assert (=> d!42253 (= lt!70808 (select (content!134 (toList!842 lt!69868)) (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))))

(declare-fun e!88191 () Bool)

(assert (=> d!42253 (= lt!70808 e!88191)))

(declare-fun res!65040 () Bool)

(assert (=> d!42253 (=> (not res!65040) (not e!88191))))

(assert (=> d!42253 (= res!65040 ((_ is Cons!1690) (toList!842 lt!69868)))))

(assert (=> d!42253 (= (contains!886 (toList!842 lt!69868) (tuple2!2565 lt!69497 (minValue!2719 newMap!16))) lt!70808)))

(declare-fun b!135418 () Bool)

(declare-fun e!88190 () Bool)

(assert (=> b!135418 (= e!88191 e!88190)))

(declare-fun res!65039 () Bool)

(assert (=> b!135418 (=> res!65039 e!88190)))

(assert (=> b!135418 (= res!65039 (= (h!2295 (toList!842 lt!69868)) (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))))

(declare-fun b!135419 () Bool)

(assert (=> b!135419 (= e!88190 (contains!886 (t!6137 (toList!842 lt!69868)) (tuple2!2565 lt!69497 (minValue!2719 newMap!16))))))

(assert (= (and d!42253 res!65040) b!135418))

(assert (= (and b!135418 (not res!65039)) b!135419))

(declare-fun m!161513 () Bool)

(assert (=> d!42253 m!161513))

(declare-fun m!161515 () Bool)

(assert (=> d!42253 m!161515))

(declare-fun m!161517 () Bool)

(assert (=> b!135419 m!161517))

(assert (=> b!133554 d!42253))

(declare-fun lt!70809 () Bool)

(declare-fun d!42255 () Bool)

(assert (=> d!42255 (= lt!70809 (select (content!134 (toList!842 lt!70153)) (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(declare-fun e!88193 () Bool)

(assert (=> d!42255 (= lt!70809 e!88193)))

(declare-fun res!65042 () Bool)

(assert (=> d!42255 (=> (not res!65042) (not e!88193))))

(assert (=> d!42255 (= res!65042 ((_ is Cons!1690) (toList!842 lt!70153)))))

(assert (=> d!42255 (= (contains!886 (toList!842 lt!70153) (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!70809)))

(declare-fun b!135420 () Bool)

(declare-fun e!88192 () Bool)

(assert (=> b!135420 (= e!88193 e!88192)))

(declare-fun res!65041 () Bool)

(assert (=> b!135420 (=> res!65041 e!88192)))

(assert (=> b!135420 (= res!65041 (= (h!2295 (toList!842 lt!70153)) (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(declare-fun b!135421 () Bool)

(assert (=> b!135421 (= e!88192 (contains!886 (t!6137 (toList!842 lt!70153)) (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(assert (= (and d!42255 res!65042) b!135420))

(assert (= (and b!135420 (not res!65041)) b!135421))

(declare-fun m!161519 () Bool)

(assert (=> d!42255 m!161519))

(declare-fun m!161521 () Bool)

(assert (=> d!42255 m!161521))

(declare-fun m!161523 () Bool)

(assert (=> b!135421 m!161523))

(assert (=> b!134019 d!42255))

(declare-fun b!135423 () Bool)

(declare-fun e!88194 () Option!179)

(declare-fun e!88195 () Option!179)

(assert (=> b!135423 (= e!88194 e!88195)))

(declare-fun c!25309 () Bool)

(assert (=> b!135423 (= c!25309 (and ((_ is Cons!1690) (toList!842 lt!69858)) (not (= (_1!1293 (h!2295 (toList!842 lt!69858))) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))))

(declare-fun b!135422 () Bool)

(assert (=> b!135422 (= e!88194 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69858)))))))

(declare-fun c!25308 () Bool)

(declare-fun d!42257 () Bool)

(assert (=> d!42257 (= c!25308 (and ((_ is Cons!1690) (toList!842 lt!69858)) (= (_1!1293 (h!2295 (toList!842 lt!69858))) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (=> d!42257 (= (getValueByKey!173 (toList!842 lt!69858) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) e!88194)))

(declare-fun b!135425 () Bool)

(assert (=> b!135425 (= e!88195 None!177)))

(declare-fun b!135424 () Bool)

(assert (=> b!135424 (= e!88195 (getValueByKey!173 (t!6137 (toList!842 lt!69858)) (_1!1293 (tuple2!2565 lt!69510 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (= (and d!42257 c!25308) b!135422))

(assert (= (and d!42257 (not c!25308)) b!135423))

(assert (= (and b!135423 c!25309) b!135424))

(assert (= (and b!135423 (not c!25309)) b!135425))

(declare-fun m!161525 () Bool)

(assert (=> b!135424 m!161525))

(assert (=> b!133547 d!42257))

(declare-fun d!42259 () Bool)

(declare-fun res!65043 () Bool)

(declare-fun e!88196 () Bool)

(assert (=> d!42259 (=> res!65043 e!88196)))

(assert (=> d!42259 (= res!65043 (and ((_ is Cons!1690) (toList!842 lt!69634)) (= (_1!1293 (h!2295 (toList!842 lt!69634))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!42259 (= (containsKey!176 (toList!842 lt!69634) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!88196)))

(declare-fun b!135426 () Bool)

(declare-fun e!88197 () Bool)

(assert (=> b!135426 (= e!88196 e!88197)))

(declare-fun res!65044 () Bool)

(assert (=> b!135426 (=> (not res!65044) (not e!88197))))

(assert (=> b!135426 (= res!65044 (and (or (not ((_ is Cons!1690) (toList!842 lt!69634))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69634))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Cons!1690) (toList!842 lt!69634)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69634))) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!135427 () Bool)

(assert (=> b!135427 (= e!88197 (containsKey!176 (t!6137 (toList!842 lt!69634)) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!42259 (not res!65043)) b!135426))

(assert (= (and b!135426 res!65044) b!135427))

(declare-fun m!161527 () Bool)

(assert (=> b!135427 m!161527))

(assert (=> d!40827 d!42259))

(declare-fun b!135429 () Bool)

(declare-fun e!88198 () Option!179)

(declare-fun e!88199 () Option!179)

(assert (=> b!135429 (= e!88198 e!88199)))

(declare-fun c!25311 () Bool)

(assert (=> b!135429 (= c!25311 (and ((_ is Cons!1690) (toList!842 lt!69846)) (not (= (_1!1293 (h!2295 (toList!842 lt!69846))) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))))

(declare-fun b!135428 () Bool)

(assert (=> b!135428 (= e!88198 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69846)))))))

(declare-fun d!42261 () Bool)

(declare-fun c!25310 () Bool)

(assert (=> d!42261 (= c!25310 (and ((_ is Cons!1690) (toList!842 lt!69846)) (= (_1!1293 (h!2295 (toList!842 lt!69846))) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(assert (=> d!42261 (= (getValueByKey!173 (toList!842 lt!69846) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) e!88198)))

(declare-fun b!135431 () Bool)

(assert (=> b!135431 (= e!88199 None!177)))

(declare-fun b!135430 () Bool)

(assert (=> b!135430 (= e!88199 (getValueByKey!173 (t!6137 (toList!842 lt!69846)) (_1!1293 (ite (or c!24630 c!24632) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (= (and d!42261 c!25310) b!135428))

(assert (= (and d!42261 (not c!25310)) b!135429))

(assert (= (and b!135429 c!25311) b!135430))

(assert (= (and b!135429 (not c!25311)) b!135431))

(declare-fun m!161529 () Bool)

(assert (=> b!135430 m!161529))

(assert (=> b!133538 d!42261))

(assert (=> b!133645 d!42115))

(assert (=> b!133645 d!40855))

(assert (=> b!133371 d!41535))

(declare-fun d!42263 () Bool)

(assert (=> d!42263 (isDefined!125 (getValueByKey!173 (toList!842 lt!69545) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70810 () Unit!4141)

(assert (=> d!42263 (= lt!70810 (choose!831 (toList!842 lt!69545) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88200 () Bool)

(assert (=> d!42263 e!88200))

(declare-fun res!65045 () Bool)

(assert (=> d!42263 (=> (not res!65045) (not e!88200))))

(assert (=> d!42263 (= res!65045 (isStrictlySorted!309 (toList!842 lt!69545)))))

(assert (=> d!42263 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69545) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70810)))

(declare-fun b!135432 () Bool)

(assert (=> b!135432 (= e!88200 (containsKey!176 (toList!842 lt!69545) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42263 res!65045) b!135432))

(assert (=> d!42263 m!156925))

(assert (=> d!42263 m!156925))

(assert (=> d!42263 m!158175))

(declare-fun m!161531 () Bool)

(assert (=> d!42263 m!161531))

(declare-fun m!161533 () Bool)

(assert (=> d!42263 m!161533))

(assert (=> b!135432 m!158171))

(assert (=> b!133752 d!42263))

(declare-fun d!42265 () Bool)

(assert (=> d!42265 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69545) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69545) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bs!5693 () Bool)

(assert (= bs!5693 d!42265))

(assert (=> bs!5693 m!156925))

(declare-fun m!161535 () Bool)

(assert (=> bs!5693 m!161535))

(assert (=> b!133752 d!42265))

(assert (=> b!133752 d!40835))

(declare-fun d!42267 () Bool)

(declare-fun res!65046 () Bool)

(declare-fun e!88201 () Bool)

(assert (=> d!42267 (=> res!65046 e!88201)))

(assert (=> d!42267 (= res!65046 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69344))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42267 (= (containsKey!176 (t!6137 (toList!842 lt!69344)) #b0000000000000000000000000000000000000000000000000000000000000000) e!88201)))

(declare-fun b!135433 () Bool)

(declare-fun e!88202 () Bool)

(assert (=> b!135433 (= e!88201 e!88202)))

(declare-fun res!65047 () Bool)

(assert (=> b!135433 (=> (not res!65047) (not e!88202))))

(assert (=> b!135433 (= res!65047 (and (or (not ((_ is Cons!1690) (t!6137 (toList!842 lt!69344)))) (bvsle (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344)))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1690) (t!6137 (toList!842 lt!69344))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135434 () Bool)

(assert (=> b!135434 (= e!88202 (containsKey!176 (t!6137 (t!6137 (toList!842 lt!69344))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42267 (not res!65046)) b!135433))

(assert (= (and b!135433 res!65047) b!135434))

(declare-fun m!161537 () Bool)

(assert (=> b!135434 m!161537))

(assert (=> b!133277 d!42267))

(declare-fun d!42269 () Bool)

(assert (=> d!42269 (= (get!1491 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!134031 d!42269))

(declare-fun d!42271 () Bool)

(declare-fun e!88204 () Bool)

(assert (=> d!42271 e!88204))

(declare-fun res!65048 () Bool)

(assert (=> d!42271 (=> res!65048 e!88204)))

(declare-fun lt!70811 () Bool)

(assert (=> d!42271 (= res!65048 (not lt!70811))))

(declare-fun lt!70812 () Bool)

(assert (=> d!42271 (= lt!70811 lt!70812)))

(declare-fun lt!70813 () Unit!4141)

(declare-fun e!88203 () Unit!4141)

(assert (=> d!42271 (= lt!70813 e!88203)))

(declare-fun c!25312 () Bool)

(assert (=> d!42271 (= c!25312 lt!70812)))

(assert (=> d!42271 (= lt!70812 (containsKey!176 (toList!842 lt!69694) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42271 (= (contains!884 lt!69694 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70811)))

(declare-fun b!135435 () Bool)

(declare-fun lt!70814 () Unit!4141)

(assert (=> b!135435 (= e!88203 lt!70814)))

(assert (=> b!135435 (= lt!70814 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69694) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135435 (isDefined!125 (getValueByKey!173 (toList!842 lt!69694) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135436 () Bool)

(declare-fun Unit!4253 () Unit!4141)

(assert (=> b!135436 (= e!88203 Unit!4253)))

(declare-fun b!135437 () Bool)

(assert (=> b!135437 (= e!88204 (isDefined!125 (getValueByKey!173 (toList!842 lt!69694) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42271 c!25312) b!135435))

(assert (= (and d!42271 (not c!25312)) b!135436))

(assert (= (and d!42271 (not res!65048)) b!135437))

(declare-fun m!161539 () Bool)

(assert (=> d!42271 m!161539))

(declare-fun m!161541 () Bool)

(assert (=> b!135435 m!161541))

(declare-fun m!161543 () Bool)

(assert (=> b!135435 m!161543))

(assert (=> b!135435 m!161543))

(declare-fun m!161545 () Bool)

(assert (=> b!135435 m!161545))

(assert (=> b!135437 m!161543))

(assert (=> b!135437 m!161543))

(assert (=> b!135437 m!161545))

(assert (=> d!40593 d!42271))

(assert (=> d!40593 d!40431))

(declare-fun d!42273 () Bool)

(declare-fun lt!70815 () Bool)

(assert (=> d!42273 (= lt!70815 (select (content!134 lt!70171) (tuple2!2565 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun e!88206 () Bool)

(assert (=> d!42273 (= lt!70815 e!88206)))

(declare-fun res!65050 () Bool)

(assert (=> d!42273 (=> (not res!65050) (not e!88206))))

(assert (=> d!42273 (= res!65050 ((_ is Cons!1690) lt!70171))))

(assert (=> d!42273 (= (contains!886 lt!70171 (tuple2!2565 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!70815)))

(declare-fun b!135438 () Bool)

(declare-fun e!88205 () Bool)

(assert (=> b!135438 (= e!88206 e!88205)))

(declare-fun res!65049 () Bool)

(assert (=> b!135438 (=> res!65049 e!88205)))

(assert (=> b!135438 (= res!65049 (= (h!2295 lt!70171) (tuple2!2565 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!135439 () Bool)

(assert (=> b!135439 (= e!88205 (contains!886 (t!6137 lt!70171) (tuple2!2565 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) (_2!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (= (and d!42273 res!65050) b!135438))

(assert (= (and b!135438 (not res!65049)) b!135439))

(declare-fun m!161547 () Bool)

(assert (=> d!42273 m!161547))

(declare-fun m!161549 () Bool)

(assert (=> d!42273 m!161549))

(declare-fun m!161551 () Bool)

(assert (=> b!135439 m!161551))

(assert (=> b!134046 d!42273))

(declare-fun d!42275 () Bool)

(assert (=> d!42275 (= (get!1492 (getValueByKey!173 (toList!842 lt!69577) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!173 (toList!842 lt!69577) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40963 d!42275))

(assert (=> d!40963 d!41289))

(declare-fun d!42277 () Bool)

(assert (=> d!42277 (isDefined!125 (getValueByKey!173 (toList!842 lt!69486) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!70816 () Unit!4141)

(assert (=> d!42277 (= lt!70816 (choose!831 (toList!842 lt!69486) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!88207 () Bool)

(assert (=> d!42277 e!88207))

(declare-fun res!65051 () Bool)

(assert (=> d!42277 (=> (not res!65051) (not e!88207))))

(assert (=> d!42277 (= res!65051 (isStrictlySorted!309 (toList!842 lt!69486)))))

(assert (=> d!42277 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69486) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!70816)))

(declare-fun b!135440 () Bool)

(assert (=> b!135440 (= e!88207 (containsKey!176 (toList!842 lt!69486) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!42277 res!65051) b!135440))

(assert (=> d!42277 m!156581))

(assert (=> d!42277 m!157379))

(assert (=> d!42277 m!157379))

(assert (=> d!42277 m!157715))

(assert (=> d!42277 m!156581))

(declare-fun m!161553 () Bool)

(assert (=> d!42277 m!161553))

(assert (=> d!42277 m!159353))

(assert (=> b!135440 m!156581))

(assert (=> b!135440 m!157711))

(assert (=> b!133502 d!42277))

(declare-fun d!42279 () Bool)

(assert (=> d!42279 (= (isDefined!125 (getValueByKey!173 (toList!842 lt!69486) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!416 (getValueByKey!173 (toList!842 lt!69486) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5694 () Bool)

(assert (= bs!5694 d!42279))

(assert (=> bs!5694 m!157379))

(declare-fun m!161555 () Bool)

(assert (=> bs!5694 m!161555))

(assert (=> b!133502 d!42279))

(assert (=> b!133502 d!41469))

(assert (=> d!40899 d!40901))

(declare-fun d!42281 () Bool)

(assert (=> d!42281 (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69598 #b00000000000000000000000000000000)))

(assert (=> d!42281 true))

(declare-fun _$60!366 () Unit!4141)

(assert (=> d!42281 (= (choose!13 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69598 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) _$60!366)))

(declare-fun bs!5695 () Bool)

(assert (= bs!5695 d!42281))

(assert (=> bs!5695 m!157049))

(assert (=> d!40899 d!42281))

(declare-fun b!135442 () Bool)

(declare-fun e!88208 () Option!179)

(declare-fun e!88209 () Option!179)

(assert (=> b!135442 (= e!88208 e!88209)))

(declare-fun c!25314 () Bool)

(assert (=> b!135442 (= c!25314 (and ((_ is Cons!1690) (t!6137 lt!69546)) (not (= (_1!1293 (h!2295 (t!6137 lt!69546))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135441 () Bool)

(assert (=> b!135441 (= e!88208 (Some!178 (_2!1293 (h!2295 (t!6137 lt!69546)))))))

(declare-fun c!25313 () Bool)

(declare-fun d!42283 () Bool)

(assert (=> d!42283 (= c!25313 (and ((_ is Cons!1690) (t!6137 lt!69546)) (= (_1!1293 (h!2295 (t!6137 lt!69546))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42283 (= (getValueByKey!173 (t!6137 lt!69546) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88208)))

(declare-fun b!135444 () Bool)

(assert (=> b!135444 (= e!88209 None!177)))

(declare-fun b!135443 () Bool)

(assert (=> b!135443 (= e!88209 (getValueByKey!173 (t!6137 (t!6137 lt!69546)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42283 c!25313) b!135441))

(assert (= (and d!42283 (not c!25313)) b!135442))

(assert (= (and b!135442 c!25314) b!135443))

(assert (= (and b!135442 (not c!25314)) b!135444))

(declare-fun m!161557 () Bool)

(assert (=> b!135443 m!161557))

(assert (=> b!133757 d!42283))

(declare-fun d!42285 () Bool)

(declare-fun lt!70817 () (_ BitVec 32))

(assert (=> d!42285 (and (bvsge lt!70817 #b00000000000000000000000000000000) (bvsle lt!70817 (bvsub (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!88210 () (_ BitVec 32))

(assert (=> d!42285 (= lt!70817 e!88210)))

(declare-fun c!25315 () Bool)

(assert (=> d!42285 (= c!25315 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!42285 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!42285 (= (arrayCountValidKeys!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))) lt!70817)))

(declare-fun b!135445 () Bool)

(declare-fun e!88211 () (_ BitVec 32))

(declare-fun call!14867 () (_ BitVec 32))

(assert (=> b!135445 (= e!88211 (bvadd #b00000000000000000000000000000001 call!14867))))

(declare-fun b!135446 () Bool)

(assert (=> b!135446 (= e!88211 call!14867)))

(declare-fun b!135447 () Bool)

(assert (=> b!135447 (= e!88210 e!88211)))

(declare-fun c!25316 () Bool)

(assert (=> b!135447 (= c!25316 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!14864 () Bool)

(assert (=> bm!14864 (= call!14867 (arrayCountValidKeys!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!135448 () Bool)

(assert (=> b!135448 (= e!88210 #b00000000000000000000000000000000)))

(assert (= (and d!42285 c!25315) b!135448))

(assert (= (and d!42285 (not c!25315)) b!135447))

(assert (= (and b!135447 c!25316) b!135445))

(assert (= (and b!135447 (not c!25316)) b!135446))

(assert (= (or b!135445 b!135446) bm!14864))

(assert (=> b!135447 m!157015))

(assert (=> b!135447 m!157015))

(assert (=> b!135447 m!157019))

(declare-fun m!161559 () Bool)

(assert (=> bm!14864 m!161559))

(assert (=> bm!14770 d!42285))

(declare-fun b!135450 () Bool)

(declare-fun e!88212 () Option!179)

(declare-fun e!88213 () Option!179)

(assert (=> b!135450 (= e!88212 e!88213)))

(declare-fun c!25318 () Bool)

(assert (=> b!135450 (= c!25318 (and ((_ is Cons!1690) (toList!842 lt!69944)) (not (= (_1!1293 (h!2295 (toList!842 lt!69944))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135449 () Bool)

(assert (=> b!135449 (= e!88212 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69944)))))))

(declare-fun c!25317 () Bool)

(declare-fun d!42287 () Bool)

(assert (=> d!42287 (= c!25317 (and ((_ is Cons!1690) (toList!842 lt!69944)) (= (_1!1293 (h!2295 (toList!842 lt!69944))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42287 (= (getValueByKey!173 (toList!842 lt!69944) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88212)))

(declare-fun b!135452 () Bool)

(assert (=> b!135452 (= e!88213 None!177)))

(declare-fun b!135451 () Bool)

(assert (=> b!135451 (= e!88213 (getValueByKey!173 (t!6137 (toList!842 lt!69944)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42287 c!25317) b!135449))

(assert (= (and d!42287 (not c!25317)) b!135450))

(assert (= (and b!135450 c!25318) b!135451))

(assert (= (and b!135450 (not c!25318)) b!135452))

(declare-fun m!161561 () Bool)

(assert (=> b!135451 m!161561))

(assert (=> b!133692 d!42287))

(declare-fun lt!70818 () Bool)

(declare-fun d!42289 () Bool)

(assert (=> d!42289 (= lt!70818 (select (content!134 (toList!842 lt!70001)) (tuple2!2565 lt!69484 lt!69485)))))

(declare-fun e!88215 () Bool)

(assert (=> d!42289 (= lt!70818 e!88215)))

(declare-fun res!65053 () Bool)

(assert (=> d!42289 (=> (not res!65053) (not e!88215))))

(assert (=> d!42289 (= res!65053 ((_ is Cons!1690) (toList!842 lt!70001)))))

(assert (=> d!42289 (= (contains!886 (toList!842 lt!70001) (tuple2!2565 lt!69484 lt!69485)) lt!70818)))

(declare-fun b!135453 () Bool)

(declare-fun e!88214 () Bool)

(assert (=> b!135453 (= e!88215 e!88214)))

(declare-fun res!65052 () Bool)

(assert (=> b!135453 (=> res!65052 e!88214)))

(assert (=> b!135453 (= res!65052 (= (h!2295 (toList!842 lt!70001)) (tuple2!2565 lt!69484 lt!69485)))))

(declare-fun b!135454 () Bool)

(assert (=> b!135454 (= e!88214 (contains!886 (t!6137 (toList!842 lt!70001)) (tuple2!2565 lt!69484 lt!69485)))))

(assert (= (and d!42289 res!65053) b!135453))

(assert (= (and b!135453 (not res!65052)) b!135454))

(declare-fun m!161563 () Bool)

(assert (=> d!42289 m!161563))

(declare-fun m!161565 () Bool)

(assert (=> d!42289 m!161565))

(declare-fun m!161567 () Bool)

(assert (=> b!135454 m!161567))

(assert (=> b!133795 d!42289))

(declare-fun d!42291 () Bool)

(assert (=> d!42291 (= (+!169 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!518 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))))

(assert (=> d!42291 true))

(declare-fun _$3!46 () Unit!4141)

(assert (=> d!42291 (= (choose!834 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2864 newMap!16)) _$3!46)))

(declare-fun bs!5696 () Bool)

(assert (= bs!5696 d!42291))

(assert (=> bs!5696 m!156545))

(assert (=> bs!5696 m!156709))

(assert (=> bs!5696 m!156719))

(assert (=> bs!5696 m!156699))

(assert (=> bs!5696 m!156545))

(assert (=> bs!5696 m!156735))

(assert (=> d!40659 d!42291))

(assert (=> d!40659 d!40591))

(declare-fun d!42293 () Bool)

(declare-fun e!88217 () Bool)

(assert (=> d!42293 e!88217))

(declare-fun res!65054 () Bool)

(assert (=> d!42293 (=> res!65054 e!88217)))

(declare-fun lt!70819 () Bool)

(assert (=> d!42293 (= res!65054 (not lt!70819))))

(declare-fun lt!70820 () Bool)

(assert (=> d!42293 (= lt!70819 lt!70820)))

(declare-fun lt!70821 () Unit!4141)

(declare-fun e!88216 () Unit!4141)

(assert (=> d!42293 (= lt!70821 e!88216)))

(declare-fun c!25319 () Bool)

(assert (=> d!42293 (= c!25319 lt!70820)))

(assert (=> d!42293 (= lt!70820 (containsKey!176 (toList!842 lt!70012) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42293 (= (contains!884 lt!70012 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70819)))

(declare-fun b!135455 () Bool)

(declare-fun lt!70822 () Unit!4141)

(assert (=> b!135455 (= e!88216 lt!70822)))

(assert (=> b!135455 (= lt!70822 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70012) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135455 (isDefined!125 (getValueByKey!173 (toList!842 lt!70012) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135456 () Bool)

(declare-fun Unit!4254 () Unit!4141)

(assert (=> b!135456 (= e!88216 Unit!4254)))

(declare-fun b!135457 () Bool)

(assert (=> b!135457 (= e!88217 (isDefined!125 (getValueByKey!173 (toList!842 lt!70012) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42293 c!25319) b!135455))

(assert (= (and d!42293 (not c!25319)) b!135456))

(assert (= (and d!42293 (not res!65054)) b!135457))

(declare-fun m!161569 () Bool)

(assert (=> d!42293 m!161569))

(declare-fun m!161571 () Bool)

(assert (=> b!135455 m!161571))

(declare-fun m!161573 () Bool)

(assert (=> b!135455 m!161573))

(assert (=> b!135455 m!161573))

(declare-fun m!161575 () Bool)

(assert (=> b!135455 m!161575))

(assert (=> b!135457 m!161573))

(assert (=> b!135457 m!161573))

(assert (=> b!135457 m!161575))

(assert (=> b!133804 d!42293))

(assert (=> d!40893 d!40657))

(assert (=> d!40893 d!40479))

(assert (=> d!40893 d!40881))

(declare-fun d!42295 () Bool)

(declare-fun e!88218 () Bool)

(assert (=> d!42295 e!88218))

(declare-fun res!65056 () Bool)

(assert (=> d!42295 (=> (not res!65056) (not e!88218))))

(declare-fun lt!70825 () ListLongMap!1653)

(assert (=> d!42295 (= res!65056 (contains!884 lt!70825 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70826 () List!1694)

(assert (=> d!42295 (= lt!70825 (ListLongMap!1654 lt!70826))))

(declare-fun lt!70823 () Unit!4141)

(declare-fun lt!70824 () Unit!4141)

(assert (=> d!42295 (= lt!70823 lt!70824)))

(assert (=> d!42295 (= (getValueByKey!173 lt!70826 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!42295 (= lt!70824 (lemmaContainsTupThenGetReturnValue!88 lt!70826 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!42295 (= lt!70826 (insertStrictlySorted!91 (toList!842 call!14685) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!42295 (= (+!169 call!14685 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70825)))

(declare-fun b!135458 () Bool)

(declare-fun res!65055 () Bool)

(assert (=> b!135458 (=> (not res!65055) (not e!88218))))

(assert (=> b!135458 (= res!65055 (= (getValueByKey!173 (toList!842 lt!70825) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135459 () Bool)

(assert (=> b!135459 (= e!88218 (contains!886 (toList!842 lt!70825) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!42295 res!65056) b!135458))

(assert (= (and b!135458 res!65055) b!135459))

(declare-fun m!161577 () Bool)

(assert (=> d!42295 m!161577))

(declare-fun m!161579 () Bool)

(assert (=> d!42295 m!161579))

(declare-fun m!161581 () Bool)

(assert (=> d!42295 m!161581))

(declare-fun m!161583 () Bool)

(assert (=> d!42295 m!161583))

(declare-fun m!161585 () Bool)

(assert (=> b!135458 m!161585))

(declare-fun m!161587 () Bool)

(assert (=> b!135459 m!161587))

(assert (=> b!133255 d!42295))

(declare-fun d!42297 () Bool)

(declare-fun e!88219 () Bool)

(assert (=> d!42297 e!88219))

(declare-fun res!65058 () Bool)

(assert (=> d!42297 (=> (not res!65058) (not e!88219))))

(declare-fun lt!70829 () ListLongMap!1653)

(assert (=> d!42297 (= res!65058 (contains!884 lt!70829 (_1!1293 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70830 () List!1694)

(assert (=> d!42297 (= lt!70829 (ListLongMap!1654 lt!70830))))

(declare-fun lt!70827 () Unit!4141)

(declare-fun lt!70828 () Unit!4141)

(assert (=> d!42297 (= lt!70827 lt!70828)))

(assert (=> d!42297 (= (getValueByKey!173 lt!70830 (_1!1293 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42297 (= lt!70828 (lemmaContainsTupThenGetReturnValue!88 lt!70830 (_1!1293 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42297 (= lt!70830 (insertStrictlySorted!91 (toList!842 lt!69770) (_1!1293 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42297 (= (+!169 lt!69770 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16))) lt!70829)))

(declare-fun b!135460 () Bool)

(declare-fun res!65057 () Bool)

(assert (=> b!135460 (=> (not res!65057) (not e!88219))))

(assert (=> b!135460 (= res!65057 (= (getValueByKey!173 (toList!842 lt!70829) (_1!1293 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16))))))))

(declare-fun b!135461 () Bool)

(assert (=> b!135461 (= e!88219 (contains!886 (toList!842 lt!70829) (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16))))))

(assert (= (and d!42297 res!65058) b!135460))

(assert (= (and b!135460 res!65057) b!135461))

(declare-fun m!161589 () Bool)

(assert (=> d!42297 m!161589))

(declare-fun m!161591 () Bool)

(assert (=> d!42297 m!161591))

(declare-fun m!161593 () Bool)

(assert (=> d!42297 m!161593))

(declare-fun m!161595 () Bool)

(assert (=> d!42297 m!161595))

(declare-fun m!161597 () Bool)

(assert (=> b!135460 m!161597))

(declare-fun m!161599 () Bool)

(assert (=> b!135461 m!161599))

(assert (=> b!133418 d!42297))

(declare-fun d!42299 () Bool)

(assert (=> d!42299 (= (apply!116 (+!169 lt!69788 (tuple2!2565 lt!69777 (zeroValue!2719 newMap!16))) lt!69773) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69788 (tuple2!2565 lt!69777 (zeroValue!2719 newMap!16)))) lt!69773)))))

(declare-fun bs!5697 () Bool)

(assert (= bs!5697 d!42299))

(declare-fun m!161601 () Bool)

(assert (=> bs!5697 m!161601))

(assert (=> bs!5697 m!161601))

(declare-fun m!161603 () Bool)

(assert (=> bs!5697 m!161603))

(assert (=> b!133418 d!42299))

(declare-fun d!42301 () Bool)

(assert (=> d!42301 (contains!884 (+!169 lt!69770 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16))) lt!69769)))

(declare-fun lt!70831 () Unit!4141)

(assert (=> d!42301 (= lt!70831 (choose!829 lt!69770 lt!69785 (zeroValue!2719 newMap!16) lt!69769))))

(assert (=> d!42301 (contains!884 lt!69770 lt!69769)))

(assert (=> d!42301 (= (addStillContains!92 lt!69770 lt!69785 (zeroValue!2719 newMap!16) lt!69769) lt!70831)))

(declare-fun bs!5698 () Bool)

(assert (= bs!5698 d!42301))

(assert (=> bs!5698 m!157591))

(assert (=> bs!5698 m!157591))

(assert (=> bs!5698 m!157593))

(declare-fun m!161605 () Bool)

(assert (=> bs!5698 m!161605))

(declare-fun m!161607 () Bool)

(assert (=> bs!5698 m!161607))

(assert (=> b!133418 d!42301))

(declare-fun d!42303 () Bool)

(assert (=> d!42303 (= (apply!116 lt!69776 lt!69778) (get!1492 (getValueByKey!173 (toList!842 lt!69776) lt!69778)))))

(declare-fun bs!5699 () Bool)

(assert (= bs!5699 d!42303))

(declare-fun m!161609 () Bool)

(assert (=> bs!5699 m!161609))

(assert (=> bs!5699 m!161609))

(declare-fun m!161611 () Bool)

(assert (=> bs!5699 m!161611))

(assert (=> b!133418 d!42303))

(declare-fun d!42305 () Bool)

(declare-fun e!88221 () Bool)

(assert (=> d!42305 e!88221))

(declare-fun res!65059 () Bool)

(assert (=> d!42305 (=> res!65059 e!88221)))

(declare-fun lt!70832 () Bool)

(assert (=> d!42305 (= res!65059 (not lt!70832))))

(declare-fun lt!70833 () Bool)

(assert (=> d!42305 (= lt!70832 lt!70833)))

(declare-fun lt!70834 () Unit!4141)

(declare-fun e!88220 () Unit!4141)

(assert (=> d!42305 (= lt!70834 e!88220)))

(declare-fun c!25320 () Bool)

(assert (=> d!42305 (= c!25320 lt!70833)))

(assert (=> d!42305 (= lt!70833 (containsKey!176 (toList!842 (+!169 lt!69770 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16)))) lt!69769))))

(assert (=> d!42305 (= (contains!884 (+!169 lt!69770 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16))) lt!69769) lt!70832)))

(declare-fun b!135462 () Bool)

(declare-fun lt!70835 () Unit!4141)

(assert (=> b!135462 (= e!88220 lt!70835)))

(assert (=> b!135462 (= lt!70835 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69770 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16)))) lt!69769))))

(assert (=> b!135462 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69770 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16)))) lt!69769))))

(declare-fun b!135463 () Bool)

(declare-fun Unit!4255 () Unit!4141)

(assert (=> b!135463 (= e!88220 Unit!4255)))

(declare-fun b!135464 () Bool)

(assert (=> b!135464 (= e!88221 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69770 (tuple2!2565 lt!69785 (zeroValue!2719 newMap!16)))) lt!69769)))))

(assert (= (and d!42305 c!25320) b!135462))

(assert (= (and d!42305 (not c!25320)) b!135463))

(assert (= (and d!42305 (not res!65059)) b!135464))

(declare-fun m!161613 () Bool)

(assert (=> d!42305 m!161613))

(declare-fun m!161615 () Bool)

(assert (=> b!135462 m!161615))

(declare-fun m!161617 () Bool)

(assert (=> b!135462 m!161617))

(assert (=> b!135462 m!161617))

(declare-fun m!161619 () Bool)

(assert (=> b!135462 m!161619))

(assert (=> b!135464 m!161617))

(assert (=> b!135464 m!161617))

(assert (=> b!135464 m!161619))

(assert (=> b!133418 d!42305))

(declare-fun d!42307 () Bool)

(assert (=> d!42307 (= (apply!116 (+!169 lt!69788 (tuple2!2565 lt!69777 (zeroValue!2719 newMap!16))) lt!69773) (apply!116 lt!69788 lt!69773))))

(declare-fun lt!70836 () Unit!4141)

(assert (=> d!42307 (= lt!70836 (choose!828 lt!69788 lt!69777 (zeroValue!2719 newMap!16) lt!69773))))

(declare-fun e!88222 () Bool)

(assert (=> d!42307 e!88222))

(declare-fun res!65060 () Bool)

(assert (=> d!42307 (=> (not res!65060) (not e!88222))))

(assert (=> d!42307 (= res!65060 (contains!884 lt!69788 lt!69773))))

(assert (=> d!42307 (= (addApplyDifferent!92 lt!69788 lt!69777 (zeroValue!2719 newMap!16) lt!69773) lt!70836)))

(declare-fun b!135465 () Bool)

(assert (=> b!135465 (= e!88222 (not (= lt!69773 lt!69777)))))

(assert (= (and d!42307 res!65060) b!135465))

(assert (=> d!42307 m!157571))

(assert (=> d!42307 m!157595))

(assert (=> d!42307 m!157575))

(declare-fun m!161621 () Bool)

(assert (=> d!42307 m!161621))

(declare-fun m!161623 () Bool)

(assert (=> d!42307 m!161623))

(assert (=> d!42307 m!157571))

(assert (=> b!133418 d!42307))

(declare-fun d!42309 () Bool)

(assert (=> d!42309 (= (apply!116 lt!69774 lt!69780) (get!1492 (getValueByKey!173 (toList!842 lt!69774) lt!69780)))))

(declare-fun bs!5700 () Bool)

(assert (= bs!5700 d!42309))

(declare-fun m!161625 () Bool)

(assert (=> bs!5700 m!161625))

(assert (=> bs!5700 m!161625))

(declare-fun m!161627 () Bool)

(assert (=> bs!5700 m!161627))

(assert (=> b!133418 d!42309))

(declare-fun d!42311 () Bool)

(assert (=> d!42311 (= (apply!116 (+!169 lt!69774 (tuple2!2565 lt!69772 (minValue!2719 newMap!16))) lt!69780) (apply!116 lt!69774 lt!69780))))

(declare-fun lt!70837 () Unit!4141)

(assert (=> d!42311 (= lt!70837 (choose!828 lt!69774 lt!69772 (minValue!2719 newMap!16) lt!69780))))

(declare-fun e!88223 () Bool)

(assert (=> d!42311 e!88223))

(declare-fun res!65061 () Bool)

(assert (=> d!42311 (=> (not res!65061) (not e!88223))))

(assert (=> d!42311 (= res!65061 (contains!884 lt!69774 lt!69780))))

(assert (=> d!42311 (= (addApplyDifferent!92 lt!69774 lt!69772 (minValue!2719 newMap!16) lt!69780) lt!70837)))

(declare-fun b!135466 () Bool)

(assert (=> b!135466 (= e!88223 (not (= lt!69780 lt!69772)))))

(assert (= (and d!42311 res!65061) b!135466))

(assert (=> d!42311 m!157579))

(assert (=> d!42311 m!157581))

(assert (=> d!42311 m!157565))

(declare-fun m!161629 () Bool)

(assert (=> d!42311 m!161629))

(declare-fun m!161631 () Bool)

(assert (=> d!42311 m!161631))

(assert (=> d!42311 m!157579))

(assert (=> b!133418 d!42311))

(declare-fun d!42313 () Bool)

(declare-fun e!88224 () Bool)

(assert (=> d!42313 e!88224))

(declare-fun res!65063 () Bool)

(assert (=> d!42313 (=> (not res!65063) (not e!88224))))

(declare-fun lt!70840 () ListLongMap!1653)

(assert (=> d!42313 (= res!65063 (contains!884 lt!70840 (_1!1293 (tuple2!2565 lt!69777 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70841 () List!1694)

(assert (=> d!42313 (= lt!70840 (ListLongMap!1654 lt!70841))))

(declare-fun lt!70838 () Unit!4141)

(declare-fun lt!70839 () Unit!4141)

(assert (=> d!42313 (= lt!70838 lt!70839)))

(assert (=> d!42313 (= (getValueByKey!173 lt!70841 (_1!1293 (tuple2!2565 lt!69777 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69777 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42313 (= lt!70839 (lemmaContainsTupThenGetReturnValue!88 lt!70841 (_1!1293 (tuple2!2565 lt!69777 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69777 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42313 (= lt!70841 (insertStrictlySorted!91 (toList!842 lt!69788) (_1!1293 (tuple2!2565 lt!69777 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69777 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42313 (= (+!169 lt!69788 (tuple2!2565 lt!69777 (zeroValue!2719 newMap!16))) lt!70840)))

(declare-fun b!135467 () Bool)

(declare-fun res!65062 () Bool)

(assert (=> b!135467 (=> (not res!65062) (not e!88224))))

(assert (=> b!135467 (= res!65062 (= (getValueByKey!173 (toList!842 lt!70840) (_1!1293 (tuple2!2565 lt!69777 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69777 (zeroValue!2719 newMap!16))))))))

(declare-fun b!135468 () Bool)

(assert (=> b!135468 (= e!88224 (contains!886 (toList!842 lt!70840) (tuple2!2565 lt!69777 (zeroValue!2719 newMap!16))))))

(assert (= (and d!42313 res!65063) b!135467))

(assert (= (and b!135467 res!65062) b!135468))

(declare-fun m!161633 () Bool)

(assert (=> d!42313 m!161633))

(declare-fun m!161635 () Bool)

(assert (=> d!42313 m!161635))

(declare-fun m!161637 () Bool)

(assert (=> d!42313 m!161637))

(declare-fun m!161639 () Bool)

(assert (=> d!42313 m!161639))

(declare-fun m!161641 () Bool)

(assert (=> b!135467 m!161641))

(declare-fun m!161643 () Bool)

(assert (=> b!135468 m!161643))

(assert (=> b!133418 d!42313))

(declare-fun d!42315 () Bool)

(assert (=> d!42315 (= (apply!116 (+!169 lt!69776 (tuple2!2565 lt!69768 (minValue!2719 newMap!16))) lt!69778) (apply!116 lt!69776 lt!69778))))

(declare-fun lt!70842 () Unit!4141)

(assert (=> d!42315 (= lt!70842 (choose!828 lt!69776 lt!69768 (minValue!2719 newMap!16) lt!69778))))

(declare-fun e!88225 () Bool)

(assert (=> d!42315 e!88225))

(declare-fun res!65064 () Bool)

(assert (=> d!42315 (=> (not res!65064) (not e!88225))))

(assert (=> d!42315 (= res!65064 (contains!884 lt!69776 lt!69778))))

(assert (=> d!42315 (= (addApplyDifferent!92 lt!69776 lt!69768 (minValue!2719 newMap!16) lt!69778) lt!70842)))

(declare-fun b!135469 () Bool)

(assert (=> b!135469 (= e!88225 (not (= lt!69778 lt!69768)))))

(assert (= (and d!42315 res!65064) b!135469))

(assert (=> d!42315 m!157573))

(assert (=> d!42315 m!157587))

(assert (=> d!42315 m!157569))

(declare-fun m!161645 () Bool)

(assert (=> d!42315 m!161645))

(declare-fun m!161647 () Bool)

(assert (=> d!42315 m!161647))

(assert (=> d!42315 m!157573))

(assert (=> b!133418 d!42315))

(declare-fun b!135470 () Bool)

(assert (=> b!135470 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(assert (=> b!135470 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))))))

(declare-fun e!88232 () Bool)

(declare-fun lt!70847 () ListLongMap!1653)

(assert (=> b!135470 (= e!88232 (= (apply!116 lt!70847 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!135471 () Bool)

(declare-fun res!65067 () Bool)

(declare-fun e!88230 () Bool)

(assert (=> b!135471 (=> (not res!65067) (not e!88230))))

(assert (=> b!135471 (= res!65067 (not (contains!884 lt!70847 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!88227 () Bool)

(declare-fun b!135472 () Bool)

(assert (=> b!135472 (= e!88227 (validKeyInArray!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!135472 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!135473 () Bool)

(declare-fun e!88228 () Bool)

(declare-fun e!88229 () Bool)

(assert (=> b!135473 (= e!88228 e!88229)))

(declare-fun c!25324 () Bool)

(assert (=> b!135473 (= c!25324 (bvslt #b00000000000000000000000000000000 (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(declare-fun b!135474 () Bool)

(assert (=> b!135474 (= e!88229 (= lt!70847 (getCurrentListMapNoExtraKeys!136 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun call!14868 () ListLongMap!1653)

(declare-fun bm!14865 () Bool)

(assert (=> bm!14865 (= call!14868 (getCurrentListMapNoExtraKeys!136 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!135475 () Bool)

(declare-fun e!88226 () ListLongMap!1653)

(assert (=> b!135475 (= e!88226 call!14868)))

(declare-fun b!135476 () Bool)

(declare-fun e!88231 () ListLongMap!1653)

(assert (=> b!135476 (= e!88231 e!88226)))

(declare-fun c!25321 () Bool)

(assert (=> b!135476 (= c!25321 (validKeyInArray!0 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!42317 () Bool)

(assert (=> d!42317 e!88230))

(declare-fun res!65065 () Bool)

(assert (=> d!42317 (=> (not res!65065) (not e!88230))))

(assert (=> d!42317 (= res!65065 (not (contains!884 lt!70847 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42317 (= lt!70847 e!88231)))

(declare-fun c!25322 () Bool)

(assert (=> d!42317 (= c!25322 (bvsge #b00000000000000000000000000000000 (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(assert (=> d!42317 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!42317 (= (getCurrentListMapNoExtraKeys!136 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!70847)))

(declare-fun b!135477 () Bool)

(assert (=> b!135477 (= e!88228 e!88232)))

(assert (=> b!135477 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(declare-fun res!65066 () Bool)

(assert (=> b!135477 (= res!65066 (contains!884 lt!70847 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!135477 (=> (not res!65066) (not e!88232))))

(declare-fun b!135478 () Bool)

(assert (=> b!135478 (= e!88231 (ListLongMap!1654 Nil!1691))))

(declare-fun b!135479 () Bool)

(assert (=> b!135479 (= e!88229 (isEmpty!415 lt!70847))))

(declare-fun b!135480 () Bool)

(declare-fun lt!70844 () Unit!4141)

(declare-fun lt!70848 () Unit!4141)

(assert (=> b!135480 (= lt!70844 lt!70848)))

(declare-fun lt!70845 () (_ BitVec 64))

(declare-fun lt!70846 () V!3481)

(declare-fun lt!70843 () ListLongMap!1653)

(declare-fun lt!70849 () (_ BitVec 64))

(assert (=> b!135480 (not (contains!884 (+!169 lt!70843 (tuple2!2565 lt!70845 lt!70846)) lt!70849))))

(assert (=> b!135480 (= lt!70848 (addStillNotContains!63 lt!70843 lt!70845 lt!70846 lt!70849))))

(assert (=> b!135480 (= lt!70849 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!135480 (= lt!70846 (get!1489 (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!135480 (= lt!70845 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!135480 (= lt!70843 call!14868)))

(assert (=> b!135480 (= e!88226 (+!169 call!14868 (tuple2!2565 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135481 () Bool)

(assert (=> b!135481 (= e!88230 e!88228)))

(declare-fun c!25323 () Bool)

(assert (=> b!135481 (= c!25323 e!88227)))

(declare-fun res!65068 () Bool)

(assert (=> b!135481 (=> (not res!65068) (not e!88227))))

(assert (=> b!135481 (= res!65068 (bvslt #b00000000000000000000000000000000 (size!2521 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))))))))

(assert (= (and d!42317 c!25322) b!135478))

(assert (= (and d!42317 (not c!25322)) b!135476))

(assert (= (and b!135476 c!25321) b!135480))

(assert (= (and b!135476 (not c!25321)) b!135475))

(assert (= (or b!135480 b!135475) bm!14865))

(assert (= (and d!42317 res!65065) b!135471))

(assert (= (and b!135471 res!65067) b!135481))

(assert (= (and b!135481 res!65068) b!135472))

(assert (= (and b!135481 c!25323) b!135477))

(assert (= (and b!135481 (not c!25323)) b!135473))

(assert (= (and b!135477 res!65066) b!135470))

(assert (= (and b!135473 c!25324) b!135474))

(assert (= (and b!135473 (not c!25324)) b!135479))

(declare-fun b_lambda!6041 () Bool)

(assert (=> (not b_lambda!6041) (not b!135470)))

(assert (=> b!135470 t!6147))

(declare-fun b_and!8393 () Bool)

(assert (= b_and!8389 (and (=> t!6147 result!3993) b_and!8393)))

(assert (=> b!135470 t!6149))

(declare-fun b_and!8395 () Bool)

(assert (= b_and!8391 (and (=> t!6149 result!3995) b_and!8395)))

(declare-fun b_lambda!6043 () Bool)

(assert (=> (not b_lambda!6043) (not b!135480)))

(assert (=> b!135480 t!6147))

(declare-fun b_and!8397 () Bool)

(assert (= b_and!8393 (and (=> t!6147 result!3993) b_and!8397)))

(assert (=> b!135480 t!6149))

(declare-fun b_and!8399 () Bool)

(assert (= b_and!8395 (and (=> t!6149 result!3995) b_and!8399)))

(declare-fun m!161649 () Bool)

(assert (=> b!135479 m!161649))

(assert (=> b!135476 m!157539))

(assert (=> b!135476 m!157539))

(assert (=> b!135476 m!157547))

(assert (=> b!135472 m!157539))

(assert (=> b!135472 m!157539))

(assert (=> b!135472 m!157547))

(declare-fun m!161651 () Bool)

(assert (=> b!135474 m!161651))

(declare-fun m!161653 () Bool)

(assert (=> b!135471 m!161653))

(assert (=> b!135480 m!157597))

(assert (=> b!135480 m!156809))

(assert (=> b!135480 m!157599))

(declare-fun m!161655 () Bool)

(assert (=> b!135480 m!161655))

(declare-fun m!161657 () Bool)

(assert (=> b!135480 m!161657))

(assert (=> b!135480 m!157597))

(declare-fun m!161659 () Bool)

(assert (=> b!135480 m!161659))

(assert (=> b!135480 m!161655))

(declare-fun m!161661 () Bool)

(assert (=> b!135480 m!161661))

(assert (=> b!135480 m!157539))

(assert (=> b!135480 m!156809))

(assert (=> b!135477 m!157539))

(assert (=> b!135477 m!157539))

(declare-fun m!161663 () Bool)

(assert (=> b!135477 m!161663))

(declare-fun m!161665 () Bool)

(assert (=> d!42317 m!161665))

(assert (=> d!42317 m!156651))

(assert (=> bm!14865 m!161651))

(assert (=> b!135470 m!157597))

(assert (=> b!135470 m!156809))

(assert (=> b!135470 m!157599))

(assert (=> b!135470 m!157597))

(assert (=> b!135470 m!157539))

(declare-fun m!161667 () Bool)

(assert (=> b!135470 m!161667))

(assert (=> b!135470 m!157539))

(assert (=> b!135470 m!156809))

(assert (=> b!133418 d!42317))

(declare-fun d!42319 () Bool)

(declare-fun e!88233 () Bool)

(assert (=> d!42319 e!88233))

(declare-fun res!65070 () Bool)

(assert (=> d!42319 (=> (not res!65070) (not e!88233))))

(declare-fun lt!70852 () ListLongMap!1653)

(assert (=> d!42319 (= res!65070 (contains!884 lt!70852 (_1!1293 (tuple2!2565 lt!69772 (minValue!2719 newMap!16)))))))

(declare-fun lt!70853 () List!1694)

(assert (=> d!42319 (= lt!70852 (ListLongMap!1654 lt!70853))))

(declare-fun lt!70850 () Unit!4141)

(declare-fun lt!70851 () Unit!4141)

(assert (=> d!42319 (= lt!70850 lt!70851)))

(assert (=> d!42319 (= (getValueByKey!173 lt!70853 (_1!1293 (tuple2!2565 lt!69772 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69772 (minValue!2719 newMap!16)))))))

(assert (=> d!42319 (= lt!70851 (lemmaContainsTupThenGetReturnValue!88 lt!70853 (_1!1293 (tuple2!2565 lt!69772 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69772 (minValue!2719 newMap!16)))))))

(assert (=> d!42319 (= lt!70853 (insertStrictlySorted!91 (toList!842 lt!69774) (_1!1293 (tuple2!2565 lt!69772 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69772 (minValue!2719 newMap!16)))))))

(assert (=> d!42319 (= (+!169 lt!69774 (tuple2!2565 lt!69772 (minValue!2719 newMap!16))) lt!70852)))

(declare-fun b!135482 () Bool)

(declare-fun res!65069 () Bool)

(assert (=> b!135482 (=> (not res!65069) (not e!88233))))

(assert (=> b!135482 (= res!65069 (= (getValueByKey!173 (toList!842 lt!70852) (_1!1293 (tuple2!2565 lt!69772 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69772 (minValue!2719 newMap!16))))))))

(declare-fun b!135483 () Bool)

(assert (=> b!135483 (= e!88233 (contains!886 (toList!842 lt!70852) (tuple2!2565 lt!69772 (minValue!2719 newMap!16))))))

(assert (= (and d!42319 res!65070) b!135482))

(assert (= (and b!135482 res!65069) b!135483))

(declare-fun m!161669 () Bool)

(assert (=> d!42319 m!161669))

(declare-fun m!161671 () Bool)

(assert (=> d!42319 m!161671))

(declare-fun m!161673 () Bool)

(assert (=> d!42319 m!161673))

(declare-fun m!161675 () Bool)

(assert (=> d!42319 m!161675))

(declare-fun m!161677 () Bool)

(assert (=> b!135482 m!161677))

(declare-fun m!161679 () Bool)

(assert (=> b!135483 m!161679))

(assert (=> b!133418 d!42319))

(declare-fun d!42321 () Bool)

(assert (=> d!42321 (= (apply!116 (+!169 lt!69774 (tuple2!2565 lt!69772 (minValue!2719 newMap!16))) lt!69780) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69774 (tuple2!2565 lt!69772 (minValue!2719 newMap!16)))) lt!69780)))))

(declare-fun bs!5701 () Bool)

(assert (= bs!5701 d!42321))

(declare-fun m!161681 () Bool)

(assert (=> bs!5701 m!161681))

(assert (=> bs!5701 m!161681))

(declare-fun m!161683 () Bool)

(assert (=> bs!5701 m!161683))

(assert (=> b!133418 d!42321))

(declare-fun d!42323 () Bool)

(declare-fun e!88234 () Bool)

(assert (=> d!42323 e!88234))

(declare-fun res!65072 () Bool)

(assert (=> d!42323 (=> (not res!65072) (not e!88234))))

(declare-fun lt!70856 () ListLongMap!1653)

(assert (=> d!42323 (= res!65072 (contains!884 lt!70856 (_1!1293 (tuple2!2565 lt!69768 (minValue!2719 newMap!16)))))))

(declare-fun lt!70857 () List!1694)

(assert (=> d!42323 (= lt!70856 (ListLongMap!1654 lt!70857))))

(declare-fun lt!70854 () Unit!4141)

(declare-fun lt!70855 () Unit!4141)

(assert (=> d!42323 (= lt!70854 lt!70855)))

(assert (=> d!42323 (= (getValueByKey!173 lt!70857 (_1!1293 (tuple2!2565 lt!69768 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69768 (minValue!2719 newMap!16)))))))

(assert (=> d!42323 (= lt!70855 (lemmaContainsTupThenGetReturnValue!88 lt!70857 (_1!1293 (tuple2!2565 lt!69768 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69768 (minValue!2719 newMap!16)))))))

(assert (=> d!42323 (= lt!70857 (insertStrictlySorted!91 (toList!842 lt!69776) (_1!1293 (tuple2!2565 lt!69768 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69768 (minValue!2719 newMap!16)))))))

(assert (=> d!42323 (= (+!169 lt!69776 (tuple2!2565 lt!69768 (minValue!2719 newMap!16))) lt!70856)))

(declare-fun b!135484 () Bool)

(declare-fun res!65071 () Bool)

(assert (=> b!135484 (=> (not res!65071) (not e!88234))))

(assert (=> b!135484 (= res!65071 (= (getValueByKey!173 (toList!842 lt!70856) (_1!1293 (tuple2!2565 lt!69768 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69768 (minValue!2719 newMap!16))))))))

(declare-fun b!135485 () Bool)

(assert (=> b!135485 (= e!88234 (contains!886 (toList!842 lt!70856) (tuple2!2565 lt!69768 (minValue!2719 newMap!16))))))

(assert (= (and d!42323 res!65072) b!135484))

(assert (= (and b!135484 res!65071) b!135485))

(declare-fun m!161685 () Bool)

(assert (=> d!42323 m!161685))

(declare-fun m!161687 () Bool)

(assert (=> d!42323 m!161687))

(declare-fun m!161689 () Bool)

(assert (=> d!42323 m!161689))

(declare-fun m!161691 () Bool)

(assert (=> d!42323 m!161691))

(declare-fun m!161693 () Bool)

(assert (=> b!135484 m!161693))

(declare-fun m!161695 () Bool)

(assert (=> b!135485 m!161695))

(assert (=> b!133418 d!42323))

(declare-fun d!42325 () Bool)

(assert (=> d!42325 (= (apply!116 (+!169 lt!69776 (tuple2!2565 lt!69768 (minValue!2719 newMap!16))) lt!69778) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69776 (tuple2!2565 lt!69768 (minValue!2719 newMap!16)))) lt!69778)))))

(declare-fun bs!5702 () Bool)

(assert (= bs!5702 d!42325))

(declare-fun m!161697 () Bool)

(assert (=> bs!5702 m!161697))

(assert (=> bs!5702 m!161697))

(declare-fun m!161699 () Bool)

(assert (=> bs!5702 m!161699))

(assert (=> b!133418 d!42325))

(declare-fun d!42327 () Bool)

(assert (=> d!42327 (= (apply!116 lt!69788 lt!69773) (get!1492 (getValueByKey!173 (toList!842 lt!69788) lt!69773)))))

(declare-fun bs!5703 () Bool)

(assert (= bs!5703 d!42327))

(declare-fun m!161701 () Bool)

(assert (=> bs!5703 m!161701))

(assert (=> bs!5703 m!161701))

(declare-fun m!161703 () Bool)

(assert (=> bs!5703 m!161703))

(assert (=> b!133418 d!42327))

(declare-fun b!135487 () Bool)

(declare-fun e!88235 () Option!179)

(declare-fun e!88236 () Option!179)

(assert (=> b!135487 (= e!88235 e!88236)))

(declare-fun c!25326 () Bool)

(assert (=> b!135487 (= c!25326 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69545))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69545)))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135486 () Bool)

(assert (=> b!135486 (= e!88235 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 lt!69545))))))))

(declare-fun d!42329 () Bool)

(declare-fun c!25325 () Bool)

(assert (=> d!42329 (= c!25325 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69545))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69545)))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42329 (= (getValueByKey!173 (t!6137 (toList!842 lt!69545)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88235)))

(declare-fun b!135489 () Bool)

(assert (=> b!135489 (= e!88236 None!177)))

(declare-fun b!135488 () Bool)

(assert (=> b!135488 (= e!88236 (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69545))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42329 c!25325) b!135486))

(assert (= (and d!42329 (not c!25325)) b!135487))

(assert (= (and b!135487 c!25326) b!135488))

(assert (= (and b!135487 (not c!25326)) b!135489))

(declare-fun m!161705 () Bool)

(assert (=> b!135488 m!161705))

(assert (=> b!133736 d!42329))

(assert (=> b!133293 d!40621))

(declare-fun lt!70858 () Bool)

(declare-fun d!42331 () Bool)

(assert (=> d!42331 (= lt!70858 (select (content!134 (t!6137 (toList!842 lt!69639))) (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun e!88238 () Bool)

(assert (=> d!42331 (= lt!70858 e!88238)))

(declare-fun res!65074 () Bool)

(assert (=> d!42331 (=> (not res!65074) (not e!88238))))

(assert (=> d!42331 (= res!65074 ((_ is Cons!1690) (t!6137 (toList!842 lt!69639))))))

(assert (=> d!42331 (= (contains!886 (t!6137 (toList!842 lt!69639)) (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!70858)))

(declare-fun b!135490 () Bool)

(declare-fun e!88237 () Bool)

(assert (=> b!135490 (= e!88238 e!88237)))

(declare-fun res!65073 () Bool)

(assert (=> b!135490 (=> res!65073 e!88237)))

(assert (=> b!135490 (= res!65073 (= (h!2295 (t!6137 (toList!842 lt!69639))) (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!135491 () Bool)

(assert (=> b!135491 (= e!88237 (contains!886 (t!6137 (t!6137 (toList!842 lt!69639))) (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!42331 res!65074) b!135490))

(assert (= (and b!135490 (not res!65073)) b!135491))

(assert (=> d!42331 m!160795))

(declare-fun m!161707 () Bool)

(assert (=> d!42331 m!161707))

(declare-fun m!161709 () Bool)

(assert (=> b!135491 m!161709))

(assert (=> b!133506 d!42331))

(assert (=> d!40701 d!40431))

(declare-fun b!135492 () Bool)

(declare-fun res!65075 () Bool)

(declare-fun e!88243 () Bool)

(assert (=> b!135492 (=> (not res!65075) (not e!88243))))

(declare-fun lt!70859 () List!1694)

(assert (=> b!135492 (= res!65075 (containsKey!176 lt!70859 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135493 () Bool)

(declare-fun e!88241 () List!1694)

(declare-fun e!88242 () List!1694)

(assert (=> b!135493 (= e!88241 e!88242)))

(declare-fun c!25330 () Bool)

(assert (=> b!135493 (= c!25330 (and ((_ is Cons!1690) (t!6137 (toList!842 e!86561))) (= (_1!1293 (h!2295 (t!6137 (toList!842 e!86561)))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bm!14866 () Bool)

(declare-fun call!14870 () List!1694)

(declare-fun call!14869 () List!1694)

(assert (=> bm!14866 (= call!14870 call!14869)))

(declare-fun b!135494 () Bool)

(declare-fun e!88239 () List!1694)

(assert (=> b!135494 (= e!88239 call!14870)))

(declare-fun c!25329 () Bool)

(declare-fun b!135495 () Bool)

(assert (=> b!135495 (= c!25329 (and ((_ is Cons!1690) (t!6137 (toList!842 e!86561))) (bvsgt (_1!1293 (h!2295 (t!6137 (toList!842 e!86561)))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!135495 (= e!88242 e!88239)))

(declare-fun b!135496 () Bool)

(assert (=> b!135496 (= e!88243 (contains!886 lt!70859 (tuple2!2565 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135497 () Bool)

(assert (=> b!135497 (= e!88242 call!14869)))

(declare-fun d!42333 () Bool)

(assert (=> d!42333 e!88243))

(declare-fun res!65076 () Bool)

(assert (=> d!42333 (=> (not res!65076) (not e!88243))))

(assert (=> d!42333 (= res!65076 (isStrictlySorted!309 lt!70859))))

(assert (=> d!42333 (= lt!70859 e!88241)))

(declare-fun c!25328 () Bool)

(assert (=> d!42333 (= c!25328 (and ((_ is Cons!1690) (t!6137 (toList!842 e!86561))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 e!86561)))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!42333 (isStrictlySorted!309 (t!6137 (toList!842 e!86561)))))

(assert (=> d!42333 (= (insertStrictlySorted!91 (t!6137 (toList!842 e!86561)) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!70859)))

(declare-fun b!135498 () Bool)

(declare-fun e!88240 () List!1694)

(assert (=> b!135498 (= e!88240 (ite c!25330 (t!6137 (t!6137 (toList!842 e!86561))) (ite c!25329 (Cons!1690 (h!2295 (t!6137 (toList!842 e!86561))) (t!6137 (t!6137 (toList!842 e!86561)))) Nil!1691)))))

(declare-fun b!135499 () Bool)

(declare-fun call!14871 () List!1694)

(assert (=> b!135499 (= e!88241 call!14871)))

(declare-fun b!135500 () Bool)

(assert (=> b!135500 (= e!88239 call!14870)))

(declare-fun b!135501 () Bool)

(assert (=> b!135501 (= e!88240 (insertStrictlySorted!91 (t!6137 (t!6137 (toList!842 e!86561))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14867 () Bool)

(assert (=> bm!14867 (= call!14869 call!14871)))

(declare-fun bm!14868 () Bool)

(assert (=> bm!14868 (= call!14871 ($colon$colon!91 e!88240 (ite c!25328 (h!2295 (t!6137 (toList!842 e!86561))) (tuple2!2565 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!25327 () Bool)

(assert (=> bm!14868 (= c!25327 c!25328)))

(assert (= (and d!42333 c!25328) b!135499))

(assert (= (and d!42333 (not c!25328)) b!135493))

(assert (= (and b!135493 c!25330) b!135497))

(assert (= (and b!135493 (not c!25330)) b!135495))

(assert (= (and b!135495 c!25329) b!135500))

(assert (= (and b!135495 (not c!25329)) b!135494))

(assert (= (or b!135500 b!135494) bm!14866))

(assert (= (or b!135497 bm!14866) bm!14867))

(assert (= (or b!135499 bm!14867) bm!14868))

(assert (= (and bm!14868 c!25327) b!135501))

(assert (= (and bm!14868 (not c!25327)) b!135498))

(assert (= (and d!42333 res!65076) b!135492))

(assert (= (and b!135492 res!65075) b!135496))

(declare-fun m!161711 () Bool)

(assert (=> b!135496 m!161711))

(declare-fun m!161713 () Bool)

(assert (=> b!135501 m!161713))

(declare-fun m!161715 () Bool)

(assert (=> bm!14868 m!161715))

(declare-fun m!161717 () Bool)

(assert (=> b!135492 m!161717))

(declare-fun m!161719 () Bool)

(assert (=> d!42333 m!161719))

(assert (=> d!42333 m!160013))

(assert (=> b!133353 d!42333))

(declare-fun d!42335 () Bool)

(declare-fun e!88245 () Bool)

(assert (=> d!42335 e!88245))

(declare-fun res!65077 () Bool)

(assert (=> d!42335 (=> res!65077 e!88245)))

(declare-fun lt!70860 () Bool)

(assert (=> d!42335 (= res!65077 (not lt!70860))))

(declare-fun lt!70861 () Bool)

(assert (=> d!42335 (= lt!70860 lt!70861)))

(declare-fun lt!70862 () Unit!4141)

(declare-fun e!88244 () Unit!4141)

(assert (=> d!42335 (= lt!70862 e!88244)))

(declare-fun c!25331 () Bool)

(assert (=> d!42335 (= c!25331 lt!70861)))

(assert (=> d!42335 (= lt!70861 (containsKey!176 (toList!842 lt!70017) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42335 (= (contains!884 lt!70017 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70860)))

(declare-fun b!135502 () Bool)

(declare-fun lt!70863 () Unit!4141)

(assert (=> b!135502 (= e!88244 lt!70863)))

(assert (=> b!135502 (= lt!70863 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70017) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!135502 (isDefined!125 (getValueByKey!173 (toList!842 lt!70017) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135503 () Bool)

(declare-fun Unit!4256 () Unit!4141)

(assert (=> b!135503 (= e!88244 Unit!4256)))

(declare-fun b!135504 () Bool)

(assert (=> b!135504 (= e!88245 (isDefined!125 (getValueByKey!173 (toList!842 lt!70017) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42335 c!25331) b!135502))

(assert (= (and d!42335 (not c!25331)) b!135503))

(assert (= (and d!42335 (not res!65077)) b!135504))

(declare-fun m!161721 () Bool)

(assert (=> d!42335 m!161721))

(declare-fun m!161723 () Bool)

(assert (=> b!135502 m!161723))

(assert (=> b!135502 m!158293))

(assert (=> b!135502 m!158293))

(declare-fun m!161725 () Bool)

(assert (=> b!135502 m!161725))

(assert (=> b!135504 m!158293))

(assert (=> b!135504 m!158293))

(assert (=> b!135504 m!161725))

(assert (=> d!40877 d!42335))

(declare-fun b!135506 () Bool)

(declare-fun e!88246 () Option!179)

(declare-fun e!88247 () Option!179)

(assert (=> b!135506 (= e!88246 e!88247)))

(declare-fun c!25333 () Bool)

(assert (=> b!135506 (= c!25333 (and ((_ is Cons!1690) lt!70018) (not (= (_1!1293 (h!2295 lt!70018)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135505 () Bool)

(assert (=> b!135505 (= e!88246 (Some!178 (_2!1293 (h!2295 lt!70018))))))

(declare-fun c!25332 () Bool)

(declare-fun d!42337 () Bool)

(assert (=> d!42337 (= c!25332 (and ((_ is Cons!1690) lt!70018) (= (_1!1293 (h!2295 lt!70018)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42337 (= (getValueByKey!173 lt!70018 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88246)))

(declare-fun b!135508 () Bool)

(assert (=> b!135508 (= e!88247 None!177)))

(declare-fun b!135507 () Bool)

(assert (=> b!135507 (= e!88247 (getValueByKey!173 (t!6137 lt!70018) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42337 c!25332) b!135505))

(assert (= (and d!42337 (not c!25332)) b!135506))

(assert (= (and b!135506 c!25333) b!135507))

(assert (= (and b!135506 (not c!25333)) b!135508))

(declare-fun m!161727 () Bool)

(assert (=> b!135507 m!161727))

(assert (=> d!40877 d!42337))

(declare-fun d!42339 () Bool)

(assert (=> d!42339 (= (getValueByKey!173 lt!70018 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70864 () Unit!4141)

(assert (=> d!42339 (= lt!70864 (choose!833 lt!70018 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88248 () Bool)

(assert (=> d!42339 e!88248))

(declare-fun res!65078 () Bool)

(assert (=> d!42339 (=> (not res!65078) (not e!88248))))

(assert (=> d!42339 (= res!65078 (isStrictlySorted!309 lt!70018))))

(assert (=> d!42339 (= (lemmaContainsTupThenGetReturnValue!88 lt!70018 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70864)))

(declare-fun b!135509 () Bool)

(declare-fun res!65079 () Bool)

(assert (=> b!135509 (=> (not res!65079) (not e!88248))))

(assert (=> b!135509 (= res!65079 (containsKey!176 lt!70018 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135510 () Bool)

(assert (=> b!135510 (= e!88248 (contains!886 lt!70018 (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42339 res!65078) b!135509))

(assert (= (and b!135509 res!65079) b!135510))

(assert (=> d!42339 m!158287))

(declare-fun m!161729 () Bool)

(assert (=> d!42339 m!161729))

(declare-fun m!161731 () Bool)

(assert (=> d!42339 m!161731))

(declare-fun m!161733 () Bool)

(assert (=> b!135509 m!161733))

(declare-fun m!161735 () Bool)

(assert (=> b!135510 m!161735))

(assert (=> d!40877 d!42339))

(declare-fun b!135511 () Bool)

(declare-fun res!65080 () Bool)

(declare-fun e!88253 () Bool)

(assert (=> b!135511 (=> (not res!65080) (not e!88253))))

(declare-fun lt!70865 () List!1694)

(assert (=> b!135511 (= res!65080 (containsKey!176 lt!70865 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135512 () Bool)

(declare-fun e!88251 () List!1694)

(declare-fun e!88252 () List!1694)

(assert (=> b!135512 (= e!88251 e!88252)))

(declare-fun c!25337 () Bool)

(assert (=> b!135512 (= c!25337 (and ((_ is Cons!1690) (toList!842 (map!1398 newMap!16))) (= (_1!1293 (h!2295 (toList!842 (map!1398 newMap!16)))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14869 () Bool)

(declare-fun call!14873 () List!1694)

(declare-fun call!14872 () List!1694)

(assert (=> bm!14869 (= call!14873 call!14872)))

(declare-fun b!135513 () Bool)

(declare-fun e!88249 () List!1694)

(assert (=> b!135513 (= e!88249 call!14873)))

(declare-fun c!25336 () Bool)

(declare-fun b!135514 () Bool)

(assert (=> b!135514 (= c!25336 (and ((_ is Cons!1690) (toList!842 (map!1398 newMap!16))) (bvsgt (_1!1293 (h!2295 (toList!842 (map!1398 newMap!16)))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!135514 (= e!88252 e!88249)))

(declare-fun b!135515 () Bool)

(assert (=> b!135515 (= e!88253 (contains!886 lt!70865 (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135516 () Bool)

(assert (=> b!135516 (= e!88252 call!14872)))

(declare-fun d!42341 () Bool)

(assert (=> d!42341 e!88253))

(declare-fun res!65081 () Bool)

(assert (=> d!42341 (=> (not res!65081) (not e!88253))))

(assert (=> d!42341 (= res!65081 (isStrictlySorted!309 lt!70865))))

(assert (=> d!42341 (= lt!70865 e!88251)))

(declare-fun c!25335 () Bool)

(assert (=> d!42341 (= c!25335 (and ((_ is Cons!1690) (toList!842 (map!1398 newMap!16))) (bvslt (_1!1293 (h!2295 (toList!842 (map!1398 newMap!16)))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42341 (isStrictlySorted!309 (toList!842 (map!1398 newMap!16)))))

(assert (=> d!42341 (= (insertStrictlySorted!91 (toList!842 (map!1398 newMap!16)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70865)))

(declare-fun e!88250 () List!1694)

(declare-fun b!135517 () Bool)

(assert (=> b!135517 (= e!88250 (ite c!25337 (t!6137 (toList!842 (map!1398 newMap!16))) (ite c!25336 (Cons!1690 (h!2295 (toList!842 (map!1398 newMap!16))) (t!6137 (toList!842 (map!1398 newMap!16)))) Nil!1691)))))

(declare-fun b!135518 () Bool)

(declare-fun call!14874 () List!1694)

(assert (=> b!135518 (= e!88251 call!14874)))

(declare-fun b!135519 () Bool)

(assert (=> b!135519 (= e!88249 call!14873)))

(declare-fun b!135520 () Bool)

(assert (=> b!135520 (= e!88250 (insertStrictlySorted!91 (t!6137 (toList!842 (map!1398 newMap!16))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14870 () Bool)

(assert (=> bm!14870 (= call!14872 call!14874)))

(declare-fun bm!14871 () Bool)

(assert (=> bm!14871 (= call!14874 ($colon$colon!91 e!88250 (ite c!25335 (h!2295 (toList!842 (map!1398 newMap!16))) (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25334 () Bool)

(assert (=> bm!14871 (= c!25334 c!25335)))

(assert (= (and d!42341 c!25335) b!135518))

(assert (= (and d!42341 (not c!25335)) b!135512))

(assert (= (and b!135512 c!25337) b!135516))

(assert (= (and b!135512 (not c!25337)) b!135514))

(assert (= (and b!135514 c!25336) b!135519))

(assert (= (and b!135514 (not c!25336)) b!135513))

(assert (= (or b!135519 b!135513) bm!14869))

(assert (= (or b!135516 bm!14869) bm!14870))

(assert (= (or b!135518 bm!14870) bm!14871))

(assert (= (and bm!14871 c!25334) b!135520))

(assert (= (and bm!14871 (not c!25334)) b!135517))

(assert (= (and d!42341 res!65081) b!135511))

(assert (= (and b!135511 res!65080) b!135515))

(declare-fun m!161737 () Bool)

(assert (=> b!135515 m!161737))

(declare-fun m!161739 () Bool)

(assert (=> b!135520 m!161739))

(declare-fun m!161741 () Bool)

(assert (=> bm!14871 m!161741))

(declare-fun m!161743 () Bool)

(assert (=> b!135511 m!161743))

(declare-fun m!161745 () Bool)

(assert (=> d!42341 m!161745))

(declare-fun m!161747 () Bool)

(assert (=> d!42341 m!161747))

(assert (=> d!40877 d!42341))

(declare-fun d!42343 () Bool)

(declare-fun res!65082 () Bool)

(declare-fun e!88254 () Bool)

(assert (=> d!42343 (=> res!65082 e!88254)))

(assert (=> d!42343 (= res!65082 (and ((_ is Cons!1690) (toList!842 lt!69504)) (= (_1!1293 (h!2295 (toList!842 lt!69504))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42343 (= (containsKey!176 (toList!842 lt!69504) #b1000000000000000000000000000000000000000000000000000000000000000) e!88254)))

(declare-fun b!135521 () Bool)

(declare-fun e!88255 () Bool)

(assert (=> b!135521 (= e!88254 e!88255)))

(declare-fun res!65083 () Bool)

(assert (=> b!135521 (=> (not res!65083) (not e!88255))))

(assert (=> b!135521 (= res!65083 (and (or (not ((_ is Cons!1690) (toList!842 lt!69504))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69504))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1690) (toList!842 lt!69504)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69504))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135522 () Bool)

(assert (=> b!135522 (= e!88255 (containsKey!176 (t!6137 (toList!842 lt!69504)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42343 (not res!65082)) b!135521))

(assert (= (and b!135521 res!65083) b!135522))

(declare-fun m!161749 () Bool)

(assert (=> b!135522 m!161749))

(assert (=> d!40759 d!42343))

(declare-fun b!135523 () Bool)

(declare-fun res!65084 () Bool)

(declare-fun e!88260 () Bool)

(assert (=> b!135523 (=> (not res!65084) (not e!88260))))

(declare-fun lt!70866 () List!1694)

(assert (=> b!135523 (= res!65084 (containsKey!176 lt!70866 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!135524 () Bool)

(declare-fun e!88258 () List!1694)

(declare-fun e!88259 () List!1694)

(assert (=> b!135524 (= e!88258 e!88259)))

(declare-fun c!25341 () Bool)

(assert (=> b!135524 (= c!25341 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69339))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69339)))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun bm!14872 () Bool)

(declare-fun call!14876 () List!1694)

(declare-fun call!14875 () List!1694)

(assert (=> bm!14872 (= call!14876 call!14875)))

(declare-fun b!135525 () Bool)

(declare-fun e!88256 () List!1694)

(assert (=> b!135525 (= e!88256 call!14876)))

(declare-fun c!25340 () Bool)

(declare-fun b!135526 () Bool)

(assert (=> b!135526 (= c!25340 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69339))) (bvsgt (_1!1293 (h!2295 (t!6137 (toList!842 lt!69339)))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> b!135526 (= e!88259 e!88256)))

(declare-fun b!135527 () Bool)

(assert (=> b!135527 (= e!88260 (contains!886 lt!70866 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!135528 () Bool)

(assert (=> b!135528 (= e!88259 call!14875)))

(declare-fun d!42345 () Bool)

(assert (=> d!42345 e!88260))

(declare-fun res!65085 () Bool)

(assert (=> d!42345 (=> (not res!65085) (not e!88260))))

(assert (=> d!42345 (= res!65085 (isStrictlySorted!309 lt!70866))))

(assert (=> d!42345 (= lt!70866 e!88258)))

(declare-fun c!25339 () Bool)

(assert (=> d!42345 (= c!25339 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69339))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 lt!69339)))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!42345 (isStrictlySorted!309 (t!6137 (toList!842 lt!69339)))))

(assert (=> d!42345 (= (insertStrictlySorted!91 (t!6137 (toList!842 lt!69339)) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70866)))

(declare-fun e!88257 () List!1694)

(declare-fun b!135529 () Bool)

(assert (=> b!135529 (= e!88257 (ite c!25341 (t!6137 (t!6137 (toList!842 lt!69339))) (ite c!25340 (Cons!1690 (h!2295 (t!6137 (toList!842 lt!69339))) (t!6137 (t!6137 (toList!842 lt!69339)))) Nil!1691)))))

(declare-fun b!135530 () Bool)

(declare-fun call!14877 () List!1694)

(assert (=> b!135530 (= e!88258 call!14877)))

(declare-fun b!135531 () Bool)

(assert (=> b!135531 (= e!88256 call!14876)))

(declare-fun b!135532 () Bool)

(assert (=> b!135532 (= e!88257 (insertStrictlySorted!91 (t!6137 (t!6137 (toList!842 lt!69339))) (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun bm!14873 () Bool)

(assert (=> bm!14873 (= call!14875 call!14877)))

(declare-fun bm!14874 () Bool)

(assert (=> bm!14874 (= call!14877 ($colon$colon!91 e!88257 (ite c!25339 (h!2295 (t!6137 (toList!842 lt!69339))) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun c!25338 () Bool)

(assert (=> bm!14874 (= c!25338 c!25339)))

(assert (= (and d!42345 c!25339) b!135530))

(assert (= (and d!42345 (not c!25339)) b!135524))

(assert (= (and b!135524 c!25341) b!135528))

(assert (= (and b!135524 (not c!25341)) b!135526))

(assert (= (and b!135526 c!25340) b!135531))

(assert (= (and b!135526 (not c!25340)) b!135525))

(assert (= (or b!135531 b!135525) bm!14872))

(assert (= (or b!135528 bm!14872) bm!14873))

(assert (= (or b!135530 bm!14873) bm!14874))

(assert (= (and bm!14874 c!25338) b!135532))

(assert (= (and bm!14874 (not c!25338)) b!135529))

(assert (= (and d!42345 res!65085) b!135523))

(assert (= (and b!135523 res!65084) b!135527))

(declare-fun m!161751 () Bool)

(assert (=> b!135527 m!161751))

(declare-fun m!161753 () Bool)

(assert (=> b!135532 m!161753))

(declare-fun m!161755 () Bool)

(assert (=> bm!14874 m!161755))

(declare-fun m!161757 () Bool)

(assert (=> b!135523 m!161757))

(declare-fun m!161759 () Bool)

(assert (=> d!42345 m!161759))

(assert (=> d!42345 m!160563))

(assert (=> b!133661 d!42345))

(declare-fun lt!70867 () Bool)

(declare-fun d!42347 () Bool)

(assert (=> d!42347 (= lt!70867 (select (content!134 (t!6137 (toList!842 lt!69625))) (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun e!88262 () Bool)

(assert (=> d!42347 (= lt!70867 e!88262)))

(declare-fun res!65087 () Bool)

(assert (=> d!42347 (=> (not res!65087) (not e!88262))))

(assert (=> d!42347 (= res!65087 ((_ is Cons!1690) (t!6137 (toList!842 lt!69625))))))

(assert (=> d!42347 (= (contains!886 (t!6137 (toList!842 lt!69625)) (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) lt!70867)))

(declare-fun b!135533 () Bool)

(declare-fun e!88261 () Bool)

(assert (=> b!135533 (= e!88262 e!88261)))

(declare-fun res!65086 () Bool)

(assert (=> b!135533 (=> res!65086 e!88261)))

(assert (=> b!135533 (= res!65086 (= (h!2295 (t!6137 (toList!842 lt!69625))) (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!135534 () Bool)

(assert (=> b!135534 (= e!88261 (contains!886 (t!6137 (t!6137 (toList!842 lt!69625))) (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))

(assert (= (and d!42347 res!65087) b!135533))

(assert (= (and b!135533 (not res!65086)) b!135534))

(assert (=> d!42347 m!160909))

(declare-fun m!161761 () Bool)

(assert (=> d!42347 m!161761))

(declare-fun m!161763 () Bool)

(assert (=> b!135534 m!161763))

(assert (=> b!133900 d!42347))

(declare-fun d!42349 () Bool)

(assert (=> d!42349 (= (get!1492 (getValueByKey!173 (toList!842 lt!69504) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))) (v!3203 (getValueByKey!173 (toList!842 lt!69504) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (=> d!40623 d!42349))

(assert (=> d!40623 d!42055))

(declare-fun d!42351 () Bool)

(declare-fun e!88263 () Bool)

(assert (=> d!42351 e!88263))

(declare-fun res!65089 () Bool)

(assert (=> d!42351 (=> (not res!65089) (not e!88263))))

(declare-fun lt!70870 () ListLongMap!1653)

(assert (=> d!42351 (= res!65089 (contains!884 lt!70870 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(declare-fun lt!70871 () List!1694)

(assert (=> d!42351 (= lt!70870 (ListLongMap!1654 lt!70871))))

(declare-fun lt!70868 () Unit!4141)

(declare-fun lt!70869 () Unit!4141)

(assert (=> d!42351 (= lt!70868 lt!70869)))

(assert (=> d!42351 (= (getValueByKey!173 lt!70871 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!42351 (= lt!70869 (lemmaContainsTupThenGetReturnValue!88 lt!70871 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!42351 (= lt!70871 (insertStrictlySorted!91 (toList!842 call!14712) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (=> d!42351 (= (+!169 call!14712 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70870)))

(declare-fun b!135535 () Bool)

(declare-fun res!65088 () Bool)

(assert (=> b!135535 (=> (not res!65088) (not e!88263))))

(assert (=> b!135535 (= res!65088 (= (getValueByKey!173 (toList!842 lt!70870) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun b!135536 () Bool)

(assert (=> b!135536 (= e!88263 (contains!886 (toList!842 lt!70870) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!42351 res!65089) b!135535))

(assert (= (and b!135535 res!65088) b!135536))

(declare-fun m!161765 () Bool)

(assert (=> d!42351 m!161765))

(declare-fun m!161767 () Bool)

(assert (=> d!42351 m!161767))

(declare-fun m!161769 () Bool)

(assert (=> d!42351 m!161769))

(declare-fun m!161771 () Bool)

(assert (=> d!42351 m!161771))

(declare-fun m!161773 () Bool)

(assert (=> b!135535 m!161773))

(declare-fun m!161775 () Bool)

(assert (=> b!135536 m!161775))

(assert (=> b!133429 d!42351))

(declare-fun d!42353 () Bool)

(declare-fun res!65090 () Bool)

(declare-fun e!88264 () Bool)

(assert (=> d!42353 (=> res!65090 e!88264)))

(assert (=> d!42353 (= res!65090 (or ((_ is Nil!1691) (t!6137 (toList!842 lt!69167))) ((_ is Nil!1691) (t!6137 (t!6137 (toList!842 lt!69167))))))))

(assert (=> d!42353 (= (isStrictlySorted!309 (t!6137 (toList!842 lt!69167))) e!88264)))

(declare-fun b!135537 () Bool)

(declare-fun e!88265 () Bool)

(assert (=> b!135537 (= e!88264 e!88265)))

(declare-fun res!65091 () Bool)

(assert (=> b!135537 (=> (not res!65091) (not e!88265))))

(assert (=> b!135537 (= res!65091 (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 lt!69167)))) (_1!1293 (h!2295 (t!6137 (t!6137 (toList!842 lt!69167)))))))))

(declare-fun b!135538 () Bool)

(assert (=> b!135538 (= e!88265 (isStrictlySorted!309 (t!6137 (t!6137 (toList!842 lt!69167)))))))

(assert (= (and d!42353 (not res!65090)) b!135537))

(assert (= (and b!135537 res!65091) b!135538))

(declare-fun m!161777 () Bool)

(assert (=> b!135538 m!161777))

(assert (=> b!133590 d!42353))

(declare-fun d!42355 () Bool)

(declare-fun e!88267 () Bool)

(assert (=> d!42355 e!88267))

(declare-fun res!65092 () Bool)

(assert (=> d!42355 (=> res!65092 e!88267)))

(declare-fun lt!70872 () Bool)

(assert (=> d!42355 (= res!65092 (not lt!70872))))

(declare-fun lt!70873 () Bool)

(assert (=> d!42355 (= lt!70872 lt!70873)))

(declare-fun lt!70874 () Unit!4141)

(declare-fun e!88266 () Unit!4141)

(assert (=> d!42355 (= lt!70874 e!88266)))

(declare-fun c!25342 () Bool)

(assert (=> d!42355 (= c!25342 lt!70873)))

(assert (=> d!42355 (= lt!70873 (containsKey!176 (toList!842 lt!69932) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42355 (= (contains!884 lt!69932 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70872)))

(declare-fun b!135539 () Bool)

(declare-fun lt!70875 () Unit!4141)

(assert (=> b!135539 (= e!88266 lt!70875)))

(assert (=> b!135539 (= lt!70875 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69932) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135539 (isDefined!125 (getValueByKey!173 (toList!842 lt!69932) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135540 () Bool)

(declare-fun Unit!4257 () Unit!4141)

(assert (=> b!135540 (= e!88266 Unit!4257)))

(declare-fun b!135541 () Bool)

(assert (=> b!135541 (= e!88267 (isDefined!125 (getValueByKey!173 (toList!842 lt!69932) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42355 c!25342) b!135539))

(assert (= (and d!42355 (not c!25342)) b!135540))

(assert (= (and d!42355 (not res!65092)) b!135541))

(declare-fun m!161779 () Bool)

(assert (=> d!42355 m!161779))

(declare-fun m!161781 () Bool)

(assert (=> b!135539 m!161781))

(assert (=> b!135539 m!160015))

(assert (=> b!135539 m!160015))

(declare-fun m!161783 () Bool)

(assert (=> b!135539 m!161783))

(assert (=> b!135541 m!160015))

(assert (=> b!135541 m!160015))

(assert (=> b!135541 m!161783))

(assert (=> bm!14737 d!42355))

(declare-fun lt!70876 () Bool)

(declare-fun d!42357 () Bool)

(assert (=> d!42357 (= lt!70876 (select (content!134 (toList!842 lt!69707)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(declare-fun e!88269 () Bool)

(assert (=> d!42357 (= lt!70876 e!88269)))

(declare-fun res!65094 () Bool)

(assert (=> d!42357 (=> (not res!65094) (not e!88269))))

(assert (=> d!42357 (= res!65094 ((_ is Cons!1690) (toList!842 lt!69707)))))

(assert (=> d!42357 (= (contains!886 (toList!842 lt!69707) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!70876)))

(declare-fun b!135542 () Bool)

(declare-fun e!88268 () Bool)

(assert (=> b!135542 (= e!88269 e!88268)))

(declare-fun res!65093 () Bool)

(assert (=> b!135542 (=> res!65093 e!88268)))

(assert (=> b!135542 (= res!65093 (= (h!2295 (toList!842 lt!69707)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(declare-fun b!135543 () Bool)

(assert (=> b!135543 (= e!88268 (contains!886 (t!6137 (toList!842 lt!69707)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))

(assert (= (and d!42357 res!65094) b!135542))

(assert (= (and b!135542 (not res!65093)) b!135543))

(declare-fun m!161785 () Bool)

(assert (=> d!42357 m!161785))

(declare-fun m!161787 () Bool)

(assert (=> d!42357 m!161787))

(declare-fun m!161789 () Bool)

(assert (=> b!135543 m!161789))

(assert (=> b!133300 d!42357))

(declare-fun d!42359 () Bool)

(declare-fun res!65095 () Bool)

(declare-fun e!88270 () Bool)

(assert (=> d!42359 (=> res!65095 e!88270)))

(assert (=> d!42359 (= res!65095 (and ((_ is Cons!1690) (toList!842 lt!69605)) (= (_1!1293 (h!2295 (toList!842 lt!69605))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (=> d!42359 (= (containsKey!176 (toList!842 lt!69605) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) e!88270)))

(declare-fun b!135544 () Bool)

(declare-fun e!88271 () Bool)

(assert (=> b!135544 (= e!88270 e!88271)))

(declare-fun res!65096 () Bool)

(assert (=> b!135544 (=> (not res!65096) (not e!88271))))

(assert (=> b!135544 (= res!65096 (and (or (not ((_ is Cons!1690) (toList!842 lt!69605))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69605))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) ((_ is Cons!1690) (toList!842 lt!69605)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69605))) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!135545 () Bool)

(assert (=> b!135545 (= e!88271 (containsKey!176 (t!6137 (toList!842 lt!69605)) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!42359 (not res!65095)) b!135544))

(assert (= (and b!135544 res!65096) b!135545))

(declare-fun m!161791 () Bool)

(assert (=> b!135545 m!161791))

(assert (=> d!41061 d!42359))

(assert (=> d!40935 d!40907))

(declare-fun d!42361 () Bool)

(declare-fun e!88273 () Bool)

(assert (=> d!42361 e!88273))

(declare-fun res!65097 () Bool)

(assert (=> d!42361 (=> res!65097 e!88273)))

(declare-fun lt!70877 () Bool)

(assert (=> d!42361 (= res!65097 (not lt!70877))))

(declare-fun lt!70878 () Bool)

(assert (=> d!42361 (= lt!70877 lt!70878)))

(declare-fun lt!70879 () Unit!4141)

(declare-fun e!88272 () Unit!4141)

(assert (=> d!42361 (= lt!70879 e!88272)))

(declare-fun c!25343 () Bool)

(assert (=> d!42361 (= c!25343 lt!70878)))

(assert (=> d!42361 (= lt!70878 (containsKey!176 (toList!842 lt!69524) lt!69530))))

(assert (=> d!42361 (= (contains!884 lt!69524 lt!69530) lt!70877)))

(declare-fun b!135546 () Bool)

(declare-fun lt!70880 () Unit!4141)

(assert (=> b!135546 (= e!88272 lt!70880)))

(assert (=> b!135546 (= lt!70880 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69524) lt!69530))))

(assert (=> b!135546 (isDefined!125 (getValueByKey!173 (toList!842 lt!69524) lt!69530))))

(declare-fun b!135547 () Bool)

(declare-fun Unit!4258 () Unit!4141)

(assert (=> b!135547 (= e!88272 Unit!4258)))

(declare-fun b!135548 () Bool)

(assert (=> b!135548 (= e!88273 (isDefined!125 (getValueByKey!173 (toList!842 lt!69524) lt!69530)))))

(assert (= (and d!42361 c!25343) b!135546))

(assert (= (and d!42361 (not c!25343)) b!135547))

(assert (= (and d!42361 (not res!65097)) b!135548))

(declare-fun m!161793 () Bool)

(assert (=> d!42361 m!161793))

(declare-fun m!161795 () Bool)

(assert (=> b!135546 m!161795))

(assert (=> b!135546 m!158493))

(assert (=> b!135546 m!158493))

(declare-fun m!161797 () Bool)

(assert (=> b!135546 m!161797))

(assert (=> b!135548 m!158493))

(assert (=> b!135548 m!158493))

(assert (=> b!135548 m!161797))

(assert (=> d!40935 d!42361))

(assert (=> d!40935 d!40927))

(assert (=> d!40935 d!40929))

(declare-fun d!42363 () Bool)

(assert (=> d!42363 (= (apply!116 (+!169 lt!69524 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))) lt!69530) (apply!116 lt!69524 lt!69530))))

(assert (=> d!42363 true))

(declare-fun _$34!985 () Unit!4141)

(assert (=> d!42363 (= (choose!828 lt!69524 lt!69522 (minValue!2719 newMap!16) lt!69530) _$34!985)))

(declare-fun bs!5704 () Bool)

(assert (= bs!5704 d!42363))

(assert (=> bs!5704 m!156863))

(assert (=> bs!5704 m!156863))

(assert (=> bs!5704 m!156865))

(assert (=> bs!5704 m!156849))

(assert (=> d!40935 d!42363))

(declare-fun d!42365 () Bool)

(assert (=> d!42365 (= (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69572 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69578)) (v!3203 (getValueByKey!173 (toList!842 (+!169 lt!69572 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69578)))))

(assert (=> d!41045 d!42365))

(declare-fun b!135550 () Bool)

(declare-fun e!88274 () Option!179)

(declare-fun e!88275 () Option!179)

(assert (=> b!135550 (= e!88274 e!88275)))

(declare-fun c!25345 () Bool)

(assert (=> b!135550 (= c!25345 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69572 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69572 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))) lt!69578))))))

(declare-fun b!135549 () Bool)

(assert (=> b!135549 (= e!88274 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69572 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))))

(declare-fun d!42367 () Bool)

(declare-fun c!25344 () Bool)

(assert (=> d!42367 (= c!25344 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69572 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69572 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))) lt!69578)))))

(assert (=> d!42367 (= (getValueByKey!173 (toList!842 (+!169 lt!69572 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69578) e!88274)))

(declare-fun b!135552 () Bool)

(assert (=> b!135552 (= e!88275 None!177)))

(declare-fun b!135551 () Bool)

(assert (=> b!135551 (= e!88275 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69572 (tuple2!2565 lt!69570 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) lt!69578))))

(assert (= (and d!42367 c!25344) b!135549))

(assert (= (and d!42367 (not c!25344)) b!135550))

(assert (= (and b!135550 c!25345) b!135551))

(assert (= (and b!135550 (not c!25345)) b!135552))

(declare-fun m!161799 () Bool)

(assert (=> b!135551 m!161799))

(assert (=> d!41045 d!42367))

(declare-fun d!42369 () Bool)

(declare-fun res!65098 () Bool)

(declare-fun e!88276 () Bool)

(assert (=> d!42369 (=> res!65098 e!88276)))

(assert (=> d!42369 (= res!65098 (and ((_ is Cons!1690) (toList!842 lt!69373)) (= (_1!1293 (h!2295 (toList!842 lt!69373))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!42369 (= (containsKey!176 (toList!842 lt!69373) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!88276)))

(declare-fun b!135553 () Bool)

(declare-fun e!88277 () Bool)

(assert (=> b!135553 (= e!88276 e!88277)))

(declare-fun res!65099 () Bool)

(assert (=> b!135553 (=> (not res!65099) (not e!88277))))

(assert (=> b!135553 (= res!65099 (and (or (not ((_ is Cons!1690) (toList!842 lt!69373))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69373))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1690) (toList!842 lt!69373)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69373))) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135554 () Bool)

(assert (=> b!135554 (= e!88277 (containsKey!176 (t!6137 (toList!842 lt!69373)) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42369 (not res!65098)) b!135553))

(assert (= (and b!135553 res!65099) b!135554))

(declare-fun m!161801 () Bool)

(assert (=> b!135554 m!161801))

(assert (=> d!40627 d!42369))

(declare-fun b!135555 () Bool)

(declare-fun lt!70881 () SeekEntryResult!269)

(assert (=> b!135555 (and (bvsge (index!3238 lt!70881) #b00000000000000000000000000000000) (bvslt (index!3238 lt!70881) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun e!88278 () Bool)

(assert (=> b!135555 (= e!88278 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!70881)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135556 () Bool)

(declare-fun e!88279 () SeekEntryResult!269)

(assert (=> b!135556 (= e!88279 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!135557 () Bool)

(declare-fun e!88280 () SeekEntryResult!269)

(assert (=> b!135557 (= e!88280 (Intermediate!269 true (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7164 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!135558 () Bool)

(assert (=> b!135558 (= e!88279 (Intermediate!269 false (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7164 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun b!135559 () Bool)

(assert (=> b!135559 (= e!88280 e!88279)))

(declare-fun c!25348 () Bool)

(declare-fun lt!70882 () (_ BitVec 64))

(assert (=> b!135559 (= c!25348 (or (= lt!70882 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))) (= (bvadd lt!70882 lt!70882) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135561 () Bool)

(assert (=> b!135561 (and (bvsge (index!3238 lt!70881) #b00000000000000000000000000000000) (bvslt (index!3238 lt!70881) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun res!65100 () Bool)

(assert (=> b!135561 (= res!65100 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!70881)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135561 (=> res!65100 e!88278)))

(declare-fun e!88281 () Bool)

(assert (=> b!135561 (= e!88281 e!88278)))

(declare-fun b!135562 () Bool)

(declare-fun e!88282 () Bool)

(assert (=> b!135562 (= e!88282 e!88281)))

(declare-fun res!65102 () Bool)

(assert (=> b!135562 (= res!65102 (and ((_ is Intermediate!269) lt!70881) (not (undefined!1081 lt!70881)) (bvslt (x!15586 lt!70881) #b01111111111111111111111111111110) (bvsge (x!15586 lt!70881) #b00000000000000000000000000000000) (bvsge (x!15586 lt!70881) #b00000000000000000000000000000000)))))

(assert (=> b!135562 (=> (not res!65102) (not e!88281))))

(declare-fun b!135563 () Bool)

(assert (=> b!135563 (and (bvsge (index!3238 lt!70881) #b00000000000000000000000000000000) (bvslt (index!3238 lt!70881) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun res!65101 () Bool)

(assert (=> b!135563 (= res!65101 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!70881)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135563 (=> res!65101 e!88278)))

(declare-fun d!42371 () Bool)

(assert (=> d!42371 e!88282))

(declare-fun c!25346 () Bool)

(assert (=> d!42371 (= c!25346 (and ((_ is Intermediate!269) lt!70881) (undefined!1081 lt!70881)))))

(assert (=> d!42371 (= lt!70881 e!88280)))

(declare-fun c!25347 () Bool)

(assert (=> d!42371 (= c!25347 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!42371 (= lt!70882 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7164 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!42371 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!42371 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) lt!70881)))

(declare-fun b!135560 () Bool)

(assert (=> b!135560 (= e!88282 (bvsge (x!15586 lt!70881) #b01111111111111111111111111111110))))

(assert (= (and d!42371 c!25347) b!135557))

(assert (= (and d!42371 (not c!25347)) b!135559))

(assert (= (and b!135559 c!25348) b!135558))

(assert (= (and b!135559 (not c!25348)) b!135556))

(assert (= (and d!42371 c!25346) b!135560))

(assert (= (and d!42371 (not c!25346)) b!135562))

(assert (= (and b!135562 res!65102) b!135561))

(assert (= (and b!135561 (not res!65100)) b!135563))

(assert (= (and b!135563 (not res!65101)) b!135555))

(declare-fun m!161803 () Bool)

(assert (=> b!135555 m!161803))

(assert (=> d!42371 m!158407))

(declare-fun m!161805 () Bool)

(assert (=> d!42371 m!161805))

(assert (=> d!42371 m!156405))

(assert (=> b!135563 m!161803))

(assert (=> b!135556 m!158407))

(declare-fun m!161807 () Bool)

(assert (=> b!135556 m!161807))

(assert (=> b!135556 m!161807))

(assert (=> b!135556 m!157015))

(declare-fun m!161809 () Bool)

(assert (=> b!135556 m!161809))

(assert (=> b!135561 m!161803))

(assert (=> d!40903 d!42371))

(declare-fun d!42373 () Bool)

(declare-fun lt!70884 () (_ BitVec 32))

(declare-fun lt!70883 () (_ BitVec 32))

(assert (=> d!42373 (= lt!70884 (bvmul (bvxor lt!70883 (bvlshr lt!70883 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!42373 (= lt!70883 ((_ extract 31 0) (bvand (bvxor (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (bvlshr (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!42373 (and (bvsge (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000000) (let ((res!64278 (let ((h!2296 ((_ extract 31 0) (bvand (bvxor (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (bvlshr (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15689 (bvmul (bvxor h!2296 (bvlshr h!2296 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15689 (bvlshr x!15689 #b00000000000000000000000000001101)) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))) (and (bvslt res!64278 (bvadd (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000001)) (bvsge res!64278 #b00000000000000000000000000000000))))))

(assert (=> d!42373 (= (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (bvand (bvxor lt!70884 (bvlshr lt!70884 #b00000000000000000000000000001101)) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(assert (=> d!40903 d!42373))

(assert (=> d!40903 d!40431))

(assert (=> b!133942 d!41413))

(assert (=> b!133942 d!41311))

(declare-fun d!42375 () Bool)

(assert (=> d!42375 (= (get!1492 (getValueByKey!173 (toList!842 lt!69504) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3203 (getValueByKey!173 (toList!842 lt!69504) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!40577 d!42375))

(assert (=> d!40577 d!41595))

(assert (=> d!40639 d!40641))

(assert (=> d!40639 d!40643))

(declare-fun d!42377 () Bool)

(assert (=> d!42377 (isDefined!125 (getValueByKey!173 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42377 true))

(declare-fun _$12!405 () Unit!4141)

(assert (=> d!42377 (= (choose!831 (toList!842 lt!69344) #b1000000000000000000000000000000000000000000000000000000000000000) _$12!405)))

(declare-fun bs!5705 () Bool)

(assert (= bs!5705 d!42377))

(assert (=> bs!5705 m!156835))

(assert (=> bs!5705 m!156835))

(assert (=> bs!5705 m!157045))

(assert (=> d!40639 d!42377))

(assert (=> d!40639 d!41263))

(declare-fun d!42379 () Bool)

(declare-fun e!88283 () Bool)

(assert (=> d!42379 e!88283))

(declare-fun res!65104 () Bool)

(assert (=> d!42379 (=> (not res!65104) (not e!88283))))

(declare-fun lt!70887 () ListLongMap!1653)

(assert (=> d!42379 (= res!65104 (contains!884 lt!70887 (_1!1293 (ite (or c!24677 c!24679) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(declare-fun lt!70888 () List!1694)

(assert (=> d!42379 (= lt!70887 (ListLongMap!1654 lt!70888))))

(declare-fun lt!70885 () Unit!4141)

(declare-fun lt!70886 () Unit!4141)

(assert (=> d!42379 (= lt!70885 lt!70886)))

(assert (=> d!42379 (= (getValueByKey!173 lt!70888 (_1!1293 (ite (or c!24677 c!24679) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24677 c!24679) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42379 (= lt!70886 (lemmaContainsTupThenGetReturnValue!88 lt!70888 (_1!1293 (ite (or c!24677 c!24679) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24677 c!24679) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42379 (= lt!70888 (insertStrictlySorted!91 (toList!842 (ite c!24677 call!14683 (ite c!24679 call!14684 call!14686))) (_1!1293 (ite (or c!24677 c!24679) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) (_2!1293 (ite (or c!24677 c!24679) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))))

(assert (=> d!42379 (= (+!169 (ite c!24677 call!14683 (ite c!24679 call!14684 call!14686)) (ite (or c!24677 c!24679) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))) lt!70887)))

(declare-fun b!135564 () Bool)

(declare-fun res!65103 () Bool)

(assert (=> b!135564 (=> (not res!65103) (not e!88283))))

(assert (=> b!135564 (= res!65103 (= (getValueByKey!173 (toList!842 lt!70887) (_1!1293 (ite (or c!24677 c!24679) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (ite (or c!24677 c!24679) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))))

(declare-fun b!135565 () Bool)

(assert (=> b!135565 (= e!88283 (contains!886 (toList!842 lt!70887) (ite (or c!24677 c!24679) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16)))))))

(assert (= (and d!42379 res!65104) b!135564))

(assert (= (and b!135564 res!65103) b!135565))

(declare-fun m!161811 () Bool)

(assert (=> d!42379 m!161811))

(declare-fun m!161813 () Bool)

(assert (=> d!42379 m!161813))

(declare-fun m!161815 () Bool)

(assert (=> d!42379 m!161815))

(declare-fun m!161817 () Bool)

(assert (=> d!42379 m!161817))

(declare-fun m!161819 () Bool)

(assert (=> b!135564 m!161819))

(declare-fun m!161821 () Bool)

(assert (=> b!135565 m!161821))

(assert (=> bm!14679 d!42379))

(declare-fun d!42381 () Bool)

(assert (=> d!42381 (= (get!1490 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3197 (select (arr!2253 (ite (or c!24553 c!24562) (_values!2847 newMap!16) (array!4766 (store (arr!2253 (_values!2847 newMap!16)) (index!3237 lt!69284) (ValueCellFull!1094 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2522 (_values!2847 newMap!16))))) #b00000000000000000000000000000000)))))

(assert (=> b!134030 d!42381))

(assert (=> b!133376 d!41183))

(assert (=> d!40671 d!40591))

(assert (=> b!133740 d!41335))

(assert (=> b!133740 d!41337))

(assert (=> b!133945 d!40453))

(declare-fun b!135567 () Bool)

(declare-fun e!88284 () Option!179)

(declare-fun e!88285 () Option!179)

(assert (=> b!135567 (= e!88284 e!88285)))

(declare-fun c!25350 () Bool)

(assert (=> b!135567 (= c!25350 (and ((_ is Cons!1690) (toList!842 lt!69707)) (not (= (_1!1293 (h!2295 (toList!842 lt!69707))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!135566 () Bool)

(assert (=> b!135566 (= e!88284 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69707)))))))

(declare-fun c!25349 () Bool)

(declare-fun d!42383 () Bool)

(assert (=> d!42383 (= c!25349 (and ((_ is Cons!1690) (toList!842 lt!69707)) (= (_1!1293 (h!2295 (toList!842 lt!69707))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!42383 (= (getValueByKey!173 (toList!842 lt!69707) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) e!88284)))

(declare-fun b!135569 () Bool)

(assert (=> b!135569 (= e!88285 None!177)))

(declare-fun b!135568 () Bool)

(assert (=> b!135568 (= e!88285 (getValueByKey!173 (t!6137 (toList!842 lt!69707)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (= (and d!42383 c!25349) b!135566))

(assert (= (and d!42383 (not c!25349)) b!135567))

(assert (= (and b!135567 c!25350) b!135568))

(assert (= (and b!135567 (not c!25350)) b!135569))

(declare-fun m!161823 () Bool)

(assert (=> b!135568 m!161823))

(assert (=> b!133299 d!42383))

(declare-fun b!135570 () Bool)

(declare-fun e!88287 () SeekEntryResult!269)

(assert (=> b!135570 (= e!88287 (Found!269 (nextIndex!0 (index!3238 lt!69362) (bvadd (x!15586 lt!69362) #b00000000000000000000000000000001) (mask!7164 newMap!16))))))

(declare-fun e!88286 () SeekEntryResult!269)

(declare-fun b!135571 () Bool)

(assert (=> b!135571 (= e!88286 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15586 lt!69362) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (index!3238 lt!69362) (bvadd (x!15586 lt!69362) #b00000000000000000000000000000001) (mask!7164 newMap!16)) (bvadd (x!15586 lt!69362) #b00000000000000000000000000000001 #b00000000000000000000000000000001) (mask!7164 newMap!16)) (index!3238 lt!69362) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)))))

(declare-fun b!135572 () Bool)

(declare-fun e!88288 () SeekEntryResult!269)

(assert (=> b!135572 (= e!88288 e!88287)))

(declare-fun lt!70889 () (_ BitVec 64))

(declare-fun c!25351 () Bool)

(assert (=> b!135572 (= c!25351 (= lt!70889 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(declare-fun b!135573 () Bool)

(assert (=> b!135573 (= e!88286 (MissingVacant!269 (index!3238 lt!69362)))))

(declare-fun b!135574 () Bool)

(assert (=> b!135574 (= e!88288 Undefined!269)))

(declare-fun lt!70890 () SeekEntryResult!269)

(declare-fun d!42385 () Bool)

(assert (=> d!42385 (and (or ((_ is Undefined!269) lt!70890) (not ((_ is Found!269) lt!70890)) (and (bvsge (index!3237 lt!70890) #b00000000000000000000000000000000) (bvslt (index!3237 lt!70890) (size!2521 (_keys!4613 newMap!16))))) (or ((_ is Undefined!269) lt!70890) ((_ is Found!269) lt!70890) (not ((_ is MissingVacant!269) lt!70890)) (not (= (index!3239 lt!70890) (index!3238 lt!69362))) (and (bvsge (index!3239 lt!70890) #b00000000000000000000000000000000) (bvslt (index!3239 lt!70890) (size!2521 (_keys!4613 newMap!16))))) (or ((_ is Undefined!269) lt!70890) (ite ((_ is Found!269) lt!70890) (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!70890)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (and ((_ is MissingVacant!269) lt!70890) (= (index!3239 lt!70890) (index!3238 lt!69362)) (= (select (arr!2252 (_keys!4613 newMap!16)) (index!3239 lt!70890)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!42385 (= lt!70890 e!88288)))

(declare-fun c!25352 () Bool)

(assert (=> d!42385 (= c!25352 (bvsge (bvadd (x!15586 lt!69362) #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(assert (=> d!42385 (= lt!70889 (select (arr!2252 (_keys!4613 newMap!16)) (nextIndex!0 (index!3238 lt!69362) (bvadd (x!15586 lt!69362) #b00000000000000000000000000000001) (mask!7164 newMap!16))))))

(assert (=> d!42385 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!42385 (= (seekKeyOrZeroReturnVacant!0 (bvadd (x!15586 lt!69362) #b00000000000000000000000000000001) (nextIndex!0 (index!3238 lt!69362) (bvadd (x!15586 lt!69362) #b00000000000000000000000000000001) (mask!7164 newMap!16)) (index!3238 lt!69362) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (mask!7164 newMap!16)) lt!70890)))

(declare-fun b!135575 () Bool)

(declare-fun c!25353 () Bool)

(assert (=> b!135575 (= c!25353 (= lt!70889 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135575 (= e!88287 e!88286)))

(assert (= (and d!42385 c!25352) b!135574))

(assert (= (and d!42385 (not c!25352)) b!135572))

(assert (= (and b!135572 c!25351) b!135570))

(assert (= (and b!135572 (not c!25351)) b!135575))

(assert (= (and b!135575 c!25353) b!135573))

(assert (= (and b!135575 (not c!25353)) b!135571))

(assert (=> b!135571 m!158847))

(declare-fun m!161825 () Bool)

(assert (=> b!135571 m!161825))

(assert (=> b!135571 m!161825))

(assert (=> b!135571 m!156395))

(declare-fun m!161827 () Bool)

(assert (=> b!135571 m!161827))

(declare-fun m!161829 () Bool)

(assert (=> d!42385 m!161829))

(declare-fun m!161831 () Bool)

(assert (=> d!42385 m!161831))

(assert (=> d!42385 m!158847))

(declare-fun m!161833 () Bool)

(assert (=> d!42385 m!161833))

(assert (=> d!42385 m!156651))

(assert (=> b!134061 d!42385))

(declare-fun d!42387 () Bool)

(declare-fun lt!70891 () (_ BitVec 32))

(assert (=> d!42387 (and (bvsge lt!70891 #b00000000000000000000000000000000) (bvslt lt!70891 (bvadd (mask!7164 newMap!16) #b00000000000000000000000000000001)))))

(assert (=> d!42387 (= lt!70891 (choose!52 (index!3238 lt!69362) (bvadd (x!15586 lt!69362) #b00000000000000000000000000000001) (mask!7164 newMap!16)))))

(assert (=> d!42387 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!42387 (= (nextIndex!0 (index!3238 lt!69362) (bvadd (x!15586 lt!69362) #b00000000000000000000000000000001) (mask!7164 newMap!16)) lt!70891)))

(declare-fun bs!5706 () Bool)

(assert (= bs!5706 d!42387))

(declare-fun m!161835 () Bool)

(assert (=> bs!5706 m!161835))

(assert (=> bs!5706 m!156651))

(assert (=> b!134061 d!42387))

(declare-fun d!42389 () Bool)

(assert (=> d!42389 (= (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69574 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69576)) (v!3203 (getValueByKey!173 (toList!842 (+!169 lt!69574 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69576)))))

(assert (=> d!41041 d!42389))

(declare-fun b!135577 () Bool)

(declare-fun e!88289 () Option!179)

(declare-fun e!88290 () Option!179)

(assert (=> b!135577 (= e!88289 e!88290)))

(declare-fun c!25355 () Bool)

(assert (=> b!135577 (= c!25355 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69574 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69574 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))) lt!69576))))))

(declare-fun b!135576 () Bool)

(assert (=> b!135576 (= e!88289 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69574 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))))

(declare-fun c!25354 () Bool)

(declare-fun d!42391 () Bool)

(assert (=> d!42391 (= c!25354 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69574 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69574 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))) lt!69576)))))

(assert (=> d!42391 (= (getValueByKey!173 (toList!842 (+!169 lt!69574 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!69576) e!88289)))

(declare-fun b!135579 () Bool)

(assert (=> b!135579 (= e!88290 None!177)))

(declare-fun b!135578 () Bool)

(assert (=> b!135578 (= e!88290 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69574 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) lt!69576))))

(assert (= (and d!42391 c!25354) b!135576))

(assert (= (and d!42391 (not c!25354)) b!135577))

(assert (= (and b!135577 c!25355) b!135578))

(assert (= (and b!135577 (not c!25355)) b!135579))

(declare-fun m!161837 () Bool)

(assert (=> b!135578 m!161837))

(assert (=> d!41041 d!42391))

(declare-fun b!135581 () Bool)

(declare-fun e!88291 () Option!179)

(declare-fun e!88292 () Option!179)

(assert (=> b!135581 (= e!88291 e!88292)))

(declare-fun c!25357 () Bool)

(assert (=> b!135581 (= c!25357 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69341))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69341)))) lt!69343))))))

(declare-fun b!135580 () Bool)

(assert (=> b!135580 (= e!88291 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 lt!69341))))))))

(declare-fun d!42393 () Bool)

(declare-fun c!25356 () Bool)

(assert (=> d!42393 (= c!25356 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69341))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69341)))) lt!69343)))))

(assert (=> d!42393 (= (getValueByKey!173 (t!6137 (toList!842 lt!69341)) lt!69343) e!88291)))

(declare-fun b!135583 () Bool)

(assert (=> b!135583 (= e!88292 None!177)))

(declare-fun b!135582 () Bool)

(assert (=> b!135582 (= e!88292 (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69341))) lt!69343))))

(assert (= (and d!42393 c!25356) b!135580))

(assert (= (and d!42393 (not c!25356)) b!135581))

(assert (= (and b!135581 c!25357) b!135582))

(assert (= (and b!135581 (not c!25357)) b!135583))

(declare-fun m!161839 () Bool)

(assert (=> b!135582 m!161839))

(assert (=> b!133280 d!42393))

(declare-fun d!42395 () Bool)

(declare-fun e!88294 () Bool)

(assert (=> d!42395 e!88294))

(declare-fun res!65105 () Bool)

(assert (=> d!42395 (=> res!65105 e!88294)))

(declare-fun lt!70892 () Bool)

(assert (=> d!42395 (= res!65105 (not lt!70892))))

(declare-fun lt!70893 () Bool)

(assert (=> d!42395 (= lt!70892 lt!70893)))

(declare-fun lt!70894 () Unit!4141)

(declare-fun e!88293 () Unit!4141)

(assert (=> d!42395 (= lt!70894 e!88293)))

(declare-fun c!25358 () Bool)

(assert (=> d!42395 (= c!25358 lt!70893)))

(assert (=> d!42395 (= lt!70893 (containsKey!176 (toList!842 lt!70084) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))

(assert (=> d!42395 (= (contains!884 lt!70084 (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))) lt!70892)))

(declare-fun b!135584 () Bool)

(declare-fun lt!70895 () Unit!4141)

(assert (=> b!135584 (= e!88293 lt!70895)))

(assert (=> b!135584 (= lt!70895 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70084) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))

(assert (=> b!135584 (isDefined!125 (getValueByKey!173 (toList!842 lt!70084) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))

(declare-fun b!135585 () Bool)

(declare-fun Unit!4259 () Unit!4141)

(assert (=> b!135585 (= e!88293 Unit!4259)))

(declare-fun b!135586 () Bool)

(assert (=> b!135586 (= e!88294 (isDefined!125 (getValueByKey!173 (toList!842 lt!70084) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))))))

(assert (= (and d!42395 c!25358) b!135584))

(assert (= (and d!42395 (not c!25358)) b!135585))

(assert (= (and d!42395 (not res!65105)) b!135586))

(declare-fun m!161841 () Bool)

(assert (=> d!42395 m!161841))

(declare-fun m!161843 () Bool)

(assert (=> b!135584 m!161843))

(assert (=> b!135584 m!158505))

(assert (=> b!135584 m!158505))

(declare-fun m!161845 () Bool)

(assert (=> b!135584 m!161845))

(assert (=> b!135586 m!158505))

(assert (=> b!135586 m!158505))

(assert (=> b!135586 m!161845))

(assert (=> d!40929 d!42395))

(declare-fun b!135588 () Bool)

(declare-fun e!88295 () Option!179)

(declare-fun e!88296 () Option!179)

(assert (=> b!135588 (= e!88295 e!88296)))

(declare-fun c!25360 () Bool)

(assert (=> b!135588 (= c!25360 (and ((_ is Cons!1690) lt!70085) (not (= (_1!1293 (h!2295 lt!70085)) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))))

(declare-fun b!135587 () Bool)

(assert (=> b!135587 (= e!88295 (Some!178 (_2!1293 (h!2295 lt!70085))))))

(declare-fun c!25359 () Bool)

(declare-fun d!42397 () Bool)

(assert (=> d!42397 (= c!25359 (and ((_ is Cons!1690) lt!70085) (= (_1!1293 (h!2295 lt!70085)) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))))))

(assert (=> d!42397 (= (getValueByKey!173 lt!70085 (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))) e!88295)))

(declare-fun b!135590 () Bool)

(assert (=> b!135590 (= e!88296 None!177)))

(declare-fun b!135589 () Bool)

(assert (=> b!135589 (= e!88296 (getValueByKey!173 (t!6137 lt!70085) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))

(assert (= (and d!42397 c!25359) b!135587))

(assert (= (and d!42397 (not c!25359)) b!135588))

(assert (= (and b!135588 c!25360) b!135589))

(assert (= (and b!135588 (not c!25360)) b!135590))

(declare-fun m!161847 () Bool)

(assert (=> b!135589 m!161847))

(assert (=> d!40929 d!42397))

(declare-fun d!42399 () Bool)

(assert (=> d!42399 (= (getValueByKey!173 lt!70085 (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))

(declare-fun lt!70896 () Unit!4141)

(assert (=> d!42399 (= lt!70896 (choose!833 lt!70085 (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))

(declare-fun e!88297 () Bool)

(assert (=> d!42399 e!88297))

(declare-fun res!65106 () Bool)

(assert (=> d!42399 (=> (not res!65106) (not e!88297))))

(assert (=> d!42399 (= res!65106 (isStrictlySorted!309 lt!70085))))

(assert (=> d!42399 (= (lemmaContainsTupThenGetReturnValue!88 lt!70085 (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))) lt!70896)))

(declare-fun b!135591 () Bool)

(declare-fun res!65107 () Bool)

(assert (=> b!135591 (=> (not res!65107) (not e!88297))))

(assert (=> b!135591 (= res!65107 (containsKey!176 lt!70085 (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))

(declare-fun b!135592 () Bool)

(assert (=> b!135592 (= e!88297 (contains!886 lt!70085 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))))))

(assert (= (and d!42399 res!65106) b!135591))

(assert (= (and b!135591 res!65107) b!135592))

(assert (=> d!42399 m!158499))

(declare-fun m!161849 () Bool)

(assert (=> d!42399 m!161849))

(declare-fun m!161851 () Bool)

(assert (=> d!42399 m!161851))

(declare-fun m!161853 () Bool)

(assert (=> b!135591 m!161853))

(declare-fun m!161855 () Bool)

(assert (=> b!135592 m!161855))

(assert (=> d!40929 d!42399))

(declare-fun b!135593 () Bool)

(declare-fun res!65108 () Bool)

(declare-fun e!88302 () Bool)

(assert (=> b!135593 (=> (not res!65108) (not e!88302))))

(declare-fun lt!70897 () List!1694)

(assert (=> b!135593 (= res!65108 (containsKey!176 lt!70897 (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))

(declare-fun b!135594 () Bool)

(declare-fun e!88300 () List!1694)

(declare-fun e!88301 () List!1694)

(assert (=> b!135594 (= e!88300 e!88301)))

(declare-fun c!25364 () Bool)

(assert (=> b!135594 (= c!25364 (and ((_ is Cons!1690) (toList!842 lt!69524)) (= (_1!1293 (h!2295 (toList!842 lt!69524))) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))))))

(declare-fun bm!14875 () Bool)

(declare-fun call!14879 () List!1694)

(declare-fun call!14878 () List!1694)

(assert (=> bm!14875 (= call!14879 call!14878)))

(declare-fun b!135595 () Bool)

(declare-fun e!88298 () List!1694)

(assert (=> b!135595 (= e!88298 call!14879)))

(declare-fun b!135596 () Bool)

(declare-fun c!25363 () Bool)

(assert (=> b!135596 (= c!25363 (and ((_ is Cons!1690) (toList!842 lt!69524)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69524))) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))))))

(assert (=> b!135596 (= e!88301 e!88298)))

(declare-fun b!135597 () Bool)

(assert (=> b!135597 (= e!88302 (contains!886 lt!70897 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))))))

(declare-fun b!135598 () Bool)

(assert (=> b!135598 (= e!88301 call!14878)))

(declare-fun d!42401 () Bool)

(assert (=> d!42401 e!88302))

(declare-fun res!65109 () Bool)

(assert (=> d!42401 (=> (not res!65109) (not e!88302))))

(assert (=> d!42401 (= res!65109 (isStrictlySorted!309 lt!70897))))

(assert (=> d!42401 (= lt!70897 e!88300)))

(declare-fun c!25362 () Bool)

(assert (=> d!42401 (= c!25362 (and ((_ is Cons!1690) (toList!842 lt!69524)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69524))) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))))))

(assert (=> d!42401 (isStrictlySorted!309 (toList!842 lt!69524))))

(assert (=> d!42401 (= (insertStrictlySorted!91 (toList!842 lt!69524) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))) lt!70897)))

(declare-fun e!88299 () List!1694)

(declare-fun b!135599 () Bool)

(assert (=> b!135599 (= e!88299 (ite c!25364 (t!6137 (toList!842 lt!69524)) (ite c!25363 (Cons!1690 (h!2295 (toList!842 lt!69524)) (t!6137 (toList!842 lt!69524))) Nil!1691)))))

(declare-fun b!135600 () Bool)

(declare-fun call!14880 () List!1694)

(assert (=> b!135600 (= e!88300 call!14880)))

(declare-fun b!135601 () Bool)

(assert (=> b!135601 (= e!88298 call!14879)))

(declare-fun b!135602 () Bool)

(assert (=> b!135602 (= e!88299 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69524)) (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))

(declare-fun bm!14876 () Bool)

(assert (=> bm!14876 (= call!14878 call!14880)))

(declare-fun bm!14877 () Bool)

(assert (=> bm!14877 (= call!14880 ($colon$colon!91 e!88299 (ite c!25362 (h!2295 (toList!842 lt!69524)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))))))

(declare-fun c!25361 () Bool)

(assert (=> bm!14877 (= c!25361 c!25362)))

(assert (= (and d!42401 c!25362) b!135600))

(assert (= (and d!42401 (not c!25362)) b!135594))

(assert (= (and b!135594 c!25364) b!135598))

(assert (= (and b!135594 (not c!25364)) b!135596))

(assert (= (and b!135596 c!25363) b!135601))

(assert (= (and b!135596 (not c!25363)) b!135595))

(assert (= (or b!135601 b!135595) bm!14875))

(assert (= (or b!135598 bm!14875) bm!14876))

(assert (= (or b!135600 bm!14876) bm!14877))

(assert (= (and bm!14877 c!25361) b!135602))

(assert (= (and bm!14877 (not c!25361)) b!135599))

(assert (= (and d!42401 res!65109) b!135593))

(assert (= (and b!135593 res!65108) b!135597))

(declare-fun m!161857 () Bool)

(assert (=> b!135597 m!161857))

(declare-fun m!161859 () Bool)

(assert (=> b!135602 m!161859))

(declare-fun m!161861 () Bool)

(assert (=> bm!14877 m!161861))

(declare-fun m!161863 () Bool)

(assert (=> b!135593 m!161863))

(declare-fun m!161865 () Bool)

(assert (=> d!42401 m!161865))

(declare-fun m!161867 () Bool)

(assert (=> d!42401 m!161867))

(assert (=> d!40929 d!42401))

(assert (=> d!40619 d!42005))

(declare-fun b!135604 () Bool)

(declare-fun e!88303 () Option!179)

(declare-fun e!88304 () Option!179)

(assert (=> b!135604 (= e!88303 e!88304)))

(declare-fun c!25366 () Bool)

(assert (=> b!135604 (= c!25366 (and ((_ is Cons!1690) (toList!842 lt!70001)) (not (= (_1!1293 (h!2295 (toList!842 lt!70001))) (_1!1293 (tuple2!2565 lt!69484 lt!69485))))))))

(declare-fun b!135603 () Bool)

(assert (=> b!135603 (= e!88303 (Some!178 (_2!1293 (h!2295 (toList!842 lt!70001)))))))

(declare-fun c!25365 () Bool)

(declare-fun d!42403 () Bool)

(assert (=> d!42403 (= c!25365 (and ((_ is Cons!1690) (toList!842 lt!70001)) (= (_1!1293 (h!2295 (toList!842 lt!70001))) (_1!1293 (tuple2!2565 lt!69484 lt!69485)))))))

(assert (=> d!42403 (= (getValueByKey!173 (toList!842 lt!70001) (_1!1293 (tuple2!2565 lt!69484 lt!69485))) e!88303)))

(declare-fun b!135606 () Bool)

(assert (=> b!135606 (= e!88304 None!177)))

(declare-fun b!135605 () Bool)

(assert (=> b!135605 (= e!88304 (getValueByKey!173 (t!6137 (toList!842 lt!70001)) (_1!1293 (tuple2!2565 lt!69484 lt!69485))))))

(assert (= (and d!42403 c!25365) b!135603))

(assert (= (and d!42403 (not c!25365)) b!135604))

(assert (= (and b!135604 c!25366) b!135605))

(assert (= (and b!135604 (not c!25366)) b!135606))

(declare-fun m!161869 () Bool)

(assert (=> b!135605 m!161869))

(assert (=> b!133794 d!42403))

(declare-fun b!135608 () Bool)

(declare-fun e!88305 () Option!179)

(declare-fun e!88306 () Option!179)

(assert (=> b!135608 (= e!88305 e!88306)))

(declare-fun c!25368 () Bool)

(assert (=> b!135608 (= c!25368 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69339))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69339)))) lt!69345))))))

(declare-fun b!135607 () Bool)

(assert (=> b!135607 (= e!88305 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 lt!69339))))))))

(declare-fun d!42405 () Bool)

(declare-fun c!25367 () Bool)

(assert (=> d!42405 (= c!25367 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69339))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69339)))) lt!69345)))))

(assert (=> d!42405 (= (getValueByKey!173 (t!6137 (toList!842 lt!69339)) lt!69345) e!88305)))

(declare-fun b!135610 () Bool)

(assert (=> b!135610 (= e!88306 None!177)))

(declare-fun b!135609 () Bool)

(assert (=> b!135609 (= e!88306 (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69339))) lt!69345))))

(assert (= (and d!42405 c!25367) b!135607))

(assert (= (and d!42405 (not c!25367)) b!135608))

(assert (= (and b!135608 c!25368) b!135609))

(assert (= (and b!135608 (not c!25368)) b!135610))

(declare-fun m!161871 () Bool)

(assert (=> b!135609 m!161871))

(assert (=> b!134074 d!42405))

(assert (=> b!133822 d!40621))

(declare-fun d!42407 () Bool)

(declare-fun c!25371 () Bool)

(assert (=> d!42407 (= c!25371 ((_ is Nil!1690) (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)))))

(declare-fun e!88309 () (InoxSet (_ BitVec 64)))

(assert (=> d!42407 (= (content!133 (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) e!88309)))

(declare-fun b!135615 () Bool)

(assert (=> b!135615 (= e!88309 ((as const (Array (_ BitVec 64) Bool)) false))))

(declare-fun b!135616 () Bool)

(assert (=> b!135616 (= e!88309 ((_ map or) (store ((as const (Array (_ BitVec 64) Bool)) false) (h!2294 (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)) true) (content!133 (t!6136 (ite c!24517 (Cons!1689 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) Nil!1690) Nil!1690)))))))

(assert (= (and d!42407 c!25371) b!135615))

(assert (= (and d!42407 (not c!25371)) b!135616))

(declare-fun m!161873 () Bool)

(assert (=> b!135616 m!161873))

(assert (=> b!135616 m!161273))

(assert (=> d!40651 d!42407))

(declare-fun d!42409 () Bool)

(assert (=> d!42409 (= (apply!116 lt!70012 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1492 (getValueByKey!173 (toList!842 lt!70012) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5707 () Bool)

(assert (= bs!5707 d!42409))

(assert (=> bs!5707 m!156679))

(assert (=> bs!5707 m!160607))

(assert (=> bs!5707 m!160607))

(declare-fun m!161875 () Bool)

(assert (=> bs!5707 m!161875))

(assert (=> b!133803 d!42409))

(assert (=> b!133803 d!41055))

(assert (=> b!133254 d!40621))

(declare-fun d!42411 () Bool)

(assert (=> d!42411 (= ($colon$colon!91 e!87145 (ite c!24816 (h!2295 (toList!842 call!14604)) (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) (Cons!1690 (ite c!24816 (h!2295 (toList!842 call!14604)) (tuple2!2565 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!87145))))

(assert (=> bm!14755 d!42411))

(declare-fun d!42413 () Bool)

(declare-fun e!88311 () Bool)

(assert (=> d!42413 e!88311))

(declare-fun res!65110 () Bool)

(assert (=> d!42413 (=> res!65110 e!88311)))

(declare-fun lt!70898 () Bool)

(assert (=> d!42413 (= res!65110 (not lt!70898))))

(declare-fun lt!70899 () Bool)

(assert (=> d!42413 (= lt!70898 lt!70899)))

(declare-fun lt!70900 () Unit!4141)

(declare-fun e!88310 () Unit!4141)

(assert (=> d!42413 (= lt!70900 e!88310)))

(declare-fun c!25372 () Bool)

(assert (=> d!42413 (= c!25372 lt!70899)))

(assert (=> d!42413 (= lt!70899 (containsKey!176 (toList!842 lt!70076) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))

(assert (=> d!42413 (= (contains!884 lt!70076 (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))) lt!70898)))

(declare-fun b!135617 () Bool)

(declare-fun lt!70901 () Unit!4141)

(assert (=> b!135617 (= e!88310 lt!70901)))

(assert (=> b!135617 (= lt!70901 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70076) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))

(assert (=> b!135617 (isDefined!125 (getValueByKey!173 (toList!842 lt!70076) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))

(declare-fun b!135618 () Bool)

(declare-fun Unit!4260 () Unit!4141)

(assert (=> b!135618 (= e!88310 Unit!4260)))

(declare-fun b!135619 () Bool)

(assert (=> b!135619 (= e!88311 (isDefined!125 (getValueByKey!173 (toList!842 lt!70076) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))))))

(assert (= (and d!42413 c!25372) b!135617))

(assert (= (and d!42413 (not c!25372)) b!135618))

(assert (= (and d!42413 (not res!65110)) b!135619))

(declare-fun m!161877 () Bool)

(assert (=> d!42413 m!161877))

(declare-fun m!161879 () Bool)

(assert (=> b!135617 m!161879))

(assert (=> b!135617 m!158469))

(assert (=> b!135617 m!158469))

(declare-fun m!161881 () Bool)

(assert (=> b!135617 m!161881))

(assert (=> b!135619 m!158469))

(assert (=> b!135619 m!158469))

(assert (=> b!135619 m!161881))

(assert (=> d!40919 d!42413))

(declare-fun b!135621 () Bool)

(declare-fun e!88312 () Option!179)

(declare-fun e!88313 () Option!179)

(assert (=> b!135621 (= e!88312 e!88313)))

(declare-fun c!25374 () Bool)

(assert (=> b!135621 (= c!25374 (and ((_ is Cons!1690) lt!70077) (not (= (_1!1293 (h!2295 lt!70077)) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))))

(declare-fun b!135620 () Bool)

(assert (=> b!135620 (= e!88312 (Some!178 (_2!1293 (h!2295 lt!70077))))))

(declare-fun d!42415 () Bool)

(declare-fun c!25373 () Bool)

(assert (=> d!42415 (= c!25373 (and ((_ is Cons!1690) lt!70077) (= (_1!1293 (h!2295 lt!70077)) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))))))

(assert (=> d!42415 (= (getValueByKey!173 lt!70077 (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))) e!88312)))

(declare-fun b!135623 () Bool)

(assert (=> b!135623 (= e!88313 None!177)))

(declare-fun b!135622 () Bool)

(assert (=> b!135622 (= e!88313 (getValueByKey!173 (t!6137 lt!70077) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))

(assert (= (and d!42415 c!25373) b!135620))

(assert (= (and d!42415 (not c!25373)) b!135621))

(assert (= (and b!135621 c!25374) b!135622))

(assert (= (and b!135621 (not c!25374)) b!135623))

(declare-fun m!161883 () Bool)

(assert (=> b!135622 m!161883))

(assert (=> d!40919 d!42415))

(declare-fun d!42417 () Bool)

(assert (=> d!42417 (= (getValueByKey!173 lt!70077 (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))

(declare-fun lt!70902 () Unit!4141)

(assert (=> d!42417 (= lt!70902 (choose!833 lt!70077 (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))

(declare-fun e!88314 () Bool)

(assert (=> d!42417 e!88314))

(declare-fun res!65111 () Bool)

(assert (=> d!42417 (=> (not res!65111) (not e!88314))))

(assert (=> d!42417 (= res!65111 (isStrictlySorted!309 lt!70077))))

(assert (=> d!42417 (= (lemmaContainsTupThenGetReturnValue!88 lt!70077 (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))) lt!70902)))

(declare-fun b!135624 () Bool)

(declare-fun res!65112 () Bool)

(assert (=> b!135624 (=> (not res!65112) (not e!88314))))

(assert (=> b!135624 (= res!65112 (containsKey!176 lt!70077 (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))

(declare-fun b!135625 () Bool)

(assert (=> b!135625 (= e!88314 (contains!886 lt!70077 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))))))

(assert (= (and d!42417 res!65111) b!135624))

(assert (= (and b!135624 res!65112) b!135625))

(assert (=> d!42417 m!158463))

(declare-fun m!161885 () Bool)

(assert (=> d!42417 m!161885))

(declare-fun m!161887 () Bool)

(assert (=> d!42417 m!161887))

(declare-fun m!161889 () Bool)

(assert (=> b!135624 m!161889))

(declare-fun m!161891 () Bool)

(assert (=> b!135625 m!161891))

(assert (=> d!40919 d!42417))

(declare-fun b!135626 () Bool)

(declare-fun res!65113 () Bool)

(declare-fun e!88319 () Bool)

(assert (=> b!135626 (=> (not res!65113) (not e!88319))))

(declare-fun lt!70903 () List!1694)

(assert (=> b!135626 (= res!65113 (containsKey!176 lt!70903 (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))

(declare-fun b!135627 () Bool)

(declare-fun e!88317 () List!1694)

(declare-fun e!88318 () List!1694)

(assert (=> b!135627 (= e!88317 e!88318)))

(declare-fun c!25378 () Bool)

(assert (=> b!135627 (= c!25378 (and ((_ is Cons!1690) (toList!842 lt!69526)) (= (_1!1293 (h!2295 (toList!842 lt!69526))) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))))))

(declare-fun bm!14878 () Bool)

(declare-fun call!14882 () List!1694)

(declare-fun call!14881 () List!1694)

(assert (=> bm!14878 (= call!14882 call!14881)))

(declare-fun b!135628 () Bool)

(declare-fun e!88315 () List!1694)

(assert (=> b!135628 (= e!88315 call!14882)))

(declare-fun c!25377 () Bool)

(declare-fun b!135629 () Bool)

(assert (=> b!135629 (= c!25377 (and ((_ is Cons!1690) (toList!842 lt!69526)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69526))) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))))))

(assert (=> b!135629 (= e!88318 e!88315)))

(declare-fun b!135630 () Bool)

(assert (=> b!135630 (= e!88319 (contains!886 lt!70903 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))))))

(declare-fun b!135631 () Bool)

(assert (=> b!135631 (= e!88318 call!14881)))

(declare-fun d!42419 () Bool)

(assert (=> d!42419 e!88319))

(declare-fun res!65114 () Bool)

(assert (=> d!42419 (=> (not res!65114) (not e!88319))))

(assert (=> d!42419 (= res!65114 (isStrictlySorted!309 lt!70903))))

(assert (=> d!42419 (= lt!70903 e!88317)))

(declare-fun c!25376 () Bool)

(assert (=> d!42419 (= c!25376 (and ((_ is Cons!1690) (toList!842 lt!69526)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69526))) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))))))))

(assert (=> d!42419 (isStrictlySorted!309 (toList!842 lt!69526))))

(assert (=> d!42419 (= (insertStrictlySorted!91 (toList!842 lt!69526) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))) lt!70903)))

(declare-fun b!135632 () Bool)

(declare-fun e!88316 () List!1694)

(assert (=> b!135632 (= e!88316 (ite c!25378 (t!6137 (toList!842 lt!69526)) (ite c!25377 (Cons!1690 (h!2295 (toList!842 lt!69526)) (t!6137 (toList!842 lt!69526))) Nil!1691)))))

(declare-fun b!135633 () Bool)

(declare-fun call!14883 () List!1694)

(assert (=> b!135633 (= e!88317 call!14883)))

(declare-fun b!135634 () Bool)

(assert (=> b!135634 (= e!88315 call!14882)))

(declare-fun b!135635 () Bool)

(assert (=> b!135635 (= e!88316 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69526)) (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))

(declare-fun bm!14879 () Bool)

(assert (=> bm!14879 (= call!14881 call!14883)))

(declare-fun bm!14880 () Bool)

(assert (=> bm!14880 (= call!14883 ($colon$colon!91 e!88316 (ite c!25376 (h!2295 (toList!842 lt!69526)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69518 (minValue!2719 newMap!16)))))))))

(declare-fun c!25375 () Bool)

(assert (=> bm!14880 (= c!25375 c!25376)))

(assert (= (and d!42419 c!25376) b!135633))

(assert (= (and d!42419 (not c!25376)) b!135627))

(assert (= (and b!135627 c!25378) b!135631))

(assert (= (and b!135627 (not c!25378)) b!135629))

(assert (= (and b!135629 c!25377) b!135634))

(assert (= (and b!135629 (not c!25377)) b!135628))

(assert (= (or b!135634 b!135628) bm!14878))

(assert (= (or b!135631 bm!14878) bm!14879))

(assert (= (or b!135633 bm!14879) bm!14880))

(assert (= (and bm!14880 c!25375) b!135635))

(assert (= (and bm!14880 (not c!25375)) b!135632))

(assert (= (and d!42419 res!65114) b!135626))

(assert (= (and b!135626 res!65113) b!135630))

(declare-fun m!161893 () Bool)

(assert (=> b!135630 m!161893))

(declare-fun m!161895 () Bool)

(assert (=> b!135635 m!161895))

(declare-fun m!161897 () Bool)

(assert (=> bm!14880 m!161897))

(declare-fun m!161899 () Bool)

(assert (=> b!135626 m!161899))

(declare-fun m!161901 () Bool)

(assert (=> d!42419 m!161901))

(declare-fun m!161903 () Bool)

(assert (=> d!42419 m!161903))

(assert (=> d!40919 d!42419))

(assert (=> b!133717 d!41353))

(assert (=> b!133717 d!40871))

(declare-fun d!42421 () Bool)

(declare-fun res!65115 () Bool)

(declare-fun e!88320 () Bool)

(assert (=> d!42421 (=> res!65115 e!88320)))

(assert (=> d!42421 (= res!65115 (and ((_ is Cons!1690) (toList!842 lt!69353)) (= (_1!1293 (h!2295 (toList!842 lt!69353))) lt!69338)))))

(assert (=> d!42421 (= (containsKey!176 (toList!842 lt!69353) lt!69338) e!88320)))

(declare-fun b!135636 () Bool)

(declare-fun e!88321 () Bool)

(assert (=> b!135636 (= e!88320 e!88321)))

(declare-fun res!65116 () Bool)

(assert (=> b!135636 (=> (not res!65116) (not e!88321))))

(assert (=> b!135636 (= res!65116 (and (or (not ((_ is Cons!1690) (toList!842 lt!69353))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69353))) lt!69338)) ((_ is Cons!1690) (toList!842 lt!69353)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69353))) lt!69338)))))

(declare-fun b!135637 () Bool)

(assert (=> b!135637 (= e!88321 (containsKey!176 (t!6137 (toList!842 lt!69353)) lt!69338))))

(assert (= (and d!42421 (not res!65115)) b!135636))

(assert (= (and b!135636 res!65116) b!135637))

(declare-fun m!161905 () Bool)

(assert (=> b!135637 m!161905))

(assert (=> d!40981 d!42421))

(declare-fun d!42423 () Bool)

(assert (=> d!42423 (= (get!1492 (getValueByKey!173 (toList!842 lt!69586) lt!69571)) (v!3203 (getValueByKey!173 (toList!842 lt!69586) lt!69571)))))

(assert (=> d!41027 d!42423))

(declare-fun b!135639 () Bool)

(declare-fun e!88322 () Option!179)

(declare-fun e!88323 () Option!179)

(assert (=> b!135639 (= e!88322 e!88323)))

(declare-fun c!25380 () Bool)

(assert (=> b!135639 (= c!25380 (and ((_ is Cons!1690) (toList!842 lt!69586)) (not (= (_1!1293 (h!2295 (toList!842 lt!69586))) lt!69571))))))

(declare-fun b!135638 () Bool)

(assert (=> b!135638 (= e!88322 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69586)))))))

(declare-fun d!42425 () Bool)

(declare-fun c!25379 () Bool)

(assert (=> d!42425 (= c!25379 (and ((_ is Cons!1690) (toList!842 lt!69586)) (= (_1!1293 (h!2295 (toList!842 lt!69586))) lt!69571)))))

(assert (=> d!42425 (= (getValueByKey!173 (toList!842 lt!69586) lt!69571) e!88322)))

(declare-fun b!135641 () Bool)

(assert (=> b!135641 (= e!88323 None!177)))

(declare-fun b!135640 () Bool)

(assert (=> b!135640 (= e!88323 (getValueByKey!173 (t!6137 (toList!842 lt!69586)) lt!69571))))

(assert (= (and d!42425 c!25379) b!135638))

(assert (= (and d!42425 (not c!25379)) b!135639))

(assert (= (and b!135639 c!25380) b!135640))

(assert (= (and b!135639 (not c!25380)) b!135641))

(declare-fun m!161907 () Bool)

(assert (=> b!135640 m!161907))

(assert (=> d!41027 d!42425))

(assert (=> b!133567 d!41507))

(assert (=> b!133567 d!40599))

(declare-fun d!42427 () Bool)

(declare-fun lt!70904 () Bool)

(assert (=> d!42427 (= lt!70904 (select (content!134 (toList!842 lt!70047)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun e!88325 () Bool)

(assert (=> d!42427 (= lt!70904 e!88325)))

(declare-fun res!65118 () Bool)

(assert (=> d!42427 (=> (not res!65118) (not e!88325))))

(assert (=> d!42427 (= res!65118 ((_ is Cons!1690) (toList!842 lt!70047)))))

(assert (=> d!42427 (= (contains!886 (toList!842 lt!70047) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))) lt!70904)))

(declare-fun b!135642 () Bool)

(declare-fun e!88324 () Bool)

(assert (=> b!135642 (= e!88325 e!88324)))

(declare-fun res!65117 () Bool)

(assert (=> b!135642 (=> res!65117 e!88324)))

(assert (=> b!135642 (= res!65117 (= (h!2295 (toList!842 lt!70047)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(declare-fun b!135643 () Bool)

(assert (=> b!135643 (= e!88324 (contains!886 (t!6137 (toList!842 lt!70047)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 newMap!16))))))

(assert (= (and d!42427 res!65118) b!135642))

(assert (= (and b!135642 (not res!65117)) b!135643))

(declare-fun m!161909 () Bool)

(assert (=> d!42427 m!161909))

(declare-fun m!161911 () Bool)

(assert (=> d!42427 m!161911))

(declare-fun m!161913 () Bool)

(assert (=> b!135643 m!161913))

(assert (=> b!133847 d!42427))

(declare-fun d!42429 () Bool)

(declare-fun e!88327 () Bool)

(assert (=> d!42429 e!88327))

(declare-fun res!65119 () Bool)

(assert (=> d!42429 (=> res!65119 e!88327)))

(declare-fun lt!70905 () Bool)

(assert (=> d!42429 (= res!65119 (not lt!70905))))

(declare-fun lt!70906 () Bool)

(assert (=> d!42429 (= lt!70905 lt!70906)))

(declare-fun lt!70907 () Unit!4141)

(declare-fun e!88326 () Unit!4141)

(assert (=> d!42429 (= lt!70907 e!88326)))

(declare-fun c!25381 () Bool)

(assert (=> d!42429 (= c!25381 lt!70906)))

(assert (=> d!42429 (= lt!70906 (containsKey!176 (toList!842 lt!69694) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!42429 (= (contains!884 lt!69694 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!70905)))

(declare-fun b!135644 () Bool)

(declare-fun lt!70908 () Unit!4141)

(assert (=> b!135644 (= e!88326 lt!70908)))

(assert (=> b!135644 (= lt!70908 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69694) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!135644 (isDefined!125 (getValueByKey!173 (toList!842 lt!69694) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!135645 () Bool)

(declare-fun Unit!4261 () Unit!4141)

(assert (=> b!135645 (= e!88326 Unit!4261)))

(declare-fun b!135646 () Bool)

(assert (=> b!135646 (= e!88327 (isDefined!125 (getValueByKey!173 (toList!842 lt!69694) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!42429 c!25381) b!135644))

(assert (= (and d!42429 (not c!25381)) b!135645))

(assert (= (and d!42429 (not res!65119)) b!135646))

(assert (=> d!42429 m!157309))

(declare-fun m!161915 () Bool)

(assert (=> d!42429 m!161915))

(assert (=> b!135644 m!157309))

(declare-fun m!161917 () Bool)

(assert (=> b!135644 m!161917))

(assert (=> b!135644 m!157309))

(assert (=> b!135644 m!160415))

(assert (=> b!135644 m!160415))

(declare-fun m!161919 () Bool)

(assert (=> b!135644 m!161919))

(assert (=> b!135646 m!157309))

(assert (=> b!135646 m!160415))

(assert (=> b!135646 m!160415))

(assert (=> b!135646 m!161919))

(assert (=> b!133271 d!42429))

(declare-fun d!42431 () Bool)

(declare-fun lt!70909 () Bool)

(assert (=> d!42431 (= lt!70909 (select (content!134 lt!69650) (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun e!88329 () Bool)

(assert (=> d!42431 (= lt!70909 e!88329)))

(declare-fun res!65121 () Bool)

(assert (=> d!42431 (=> (not res!65121) (not e!88329))))

(assert (=> d!42431 (= res!65121 ((_ is Cons!1690) lt!69650))))

(assert (=> d!42431 (= (contains!886 lt!69650 (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!70909)))

(declare-fun b!135647 () Bool)

(declare-fun e!88328 () Bool)

(assert (=> b!135647 (= e!88329 e!88328)))

(declare-fun res!65120 () Bool)

(assert (=> b!135647 (=> res!65120 e!88328)))

(assert (=> b!135647 (= res!65120 (= (h!2295 lt!69650) (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!135648 () Bool)

(assert (=> b!135648 (= e!88328 (contains!886 (t!6137 lt!69650) (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!42431 res!65121) b!135647))

(assert (= (and b!135647 (not res!65120)) b!135648))

(declare-fun m!161921 () Bool)

(assert (=> d!42431 m!161921))

(declare-fun m!161923 () Bool)

(assert (=> d!42431 m!161923))

(declare-fun m!161925 () Bool)

(assert (=> b!135648 m!161925))

(assert (=> b!133923 d!42431))

(declare-fun b!135649 () Bool)

(declare-fun lt!70910 () SeekEntryResult!269)

(assert (=> b!135649 (and (bvsge (index!3238 lt!70910) #b00000000000000000000000000000000) (bvslt (index!3238 lt!70910) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun e!88330 () Bool)

(assert (=> b!135649 (= e!88330 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!70910)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135650 () Bool)

(declare-fun e!88331 () SeekEntryResult!269)

(assert (=> b!135650 (= e!88331 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (nextIndex!0 (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!135651 () Bool)

(declare-fun e!88332 () SeekEntryResult!269)

(assert (=> b!135651 (= e!88332 (Intermediate!269 true (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!135652 () Bool)

(assert (=> b!135652 (= e!88331 (Intermediate!269 false (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun b!135653 () Bool)

(assert (=> b!135653 (= e!88332 e!88331)))

(declare-fun c!25384 () Bool)

(declare-fun lt!70911 () (_ BitVec 64))

(assert (=> b!135653 (= c!25384 (or (= lt!70911 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)) (= (bvadd lt!70911 lt!70911) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135655 () Bool)

(assert (=> b!135655 (and (bvsge (index!3238 lt!70910) #b00000000000000000000000000000000) (bvslt (index!3238 lt!70910) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun res!65122 () Bool)

(assert (=> b!135655 (= res!65122 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!70910)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> b!135655 (=> res!65122 e!88330)))

(declare-fun e!88333 () Bool)

(assert (=> b!135655 (= e!88333 e!88330)))

(declare-fun b!135656 () Bool)

(declare-fun e!88334 () Bool)

(assert (=> b!135656 (= e!88334 e!88333)))

(declare-fun res!65124 () Bool)

(assert (=> b!135656 (= res!65124 (and ((_ is Intermediate!269) lt!70910) (not (undefined!1081 lt!70910)) (bvslt (x!15586 lt!70910) #b01111111111111111111111111111110) (bvsge (x!15586 lt!70910) #b00000000000000000000000000000000) (bvsge (x!15586 lt!70910) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!135656 (=> (not res!65124) (not e!88333))))

(declare-fun b!135657 () Bool)

(assert (=> b!135657 (and (bvsge (index!3238 lt!70910) #b00000000000000000000000000000000) (bvslt (index!3238 lt!70910) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun res!65123 () Bool)

(assert (=> b!135657 (= res!65123 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!70910)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135657 (=> res!65123 e!88330)))

(declare-fun d!42433 () Bool)

(assert (=> d!42433 e!88334))

(declare-fun c!25382 () Bool)

(assert (=> d!42433 (= c!25382 (and ((_ is Intermediate!269) lt!70910) (undefined!1081 lt!70910)))))

(assert (=> d!42433 (= lt!70910 e!88332)))

(declare-fun c!25383 () Bool)

(assert (=> d!42433 (= c!25383 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b01111111111111111111111111111110))))

(assert (=> d!42433 (= lt!70911 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992))))))))

(assert (=> d!42433 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!42433 (= (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) lt!70910)))

(declare-fun b!135654 () Bool)

(assert (=> b!135654 (= e!88334 (bvsge (x!15586 lt!70910) #b01111111111111111111111111111110))))

(assert (= (and d!42433 c!25383) b!135651))

(assert (= (and d!42433 (not c!25383)) b!135653))

(assert (= (and b!135653 c!25384) b!135652))

(assert (= (and b!135653 (not c!25384)) b!135650))

(assert (= (and d!42433 c!25382) b!135654))

(assert (= (and d!42433 (not c!25382)) b!135656))

(assert (= (and b!135656 res!65124) b!135655))

(assert (= (and b!135655 (not res!65122)) b!135657))

(assert (= (and b!135657 (not res!65123)) b!135649))

(declare-fun m!161927 () Bool)

(assert (=> b!135649 m!161927))

(assert (=> d!42433 m!157735))

(declare-fun m!161929 () Bool)

(assert (=> d!42433 m!161929))

(assert (=> d!42433 m!156405))

(assert (=> b!135657 m!161927))

(assert (=> b!135650 m!157735))

(declare-fun m!161931 () Bool)

(assert (=> b!135650 m!161931))

(assert (=> b!135650 m!161931))

(assert (=> b!135650 m!156495))

(declare-fun m!161933 () Bool)

(assert (=> b!135650 m!161933))

(assert (=> b!135655 m!161927))

(assert (=> b!133530 d!42433))

(declare-fun d!42435 () Bool)

(declare-fun lt!70912 () (_ BitVec 32))

(assert (=> d!42435 (and (bvsge lt!70912 #b00000000000000000000000000000000) (bvslt lt!70912 (bvadd (mask!7164 (v!3198 (underlying!454 thiss!992))) #b00000000000000000000000000000001)))))

(assert (=> d!42435 (= lt!70912 (choose!52 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(assert (=> d!42435 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!42435 (= (nextIndex!0 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!7164 (v!3198 (underlying!454 thiss!992)))) lt!70912)))

(declare-fun bs!5708 () Bool)

(assert (= bs!5708 d!42435))

(assert (=> bs!5708 m!157027))

(declare-fun m!161935 () Bool)

(assert (=> bs!5708 m!161935))

(assert (=> bs!5708 m!156405))

(assert (=> b!133530 d!42435))

(assert (=> b!133428 d!41569))

(declare-fun d!42437 () Bool)

(assert (=> d!42437 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) lt!69567))))

(declare-fun lt!70913 () Unit!4141)

(assert (=> d!42437 (= lt!70913 (choose!831 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) lt!69567))))

(declare-fun e!88335 () Bool)

(assert (=> d!42437 e!88335))

(declare-fun res!65125 () Bool)

(assert (=> d!42437 (=> (not res!65125) (not e!88335))))

(assert (=> d!42437 (= res!65125 (isStrictlySorted!309 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))))))

(assert (=> d!42437 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) lt!69567) lt!70913)))

(declare-fun b!135658 () Bool)

(assert (=> b!135658 (= e!88335 (containsKey!176 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) lt!69567))))

(assert (= (and d!42437 res!65125) b!135658))

(assert (=> d!42437 m!158785))

(assert (=> d!42437 m!158785))

(assert (=> d!42437 m!158787))

(declare-fun m!161937 () Bool)

(assert (=> d!42437 m!161937))

(declare-fun m!161939 () Bool)

(assert (=> d!42437 m!161939))

(assert (=> b!135658 m!158781))

(assert (=> b!134023 d!42437))

(declare-fun d!42439 () Bool)

(assert (=> d!42439 (= (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) lt!69567)) (not (isEmpty!416 (getValueByKey!173 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) lt!69567))))))

(declare-fun bs!5709 () Bool)

(assert (= bs!5709 d!42439))

(assert (=> bs!5709 m!158785))

(declare-fun m!161941 () Bool)

(assert (=> bs!5709 m!161941))

(assert (=> b!134023 d!42439))

(declare-fun b!135660 () Bool)

(declare-fun e!88336 () Option!179)

(declare-fun e!88337 () Option!179)

(assert (=> b!135660 (= e!88336 e!88337)))

(declare-fun c!25386 () Bool)

(assert (=> b!135660 (= c!25386 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))) lt!69567))))))

(declare-fun b!135659 () Bool)

(assert (=> b!135659 (= e!88336 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))))))))

(declare-fun d!42441 () Bool)

(declare-fun c!25385 () Bool)

(assert (=> d!42441 (= c!25385 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))) lt!69567)))))

(assert (=> d!42441 (= (getValueByKey!173 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) lt!69567) e!88336)))

(declare-fun b!135662 () Bool)

(assert (=> b!135662 (= e!88337 None!177)))

(declare-fun b!135661 () Bool)

(assert (=> b!135661 (= e!88337 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69568 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))) lt!69567))))

(assert (= (and d!42441 c!25385) b!135659))

(assert (= (and d!42441 (not c!25385)) b!135660))

(assert (= (and b!135660 c!25386) b!135661))

(assert (= (and b!135660 (not c!25386)) b!135662))

(declare-fun m!161943 () Bool)

(assert (=> b!135661 m!161943))

(assert (=> b!134023 d!42441))

(declare-fun d!42443 () Bool)

(declare-fun lt!70914 () Bool)

(assert (=> d!42443 (= lt!70914 (select (content!134 lt!69640) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun e!88339 () Bool)

(assert (=> d!42443 (= lt!70914 e!88339)))

(declare-fun res!65127 () Bool)

(assert (=> d!42443 (=> (not res!65127) (not e!88339))))

(assert (=> d!42443 (= res!65127 ((_ is Cons!1690) lt!69640))))

(assert (=> d!42443 (= (contains!886 lt!69640 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!70914)))

(declare-fun b!135663 () Bool)

(declare-fun e!88338 () Bool)

(assert (=> b!135663 (= e!88339 e!88338)))

(declare-fun res!65126 () Bool)

(assert (=> b!135663 (=> res!65126 e!88338)))

(assert (=> b!135663 (= res!65126 (= (h!2295 lt!69640) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!135664 () Bool)

(assert (=> b!135664 (= e!88338 (contains!886 (t!6137 lt!69640) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!42443 res!65127) b!135663))

(assert (= (and b!135663 (not res!65126)) b!135664))

(declare-fun m!161945 () Bool)

(assert (=> d!42443 m!161945))

(declare-fun m!161947 () Bool)

(assert (=> d!42443 m!161947))

(declare-fun m!161949 () Bool)

(assert (=> b!135664 m!161949))

(assert (=> b!133627 d!42443))

(declare-fun d!42445 () Bool)

(assert (=> d!42445 (= (isEmpty!416 (getValueByKey!173 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334)) (not ((_ is Some!178) (getValueByKey!173 (toList!842 (+!169 lt!69335 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!69334))))))

(assert (=> d!40635 d!42445))

(declare-fun d!42447 () Bool)

(declare-fun res!65128 () Bool)

(declare-fun e!88340 () Bool)

(assert (=> d!42447 (=> res!65128 e!88340)))

(assert (=> d!42447 (= res!65128 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(assert (=> d!42447 (= (containsKey!176 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))) e!88340)))

(declare-fun b!135665 () Bool)

(declare-fun e!88341 () Bool)

(assert (=> b!135665 (= e!88340 e!88341)))

(declare-fun res!65129 () Bool)

(assert (=> b!135665 (=> (not res!65129) (not e!88341))))

(assert (=> b!135665 (= res!65129 (and (or (not ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (bvsle (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))) ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvslt (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))

(declare-fun b!135666 () Bool)

(assert (=> b!135666 (= e!88341 (containsKey!176 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) lt!69268 (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))))

(assert (= (and d!42447 (not res!65128)) b!135665))

(assert (= (and b!135665 res!65129) b!135666))

(assert (=> b!135666 m!156557))

(declare-fun m!161951 () Bool)

(assert (=> b!135666 m!161951))

(assert (=> d!40813 d!42447))

(declare-fun lt!70915 () Bool)

(declare-fun d!42449 () Bool)

(assert (=> d!42449 (= lt!70915 (select (content!134 lt!69626) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun e!88343 () Bool)

(assert (=> d!42449 (= lt!70915 e!88343)))

(declare-fun res!65131 () Bool)

(assert (=> d!42449 (=> (not res!65131) (not e!88343))))

(assert (=> d!42449 (= res!65131 ((_ is Cons!1690) lt!69626))))

(assert (=> d!42449 (= (contains!886 lt!69626 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!70915)))

(declare-fun b!135667 () Bool)

(declare-fun e!88342 () Bool)

(assert (=> b!135667 (= e!88343 e!88342)))

(declare-fun res!65130 () Bool)

(assert (=> b!135667 (=> res!65130 e!88342)))

(assert (=> b!135667 (= res!65130 (= (h!2295 lt!69626) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!135668 () Bool)

(assert (=> b!135668 (= e!88342 (contains!886 (t!6137 lt!69626) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!42449 res!65131) b!135667))

(assert (= (and b!135667 (not res!65130)) b!135668))

(declare-fun m!161953 () Bool)

(assert (=> d!42449 m!161953))

(declare-fun m!161955 () Bool)

(assert (=> d!42449 m!161955))

(declare-fun m!161957 () Bool)

(assert (=> b!135668 m!161957))

(assert (=> b!133992 d!42449))

(assert (=> d!40911 d!40909))

(declare-fun d!42451 () Bool)

(assert (=> d!42451 (= (apply!116 (+!169 lt!69538 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))) lt!69523) (apply!116 lt!69538 lt!69523))))

(assert (=> d!42451 true))

(declare-fun _$34!986 () Unit!4141)

(assert (=> d!42451 (= (choose!828 lt!69538 lt!69527 (zeroValue!2719 newMap!16) lt!69523) _$34!986)))

(declare-fun bs!5710 () Bool)

(assert (= bs!5710 d!42451))

(assert (=> bs!5710 m!156855))

(assert (=> bs!5710 m!156855))

(assert (=> bs!5710 m!156879))

(assert (=> bs!5710 m!156859))

(assert (=> d!40911 d!42451))

(assert (=> d!40911 d!40915))

(assert (=> d!40911 d!40925))

(declare-fun d!42453 () Bool)

(declare-fun e!88345 () Bool)

(assert (=> d!42453 e!88345))

(declare-fun res!65132 () Bool)

(assert (=> d!42453 (=> res!65132 e!88345)))

(declare-fun lt!70916 () Bool)

(assert (=> d!42453 (= res!65132 (not lt!70916))))

(declare-fun lt!70917 () Bool)

(assert (=> d!42453 (= lt!70916 lt!70917)))

(declare-fun lt!70918 () Unit!4141)

(declare-fun e!88344 () Unit!4141)

(assert (=> d!42453 (= lt!70918 e!88344)))

(declare-fun c!25387 () Bool)

(assert (=> d!42453 (= c!25387 lt!70917)))

(assert (=> d!42453 (= lt!70917 (containsKey!176 (toList!842 lt!69538) lt!69523))))

(assert (=> d!42453 (= (contains!884 lt!69538 lt!69523) lt!70916)))

(declare-fun b!135669 () Bool)

(declare-fun lt!70919 () Unit!4141)

(assert (=> b!135669 (= e!88344 lt!70919)))

(assert (=> b!135669 (= lt!70919 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69538) lt!69523))))

(assert (=> b!135669 (isDefined!125 (getValueByKey!173 (toList!842 lt!69538) lt!69523))))

(declare-fun b!135670 () Bool)

(declare-fun Unit!4262 () Unit!4141)

(assert (=> b!135670 (= e!88344 Unit!4262)))

(declare-fun b!135671 () Bool)

(assert (=> b!135671 (= e!88345 (isDefined!125 (getValueByKey!173 (toList!842 lt!69538) lt!69523)))))

(assert (= (and d!42453 c!25387) b!135669))

(assert (= (and d!42453 (not c!25387)) b!135670))

(assert (= (and d!42453 (not res!65132)) b!135671))

(declare-fun m!161959 () Bool)

(assert (=> d!42453 m!161959))

(declare-fun m!161961 () Bool)

(assert (=> b!135669 m!161961))

(assert (=> b!135669 m!158489))

(assert (=> b!135669 m!158489))

(declare-fun m!161963 () Bool)

(assert (=> b!135669 m!161963))

(assert (=> b!135671 m!158489))

(assert (=> b!135671 m!158489))

(assert (=> b!135671 m!161963))

(assert (=> d!40911 d!42453))

(assert (=> b!134011 d!40595))

(declare-fun d!42455 () Bool)

(declare-fun e!88347 () Bool)

(assert (=> d!42455 e!88347))

(declare-fun res!65133 () Bool)

(assert (=> d!42455 (=> res!65133 e!88347)))

(declare-fun lt!70920 () Bool)

(assert (=> d!42455 (= res!65133 (not lt!70920))))

(declare-fun lt!70921 () Bool)

(assert (=> d!42455 (= lt!70920 lt!70921)))

(declare-fun lt!70922 () Unit!4141)

(declare-fun e!88346 () Unit!4141)

(assert (=> d!42455 (= lt!70922 e!88346)))

(declare-fun c!25388 () Bool)

(assert (=> d!42455 (= c!25388 lt!70921)))

(assert (=> d!42455 (= lt!70921 (containsKey!176 (toList!842 lt!69513) lt!69498))))

(assert (=> d!42455 (= (contains!884 lt!69513 lt!69498) lt!70920)))

(declare-fun b!135672 () Bool)

(declare-fun lt!70923 () Unit!4141)

(assert (=> b!135672 (= e!88346 lt!70923)))

(assert (=> b!135672 (= lt!70923 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69513) lt!69498))))

(assert (=> b!135672 (isDefined!125 (getValueByKey!173 (toList!842 lt!69513) lt!69498))))

(declare-fun b!135673 () Bool)

(declare-fun Unit!4263 () Unit!4141)

(assert (=> b!135673 (= e!88346 Unit!4263)))

(declare-fun b!135674 () Bool)

(assert (=> b!135674 (= e!88347 (isDefined!125 (getValueByKey!173 (toList!842 lt!69513) lt!69498)))))

(assert (= (and d!42455 c!25388) b!135672))

(assert (= (and d!42455 (not c!25388)) b!135673))

(assert (= (and d!42455 (not res!65133)) b!135674))

(declare-fun m!161965 () Bool)

(assert (=> d!42455 m!161965))

(declare-fun m!161967 () Bool)

(assert (=> b!135672 m!161967))

(assert (=> b!135672 m!157797))

(assert (=> b!135672 m!157797))

(declare-fun m!161969 () Bool)

(assert (=> b!135672 m!161969))

(assert (=> b!135674 m!157797))

(assert (=> b!135674 m!157797))

(assert (=> b!135674 m!161969))

(assert (=> d!40735 d!42455))

(assert (=> d!40735 d!40719))

(assert (=> d!40735 d!40733))

(declare-fun d!42457 () Bool)

(assert (=> d!42457 (= (apply!116 (+!169 lt!69513 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!69498) (apply!116 lt!69513 lt!69498))))

(assert (=> d!42457 true))

(declare-fun _$34!987 () Unit!4141)

(assert (=> d!42457 (= (choose!828 lt!69513 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)) lt!69498) _$34!987)))

(declare-fun bs!5711 () Bool)

(assert (= bs!5711 d!42457))

(assert (=> bs!5711 m!156781))

(assert (=> bs!5711 m!156781))

(assert (=> bs!5711 m!156805))

(assert (=> bs!5711 m!156785))

(assert (=> d!40735 d!42457))

(assert (=> d!40735 d!40739))

(declare-fun b!135675 () Bool)

(assert (=> b!135675 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> b!135675 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2522 (_values!2847 newMap!16))))))

(declare-fun e!88354 () Bool)

(declare-fun lt!70928 () ListLongMap!1653)

(assert (=> b!135675 (= e!88354 (= (apply!116 lt!70928 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!135676 () Bool)

(declare-fun res!65136 () Bool)

(declare-fun e!88352 () Bool)

(assert (=> b!135676 (=> (not res!65136) (not e!88352))))

(assert (=> b!135676 (= res!65136 (not (contains!884 lt!70928 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135677 () Bool)

(declare-fun e!88349 () Bool)

(assert (=> b!135677 (= e!88349 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135677 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!135678 () Bool)

(declare-fun e!88350 () Bool)

(declare-fun e!88351 () Bool)

(assert (=> b!135678 (= e!88350 e!88351)))

(declare-fun c!25392 () Bool)

(assert (=> b!135678 (= c!25392 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun b!135679 () Bool)

(assert (=> b!135679 (= e!88351 (= lt!70928 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69283 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16))))))

(declare-fun call!14884 () ListLongMap!1653)

(declare-fun bm!14881 () Bool)

(assert (=> bm!14881 (= call!14884 (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69283 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2864 newMap!16)))))

(declare-fun b!135680 () Bool)

(declare-fun e!88348 () ListLongMap!1653)

(assert (=> b!135680 (= e!88348 call!14884)))

(declare-fun b!135681 () Bool)

(declare-fun e!88353 () ListLongMap!1653)

(assert (=> b!135681 (= e!88353 e!88348)))

(declare-fun c!25389 () Bool)

(assert (=> b!135681 (= c!25389 (validKeyInArray!0 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!42459 () Bool)

(assert (=> d!42459 e!88352))

(declare-fun res!65134 () Bool)

(assert (=> d!42459 (=> (not res!65134) (not e!88352))))

(assert (=> d!42459 (= res!65134 (not (contains!884 lt!70928 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42459 (= lt!70928 e!88353)))

(declare-fun c!25390 () Bool)

(assert (=> d!42459 (= c!25390 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (=> d!42459 (validMask!0 (mask!7164 newMap!16))))

(assert (=> d!42459 (= (getCurrentListMapNoExtraKeys!136 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) lt!69283 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)) lt!70928)))

(declare-fun b!135682 () Bool)

(assert (=> b!135682 (= e!88350 e!88354)))

(assert (=> b!135682 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(declare-fun res!65135 () Bool)

(assert (=> b!135682 (= res!65135 (contains!884 lt!70928 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135682 (=> (not res!65135) (not e!88354))))

(declare-fun b!135683 () Bool)

(assert (=> b!135683 (= e!88353 (ListLongMap!1654 Nil!1691))))

(declare-fun b!135684 () Bool)

(assert (=> b!135684 (= e!88351 (isEmpty!415 lt!70928))))

(declare-fun b!135685 () Bool)

(declare-fun lt!70925 () Unit!4141)

(declare-fun lt!70929 () Unit!4141)

(assert (=> b!135685 (= lt!70925 lt!70929)))

(declare-fun lt!70927 () V!3481)

(declare-fun lt!70924 () ListLongMap!1653)

(declare-fun lt!70930 () (_ BitVec 64))

(declare-fun lt!70926 () (_ BitVec 64))

(assert (=> b!135685 (not (contains!884 (+!169 lt!70924 (tuple2!2565 lt!70926 lt!70927)) lt!70930))))

(assert (=> b!135685 (= lt!70929 (addStillNotContains!63 lt!70924 lt!70926 lt!70927 lt!70930))))

(assert (=> b!135685 (= lt!70930 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!135685 (= lt!70927 (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!135685 (= lt!70926 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!135685 (= lt!70924 call!14884)))

(assert (=> b!135685 (= e!88348 (+!169 call!14884 (tuple2!2565 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000) (get!1489 (select (arr!2253 (_values!2847 newMap!16)) #b00000000000000000000000000000000) (dynLambda!426 (defaultEntry!2864 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135686 () Bool)

(assert (=> b!135686 (= e!88352 e!88350)))

(declare-fun c!25391 () Bool)

(assert (=> b!135686 (= c!25391 e!88349)))

(declare-fun res!65137 () Bool)

(assert (=> b!135686 (=> (not res!65137) (not e!88349))))

(assert (=> b!135686 (= res!65137 (bvslt #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))))))

(assert (= (and d!42459 c!25390) b!135683))

(assert (= (and d!42459 (not c!25390)) b!135681))

(assert (= (and b!135681 c!25389) b!135685))

(assert (= (and b!135681 (not c!25389)) b!135680))

(assert (= (or b!135685 b!135680) bm!14881))

(assert (= (and d!42459 res!65134) b!135676))

(assert (= (and b!135676 res!65136) b!135686))

(assert (= (and b!135686 res!65137) b!135677))

(assert (= (and b!135686 c!25391) b!135682))

(assert (= (and b!135686 (not c!25391)) b!135678))

(assert (= (and b!135682 res!65135) b!135675))

(assert (= (and b!135678 c!25392) b!135679))

(assert (= (and b!135678 (not c!25392)) b!135684))

(declare-fun b_lambda!6045 () Bool)

(assert (=> (not b_lambda!6045) (not b!135675)))

(assert (=> b!135675 t!6147))

(declare-fun b_and!8401 () Bool)

(assert (= b_and!8397 (and (=> t!6147 result!3993) b_and!8401)))

(assert (=> b!135675 t!6149))

(declare-fun b_and!8403 () Bool)

(assert (= b_and!8399 (and (=> t!6149 result!3995) b_and!8403)))

(declare-fun b_lambda!6047 () Bool)

(assert (=> (not b_lambda!6047) (not b!135685)))

(assert (=> b!135685 t!6147))

(declare-fun b_and!8405 () Bool)

(assert (= b_and!8401 (and (=> t!6147 result!3993) b_and!8405)))

(assert (=> b!135685 t!6149))

(declare-fun b_and!8407 () Bool)

(assert (= b_and!8403 (and (=> t!6149 result!3995) b_and!8407)))

(declare-fun m!161971 () Bool)

(assert (=> b!135684 m!161971))

(assert (=> b!135681 m!156679))

(assert (=> b!135681 m!156679))

(assert (=> b!135681 m!156689))

(assert (=> b!135677 m!156679))

(assert (=> b!135677 m!156679))

(assert (=> b!135677 m!156689))

(assert (=> b!135679 m!156393))

(declare-fun m!161973 () Bool)

(assert (=> b!135679 m!161973))

(declare-fun m!161975 () Bool)

(assert (=> b!135676 m!161975))

(assert (=> b!135685 m!156881))

(assert (=> b!135685 m!156809))

(assert (=> b!135685 m!156883))

(declare-fun m!161977 () Bool)

(assert (=> b!135685 m!161977))

(declare-fun m!161979 () Bool)

(assert (=> b!135685 m!161979))

(assert (=> b!135685 m!156881))

(declare-fun m!161981 () Bool)

(assert (=> b!135685 m!161981))

(assert (=> b!135685 m!161977))

(declare-fun m!161983 () Bool)

(assert (=> b!135685 m!161983))

(assert (=> b!135685 m!156679))

(assert (=> b!135685 m!156809))

(assert (=> b!135682 m!156679))

(assert (=> b!135682 m!156679))

(declare-fun m!161985 () Bool)

(assert (=> b!135682 m!161985))

(declare-fun m!161987 () Bool)

(assert (=> d!42459 m!161987))

(assert (=> d!42459 m!156651))

(assert (=> bm!14881 m!156393))

(assert (=> bm!14881 m!161973))

(assert (=> b!135675 m!156881))

(assert (=> b!135675 m!156809))

(assert (=> b!135675 m!156883))

(assert (=> b!135675 m!156881))

(assert (=> b!135675 m!156679))

(declare-fun m!161989 () Bool)

(assert (=> b!135675 m!161989))

(assert (=> b!135675 m!156679))

(assert (=> b!135675 m!156809))

(assert (=> bm!14685 d!42459))

(declare-fun d!42461 () Bool)

(assert (=> d!42461 (= (get!1492 (getValueByKey!173 (toList!842 lt!69501) lt!69503)) (v!3203 (getValueByKey!173 (toList!842 lt!69501) lt!69503)))))

(assert (=> d!40731 d!42461))

(declare-fun b!135688 () Bool)

(declare-fun e!88355 () Option!179)

(declare-fun e!88356 () Option!179)

(assert (=> b!135688 (= e!88355 e!88356)))

(declare-fun c!25394 () Bool)

(assert (=> b!135688 (= c!25394 (and ((_ is Cons!1690) (toList!842 lt!69501)) (not (= (_1!1293 (h!2295 (toList!842 lt!69501))) lt!69503))))))

(declare-fun b!135687 () Bool)

(assert (=> b!135687 (= e!88355 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69501)))))))

(declare-fun d!42463 () Bool)

(declare-fun c!25393 () Bool)

(assert (=> d!42463 (= c!25393 (and ((_ is Cons!1690) (toList!842 lt!69501)) (= (_1!1293 (h!2295 (toList!842 lt!69501))) lt!69503)))))

(assert (=> d!42463 (= (getValueByKey!173 (toList!842 lt!69501) lt!69503) e!88355)))

(declare-fun b!135690 () Bool)

(assert (=> b!135690 (= e!88356 None!177)))

(declare-fun b!135689 () Bool)

(assert (=> b!135689 (= e!88356 (getValueByKey!173 (t!6137 (toList!842 lt!69501)) lt!69503))))

(assert (= (and d!42463 c!25393) b!135687))

(assert (= (and d!42463 (not c!25393)) b!135688))

(assert (= (and b!135688 c!25394) b!135689))

(assert (= (and b!135688 (not c!25394)) b!135690))

(declare-fun m!161991 () Bool)

(assert (=> b!135689 m!161991))

(assert (=> d!40731 d!42463))

(declare-fun d!42465 () Bool)

(declare-fun lt!70931 () (_ BitVec 32))

(assert (=> d!42465 (and (bvsge lt!70931 #b00000000000000000000000000000000) (bvsle lt!70931 (bvsub (size!2521 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000)))))

(declare-fun e!88357 () (_ BitVec 32))

(assert (=> d!42465 (= lt!70931 e!88357)))

(declare-fun c!25395 () Bool)

(assert (=> d!42465 (= c!25395 (bvsge #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69445)))))))

(assert (=> d!42465 (and (bvsle #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69445)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2521 (_keys!4613 (_2!1294 lt!69445))) (size!2521 (_keys!4613 (_2!1294 lt!69445)))))))

(assert (=> d!42465 (= (arrayCountValidKeys!0 (_keys!4613 (_2!1294 lt!69445)) #b00000000000000000000000000000000 (size!2521 (_keys!4613 (_2!1294 lt!69445)))) lt!70931)))

(declare-fun b!135691 () Bool)

(declare-fun e!88358 () (_ BitVec 32))

(declare-fun call!14885 () (_ BitVec 32))

(assert (=> b!135691 (= e!88358 (bvadd #b00000000000000000000000000000001 call!14885))))

(declare-fun b!135692 () Bool)

(assert (=> b!135692 (= e!88358 call!14885)))

(declare-fun b!135693 () Bool)

(assert (=> b!135693 (= e!88357 e!88358)))

(declare-fun c!25396 () Bool)

(assert (=> b!135693 (= c!25396 (validKeyInArray!0 (select (arr!2252 (_keys!4613 (_2!1294 lt!69445))) #b00000000000000000000000000000000)))))

(declare-fun bm!14882 () Bool)

(assert (=> bm!14882 (= call!14885 (arrayCountValidKeys!0 (_keys!4613 (_2!1294 lt!69445)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (_2!1294 lt!69445)))))))

(declare-fun b!135694 () Bool)

(assert (=> b!135694 (= e!88357 #b00000000000000000000000000000000)))

(assert (= (and d!42465 c!25395) b!135694))

(assert (= (and d!42465 (not c!25395)) b!135693))

(assert (= (and b!135693 c!25396) b!135691))

(assert (= (and b!135693 (not c!25396)) b!135692))

(assert (= (or b!135691 b!135692) bm!14882))

(assert (=> b!135693 m!159403))

(assert (=> b!135693 m!159403))

(assert (=> b!135693 m!159405))

(declare-fun m!161993 () Bool)

(assert (=> bm!14882 m!161993))

(assert (=> b!133582 d!42465))

(assert (=> b!133420 d!41569))

(declare-fun d!42467 () Bool)

(declare-fun res!65138 () Bool)

(declare-fun e!88359 () Bool)

(assert (=> d!42467 (=> res!65138 e!88359)))

(assert (=> d!42467 (= res!65138 (and ((_ is Cons!1690) (toList!842 lt!69486)) (= (_1!1293 (h!2295 (toList!842 lt!69486))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42467 (= (containsKey!176 (toList!842 lt!69486) #b1000000000000000000000000000000000000000000000000000000000000000) e!88359)))

(declare-fun b!135695 () Bool)

(declare-fun e!88360 () Bool)

(assert (=> b!135695 (= e!88359 e!88360)))

(declare-fun res!65139 () Bool)

(assert (=> b!135695 (=> (not res!65139) (not e!88360))))

(assert (=> b!135695 (= res!65139 (and (or (not ((_ is Cons!1690) (toList!842 lt!69486))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69486))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1690) (toList!842 lt!69486)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69486))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135696 () Bool)

(assert (=> b!135696 (= e!88360 (containsKey!176 (t!6137 (toList!842 lt!69486)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42467 (not res!65138)) b!135695))

(assert (= (and b!135695 res!65139) b!135696))

(declare-fun m!161995 () Bool)

(assert (=> b!135696 m!161995))

(assert (=> d!40999 d!42467))

(declare-fun d!42469 () Bool)

(declare-fun res!65140 () Bool)

(declare-fun e!88361 () Bool)

(assert (=> d!42469 (=> res!65140 e!88361)))

(assert (=> d!42469 (= res!65140 (and ((_ is Cons!1690) (toList!842 lt!69577)) (= (_1!1293 (h!2295 (toList!842 lt!69577))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42469 (= (containsKey!176 (toList!842 lt!69577) #b1000000000000000000000000000000000000000000000000000000000000000) e!88361)))

(declare-fun b!135697 () Bool)

(declare-fun e!88362 () Bool)

(assert (=> b!135697 (= e!88361 e!88362)))

(declare-fun res!65141 () Bool)

(assert (=> b!135697 (=> (not res!65141) (not e!88362))))

(assert (=> b!135697 (= res!65141 (and (or (not ((_ is Cons!1690) (toList!842 lt!69577))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69577))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1690) (toList!842 lt!69577)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69577))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!135698 () Bool)

(assert (=> b!135698 (= e!88362 (containsKey!176 (t!6137 (toList!842 lt!69577)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42469 (not res!65140)) b!135697))

(assert (= (and b!135697 res!65141) b!135698))

(declare-fun m!161997 () Bool)

(assert (=> b!135698 m!161997))

(assert (=> d!41095 d!42469))

(assert (=> b!133489 d!40661))

(declare-fun b!135700 () Bool)

(declare-fun e!88363 () Option!179)

(declare-fun e!88364 () Option!179)

(assert (=> b!135700 (= e!88363 e!88364)))

(declare-fun c!25398 () Bool)

(assert (=> b!135700 (= c!25398 (and ((_ is Cons!1690) (toList!842 lt!69754)) (not (= (_1!1293 (h!2295 (toList!842 lt!69754))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135699 () Bool)

(assert (=> b!135699 (= e!88363 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69754)))))))

(declare-fun c!25397 () Bool)

(declare-fun d!42471 () Bool)

(assert (=> d!42471 (= c!25397 (and ((_ is Cons!1690) (toList!842 lt!69754)) (= (_1!1293 (h!2295 (toList!842 lt!69754))) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42471 (= (getValueByKey!173 (toList!842 lt!69754) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88363)))

(declare-fun b!135702 () Bool)

(assert (=> b!135702 (= e!88364 None!177)))

(declare-fun b!135701 () Bool)

(assert (=> b!135701 (= e!88364 (getValueByKey!173 (t!6137 (toList!842 lt!69754)) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42471 c!25397) b!135699))

(assert (= (and d!42471 (not c!25397)) b!135700))

(assert (= (and b!135700 c!25398) b!135701))

(assert (= (and b!135700 (not c!25398)) b!135702))

(declare-fun m!161999 () Bool)

(assert (=> b!135701 m!161999))

(assert (=> b!133404 d!42471))

(declare-fun d!42473 () Bool)

(declare-fun e!88366 () Bool)

(assert (=> d!42473 e!88366))

(declare-fun res!65142 () Bool)

(assert (=> d!42473 (=> res!65142 e!88366)))

(declare-fun lt!70932 () Bool)

(assert (=> d!42473 (= res!65142 (not lt!70932))))

(declare-fun lt!70933 () Bool)

(assert (=> d!42473 (= lt!70932 lt!70933)))

(declare-fun lt!70934 () Unit!4141)

(declare-fun e!88365 () Unit!4141)

(assert (=> d!42473 (= lt!70934 e!88365)))

(declare-fun c!25399 () Bool)

(assert (=> d!42473 (= c!25399 lt!70933)))

(assert (=> d!42473 (= lt!70933 (containsKey!176 (toList!842 lt!70143) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> d!42473 (= (contains!884 lt!70143 (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70932)))

(declare-fun b!135703 () Bool)

(declare-fun lt!70935 () Unit!4141)

(assert (=> b!135703 (= e!88365 lt!70935)))

(assert (=> b!135703 (= lt!70935 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70143) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (=> b!135703 (isDefined!125 (getValueByKey!173 (toList!842 lt!70143) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!135704 () Bool)

(declare-fun Unit!4264 () Unit!4141)

(assert (=> b!135704 (= e!88365 Unit!4264)))

(declare-fun b!135705 () Bool)

(assert (=> b!135705 (= e!88366 (isDefined!125 (getValueByKey!173 (toList!842 lt!70143) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (= (and d!42473 c!25399) b!135703))

(assert (= (and d!42473 (not c!25399)) b!135704))

(assert (= (and d!42473 (not res!65142)) b!135705))

(declare-fun m!162001 () Bool)

(assert (=> d!42473 m!162001))

(declare-fun m!162003 () Bool)

(assert (=> b!135703 m!162003))

(assert (=> b!135703 m!158701))

(assert (=> b!135703 m!158701))

(declare-fun m!162005 () Bool)

(assert (=> b!135703 m!162005))

(assert (=> b!135705 m!158701))

(assert (=> b!135705 m!158701))

(assert (=> b!135705 m!162005))

(assert (=> d!41019 d!42473))

(declare-fun b!135707 () Bool)

(declare-fun e!88367 () Option!179)

(declare-fun e!88368 () Option!179)

(assert (=> b!135707 (= e!88367 e!88368)))

(declare-fun c!25401 () Bool)

(assert (=> b!135707 (= c!25401 (and ((_ is Cons!1690) lt!70144) (not (= (_1!1293 (h!2295 lt!70144)) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!135706 () Bool)

(assert (=> b!135706 (= e!88367 (Some!178 (_2!1293 (h!2295 lt!70144))))))

(declare-fun d!42475 () Bool)

(declare-fun c!25400 () Bool)

(assert (=> d!42475 (= c!25400 (and ((_ is Cons!1690) lt!70144) (= (_1!1293 (h!2295 lt!70144)) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!42475 (= (getValueByKey!173 lt!70144 (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) e!88367)))

(declare-fun b!135709 () Bool)

(assert (=> b!135709 (= e!88368 None!177)))

(declare-fun b!135708 () Bool)

(assert (=> b!135708 (= e!88368 (getValueByKey!173 (t!6137 lt!70144) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(assert (= (and d!42475 c!25400) b!135706))

(assert (= (and d!42475 (not c!25400)) b!135707))

(assert (= (and b!135707 c!25401) b!135708))

(assert (= (and b!135707 (not c!25401)) b!135709))

(declare-fun m!162007 () Bool)

(assert (=> b!135708 m!162007))

(assert (=> d!41019 d!42475))

(declare-fun d!42477 () Bool)

(assert (=> d!42477 (= (getValueByKey!173 lt!70144 (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (Some!178 (_2!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun lt!70936 () Unit!4141)

(assert (=> d!42477 (= lt!70936 (choose!833 lt!70144 (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun e!88369 () Bool)

(assert (=> d!42477 e!88369))

(declare-fun res!65143 () Bool)

(assert (=> d!42477 (=> (not res!65143) (not e!88369))))

(assert (=> d!42477 (= res!65143 (isStrictlySorted!309 lt!70144))))

(assert (=> d!42477 (= (lemmaContainsTupThenGetReturnValue!88 lt!70144 (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70936)))

(declare-fun b!135710 () Bool)

(declare-fun res!65144 () Bool)

(assert (=> b!135710 (=> (not res!65144) (not e!88369))))

(assert (=> b!135710 (= res!65144 (containsKey!176 lt!70144 (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!135711 () Bool)

(assert (=> b!135711 (= e!88369 (contains!886 lt!70144 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (= (and d!42477 res!65143) b!135710))

(assert (= (and b!135710 res!65144) b!135711))

(assert (=> d!42477 m!158695))

(declare-fun m!162009 () Bool)

(assert (=> d!42477 m!162009))

(declare-fun m!162011 () Bool)

(assert (=> d!42477 m!162011))

(declare-fun m!162013 () Bool)

(assert (=> b!135710 m!162013))

(declare-fun m!162015 () Bool)

(assert (=> b!135711 m!162015))

(assert (=> d!41019 d!42477))

(declare-fun b!135712 () Bool)

(declare-fun res!65145 () Bool)

(declare-fun e!88374 () Bool)

(assert (=> b!135712 (=> (not res!65145) (not e!88374))))

(declare-fun lt!70937 () List!1694)

(assert (=> b!135712 (= res!65145 (containsKey!176 lt!70937 (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun b!135713 () Bool)

(declare-fun e!88372 () List!1694)

(declare-fun e!88373 () List!1694)

(assert (=> b!135713 (= e!88372 e!88373)))

(declare-fun c!25405 () Bool)

(assert (=> b!135713 (= c!25405 (and ((_ is Cons!1690) (toList!842 lt!69574)) (= (_1!1293 (h!2295 (toList!842 lt!69574))) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun bm!14883 () Bool)

(declare-fun call!14887 () List!1694)

(declare-fun call!14886 () List!1694)

(assert (=> bm!14883 (= call!14887 call!14886)))

(declare-fun b!135714 () Bool)

(declare-fun e!88370 () List!1694)

(assert (=> b!135714 (= e!88370 call!14887)))

(declare-fun b!135715 () Bool)

(declare-fun c!25404 () Bool)

(assert (=> b!135715 (= c!25404 (and ((_ is Cons!1690) (toList!842 lt!69574)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69574))) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> b!135715 (= e!88373 e!88370)))

(declare-fun b!135716 () Bool)

(assert (=> b!135716 (= e!88374 (contains!886 lt!70937 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!135717 () Bool)

(assert (=> b!135717 (= e!88373 call!14886)))

(declare-fun d!42479 () Bool)

(assert (=> d!42479 e!88374))

(declare-fun res!65146 () Bool)

(assert (=> d!42479 (=> (not res!65146) (not e!88374))))

(assert (=> d!42479 (= res!65146 (isStrictlySorted!309 lt!70937))))

(assert (=> d!42479 (= lt!70937 e!88372)))

(declare-fun c!25403 () Bool)

(assert (=> d!42479 (= c!25403 (and ((_ is Cons!1690) (toList!842 lt!69574)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69574))) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!42479 (isStrictlySorted!309 (toList!842 lt!69574))))

(assert (=> d!42479 (= (insertStrictlySorted!91 (toList!842 lt!69574) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) lt!70937)))

(declare-fun e!88371 () List!1694)

(declare-fun b!135718 () Bool)

(assert (=> b!135718 (= e!88371 (ite c!25405 (t!6137 (toList!842 lt!69574)) (ite c!25404 (Cons!1690 (h!2295 (toList!842 lt!69574)) (t!6137 (toList!842 lt!69574))) Nil!1691)))))

(declare-fun b!135719 () Bool)

(declare-fun call!14888 () List!1694)

(assert (=> b!135719 (= e!88372 call!14888)))

(declare-fun b!135720 () Bool)

(assert (=> b!135720 (= e!88370 call!14887)))

(declare-fun b!135721 () Bool)

(assert (=> b!135721 (= e!88371 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69574)) (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))

(declare-fun bm!14884 () Bool)

(assert (=> bm!14884 (= call!14886 call!14888)))

(declare-fun bm!14885 () Bool)

(assert (=> bm!14885 (= call!14888 ($colon$colon!91 e!88371 (ite c!25403 (h!2295 (toList!842 lt!69574)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) (_2!1293 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun c!25402 () Bool)

(assert (=> bm!14885 (= c!25402 c!25403)))

(assert (= (and d!42479 c!25403) b!135719))

(assert (= (and d!42479 (not c!25403)) b!135713))

(assert (= (and b!135713 c!25405) b!135717))

(assert (= (and b!135713 (not c!25405)) b!135715))

(assert (= (and b!135715 c!25404) b!135720))

(assert (= (and b!135715 (not c!25404)) b!135714))

(assert (= (or b!135720 b!135714) bm!14883))

(assert (= (or b!135717 bm!14883) bm!14884))

(assert (= (or b!135719 bm!14884) bm!14885))

(assert (= (and bm!14885 c!25402) b!135721))

(assert (= (and bm!14885 (not c!25402)) b!135718))

(assert (= (and d!42479 res!65146) b!135712))

(assert (= (and b!135712 res!65145) b!135716))

(declare-fun m!162017 () Bool)

(assert (=> b!135716 m!162017))

(declare-fun m!162019 () Bool)

(assert (=> b!135721 m!162019))

(declare-fun m!162021 () Bool)

(assert (=> bm!14885 m!162021))

(declare-fun m!162023 () Bool)

(assert (=> b!135712 m!162023))

(declare-fun m!162025 () Bool)

(assert (=> d!42479 m!162025))

(declare-fun m!162027 () Bool)

(assert (=> d!42479 m!162027))

(assert (=> d!41019 d!42479))

(declare-fun d!42481 () Bool)

(assert (=> d!42481 (= (apply!116 lt!69680 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69680) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5712 () Bool)

(assert (= bs!5712 d!42481))

(assert (=> bs!5712 m!161509))

(assert (=> bs!5712 m!161509))

(declare-fun m!162029 () Bool)

(assert (=> bs!5712 m!162029))

(assert (=> b!133245 d!42481))

(assert (=> d!41033 d!41019))

(declare-fun d!42483 () Bool)

(assert (=> d!42483 (= (apply!116 (+!169 lt!69574 (tuple2!2565 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))) lt!69576) (apply!116 lt!69574 lt!69576))))

(assert (=> d!42483 true))

(declare-fun _$34!988 () Unit!4141)

(assert (=> d!42483 (= (choose!828 lt!69574 lt!69566 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)) lt!69576) _$34!988)))

(declare-fun bs!5713 () Bool)

(assert (= bs!5713 d!42483))

(assert (=> bs!5713 m!156971))

(assert (=> bs!5713 m!156971))

(assert (=> bs!5713 m!156985))

(assert (=> bs!5713 m!156967))

(assert (=> d!41033 d!42483))

(assert (=> d!41033 d!41029))

(assert (=> d!41033 d!41041))

(declare-fun d!42485 () Bool)

(declare-fun e!88376 () Bool)

(assert (=> d!42485 e!88376))

(declare-fun res!65147 () Bool)

(assert (=> d!42485 (=> res!65147 e!88376)))

(declare-fun lt!70938 () Bool)

(assert (=> d!42485 (= res!65147 (not lt!70938))))

(declare-fun lt!70939 () Bool)

(assert (=> d!42485 (= lt!70938 lt!70939)))

(declare-fun lt!70940 () Unit!4141)

(declare-fun e!88375 () Unit!4141)

(assert (=> d!42485 (= lt!70940 e!88375)))

(declare-fun c!25406 () Bool)

(assert (=> d!42485 (= c!25406 lt!70939)))

(assert (=> d!42485 (= lt!70939 (containsKey!176 (toList!842 lt!69574) lt!69576))))

(assert (=> d!42485 (= (contains!884 lt!69574 lt!69576) lt!70938)))

(declare-fun b!135722 () Bool)

(declare-fun lt!70941 () Unit!4141)

(assert (=> b!135722 (= e!88375 lt!70941)))

(assert (=> b!135722 (= lt!70941 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69574) lt!69576))))

(assert (=> b!135722 (isDefined!125 (getValueByKey!173 (toList!842 lt!69574) lt!69576))))

(declare-fun b!135723 () Bool)

(declare-fun Unit!4265 () Unit!4141)

(assert (=> b!135723 (= e!88375 Unit!4265)))

(declare-fun b!135724 () Bool)

(assert (=> b!135724 (= e!88376 (isDefined!125 (getValueByKey!173 (toList!842 lt!69574) lt!69576)))))

(assert (= (and d!42485 c!25406) b!135722))

(assert (= (and d!42485 (not c!25406)) b!135723))

(assert (= (and d!42485 (not res!65147)) b!135724))

(declare-fun m!162031 () Bool)

(assert (=> d!42485 m!162031))

(declare-fun m!162033 () Bool)

(assert (=> b!135722 m!162033))

(assert (=> b!135722 m!158721))

(assert (=> b!135722 m!158721))

(declare-fun m!162035 () Bool)

(assert (=> b!135722 m!162035))

(assert (=> b!135724 m!158721))

(assert (=> b!135724 m!158721))

(assert (=> b!135724 m!162035))

(assert (=> d!41033 d!42485))

(declare-fun d!42487 () Bool)

(assert (=> d!42487 (isDefined!125 (getValueByKey!173 (toList!842 lt!69529) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!70942 () Unit!4141)

(assert (=> d!42487 (= lt!70942 (choose!831 (toList!842 lt!69529) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88377 () Bool)

(assert (=> d!42487 e!88377))

(declare-fun res!65148 () Bool)

(assert (=> d!42487 (=> (not res!65148) (not e!88377))))

(assert (=> d!42487 (= res!65148 (isStrictlySorted!309 (toList!842 lt!69529)))))

(assert (=> d!42487 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69529) #b1000000000000000000000000000000000000000000000000000000000000000) lt!70942)))

(declare-fun b!135725 () Bool)

(assert (=> b!135725 (= e!88377 (containsKey!176 (toList!842 lt!69529) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42487 res!65148) b!135725))

(assert (=> d!42487 m!158059))

(assert (=> d!42487 m!158059))

(assert (=> d!42487 m!158559))

(declare-fun m!162037 () Bool)

(assert (=> d!42487 m!162037))

(assert (=> d!42487 m!159819))

(assert (=> b!135725 m!158555))

(assert (=> b!133912 d!42487))

(assert (=> b!133912 d!42037))

(assert (=> b!133912 d!41511))

(assert (=> d!40769 d!40569))

(assert (=> d!40769 d!40571))

(assert (=> b!133754 d!42265))

(assert (=> b!133754 d!40835))

(declare-fun d!42489 () Bool)

(declare-fun res!65149 () Bool)

(declare-fun e!88378 () Bool)

(assert (=> d!42489 (=> res!65149 e!88378)))

(assert (=> d!42489 (= res!65149 (and ((_ is Cons!1690) lt!69374) (= (_1!1293 (h!2295 lt!69374)) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!42489 (= (containsKey!176 lt!69374 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!88378)))

(declare-fun b!135726 () Bool)

(declare-fun e!88379 () Bool)

(assert (=> b!135726 (= e!88378 e!88379)))

(declare-fun res!65150 () Bool)

(assert (=> b!135726 (=> (not res!65150) (not e!88379))))

(assert (=> b!135726 (= res!65150 (and (or (not ((_ is Cons!1690) lt!69374)) (bvsle (_1!1293 (h!2295 lt!69374)) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) ((_ is Cons!1690) lt!69374) (bvslt (_1!1293 (h!2295 lt!69374)) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135727 () Bool)

(assert (=> b!135727 (= e!88379 (containsKey!176 (t!6137 lt!69374) (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42489 (not res!65149)) b!135726))

(assert (= (and b!135726 res!65150) b!135727))

(declare-fun m!162039 () Bool)

(assert (=> b!135727 m!162039))

(assert (=> b!133322 d!42489))

(assert (=> b!133235 d!41661))

(assert (=> d!40831 d!40829))

(declare-fun d!42491 () Bool)

(assert (=> d!42491 (= (getValueByKey!173 lt!69635 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) (Some!178 (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (=> d!42491 true))

(declare-fun _$22!491 () Unit!4141)

(assert (=> d!42491 (= (choose!833 lt!69635 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) _$22!491)))

(declare-fun bs!5714 () Bool)

(assert (= bs!5714 d!42491))

(assert (=> bs!5714 m!157143))

(assert (=> d!40831 d!42491))

(declare-fun d!42493 () Bool)

(declare-fun res!65151 () Bool)

(declare-fun e!88380 () Bool)

(assert (=> d!42493 (=> res!65151 e!88380)))

(assert (=> d!42493 (= res!65151 (or ((_ is Nil!1691) lt!69635) ((_ is Nil!1691) (t!6137 lt!69635))))))

(assert (=> d!42493 (= (isStrictlySorted!309 lt!69635) e!88380)))

(declare-fun b!135728 () Bool)

(declare-fun e!88381 () Bool)

(assert (=> b!135728 (= e!88380 e!88381)))

(declare-fun res!65152 () Bool)

(assert (=> b!135728 (=> (not res!65152) (not e!88381))))

(assert (=> b!135728 (= res!65152 (bvslt (_1!1293 (h!2295 lt!69635)) (_1!1293 (h!2295 (t!6137 lt!69635)))))))

(declare-fun b!135729 () Bool)

(assert (=> b!135729 (= e!88381 (isStrictlySorted!309 (t!6137 lt!69635)))))

(assert (= (and d!42493 (not res!65151)) b!135728))

(assert (= (and b!135728 res!65152) b!135729))

(declare-fun m!162041 () Bool)

(assert (=> b!135729 m!162041))

(assert (=> d!40831 d!42493))

(declare-fun b!135731 () Bool)

(declare-fun e!88382 () Option!179)

(declare-fun e!88383 () Option!179)

(assert (=> b!135731 (= e!88382 e!88383)))

(declare-fun c!25408 () Bool)

(assert (=> b!135731 (= c!25408 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69639))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69639)))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!135730 () Bool)

(assert (=> b!135730 (= e!88382 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 lt!69639))))))))

(declare-fun d!42495 () Bool)

(declare-fun c!25407 () Bool)

(assert (=> d!42495 (= c!25407 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69639))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69639)))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!42495 (= (getValueByKey!173 (t!6137 (toList!842 lt!69639)) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!88382)))

(declare-fun b!135733 () Bool)

(assert (=> b!135733 (= e!88383 None!177)))

(declare-fun b!135732 () Bool)

(assert (=> b!135732 (= e!88383 (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69639))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!42495 c!25407) b!135730))

(assert (= (and d!42495 (not c!25407)) b!135731))

(assert (= (and b!135731 c!25408) b!135732))

(assert (= (and b!135731 (not c!25408)) b!135733))

(declare-fun m!162043 () Bool)

(assert (=> b!135732 m!162043))

(assert (=> b!133748 d!42495))

(declare-fun d!42497 () Bool)

(assert (=> d!42497 (= (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69586 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))) lt!69571)) (v!3203 (getValueByKey!173 (toList!842 (+!169 lt!69586 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))) lt!69571)))))

(assert (=> d!41023 d!42497))

(declare-fun b!135735 () Bool)

(declare-fun e!88384 () Option!179)

(declare-fun e!88385 () Option!179)

(assert (=> b!135735 (= e!88384 e!88385)))

(declare-fun c!25410 () Bool)

(assert (=> b!135735 (= c!25410 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69586 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69586 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))) lt!69571))))))

(declare-fun b!135734 () Bool)

(assert (=> b!135734 (= e!88384 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69586 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))))))))

(declare-fun d!42499 () Bool)

(declare-fun c!25409 () Bool)

(assert (=> d!42499 (= c!25409 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69586 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69586 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))))) lt!69571)))))

(assert (=> d!42499 (= (getValueByKey!173 (toList!842 (+!169 lt!69586 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16)))) lt!69571) e!88384)))

(declare-fun b!135737 () Bool)

(assert (=> b!135737 (= e!88385 None!177)))

(declare-fun b!135736 () Bool)

(assert (=> b!135736 (= e!88385 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69586 (tuple2!2565 lt!69575 (zeroValue!2719 newMap!16))))) lt!69571))))

(assert (= (and d!42499 c!25409) b!135734))

(assert (= (and d!42499 (not c!25409)) b!135735))

(assert (= (and b!135735 c!25410) b!135736))

(assert (= (and b!135735 (not c!25410)) b!135737))

(declare-fun m!162045 () Bool)

(assert (=> b!135736 m!162045))

(assert (=> d!41023 d!42499))

(declare-fun d!42501 () Bool)

(assert (=> d!42501 (= ($colon$colon!91 e!86887 (ite c!24707 (h!2295 (toList!842 e!86561)) (tuple2!2565 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))) (Cons!1690 (ite c!24707 (h!2295 (toList!842 e!86561)) (tuple2!2565 (_1!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1293 (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))) e!86887))))

(assert (=> bm!14696 d!42501))

(declare-fun d!42503 () Bool)

(declare-fun res!65153 () Bool)

(declare-fun e!88386 () Bool)

(assert (=> d!42503 (=> res!65153 e!88386)))

(assert (=> d!42503 (= res!65153 (and ((_ is Cons!1690) lt!69606) (= (_1!1293 (h!2295 lt!69606)) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(assert (=> d!42503 (= (containsKey!176 lt!69606 (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) e!88386)))

(declare-fun b!135738 () Bool)

(declare-fun e!88387 () Bool)

(assert (=> b!135738 (= e!88386 e!88387)))

(declare-fun res!65154 () Bool)

(assert (=> b!135738 (=> (not res!65154) (not e!88387))))

(assert (=> b!135738 (= res!65154 (and (or (not ((_ is Cons!1690) lt!69606)) (bvsle (_1!1293 (h!2295 lt!69606)) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) ((_ is Cons!1690) lt!69606) (bvslt (_1!1293 (h!2295 lt!69606)) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun b!135739 () Bool)

(assert (=> b!135739 (= e!88387 (containsKey!176 (t!6137 lt!69606) (_1!1293 (ite (or c!24584 c!24586) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (= (and d!42503 (not res!65153)) b!135738))

(assert (= (and b!135738 res!65154) b!135739))

(declare-fun m!162047 () Bool)

(assert (=> b!135739 m!162047))

(assert (=> b!134040 d!42503))

(declare-fun d!42505 () Bool)

(declare-fun e!88389 () Bool)

(assert (=> d!42505 e!88389))

(declare-fun res!65155 () Bool)

(assert (=> d!42505 (=> res!65155 e!88389)))

(declare-fun lt!70943 () Bool)

(assert (=> d!42505 (= res!65155 (not lt!70943))))

(declare-fun lt!70944 () Bool)

(assert (=> d!42505 (= lt!70943 lt!70944)))

(declare-fun lt!70945 () Unit!4141)

(declare-fun e!88388 () Unit!4141)

(assert (=> d!42505 (= lt!70945 e!88388)))

(declare-fun c!25411 () Bool)

(assert (=> d!42505 (= c!25411 lt!70944)))

(assert (=> d!42505 (= lt!70944 (containsKey!176 (toList!842 lt!70157) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42505 (= (contains!884 lt!70157 (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) lt!70943)))

(declare-fun b!135740 () Bool)

(declare-fun lt!70946 () Unit!4141)

(assert (=> b!135740 (= e!88388 lt!70946)))

(assert (=> b!135740 (= lt!70946 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70157) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))

(assert (=> b!135740 (isDefined!125 (getValueByKey!173 (toList!842 lt!70157) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135741 () Bool)

(declare-fun Unit!4266 () Unit!4141)

(assert (=> b!135741 (= e!88388 Unit!4266)))

(declare-fun b!135742 () Bool)

(assert (=> b!135742 (= e!88389 (isDefined!125 (getValueByKey!173 (toList!842 lt!70157) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!42505 c!25411) b!135740))

(assert (= (and d!42505 (not c!25411)) b!135741))

(assert (= (and d!42505 (not res!65155)) b!135742))

(declare-fun m!162049 () Bool)

(assert (=> d!42505 m!162049))

(declare-fun m!162051 () Bool)

(assert (=> b!135740 m!162051))

(assert (=> b!135740 m!158761))

(assert (=> b!135740 m!158761))

(declare-fun m!162053 () Bool)

(assert (=> b!135740 m!162053))

(assert (=> b!135742 m!158761))

(assert (=> b!135742 m!158761))

(assert (=> b!135742 m!162053))

(assert (=> d!41037 d!42505))

(declare-fun b!135744 () Bool)

(declare-fun e!88390 () Option!179)

(declare-fun e!88391 () Option!179)

(assert (=> b!135744 (= e!88390 e!88391)))

(declare-fun c!25413 () Bool)

(assert (=> b!135744 (= c!25413 (and ((_ is Cons!1690) lt!70158) (not (= (_1!1293 (h!2295 lt!70158)) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!135743 () Bool)

(assert (=> b!135743 (= e!88390 (Some!178 (_2!1293 (h!2295 lt!70158))))))

(declare-fun d!42507 () Bool)

(declare-fun c!25412 () Bool)

(assert (=> d!42507 (= c!25412 (and ((_ is Cons!1690) lt!70158) (= (_1!1293 (h!2295 lt!70158)) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))))))

(assert (=> d!42507 (= (getValueByKey!173 lt!70158 (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) e!88390)))

(declare-fun b!135746 () Bool)

(assert (=> b!135746 (= e!88391 None!177)))

(declare-fun b!135745 () Bool)

(assert (=> b!135745 (= e!88391 (getValueByKey!173 (t!6137 lt!70158) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))

(assert (= (and d!42507 c!25412) b!135743))

(assert (= (and d!42507 (not c!25412)) b!135744))

(assert (= (and b!135744 c!25413) b!135745))

(assert (= (and b!135744 (not c!25413)) b!135746))

(declare-fun m!162055 () Bool)

(assert (=> b!135745 m!162055))

(assert (=> d!41037 d!42507))

(declare-fun d!42509 () Bool)

(assert (=> d!42509 (= (getValueByKey!173 lt!70158 (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70947 () Unit!4141)

(assert (=> d!42509 (= lt!70947 (choose!833 lt!70158 (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))

(declare-fun e!88392 () Bool)

(assert (=> d!42509 e!88392))

(declare-fun res!65156 () Bool)

(assert (=> d!42509 (=> (not res!65156) (not e!88392))))

(assert (=> d!42509 (= res!65156 (isStrictlySorted!309 lt!70158))))

(assert (=> d!42509 (= (lemmaContainsTupThenGetReturnValue!88 lt!70158 (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) lt!70947)))

(declare-fun b!135747 () Bool)

(declare-fun res!65157 () Bool)

(assert (=> b!135747 (=> (not res!65157) (not e!88392))))

(assert (=> b!135747 (= res!65157 (containsKey!176 lt!70158 (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135748 () Bool)

(assert (=> b!135748 (= e!88392 (contains!886 lt!70158 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!42509 res!65156) b!135747))

(assert (= (and b!135747 res!65157) b!135748))

(assert (=> d!42509 m!158755))

(declare-fun m!162057 () Bool)

(assert (=> d!42509 m!162057))

(declare-fun m!162059 () Bool)

(assert (=> d!42509 m!162059))

(declare-fun m!162061 () Bool)

(assert (=> b!135747 m!162061))

(declare-fun m!162063 () Bool)

(assert (=> b!135748 m!162063))

(assert (=> d!41037 d!42509))

(declare-fun b!135749 () Bool)

(declare-fun res!65158 () Bool)

(declare-fun e!88397 () Bool)

(assert (=> b!135749 (=> (not res!65158) (not e!88397))))

(declare-fun lt!70948 () List!1694)

(assert (=> b!135749 (= res!65158 (containsKey!176 lt!70948 (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135750 () Bool)

(declare-fun e!88395 () List!1694)

(declare-fun e!88396 () List!1694)

(assert (=> b!135750 (= e!88395 e!88396)))

(declare-fun c!25417 () Bool)

(assert (=> b!135750 (= c!25417 (and ((_ is Cons!1690) (toList!842 lt!69568)) (= (_1!1293 (h!2295 (toList!842 lt!69568))) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))))))

(declare-fun bm!14886 () Bool)

(declare-fun call!14890 () List!1694)

(declare-fun call!14889 () List!1694)

(assert (=> bm!14886 (= call!14890 call!14889)))

(declare-fun b!135751 () Bool)

(declare-fun e!88393 () List!1694)

(assert (=> b!135751 (= e!88393 call!14890)))

(declare-fun b!135752 () Bool)

(declare-fun c!25416 () Bool)

(assert (=> b!135752 (= c!25416 (and ((_ is Cons!1690) (toList!842 lt!69568)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69568))) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))))))

(assert (=> b!135752 (= e!88396 e!88393)))

(declare-fun b!135753 () Bool)

(assert (=> b!135753 (= e!88397 (contains!886 lt!70948 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))))))

(declare-fun b!135754 () Bool)

(assert (=> b!135754 (= e!88396 call!14889)))

(declare-fun d!42511 () Bool)

(assert (=> d!42511 e!88397))

(declare-fun res!65159 () Bool)

(assert (=> d!42511 (=> (not res!65159) (not e!88397))))

(assert (=> d!42511 (= res!65159 (isStrictlySorted!309 lt!70948))))

(assert (=> d!42511 (= lt!70948 e!88395)))

(declare-fun c!25415 () Bool)

(assert (=> d!42511 (= c!25415 (and ((_ is Cons!1690) (toList!842 lt!69568)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69568))) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))))))))

(assert (=> d!42511 (isStrictlySorted!309 (toList!842 lt!69568))))

(assert (=> d!42511 (= (insertStrictlySorted!91 (toList!842 lt!69568) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))) lt!70948)))

(declare-fun b!135755 () Bool)

(declare-fun e!88394 () List!1694)

(assert (=> b!135755 (= e!88394 (ite c!25417 (t!6137 (toList!842 lt!69568)) (ite c!25416 (Cons!1690 (h!2295 (toList!842 lt!69568)) (t!6137 (toList!842 lt!69568))) Nil!1691)))))

(declare-fun b!135756 () Bool)

(declare-fun call!14891 () List!1694)

(assert (=> b!135756 (= e!88395 call!14891)))

(declare-fun b!135757 () Bool)

(assert (=> b!135757 (= e!88393 call!14890)))

(declare-fun b!135758 () Bool)

(assert (=> b!135758 (= e!88394 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69568)) (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))

(declare-fun bm!14887 () Bool)

(assert (=> bm!14887 (= call!14889 call!14891)))

(declare-fun bm!14888 () Bool)

(assert (=> bm!14888 (= call!14891 ($colon$colon!91 e!88394 (ite c!25415 (h!2295 (toList!842 lt!69568)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69583 (zeroValue!2719 newMap!16)))))))))

(declare-fun c!25414 () Bool)

(assert (=> bm!14888 (= c!25414 c!25415)))

(assert (= (and d!42511 c!25415) b!135756))

(assert (= (and d!42511 (not c!25415)) b!135750))

(assert (= (and b!135750 c!25417) b!135754))

(assert (= (and b!135750 (not c!25417)) b!135752))

(assert (= (and b!135752 c!25416) b!135757))

(assert (= (and b!135752 (not c!25416)) b!135751))

(assert (= (or b!135757 b!135751) bm!14886))

(assert (= (or b!135754 bm!14886) bm!14887))

(assert (= (or b!135756 bm!14887) bm!14888))

(assert (= (and bm!14888 c!25414) b!135758))

(assert (= (and bm!14888 (not c!25414)) b!135755))

(assert (= (and d!42511 res!65159) b!135749))

(assert (= (and b!135749 res!65158) b!135753))

(declare-fun m!162065 () Bool)

(assert (=> b!135753 m!162065))

(declare-fun m!162067 () Bool)

(assert (=> b!135758 m!162067))

(declare-fun m!162069 () Bool)

(assert (=> bm!14888 m!162069))

(declare-fun m!162071 () Bool)

(assert (=> b!135749 m!162071))

(declare-fun m!162073 () Bool)

(assert (=> d!42511 m!162073))

(declare-fun m!162075 () Bool)

(assert (=> d!42511 m!162075))

(assert (=> d!41037 d!42511))

(declare-fun d!42513 () Bool)

(declare-fun e!88399 () Bool)

(assert (=> d!42513 e!88399))

(declare-fun res!65160 () Bool)

(assert (=> d!42513 (=> res!65160 e!88399)))

(declare-fun lt!70949 () Bool)

(assert (=> d!42513 (= res!65160 (not lt!70949))))

(declare-fun lt!70950 () Bool)

(assert (=> d!42513 (= lt!70949 lt!70950)))

(declare-fun lt!70951 () Unit!4141)

(declare-fun e!88398 () Unit!4141)

(assert (=> d!42513 (= lt!70951 e!88398)))

(declare-fun c!25418 () Bool)

(assert (=> d!42513 (= c!25418 lt!70950)))

(assert (=> d!42513 (= lt!70950 (containsKey!176 (toList!842 (+!169 lt!69690 (tuple2!2565 lt!69692 lt!69693))) lt!69696))))

(assert (=> d!42513 (= (contains!884 (+!169 lt!69690 (tuple2!2565 lt!69692 lt!69693)) lt!69696) lt!70949)))

(declare-fun b!135759 () Bool)

(declare-fun lt!70952 () Unit!4141)

(assert (=> b!135759 (= e!88398 lt!70952)))

(assert (=> b!135759 (= lt!70952 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69690 (tuple2!2565 lt!69692 lt!69693))) lt!69696))))

(assert (=> b!135759 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69690 (tuple2!2565 lt!69692 lt!69693))) lt!69696))))

(declare-fun b!135760 () Bool)

(declare-fun Unit!4267 () Unit!4141)

(assert (=> b!135760 (= e!88398 Unit!4267)))

(declare-fun b!135761 () Bool)

(assert (=> b!135761 (= e!88399 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69690 (tuple2!2565 lt!69692 lt!69693))) lt!69696)))))

(assert (= (and d!42513 c!25418) b!135759))

(assert (= (and d!42513 (not c!25418)) b!135760))

(assert (= (and d!42513 (not res!65160)) b!135761))

(declare-fun m!162077 () Bool)

(assert (=> d!42513 m!162077))

(declare-fun m!162079 () Bool)

(assert (=> b!135759 m!162079))

(declare-fun m!162081 () Bool)

(assert (=> b!135759 m!162081))

(assert (=> b!135759 m!162081))

(declare-fun m!162083 () Bool)

(assert (=> b!135759 m!162083))

(assert (=> b!135761 m!162081))

(assert (=> b!135761 m!162081))

(assert (=> b!135761 m!162083))

(assert (=> b!133274 d!42513))

(declare-fun d!42515 () Bool)

(declare-fun e!88400 () Bool)

(assert (=> d!42515 e!88400))

(declare-fun res!65162 () Bool)

(assert (=> d!42515 (=> (not res!65162) (not e!88400))))

(declare-fun lt!70955 () ListLongMap!1653)

(assert (=> d!42515 (= res!65162 (contains!884 lt!70955 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70956 () List!1694)

(assert (=> d!42515 (= lt!70955 (ListLongMap!1654 lt!70956))))

(declare-fun lt!70953 () Unit!4141)

(declare-fun lt!70954 () Unit!4141)

(assert (=> d!42515 (= lt!70953 lt!70954)))

(assert (=> d!42515 (= (getValueByKey!173 lt!70956 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42515 (= lt!70954 (lemmaContainsTupThenGetReturnValue!88 lt!70956 (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42515 (= lt!70956 (insertStrictlySorted!91 (toList!842 call!14689) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42515 (= (+!169 call!14689 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70955)))

(declare-fun b!135762 () Bool)

(declare-fun res!65161 () Bool)

(assert (=> b!135762 (=> (not res!65161) (not e!88400))))

(assert (=> b!135762 (= res!65161 (= (getValueByKey!173 (toList!842 lt!70955) (_1!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135763 () Bool)

(assert (=> b!135763 (= e!88400 (contains!886 (toList!842 lt!70955) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42515 res!65162) b!135762))

(assert (= (and b!135762 res!65161) b!135763))

(declare-fun m!162085 () Bool)

(assert (=> d!42515 m!162085))

(declare-fun m!162087 () Bool)

(assert (=> d!42515 m!162087))

(declare-fun m!162089 () Bool)

(assert (=> d!42515 m!162089))

(declare-fun m!162091 () Bool)

(assert (=> d!42515 m!162091))

(declare-fun m!162093 () Bool)

(assert (=> b!135762 m!162093))

(declare-fun m!162095 () Bool)

(assert (=> b!135763 m!162095))

(assert (=> b!133274 d!42515))

(declare-fun d!42517 () Bool)

(assert (=> d!42517 (not (contains!884 (+!169 lt!69690 (tuple2!2565 lt!69692 lt!69693)) lt!69696))))

(declare-fun lt!70957 () Unit!4141)

(assert (=> d!42517 (= lt!70957 (choose!836 lt!69690 lt!69692 lt!69693 lt!69696))))

(declare-fun e!88401 () Bool)

(assert (=> d!42517 e!88401))

(declare-fun res!65163 () Bool)

(assert (=> d!42517 (=> (not res!65163) (not e!88401))))

(assert (=> d!42517 (= res!65163 (not (contains!884 lt!69690 lt!69696)))))

(assert (=> d!42517 (= (addStillNotContains!63 lt!69690 lt!69692 lt!69693 lt!69696) lt!70957)))

(declare-fun b!135764 () Bool)

(assert (=> b!135764 (= e!88401 (not (= lt!69692 lt!69696)))))

(assert (= (and d!42517 res!65163) b!135764))

(assert (=> d!42517 m!157321))

(assert (=> d!42517 m!157321))

(assert (=> d!42517 m!157327))

(declare-fun m!162097 () Bool)

(assert (=> d!42517 m!162097))

(declare-fun m!162099 () Bool)

(assert (=> d!42517 m!162099))

(assert (=> b!133274 d!42517))

(assert (=> b!133274 d!41713))

(declare-fun d!42519 () Bool)

(declare-fun e!88402 () Bool)

(assert (=> d!42519 e!88402))

(declare-fun res!65165 () Bool)

(assert (=> d!42519 (=> (not res!65165) (not e!88402))))

(declare-fun lt!70960 () ListLongMap!1653)

(assert (=> d!42519 (= res!65165 (contains!884 lt!70960 (_1!1293 (tuple2!2565 lt!69692 lt!69693))))))

(declare-fun lt!70961 () List!1694)

(assert (=> d!42519 (= lt!70960 (ListLongMap!1654 lt!70961))))

(declare-fun lt!70958 () Unit!4141)

(declare-fun lt!70959 () Unit!4141)

(assert (=> d!42519 (= lt!70958 lt!70959)))

(assert (=> d!42519 (= (getValueByKey!173 lt!70961 (_1!1293 (tuple2!2565 lt!69692 lt!69693))) (Some!178 (_2!1293 (tuple2!2565 lt!69692 lt!69693))))))

(assert (=> d!42519 (= lt!70959 (lemmaContainsTupThenGetReturnValue!88 lt!70961 (_1!1293 (tuple2!2565 lt!69692 lt!69693)) (_2!1293 (tuple2!2565 lt!69692 lt!69693))))))

(assert (=> d!42519 (= lt!70961 (insertStrictlySorted!91 (toList!842 lt!69690) (_1!1293 (tuple2!2565 lt!69692 lt!69693)) (_2!1293 (tuple2!2565 lt!69692 lt!69693))))))

(assert (=> d!42519 (= (+!169 lt!69690 (tuple2!2565 lt!69692 lt!69693)) lt!70960)))

(declare-fun b!135765 () Bool)

(declare-fun res!65164 () Bool)

(assert (=> b!135765 (=> (not res!65164) (not e!88402))))

(assert (=> b!135765 (= res!65164 (= (getValueByKey!173 (toList!842 lt!70960) (_1!1293 (tuple2!2565 lt!69692 lt!69693))) (Some!178 (_2!1293 (tuple2!2565 lt!69692 lt!69693)))))))

(declare-fun b!135766 () Bool)

(assert (=> b!135766 (= e!88402 (contains!886 (toList!842 lt!70960) (tuple2!2565 lt!69692 lt!69693)))))

(assert (= (and d!42519 res!65165) b!135765))

(assert (= (and b!135765 res!65164) b!135766))

(declare-fun m!162101 () Bool)

(assert (=> d!42519 m!162101))

(declare-fun m!162103 () Bool)

(assert (=> d!42519 m!162103))

(declare-fun m!162105 () Bool)

(assert (=> d!42519 m!162105))

(declare-fun m!162107 () Bool)

(assert (=> d!42519 m!162107))

(declare-fun m!162109 () Bool)

(assert (=> b!135765 m!162109))

(declare-fun m!162111 () Bool)

(assert (=> b!135766 m!162111))

(assert (=> b!133274 d!42519))

(assert (=> bm!14728 d!40459))

(declare-fun d!42521 () Bool)

(assert (=> d!42521 (= (isEmpty!416 (getValueByKey!173 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284))))) (not ((_ is Some!178) (getValueByKey!173 (toList!842 e!86556) (ite c!24562 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (select (arr!2252 (_keys!4613 newMap!16)) (index!3237 lt!69284)))))))))

(assert (=> d!40581 d!42521))

(assert (=> b!133504 d!42279))

(assert (=> b!133504 d!41469))

(declare-fun d!42523 () Bool)

(assert (=> d!42523 (= (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69513 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69498)) (v!3203 (getValueByKey!173 (toList!842 (+!169 lt!69513 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69498)))))

(assert (=> d!40739 d!42523))

(declare-fun b!135768 () Bool)

(declare-fun e!88403 () Option!179)

(declare-fun e!88404 () Option!179)

(assert (=> b!135768 (= e!88403 e!88404)))

(declare-fun c!25420 () Bool)

(assert (=> b!135768 (= c!25420 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69513 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69513 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) lt!69498))))))

(declare-fun b!135767 () Bool)

(assert (=> b!135767 (= e!88403 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69513 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))))

(declare-fun d!42525 () Bool)

(declare-fun c!25419 () Bool)

(assert (=> d!42525 (= c!25419 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69513 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69513 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))) lt!69498)))))

(assert (=> d!42525 (= (getValueByKey!173 (toList!842 (+!169 lt!69513 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) lt!69498) e!88403)))

(declare-fun b!135770 () Bool)

(assert (=> b!135770 (= e!88404 None!177)))

(declare-fun b!135769 () Bool)

(assert (=> b!135769 (= e!88404 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69513 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))) lt!69498))))

(assert (= (and d!42525 c!25419) b!135767))

(assert (= (and d!42525 (not c!25419)) b!135768))

(assert (= (and b!135768 c!25420) b!135769))

(assert (= (and b!135768 (not c!25420)) b!135770))

(declare-fun m!162113 () Bool)

(assert (=> b!135769 m!162113))

(assert (=> d!40739 d!42525))

(declare-fun d!42527 () Bool)

(declare-fun e!88406 () Bool)

(assert (=> d!42527 e!88406))

(declare-fun res!65166 () Bool)

(assert (=> d!42527 (=> res!65166 e!88406)))

(declare-fun lt!70962 () Bool)

(assert (=> d!42527 (= res!65166 (not lt!70962))))

(declare-fun lt!70963 () Bool)

(assert (=> d!42527 (= lt!70962 lt!70963)))

(declare-fun lt!70964 () Unit!4141)

(declare-fun e!88405 () Unit!4141)

(assert (=> d!42527 (= lt!70964 e!88405)))

(declare-fun c!25421 () Bool)

(assert (=> d!42527 (= c!25421 lt!70963)))

(assert (=> d!42527 (= lt!70963 (containsKey!176 (toList!842 lt!70071) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))

(assert (=> d!42527 (= (contains!884 lt!70071 (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))) lt!70962)))

(declare-fun b!135771 () Bool)

(declare-fun lt!70965 () Unit!4141)

(assert (=> b!135771 (= e!88405 lt!70965)))

(assert (=> b!135771 (= lt!70965 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70071) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))

(assert (=> b!135771 (isDefined!125 (getValueByKey!173 (toList!842 lt!70071) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135772 () Bool)

(declare-fun Unit!4268 () Unit!4141)

(assert (=> b!135772 (= e!88405 Unit!4268)))

(declare-fun b!135773 () Bool)

(assert (=> b!135773 (= e!88406 (isDefined!125 (getValueByKey!173 (toList!842 lt!70071) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!42527 c!25421) b!135771))

(assert (= (and d!42527 (not c!25421)) b!135772))

(assert (= (and d!42527 (not res!65166)) b!135773))

(declare-fun m!162115 () Bool)

(assert (=> d!42527 m!162115))

(declare-fun m!162117 () Bool)

(assert (=> b!135771 m!162117))

(assert (=> b!135771 m!158453))

(assert (=> b!135771 m!158453))

(declare-fun m!162119 () Bool)

(assert (=> b!135771 m!162119))

(assert (=> b!135773 m!158453))

(assert (=> b!135773 m!158453))

(assert (=> b!135773 m!162119))

(assert (=> d!40915 d!42527))

(declare-fun b!135775 () Bool)

(declare-fun e!88407 () Option!179)

(declare-fun e!88408 () Option!179)

(assert (=> b!135775 (= e!88407 e!88408)))

(declare-fun c!25423 () Bool)

(assert (=> b!135775 (= c!25423 (and ((_ is Cons!1690) lt!70072) (not (= (_1!1293 (h!2295 lt!70072)) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))))

(declare-fun b!135774 () Bool)

(assert (=> b!135774 (= e!88407 (Some!178 (_2!1293 (h!2295 lt!70072))))))

(declare-fun d!42529 () Bool)

(declare-fun c!25422 () Bool)

(assert (=> d!42529 (= c!25422 (and ((_ is Cons!1690) lt!70072) (= (_1!1293 (h!2295 lt!70072)) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))))))

(assert (=> d!42529 (= (getValueByKey!173 lt!70072 (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))) e!88407)))

(declare-fun b!135777 () Bool)

(assert (=> b!135777 (= e!88408 None!177)))

(declare-fun b!135776 () Bool)

(assert (=> b!135776 (= e!88408 (getValueByKey!173 (t!6137 lt!70072) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))

(assert (= (and d!42529 c!25422) b!135774))

(assert (= (and d!42529 (not c!25422)) b!135775))

(assert (= (and b!135775 c!25423) b!135776))

(assert (= (and b!135775 (not c!25423)) b!135777))

(declare-fun m!162121 () Bool)

(assert (=> b!135776 m!162121))

(assert (=> d!40915 d!42529))

(declare-fun d!42531 () Bool)

(assert (=> d!42531 (= (getValueByKey!173 lt!70072 (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))

(declare-fun lt!70966 () Unit!4141)

(assert (=> d!42531 (= lt!70966 (choose!833 lt!70072 (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))

(declare-fun e!88409 () Bool)

(assert (=> d!42531 e!88409))

(declare-fun res!65167 () Bool)

(assert (=> d!42531 (=> (not res!65167) (not e!88409))))

(assert (=> d!42531 (= res!65167 (isStrictlySorted!309 lt!70072))))

(assert (=> d!42531 (= (lemmaContainsTupThenGetReturnValue!88 lt!70072 (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))) lt!70966)))

(declare-fun b!135778 () Bool)

(declare-fun res!65168 () Bool)

(assert (=> b!135778 (=> (not res!65168) (not e!88409))))

(assert (=> b!135778 (= res!65168 (containsKey!176 lt!70072 (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135779 () Bool)

(assert (=> b!135779 (= e!88409 (contains!886 lt!70072 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))))))

(assert (= (and d!42531 res!65167) b!135778))

(assert (= (and b!135778 res!65168) b!135779))

(assert (=> d!42531 m!158447))

(declare-fun m!162123 () Bool)

(assert (=> d!42531 m!162123))

(declare-fun m!162125 () Bool)

(assert (=> d!42531 m!162125))

(declare-fun m!162127 () Bool)

(assert (=> b!135778 m!162127))

(declare-fun m!162129 () Bool)

(assert (=> b!135779 m!162129))

(assert (=> d!40915 d!42531))

(declare-fun b!135780 () Bool)

(declare-fun res!65169 () Bool)

(declare-fun e!88414 () Bool)

(assert (=> b!135780 (=> (not res!65169) (not e!88414))))

(declare-fun lt!70967 () List!1694)

(assert (=> b!135780 (= res!65169 (containsKey!176 lt!70967 (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))

(declare-fun b!135781 () Bool)

(declare-fun e!88412 () List!1694)

(declare-fun e!88413 () List!1694)

(assert (=> b!135781 (= e!88412 e!88413)))

(declare-fun c!25427 () Bool)

(assert (=> b!135781 (= c!25427 (and ((_ is Cons!1690) (toList!842 lt!69538)) (= (_1!1293 (h!2295 (toList!842 lt!69538))) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))))))

(declare-fun bm!14889 () Bool)

(declare-fun call!14893 () List!1694)

(declare-fun call!14892 () List!1694)

(assert (=> bm!14889 (= call!14893 call!14892)))

(declare-fun b!135782 () Bool)

(declare-fun e!88410 () List!1694)

(assert (=> b!135782 (= e!88410 call!14893)))

(declare-fun b!135783 () Bool)

(declare-fun c!25426 () Bool)

(assert (=> b!135783 (= c!25426 (and ((_ is Cons!1690) (toList!842 lt!69538)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69538))) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))))))

(assert (=> b!135783 (= e!88413 e!88410)))

(declare-fun b!135784 () Bool)

(assert (=> b!135784 (= e!88414 (contains!886 lt!70967 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))))))

(declare-fun b!135785 () Bool)

(assert (=> b!135785 (= e!88413 call!14892)))

(declare-fun d!42533 () Bool)

(assert (=> d!42533 e!88414))

(declare-fun res!65170 () Bool)

(assert (=> d!42533 (=> (not res!65170) (not e!88414))))

(assert (=> d!42533 (= res!65170 (isStrictlySorted!309 lt!70967))))

(assert (=> d!42533 (= lt!70967 e!88412)))

(declare-fun c!25425 () Bool)

(assert (=> d!42533 (= c!25425 (and ((_ is Cons!1690) (toList!842 lt!69538)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69538))) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))))))))

(assert (=> d!42533 (isStrictlySorted!309 (toList!842 lt!69538))))

(assert (=> d!42533 (= (insertStrictlySorted!91 (toList!842 lt!69538) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))) lt!70967)))

(declare-fun e!88411 () List!1694)

(declare-fun b!135786 () Bool)

(assert (=> b!135786 (= e!88411 (ite c!25427 (t!6137 (toList!842 lt!69538)) (ite c!25426 (Cons!1690 (h!2295 (toList!842 lt!69538)) (t!6137 (toList!842 lt!69538))) Nil!1691)))))

(declare-fun b!135787 () Bool)

(declare-fun call!14894 () List!1694)

(assert (=> b!135787 (= e!88412 call!14894)))

(declare-fun b!135788 () Bool)

(assert (=> b!135788 (= e!88410 call!14893)))

(declare-fun b!135789 () Bool)

(assert (=> b!135789 (= e!88411 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69538)) (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))

(declare-fun bm!14890 () Bool)

(assert (=> bm!14890 (= call!14892 call!14894)))

(declare-fun bm!14891 () Bool)

(assert (=> bm!14891 (= call!14894 ($colon$colon!91 e!88411 (ite c!25425 (h!2295 (toList!842 lt!69538)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69527 (zeroValue!2719 newMap!16)))))))))

(declare-fun c!25424 () Bool)

(assert (=> bm!14891 (= c!25424 c!25425)))

(assert (= (and d!42533 c!25425) b!135787))

(assert (= (and d!42533 (not c!25425)) b!135781))

(assert (= (and b!135781 c!25427) b!135785))

(assert (= (and b!135781 (not c!25427)) b!135783))

(assert (= (and b!135783 c!25426) b!135788))

(assert (= (and b!135783 (not c!25426)) b!135782))

(assert (= (or b!135788 b!135782) bm!14889))

(assert (= (or b!135785 bm!14889) bm!14890))

(assert (= (or b!135787 bm!14890) bm!14891))

(assert (= (and bm!14891 c!25424) b!135789))

(assert (= (and bm!14891 (not c!25424)) b!135786))

(assert (= (and d!42533 res!65170) b!135780))

(assert (= (and b!135780 res!65169) b!135784))

(declare-fun m!162131 () Bool)

(assert (=> b!135784 m!162131))

(declare-fun m!162133 () Bool)

(assert (=> b!135789 m!162133))

(declare-fun m!162135 () Bool)

(assert (=> bm!14891 m!162135))

(declare-fun m!162137 () Bool)

(assert (=> b!135780 m!162137))

(declare-fun m!162139 () Bool)

(assert (=> d!42533 m!162139))

(declare-fun m!162141 () Bool)

(assert (=> d!42533 m!162141))

(assert (=> d!40915 d!42533))

(declare-fun d!42535 () Bool)

(declare-fun e!88416 () Bool)

(assert (=> d!42535 e!88416))

(declare-fun res!65171 () Bool)

(assert (=> d!42535 (=> res!65171 e!88416)))

(declare-fun lt!70968 () Bool)

(assert (=> d!42535 (= res!65171 (not lt!70968))))

(declare-fun lt!70969 () Bool)

(assert (=> d!42535 (= lt!70968 lt!70969)))

(declare-fun lt!70970 () Unit!4141)

(declare-fun e!88415 () Unit!4141)

(assert (=> d!42535 (= lt!70970 e!88415)))

(declare-fun c!25428 () Bool)

(assert (=> d!42535 (= c!25428 lt!70969)))

(assert (=> d!42535 (= lt!70969 (containsKey!176 (toList!842 lt!69989) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42535 (= (contains!884 lt!69989 #b1000000000000000000000000000000000000000000000000000000000000000) lt!70968)))

(declare-fun b!135790 () Bool)

(declare-fun lt!70971 () Unit!4141)

(assert (=> b!135790 (= e!88415 lt!70971)))

(assert (=> b!135790 (= lt!70971 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69989) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135790 (isDefined!125 (getValueByKey!173 (toList!842 lt!69989) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135791 () Bool)

(declare-fun Unit!4269 () Unit!4141)

(assert (=> b!135791 (= e!88415 Unit!4269)))

(declare-fun b!135792 () Bool)

(assert (=> b!135792 (= e!88416 (isDefined!125 (getValueByKey!173 (toList!842 lt!69989) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42535 c!25428) b!135790))

(assert (= (and d!42535 (not c!25428)) b!135791))

(assert (= (and d!42535 (not res!65171)) b!135792))

(declare-fun m!162143 () Bool)

(assert (=> d!42535 m!162143))

(declare-fun m!162145 () Bool)

(assert (=> b!135790 m!162145))

(declare-fun m!162147 () Bool)

(assert (=> b!135790 m!162147))

(assert (=> b!135790 m!162147))

(declare-fun m!162149 () Bool)

(assert (=> b!135790 m!162149))

(assert (=> b!135792 m!162147))

(assert (=> b!135792 m!162147))

(assert (=> b!135792 m!162149))

(assert (=> b!133776 d!42535))

(declare-fun d!42537 () Bool)

(declare-fun e!88418 () Bool)

(assert (=> d!42537 e!88418))

(declare-fun res!65172 () Bool)

(assert (=> d!42537 (=> res!65172 e!88418)))

(declare-fun lt!70972 () Bool)

(assert (=> d!42537 (= res!65172 (not lt!70972))))

(declare-fun lt!70973 () Bool)

(assert (=> d!42537 (= lt!70972 lt!70973)))

(declare-fun lt!70974 () Unit!4141)

(declare-fun e!88417 () Unit!4141)

(assert (=> d!42537 (= lt!70974 e!88417)))

(declare-fun c!25429 () Bool)

(assert (=> d!42537 (= c!25429 lt!70973)))

(assert (=> d!42537 (= lt!70973 (containsKey!176 (toList!842 lt!69804) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42537 (= (contains!884 lt!69804 #b0000000000000000000000000000000000000000000000000000000000000000) lt!70972)))

(declare-fun b!135793 () Bool)

(declare-fun lt!70975 () Unit!4141)

(assert (=> b!135793 (= e!88417 lt!70975)))

(assert (=> b!135793 (= lt!70975 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69804) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135793 (isDefined!125 (getValueByKey!173 (toList!842 lt!69804) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135794 () Bool)

(declare-fun Unit!4270 () Unit!4141)

(assert (=> b!135794 (= e!88417 Unit!4270)))

(declare-fun b!135795 () Bool)

(assert (=> b!135795 (= e!88418 (isDefined!125 (getValueByKey!173 (toList!842 lt!69804) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42537 c!25429) b!135793))

(assert (= (and d!42537 (not c!25429)) b!135794))

(assert (= (and d!42537 (not res!65172)) b!135795))

(declare-fun m!162151 () Bool)

(assert (=> d!42537 m!162151))

(declare-fun m!162153 () Bool)

(assert (=> b!135793 m!162153))

(assert (=> b!135793 m!159579))

(assert (=> b!135793 m!159579))

(declare-fun m!162155 () Bool)

(assert (=> b!135793 m!162155))

(assert (=> b!135795 m!159579))

(assert (=> b!135795 m!159579))

(assert (=> b!135795 m!162155))

(assert (=> bm!14717 d!42537))

(declare-fun d!42539 () Bool)

(declare-fun e!88420 () Bool)

(assert (=> d!42539 e!88420))

(declare-fun res!65173 () Bool)

(assert (=> d!42539 (=> res!65173 e!88420)))

(declare-fun lt!70976 () Bool)

(assert (=> d!42539 (= res!65173 (not lt!70976))))

(declare-fun lt!70977 () Bool)

(assert (=> d!42539 (= lt!70976 lt!70977)))

(declare-fun lt!70978 () Unit!4141)

(declare-fun e!88419 () Unit!4141)

(assert (=> d!42539 (= lt!70978 e!88419)))

(declare-fun c!25430 () Bool)

(assert (=> d!42539 (= c!25430 lt!70977)))

(assert (=> d!42539 (= lt!70977 (containsKey!176 (toList!842 lt!69666) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42539 (= (contains!884 lt!69666 (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70976)))

(declare-fun b!135796 () Bool)

(declare-fun lt!70979 () Unit!4141)

(assert (=> b!135796 (= e!88419 lt!70979)))

(assert (=> b!135796 (= lt!70979 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69666) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!135796 (isDefined!125 (getValueByKey!173 (toList!842 lt!69666) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135797 () Bool)

(declare-fun Unit!4271 () Unit!4141)

(assert (=> b!135797 (= e!88419 Unit!4271)))

(declare-fun b!135798 () Bool)

(assert (=> b!135798 (= e!88420 (isDefined!125 (getValueByKey!173 (toList!842 lt!69666) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42539 c!25430) b!135796))

(assert (= (and d!42539 (not c!25430)) b!135797))

(assert (= (and d!42539 (not res!65173)) b!135798))

(declare-fun m!162157 () Bool)

(assert (=> d!42539 m!162157))

(declare-fun m!162159 () Bool)

(assert (=> b!135796 m!162159))

(assert (=> b!135796 m!157255))

(assert (=> b!135796 m!157255))

(declare-fun m!162161 () Bool)

(assert (=> b!135796 m!162161))

(assert (=> b!135798 m!157255))

(assert (=> b!135798 m!157255))

(assert (=> b!135798 m!162161))

(assert (=> d!40585 d!42539))

(declare-fun b!135800 () Bool)

(declare-fun e!88421 () Option!179)

(declare-fun e!88422 () Option!179)

(assert (=> b!135800 (= e!88421 e!88422)))

(declare-fun c!25432 () Bool)

(assert (=> b!135800 (= c!25432 (and ((_ is Cons!1690) lt!69667) (not (= (_1!1293 (h!2295 lt!69667)) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!135799 () Bool)

(assert (=> b!135799 (= e!88421 (Some!178 (_2!1293 (h!2295 lt!69667))))))

(declare-fun d!42541 () Bool)

(declare-fun c!25431 () Bool)

(assert (=> d!42541 (= c!25431 (and ((_ is Cons!1690) lt!69667) (= (_1!1293 (h!2295 lt!69667)) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42541 (= (getValueByKey!173 lt!69667 (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!88421)))

(declare-fun b!135802 () Bool)

(assert (=> b!135802 (= e!88422 None!177)))

(declare-fun b!135801 () Bool)

(assert (=> b!135801 (= e!88422 (getValueByKey!173 (t!6137 lt!69667) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42541 c!25431) b!135799))

(assert (= (and d!42541 (not c!25431)) b!135800))

(assert (= (and b!135800 c!25432) b!135801))

(assert (= (and b!135800 (not c!25432)) b!135802))

(declare-fun m!162163 () Bool)

(assert (=> b!135801 m!162163))

(assert (=> d!40585 d!42541))

(declare-fun d!42543 () Bool)

(assert (=> d!42543 (= (getValueByKey!173 lt!69667 (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70980 () Unit!4141)

(assert (=> d!42543 (= lt!70980 (choose!833 lt!69667 (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88423 () Bool)

(assert (=> d!42543 e!88423))

(declare-fun res!65174 () Bool)

(assert (=> d!42543 (=> (not res!65174) (not e!88423))))

(assert (=> d!42543 (= res!65174 (isStrictlySorted!309 lt!69667))))

(assert (=> d!42543 (= (lemmaContainsTupThenGetReturnValue!88 lt!69667 (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70980)))

(declare-fun b!135803 () Bool)

(declare-fun res!65175 () Bool)

(assert (=> b!135803 (=> (not res!65175) (not e!88423))))

(assert (=> b!135803 (= res!65175 (containsKey!176 lt!69667 (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135804 () Bool)

(assert (=> b!135804 (= e!88423 (contains!886 lt!69667 (tuple2!2565 (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42543 res!65174) b!135803))

(assert (= (and b!135803 res!65175) b!135804))

(assert (=> d!42543 m!157249))

(declare-fun m!162165 () Bool)

(assert (=> d!42543 m!162165))

(declare-fun m!162167 () Bool)

(assert (=> d!42543 m!162167))

(declare-fun m!162169 () Bool)

(assert (=> b!135803 m!162169))

(declare-fun m!162171 () Bool)

(assert (=> b!135804 m!162171))

(assert (=> d!40585 d!42543))

(declare-fun b!135805 () Bool)

(declare-fun res!65176 () Bool)

(declare-fun e!88428 () Bool)

(assert (=> b!135805 (=> (not res!65176) (not e!88428))))

(declare-fun lt!70981 () List!1694)

(assert (=> b!135805 (= res!65176 (containsKey!176 lt!70981 (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135806 () Bool)

(declare-fun e!88426 () List!1694)

(declare-fun e!88427 () List!1694)

(assert (=> b!135806 (= e!88426 e!88427)))

(declare-fun c!25436 () Bool)

(assert (=> b!135806 (= c!25436 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (= (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!14892 () Bool)

(declare-fun call!14896 () List!1694)

(declare-fun call!14895 () List!1694)

(assert (=> bm!14892 (= call!14896 call!14895)))

(declare-fun b!135807 () Bool)

(declare-fun e!88424 () List!1694)

(assert (=> b!135807 (= e!88424 call!14896)))

(declare-fun b!135808 () Bool)

(declare-fun c!25435 () Bool)

(assert (=> b!135808 (= c!25435 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvsgt (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!135808 (= e!88427 e!88424)))

(declare-fun b!135809 () Bool)

(assert (=> b!135809 (= e!88428 (contains!886 lt!70981 (tuple2!2565 (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135810 () Bool)

(assert (=> b!135810 (= e!88427 call!14895)))

(declare-fun d!42545 () Bool)

(assert (=> d!42545 e!88428))

(declare-fun res!65177 () Bool)

(assert (=> d!42545 (=> (not res!65177) (not e!88428))))

(assert (=> d!42545 (= res!65177 (isStrictlySorted!309 lt!70981))))

(assert (=> d!42545 (= lt!70981 e!88426)))

(declare-fun c!25434 () Bool)

(assert (=> d!42545 (= c!25434 (and ((_ is Cons!1690) (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (bvslt (_1!1293 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42545 (isStrictlySorted!309 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))))

(assert (=> d!42545 (= (insertStrictlySorted!91 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!70981)))

(declare-fun e!88425 () List!1694)

(declare-fun b!135811 () Bool)

(assert (=> b!135811 (= e!88425 (ite c!25436 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (ite c!25435 (Cons!1690 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16))))) Nil!1691)))))

(declare-fun b!135812 () Bool)

(declare-fun call!14897 () List!1694)

(assert (=> b!135812 (= e!88426 call!14897)))

(declare-fun b!135813 () Bool)

(assert (=> b!135813 (= e!88424 call!14896)))

(declare-fun b!135814 () Bool)

(assert (=> b!135814 (= e!88425 (insertStrictlySorted!91 (t!6137 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!14893 () Bool)

(assert (=> bm!14893 (= call!14895 call!14897)))

(declare-fun bm!14894 () Bool)

(assert (=> bm!14894 (= call!14897 ($colon$colon!91 e!88425 (ite c!25434 (h!2295 (toList!842 (getCurrentListMap!518 (_keys!4613 newMap!16) (_values!2847 newMap!16) (mask!7164 newMap!16) (extraKeys!2629 newMap!16) (zeroValue!2719 newMap!16) (minValue!2719 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2864 newMap!16)))) (tuple2!2565 (_1!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25433 () Bool)

(assert (=> bm!14894 (= c!25433 c!25434)))

(assert (= (and d!42545 c!25434) b!135812))

(assert (= (and d!42545 (not c!25434)) b!135806))

(assert (= (and b!135806 c!25436) b!135810))

(assert (= (and b!135806 (not c!25436)) b!135808))

(assert (= (and b!135808 c!25435) b!135813))

(assert (= (and b!135808 (not c!25435)) b!135807))

(assert (= (or b!135813 b!135807) bm!14892))

(assert (= (or b!135810 bm!14892) bm!14893))

(assert (= (or b!135812 bm!14893) bm!14894))

(assert (= (and bm!14894 c!25433) b!135814))

(assert (= (and bm!14894 (not c!25433)) b!135811))

(assert (= (and d!42545 res!65177) b!135805))

(assert (= (and b!135805 res!65176) b!135809))

(declare-fun m!162173 () Bool)

(assert (=> b!135809 m!162173))

(declare-fun m!162175 () Bool)

(assert (=> b!135814 m!162175))

(declare-fun m!162177 () Bool)

(assert (=> bm!14894 m!162177))

(declare-fun m!162179 () Bool)

(assert (=> b!135805 m!162179))

(declare-fun m!162181 () Bool)

(assert (=> d!42545 m!162181))

(assert (=> d!42545 m!157341))

(assert (=> d!40585 d!42545))

(declare-fun d!42547 () Bool)

(assert (=> d!42547 (= (get!1492 (getValueByKey!173 (toList!842 lt!69538) lt!69523)) (v!3203 (getValueByKey!173 (toList!842 lt!69538) lt!69523)))))

(assert (=> d!40925 d!42547))

(declare-fun b!135816 () Bool)

(declare-fun e!88429 () Option!179)

(declare-fun e!88430 () Option!179)

(assert (=> b!135816 (= e!88429 e!88430)))

(declare-fun c!25438 () Bool)

(assert (=> b!135816 (= c!25438 (and ((_ is Cons!1690) (toList!842 lt!69538)) (not (= (_1!1293 (h!2295 (toList!842 lt!69538))) lt!69523))))))

(declare-fun b!135815 () Bool)

(assert (=> b!135815 (= e!88429 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69538)))))))

(declare-fun d!42549 () Bool)

(declare-fun c!25437 () Bool)

(assert (=> d!42549 (= c!25437 (and ((_ is Cons!1690) (toList!842 lt!69538)) (= (_1!1293 (h!2295 (toList!842 lt!69538))) lt!69523)))))

(assert (=> d!42549 (= (getValueByKey!173 (toList!842 lt!69538) lt!69523) e!88429)))

(declare-fun b!135818 () Bool)

(assert (=> b!135818 (= e!88430 None!177)))

(declare-fun b!135817 () Bool)

(assert (=> b!135817 (= e!88430 (getValueByKey!173 (t!6137 (toList!842 lt!69538)) lt!69523))))

(assert (= (and d!42549 c!25437) b!135815))

(assert (= (and d!42549 (not c!25437)) b!135816))

(assert (= (and b!135816 c!25438) b!135817))

(assert (= (and b!135816 (not c!25438)) b!135818))

(declare-fun m!162183 () Bool)

(assert (=> b!135817 m!162183))

(assert (=> d!40925 d!42549))

(declare-fun d!42551 () Bool)

(assert (=> d!42551 (= ($colon$colon!91 e!87080 (ite c!24781 (h!2295 (toList!842 lt!69339)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (Cons!1690 (ite c!24781 (h!2295 (toList!842 lt!69339)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69337 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))) e!87080))))

(assert (=> bm!14734 d!42551))

(declare-fun d!42553 () Bool)

(declare-fun e!88432 () Bool)

(assert (=> d!42553 e!88432))

(declare-fun res!65178 () Bool)

(assert (=> d!42553 (=> res!65178 e!88432)))

(declare-fun lt!70982 () Bool)

(assert (=> d!42553 (= res!65178 (not lt!70982))))

(declare-fun lt!70983 () Bool)

(assert (=> d!42553 (= lt!70982 lt!70983)))

(declare-fun lt!70984 () Unit!4141)

(declare-fun e!88431 () Unit!4141)

(assert (=> d!42553 (= lt!70984 e!88431)))

(declare-fun c!25439 () Bool)

(assert (=> d!42553 (= c!25439 lt!70983)))

(assert (=> d!42553 (= lt!70983 (containsKey!176 (toList!842 lt!69883) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> d!42553 (= (contains!884 lt!69883 (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) lt!70982)))

(declare-fun b!135819 () Bool)

(declare-fun lt!70985 () Unit!4141)

(assert (=> b!135819 (= e!88431 lt!70985)))

(assert (=> b!135819 (= lt!70985 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69883) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (=> b!135819 (isDefined!125 (getValueByKey!173 (toList!842 lt!69883) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!135820 () Bool)

(declare-fun Unit!4272 () Unit!4141)

(assert (=> b!135820 (= e!88431 Unit!4272)))

(declare-fun b!135821 () Bool)

(assert (=> b!135821 (= e!88432 (isDefined!125 (getValueByKey!173 (toList!842 lt!69883) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(assert (= (and d!42553 c!25439) b!135819))

(assert (= (and d!42553 (not c!25439)) b!135820))

(assert (= (and d!42553 (not res!65178)) b!135821))

(declare-fun m!162185 () Bool)

(assert (=> d!42553 m!162185))

(declare-fun m!162187 () Bool)

(assert (=> b!135819 m!162187))

(assert (=> b!135819 m!157879))

(assert (=> b!135819 m!157879))

(declare-fun m!162189 () Bool)

(assert (=> b!135819 m!162189))

(assert (=> b!135821 m!157879))

(assert (=> b!135821 m!157879))

(assert (=> b!135821 m!162189))

(assert (=> d!40751 d!42553))

(declare-fun b!135823 () Bool)

(declare-fun e!88433 () Option!179)

(declare-fun e!88434 () Option!179)

(assert (=> b!135823 (= e!88433 e!88434)))

(declare-fun c!25441 () Bool)

(assert (=> b!135823 (= c!25441 (and ((_ is Cons!1690) lt!69884) (not (= (_1!1293 (h!2295 lt!69884)) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))))

(declare-fun b!135822 () Bool)

(assert (=> b!135822 (= e!88433 (Some!178 (_2!1293 (h!2295 lt!69884))))))

(declare-fun d!42555 () Bool)

(declare-fun c!25440 () Bool)

(assert (=> d!42555 (= c!25440 (and ((_ is Cons!1690) lt!69884) (= (_1!1293 (h!2295 lt!69884)) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(assert (=> d!42555 (= (getValueByKey!173 lt!69884 (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) e!88433)))

(declare-fun b!135825 () Bool)

(assert (=> b!135825 (= e!88434 None!177)))

(declare-fun b!135824 () Bool)

(assert (=> b!135824 (= e!88434 (getValueByKey!173 (t!6137 lt!69884) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(assert (= (and d!42555 c!25440) b!135822))

(assert (= (and d!42555 (not c!25440)) b!135823))

(assert (= (and b!135823 c!25441) b!135824))

(assert (= (and b!135823 (not c!25441)) b!135825))

(declare-fun m!162191 () Bool)

(assert (=> b!135824 m!162191))

(assert (=> d!40751 d!42555))

(declare-fun d!42557 () Bool)

(assert (=> d!42557 (= (getValueByKey!173 lt!69884 (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) (Some!178 (_2!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun lt!70986 () Unit!4141)

(assert (=> d!42557 (= lt!70986 (choose!833 lt!69884 (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun e!88435 () Bool)

(assert (=> d!42557 e!88435))

(declare-fun res!65179 () Bool)

(assert (=> d!42557 (=> (not res!65179) (not e!88435))))

(assert (=> d!42557 (= res!65179 (isStrictlySorted!309 lt!69884))))

(assert (=> d!42557 (= (lemmaContainsTupThenGetReturnValue!88 lt!69884 (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) lt!70986)))

(declare-fun b!135826 () Bool)

(declare-fun res!65180 () Bool)

(assert (=> b!135826 (=> (not res!65180) (not e!88435))))

(assert (=> b!135826 (= res!65180 (containsKey!176 lt!69884 (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!135827 () Bool)

(assert (=> b!135827 (= e!88435 (contains!886 lt!69884 (tuple2!2565 (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(assert (= (and d!42557 res!65179) b!135826))

(assert (= (and b!135826 res!65180) b!135827))

(assert (=> d!42557 m!157873))

(declare-fun m!162193 () Bool)

(assert (=> d!42557 m!162193))

(declare-fun m!162195 () Bool)

(assert (=> d!42557 m!162195))

(declare-fun m!162197 () Bool)

(assert (=> b!135826 m!162197))

(declare-fun m!162199 () Bool)

(assert (=> b!135827 m!162199))

(assert (=> d!40751 d!42557))

(declare-fun b!135828 () Bool)

(declare-fun res!65181 () Bool)

(declare-fun e!88440 () Bool)

(assert (=> b!135828 (=> (not res!65181) (not e!88440))))

(declare-fun lt!70987 () List!1694)

(assert (=> b!135828 (= res!65181 (containsKey!176 lt!70987 (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun b!135829 () Bool)

(declare-fun e!88438 () List!1694)

(declare-fun e!88439 () List!1694)

(assert (=> b!135829 (= e!88438 e!88439)))

(declare-fun c!25445 () Bool)

(assert (=> b!135829 (= c!25445 (and ((_ is Cons!1690) (toList!842 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666)))) (= (_1!1293 (h!2295 (toList!842 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666))))) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun bm!14895 () Bool)

(declare-fun call!14899 () List!1694)

(declare-fun call!14898 () List!1694)

(assert (=> bm!14895 (= call!14899 call!14898)))

(declare-fun b!135830 () Bool)

(declare-fun e!88436 () List!1694)

(assert (=> b!135830 (= e!88436 call!14899)))

(declare-fun c!25444 () Bool)

(declare-fun b!135831 () Bool)

(assert (=> b!135831 (= c!25444 (and ((_ is Cons!1690) (toList!842 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666)))) (bvsgt (_1!1293 (h!2295 (toList!842 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666))))) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(assert (=> b!135831 (= e!88439 e!88436)))

(declare-fun b!135832 () Bool)

(assert (=> b!135832 (= e!88440 (contains!886 lt!70987 (tuple2!2565 (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(declare-fun b!135833 () Bool)

(assert (=> b!135833 (= e!88439 call!14898)))

(declare-fun d!42559 () Bool)

(assert (=> d!42559 e!88440))

(declare-fun res!65182 () Bool)

(assert (=> d!42559 (=> (not res!65182) (not e!88440))))

(assert (=> d!42559 (= res!65182 (isStrictlySorted!309 lt!70987))))

(assert (=> d!42559 (= lt!70987 e!88438)))

(declare-fun c!25443 () Bool)

(assert (=> d!42559 (= c!25443 (and ((_ is Cons!1690) (toList!842 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666)))) (bvslt (_1!1293 (h!2295 (toList!842 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666))))) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))))))))

(assert (=> d!42559 (isStrictlySorted!309 (toList!842 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666))))))

(assert (=> d!42559 (= (insertStrictlySorted!91 (toList!842 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666))) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))) lt!70987)))

(declare-fun e!88437 () List!1694)

(declare-fun b!135834 () Bool)

(assert (=> b!135834 (= e!88437 (ite c!25445 (t!6137 (toList!842 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666)))) (ite c!25444 (Cons!1690 (h!2295 (toList!842 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666)))) (t!6137 (toList!842 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666))))) Nil!1691)))))

(declare-fun b!135835 () Bool)

(declare-fun call!14900 () List!1694)

(assert (=> b!135835 (= e!88438 call!14900)))

(declare-fun b!135836 () Bool)

(assert (=> b!135836 (= e!88436 call!14899)))

(declare-fun b!135837 () Bool)

(assert (=> b!135837 (= e!88437 (insertStrictlySorted!91 (t!6137 (toList!842 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666)))) (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))

(declare-fun bm!14896 () Bool)

(assert (=> bm!14896 (= call!14898 call!14900)))

(declare-fun bm!14897 () Bool)

(assert (=> bm!14897 (= call!14900 ($colon$colon!91 e!88437 (ite c!25443 (h!2295 (toList!842 (ite c!24641 call!14663 (ite c!24643 call!14664 call!14666)))) (tuple2!2565 (_1!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16))))) (_2!1293 (ite (or c!24641 c!24643) (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2719 newMap!16)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!24553 (ite c!24565 (minValue!2719 newMap!16) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2719 newMap!16)))))))))))

(declare-fun c!25442 () Bool)

(assert (=> bm!14897 (= c!25442 c!25443)))

(assert (= (and d!42559 c!25443) b!135835))

(assert (= (and d!42559 (not c!25443)) b!135829))

(assert (= (and b!135829 c!25445) b!135833))

(assert (= (and b!135829 (not c!25445)) b!135831))

(assert (= (and b!135831 c!25444) b!135836))

(assert (= (and b!135831 (not c!25444)) b!135830))

(assert (= (or b!135836 b!135830) bm!14895))

(assert (= (or b!135833 bm!14895) bm!14896))

(assert (= (or b!135835 bm!14896) bm!14897))

(assert (= (and bm!14897 c!25442) b!135837))

(assert (= (and bm!14897 (not c!25442)) b!135834))

(assert (= (and d!42559 res!65182) b!135828))

(assert (= (and b!135828 res!65181) b!135832))

(declare-fun m!162201 () Bool)

(assert (=> b!135832 m!162201))

(declare-fun m!162203 () Bool)

(assert (=> b!135837 m!162203))

(declare-fun m!162205 () Bool)

(assert (=> bm!14897 m!162205))

(declare-fun m!162207 () Bool)

(assert (=> b!135828 m!162207))

(declare-fun m!162209 () Bool)

(assert (=> d!42559 m!162209))

(declare-fun m!162211 () Bool)

(assert (=> d!42559 m!162211))

(assert (=> d!40751 d!42559))

(declare-fun b!135838 () Bool)

(declare-fun res!65183 () Bool)

(declare-fun e!88445 () Bool)

(assert (=> b!135838 (=> (not res!65183) (not e!88445))))

(declare-fun lt!70988 () List!1694)

(assert (=> b!135838 (= res!65183 (containsKey!176 lt!70988 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!135839 () Bool)

(declare-fun e!88443 () List!1694)

(declare-fun e!88444 () List!1694)

(assert (=> b!135839 (= e!88443 e!88444)))

(declare-fun c!25449 () Bool)

(assert (=> b!135839 (= c!25449 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69335))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69335)))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun bm!14898 () Bool)

(declare-fun call!14902 () List!1694)

(declare-fun call!14901 () List!1694)

(assert (=> bm!14898 (= call!14902 call!14901)))

(declare-fun b!135840 () Bool)

(declare-fun e!88441 () List!1694)

(assert (=> b!135840 (= e!88441 call!14902)))

(declare-fun b!135841 () Bool)

(declare-fun c!25448 () Bool)

(assert (=> b!135841 (= c!25448 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69335))) (bvsgt (_1!1293 (h!2295 (t!6137 (toList!842 lt!69335)))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> b!135841 (= e!88444 e!88441)))

(declare-fun b!135842 () Bool)

(assert (=> b!135842 (= e!88445 (contains!886 lt!70988 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!135843 () Bool)

(assert (=> b!135843 (= e!88444 call!14901)))

(declare-fun d!42561 () Bool)

(assert (=> d!42561 e!88445))

(declare-fun res!65184 () Bool)

(assert (=> d!42561 (=> (not res!65184) (not e!88445))))

(assert (=> d!42561 (= res!65184 (isStrictlySorted!309 lt!70988))))

(assert (=> d!42561 (= lt!70988 e!88443)))

(declare-fun c!25447 () Bool)

(assert (=> d!42561 (= c!25447 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69335))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 lt!69335)))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!42561 (isStrictlySorted!309 (t!6137 (toList!842 lt!69335)))))

(assert (=> d!42561 (= (insertStrictlySorted!91 (t!6137 (toList!842 lt!69335)) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!70988)))

(declare-fun b!135844 () Bool)

(declare-fun e!88442 () List!1694)

(assert (=> b!135844 (= e!88442 (ite c!25449 (t!6137 (t!6137 (toList!842 lt!69335))) (ite c!25448 (Cons!1690 (h!2295 (t!6137 (toList!842 lt!69335))) (t!6137 (t!6137 (toList!842 lt!69335)))) Nil!1691)))))

(declare-fun b!135845 () Bool)

(declare-fun call!14903 () List!1694)

(assert (=> b!135845 (= e!88443 call!14903)))

(declare-fun b!135846 () Bool)

(assert (=> b!135846 (= e!88441 call!14902)))

(declare-fun b!135847 () Bool)

(assert (=> b!135847 (= e!88442 (insertStrictlySorted!91 (t!6137 (t!6137 (toList!842 lt!69335))) (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun bm!14899 () Bool)

(assert (=> bm!14899 (= call!14901 call!14903)))

(declare-fun bm!14900 () Bool)

(assert (=> bm!14900 (= call!14903 ($colon$colon!91 e!88442 (ite c!25447 (h!2295 (t!6137 (toList!842 lt!69335))) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69350 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun c!25446 () Bool)

(assert (=> bm!14900 (= c!25446 c!25447)))

(assert (= (and d!42561 c!25447) b!135845))

(assert (= (and d!42561 (not c!25447)) b!135839))

(assert (= (and b!135839 c!25449) b!135843))

(assert (= (and b!135839 (not c!25449)) b!135841))

(assert (= (and b!135841 c!25448) b!135846))

(assert (= (and b!135841 (not c!25448)) b!135840))

(assert (= (or b!135846 b!135840) bm!14898))

(assert (= (or b!135843 bm!14898) bm!14899))

(assert (= (or b!135845 bm!14899) bm!14900))

(assert (= (and bm!14900 c!25446) b!135847))

(assert (= (and bm!14900 (not c!25446)) b!135844))

(assert (= (and d!42561 res!65184) b!135838))

(assert (= (and b!135838 res!65183) b!135842))

(declare-fun m!162213 () Bool)

(assert (=> b!135842 m!162213))

(declare-fun m!162215 () Bool)

(assert (=> b!135847 m!162215))

(declare-fun m!162217 () Bool)

(assert (=> bm!14900 m!162217))

(declare-fun m!162219 () Bool)

(assert (=> b!135838 m!162219))

(declare-fun m!162221 () Bool)

(assert (=> d!42561 m!162221))

(assert (=> d!42561 m!160109))

(assert (=> b!133637 d!42561))

(declare-fun d!42563 () Bool)

(declare-fun res!65185 () Bool)

(declare-fun e!88446 () Bool)

(assert (=> d!42563 (=> res!65185 e!88446)))

(assert (=> d!42563 (= res!65185 (and ((_ is Cons!1690) (toList!842 (map!1398 (_2!1294 lt!69445)))) (= (_1!1293 (h!2295 (toList!842 (map!1398 (_2!1294 lt!69445))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(assert (=> d!42563 (= (containsKey!176 (toList!842 (map!1398 (_2!1294 lt!69445))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) e!88446)))

(declare-fun b!135848 () Bool)

(declare-fun e!88447 () Bool)

(assert (=> b!135848 (= e!88446 e!88447)))

(declare-fun res!65186 () Bool)

(assert (=> b!135848 (=> (not res!65186) (not e!88447))))

(assert (=> b!135848 (= res!65186 (and (or (not ((_ is Cons!1690) (toList!842 (map!1398 (_2!1294 lt!69445))))) (bvsle (_1!1293 (h!2295 (toList!842 (map!1398 (_2!1294 lt!69445))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))) ((_ is Cons!1690) (toList!842 (map!1398 (_2!1294 lt!69445)))) (bvslt (_1!1293 (h!2295 (toList!842 (map!1398 (_2!1294 lt!69445))))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355))))))

(declare-fun b!135849 () Bool)

(assert (=> b!135849 (= e!88447 (containsKey!176 (t!6137 (toList!842 (map!1398 (_2!1294 lt!69445)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (= (and d!42563 (not res!65185)) b!135848))

(assert (= (and b!135848 res!65186) b!135849))

(assert (=> b!135849 m!156395))

(declare-fun m!162223 () Bool)

(assert (=> b!135849 m!162223))

(assert (=> d!40895 d!42563))

(assert (=> d!40983 d!40559))

(assert (=> d!40983 d!40549))

(assert (=> d!40983 d!40553))

(declare-fun b!135851 () Bool)

(declare-fun e!88448 () Option!179)

(declare-fun e!88449 () Option!179)

(assert (=> b!135851 (= e!88448 e!88449)))

(declare-fun c!25451 () Bool)

(assert (=> b!135851 (= c!25451 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69353))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69353)))) lt!69338))))))

(declare-fun b!135850 () Bool)

(assert (=> b!135850 (= e!88448 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 lt!69353))))))))

(declare-fun d!42565 () Bool)

(declare-fun c!25450 () Bool)

(assert (=> d!42565 (= c!25450 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69353))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69353)))) lt!69338)))))

(assert (=> d!42565 (= (getValueByKey!173 (t!6137 (toList!842 lt!69353)) lt!69338) e!88448)))

(declare-fun b!135853 () Bool)

(assert (=> b!135853 (= e!88449 None!177)))

(declare-fun b!135852 () Bool)

(assert (=> b!135852 (= e!88449 (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69353))) lt!69338))))

(assert (= (and d!42565 c!25450) b!135850))

(assert (= (and d!42565 (not c!25450)) b!135851))

(assert (= (and b!135851 c!25451) b!135852))

(assert (= (and b!135851 (not c!25451)) b!135853))

(declare-fun m!162225 () Bool)

(assert (=> b!135852 m!162225))

(assert (=> b!133561 d!42565))

(declare-fun d!42567 () Bool)

(assert (=> d!42567 (= (apply!116 (+!169 lt!69689 (tuple2!2565 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69674) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69689 (tuple2!2565 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69674)))))

(declare-fun bs!5715 () Bool)

(assert (= bs!5715 d!42567))

(declare-fun m!162227 () Bool)

(assert (=> bs!5715 m!162227))

(assert (=> bs!5715 m!162227))

(declare-fun m!162229 () Bool)

(assert (=> bs!5715 m!162229))

(assert (=> b!133244 d!42567))

(declare-fun d!42569 () Bool)

(assert (=> d!42569 (= (apply!116 (+!169 lt!69677 (tuple2!2565 lt!69669 (minValue!2719 newMap!16))) lt!69679) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69677 (tuple2!2565 lt!69669 (minValue!2719 newMap!16)))) lt!69679)))))

(declare-fun bs!5716 () Bool)

(assert (= bs!5716 d!42569))

(declare-fun m!162231 () Bool)

(assert (=> bs!5716 m!162231))

(assert (=> bs!5716 m!162231))

(declare-fun m!162233 () Bool)

(assert (=> bs!5716 m!162233))

(assert (=> b!133244 d!42569))

(declare-fun d!42571 () Bool)

(assert (=> d!42571 (= (apply!116 lt!69677 lt!69679) (get!1492 (getValueByKey!173 (toList!842 lt!69677) lt!69679)))))

(declare-fun bs!5717 () Bool)

(assert (= bs!5717 d!42571))

(declare-fun m!162235 () Bool)

(assert (=> bs!5717 m!162235))

(assert (=> bs!5717 m!162235))

(declare-fun m!162237 () Bool)

(assert (=> bs!5717 m!162237))

(assert (=> b!133244 d!42571))

(declare-fun d!42573 () Bool)

(assert (=> d!42573 (= (apply!116 (+!169 lt!69689 (tuple2!2565 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69674) (apply!116 lt!69689 lt!69674))))

(declare-fun lt!70989 () Unit!4141)

(assert (=> d!42573 (= lt!70989 (choose!828 lt!69689 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69674))))

(declare-fun e!88450 () Bool)

(assert (=> d!42573 e!88450))

(declare-fun res!65187 () Bool)

(assert (=> d!42573 (=> (not res!65187) (not e!88450))))

(assert (=> d!42573 (= res!65187 (contains!884 lt!69689 lt!69674))))

(assert (=> d!42573 (= (addApplyDifferent!92 lt!69689 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69674) lt!70989)))

(declare-fun b!135854 () Bool)

(assert (=> b!135854 (= e!88450 (not (= lt!69674 lt!69678)))))

(assert (= (and d!42573 res!65187) b!135854))

(assert (=> d!42573 m!157265))

(assert (=> d!42573 m!157289))

(assert (=> d!42573 m!157269))

(declare-fun m!162239 () Bool)

(assert (=> d!42573 m!162239))

(assert (=> d!42573 m!156393))

(declare-fun m!162241 () Bool)

(assert (=> d!42573 m!162241))

(assert (=> d!42573 m!157265))

(assert (=> b!133244 d!42573))

(declare-fun d!42575 () Bool)

(declare-fun e!88451 () Bool)

(assert (=> d!42575 e!88451))

(declare-fun res!65189 () Bool)

(assert (=> d!42575 (=> (not res!65189) (not e!88451))))

(declare-fun lt!70992 () ListLongMap!1653)

(assert (=> d!42575 (= res!65189 (contains!884 lt!70992 (_1!1293 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!70993 () List!1694)

(assert (=> d!42575 (= lt!70992 (ListLongMap!1654 lt!70993))))

(declare-fun lt!70990 () Unit!4141)

(declare-fun lt!70991 () Unit!4141)

(assert (=> d!42575 (= lt!70990 lt!70991)))

(assert (=> d!42575 (= (getValueByKey!173 lt!70993 (_1!1293 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42575 (= lt!70991 (lemmaContainsTupThenGetReturnValue!88 lt!70993 (_1!1293 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42575 (= lt!70993 (insertStrictlySorted!91 (toList!842 lt!69671) (_1!1293 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42575 (= (+!169 lt!69671 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!70992)))

(declare-fun b!135855 () Bool)

(declare-fun res!65188 () Bool)

(assert (=> b!135855 (=> (not res!65188) (not e!88451))))

(assert (=> b!135855 (= res!65188 (= (getValueByKey!173 (toList!842 lt!70992) (_1!1293 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135856 () Bool)

(assert (=> b!135856 (= e!88451 (contains!886 (toList!842 lt!70992) (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42575 res!65189) b!135855))

(assert (= (and b!135855 res!65188) b!135856))

(declare-fun m!162243 () Bool)

(assert (=> d!42575 m!162243))

(declare-fun m!162245 () Bool)

(assert (=> d!42575 m!162245))

(declare-fun m!162247 () Bool)

(assert (=> d!42575 m!162247))

(declare-fun m!162249 () Bool)

(assert (=> d!42575 m!162249))

(declare-fun m!162251 () Bool)

(assert (=> b!135855 m!162251))

(declare-fun m!162253 () Bool)

(assert (=> b!135856 m!162253))

(assert (=> b!133244 d!42575))

(declare-fun d!42577 () Bool)

(assert (=> d!42577 (= (apply!116 lt!69689 lt!69674) (get!1492 (getValueByKey!173 (toList!842 lt!69689) lt!69674)))))

(declare-fun bs!5718 () Bool)

(assert (= bs!5718 d!42577))

(declare-fun m!162255 () Bool)

(assert (=> bs!5718 m!162255))

(assert (=> bs!5718 m!162255))

(declare-fun m!162257 () Bool)

(assert (=> bs!5718 m!162257))

(assert (=> b!133244 d!42577))

(declare-fun d!42579 () Bool)

(assert (=> d!42579 (= (apply!116 (+!169 lt!69675 (tuple2!2565 lt!69673 (minValue!2719 newMap!16))) lt!69681) (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69675 (tuple2!2565 lt!69673 (minValue!2719 newMap!16)))) lt!69681)))))

(declare-fun bs!5719 () Bool)

(assert (= bs!5719 d!42579))

(declare-fun m!162259 () Bool)

(assert (=> bs!5719 m!162259))

(assert (=> bs!5719 m!162259))

(declare-fun m!162261 () Bool)

(assert (=> bs!5719 m!162261))

(assert (=> b!133244 d!42579))

(declare-fun d!42581 () Bool)

(assert (=> d!42581 (contains!884 (+!169 lt!69671 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69670)))

(declare-fun lt!70994 () Unit!4141)

(assert (=> d!42581 (= lt!70994 (choose!829 lt!69671 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69670))))

(assert (=> d!42581 (contains!884 lt!69671 lt!69670)))

(assert (=> d!42581 (= (addStillContains!92 lt!69671 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!69670) lt!70994)))

(declare-fun bs!5720 () Bool)

(assert (= bs!5720 d!42581))

(assert (=> bs!5720 m!157285))

(assert (=> bs!5720 m!157285))

(assert (=> bs!5720 m!157287))

(assert (=> bs!5720 m!156393))

(declare-fun m!162263 () Bool)

(assert (=> bs!5720 m!162263))

(declare-fun m!162265 () Bool)

(assert (=> bs!5720 m!162265))

(assert (=> b!133244 d!42581))

(declare-fun d!42583 () Bool)

(assert (=> d!42583 (= (apply!116 (+!169 lt!69677 (tuple2!2565 lt!69669 (minValue!2719 newMap!16))) lt!69679) (apply!116 lt!69677 lt!69679))))

(declare-fun lt!70995 () Unit!4141)

(assert (=> d!42583 (= lt!70995 (choose!828 lt!69677 lt!69669 (minValue!2719 newMap!16) lt!69679))))

(declare-fun e!88452 () Bool)

(assert (=> d!42583 e!88452))

(declare-fun res!65190 () Bool)

(assert (=> d!42583 (=> (not res!65190) (not e!88452))))

(assert (=> d!42583 (= res!65190 (contains!884 lt!69677 lt!69679))))

(assert (=> d!42583 (= (addApplyDifferent!92 lt!69677 lt!69669 (minValue!2719 newMap!16) lt!69679) lt!70995)))

(declare-fun b!135857 () Bool)

(assert (=> b!135857 (= e!88452 (not (= lt!69679 lt!69669)))))

(assert (= (and d!42583 res!65190) b!135857))

(assert (=> d!42583 m!157267))

(assert (=> d!42583 m!157281))

(assert (=> d!42583 m!157263))

(declare-fun m!162267 () Bool)

(assert (=> d!42583 m!162267))

(declare-fun m!162269 () Bool)

(assert (=> d!42583 m!162269))

(assert (=> d!42583 m!157267))

(assert (=> b!133244 d!42583))

(declare-fun d!42585 () Bool)

(assert (=> d!42585 (= (apply!116 (+!169 lt!69675 (tuple2!2565 lt!69673 (minValue!2719 newMap!16))) lt!69681) (apply!116 lt!69675 lt!69681))))

(declare-fun lt!70996 () Unit!4141)

(assert (=> d!42585 (= lt!70996 (choose!828 lt!69675 lt!69673 (minValue!2719 newMap!16) lt!69681))))

(declare-fun e!88453 () Bool)

(assert (=> d!42585 e!88453))

(declare-fun res!65191 () Bool)

(assert (=> d!42585 (=> (not res!65191) (not e!88453))))

(assert (=> d!42585 (= res!65191 (contains!884 lt!69675 lt!69681))))

(assert (=> d!42585 (= (addApplyDifferent!92 lt!69675 lt!69673 (minValue!2719 newMap!16) lt!69681) lt!70996)))

(declare-fun b!135858 () Bool)

(assert (=> b!135858 (= e!88453 (not (= lt!69681 lt!69673)))))

(assert (= (and d!42585 res!65191) b!135858))

(assert (=> d!42585 m!157273))

(assert (=> d!42585 m!157275))

(assert (=> d!42585 m!157259))

(declare-fun m!162271 () Bool)

(assert (=> d!42585 m!162271))

(declare-fun m!162273 () Bool)

(assert (=> d!42585 m!162273))

(assert (=> d!42585 m!157273))

(assert (=> b!133244 d!42585))

(declare-fun d!42587 () Bool)

(declare-fun e!88455 () Bool)

(assert (=> d!42587 e!88455))

(declare-fun res!65192 () Bool)

(assert (=> d!42587 (=> res!65192 e!88455)))

(declare-fun lt!70997 () Bool)

(assert (=> d!42587 (= res!65192 (not lt!70997))))

(declare-fun lt!70998 () Bool)

(assert (=> d!42587 (= lt!70997 lt!70998)))

(declare-fun lt!70999 () Unit!4141)

(declare-fun e!88454 () Unit!4141)

(assert (=> d!42587 (= lt!70999 e!88454)))

(declare-fun c!25452 () Bool)

(assert (=> d!42587 (= c!25452 lt!70998)))

(assert (=> d!42587 (= lt!70998 (containsKey!176 (toList!842 (+!169 lt!69671 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69670))))

(assert (=> d!42587 (= (contains!884 (+!169 lt!69671 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!69670) lt!70997)))

(declare-fun b!135859 () Bool)

(declare-fun lt!71000 () Unit!4141)

(assert (=> b!135859 (= e!88454 lt!71000)))

(assert (=> b!135859 (= lt!71000 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 (+!169 lt!69671 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69670))))

(assert (=> b!135859 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69671 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69670))))

(declare-fun b!135860 () Bool)

(declare-fun Unit!4273 () Unit!4141)

(assert (=> b!135860 (= e!88454 Unit!4273)))

(declare-fun b!135861 () Bool)

(assert (=> b!135861 (= e!88455 (isDefined!125 (getValueByKey!173 (toList!842 (+!169 lt!69671 (tuple2!2565 lt!69686 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!69670)))))

(assert (= (and d!42587 c!25452) b!135859))

(assert (= (and d!42587 (not c!25452)) b!135860))

(assert (= (and d!42587 (not res!65192)) b!135861))

(declare-fun m!162275 () Bool)

(assert (=> d!42587 m!162275))

(declare-fun m!162277 () Bool)

(assert (=> b!135859 m!162277))

(declare-fun m!162279 () Bool)

(assert (=> b!135859 m!162279))

(assert (=> b!135859 m!162279))

(declare-fun m!162281 () Bool)

(assert (=> b!135859 m!162281))

(assert (=> b!135861 m!162279))

(assert (=> b!135861 m!162279))

(assert (=> b!135861 m!162281))

(assert (=> b!133244 d!42587))

(declare-fun d!42589 () Bool)

(assert (=> d!42589 (= (apply!116 lt!69675 lt!69681) (get!1492 (getValueByKey!173 (toList!842 lt!69675) lt!69681)))))

(declare-fun bs!5721 () Bool)

(assert (= bs!5721 d!42589))

(declare-fun m!162283 () Bool)

(assert (=> bs!5721 m!162283))

(assert (=> bs!5721 m!162283))

(declare-fun m!162285 () Bool)

(assert (=> bs!5721 m!162285))

(assert (=> b!133244 d!42589))

(declare-fun d!42591 () Bool)

(declare-fun e!88456 () Bool)

(assert (=> d!42591 e!88456))

(declare-fun res!65194 () Bool)

(assert (=> d!42591 (=> (not res!65194) (not e!88456))))

(declare-fun lt!71003 () ListLongMap!1653)

(assert (=> d!42591 (= res!65194 (contains!884 lt!71003 (_1!1293 (tuple2!2565 lt!69669 (minValue!2719 newMap!16)))))))

(declare-fun lt!71004 () List!1694)

(assert (=> d!42591 (= lt!71003 (ListLongMap!1654 lt!71004))))

(declare-fun lt!71001 () Unit!4141)

(declare-fun lt!71002 () Unit!4141)

(assert (=> d!42591 (= lt!71001 lt!71002)))

(assert (=> d!42591 (= (getValueByKey!173 lt!71004 (_1!1293 (tuple2!2565 lt!69669 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69669 (minValue!2719 newMap!16)))))))

(assert (=> d!42591 (= lt!71002 (lemmaContainsTupThenGetReturnValue!88 lt!71004 (_1!1293 (tuple2!2565 lt!69669 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69669 (minValue!2719 newMap!16)))))))

(assert (=> d!42591 (= lt!71004 (insertStrictlySorted!91 (toList!842 lt!69677) (_1!1293 (tuple2!2565 lt!69669 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69669 (minValue!2719 newMap!16)))))))

(assert (=> d!42591 (= (+!169 lt!69677 (tuple2!2565 lt!69669 (minValue!2719 newMap!16))) lt!71003)))

(declare-fun b!135862 () Bool)

(declare-fun res!65193 () Bool)

(assert (=> b!135862 (=> (not res!65193) (not e!88456))))

(assert (=> b!135862 (= res!65193 (= (getValueByKey!173 (toList!842 lt!71003) (_1!1293 (tuple2!2565 lt!69669 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69669 (minValue!2719 newMap!16))))))))

(declare-fun b!135863 () Bool)

(assert (=> b!135863 (= e!88456 (contains!886 (toList!842 lt!71003) (tuple2!2565 lt!69669 (minValue!2719 newMap!16))))))

(assert (= (and d!42591 res!65194) b!135862))

(assert (= (and b!135862 res!65193) b!135863))

(declare-fun m!162287 () Bool)

(assert (=> d!42591 m!162287))

(declare-fun m!162289 () Bool)

(assert (=> d!42591 m!162289))

(declare-fun m!162291 () Bool)

(assert (=> d!42591 m!162291))

(declare-fun m!162293 () Bool)

(assert (=> d!42591 m!162293))

(declare-fun m!162295 () Bool)

(assert (=> b!135862 m!162295))

(declare-fun m!162297 () Bool)

(assert (=> b!135863 m!162297))

(assert (=> b!133244 d!42591))

(declare-fun d!42593 () Bool)

(declare-fun e!88457 () Bool)

(assert (=> d!42593 e!88457))

(declare-fun res!65196 () Bool)

(assert (=> d!42593 (=> (not res!65196) (not e!88457))))

(declare-fun lt!71007 () ListLongMap!1653)

(assert (=> d!42593 (= res!65196 (contains!884 lt!71007 (_1!1293 (tuple2!2565 lt!69673 (minValue!2719 newMap!16)))))))

(declare-fun lt!71008 () List!1694)

(assert (=> d!42593 (= lt!71007 (ListLongMap!1654 lt!71008))))

(declare-fun lt!71005 () Unit!4141)

(declare-fun lt!71006 () Unit!4141)

(assert (=> d!42593 (= lt!71005 lt!71006)))

(assert (=> d!42593 (= (getValueByKey!173 lt!71008 (_1!1293 (tuple2!2565 lt!69673 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69673 (minValue!2719 newMap!16)))))))

(assert (=> d!42593 (= lt!71006 (lemmaContainsTupThenGetReturnValue!88 lt!71008 (_1!1293 (tuple2!2565 lt!69673 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69673 (minValue!2719 newMap!16)))))))

(assert (=> d!42593 (= lt!71008 (insertStrictlySorted!91 (toList!842 lt!69675) (_1!1293 (tuple2!2565 lt!69673 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69673 (minValue!2719 newMap!16)))))))

(assert (=> d!42593 (= (+!169 lt!69675 (tuple2!2565 lt!69673 (minValue!2719 newMap!16))) lt!71007)))

(declare-fun b!135864 () Bool)

(declare-fun res!65195 () Bool)

(assert (=> b!135864 (=> (not res!65195) (not e!88457))))

(assert (=> b!135864 (= res!65195 (= (getValueByKey!173 (toList!842 lt!71007) (_1!1293 (tuple2!2565 lt!69673 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69673 (minValue!2719 newMap!16))))))))

(declare-fun b!135865 () Bool)

(assert (=> b!135865 (= e!88457 (contains!886 (toList!842 lt!71007) (tuple2!2565 lt!69673 (minValue!2719 newMap!16))))))

(assert (= (and d!42593 res!65196) b!135864))

(assert (= (and b!135864 res!65195) b!135865))

(declare-fun m!162299 () Bool)

(assert (=> d!42593 m!162299))

(declare-fun m!162301 () Bool)

(assert (=> d!42593 m!162301))

(declare-fun m!162303 () Bool)

(assert (=> d!42593 m!162303))

(declare-fun m!162305 () Bool)

(assert (=> d!42593 m!162305))

(declare-fun m!162307 () Bool)

(assert (=> b!135864 m!162307))

(declare-fun m!162309 () Bool)

(assert (=> b!135865 m!162309))

(assert (=> b!133244 d!42593))

(declare-fun d!42595 () Bool)

(declare-fun e!88458 () Bool)

(assert (=> d!42595 e!88458))

(declare-fun res!65198 () Bool)

(assert (=> d!42595 (=> (not res!65198) (not e!88458))))

(declare-fun lt!71011 () ListLongMap!1653)

(assert (=> d!42595 (= res!65198 (contains!884 lt!71011 (_1!1293 (tuple2!2565 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!71012 () List!1694)

(assert (=> d!42595 (= lt!71011 (ListLongMap!1654 lt!71012))))

(declare-fun lt!71009 () Unit!4141)

(declare-fun lt!71010 () Unit!4141)

(assert (=> d!42595 (= lt!71009 lt!71010)))

(assert (=> d!42595 (= (getValueByKey!173 lt!71012 (_1!1293 (tuple2!2565 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42595 (= lt!71010 (lemmaContainsTupThenGetReturnValue!88 lt!71012 (_1!1293 (tuple2!2565 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42595 (= lt!71012 (insertStrictlySorted!91 (toList!842 lt!69689) (_1!1293 (tuple2!2565 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1293 (tuple2!2565 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42595 (= (+!169 lt!69689 (tuple2!2565 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!71011)))

(declare-fun b!135866 () Bool)

(declare-fun res!65197 () Bool)

(assert (=> b!135866 (=> (not res!65197) (not e!88458))))

(assert (=> b!135866 (= res!65197 (= (getValueByKey!173 (toList!842 lt!71011) (_1!1293 (tuple2!2565 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!178 (_2!1293 (tuple2!2565 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!135867 () Bool)

(assert (=> b!135867 (= e!88458 (contains!886 (toList!842 lt!71011) (tuple2!2565 lt!69678 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42595 res!65198) b!135866))

(assert (= (and b!135866 res!65197) b!135867))

(declare-fun m!162311 () Bool)

(assert (=> d!42595 m!162311))

(declare-fun m!162313 () Bool)

(assert (=> d!42595 m!162313))

(declare-fun m!162315 () Bool)

(assert (=> d!42595 m!162315))

(declare-fun m!162317 () Bool)

(assert (=> d!42595 m!162317))

(declare-fun m!162319 () Bool)

(assert (=> b!135866 m!162319))

(declare-fun m!162321 () Bool)

(assert (=> b!135867 m!162321))

(assert (=> b!133244 d!42595))

(assert (=> b!133244 d!42459))

(declare-fun d!42597 () Bool)

(assert (=> d!42597 (= (apply!116 lt!69932 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69932) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5722 () Bool)

(assert (= bs!5722 d!42597))

(assert (=> bs!5722 m!161423))

(assert (=> bs!5722 m!161423))

(declare-fun m!162323 () Bool)

(assert (=> bs!5722 m!162323))

(assert (=> b!133676 d!42597))

(declare-fun d!42599 () Bool)

(declare-fun e!88460 () Bool)

(assert (=> d!42599 e!88460))

(declare-fun res!65199 () Bool)

(assert (=> d!42599 (=> res!65199 e!88460)))

(declare-fun lt!71013 () Bool)

(assert (=> d!42599 (= res!65199 (not lt!71013))))

(declare-fun lt!71014 () Bool)

(assert (=> d!42599 (= lt!71013 lt!71014)))

(declare-fun lt!71015 () Unit!4141)

(declare-fun e!88459 () Unit!4141)

(assert (=> d!42599 (= lt!71015 e!88459)))

(declare-fun c!25453 () Bool)

(assert (=> d!42599 (= c!25453 lt!71014)))

(assert (=> d!42599 (= lt!71014 (containsKey!176 (toList!842 lt!69738) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42599 (= (contains!884 lt!69738 #b1000000000000000000000000000000000000000000000000000000000000000) lt!71013)))

(declare-fun b!135868 () Bool)

(declare-fun lt!71016 () Unit!4141)

(assert (=> b!135868 (= e!88459 lt!71016)))

(assert (=> b!135868 (= lt!71016 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69738) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135868 (isDefined!125 (getValueByKey!173 (toList!842 lt!69738) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135869 () Bool)

(declare-fun Unit!4274 () Unit!4141)

(assert (=> b!135869 (= e!88459 Unit!4274)))

(declare-fun b!135870 () Bool)

(assert (=> b!135870 (= e!88460 (isDefined!125 (getValueByKey!173 (toList!842 lt!69738) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42599 c!25453) b!135868))

(assert (= (and d!42599 (not c!25453)) b!135869))

(assert (= (and d!42599 (not res!65199)) b!135870))

(declare-fun m!162325 () Bool)

(assert (=> d!42599 m!162325))

(declare-fun m!162327 () Bool)

(assert (=> b!135868 m!162327))

(assert (=> b!135868 m!159475))

(assert (=> b!135868 m!159475))

(declare-fun m!162329 () Bool)

(assert (=> b!135868 m!162329))

(assert (=> b!135870 m!159475))

(assert (=> b!135870 m!159475))

(assert (=> b!135870 m!162329))

(assert (=> bm!14700 d!42599))

(declare-fun d!42601 () Bool)

(declare-fun res!65200 () Bool)

(declare-fun e!88461 () Bool)

(assert (=> d!42601 (=> res!65200 e!88461)))

(assert (=> d!42601 (= res!65200 (or ((_ is Nil!1691) lt!69973) ((_ is Nil!1691) (t!6137 lt!69973))))))

(assert (=> d!42601 (= (isStrictlySorted!309 lt!69973) e!88461)))

(declare-fun b!135871 () Bool)

(declare-fun e!88462 () Bool)

(assert (=> b!135871 (= e!88461 e!88462)))

(declare-fun res!65201 () Bool)

(assert (=> b!135871 (=> (not res!65201) (not e!88462))))

(assert (=> b!135871 (= res!65201 (bvslt (_1!1293 (h!2295 lt!69973)) (_1!1293 (h!2295 (t!6137 lt!69973)))))))

(declare-fun b!135872 () Bool)

(assert (=> b!135872 (= e!88462 (isStrictlySorted!309 (t!6137 lt!69973)))))

(assert (= (and d!42601 (not res!65200)) b!135871))

(assert (= (and b!135871 res!65201) b!135872))

(declare-fun m!162331 () Bool)

(assert (=> b!135872 m!162331))

(assert (=> d!40833 d!42601))

(declare-fun d!42603 () Bool)

(declare-fun res!65202 () Bool)

(declare-fun e!88463 () Bool)

(assert (=> d!42603 (=> res!65202 e!88463)))

(assert (=> d!42603 (= res!65202 (or ((_ is Nil!1691) (toList!842 lt!69353)) ((_ is Nil!1691) (t!6137 (toList!842 lt!69353)))))))

(assert (=> d!42603 (= (isStrictlySorted!309 (toList!842 lt!69353)) e!88463)))

(declare-fun b!135873 () Bool)

(declare-fun e!88464 () Bool)

(assert (=> b!135873 (= e!88463 e!88464)))

(declare-fun res!65203 () Bool)

(assert (=> b!135873 (=> (not res!65203) (not e!88464))))

(assert (=> b!135873 (= res!65203 (bvslt (_1!1293 (h!2295 (toList!842 lt!69353))) (_1!1293 (h!2295 (t!6137 (toList!842 lt!69353))))))))

(declare-fun b!135874 () Bool)

(assert (=> b!135874 (= e!88464 (isStrictlySorted!309 (t!6137 (toList!842 lt!69353))))))

(assert (= (and d!42603 (not res!65202)) b!135873))

(assert (= (and b!135873 res!65203) b!135874))

(assert (=> b!135874 m!160673))

(assert (=> d!40833 d!42603))

(declare-fun lt!71017 () Bool)

(declare-fun d!42605 () Bool)

(assert (=> d!42605 (= lt!71017 (select (content!134 (toList!842 lt!69872)) (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(declare-fun e!88466 () Bool)

(assert (=> d!42605 (= lt!71017 e!88466)))

(declare-fun res!65205 () Bool)

(assert (=> d!42605 (=> (not res!65205) (not e!88466))))

(assert (=> d!42605 (= res!65205 ((_ is Cons!1690) (toList!842 lt!69872)))))

(assert (=> d!42605 (= (contains!886 (toList!842 lt!69872) (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))) lt!71017)))

(declare-fun b!135875 () Bool)

(declare-fun e!88465 () Bool)

(assert (=> b!135875 (= e!88466 e!88465)))

(declare-fun res!65204 () Bool)

(assert (=> b!135875 (=> res!65204 e!88465)))

(assert (=> b!135875 (= res!65204 (= (h!2295 (toList!842 lt!69872)) (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(declare-fun b!135876 () Bool)

(assert (=> b!135876 (= e!88465 (contains!886 (t!6137 (toList!842 lt!69872)) (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))

(assert (= (and d!42605 res!65205) b!135875))

(assert (= (and b!135875 (not res!65204)) b!135876))

(declare-fun m!162333 () Bool)

(assert (=> d!42605 m!162333))

(declare-fun m!162335 () Bool)

(assert (=> d!42605 m!162335))

(declare-fun m!162337 () Bool)

(assert (=> b!135876 m!162337))

(assert (=> b!133556 d!42605))

(assert (=> bm!14712 d!42317))

(declare-fun d!42607 () Bool)

(declare-fun e!88468 () Bool)

(assert (=> d!42607 e!88468))

(declare-fun res!65206 () Bool)

(assert (=> d!42607 (=> res!65206 e!88468)))

(declare-fun lt!71018 () Bool)

(assert (=> d!42607 (= res!65206 (not lt!71018))))

(declare-fun lt!71019 () Bool)

(assert (=> d!42607 (= lt!71018 lt!71019)))

(declare-fun lt!71020 () Unit!4141)

(declare-fun e!88467 () Unit!4141)

(assert (=> d!42607 (= lt!71020 e!88467)))

(declare-fun c!25454 () Bool)

(assert (=> d!42607 (= c!25454 lt!71019)))

(assert (=> d!42607 (= lt!71019 (containsKey!176 (toList!842 lt!69958) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42607 (= (contains!884 lt!69958 #b0000000000000000000000000000000000000000000000000000000000000000) lt!71018)))

(declare-fun b!135877 () Bool)

(declare-fun lt!71021 () Unit!4141)

(assert (=> b!135877 (= e!88467 lt!71021)))

(assert (=> b!135877 (= lt!71021 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69958) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135877 (isDefined!125 (getValueByKey!173 (toList!842 lt!69958) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135878 () Bool)

(declare-fun Unit!4275 () Unit!4141)

(assert (=> b!135878 (= e!88467 Unit!4275)))

(declare-fun b!135879 () Bool)

(assert (=> b!135879 (= e!88468 (isDefined!125 (getValueByKey!173 (toList!842 lt!69958) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42607 c!25454) b!135877))

(assert (= (and d!42607 (not c!25454)) b!135878))

(assert (= (and d!42607 (not res!65206)) b!135879))

(declare-fun m!162339 () Bool)

(assert (=> d!42607 m!162339))

(declare-fun m!162341 () Bool)

(assert (=> b!135877 m!162341))

(assert (=> b!135877 m!159945))

(assert (=> b!135877 m!159945))

(declare-fun m!162343 () Bool)

(assert (=> b!135877 m!162343))

(assert (=> b!135879 m!159945))

(assert (=> b!135879 m!159945))

(assert (=> b!135879 m!162343))

(assert (=> bm!14746 d!42607))

(assert (=> b!133805 d!40621))

(declare-fun d!42609 () Bool)

(declare-fun c!25455 () Bool)

(assert (=> d!42609 (= c!25455 ((_ is Nil!1691) (toList!842 lt!69630)))))

(declare-fun e!88469 () (InoxSet tuple2!2564))

(assert (=> d!42609 (= (content!134 (toList!842 lt!69630)) e!88469)))

(declare-fun b!135880 () Bool)

(assert (=> b!135880 (= e!88469 ((as const (Array tuple2!2564 Bool)) false))))

(declare-fun b!135881 () Bool)

(assert (=> b!135881 (= e!88469 ((_ map or) (store ((as const (Array tuple2!2564 Bool)) false) (h!2295 (toList!842 lt!69630)) true) (content!134 (t!6137 (toList!842 lt!69630)))))))

(assert (= (and d!42609 c!25455) b!135880))

(assert (= (and d!42609 (not c!25455)) b!135881))

(declare-fun m!162345 () Bool)

(assert (=> b!135881 m!162345))

(assert (=> b!135881 m!160063))

(assert (=> d!40699 d!42609))

(declare-fun b!135882 () Bool)

(declare-fun res!65207 () Bool)

(declare-fun e!88474 () Bool)

(assert (=> b!135882 (=> (not res!65207) (not e!88474))))

(declare-fun lt!71022 () List!1694)

(assert (=> b!135882 (= res!65207 (containsKey!176 lt!71022 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!135883 () Bool)

(declare-fun e!88472 () List!1694)

(declare-fun e!88473 () List!1694)

(assert (=> b!135883 (= e!88472 e!88473)))

(declare-fun c!25459 () Bool)

(assert (=> b!135883 (= c!25459 (and ((_ is Cons!1690) (t!6137 (toList!842 call!14628))) (= (_1!1293 (h!2295 (t!6137 (toList!842 call!14628)))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun bm!14901 () Bool)

(declare-fun call!14905 () List!1694)

(declare-fun call!14904 () List!1694)

(assert (=> bm!14901 (= call!14905 call!14904)))

(declare-fun b!135884 () Bool)

(declare-fun e!88470 () List!1694)

(assert (=> b!135884 (= e!88470 call!14905)))

(declare-fun b!135885 () Bool)

(declare-fun c!25458 () Bool)

(assert (=> b!135885 (= c!25458 (and ((_ is Cons!1690) (t!6137 (toList!842 call!14628))) (bvsgt (_1!1293 (h!2295 (t!6137 (toList!842 call!14628)))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> b!135885 (= e!88473 e!88470)))

(declare-fun b!135886 () Bool)

(assert (=> b!135886 (= e!88474 (contains!886 lt!71022 (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!135887 () Bool)

(assert (=> b!135887 (= e!88473 call!14904)))

(declare-fun d!42611 () Bool)

(assert (=> d!42611 e!88474))

(declare-fun res!65208 () Bool)

(assert (=> d!42611 (=> (not res!65208) (not e!88474))))

(assert (=> d!42611 (= res!65208 (isStrictlySorted!309 lt!71022))))

(assert (=> d!42611 (= lt!71022 e!88472)))

(declare-fun c!25457 () Bool)

(assert (=> d!42611 (= c!25457 (and ((_ is Cons!1690) (t!6137 (toList!842 call!14628))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 call!14628)))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!42611 (isStrictlySorted!309 (t!6137 (toList!842 call!14628)))))

(assert (=> d!42611 (= (insertStrictlySorted!91 (t!6137 (toList!842 call!14628)) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!71022)))

(declare-fun b!135888 () Bool)

(declare-fun e!88471 () List!1694)

(assert (=> b!135888 (= e!88471 (ite c!25459 (t!6137 (t!6137 (toList!842 call!14628))) (ite c!25458 (Cons!1690 (h!2295 (t!6137 (toList!842 call!14628))) (t!6137 (t!6137 (toList!842 call!14628)))) Nil!1691)))))

(declare-fun b!135889 () Bool)

(declare-fun call!14906 () List!1694)

(assert (=> b!135889 (= e!88472 call!14906)))

(declare-fun b!135890 () Bool)

(assert (=> b!135890 (= e!88470 call!14905)))

(declare-fun b!135891 () Bool)

(assert (=> b!135891 (= e!88471 (insertStrictlySorted!91 (t!6137 (t!6137 (toList!842 call!14628))) (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun bm!14902 () Bool)

(assert (=> bm!14902 (= call!14904 call!14906)))

(declare-fun bm!14903 () Bool)

(assert (=> bm!14903 (= call!14906 ($colon$colon!91 e!88471 (ite c!25457 (h!2295 (t!6137 (toList!842 call!14628))) (tuple2!2565 (_1!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun c!25456 () Bool)

(assert (=> bm!14903 (= c!25456 c!25457)))

(assert (= (and d!42611 c!25457) b!135889))

(assert (= (and d!42611 (not c!25457)) b!135883))

(assert (= (and b!135883 c!25459) b!135887))

(assert (= (and b!135883 (not c!25459)) b!135885))

(assert (= (and b!135885 c!25458) b!135890))

(assert (= (and b!135885 (not c!25458)) b!135884))

(assert (= (or b!135890 b!135884) bm!14901))

(assert (= (or b!135887 bm!14901) bm!14902))

(assert (= (or b!135889 bm!14902) bm!14903))

(assert (= (and bm!14903 c!25456) b!135891))

(assert (= (and bm!14903 (not c!25456)) b!135888))

(assert (= (and d!42611 res!65208) b!135882))

(assert (= (and b!135882 res!65207) b!135886))

(declare-fun m!162347 () Bool)

(assert (=> b!135886 m!162347))

(declare-fun m!162349 () Bool)

(assert (=> b!135891 m!162349))

(declare-fun m!162351 () Bool)

(assert (=> bm!14903 m!162351))

(declare-fun m!162353 () Bool)

(assert (=> b!135882 m!162353))

(declare-fun m!162355 () Bool)

(assert (=> d!42611 m!162355))

(assert (=> d!42611 m!160061))

(assert (=> b!133933 d!42611))

(declare-fun d!42613 () Bool)

(assert (=> d!42613 (= (arrayCountValidKeys!0 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4613 newMap!16) #b00000000000000000000000000000000 (size!2521 (_keys!4613 newMap!16))) #b00000000000000000000000000000001))))

(assert (=> d!42613 true))

(declare-fun _$84!12 () Unit!4141)

(assert (=> d!42613 (= (choose!1 (_keys!4613 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) _$84!12)))

(declare-fun bs!5723 () Bool)

(assert (= bs!5723 d!42613))

(assert (=> bs!5723 m!156719))

(assert (=> bs!5723 m!156733))

(assert (=> bs!5723 m!156639))

(assert (=> d!40669 d!42613))

(declare-fun d!42615 () Bool)

(assert (=> d!42615 (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69662 #b00000000000000000000000000000000)))

(declare-fun lt!71023 () Unit!4141)

(assert (=> d!42615 (= lt!71023 (choose!13 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69662 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> d!42615 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(assert (=> d!42615 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69662 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) lt!71023)))

(declare-fun bs!5724 () Bool)

(assert (= bs!5724 d!42615))

(assert (=> bs!5724 m!157235))

(declare-fun m!162357 () Bool)

(assert (=> bs!5724 m!162357))

(assert (=> b!133234 d!42615))

(declare-fun d!42617 () Bool)

(declare-fun res!65209 () Bool)

(declare-fun e!88475 () Bool)

(assert (=> d!42617 (=> res!65209 e!88475)))

(assert (=> d!42617 (= res!65209 (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) #b00000000000000000000000000000000) lt!69662))))

(assert (=> d!42617 (= (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69662 #b00000000000000000000000000000000) e!88475)))

(declare-fun b!135892 () Bool)

(declare-fun e!88476 () Bool)

(assert (=> b!135892 (= e!88475 e!88476)))

(declare-fun res!65210 () Bool)

(assert (=> b!135892 (=> (not res!65210) (not e!88476))))

(assert (=> b!135892 (= res!65210 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))))

(declare-fun b!135893 () Bool)

(assert (=> b!135893 (= e!88476 (arrayContainsKey!0 (_keys!4613 (v!3198 (underlying!454 thiss!992))) lt!69662 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!42617 (not res!65209)) b!135892))

(assert (= (and b!135892 res!65210) b!135893))

(assert (=> d!42617 m!156495))

(declare-fun m!162359 () Bool)

(assert (=> b!135893 m!162359))

(assert (=> b!133234 d!42617))

(declare-fun b!135894 () Bool)

(declare-fun c!25460 () Bool)

(declare-fun lt!71025 () (_ BitVec 64))

(assert (=> b!135894 (= c!25460 (= lt!71025 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88478 () SeekEntryResult!269)

(declare-fun e!88479 () SeekEntryResult!269)

(assert (=> b!135894 (= e!88478 e!88479)))

(declare-fun d!42619 () Bool)

(declare-fun lt!71024 () SeekEntryResult!269)

(assert (=> d!42619 (and (or ((_ is Undefined!269) lt!71024) (not ((_ is Found!269) lt!71024)) (and (bvsge (index!3237 lt!71024) #b00000000000000000000000000000000) (bvslt (index!3237 lt!71024) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))) (or ((_ is Undefined!269) lt!71024) ((_ is Found!269) lt!71024) (not ((_ is MissingZero!269) lt!71024)) (and (bvsge (index!3236 lt!71024) #b00000000000000000000000000000000) (bvslt (index!3236 lt!71024) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))) (or ((_ is Undefined!269) lt!71024) ((_ is Found!269) lt!71024) ((_ is MissingZero!269) lt!71024) (not ((_ is MissingVacant!269) lt!71024)) (and (bvsge (index!3239 lt!71024) #b00000000000000000000000000000000) (bvslt (index!3239 lt!71024) (size!2521 (_keys!4613 (v!3198 (underlying!454 thiss!992))))))) (or ((_ is Undefined!269) lt!71024) (ite ((_ is Found!269) lt!71024) (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3237 lt!71024)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (ite ((_ is MissingZero!269) lt!71024) (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3236 lt!71024)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!269) lt!71024) (= (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3239 lt!71024)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88477 () SeekEntryResult!269)

(assert (=> d!42619 (= lt!71024 e!88477)))

(declare-fun c!25462 () Bool)

(declare-fun lt!71026 () SeekEntryResult!269)

(assert (=> d!42619 (= c!25462 (and ((_ is Intermediate!269) lt!71026) (undefined!1081 lt!71026)))))

(assert (=> d!42619 (= lt!71026 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (mask!7164 (v!3198 (underlying!454 thiss!992)))) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(assert (=> d!42619 (validMask!0 (mask!7164 (v!3198 (underlying!454 thiss!992))))))

(assert (=> d!42619 (= (seekEntryOrOpen!0 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))) lt!71024)))

(declare-fun b!135895 () Bool)

(assert (=> b!135895 (= e!88479 (seekKeyOrZeroReturnVacant!0 (x!15586 lt!71026) (index!3238 lt!71026) (index!3238 lt!71026) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (_keys!4613 (v!3198 (underlying!454 thiss!992))) (mask!7164 (v!3198 (underlying!454 thiss!992)))))))

(declare-fun b!135896 () Bool)

(assert (=> b!135896 (= e!88479 (MissingZero!269 (index!3238 lt!71026)))))

(declare-fun b!135897 () Bool)

(assert (=> b!135897 (= e!88477 e!88478)))

(assert (=> b!135897 (= lt!71025 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (index!3238 lt!71026)))))

(declare-fun c!25461 () Bool)

(assert (=> b!135897 (= c!25461 (= lt!71025 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!135898 () Bool)

(assert (=> b!135898 (= e!88478 (Found!269 (index!3238 lt!71026)))))

(declare-fun b!135899 () Bool)

(assert (=> b!135899 (= e!88477 Undefined!269)))

(assert (= (and d!42619 c!25462) b!135899))

(assert (= (and d!42619 (not c!25462)) b!135897))

(assert (= (and b!135897 c!25461) b!135898))

(assert (= (and b!135897 (not c!25461)) b!135894))

(assert (= (and b!135894 c!25460) b!135896))

(assert (= (and b!135894 (not c!25460)) b!135895))

(assert (=> d!42619 m!157231))

(declare-fun m!162361 () Bool)

(assert (=> d!42619 m!162361))

(assert (=> d!42619 m!156405))

(assert (=> d!42619 m!162361))

(assert (=> d!42619 m!157231))

(declare-fun m!162363 () Bool)

(assert (=> d!42619 m!162363))

(declare-fun m!162365 () Bool)

(assert (=> d!42619 m!162365))

(declare-fun m!162367 () Bool)

(assert (=> d!42619 m!162367))

(declare-fun m!162369 () Bool)

(assert (=> d!42619 m!162369))

(assert (=> b!135895 m!157231))

(declare-fun m!162371 () Bool)

(assert (=> b!135895 m!162371))

(declare-fun m!162373 () Bool)

(assert (=> b!135897 m!162373))

(assert (=> b!133234 d!42619))

(declare-fun b!135901 () Bool)

(declare-fun e!88480 () Option!179)

(declare-fun e!88481 () Option!179)

(assert (=> b!135901 (= e!88480 e!88481)))

(declare-fun c!25464 () Bool)

(assert (=> b!135901 (= c!25464 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69344))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344)))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!135900 () Bool)

(assert (=> b!135900 (= e!88480 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 lt!69344))))))))

(declare-fun d!42621 () Bool)

(declare-fun c!25463 () Bool)

(assert (=> d!42621 (= c!25463 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69344))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69344)))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42621 (= (getValueByKey!173 (t!6137 (toList!842 lt!69344)) #b0000000000000000000000000000000000000000000000000000000000000000) e!88480)))

(declare-fun b!135903 () Bool)

(assert (=> b!135903 (= e!88481 None!177)))

(declare-fun b!135902 () Bool)

(assert (=> b!135902 (= e!88481 (getValueByKey!173 (t!6137 (t!6137 (toList!842 lt!69344))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42621 c!25463) b!135900))

(assert (= (and d!42621 (not c!25463)) b!135901))

(assert (= (and b!135901 c!25464) b!135902))

(assert (= (and b!135901 (not c!25464)) b!135903))

(declare-fun m!162375 () Bool)

(assert (=> b!135902 m!162375))

(assert (=> b!133666 d!42621))

(declare-fun b!135905 () Bool)

(declare-fun e!88482 () Option!179)

(declare-fun e!88483 () Option!179)

(assert (=> b!135905 (= e!88482 e!88483)))

(declare-fun c!25466 () Bool)

(assert (=> b!135905 (= c!25466 (and ((_ is Cons!1690) (t!6137 (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (not (= (_1!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))) lt!69338))))))

(declare-fun b!135904 () Bool)

(assert (=> b!135904 (= e!88482 (Some!178 (_2!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))))

(declare-fun d!42623 () Bool)

(declare-fun c!25465 () Bool)

(assert (=> d!42623 (= c!25465 (and ((_ is Cons!1690) (t!6137 (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) (= (_1!1293 (h!2295 (t!6137 (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))) lt!69338)))))

(assert (=> d!42623 (= (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) lt!69338) e!88482)))

(declare-fun b!135907 () Bool)

(assert (=> b!135907 (= e!88483 None!177)))

(declare-fun b!135906 () Bool)

(assert (=> b!135906 (= e!88483 (getValueByKey!173 (t!6137 (t!6137 (toList!842 (+!169 lt!69353 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))) lt!69338))))

(assert (= (and d!42623 c!25465) b!135904))

(assert (= (and d!42623 (not c!25465)) b!135905))

(assert (= (and b!135905 c!25466) b!135906))

(assert (= (and b!135905 (not c!25466)) b!135907))

(declare-fun m!162377 () Bool)

(assert (=> b!135906 m!162377))

(assert (=> b!134058 d!42623))

(declare-fun d!42625 () Bool)

(declare-fun e!88485 () Bool)

(assert (=> d!42625 e!88485))

(declare-fun res!65211 () Bool)

(assert (=> d!42625 (=> res!65211 e!88485)))

(declare-fun lt!71027 () Bool)

(assert (=> d!42625 (= res!65211 (not lt!71027))))

(declare-fun lt!71028 () Bool)

(assert (=> d!42625 (= lt!71027 lt!71028)))

(declare-fun lt!71029 () Unit!4141)

(declare-fun e!88484 () Unit!4141)

(assert (=> d!42625 (= lt!71029 e!88484)))

(declare-fun c!25467 () Bool)

(assert (=> d!42625 (= c!25467 lt!71028)))

(assert (=> d!42625 (= lt!71028 (containsKey!176 (toList!842 lt!69702) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!42625 (= (contains!884 lt!69702 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) lt!71027)))

(declare-fun b!135908 () Bool)

(declare-fun lt!71030 () Unit!4141)

(assert (=> b!135908 (= e!88484 lt!71030)))

(assert (=> b!135908 (= lt!71030 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69702) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135908 (isDefined!125 (getValueByKey!173 (toList!842 lt!69702) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135909 () Bool)

(declare-fun Unit!4276 () Unit!4141)

(assert (=> b!135909 (= e!88484 Unit!4276)))

(declare-fun b!135910 () Bool)

(assert (=> b!135910 (= e!88485 (isDefined!125 (getValueByKey!173 (toList!842 lt!69702) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!42625 c!25467) b!135908))

(assert (= (and d!42625 (not c!25467)) b!135909))

(assert (= (and d!42625 (not res!65211)) b!135910))

(assert (=> d!42625 m!156679))

(declare-fun m!162379 () Bool)

(assert (=> d!42625 m!162379))

(assert (=> b!135908 m!156679))

(declare-fun m!162381 () Bool)

(assert (=> b!135908 m!162381))

(assert (=> b!135908 m!156679))

(assert (=> b!135908 m!160775))

(assert (=> b!135908 m!160775))

(declare-fun m!162383 () Bool)

(assert (=> b!135908 m!162383))

(assert (=> b!135910 m!156679))

(assert (=> b!135910 m!160775))

(assert (=> b!135910 m!160775))

(assert (=> b!135910 m!162383))

(assert (=> b!133294 d!42625))

(declare-fun d!42627 () Bool)

(assert (=> d!42627 (= (apply!116 lt!69779 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1492 (getValueByKey!173 (toList!842 lt!69779) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5725 () Bool)

(assert (= bs!5725 d!42627))

(assert (=> bs!5725 m!161011))

(assert (=> bs!5725 m!161011))

(declare-fun m!162385 () Bool)

(assert (=> bs!5725 m!162385))

(assert (=> b!133419 d!42627))

(declare-fun d!42629 () Bool)

(declare-fun e!88487 () Bool)

(assert (=> d!42629 e!88487))

(declare-fun res!65212 () Bool)

(assert (=> d!42629 (=> res!65212 e!88487)))

(declare-fun lt!71031 () Bool)

(assert (=> d!42629 (= res!65212 (not lt!71031))))

(declare-fun lt!71032 () Bool)

(assert (=> d!42629 (= lt!71031 lt!71032)))

(declare-fun lt!71033 () Unit!4141)

(declare-fun e!88486 () Unit!4141)

(assert (=> d!42629 (= lt!71033 e!88486)))

(declare-fun c!25468 () Bool)

(assert (=> d!42629 (= c!25468 lt!71032)))

(assert (=> d!42629 (= lt!71032 (containsKey!176 (toList!842 lt!69680) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!42629 (= (contains!884 lt!69680 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) lt!71031)))

(declare-fun b!135911 () Bool)

(declare-fun lt!71034 () Unit!4141)

(assert (=> b!135911 (= e!88486 lt!71034)))

(assert (=> b!135911 (= lt!71034 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69680) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!135911 (isDefined!125 (getValueByKey!173 (toList!842 lt!69680) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!135912 () Bool)

(declare-fun Unit!4277 () Unit!4141)

(assert (=> b!135912 (= e!88486 Unit!4277)))

(declare-fun b!135913 () Bool)

(assert (=> b!135913 (= e!88487 (isDefined!125 (getValueByKey!173 (toList!842 lt!69680) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!42629 c!25468) b!135911))

(assert (= (and d!42629 (not c!25468)) b!135912))

(assert (= (and d!42629 (not res!65212)) b!135913))

(assert (=> d!42629 m!156679))

(declare-fun m!162387 () Bool)

(assert (=> d!42629 m!162387))

(assert (=> b!135911 m!156679))

(declare-fun m!162389 () Bool)

(assert (=> b!135911 m!162389))

(assert (=> b!135911 m!156679))

(assert (=> b!135911 m!159829))

(assert (=> b!135911 m!159829))

(declare-fun m!162391 () Bool)

(assert (=> b!135911 m!162391))

(assert (=> b!135913 m!156679))

(assert (=> b!135913 m!159829))

(assert (=> b!135913 m!159829))

(assert (=> b!135913 m!162391))

(assert (=> b!133256 d!42629))

(declare-fun d!42631 () Bool)

(assert (=> d!42631 (= (get!1492 (getValueByKey!173 (toList!842 (+!169 lt!69524 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))) lt!69530)) (v!3203 (getValueByKey!173 (toList!842 (+!169 lt!69524 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))) lt!69530)))))

(assert (=> d!40907 d!42631))

(declare-fun b!135915 () Bool)

(declare-fun e!88488 () Option!179)

(declare-fun e!88489 () Option!179)

(assert (=> b!135915 (= e!88488 e!88489)))

(declare-fun c!25470 () Bool)

(assert (=> b!135915 (= c!25470 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69524 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))) (not (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69524 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))) lt!69530))))))

(declare-fun b!135914 () Bool)

(assert (=> b!135914 (= e!88488 (Some!178 (_2!1293 (h!2295 (toList!842 (+!169 lt!69524 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))))))))

(declare-fun d!42633 () Bool)

(declare-fun c!25469 () Bool)

(assert (=> d!42633 (= c!25469 (and ((_ is Cons!1690) (toList!842 (+!169 lt!69524 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))) (= (_1!1293 (h!2295 (toList!842 (+!169 lt!69524 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))))) lt!69530)))))

(assert (=> d!42633 (= (getValueByKey!173 (toList!842 (+!169 lt!69524 (tuple2!2565 lt!69522 (minValue!2719 newMap!16)))) lt!69530) e!88488)))

(declare-fun b!135917 () Bool)

(assert (=> b!135917 (= e!88489 None!177)))

(declare-fun b!135916 () Bool)

(assert (=> b!135916 (= e!88489 (getValueByKey!173 (t!6137 (toList!842 (+!169 lt!69524 (tuple2!2565 lt!69522 (minValue!2719 newMap!16))))) lt!69530))))

(assert (= (and d!42633 c!25469) b!135914))

(assert (= (and d!42633 (not c!25469)) b!135915))

(assert (= (and b!135915 c!25470) b!135916))

(assert (= (and b!135915 (not c!25470)) b!135917))

(declare-fun m!162393 () Bool)

(assert (=> b!135916 m!162393))

(assert (=> d!40907 d!42633))

(declare-fun d!42635 () Bool)

(declare-fun res!65213 () Bool)

(declare-fun e!88490 () Bool)

(assert (=> d!42635 (=> res!65213 e!88490)))

(assert (=> d!42635 (= res!65213 (and ((_ is Cons!1690) (toList!842 lt!69335)) (= (_1!1293 (h!2295 (toList!842 lt!69335))) lt!69334)))))

(assert (=> d!42635 (= (containsKey!176 (toList!842 lt!69335) lt!69334) e!88490)))

(declare-fun b!135918 () Bool)

(declare-fun e!88491 () Bool)

(assert (=> b!135918 (= e!88490 e!88491)))

(declare-fun res!65214 () Bool)

(assert (=> b!135918 (=> (not res!65214) (not e!88491))))

(assert (=> b!135918 (= res!65214 (and (or (not ((_ is Cons!1690) (toList!842 lt!69335))) (bvsle (_1!1293 (h!2295 (toList!842 lt!69335))) lt!69334)) ((_ is Cons!1690) (toList!842 lt!69335)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69335))) lt!69334)))))

(declare-fun b!135919 () Bool)

(assert (=> b!135919 (= e!88491 (containsKey!176 (t!6137 (toList!842 lt!69335)) lt!69334))))

(assert (= (and d!42635 (not res!65213)) b!135918))

(assert (= (and b!135918 res!65214) b!135919))

(declare-fun m!162395 () Bool)

(assert (=> b!135919 m!162395))

(assert (=> d!40969 d!42635))

(assert (=> b!134025 d!42439))

(assert (=> b!134025 d!42441))

(declare-fun b!135920 () Bool)

(declare-fun res!65215 () Bool)

(declare-fun e!88496 () Bool)

(assert (=> b!135920 (=> (not res!65215) (not e!88496))))

(declare-fun lt!71035 () List!1694)

(assert (=> b!135920 (= res!65215 (containsKey!176 lt!71035 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun b!135921 () Bool)

(declare-fun e!88494 () List!1694)

(declare-fun e!88495 () List!1694)

(assert (=> b!135921 (= e!88494 e!88495)))

(declare-fun c!25474 () Bool)

(assert (=> b!135921 (= c!25474 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69341))) (= (_1!1293 (h!2295 (t!6137 (toList!842 lt!69341)))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun bm!14904 () Bool)

(declare-fun call!14908 () List!1694)

(declare-fun call!14907 () List!1694)

(assert (=> bm!14904 (= call!14908 call!14907)))

(declare-fun b!135922 () Bool)

(declare-fun e!88492 () List!1694)

(assert (=> b!135922 (= e!88492 call!14908)))

(declare-fun c!25473 () Bool)

(declare-fun b!135923 () Bool)

(assert (=> b!135923 (= c!25473 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69341))) (bvsgt (_1!1293 (h!2295 (t!6137 (toList!842 lt!69341)))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> b!135923 (= e!88495 e!88492)))

(declare-fun b!135924 () Bool)

(assert (=> b!135924 (= e!88496 (contains!886 lt!71035 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!135925 () Bool)

(assert (=> b!135925 (= e!88495 call!14907)))

(declare-fun d!42637 () Bool)

(assert (=> d!42637 e!88496))

(declare-fun res!65216 () Bool)

(assert (=> d!42637 (=> (not res!65216) (not e!88496))))

(assert (=> d!42637 (= res!65216 (isStrictlySorted!309 lt!71035))))

(assert (=> d!42637 (= lt!71035 e!88494)))

(declare-fun c!25472 () Bool)

(assert (=> d!42637 (= c!25472 (and ((_ is Cons!1690) (t!6137 (toList!842 lt!69341))) (bvslt (_1!1293 (h!2295 (t!6137 (toList!842 lt!69341)))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!42637 (isStrictlySorted!309 (t!6137 (toList!842 lt!69341)))))

(assert (=> d!42637 (= (insertStrictlySorted!91 (t!6137 (toList!842 lt!69341)) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))) lt!71035)))

(declare-fun e!88493 () List!1694)

(declare-fun b!135926 () Bool)

(assert (=> b!135926 (= e!88493 (ite c!25474 (t!6137 (t!6137 (toList!842 lt!69341))) (ite c!25473 (Cons!1690 (h!2295 (t!6137 (toList!842 lt!69341))) (t!6137 (t!6137 (toList!842 lt!69341)))) Nil!1691)))))

(declare-fun b!135927 () Bool)

(declare-fun call!14909 () List!1694)

(assert (=> b!135927 (= e!88494 call!14909)))

(declare-fun b!135928 () Bool)

(assert (=> b!135928 (= e!88492 call!14908)))

(declare-fun b!135929 () Bool)

(assert (=> b!135929 (= e!88493 (insertStrictlySorted!91 (t!6137 (t!6137 (toList!842 lt!69341))) (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(declare-fun bm!14905 () Bool)

(assert (=> bm!14905 (= call!14907 call!14909)))

(declare-fun bm!14906 () Bool)

(assert (=> bm!14906 (= call!14909 ($colon$colon!91 e!88493 (ite c!25472 (h!2295 (t!6137 (toList!842 lt!69341))) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992))))) (_2!1293 (tuple2!2565 lt!69333 (minValue!2719 (v!3198 (underlying!454 thiss!992)))))))))))

(declare-fun c!25471 () Bool)

(assert (=> bm!14906 (= c!25471 c!25472)))

(assert (= (and d!42637 c!25472) b!135927))

(assert (= (and d!42637 (not c!25472)) b!135921))

(assert (= (and b!135921 c!25474) b!135925))

(assert (= (and b!135921 (not c!25474)) b!135923))

(assert (= (and b!135923 c!25473) b!135928))

(assert (= (and b!135923 (not c!25473)) b!135922))

(assert (= (or b!135928 b!135922) bm!14904))

(assert (= (or b!135925 bm!14904) bm!14905))

(assert (= (or b!135927 bm!14905) bm!14906))

(assert (= (and bm!14906 c!25471) b!135929))

(assert (= (and bm!14906 (not c!25471)) b!135926))

(assert (= (and d!42637 res!65216) b!135920))

(assert (= (and b!135920 res!65215) b!135924))

(declare-fun m!162397 () Bool)

(assert (=> b!135924 m!162397))

(declare-fun m!162399 () Bool)

(assert (=> b!135929 m!162399))

(declare-fun m!162401 () Bool)

(assert (=> bm!14906 m!162401))

(declare-fun m!162403 () Bool)

(assert (=> b!135920 m!162403))

(declare-fun m!162405 () Bool)

(assert (=> d!42637 m!162405))

(assert (=> d!42637 m!160127))

(assert (=> b!134002 d!42637))

(declare-fun d!42639 () Bool)

(declare-fun e!88498 () Bool)

(assert (=> d!42639 e!88498))

(declare-fun res!65217 () Bool)

(assert (=> d!42639 (=> res!65217 e!88498)))

(declare-fun lt!71036 () Bool)

(assert (=> d!42639 (= res!65217 (not lt!71036))))

(declare-fun lt!71037 () Bool)

(assert (=> d!42639 (= lt!71036 lt!71037)))

(declare-fun lt!71038 () Unit!4141)

(declare-fun e!88497 () Unit!4141)

(assert (=> d!42639 (= lt!71038 e!88497)))

(declare-fun c!25475 () Bool)

(assert (=> d!42639 (= c!25475 lt!71037)))

(assert (=> d!42639 (= lt!71037 (containsKey!176 (toList!842 lt!69854) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))

(assert (=> d!42639 (= (contains!884 lt!69854 (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))) lt!71036)))

(declare-fun b!135930 () Bool)

(declare-fun lt!71039 () Unit!4141)

(assert (=> b!135930 (= e!88497 lt!71039)))

(assert (=> b!135930 (= lt!71039 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69854) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))

(assert (=> b!135930 (isDefined!125 (getValueByKey!173 (toList!842 lt!69854) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))

(declare-fun b!135931 () Bool)

(declare-fun Unit!4278 () Unit!4141)

(assert (=> b!135931 (= e!88497 Unit!4278)))

(declare-fun b!135932 () Bool)

(assert (=> b!135932 (= e!88498 (isDefined!125 (getValueByKey!173 (toList!842 lt!69854) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))))))

(assert (= (and d!42639 c!25475) b!135930))

(assert (= (and d!42639 (not c!25475)) b!135931))

(assert (= (and d!42639 (not res!65217)) b!135932))

(declare-fun m!162407 () Bool)

(assert (=> d!42639 m!162407))

(declare-fun m!162409 () Bool)

(assert (=> b!135930 m!162409))

(assert (=> b!135930 m!157769))

(assert (=> b!135930 m!157769))

(declare-fun m!162411 () Bool)

(assert (=> b!135930 m!162411))

(assert (=> b!135932 m!157769))

(assert (=> b!135932 m!157769))

(assert (=> b!135932 m!162411))

(assert (=> d!40711 d!42639))

(declare-fun b!135934 () Bool)

(declare-fun e!88499 () Option!179)

(declare-fun e!88500 () Option!179)

(assert (=> b!135934 (= e!88499 e!88500)))

(declare-fun c!25477 () Bool)

(assert (=> b!135934 (= c!25477 (and ((_ is Cons!1690) lt!69855) (not (= (_1!1293 (h!2295 lt!69855)) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))))

(declare-fun b!135933 () Bool)

(assert (=> b!135933 (= e!88499 (Some!178 (_2!1293 (h!2295 lt!69855))))))

(declare-fun d!42641 () Bool)

(declare-fun c!25476 () Bool)

(assert (=> d!42641 (= c!25476 (and ((_ is Cons!1690) lt!69855) (= (_1!1293 (h!2295 lt!69855)) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))))))

(assert (=> d!42641 (= (getValueByKey!173 lt!69855 (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))) e!88499)))

(declare-fun b!135936 () Bool)

(assert (=> b!135936 (= e!88500 None!177)))

(declare-fun b!135935 () Bool)

(assert (=> b!135935 (= e!88500 (getValueByKey!173 (t!6137 lt!69855) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))

(assert (= (and d!42641 c!25476) b!135933))

(assert (= (and d!42641 (not c!25476)) b!135934))

(assert (= (and b!135934 c!25477) b!135935))

(assert (= (and b!135934 (not c!25477)) b!135936))

(declare-fun m!162413 () Bool)

(assert (=> b!135935 m!162413))

(assert (=> d!40711 d!42641))

(declare-fun d!42643 () Bool)

(assert (=> d!42643 (= (getValueByKey!173 lt!69855 (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))) (Some!178 (_2!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))

(declare-fun lt!71040 () Unit!4141)

(assert (=> d!42643 (= lt!71040 (choose!833 lt!69855 (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))

(declare-fun e!88501 () Bool)

(assert (=> d!42643 e!88501))

(declare-fun res!65218 () Bool)

(assert (=> d!42643 (=> (not res!65218) (not e!88501))))

(assert (=> d!42643 (= res!65218 (isStrictlySorted!309 lt!69855))))

(assert (=> d!42643 (= (lemmaContainsTupThenGetReturnValue!88 lt!69855 (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))) lt!71040)))

(declare-fun b!135937 () Bool)

(declare-fun res!65219 () Bool)

(assert (=> b!135937 (=> (not res!65219) (not e!88501))))

(assert (=> b!135937 (= res!65219 (containsKey!176 lt!69855 (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))

(declare-fun b!135938 () Bool)

(assert (=> b!135938 (= e!88501 (contains!886 lt!69855 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))))))

(assert (= (and d!42643 res!65218) b!135937))

(assert (= (and b!135937 res!65219) b!135938))

(assert (=> d!42643 m!157763))

(declare-fun m!162415 () Bool)

(assert (=> d!42643 m!162415))

(declare-fun m!162417 () Bool)

(assert (=> d!42643 m!162417))

(declare-fun m!162419 () Bool)

(assert (=> b!135937 m!162419))

(declare-fun m!162421 () Bool)

(assert (=> b!135938 m!162421))

(assert (=> d!40711 d!42643))

(declare-fun b!135939 () Bool)

(declare-fun res!65220 () Bool)

(declare-fun e!88506 () Bool)

(assert (=> b!135939 (=> (not res!65220) (not e!88506))))

(declare-fun lt!71041 () List!1694)

(assert (=> b!135939 (= res!65220 (containsKey!176 lt!71041 (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))

(declare-fun b!135940 () Bool)

(declare-fun e!88504 () List!1694)

(declare-fun e!88505 () List!1694)

(assert (=> b!135940 (= e!88504 e!88505)))

(declare-fun c!25481 () Bool)

(assert (=> b!135940 (= c!25481 (and ((_ is Cons!1690) (toList!842 lt!69501)) (= (_1!1293 (h!2295 (toList!842 lt!69501))) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))))))

(declare-fun bm!14907 () Bool)

(declare-fun call!14911 () List!1694)

(declare-fun call!14910 () List!1694)

(assert (=> bm!14907 (= call!14911 call!14910)))

(declare-fun b!135941 () Bool)

(declare-fun e!88502 () List!1694)

(assert (=> b!135941 (= e!88502 call!14911)))

(declare-fun c!25480 () Bool)

(declare-fun b!135942 () Bool)

(assert (=> b!135942 (= c!25480 (and ((_ is Cons!1690) (toList!842 lt!69501)) (bvsgt (_1!1293 (h!2295 (toList!842 lt!69501))) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))))))

(assert (=> b!135942 (= e!88505 e!88502)))

(declare-fun b!135943 () Bool)

(assert (=> b!135943 (= e!88506 (contains!886 lt!71041 (tuple2!2565 (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))))))

(declare-fun b!135944 () Bool)

(assert (=> b!135944 (= e!88505 call!14910)))

(declare-fun d!42645 () Bool)

(assert (=> d!42645 e!88506))

(declare-fun res!65221 () Bool)

(assert (=> d!42645 (=> (not res!65221) (not e!88506))))

(assert (=> d!42645 (= res!65221 (isStrictlySorted!309 lt!71041))))

(assert (=> d!42645 (= lt!71041 e!88504)))

(declare-fun c!25479 () Bool)

(assert (=> d!42645 (= c!25479 (and ((_ is Cons!1690) (toList!842 lt!69501)) (bvslt (_1!1293 (h!2295 (toList!842 lt!69501))) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))))))))

(assert (=> d!42645 (isStrictlySorted!309 (toList!842 lt!69501))))

(assert (=> d!42645 (= (insertStrictlySorted!91 (toList!842 lt!69501) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))) lt!71041)))

(declare-fun b!135945 () Bool)

(declare-fun e!88503 () List!1694)

(assert (=> b!135945 (= e!88503 (ite c!25481 (t!6137 (toList!842 lt!69501)) (ite c!25480 (Cons!1690 (h!2295 (toList!842 lt!69501)) (t!6137 (toList!842 lt!69501))) Nil!1691)))))

(declare-fun b!135946 () Bool)

(declare-fun call!14912 () List!1694)

(assert (=> b!135946 (= e!88504 call!14912)))

(declare-fun b!135947 () Bool)

(assert (=> b!135947 (= e!88502 call!14911)))

(declare-fun b!135948 () Bool)

(assert (=> b!135948 (= e!88503 (insertStrictlySorted!91 (t!6137 (toList!842 lt!69501)) (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))

(declare-fun bm!14908 () Bool)

(assert (=> bm!14908 (= call!14910 call!14912)))

(declare-fun bm!14909 () Bool)

(assert (=> bm!14909 (= call!14912 ($colon$colon!91 e!88503 (ite c!25479 (h!2295 (toList!842 lt!69501)) (tuple2!2565 (_1!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16))) (_2!1293 (tuple2!2565 lt!69493 (minValue!2719 newMap!16)))))))))

(declare-fun c!25478 () Bool)

(assert (=> bm!14909 (= c!25478 c!25479)))

(assert (= (and d!42645 c!25479) b!135946))

(assert (= (and d!42645 (not c!25479)) b!135940))

(assert (= (and b!135940 c!25481) b!135944))

(assert (= (and b!135940 (not c!25481)) b!135942))

(assert (= (and b!135942 c!25480) b!135947))

(assert (= (and b!135942 (not c!25480)) b!135941))

(assert (= (or b!135947 b!135941) bm!14907))

(assert (= (or b!135944 bm!14907) bm!14908))

(assert (= (or b!135946 bm!14908) bm!14909))

(assert (= (and bm!14909 c!25478) b!135948))

(assert (= (and bm!14909 (not c!25478)) b!135945))

(assert (= (and d!42645 res!65221) b!135939))

(assert (= (and b!135939 res!65220) b!135943))

(declare-fun m!162423 () Bool)

(assert (=> b!135943 m!162423))

(declare-fun m!162425 () Bool)

(assert (=> b!135948 m!162425))

(declare-fun m!162427 () Bool)

(assert (=> bm!14909 m!162427))

(declare-fun m!162429 () Bool)

(assert (=> b!135939 m!162429))

(declare-fun m!162431 () Bool)

(assert (=> d!42645 m!162431))

(declare-fun m!162433 () Bool)

(assert (=> d!42645 m!162433))

(assert (=> d!40711 d!42645))

(declare-fun d!42647 () Bool)

(assert (=> d!42647 (= (isEmpty!415 lt!69694) (isEmpty!417 (toList!842 lt!69694)))))

(declare-fun bs!5726 () Bool)

(assert (= bs!5726 d!42647))

(declare-fun m!162435 () Bool)

(assert (=> bs!5726 m!162435))

(assert (=> b!133273 d!42647))

(declare-fun b!135950 () Bool)

(declare-fun e!88507 () Option!179)

(declare-fun e!88508 () Option!179)

(assert (=> b!135950 (= e!88507 e!88508)))

(declare-fun c!25483 () Bool)

(assert (=> b!135950 (= c!25483 (and ((_ is Cons!1690) (toList!842 lt!69872)) (not (= (_1!1293 (h!2295 (toList!842 lt!69872))) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))))

(declare-fun b!135949 () Bool)

(assert (=> b!135949 (= e!88507 (Some!178 (_2!1293 (h!2295 (toList!842 lt!69872)))))))

(declare-fun c!25482 () Bool)

(declare-fun d!42649 () Bool)

(assert (=> d!42649 (= c!25482 (and ((_ is Cons!1690) (toList!842 lt!69872)) (= (_1!1293 (h!2295 (toList!842 lt!69872))) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16)))))))))

(assert (=> d!42649 (= (getValueByKey!173 (toList!842 lt!69872) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))) e!88507)))

(declare-fun b!135952 () Bool)

(assert (=> b!135952 (= e!88508 None!177)))

(declare-fun b!135951 () Bool)

(assert (=> b!135951 (= e!88508 (getValueByKey!173 (t!6137 (toList!842 lt!69872)) (_1!1293 (tuple2!2565 lt!69502 (ite (and c!24553 c!24565) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2719 newMap!16))))))))

(assert (= (and d!42649 c!25482) b!135949))

(assert (= (and d!42649 (not c!25482)) b!135950))

(assert (= (and b!135950 c!25483) b!135951))

(assert (= (and b!135950 (not c!25483)) b!135952))

(declare-fun m!162437 () Bool)

(assert (=> b!135951 m!162437))

(assert (=> b!133555 d!42649))

(declare-fun lt!71042 () Bool)

(declare-fun d!42651 () Bool)

(assert (=> d!42651 (= lt!71042 (select (content!134 (toList!842 lt!69944)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!88510 () Bool)

(assert (=> d!42651 (= lt!71042 e!88510)))

(declare-fun res!65223 () Bool)

(assert (=> d!42651 (=> (not res!65223) (not e!88510))))

(assert (=> d!42651 (= res!65223 ((_ is Cons!1690) (toList!842 lt!69944)))))

(assert (=> d!42651 (= (contains!886 (toList!842 lt!69944) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!71042)))

(declare-fun b!135953 () Bool)

(declare-fun e!88509 () Bool)

(assert (=> b!135953 (= e!88510 e!88509)))

(declare-fun res!65222 () Bool)

(assert (=> b!135953 (=> res!65222 e!88509)))

(assert (=> b!135953 (= res!65222 (= (h!2295 (toList!842 lt!69944)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135954 () Bool)

(assert (=> b!135954 (= e!88509 (contains!886 (t!6137 (toList!842 lt!69944)) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42651 res!65223) b!135953))

(assert (= (and b!135953 (not res!65222)) b!135954))

(declare-fun m!162439 () Bool)

(assert (=> d!42651 m!162439))

(declare-fun m!162441 () Bool)

(assert (=> d!42651 m!162441))

(declare-fun m!162443 () Bool)

(assert (=> b!135954 m!162443))

(assert (=> b!133693 d!42651))

(declare-fun d!42653 () Bool)

(declare-fun e!88512 () Bool)

(assert (=> d!42653 e!88512))

(declare-fun res!65224 () Bool)

(assert (=> d!42653 (=> res!65224 e!88512)))

(declare-fun lt!71043 () Bool)

(assert (=> d!42653 (= res!65224 (not lt!71043))))

(declare-fun lt!71044 () Bool)

(assert (=> d!42653 (= lt!71043 lt!71044)))

(declare-fun lt!71045 () Unit!4141)

(declare-fun e!88511 () Unit!4141)

(assert (=> d!42653 (= lt!71045 e!88511)))

(declare-fun c!25484 () Bool)

(assert (=> d!42653 (= c!25484 lt!71044)))

(assert (=> d!42653 (= lt!71044 (containsKey!176 (toList!842 lt!69779) (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!42653 (= (contains!884 lt!69779 (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)) lt!71043)))

(declare-fun b!135955 () Bool)

(declare-fun lt!71046 () Unit!4141)

(assert (=> b!135955 (= e!88511 lt!71046)))

(assert (=> b!135955 (= lt!71046 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!69779) (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!135955 (isDefined!125 (getValueByKey!173 (toList!842 lt!69779) (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!135956 () Bool)

(declare-fun Unit!4279 () Unit!4141)

(assert (=> b!135956 (= e!88511 Unit!4279)))

(declare-fun b!135957 () Bool)

(assert (=> b!135957 (= e!88512 (isDefined!125 (getValueByKey!173 (toList!842 lt!69779) (select (arr!2252 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16)))) #b00000000000000000000000000000000))))))

(assert (= (and d!42653 c!25484) b!135955))

(assert (= (and d!42653 (not c!25484)) b!135956))

(assert (= (and d!42653 (not res!65224)) b!135957))

(assert (=> d!42653 m!157539))

(declare-fun m!162445 () Bool)

(assert (=> d!42653 m!162445))

(assert (=> b!135955 m!157539))

(declare-fun m!162447 () Bool)

(assert (=> b!135955 m!162447))

(assert (=> b!135955 m!157539))

(assert (=> b!135955 m!159949))

(assert (=> b!135955 m!159949))

(declare-fun m!162449 () Bool)

(assert (=> b!135955 m!162449))

(assert (=> b!135957 m!157539))

(assert (=> b!135957 m!159949))

(assert (=> b!135957 m!159949))

(assert (=> b!135957 m!162449))

(assert (=> b!133430 d!42653))

(declare-fun lt!71047 () Bool)

(declare-fun d!42655 () Bool)

(assert (=> d!42655 (= lt!71047 (select (content!134 (t!6137 (toList!842 lt!69373))) (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!88514 () Bool)

(assert (=> d!42655 (= lt!71047 e!88514)))

(declare-fun res!65226 () Bool)

(assert (=> d!42655 (=> (not res!65226) (not e!88514))))

(assert (=> d!42655 (= res!65226 ((_ is Cons!1690) (t!6137 (toList!842 lt!69373))))))

(assert (=> d!42655 (= (contains!886 (t!6137 (toList!842 lt!69373)) (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!71047)))

(declare-fun b!135958 () Bool)

(declare-fun e!88513 () Bool)

(assert (=> b!135958 (= e!88514 e!88513)))

(declare-fun res!65225 () Bool)

(assert (=> b!135958 (=> res!65225 e!88513)))

(assert (=> b!135958 (= res!65225 (= (h!2295 (t!6137 (toList!842 lt!69373))) (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!135959 () Bool)

(assert (=> b!135959 (= e!88513 (contains!886 (t!6137 (t!6137 (toList!842 lt!69373))) (ite c!24553 (ite c!24565 (tuple2!2565 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2565 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42655 res!65226) b!135958))

(assert (= (and b!135958 (not res!65225)) b!135959))

(assert (=> d!42655 m!160677))

(declare-fun m!162451 () Bool)

(assert (=> d!42655 m!162451))

(declare-fun m!162453 () Bool)

(assert (=> b!135959 m!162453))

(assert (=> b!134055 d!42655))

(declare-fun d!42657 () Bool)

(assert (=> d!42657 (= (inRange!0 (ite c!24765 (index!3236 lt!69902) (index!3239 lt!69902)) (mask!7164 newMap!16)) (and (bvsge (ite c!24765 (index!3236 lt!69902) (index!3239 lt!69902)) #b00000000000000000000000000000000) (bvslt (ite c!24765 (index!3236 lt!69902) (index!3239 lt!69902)) (bvadd (mask!7164 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14727 d!42657))

(declare-fun d!42659 () Bool)

(declare-fun e!88516 () Bool)

(assert (=> d!42659 e!88516))

(declare-fun res!65227 () Bool)

(assert (=> d!42659 (=> res!65227 e!88516)))

(declare-fun lt!71048 () Bool)

(assert (=> d!42659 (= res!65227 (not lt!71048))))

(declare-fun lt!71049 () Bool)

(assert (=> d!42659 (= lt!71048 lt!71049)))

(declare-fun lt!71050 () Unit!4141)

(declare-fun e!88515 () Unit!4141)

(assert (=> d!42659 (= lt!71050 e!88515)))

(declare-fun c!25485 () Bool)

(assert (=> d!42659 (= c!25485 lt!71049)))

(assert (=> d!42659 (= lt!71049 (containsKey!176 (toList!842 lt!70032) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42659 (= (contains!884 lt!70032 #b1000000000000000000000000000000000000000000000000000000000000000) lt!71048)))

(declare-fun b!135960 () Bool)

(declare-fun lt!71051 () Unit!4141)

(assert (=> b!135960 (= e!88515 lt!71051)))

(assert (=> b!135960 (= lt!71051 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!842 lt!70032) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!135960 (isDefined!125 (getValueByKey!173 (toList!842 lt!70032) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!135961 () Bool)

(declare-fun Unit!4280 () Unit!4141)

(assert (=> b!135961 (= e!88515 Unit!4280)))

(declare-fun b!135962 () Bool)

(assert (=> b!135962 (= e!88516 (isDefined!125 (getValueByKey!173 (toList!842 lt!70032) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42659 c!25485) b!135960))

(assert (= (and d!42659 (not c!25485)) b!135961))

(assert (= (and d!42659 (not res!65227)) b!135962))

(declare-fun m!162455 () Bool)

(assert (=> d!42659 m!162455))

(declare-fun m!162457 () Bool)

(assert (=> b!135960 m!162457))

(assert (=> b!135960 m!159519))

(assert (=> b!135960 m!159519))

(declare-fun m!162459 () Bool)

(assert (=> b!135960 m!162459))

(assert (=> b!135962 m!159519))

(assert (=> b!135962 m!159519))

(assert (=> b!135962 m!162459))

(assert (=> bm!14760 d!42659))

(assert (=> d!40789 d!40791))

(assert (=> d!40789 d!40793))

(declare-fun d!42661 () Bool)

(assert (=> d!42661 (isDefined!125 (getValueByKey!173 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)))))

(assert (=> d!42661 true))

(declare-fun _$12!406 () Unit!4141)

(assert (=> d!42661 (= (choose!831 (toList!842 call!14589) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) _$12!406)))

(declare-fun bs!5727 () Bool)

(assert (= bs!5727 d!42661))

(assert (=> bs!5727 m!156395))

(assert (=> bs!5727 m!156905))

(assert (=> bs!5727 m!156905))

(assert (=> bs!5727 m!156907))

(assert (=> d!40789 d!42661))

(declare-fun d!42663 () Bool)

(declare-fun res!65228 () Bool)

(declare-fun e!88517 () Bool)

(assert (=> d!42663 (=> res!65228 e!88517)))

(assert (=> d!42663 (= res!65228 (or ((_ is Nil!1691) (toList!842 call!14589)) ((_ is Nil!1691) (t!6137 (toList!842 call!14589)))))))

(assert (=> d!42663 (= (isStrictlySorted!309 (toList!842 call!14589)) e!88517)))

(declare-fun b!135963 () Bool)

(declare-fun e!88518 () Bool)

(assert (=> b!135963 (= e!88517 e!88518)))

(declare-fun res!65229 () Bool)

(assert (=> b!135963 (=> (not res!65229) (not e!88518))))

(assert (=> b!135963 (= res!65229 (bvslt (_1!1293 (h!2295 (toList!842 call!14589))) (_1!1293 (h!2295 (t!6137 (toList!842 call!14589))))))))

(declare-fun b!135964 () Bool)

(assert (=> b!135964 (= e!88518 (isStrictlySorted!309 (t!6137 (toList!842 call!14589))))))

(assert (= (and d!42663 (not res!65228)) b!135963))

(assert (= (and b!135963 res!65229) b!135964))

(declare-fun m!162461 () Bool)

(assert (=> b!135964 m!162461))

(assert (=> d!40789 d!42663))

(declare-fun d!42665 () Bool)

(assert (=> d!42665 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4764 (store (arr!2252 (_keys!4613 newMap!16)) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355)) (size!2521 (_keys!4613 newMap!16))) (mask!7164 newMap!16))))

(assert (=> d!42665 true))

(declare-fun _$56!12 () Unit!4141)

(assert (=> d!42665 (= (choose!102 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (_keys!4613 newMap!16) (ite c!24561 (index!3239 lt!69284) (index!3236 lt!69284)) (mask!7164 newMap!16)) _$56!12)))

(declare-fun bs!5728 () Bool)

(assert (= bs!5728 d!42665))

(assert (=> bs!5728 m!156719))

(assert (=> bs!5728 m!156703))

(assert (=> d!40683 d!42665))

(assert (=> d!40683 d!40591))

(declare-fun d!42667 () Bool)

(declare-fun lt!71052 () Bool)

(assert (=> d!42667 (= lt!71052 (select (content!133 Nil!1690) (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(declare-fun e!88520 () Bool)

(assert (=> d!42667 (= lt!71052 e!88520)))

(declare-fun res!65230 () Bool)

(assert (=> d!42667 (=> (not res!65230) (not e!88520))))

(assert (=> d!42667 (= res!65230 ((_ is Cons!1689) Nil!1690))))

(assert (=> d!42667 (= (contains!885 Nil!1690 (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)) lt!71052)))

(declare-fun b!135965 () Bool)

(declare-fun e!88519 () Bool)

(assert (=> b!135965 (= e!88520 e!88519)))

(declare-fun res!65231 () Bool)

(assert (=> b!135965 (=> res!65231 e!88519)))

(assert (=> b!135965 (= res!65231 (= (h!2294 Nil!1690) (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(declare-fun b!135966 () Bool)

(assert (=> b!135966 (= e!88519 (contains!885 (t!6136 Nil!1690) (select (arr!2252 (_keys!4613 (_2!1294 lt!69280))) #b00000000000000000000000000000000)))))

(assert (= (and d!42667 res!65230) b!135965))

(assert (= (and b!135965 (not res!65231)) b!135966))

(assert (=> d!42667 m!156829))

(assert (=> d!42667 m!157455))

(declare-fun m!162463 () Bool)

(assert (=> d!42667 m!162463))

(assert (=> b!135966 m!157455))

(declare-fun m!162465 () Bool)

(assert (=> b!135966 m!162465))

(assert (=> b!133741 d!42667))

(declare-fun lt!71053 () Bool)

(declare-fun d!42669 () Bool)

(assert (=> d!42669 (= lt!71053 (select (content!134 (t!6137 (toList!842 lt!69545))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!88522 () Bool)

(assert (=> d!42669 (= lt!71053 e!88522)))

(declare-fun res!65233 () Bool)

(assert (=> d!42669 (=> (not res!65233) (not e!88522))))

(assert (=> d!42669 (= res!65233 ((_ is Cons!1690) (t!6137 (toList!842 lt!69545))))))

(assert (=> d!42669 (= (contains!886 (t!6137 (toList!842 lt!69545)) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!71053)))

(declare-fun b!135967 () Bool)

(declare-fun e!88521 () Bool)

(assert (=> b!135967 (= e!88522 e!88521)))

(declare-fun res!65232 () Bool)

(assert (=> b!135967 (=> res!65232 e!88521)))

(assert (=> b!135967 (= res!65232 (= (h!2295 (t!6137 (toList!842 lt!69545))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!135968 () Bool)

(assert (=> b!135968 (= e!88521 (contains!886 (t!6137 (t!6137 (toList!842 lt!69545))) (tuple2!2565 (select (arr!2252 (_keys!4613 (v!3198 (underlying!454 thiss!992)))) from!355) (get!1489 (select (arr!2253 (_values!2847 (v!3198 (underlying!454 thiss!992)))) from!355) (dynLambda!426 (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42669 res!65233) b!135967))

(assert (= (and b!135967 (not res!65232)) b!135968))

(assert (=> d!42669 m!160929))

(declare-fun m!162467 () Bool)

(assert (=> d!42669 m!162467))

(declare-fun m!162469 () Bool)

(assert (=> b!135968 m!162469))

(assert (=> b!133368 d!42669))

(declare-fun d!42671 () Bool)

(assert (=> d!42671 (= (apply!116 lt!69989 (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000)) (get!1492 (getValueByKey!173 (toList!842 lt!69989) (select (arr!2252 (_keys!4613 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5729 () Bool)

(assert (= bs!5729 d!42671))

(assert (=> bs!5729 m!156679))

(assert (=> bs!5729 m!160047))

(assert (=> bs!5729 m!160047))

(declare-fun m!162471 () Bool)

(assert (=> bs!5729 m!162471))

(assert (=> b!133775 d!42671))

(assert (=> b!133775 d!40885))

(declare-fun d!42673 () Bool)

(declare-fun res!65234 () Bool)

(declare-fun e!88523 () Bool)

(assert (=> d!42673 (=> res!65234 e!88523)))

(assert (=> d!42673 (= res!65234 (and ((_ is Cons!1690) lt!69973) (= (_1!1293 (h!2295 lt!69973)) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(assert (=> d!42673 (= (containsKey!176 lt!69973 (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))) e!88523)))

(declare-fun b!135969 () Bool)

(declare-fun e!88524 () Bool)

(assert (=> b!135969 (= e!88523 e!88524)))

(declare-fun res!65235 () Bool)

(assert (=> b!135969 (=> (not res!65235) (not e!88524))))

(assert (=> b!135969 (= res!65235 (and (or (not ((_ is Cons!1690) lt!69973)) (bvsle (_1!1293 (h!2295 lt!69973)) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))) ((_ is Cons!1690) lt!69973) (bvslt (_1!1293 (h!2295 lt!69973)) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992))))))))))

(declare-fun b!135970 () Bool)

(assert (=> b!135970 (= e!88524 (containsKey!176 (t!6137 lt!69973) (_1!1293 (tuple2!2565 lt!69342 (zeroValue!2719 (v!3198 (underlying!454 thiss!992)))))))))

(assert (= (and d!42673 (not res!65234)) b!135969))

(assert (= (and b!135969 res!65235) b!135970))

(declare-fun m!162473 () Bool)

(assert (=> b!135970 m!162473))

(assert (=> b!133724 d!42673))

(declare-fun mapIsEmpty!4659 () Bool)

(declare-fun mapRes!4659 () Bool)

(assert (=> mapIsEmpty!4659 mapRes!4659))

(declare-fun condMapEmpty!4659 () Bool)

(declare-fun mapDefault!4659 () ValueCell!1094)

(assert (=> mapNonEmpty!4658 (= condMapEmpty!4659 (= mapRest!4658 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4659)))))

(declare-fun e!88525 () Bool)

(assert (=> mapNonEmpty!4658 (= tp!11228 (and e!88525 mapRes!4659))))

(declare-fun b!135971 () Bool)

(declare-fun e!88526 () Bool)

(assert (=> b!135971 (= e!88526 tp_is_empty!2875)))

(declare-fun mapNonEmpty!4659 () Bool)

(declare-fun tp!11229 () Bool)

(assert (=> mapNonEmpty!4659 (= mapRes!4659 (and tp!11229 e!88526))))

(declare-fun mapValue!4659 () ValueCell!1094)

(declare-fun mapRest!4659 () (Array (_ BitVec 32) ValueCell!1094))

(declare-fun mapKey!4659 () (_ BitVec 32))

(assert (=> mapNonEmpty!4659 (= mapRest!4658 (store mapRest!4659 mapKey!4659 mapValue!4659))))

(declare-fun b!135972 () Bool)

(assert (=> b!135972 (= e!88525 tp_is_empty!2875)))

(assert (= (and mapNonEmpty!4658 condMapEmpty!4659) mapIsEmpty!4659))

(assert (= (and mapNonEmpty!4658 (not condMapEmpty!4659)) mapNonEmpty!4659))

(assert (= (and mapNonEmpty!4659 ((_ is ValueCellFull!1094) mapValue!4659)) b!135971))

(assert (= (and mapNonEmpty!4658 ((_ is ValueCellFull!1094) mapDefault!4659)) b!135972))

(declare-fun m!162475 () Bool)

(assert (=> mapNonEmpty!4659 m!162475))

(declare-fun mapIsEmpty!4660 () Bool)

(declare-fun mapRes!4660 () Bool)

(assert (=> mapIsEmpty!4660 mapRes!4660))

(declare-fun condMapEmpty!4660 () Bool)

(declare-fun mapDefault!4660 () ValueCell!1094)

(assert (=> mapNonEmpty!4657 (= condMapEmpty!4660 (= mapRest!4657 ((as const (Array (_ BitVec 32) ValueCell!1094)) mapDefault!4660)))))

(declare-fun e!88527 () Bool)

(assert (=> mapNonEmpty!4657 (= tp!11227 (and e!88527 mapRes!4660))))

(declare-fun b!135973 () Bool)

(declare-fun e!88528 () Bool)

(assert (=> b!135973 (= e!88528 tp_is_empty!2875)))

(declare-fun mapNonEmpty!4660 () Bool)

(declare-fun tp!11230 () Bool)

(assert (=> mapNonEmpty!4660 (= mapRes!4660 (and tp!11230 e!88528))))

(declare-fun mapRest!4660 () (Array (_ BitVec 32) ValueCell!1094))

(declare-fun mapValue!4660 () ValueCell!1094)

(declare-fun mapKey!4660 () (_ BitVec 32))

(assert (=> mapNonEmpty!4660 (= mapRest!4657 (store mapRest!4660 mapKey!4660 mapValue!4660))))

(declare-fun b!135974 () Bool)

(assert (=> b!135974 (= e!88527 tp_is_empty!2875)))

(assert (= (and mapNonEmpty!4657 condMapEmpty!4660) mapIsEmpty!4660))

(assert (= (and mapNonEmpty!4657 (not condMapEmpty!4660)) mapNonEmpty!4660))

(assert (= (and mapNonEmpty!4660 ((_ is ValueCellFull!1094) mapValue!4660)) b!135973))

(assert (= (and mapNonEmpty!4657 ((_ is ValueCellFull!1094) mapDefault!4660)) b!135974))

(declare-fun m!162477 () Bool)

(assert (=> mapNonEmpty!4660 m!162477))

(declare-fun b_lambda!6049 () Bool)

(assert (= b_lambda!6003 (or (and b!132503 b_free!2917) (and b!132502 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))))) b_lambda!6049)))

(declare-fun b_lambda!6051 () Bool)

(assert (= b_lambda!6029 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6051)))

(declare-fun b_lambda!6053 () Bool)

(assert (= b_lambda!6013 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6053)))

(declare-fun b_lambda!6055 () Bool)

(assert (= b_lambda!6047 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6055)))

(declare-fun b_lambda!6057 () Bool)

(assert (= b_lambda!6031 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6057)))

(declare-fun b_lambda!6059 () Bool)

(assert (= b_lambda!6027 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6059)))

(declare-fun b_lambda!6061 () Bool)

(assert (= b_lambda!6033 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6061)))

(declare-fun b_lambda!6063 () Bool)

(assert (= b_lambda!6035 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6063)))

(declare-fun b_lambda!6065 () Bool)

(assert (= b_lambda!6015 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6065)))

(declare-fun b_lambda!6067 () Bool)

(assert (= b_lambda!6037 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6067)))

(declare-fun b_lambda!6069 () Bool)

(assert (= b_lambda!6041 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6069)))

(declare-fun b_lambda!6071 () Bool)

(assert (= b_lambda!6005 (or (and b!132503 b_free!2917) (and b!132502 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))))) b_lambda!6071)))

(declare-fun b_lambda!6073 () Bool)

(assert (= b_lambda!6039 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6073)))

(declare-fun b_lambda!6075 () Bool)

(assert (= b_lambda!6019 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6075)))

(declare-fun b_lambda!6077 () Bool)

(assert (= b_lambda!6017 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6077)))

(declare-fun b_lambda!6079 () Bool)

(assert (= b_lambda!6043 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6079)))

(declare-fun b_lambda!6081 () Bool)

(assert (= b_lambda!6045 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6081)))

(declare-fun b_lambda!6083 () Bool)

(assert (= b_lambda!5955 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 (_2!1294 lt!69280)))) (and b!132502 b_free!2919 (= (defaultEntry!2864 newMap!16) (defaultEntry!2864 (_2!1294 lt!69280)))) b_lambda!6083)))

(declare-fun b_lambda!6085 () Bool)

(assert (= b_lambda!6009 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6085)))

(declare-fun b_lambda!6087 () Bool)

(assert (= b_lambda!6007 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6087)))

(declare-fun b_lambda!6089 () Bool)

(assert (= b_lambda!6025 (or (and b!132503 b_free!2917 (= (defaultEntry!2864 (v!3198 (underlying!454 thiss!992))) (defaultEntry!2864 newMap!16))) (and b!132502 b_free!2919) b_lambda!6089)))

(check-sat (not d!41929) (not d!42281) (not b!134861) (not b!134694) (not b!134314) (not b_lambda!6059) (not d!42347) (not d!42615) (not b!134988) (not d!42573) (not b!135674) (not bm!14819) (not d!42307) (not b!134857) (not b!135510) (not b!134414) (not b!134591) (not b!135443) (not b!134365) (not b!135036) (not b!134179) (not b!134106) (not b!134130) (not d!42137) (not b!134257) (not d!42589) (not d!42297) (not d!41887) (not b!135085) (not d!41783) (not d!41441) (not b!135290) (not bm!14881) (not b!135646) (not b!134940) (not bm!14790) (not b!135902) (not b!135158) (not b!135124) (not d!42127) (not b!135742) (not bm!14882) (not d!41251) (not d!42575) (not b!134859) (not b!134401) (not b!135502) (not b!134965) (not b!134654) (not b!135401) (not d!41423) (not b!134498) (not b!134107) (not d!42249) (not d!42037) (not d!41125) (not d!42207) (not b!134850) (not b_lambda!6051) (not b!134883) (not b!134117) (not b!134418) (not b!135948) (not b!134691) (not d!41625) (not b!134525) (not b!134371) (not b!134897) (not b!134144) (not b!135643) (not b!134827) (not bm!14822) (not d!41303) (not bm!14859) (not b!135366) (not b!134846) (not b!135793) (not bm!14868) (not d!41903) (not d!41195) (not d!41527) (not d!42583) (not d!41979) (not b!135403) (not b!135365) (not b!134443) (not b!134793) (not b!135855) (not b!135527) (not b!135916) (not d!41807) (not b!134752) (not b!135523) (not d!42263) (not b!134499) (not d!41233) (not d!41829) (not b!135035) (not b!135354) (not d!42455) (not b!135339) (not b!135798) (not b!135924) (not d!42157) (not d!41425) (not d!42103) (not b!134368) (not d!42115) (not b!135765) (not d!41985) (not b!134554) (not d!42025) (not b!134485) (not b!135721) (not b!134759) (not bm!14801) (not d!42147) (not d!41733) (not d!41805) (not b!134133) (not bm!14826) (not b!135111) (not b!134124) (not d!41363) (not d!42643) (not b!135684) (not b!134954) (not d!41257) (not b!134324) (not b!135380) (not b!134710) (not b!134637) (not b!134683) (not b!134103) (not b!135911) (not b!134122) (not b!135190) (not b_lambda!6067) (not b!134787) (not d!41823) (not b!135209) (not bm!14885) (not b!135792) (not b!135868) (not b!134191) (not b!135221) (not b!134162) (not d!42409) (not b!134639) (not d!42123) (not d!41599) (not b_lambda!5977) (not b!135052) (not b!135784) (not b!134493) (not b!135554) (not d!41131) (not b!135856) (not b!135727) (not b!135253) (not b!134313) (not b!135819) (not b!134456) (not b!135895) (not b!134452) (not b!135803) (not b!134376) (not d!42235) (not b!135538) (not b!135962) (not b!134817) (not b!134143) (not d!42371) (not bm!14860) (not d!42265) (not bm!14827) (not b!134271) (not b!134622) (not b!134864) (not b!135586) (not b!134934) (not d!41267) (not b!134893) (not b!134971) (not d!42305) (not b!135015) (not d!41841) (not d!41181) (not b!134633) (not b!135520) (not d!41957) (not d!41549) (not b!135143) (not b!135637) (not b!134399) (not d!42319) (not bm!14848) (not d!42167) (not bm!14906) (not d!41305) (not b!135277) (not d!41279) (not b!135484) (not b!135284) (not b!134298) (not bm!14852) (not b!134641) (not b!134458) (not d!42059) (not b!135472) (not b!134656) (not b!135597) (not b!135178) (not d!42567) (not b!135084) (not d!41197) (not b!135417) (not b!134397) (not d!41191) (not d!42315) (not d!42571) (not b!135749) (not d!41755) (not d!42201) (not bm!14800) (not d!41281) (not b!135151) (not d!42561) (not d!41787) (not d!41221) (not d!41623) (not d!42607) (not b!134247) (not b_lambda!5983) (not b!135551) (not b!134594) (not b!134104) (not b!135343) (not b!134153) (not d!41575) (not b!135409) (not b!135801) (not b!135109) (not d!41435) (not d!41977) (not d!41413) (not b!134447) (not d!41487) (not b!135301) (not bm!14813) (not b!134571) (not b!134409) (not d!41505) (not bm!14903) (not b!134673) (not d!41617) (not b!135067) (not b!135893) (not b!134303) (not b!134704) (not b!134662) (not b_lambda!5991) (not b!134343) (not b!135930) (not d!41287) (not b!135102) (not d!42519) (not b!134471) (not d!41117) (not d!41283) (not b!134384) (not b!134632) (not d!41247) (not b!134213) (not bm!14847) (not b!135335) (not b!135070) (not b!135305) (not b!134520) (not b!134613) (not d!41389) (not b!134120) (not b!135828) (not d!42515) (not d!42509) (not bm!14788) (not b!135679) (not b!134448) (not b_lambda!6063) (not b!135872) (not d!41379) (not b!135242) (not d!41573) (not b!134227) (not b!134575) (not b!134341) (not b!135145) (not d!41597) (not b!135437) (not b_lambda!5923) (not b!135622) (not b!134877) (not b!134976) (not b!134195) (not b!134362) (not b!134614) (not d!42225) (not b!134432) (not b!134847) (not d!41445) (not d!41421) (not b!135609) (not b!134204) (not d!42335) (not d!42309) (not d!42431) (not b!134552) (not d!42313) (not d!41439) (not d!41111) (not d!41731) (not d!41791) (not d!41727) (not bm!14791) (not bm!14849) (not d!41671) (not b!135155) (not d!42595) (not b!134134) (not b!134206) (not d!42051) (not b!134660) (not b!134457) (not b!134800) (not b!135805) (not b!135001) (not b!134220) (not b!135022) (not d!42187) (not b!135212) (not b_lambda!5939) (not b!135451) (not b!134905) (not d!41845) (not b!134300) (not d!41551) (not b!135592) (not b!135881) (not d!41567) (not b!134837) (not b!135384) (not b!135522) (not d!42651) (not b!134881) (not b!134539) tp_is_empty!2875 (not bm!14894) (not b!135405) (not b!134287) (not b!134872) (not b_lambda!5979) (not b!134149) (not d!41629) (not b!135316) (not b!134346) (not b!134317) (not b!135458) (not b!134121) (not b!134358) (not d!41529) (not b!135669) (not b!135295) (not b!135776) (not b!135460) (not d!42613) (not d!41213) (not b!135239) (not b!134707) (not b!134266) (not d!41285) (not b!135955) (not b_lambda!6087) (not bm!14874) (not b!135098) (not d!42427) (not b!135745) (not b!134438) (not b!135261) (not d!41219) (not b!134294) (not d!41293) (not d!42253) (not b!134589) (not b!135362) (not b!134841) (not b!134623) (not d!42655) (not b!135348) (not b!134973) (not b!135320) (not b!135241) (not d!41741) (not b!135879) (not d!42039) (not b!134984) (not b!135076) (not b!135134) (not b!134607) (not b!134821) (not d!42289) (not d!42577) (not d!41615) (not b_lambda!5981) (not d!42597) (not d!41447) (not b!134719) (not d!41165) (not d!41369) (not d!41583) (not b_lambda!5987) (not d!41851) (not b_lambda!6075) (not b!134903) (not b!134175) (not b!134487) (not d!42357) (not b!134307) (not b!135668) (not bm!14837) (not b_lambda!6069) (not b!134351) (not b!135024) (not b!135412) (not b!135929) (not b!135097) (not b!135119) (not bm!14851) (not bm!14799) (not b!134979) (not b!134199) (not d!42473) (not b!135154) (not d!41547) (not b_lambda!6055) (not b!135415) (not b!135541) (not b!134321) (not b!134348) (not bm!14880) (not d!42095) (not b!134546) (not d!42271) (not b!135624) (not d!41559) (not b!134597) (not d!41893) (not b!134795) (not b!135838) (not b!134598) (not b!135935) (not d!42637) (not d!42453) (not b!135908) (not b!135661) (not b!134796) (not b!135698) (not b!134315) (not d!41497) (not b!134998) (not d!41393) (not b!134379) (not bm!14840) (not d!41995) (not b!135556) (not d!42579) (not b!134408) (not b!134263) (not b!134425) (not b!134246) (not b!135033) (not b!135062) (not d!41255) (not b!134977) (not b!135568) (not d!41613) (not b!134244) (not d!41399) (not d!41743) (not d!41375) (not b!134560) (not d!41861) (not d!41151) (not b!135658) (not b!135625) (not b!134537) (not d!41343) (not d!42653) (not b!134583) (not d!41335) (not bm!14823) (not d!42021) (not b!135356) (not b!134975) (not b!134281) (not b!135966) (not d!41721) (not b!135763) (not b!135259) (not b!135477) (not b!135065) (not b!134792) (not d!41593) (not b!134095) (not d!42485) (not b!134151) (not d!41863) (not b!134963) (not d!41387) (not d!42019) (not b!134801) (not b!135842) (not d!42627) (not d!42449) (not d!41519) (not b!134272) (not d!41843) (not b!134339) (not b!135630) (not d!42155) (not b!134670) (not b!135464) (not d!41133) (not d!42387) (not bm!14850) (not b!134235) (not bm!14798) (not b!135360) (not b!135732) (not b!134480) (not b!134635) (not b!134603) (not b!135147) (not b!135307) (not d!42587) (not d!42605) (not d!42491) (not b!135257) (not b!135276) (not b!135584) (not b!135341) (not b!134194) (not b!135094) (not b!134359) (not d!42479) (not d!41565) (not d!41371) (not d!42185) (not b!134305) (not b!135378) (not b!135479) (not d!41265) (not b!135462) (not b!134152) (not b!135725) (not d!41121) (not b!134942) (not b!134488) (not b!134716) (not d!42033) (not b!135870) (not d!42533) (not b!134712) (not b!135582) (not b!134333) (not d!41901) (not b!135144) (not b!134969) (not bm!14891) (not b!134696) (not d!42429) (not b!135602) (not d!41983) (not d!41801) (not b!134502) (not b!134616) (not d!42439) (not b!134675) (not b!135593) (not b_lambda!6023) (not b!134530) (not d!42437) (not b!134309) (not d!42401) (not b!134233) (not bm!14843) (not b!134644) (not b!134611) (not bm!14816) (not d!42659) (not b!134717) (not b!134995) (not b!134372) (not b!135255) (not d!41889) (not d!42317) (not d!42341) (not d!41359) (not b!134542) (not b!134875) (not b!134693) (not b!135617) (not b!135224) (not d!42035) (not b!135467) (not b!134529) (not b!135959) (not b!135314) (not d!42665) (not b!134803) (not b!134290) (not b!135105) (not b!134906) (not d!42599) (not d!41473) (not d!41237) (not b!135864) (not bm!14864) (not b!135778) (not b!134380) (not d!41373) (not b!134756) (not b!135146) (not b!135215) (not bm!14792) (not b!134224) (not b!134356) (not b!135865) (not b!135761) (not d!42293) (not d!41453) (not b!134819) (not b!135315) (not b!134699) (not b!135565) (not b!135605) (not b!134587) (not d!41449) (not b!135183) (not b!135250) (not d!42323) (not b!134600) (not b!134811) (not b_lambda!5989) (not b!134723) (not b!135011) (not b!134992) (not d!41775) (not b!135804) (not d!42031) (not b!134302) (not bm!14865) (not b!134522) (not b!134835) (not d!42539) (not b!134445) (not b!135019) (not d!41341) (not b!135265) (not d!42203) (not b!134392) (not d!42053) (not b!135968) (not b!135564) (not b!135414) (not d!41139) (not d!42183) (not b!134686) (not d!42063) (not b_lambda!6089) (not b!135664) (not b!135397) (not d!41871) (not d!41635) (not b!135705) (not b!134221) (not d!42443) (not b!135227) (not d!41115) (not d!41877) (not b!134114) (not b!134374) (not b!135712) (not b!134253) (not d!42531) (not b!134748) (not d!41411) (not b!134688) (not b!134957) (not b!135168) (not b!135203) (not b!135496) (not d!41105) (not b!134884) (not b!135049) (not b_lambda!5975) (not b!135501) (not b!135920) (not b!135535) (not b_lambda!5941) (not b!134577) (not b!135043) (not b!134895) (not d!42197) (not d!41507) (not d!41365) (not b!134978) (not d!41619) (not d!41481) (not b!134794) (not b!134527) (not d!41367) (not b!134310) (not bm!14856) (not d!41451) (not b_lambda!6077) (not b!135198) (not b!134352) (not b!134649) (not d!42671) (not d!41675) (not d!41407) (not b!134697) (not b!134946) (not b!134854) (not b!135273) (not d!41715) (not b!135591) (not d!42385) (not b!134234) (not b!134733) (not b!134684) (not d!41141) (not d!41949) (not d!42303) (not d!41649) (not b!134764) (not b!135089) (not d!41495) (not d!41353) (not b!135083) (not d!42345) (not d!41611) (not d!41149) (not b!134463) (not b!135112) (not b!135954) (not d!41397) (not d!41459) (not d!41737) (not d!41489) (not b!134215) (not d!42355) (not b!135814) (not b!134477) (not d!41179) (not b!134249) (not b!135074) (not d!42593) (not b!134804) (not b!134413) (not d!41973) (not b!134269) (not b!134181) (not b!135424) (not b!134248) (not b!134870) (not b!135267) (not b!134648) (not b!134482) (not bm!14877) (not d!41963) (not b!134788) (not b!134798) (not b_lambda!6065) (not b!135358) (not b!134226) (not b!134225) (not b!134916) (not b!135406) (not b!135432) (not b!134783) (not d!41631) (not d!42625) (not b!135626) (not b!135064) (not b!134544) (not d!42045) (not d!41253) (not b!135826) (not d!41987) (not d!41275) (not b!134274) (not b!135511) (not b!135877) (not b!135943) (not b!134944) (not b!134286) (not b!134256) (not b!135724) (not b!135672) (not b!134900) (not b!135028) (not d!42251) (not d!41839) (not b!134702) (not b!135302) (not d!41935) (not d!42619) (not b_lambda!5999) (not b!134981) (not b!134479) (not d!41295) (not b!135127) (not b!135455) (not b!135482) (not d!41639) (not d!41325) (not d!41135) (not b!134349) (not d!41401) (not b!135492) (not d!41209) (not b!135044) (not d!41865) (not b!134168) (not d!41707) (not b!134280) (not b!134955) (not d!42331) (not b!135957) (not mapNonEmpty!4659) (not b!134489) (not b!135461) (not d!42311) (not b!134323) (not b!135312) (not b!135214) (not b!134476) (not d!41205) (not b!134111) (not d!41217) (not b_lambda!6021) (not b!135548) (not b!135419) b_and!8407 (not b!135882) (not b!134772) (not b!135399) (not b!135394) (not b!135693) (not b!135762) (not d!41199) (not d!41953) (not b_lambda!6071) (not b_lambda!6083) (not b!134218) (not b!134721) (not b!135351) (not b!135729) (not d!42299) (not b!134627) (not b!134685) (not b!135046) (not b!134514) (not b!134512) (not d!41955) (not b!135389) (not b!134568) (not b!134659) (not b!135671) (not d!42377) (not b!135474) (not d!42537) (not bm!14796) (not b!134828) (not d!42361) (not b!134676) (not b!134621) (not b!134605) (not b!135340) b_and!8405 (not b!135282) (not d!42505) (not d!42557) (not b!135357) (not d!41241) (not b!134184) (not b!135677) (not b!135685) (not b!135681) (not b!134852) (not b!134540) (not b!134283) (not b!135014) (not b!134166) (not d!42041) (not b!135113) (not b!134125) (not d!41809) (not b!135886) (not d!41813) (not d!42219) (not b!134113) (not d!41657) (not b!135771) (not b!134766) (not b!134188) (not d!41347) (not b!135543) (not b!135676) (not d!41391) (not b!134555) (not b!134526) (not d!41155) (not b!135545) (not b!134377) (not b!135192) (not d!42379) (not d!41457) (not b!135440) (not b!134110) (not d!42527) (not b_lambda!6081) (not d!41461) (not b_next!2917) (not b!135136) (not b!135427) (not b!134713) (not b!135790) (not d!41827) (not b!135748) (not b_lambda!5993) (not d!41591) (not b!134682) (not d!41113) (not b!134146) (not b!135306) (not b!134565) (not b!134833) (not d!41245) (not b!135534) (not b!135488) (not d!41997) (not d!41331) (not b!134534) (not b!135847) (not d!41751) (not d!41419) (not b!134427) (not b!134231) (not d!41815) (not b!134236) (not b!135485) (not b!134355) (not b!135345) (not b_lambda!5985) (not b!134655) (not d!42239) (not b!134919) (not b!134240) (not d!41719) (not d!42139) (not b!135439) (not bm!14804) (not b!134911) (not d!41145) (not d!41351) (not d!41223) (not d!41455) (not b!135279) (not d!42417) (not b!134938) (not b!135233) (not b!135332) (not b!134609) (not d!42295) (not b!134291) (not b!134997) (not b!134991) (not b!134243) (not b!135459) (not d!41471) (not b!135937) (not b!134516) (not b!134193) (not d!41159) (not bm!14855) (not b!135852) (not b!134941) (not d!42669) (not b!135435) (not d!42395) (not b!135447) (not d!41557) (not b!135434) (not b!134809) (not b!134994) (not b!134267) (not b!134460) (not d!41161) (not d!42333) (not b!134364) (not d!42193) (not b!134579) (not d!42611) (not b!135696) (not b!134434) (not b!135939) (not b!134646) (not b!135298) (not b!135546) (not d!41991) (not d!42171) (not b!135863) (not d!41201) (not d!41409) (not d!42093) (not b!135140) (not b!135480) (not bm!14794) (not b!135206) (not b!135180) (not b!134742) (not b!134739) (not b!134928) (not b!135040) (not d!41521) (not b!135104) (not b!135722) (not b!135616) (not d!41403) (not b!134701) (not b!135701) (not d!41577) (not b!135708) (not d!42667) (not b!135202) (not bm!14871) (not b!135932) (not d!42581) (not b!135374) (not b!134450) (not b!135766) (not d!42321) (not d!41655) (not d!42639) (not d!41587) (not b!134370) (not b!134241) (not d!41175) (not d!41677) (not d!42413) (not d!41329) (not b!135165) (not b!135910) (not b!135919) (not d!42325) (not b!134433) (not d!42457) (not d!41203) (not b!134732) (not d!41777) (not bm!14820) (not d!42069) (not b!134518) (not d!42145) (not b!135471) (not bm!14810) (not d!42247) (not b!134336) (not b!134745) (not b!135906) (not b!135285) (not b!135100) (not b!134311) (not b!135031) (not b!134547) (not b!135200) (not d!42513) (not d!41215) (not b!135217) (not b!134573) (not d!41261) (not b!135149) (not b!135876) (not d!42477) (not b!134423) (not b!135648) (not b!135363) (not b!134395) (not d!41333) (not b!135532) (not b!134936) (not d!42291) (not b!134761) (not d!41539) (not d!41277) (not b!135121) (not b!135571) (not d!42399) (not d!41989) (not d!42199) (not bm!14897) (not b!135539) (not d!41905) (not b!134926) (not b!134830) (not d!41793) (not d!41885) (not d!41663) (not b!134580) (not b!135821) (not b!135817) (not bm!14782) (not b!134880) (not b!135866) (not b!134657) (not b!134789) (not b!135152) (not b!135710) (not d!41273) (not b!134367) (not d!42459) (not d!41433) (not d!41355) (not b!135391) (not b!135891) (not d!41773) (not b!134466) (not d!42559) (not d!41679) (not b!135682) (not d!41723) (not b!134138) (not d!41291) (not d!41711) (not d!42517) (not b_lambda!5995) (not b!135951) (not b_lambda!6001) (not d!41609) (not b!134285) (not b!135859) (not b!134528) (not b!134402) (not b!135337) (not b!134210) (not b!135246) (not b!135759) (not d!41739) (not d!41443) (not d!41729) (not d!41429) (not d!41437) (not b!134424) (not b!135650) (not d!41377) (not d!42217) (not b_lambda!6053) (not d!41211) (not b!135249) (not b!134264) (not d!41779) (not d!41853) (not bm!14785) (not b!134867) (not b!135964) (not b!135272) (not bm!14838) (not b!134778) (not b!134898) (not b!135874) (not b!135263) (not b_lambda!6085) (not b!135938) (not d!41605) (not b!135827) (not b!134465) (not mapNonEmpty!4660) (not b!134958) (not b!134888) (not bm!14909) (not d!42163) (not b!134186) (not b!135773) (not b!135789) (not b!135421) (not d!41747) (not b!134127) (not b!135370) (not b!134966) (not b!135430) (not d!42553) (not b!135218) (not d!42363) (not b!135913) (not d!41603) (not d!42419) (not bm!14836) (not b!134388) (not d!41301) (not d!41581) (not b_lambda!6057) (not d!41171) (not b!134680) (not d!41349) (not b!134099) (not b_lambda!6061) (not b!134360) (not b!134342) (not b!135739) (not b!135483) (not b!135325) (not b!135747) (not d!42351) (not b!134178) (not b!135862) (not d!41207) (not b!135286) (not b!135108) (not b!134790) (not b!135081) (not d!41153) (not d!41891) (not b!135578) (not b!135328) (not b!134549) (not b!134325) (not b!134405) (not b!135837) (not b!134690) (not bm!14807) (not d!41503) (not d!41537) (not b!134157) (not b!134619) (not d!42483) (not d!41479) (not d!41641) (not b!134951) (not b!134279) (not b!134736) (not b!134757) (not b_lambda!5943) (not b!134509) (not b_next!2919) (not d!42591) (not d!41545) (not d!42451) (not b!135824) (not b_lambda!6011) (not b!135536) (not b!135404) (not d!42047) (not b!134714) (not d!41383) (not b!134785) (not b!135769) (not d!42113) (not b!135350) (not b!135753) (not b!135078) (not d!42073) (not b!135703) (not d!42017) (not b!134779) (not d!41621) (not d!41381) (not b!135861) (not b!134953) (not b!135107) (not d!41483) (not b!134777) (not b_lambda!5919) (not d!42277) (not d!41769) (not b!134449) (not b!135270) (not b!134411) (not d!42511) (not d!41897) (not b!135026) (not bm!14821) (not b!134729) (not d!41725) (not d!41965) (not d!42645) (not b!134132) (not b!134261) (not b!134782) (not b!135795) (not d!42535) (not b!134211) (not b!135515) (not b!134276) (not d!42629) (not b!134667) (not b!134960) (not d!41607) (not d!42481) (not b!135053) (not b!134510) (not b!135832) (not b!135779) (not b!134768) (not d!41627) (not b!134109) (not b!135236) (not b!135716) (not d!41703) (not d!41307) (not b!135640) (not b!135644) (not b!135509) (not d!42543) (not bm!14839) (not b!134506) (not d!42117) (not b!134454) (not b!135130) (not d!42647) (not b!134278) (not bm!14846) (not d!42585) (not d!41651) (not b!134344) (not d!42149) (not d!41821) (not d!41585) (not d!42545) (not b!134163) (not b_lambda!6049) (not b!134767) (not bm!14863) (not d!41515) (not d!42273) (not d!41119) (not d!42255) (not b!135970) (not bm!14833) (not b!135867) (not b!134754) (not d!41361) (not b_lambda!5997) (not b!134430) (not b!135051) (not b!134907) (not b!134171) (not b!134781) (not b!135137) (not d!42015) (not d!41259) (not b!134284) (not d!42661) (not b!134642) (not b!135457) (not b!135740) (not b!134208) (not d!41913) (not b!135809) (not d!41717) (not b!135057) (not b!135504) (not d!42327) (not b!135116) (not d!41297) (not bm!14789) (not d!41385) (not b!134524) (not d!41735) (not b!135666) (not bm!14888) (not d!42435) (not b!135619) (not b!135309) (not b!135960) (not b!135187) (not b!135468) (not d!42109) (not d!41855) (not b!134923) (not d!42173) (not b!135711) (not b!135274) (not b!135675) (not b!134212) (not b!134217) (not b!134836) (not d!42165) (not b!135796) (not b!134665) (not b!134446) (not d!41601) (not d!41923) (not b!134652) (not b_lambda!6073) (not b!134228) (not b!135589) (not b_lambda!5937) (not b!134097) (not d!41745) (not d!41697) (not d!42301) (not b!135454) (not d!42569) (not d!42083) (not b!135347) (not b_lambda!6079) (not d!42433) (not d!41543) (not b!134730) (not b!135491) (not bm!14830) (not b!135507) (not d!42151) (not b!134523) (not b!135736) (not b!134677) (not d!42189) (not d!41709) (not b!134807) (not b!134238) (not d!42339) (not bm!14900) (not d!41123) (not b_lambda!5935) (not b!134879) (not d!42279) (not b!134556) (not b!134681) (not d!41225) (not b!135470) (not b!135849) (not b!135780) (not d!42487) (not d!41993) (not b!134467) (not b!134726) (not b!135095) (not b!135476) (not b!135758) (not b!135635) (not b!135689) (not b!134357) (not d!41859) (not b!134101))
(check-sat b_and!8405 b_and!8407 (not b_next!2917) (not b_next!2919))
